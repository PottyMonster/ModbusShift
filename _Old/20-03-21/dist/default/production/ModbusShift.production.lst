

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 20 16:12:18 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126  0000                     
   127                           ; Version 2.10
   128                           ; Generated 31/07/2019 GMT
   129                           ; 
   130                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K40 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162                           	psect	idataBANK0
   163  003DF6                     __pidataBANK0:
   164                           	opt callstack 0
   165                           
   166                           ;initializer for _ByteLo
   167  003DF6  00FF               	dw	255
   168                           
   169                           	psect	idataBANK1
   170  0030A0                     __pidataBANK1:
   171                           	opt callstack 0
   172                           
   173                           ;initializer for _MB301xx
   174  0030A0  4150               	dw	16720
   175  0030A2  3030               	dw	12336
   176  0030A4  3036               	dw	12342
   177  0030A6  3033               	dw	12339
   178  0030A8  3033               	dw	12339
   179  0030AA  2D30               	dw	11568
   180  0030AC  3200               	dw	12800
   181                           
   182                           ;initializer for _MB304xx
   183  0030AE  4155               	dw	16725
   184  0030B0  4720               	dw	18208
   185  0030B2  3039               	dw	12345
   186  0030B4  3230               	dw	12848
   187  0030B6  3231               	dw	12849
   188                           
   189                           ;initializer for _MB303xx
   190  0030B8  3132               	dw	12594
   191  0030BA  3334               	dw	13108
   192  0030BC  3536               	dw	13622
   193  0030BE  3738               	dw	14136
   194  0030C0  3930               	dw	14640
   195                           
   196                           ;initializer for stoa@F1139
   197  0030C2  28                 	db	40
   198  0030C3  6E                 	db	110
   199  0030C4  75                 	db	117
   200  0030C5  6C                 	db	108
   201  0030C6  6C                 	db	108
   202  0030C7  29                 	db	41
   203  0030C8  00                 	db	0
   204                           
   205                           ;initializer for _MB307xx
   206  0030C9  045A               	dw	1114
   207  0030CB  00F1               	dw	241
   208  0030CD  01C4               	dw	452
   209                           
   210                           ;initializer for _MB305xx
   211  0030CF  3137               	dw	12599
   212  0030D1  3335               	dw	13109
   213  0030D3  3439               	dw	13369
   214                           
   215                           ;initializer for _MB306xx
   216  0030D5  004D               	dw	77
   217  0030D7  3030               	dw	12336
   218                           
   219                           ;initializer for ReadRX232@F10714
   220  0030D9  5A                 	db	90
   221  0030DA  00                 	db	0
   222                           
   223                           ;initializer for _MBResCRC
   224  0030DB  FFFF               	dw	65535
   225                           
   226                           ;initializer for _ExpectedBytes
   227  0030DD  0008               	dw	8
   228                           
   229                           ;initializer for _MB302xx
   230  0030DF  0004               	dw	4
   231                           
   232                           ;initializer for _MBRespon
   233  0030E1  FFFF               	dw	65535
   234  0030E3  00                 	db	0
   235  0030E4  00                 	db	0
   236  0030E5  00                 	db	0
   237  0030E6  00                 	db	0
   238  0030E7  00                 	db	0
   239  0030E8  00                 	db	0
   240  0030E9  00                 	db	0
   241  0030EA  00                 	db	0
   242  0030EB  00                 	db	0
   243  0030EC  00                 	db	0
   244  0030ED  00                 	db	0
   245  0030EE  00                 	db	0
   246  0030EF  00                 	db	0
   247  0030F0  00                 	db	0
   248  0030F1  00                 	db	0
   249  0030F2  00                 	db	0
   250  0030F3  00                 	db	0
   251  0030F4  00                 	db	0
   252  0030F5  00                 	db	0
   253  0030F6  00                 	db	0
   254  0030F7  00                 	db	0
   255  0030F8  00                 	db	0
   256  0030F9  00                 	db	0
   257  0030FA  00                 	db	0
   258  0030FB  00                 	db	0
   259  0030FC  00                 	db	0
   260  0030FD  00                 	db	0
   261  0030FE  00                 	db	0
   262  0030FF  00                 	db	0
   263  003100  00                 	db	0
   264  003101  00                 	db	0
   265  003102  00                 	db	0
   266  003103  00                 	db	0
   267  003104  00                 	db	0
   268  003105  00                 	db	0
   269  003106  00                 	db	0
   270  003107  00                 	db	0
   271  003108  00                 	db	0
   272  003109  00                 	db	0
   273  00310A  00                 	db	0
   274  00310B  00                 	db	0
   275  00310C  00                 	db	0
   276  00310D  00                 	db	0
   277  00310E  00                 	db	0
   278  00310F  00                 	db	0
   279  003110  00                 	db	0
   280  003111  00                 	db	0
   281  003112  00                 	db	0
   282  003113  00                 	db	0
   283  003114  00                 	db	0
   284  003115  00                 	db	0
   285  003116  00                 	db	0
   286  003117  00                 	db	0
   287  003118  00                 	db	0
   288  003119  00                 	db	0
   289  00311A  00                 	db	0
   290  00311B  00                 	db	0
   291  00311C  00                 	db	0
   292  00311D  00                 	db	0
   293  00311E  00                 	db	0
   294  00311F  00                 	db	0
   295  003120  00                 	db	0
   296                           
   297                           	psect	idataBANK2
   298  003A4A                     __pidataBANK2:
   299                           	opt callstack 0
   300                           
   301                           ;initializer for ValidateCmd@F10738
   302  003A4A  52                 	db	82
   303  003A4B  65                 	db	101
   304  003A4C  76                 	db	118
   305  003A4D  69                 	db	105
   306  003A4E  73                 	db	115
   307  003A4F  69                 	db	105
   308  003A50  6F                 	db	111
   309  003A51  6E                 	db	110
   310  003A52  00                 	db	0
   311  003A53  00                 	db	0
   312  003A54  00                 	db	0
   313  003A55  00                 	db	0
   314  003A56  00                 	db	0
   315  003A57  00                 	db	0
   316  003A58  00                 	db	0
   317  003A59  00                 	db	0
   318  003A5A  00                 	db	0
   319  003A5B  00                 	db	0
   320  003A5C  00                 	db	0
   321  003A5D  00                 	db	0
   322                           
   323                           ;initializer for ValidateCmd@F10735
   324  003A5E  50                 	db	80
   325  003A5F  61                 	db	97
   326  003A60  72                 	db	114
   327  003A61  74                 	db	116
   328  003A62  20                 	db	32
   329  003A63  4E                 	db	78
   330  003A64  75                 	db	117
   331  003A65  6D                 	db	109
   332  003A66  62                 	db	98
   333  003A67  65                 	db	101
   334  003A68  72                 	db	114
   335  003A69  00                 	db	0
   336  003A6A  00                 	db	0
   337  003A6B  00                 	db	0
   338  003A6C  00                 	db	0
   339  003A6D  00                 	db	0
   340  003A6E  00                 	db	0
   341  003A6F  00                 	db	0
   342  003A70  00                 	db	0
   343  003A71  00                 	db	0
   344                           
   345                           ;initializer for ValidateCmd@F10732
   346  003A72  53                 	db	83
   347  003A73  65                 	db	101
   348  003A74  72                 	db	114
   349  003A75  69                 	db	105
   350  003A76  61                 	db	97
   351  003A77  6C                 	db	108
   352  003A78  20                 	db	32
   353  003A79  4E                 	db	78
   354  003A7A  75                 	db	117
   355  003A7B  6D                 	db	109
   356  003A7C  62                 	db	98
   357  003A7D  65                 	db	101
   358  003A7E  72                 	db	114
   359  003A7F  00                 	db	0
   360  003A80  00                 	db	0
   361  003A81  00                 	db	0
   362  003A82  00                 	db	0
   363  003A83  00                 	db	0
   364  003A84  00                 	db	0
   365  003A85  00                 	db	0
   366                           
   367                           	psect	idataBANK3
   368  003121                     __pidataBANK3:
   369                           	opt callstack 0
   370                           
   371                           ;initializer for _MB400xx
   372  003121  0020               	dw	32
   373  003123  001F               	dw	31
   374  003125  001E               	dw	30
   375  003127  001D               	dw	29
   376  003129  001C               	dw	28
   377  00312B  001B               	dw	27
   378  00312D  001A               	dw	26
   379  00312F  0019               	dw	25
   380  003131  0018               	dw	24
   381  003133  0017               	dw	23
   382  003135  0016               	dw	22
   383  003137  0015               	dw	21
   384  003139  0014               	dw	20
   385  00313B  0013               	dw	19
   386  00313D  0012               	dw	18
   387  00313F  0011               	dw	17
   388  003141  0010               	dw	16
   389  003143  000F               	dw	15
   390  003145  000E               	dw	14
   391  003147  000D               	dw	13
   392  003149  000C               	dw	12
   393  00314B  000B               	dw	11
   394  00314D  000A               	dw	10
   395  00314F  0009               	dw	9
   396  003151  0008               	dw	8
   397  003153  0007               	dw	7
   398  003155  0006               	dw	6
   399  003157  0005               	dw	5
   400  003159  0004               	dw	4
   401  00315B  0003               	dw	3
   402  00315D  0002               	dw	2
   403  00315F  0001               	dw	1
   404                           
   405                           ;initializer for _MB300xx
   406  003161  0001               	dw	1
   407  003163  0002               	dw	2
   408  003165  0003               	dw	3
   409  003167  0004               	dw	4
   410  003169  0005               	dw	5
   411  00316B  0006               	dw	6
   412  00316D  0007               	dw	7
   413  00316F  0008               	dw	8
   414  003171  0009               	dw	9
   415  003173  000A               	dw	10
   416  003175  000B               	dw	11
   417  003177  000C               	dw	12
   418  003179  000D               	dw	13
   419  00317B  000E               	dw	14
   420  00317D  000F               	dw	15
   421  00317F  0010               	dw	16
   422  003181  0011               	dw	17
   423  003183  0012               	dw	18
   424  003185  0013               	dw	19
   425  003187  0014               	dw	20
   426  003189  0015               	dw	21
   427  00318B  0016               	dw	22
   428  00318D  0017               	dw	23
   429  00318F  0018               	dw	24
   430  003191  0019               	dw	25
   431  003193  001A               	dw	26
   432  003195  001B               	dw	27
   433  003197  001C               	dw	28
   434  003199  001D               	dw	29
   435  00319B  001E               	dw	30
   436  00319D  001F               	dw	31
   437  00319F  0020               	dw	32
   438                           
   439                           	psect	nvBANK0
   440  0000BB                     __pnvBANK0:
   441                           	opt callstack 0
   442  0000BB                     _eusart1TxBufferRemaining:
   443                           	opt callstack 0
   444  0000BB                     	ds	1
   445  0000BC                     _eusart2TxBufferRemaining:
   446                           	opt callstack 0
   447  0000BC                     	ds	1
   448                           
   449                           	psect	nvBANK1
   450  0001E4                     __pnvBANK1:
   451                           	opt callstack 0
   452  0001E4                     _EUSART1_ErrorHandler:
   453                           	opt callstack 0
   454  0001E4                     	ds	2
   455  0001E6                     _EUSART1_OverrunErrorHandler:
   456                           	opt callstack 0
   457  0001E6                     	ds	2
   458  0001E8                     _EUSART1_FramingErrorHandler:
   459                           	opt callstack 0
   460  0001E8                     	ds	2
   461  0001EA                     _EUSART2_ErrorHandler:
   462                           	opt callstack 0
   463  0001EA                     	ds	2
   464  0001EC                     _EUSART2_OverrunErrorHandler:
   465                           	opt callstack 0
   466  0001EC                     	ds	2
   467  0001EE                     _EUSART2_FramingErrorHandler:
   468                           	opt callstack 0
   469  0001EE                     	ds	2
   470  0001F0                     _EUSART1_RxDefaultInterruptHandler:
   471                           	opt callstack 0
   472  0001F0                     	ds	2
   473  0001F2                     _EUSART1_TxDefaultInterruptHandler:
   474                           	opt callstack 0
   475  0001F2                     	ds	2
   476  0001F4                     _EUSART2_RxDefaultInterruptHandler:
   477                           	opt callstack 0
   478  0001F4                     	ds	2
   479  0001F6                     _EUSART2_TxDefaultInterruptHandler:
   480                           	opt callstack 0
   481  0001F6                     	ds	2
   482  0000                     _RC2REG	set	3737
   483  0000                     _RC2STAbits	set	3741
   484  0000                     _TX2REG	set	3738
   485  0000                     _TX2STAbits	set	3742
   486  0000                     _SP2BRGH	set	3740
   487  0000                     _SP2BRGL	set	3739
   488  0000                     _TX2STA	set	3742
   489  0000                     _RC2STA	set	3741
   490  0000                     _BAUD2CON	set	3743
   491  0000                     _PIR7bits	set	3793
   492  0000                     _PIR3bits	set	3789
   493  0000                     _PIE3bits	set	3781
   494  0000                     _PMD5	set	3814
   495  0000                     _PMD4	set	3813
   496  0000                     _PMD3	set	3812
   497  0000                     _PMD2	set	3811
   498  0000                     _PMD1	set	3810
   499  0000                     _PMD0	set	3809
   500  0000                     _OSCTUNE	set	3805
   501  0000                     _OSCFRQ	set	3806
   502  0000                     _OSCEN	set	3804
   503  0000                     _OSCCON3	set	3802
   504  0000                     _OSCCON1	set	3800
   505  0000                     _RX2PPS	set	3725
   506  0000                     _RC6PPS	set	3837
   507  0000                     _RB6PPS	set	3829
   508  0000                     _RX1PPS	set	3765
   509  0000                     _INLVLE	set	3882
   510  0000                     _INLVLD	set	3874
   511  0000                     _INLVLC	set	3869
   512  0000                     _INLVLB	set	3861
   513  0000                     _INLVLA	set	3853
   514  0000                     _SLRCONE	set	3883
   515  0000                     _SLRCOND	set	3875
   516  0000                     _SLRCONC	set	3870
   517  0000                     _SLRCONB	set	3862
   518  0000                     _SLRCONA	set	3854
   519  0000                     _ODCOND	set	3876
   520  0000                     _ODCONC	set	3871
   521  0000                     _ODCONB	set	3863
   522  0000                     _ODCONA	set	3855
   523  0000                     _ODCONE	set	3884
   524  0000                     _WPUC	set	3872
   525  0000                     _WPUA	set	3856
   526  0000                     _WPUB	set	3864
   527  0000                     _WPUE	set	3885
   528  0000                     _WPUD	set	3877
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELE	set	3886
   531  0000                     _ANSELB	set	3865
   532  0000                     _ANSELC	set	3873
   533  0000                     _ANSELD	set	3878
   534  0000                     _LATDbits	set	3974
   535  0000                     _LATAbits	set	3971
   536  0000                     _RC1REG	set	3993
   537  0000                     _RC1STAbits	set	3997
   538  0000                     _TX1REG	set	3994
   539  0000                     _TX1STAbits	set	3998
   540  0000                     _SP1BRGH	set	3996
   541  0000                     _SP1BRGL	set	3995
   542  0000                     _TX1STA	set	3998
   543  0000                     _RC1STA	set	3997
   544  0000                     _BAUD1CON	set	3999
   545  0000                     _NVMDAT	set	3968
   546  0000                     _NVMADRL	set	3966
   547  0000                     _NVMADRH	set	3967
   548  0000                     _NVMCON2	set	3970
   549  0000                     _TABLAT	set	4085
   550  0000                     _TBLPTRL	set	4086
   551  0000                     _TBLPTRH	set	4087
   552  0000                     _TBLPTRU	set	4088
   553  0000                     _NVMCON1bits	set	3969
   554  0000                     _INTCONbits	set	4082
   555  0000                     _TRISD	set	3979
   556  0000                     _TRISC	set	3978
   557  0000                     _TRISB	set	3977
   558  0000                     _TRISA	set	3976
   559  0000                     _TRISE	set	3980
   560  0000                     _LATC	set	3973
   561  0000                     _LATB	set	3972
   562  0000                     _LATA	set	3971
   563  0000                     _LATD	set	3974
   564  0000                     _LATE	set	3975
   565                           
   566                           	psect	mediumconst
   567  00FAD6                     __pmediumconst:
   568                           	opt callstack 0
   569  00FAD6  00                 	db	0
   570  00FAD7                     STR_45:
   571                           
   572                           ; BSR set to: 0
   573  00FAD7  4E                 	db	78	;'N'
   574  00FAD8  61                 	db	97	;'a'
   575  00FAD9  6D                 	db	109	;'m'
   576  00FADA  65                 	db	101	;'e'
   577  00FADB  3A                 	db	58	;':'
   578  00FADC  20                 	db	32
   579  00FADD  25                 	db	37
   580  00FADE  73                 	db	115	;'s'
   581  00FADF  20                 	db	32
   582  00FAE0  20                 	db	32
   583  00FAE1  4D                 	db	77	;'M'
   584  00FAE2  42                 	db	66	;'B'
   585  00FAE3  41                 	db	65	;'A'
   586  00FAE4  64                 	db	100	;'d'
   587  00FAE5  64                 	db	100	;'d'
   588  00FAE6  72                 	db	114	;'r'
   589  00FAE7  65                 	db	101	;'e'
   590  00FAE8  73                 	db	115	;'s'
   591  00FAE9  73                 	db	115	;'s'
   592  00FAEA  3A                 	db	58	;':'
   593  00FAEB  20                 	db	32
   594  00FAEC  30                 	db	48	;'0'
   595  00FAED  78                 	db	120	;'x'
   596  00FAEE  25                 	db	37
   597  00FAEF  30                 	db	48	;'0'
   598  00FAF0  34                 	db	52	;'4'
   599  00FAF1  78                 	db	120	;'x'
   600  00FAF2  20                 	db	32
   601  00FAF3  20                 	db	32
   602  00FAF4  20                 	db	32
   603  00FAF5  64                 	db	100	;'d'
   604  00FAF6  61                 	db	97	;'a'
   605  00FAF7  74                 	db	116	;'t'
   606  00FAF8  61                 	db	97	;'a'
   607  00FAF9  65                 	db	101	;'e'
   608  00FAFA  65                 	db	101	;'e'
   609  00FAFB  41                 	db	65	;'A'
   610  00FAFC  64                 	db	100	;'d'
   611  00FAFD  64                 	db	100	;'d'
   612  00FAFE  72                 	db	114	;'r'
   613  00FAFF  3A                 	db	58	;':'
   614  00FB00  20                 	db	32
   615  00FB01  30                 	db	48	;'0'
   616  00FB02  78                 	db	120	;'x'
   617  00FB03  25                 	db	37
   618  00FB04  30                 	db	48	;'0'
   619  00FB05  34                 	db	52	;'4'
   620  00FB06  78                 	db	120	;'x'
   621  00FB07  20                 	db	32
   622  00FB08  20                 	db	32
   623  00FB09  20                 	db	32
   624  00FB0A  4E                 	db	78	;'N'
   625  00FB0B  75                 	db	117	;'u'
   626  00FB0C  6D                 	db	109	;'m'
   627  00FB0D  42                 	db	66	;'B'
   628  00FB0E  79                 	db	121	;'y'
   629  00FB0F  74                 	db	116	;'t'
   630  00FB10  65                 	db	101	;'e'
   631  00FB11  73                 	db	115	;'s'
   632  00FB12  3A                 	db	58	;':'
   633  00FB13  20                 	db	32
   634  00FB14  25                 	db	37
   635  00FB15  69                 	db	105	;'i'
   636  00FB16  20                 	db	32
   637  00FB17  0D                 	db	13
   638  00FB18  0A                 	db	10
   639  00FB19  00                 	db	0
   640  00FB1A                     STR_29:
   641                           
   642                           ; BSR set to: 0
   643  00FB1A  0D                 	db	13
   644  00FB1B  44                 	db	68	;'D'
   645  00FB1C  61                 	db	97	;'a'
   646  00FB1D  6E                 	db	110	;'n'
   647  00FB1E  20                 	db	32
   648  00FB1F  61                 	db	97	;'a'
   649  00FB20  6E                 	db	110	;'n'
   650  00FB21  64                 	db	100	;'d'
   651  00FB22  20                 	db	32
   652  00FB23  53                 	db	83	;'S'
   653  00FB24  61                 	db	97	;'a'
   654  00FB25  6D                 	db	109	;'m'
   655  00FB26  27                 	db	39
   656  00FB27  73                 	db	115	;'s'
   657  00FB28  20                 	db	32
   658  00FB29  4D                 	db	77	;'M'
   659  00FB2A  6F                 	db	111	;'o'
   660  00FB2B  64                 	db	100	;'d'
   661  00FB2C  62                 	db	98	;'b'
   662  00FB2D  75                 	db	117	;'u'
   663  00FB2E  73                 	db	115	;'s'
   664  00FB2F  20                 	db	32
   665  00FB30  47                 	db	71	;'G'
   666  00FB31  50                 	db	80	;'P'
   667  00FB32  49                 	db	73	;'I'
   668  00FB33  4F                 	db	79	;'O'
   669  00FB34  20                 	db	32
   670  00FB35  45                 	db	69	;'E'
   671  00FB36  78                 	db	120	;'x'
   672  00FB37  70                 	db	112	;'p'
   673  00FB38  61                 	db	97	;'a'
   674  00FB39  6E                 	db	110	;'n'
   675  00FB3A  73                 	db	115	;'s'
   676  00FB3B  69                 	db	105	;'i'
   677  00FB3C  6F                 	db	111	;'o'
   678  00FB3D  6E                 	db	110	;'n'
   679  00FB3E  20                 	db	32
   680  00FB3F  2D                 	db	45
   681  00FB40  20                 	db	32
   682  00FB41  41                 	db	65	;'A'
   683  00FB42  50                 	db	80	;'P'
   684  00FB43  30                 	db	48	;'0'
   685  00FB44  30                 	db	48	;'0'
   686  00FB45  30                 	db	48	;'0'
   687  00FB46  37                 	db	55	;'7'
   688  00FB47  30                 	db	48	;'0'
   689  00FB48  31                 	db	49	;'1'
   690  00FB49  32                 	db	50	;'2'
   691  00FB4A  35                 	db	53	;'5'
   692  00FB4B  2D                 	db	45
   693  00FB4C  30                 	db	48	;'0'
   694  00FB4D  31                 	db	49	;'1'
   695  00FB4E  20                 	db	32
   696  00FB4F  52                 	db	82	;'R'
   697  00FB50  65                 	db	101	;'e'
   698  00FB51  76                 	db	118	;'v'
   699  00FB52  20                 	db	32
   700  00FB53  2D                 	db	45
   701  00FB54  0D                 	db	13
   702  00FB55  0A                 	db	10
   703  00FB56  00                 	db	0
   704  00FB57                     STR_42:
   705                           
   706                           ; BSR set to: 0
   707  00FB57  43                 	db	67	;'C'
   708  00FB58  6C                 	db	108	;'l'
   709  00FB59  65                 	db	101	;'e'
   710  00FB5A  61                 	db	97	;'a'
   711  00FB5B  72                 	db	114	;'r'
   712  00FB5C  69                 	db	105	;'i'
   713  00FB5D  6E                 	db	110	;'n'
   714  00FB5E  67                 	db	103	;'g'
   715  00FB5F  20                 	db	32
   716  00FB60  45                 	db	69	;'E'
   717  00FB61  45                 	db	69	;'E'
   718  00FB62  50                 	db	80	;'P'
   719  00FB63  52                 	db	82	;'R'
   720  00FB64  4F                 	db	79	;'O'
   721  00FB65  4D                 	db	77	;'M'
   722  00FB66  20                 	db	32
   723  00FB67  66                 	db	102	;'f'
   724  00FB68  72                 	db	114	;'r'
   725  00FB69  6F                 	db	111	;'o'
   726  00FB6A  6D                 	db	109	;'m'
   727  00FB6B  20                 	db	32
   728  00FB6C  41                 	db	65	;'A'
   729  00FB6D  64                 	db	100	;'d'
   730  00FB6E  64                 	db	100	;'d'
   731  00FB6F  72                 	db	114	;'r'
   732  00FB70  65                 	db	101	;'e'
   733  00FB71  73                 	db	115	;'s'
   734  00FB72  73                 	db	115	;'s'
   735  00FB73  3A                 	db	58	;':'
   736  00FB74  20                 	db	32
   737  00FB75  30                 	db	48	;'0'
   738  00FB76  78                 	db	120	;'x'
   739  00FB77  25                 	db	37
   740  00FB78  30                 	db	48	;'0'
   741  00FB79  34                 	db	52	;'4'
   742  00FB7A  78                 	db	120	;'x'
   743  00FB7B  2C                 	db	44
   744  00FB7C  20                 	db	32
   745  00FB7D  4E                 	db	78	;'N'
   746  00FB7E  75                 	db	117	;'u'
   747  00FB7F  6D                 	db	109	;'m'
   748  00FB80  20                 	db	32
   749  00FB81  42                 	db	66	;'B'
   750  00FB82  79                 	db	121	;'y'
   751  00FB83  74                 	db	116	;'t'
   752  00FB84  65                 	db	101	;'e'
   753  00FB85  73                 	db	115	;'s'
   754  00FB86  3A                 	db	58	;':'
   755  00FB87  20                 	db	32
   756  00FB88  25                 	db	37
   757  00FB89  69                 	db	105	;'i'
   758  00FB8A  20                 	db	32
   759  00FB8B  0D                 	db	13
   760  00FB8C  0A                 	db	10
   761  00FB8D  00                 	db	0
   762  00FB8E                     STR_37:
   763                           
   764                           ; BSR set to: 0
   765  00FB8E  20                 	db	32
   766  00FB8F  20                 	db	32
   767  00FB90  20                 	db	32
   768  00FB91  30                 	db	48	;'0'
   769  00FB92  78                 	db	120	;'x'
   770  00FB93  31                 	db	49	;'1'
   771  00FB94  30                 	db	48	;'0'
   772  00FB95  20                 	db	32
   773  00FB96  2D                 	db	45
   774  00FB97  20                 	db	32
   775  00FB98  57                 	db	87	;'W'
   776  00FB99  72                 	db	114	;'r'
   777  00FB9A  69                 	db	105	;'i'
   778  00FB9B  74                 	db	116	;'t'
   779  00FB9C  65                 	db	101	;'e'
   780  00FB9D  20                 	db	32
   781  00FB9E  4D                 	db	77	;'M'
   782  00FB9F  75                 	db	117	;'u'
   783  00FBA0  6C                 	db	108	;'l'
   784  00FBA1  74                 	db	116	;'t'
   785  00FBA2  69                 	db	105	;'i'
   786  00FBA3  70                 	db	112	;'p'
   787  00FBA4  6C                 	db	108	;'l'
   788  00FBA5  65                 	db	101	;'e'
   789  00FBA6  20                 	db	32
   790  00FBA7  52                 	db	82	;'R'
   791  00FBA8  65                 	db	101	;'e'
   792  00FBA9  67                 	db	103	;'g'
   793  00FBAA  69                 	db	105	;'i'
   794  00FBAB  73                 	db	115	;'s'
   795  00FBAC  74                 	db	116	;'t'
   796  00FBAD  65                 	db	101	;'e'
   797  00FBAE  72                 	db	114	;'r'
   798  00FBAF  73                 	db	115	;'s'
   799  00FBB0  20                 	db	32
   800  00FBB1  28                 	db	40
   801  00FBB2  4D                 	db	77	;'M'
   802  00FBB3  61                 	db	97	;'a'
   803  00FBB4  78                 	db	120	;'x'
   804  00FBB5  20                 	db	32
   805  00FBB6  33                 	db	51	;'3'
   806  00FBB7  32                 	db	50	;'2'
   807  00FBB8  78                 	db	120	;'x'
   808  00FBB9  20                 	db	32
   809  00FBBA  31                 	db	49	;'1'
   810  00FBBB  36                 	db	54	;'6'
   811  00FBBC  62                 	db	98	;'b'
   812  00FBBD  69                 	db	105	;'i'
   813  00FBBE  74                 	db	116	;'t'
   814  00FBBF  29                 	db	41
   815  00FBC0  0D                 	db	13
   816  00FBC1  0A                 	db	10
   817  00FBC2  0A                 	db	10
   818  00FBC3  00                 	db	0
   819  00FBC4                     STR_6:
   820                           
   821                           ; BSR set to: 0
   822  00FBC4  43                 	db	67	;'C'
   823  00FBC5  6F                 	db	111	;'o'
   824  00FBC6  6D                 	db	109	;'m'
   825  00FBC7  70                 	db	112	;'p'
   826  00FBC8  6C                 	db	108	;'l'
   827  00FBC9  65                 	db	101	;'e'
   828  00FBCA  74                 	db	116	;'t'
   829  00FBCB  65                 	db	101	;'e'
   830  00FBCC  64                 	db	100	;'d'
   831  00FBCD  20                 	db	32
   832  00FBCE  41                 	db	65	;'A'
   833  00FBCF  64                 	db	100	;'d'
   834  00FBD0  64                 	db	100	;'d'
   835  00FBD1  69                 	db	105	;'i'
   836  00FBD2  6E                 	db	110	;'n'
   837  00FBD3  67                 	db	103	;'g'
   838  00FBD4  20                 	db	32
   839  00FBD5  72                 	db	114	;'r'
   840  00FBD6  78                 	db	120	;'x'
   841  00FBD7  44                 	db	68	;'D'
   842  00FBD8  61                 	db	97	;'a'
   843  00FBD9  74                 	db	116	;'t'
   844  00FBDA  61                 	db	97	;'a'
   845  00FBDB  20                 	db	32
   846  00FBDC  42                 	db	66	;'B'
   847  00FBDD  75                 	db	117	;'u'
   848  00FBDE  66                 	db	102	;'f'
   849  00FBDF  66                 	db	102	;'f'
   850  00FBE0  65                 	db	101	;'e'
   851  00FBE1  72                 	db	114	;'r'
   852  00FBE2  20                 	db	32
   853  00FBE3  74                 	db	116	;'t'
   854  00FBE4  6F                 	db	111	;'o'
   855  00FBE5  20                 	db	32
   856  00FBE6  4D                 	db	77	;'M'
   857  00FBE7  6F                 	db	111	;'o'
   858  00FBE8  64                 	db	100	;'d'
   859  00FBE9  62                 	db	98	;'b'
   860  00FBEA  75                 	db	117	;'u'
   861  00FBEB  73                 	db	115	;'s'
   862  00FBEC  44                 	db	68	;'D'
   863  00FBED  61                 	db	97	;'a'
   864  00FBEE  74                 	db	116	;'t'
   865  00FBEF  61                 	db	97	;'a'
   866  00FBF0  20                 	db	32
   867  00FBF1  41                 	db	65	;'A'
   868  00FBF2  72                 	db	114	;'r'
   869  00FBF3  72                 	db	114	;'r'
   870  00FBF4  61                 	db	97	;'a'
   871  00FBF5  79                 	db	121	;'y'
   872  00FBF6  0D                 	db	13
   873  00FBF7  0A                 	db	10
   874  00FBF8  0A                 	db	10
   875  00FBF9  00                 	db	0
   876  00FBFA                     STR_36:
   877                           
   878                           ; BSR set to: 0
   879  00FBFA  20                 	db	32
   880  00FBFB  20                 	db	32
   881  00FBFC  20                 	db	32
   882  00FBFD  30                 	db	48	;'0'
   883  00FBFE  78                 	db	120	;'x'
   884  00FBFF  30                 	db	48	;'0'
   885  00FC00  33                 	db	51	;'3'
   886  00FC01  20                 	db	32
   887  00FC02  2D                 	db	45
   888  00FC03  20                 	db	32
   889  00FC04  52                 	db	82	;'R'
   890  00FC05  65                 	db	101	;'e'
   891  00FC06  61                 	db	97	;'a'
   892  00FC07  64                 	db	100	;'d'
   893  00FC08  20                 	db	32
   894  00FC09  4D                 	db	77	;'M'
   895  00FC0A  75                 	db	117	;'u'
   896  00FC0B  6C                 	db	108	;'l'
   897  00FC0C  74                 	db	116	;'t'
   898  00FC0D  69                 	db	105	;'i'
   899  00FC0E  70                 	db	112	;'p'
   900  00FC0F  6C                 	db	108	;'l'
   901  00FC10  65                 	db	101	;'e'
   902  00FC11  20                 	db	32
   903  00FC12  52                 	db	82	;'R'
   904  00FC13  65                 	db	101	;'e'
   905  00FC14  67                 	db	103	;'g'
   906  00FC15  69                 	db	105	;'i'
   907  00FC16  73                 	db	115	;'s'
   908  00FC17  74                 	db	116	;'t'
   909  00FC18  65                 	db	101	;'e'
   910  00FC19  72                 	db	114	;'r'
   911  00FC1A  73                 	db	115	;'s'
   912  00FC1B  20                 	db	32
   913  00FC1C  28                 	db	40
   914  00FC1D  4D                 	db	77	;'M'
   915  00FC1E  61                 	db	97	;'a'
   916  00FC1F  78                 	db	120	;'x'
   917  00FC20  20                 	db	32
   918  00FC21  33                 	db	51	;'3'
   919  00FC22  32                 	db	50	;'2'
   920  00FC23  78                 	db	120	;'x'
   921  00FC24  20                 	db	32
   922  00FC25  31                 	db	49	;'1'
   923  00FC26  36                 	db	54	;'6'
   924  00FC27  62                 	db	98	;'b'
   925  00FC28  69                 	db	105	;'i'
   926  00FC29  74                 	db	116	;'t'
   927  00FC2A  29                 	db	41
   928  00FC2B  0D                 	db	13
   929  00FC2C  0A                 	db	10
   930  00FC2D  00                 	db	0
   931  00FC2E                     STR_32:
   932                           
   933                           ; BSR set to: 0
   934  00FC2E  43                 	db	67	;'C'
   935  00FC2F  6F                 	db	111	;'o'
   936  00FC30  6D                 	db	109	;'m'
   937  00FC31  70                 	db	112	;'p'
   938  00FC32  69                 	db	105	;'i'
   939  00FC33  6C                 	db	108	;'l'
   940  00FC34  65                 	db	101	;'e'
   941  00FC35  64                 	db	100	;'d'
   942  00FC36  20                 	db	32
   943  00FC37  6F                 	db	111	;'o'
   944  00FC38  6E                 	db	110	;'n'
   945  00FC39  20                 	db	32
   946  00FC3A  25                 	db	37
   947  00FC3B  73                 	db	115	;'s'
   948  00FC3C  20                 	db	32
   949  00FC3D  61                 	db	97	;'a'
   950  00FC3E  74                 	db	116	;'t'
   951  00FC3F  20                 	db	32
   952  00FC40  25                 	db	37
   953  00FC41  73                 	db	115	;'s'
   954  00FC42  20                 	db	32
   955  00FC43  62                 	db	98	;'b'
   956  00FC44  79                 	db	121	;'y'
   957  00FC45  20                 	db	32
   958  00FC46  58                 	db	88	;'X'
   959  00FC47  43                 	db	67	;'C'
   960  00FC48  38                 	db	56	;'8'
   961  00FC49  20                 	db	32
   962  00FC4A  76                 	db	118	;'v'
   963  00FC4B  65                 	db	101	;'e'
   964  00FC4C  72                 	db	114	;'r'
   965  00FC4D  73                 	db	115	;'s'
   966  00FC4E  69                 	db	105	;'i'
   967  00FC4F  6F                 	db	111	;'o'
   968  00FC50  6E                 	db	110	;'n'
   969  00FC51  20                 	db	32
   970  00FC52  25                 	db	37
   971  00FC53  75                 	db	117	;'u'
   972  00FC54  0D                 	db	13
   973  00FC55  0A                 	db	10
   974  00FC56  0A                 	db	10
   975  00FC57  00                 	db	0
   976  00FC58                     STR_46:
   977                           
   978                           ; BSR set to: 0
   979  00FC58  45                 	db	69	;'E'
   980  00FC59  6E                 	db	110	;'n'
   981  00FC5A  74                 	db	116	;'t'
   982  00FC5B  65                 	db	101	;'e'
   983  00FC5C  72                 	db	114	;'r'
   984  00FC5D  20                 	db	32
   985  00FC5E  63                 	db	99	;'c'
   986  00FC5F  61                 	db	97	;'a'
   987  00FC60  72                 	db	114	;'r'
   988  00FC61  64                 	db	100	;'d'
   989  00FC62  20                 	db	32
   990  00FC63  25                 	db	37
   991  00FC64  73                 	db	115	;'s'
   992  00FC65  20                 	db	32
   993  00FC66  28                 	db	40
   994  00FC67  6D                 	db	109	;'m'
   995  00FC68  61                 	db	97	;'a'
   996  00FC69  78                 	db	120	;'x'
   997  00FC6A  20                 	db	32
   998  00FC6B  25                 	db	37
   999  00FC6C  69                 	db	105	;'i'
  1000  00FC6D  20                 	db	32
  1001  00FC6E  63                 	db	99	;'c'
  1002  00FC6F  68                 	db	104	;'h'
  1003  00FC70  61                 	db	97	;'a'
  1004  00FC71  72                 	db	114	;'r'
  1005  00FC72  61                 	db	97	;'a'
  1006  00FC73  63                 	db	99	;'c'
  1007  00FC74  74                 	db	116	;'t'
  1008  00FC75  65                 	db	101	;'e'
  1009  00FC76  72                 	db	114	;'r'
  1010  00FC77  73                 	db	115	;'s'
  1011  00FC78  29                 	db	41
  1012  00FC79  3A                 	db	58	;':'
  1013  00FC7A  20                 	db	32
  1014  00FC7B  00                 	db	0
  1015  00FC7C                     STR_11:
  1016                           
  1017                           ; BSR set to: 0
  1018  00FC7C  63                 	db	99	;'c'
  1019  00FC7D  72                 	db	114	;'r'
  1020  00FC7E  63                 	db	99	;'c'
  1021  00FC7F  48                 	db	72	;'H'
  1022  00FC80  69                 	db	105	;'i'
  1023  00FC81  67                 	db	103	;'g'
  1024  00FC82  68                 	db	104	;'h'
  1025  00FC83  3A                 	db	58	;':'
  1026  00FC84  20                 	db	32
  1027  00FC85  30                 	db	48	;'0'
  1028  00FC86  78                 	db	120	;'x'
  1029  00FC87  25                 	db	37
  1030  00FC88  30                 	db	48	;'0'
  1031  00FC89  32                 	db	50	;'2'
  1032  00FC8A  78                 	db	120	;'x'
  1033  00FC8B  20                 	db	32
  1034  00FC8C  20                 	db	32
  1035  00FC8D  63                 	db	99	;'c'
  1036  00FC8E  72                 	db	114	;'r'
  1037  00FC8F  63                 	db	99	;'c'
  1038  00FC90  4C                 	db	76	;'L'
  1039  00FC91  6F                 	db	111	;'o'
  1040  00FC92  77                 	db	119	;'w'
  1041  00FC93  3A                 	db	58	;':'
  1042  00FC94  20                 	db	32
  1043  00FC95  30                 	db	48	;'0'
  1044  00FC96  78                 	db	120	;'x'
  1045  00FC97  25                 	db	37
  1046  00FC98  30                 	db	48	;'0'
  1047  00FC99  32                 	db	50	;'2'
  1048  00FC9A  78                 	db	120	;'x'
  1049  00FC9B  20                 	db	32
  1050  00FC9C  20                 	db	32
  1051  00FC9D  0D                 	db	13
  1052  00FC9E  0A                 	db	10
  1053  00FC9F  00                 	db	0
  1054  00FCA0                     STR_38:
  1055                           
  1056                           ; BSR set to: 0
  1057  00FCA0  49                 	db	73	;'I'
  1058  00FCA1  6E                 	db	110	;'n'
  1059  00FCA2  69                 	db	105	;'i'
  1060  00FCA3  74                 	db	116	;'t'
  1061  00FCA4  61                 	db	97	;'a'
  1062  00FCA5  6C                 	db	108	;'l'
  1063  00FCA6  69                 	db	105	;'i'
  1064  00FCA7  73                 	db	115	;'s'
  1065  00FCA8  61                 	db	97	;'a'
  1066  00FCA9  74                 	db	116	;'t'
  1067  00FCAA  69                 	db	105	;'i'
  1068  00FCAB  6F                 	db	111	;'o'
  1069  00FCAC  6E                 	db	110	;'n'
  1070  00FCAD  20                 	db	32
  1071  00FCAE  43                 	db	67	;'C'
  1072  00FCAF  6F                 	db	111	;'o'
  1073  00FCB0  6D                 	db	109	;'m'
  1074  00FCB1  70                 	db	112	;'p'
  1075  00FCB2  6C                 	db	108	;'l'
  1076  00FCB3  65                 	db	101	;'e'
  1077  00FCB4  74                 	db	116	;'t'
  1078  00FCB5  65                 	db	101	;'e'
  1079  00FCB6  20                 	db	32
  1080  00FCB7  2D                 	db	45
  1081  00FCB8  20                 	db	32
  1082  00FCB9  52                 	db	82	;'R'
  1083  00FCBA  65                 	db	101	;'e'
  1084  00FCBB  61                 	db	97	;'a'
  1085  00FCBC  64                 	db	100	;'d'
  1086  00FCBD  79                 	db	121	;'y'
  1087  00FCBE  0D                 	db	13
  1088  00FCBF  0A                 	db	10
  1089  00FCC0  0A                 	db	10
  1090  00FCC1  00                 	db	0
  1091  00FCC2                     STR_48:
  1092                           
  1093                           ; BSR set to: 0
  1094  00FCC2  0D                 	db	13
  1095  00FCC3  0A                 	db	10
  1096  00FCC4  45                 	db	69	;'E'
  1097  00FCC5  6E                 	db	110	;'n'
  1098  00FCC6  74                 	db	116	;'t'
  1099  00FCC7  65                 	db	101	;'e'
  1100  00FCC8  72                 	db	114	;'r'
  1101  00FCC9  65                 	db	101	;'e'
  1102  00FCCA  64                 	db	100	;'d'
  1103  00FCCB  3A                 	db	58	;':'
  1104  00FCCC  20                 	db	32
  1105  00FCCD  25                 	db	37
  1106  00FCCE  73                 	db	115	;'s'
  1107  00FCCF  20                 	db	32
  1108  00FCD0  0D                 	db	13
  1109  00FCD1  0A                 	db	10
  1110  00FCD2  20                 	db	32
  1111  00FCD3  43                 	db	67	;'C'
  1112  00FCD4  6F                 	db	111	;'o'
  1113  00FCD5  6E                 	db	110	;'n'
  1114  00FCD6  66                 	db	102	;'f'
  1115  00FCD7  69                 	db	105	;'i'
  1116  00FCD8  72                 	db	114	;'r'
  1117  00FCD9  6D                 	db	109	;'m'
  1118  00FCDA  20                 	db	32
  1119  00FCDB  20                 	db	32
  1120  00FCDC  59                 	db	89	;'Y'
  1121  00FCDD  7C                 	db	124
  1122  00FCDE  4E                 	db	78	;'N'
  1123  00FCDF  3F                 	db	63	;'?'
  1124  00FCE0  3A                 	db	58	;':'
  1125  00FCE1  20                 	db	32
  1126  00FCE2  00                 	db	0
  1127  00FCE3                     STR_26:
  1128                           
  1129                           ; BSR set to: 0
  1130  00FCE3  4D                 	db	77	;'M'
  1131  00FCE4  6F                 	db	111	;'o'
  1132  00FCE5  64                 	db	100	;'d'
  1133  00FCE6  44                 	db	68	;'D'
  1134  00FCE7  61                 	db	97	;'a'
  1135  00FCE8  74                 	db	116	;'t'
  1136  00FCE9  43                 	db	67	;'C'
  1137  00FCEA  6E                 	db	110	;'n'
  1138  00FCEB  74                 	db	116	;'t'
  1139  00FCEC  3A                 	db	58	;':'
  1140  00FCED  20                 	db	32
  1141  00FCEE  25                 	db	37
  1142  00FCEF  69                 	db	105	;'i'
  1143  00FCF0  20                 	db	32
  1144  00FCF1  45                 	db	69	;'E'
  1145  00FCF2  78                 	db	120	;'x'
  1146  00FCF3  70                 	db	112	;'p'
  1147  00FCF4  65                 	db	101	;'e'
  1148  00FCF5  74                 	db	116	;'t'
  1149  00FCF6  65                 	db	101	;'e'
  1150  00FCF7  64                 	db	100	;'d'
  1151  00FCF8  42                 	db	66	;'B'
  1152  00FCF9  79                 	db	121	;'y'
  1153  00FCFA  74                 	db	116	;'t'
  1154  00FCFB  65                 	db	101	;'e'
  1155  00FCFC  73                 	db	115	;'s'
  1156  00FCFD  20                 	db	32
  1157  00FCFE  25                 	db	37
  1158  00FCFF  69                 	db	105	;'i'
  1159  00FD00  20                 	db	32
  1160  00FD01  0D                 	db	13
  1161  00FD02  0A                 	db	10
  1162  00FD03  00                 	db	0
  1163  00FD04                     STR_8:
  1164                           
  1165                           ; BSR set to: 0
  1166  00FD04  4D                 	db	77	;'M'
  1167  00FD05  6F                 	db	111	;'o'
  1168  00FD06  64                 	db	100	;'d'
  1169  00FD07  62                 	db	98	;'b'
  1170  00FD08  75                 	db	117	;'u'
  1171  00FD09  73                 	db	115	;'s'
  1172  00FD0A  20                 	db	32
  1173  00FD0B  44                 	db	68	;'D'
  1174  00FD0C  61                 	db	97	;'a'
  1175  00FD0D  74                 	db	116	;'t'
  1176  00FD0E  61                 	db	97	;'a'
  1177  00FD0F  20                 	db	32
  1178  00FD10  43                 	db	67	;'C'
  1179  00FD11  61                 	db	97	;'a'
  1180  00FD12  70                 	db	112	;'p'
  1181  00FD13  74                 	db	116	;'t'
  1182  00FD14  75                 	db	117	;'u'
  1183  00FD15  72                 	db	114	;'r'
  1184  00FD16  65                 	db	101	;'e'
  1185  00FD17  20                 	db	32
  1186  00FD18  43                 	db	67	;'C'
  1187  00FD19  6F                 	db	111	;'o'
  1188  00FD1A  6D                 	db	109	;'m'
  1189  00FD1B  70                 	db	112	;'p'
  1190  00FD1C  6C                 	db	108	;'l'
  1191  00FD1D  65                 	db	101	;'e'
  1192  00FD1E  74                 	db	116	;'t'
  1193  00FD1F  65                 	db	101	;'e'
  1194  00FD20  3A                 	db	58	;':'
  1195  00FD21  0D                 	db	13
  1196  00FD22  0A                 	db	10
  1197  00FD23  00                 	db	0
  1198  00FD24                     STR_53:
  1199                           
  1200                           ; BSR set to: 0
  1201  00FD24  45                 	db	69	;'E'
  1202  00FD25  45                 	db	69	;'E'
  1203  00FD26  50                 	db	80	;'P'
  1204  00FD27  52                 	db	82	;'R'
  1205  00FD28  4F                 	db	79	;'O'
  1206  00FD29  4D                 	db	77	;'M'
  1207  00FD2A  3A                 	db	58	;':'
  1208  00FD2B  20                 	db	32
  1209  00FD2C  30                 	db	48	;'0'
  1210  00FD2D  78                 	db	120	;'x'
  1211  00FD2E  25                 	db	37
  1212  00FD2F  30                 	db	48	;'0'
  1213  00FD30  32                 	db	50	;'2'
  1214  00FD31  78                 	db	120	;'x'
  1215  00FD32  20                 	db	32
  1216  00FD33  41                 	db	65	;'A'
  1217  00FD34  64                 	db	100	;'d'
  1218  00FD35  64                 	db	100	;'d'
  1219  00FD36  3A                 	db	58	;':'
  1220  00FD37  20                 	db	32
  1221  00FD38  30                 	db	48	;'0'
  1222  00FD39  78                 	db	120	;'x'
  1223  00FD3A  25                 	db	37
  1224  00FD3B  30                 	db	48	;'0'
  1225  00FD3C  32                 	db	50	;'2'
  1226  00FD3D  78                 	db	120	;'x'
  1227  00FD3E  20                 	db	32
  1228  00FD3F  0D                 	db	13
  1229  00FD40  0A                 	db	10
  1230  00FD41  00                 	db	0
  1231  00FD42                     STR_43:
  1232                           
  1233                           ; BSR set to: 0
  1234  00FD42  43                 	db	67	;'C'
  1235  00FD43  6C                 	db	108	;'l'
  1236  00FD44  65                 	db	101	;'e'
  1237  00FD45  61                 	db	97	;'a'
  1238  00FD46  72                 	db	114	;'r'
  1239  00FD47  20                 	db	32
  1240  00FD48  30                 	db	48	;'0'
  1241  00FD49  78                 	db	120	;'x'
  1242  00FD4A  25                 	db	37
  1243  00FD4B  30                 	db	48	;'0'
  1244  00FD4C  34                 	db	52	;'4'
  1245  00FD4D  78                 	db	120	;'x'
  1246  00FD4E  20                 	db	32
  1247  00FD4F  4E                 	db	78	;'N'
  1248  00FD50  75                 	db	117	;'u'
  1249  00FD51  6D                 	db	109	;'m'
  1250  00FD52  42                 	db	66	;'B'
  1251  00FD53  79                 	db	121	;'y'
  1252  00FD54  74                 	db	116	;'t'
  1253  00FD55  65                 	db	101	;'e'
  1254  00FD56  3A                 	db	58	;':'
  1255  00FD57  20                 	db	32
  1256  00FD58  20                 	db	32
  1257  00FD59  25                 	db	37
  1258  00FD5A  69                 	db	105	;'i'
  1259  00FD5B  20                 	db	32
  1260  00FD5C  0D                 	db	13
  1261  00FD5D  0A                 	db	10
  1262  00FD5E  00                 	db	0
  1263  00FD5F                     STR_55:
  1264                           
  1265                           ; BSR set to: 0
  1266  00FD5F  0D                 	db	13
  1267  00FD60  0A                 	db	10
  1268  00FD61  20                 	db	32
  1269  00FD62  56                 	db	86	;'V'
  1270  00FD63  61                 	db	97	;'a'
  1271  00FD64  6C                 	db	108	;'l'
  1272  00FD65  69                 	db	105	;'i'
  1273  00FD66  64                 	db	100	;'d'
  1274  00FD67  61                 	db	97	;'a'
  1275  00FD68  74                 	db	116	;'t'
  1276  00FD69  69                 	db	105	;'i'
  1277  00FD6A  6E                 	db	110	;'n'
  1278  00FD6B  67                 	db	103	;'g'
  1279  00FD6C  20                 	db	32
  1280  00FD6D  43                 	db	67	;'C'
  1281  00FD6E  6F                 	db	111	;'o'
  1282  00FD6F  6D                 	db	109	;'m'
  1283  00FD70  6D                 	db	109	;'m'
  1284  00FD71  61                 	db	97	;'a'
  1285  00FD72  6E                 	db	110	;'n'
  1286  00FD73  64                 	db	100	;'d'
  1287  00FD74  3A                 	db	58	;':'
  1288  00FD75  20                 	db	32
  1289  00FD76  25                 	db	37
  1290  00FD77  73                 	db	115	;'s'
  1291  00FD78  20                 	db	32
  1292  00FD79  0D                 	db	13
  1293  00FD7A  0A                 	db	10
  1294  00FD7B  00                 	db	0
  1295  00FD7C                     STR_35:
  1296                           
  1297                           ; BSR set to: 0
  1298  00FD7C  46                 	db	70	;'F'
  1299  00FD7D  75                 	db	117	;'u'
  1300  00FD7E  6E                 	db	110	;'n'
  1301  00FD7F  63                 	db	99	;'c'
  1302  00FD80  74                 	db	116	;'t'
  1303  00FD81  69                 	db	105	;'i'
  1304  00FD82  6F                 	db	111	;'o'
  1305  00FD83  6E                 	db	110	;'n'
  1306  00FD84  20                 	db	32
  1307  00FD85  43                 	db	67	;'C'
  1308  00FD86  6F                 	db	111	;'o'
  1309  00FD87  64                 	db	100	;'d'
  1310  00FD88  65                 	db	101	;'e'
  1311  00FD89  73                 	db	115	;'s'
  1312  00FD8A  20                 	db	32
  1313  00FD8B  53                 	db	83	;'S'
  1314  00FD8C  75                 	db	117	;'u'
  1315  00FD8D  70                 	db	112	;'p'
  1316  00FD8E  70                 	db	112	;'p'
  1317  00FD8F  6F                 	db	111	;'o'
  1318  00FD90  72                 	db	114	;'r'
  1319  00FD91  74                 	db	116	;'t'
  1320  00FD92  65                 	db	101	;'e'
  1321  00FD93  64                 	db	100	;'d'
  1322  00FD94  3A                 	db	58	;':'
  1323  00FD95  0D                 	db	13
  1324  00FD96  0A                 	db	10
  1325  00FD97  00                 	db	0
  1326  00FD98                     STR_7:
  1327                           
  1328                           ; BSR set to: 0
  1329  00FD98  4D                 	db	77	;'M'
  1330  00FD99  6F                 	db	111	;'o'
  1331  00FD9A  64                 	db	100	;'d'
  1332  00FD9B  44                 	db	68	;'D'
  1333  00FD9C  61                 	db	97	;'a'
  1334  00FD9D  74                 	db	116	;'t'
  1335  00FD9E  61                 	db	97	;'a'
  1336  00FD9F  43                 	db	67	;'C'
  1337  00FDA0  6E                 	db	110	;'n'
  1338  00FDA1  74                 	db	116	;'t'
  1339  00FDA2  20                 	db	32
  1340  00FDA3  73                 	db	115	;'s'
  1341  00FDA4  69                 	db	105	;'i'
  1342  00FDA5  74                 	db	116	;'t'
  1343  00FDA6  74                 	db	116	;'t'
  1344  00FDA7  69                 	db	105	;'i'
  1345  00FDA8  6E                 	db	110	;'n'
  1346  00FDA9  67                 	db	103	;'g'
  1347  00FDAA  20                 	db	32
  1348  00FDAB  61                 	db	97	;'a'
  1349  00FDAC  74                 	db	116	;'t'
  1350  00FDAD  20                 	db	32
  1351  00FDAE  25                 	db	37
  1352  00FDAF  69                 	db	105	;'i'
  1353  00FDB0  0D                 	db	13
  1354  00FDB1  0A                 	db	10
  1355  00FDB2  0A                 	db	10
  1356  00FDB3  00                 	db	0
  1357  00FDB4                     STR_20:
  1358                           
  1359                           ; BSR set to: 0
  1360  00FDB4  4D                 	db	77	;'M'
  1361  00FDB5  6F                 	db	111	;'o'
  1362  00FDB6  64                 	db	100	;'d'
  1363  00FDB7  62                 	db	98	;'b'
  1364  00FDB8  75                 	db	117	;'u'
  1365  00FDB9  73                 	db	115	;'s'
  1366  00FDBA  20                 	db	32
  1367  00FDBB  52                 	db	82	;'R'
  1368  00FDBC  65                 	db	101	;'e'
  1369  00FDBD  73                 	db	115	;'s'
  1370  00FDBE  70                 	db	112	;'p'
  1371  00FDBF  6F                 	db	111	;'o'
  1372  00FDC0  6E                 	db	110	;'n'
  1373  00FDC1  73                 	db	115	;'s'
  1374  00FDC2  65                 	db	101	;'e'
  1375  00FDC3  20                 	db	32
  1376  00FDC4  43                 	db	67	;'C'
  1377  00FDC5  6F                 	db	111	;'o'
  1378  00FDC6  75                 	db	117	;'u'
  1379  00FDC7  6E                 	db	110	;'n'
  1380  00FDC8  74                 	db	116	;'t'
  1381  00FDC9  20                 	db	32
  1382  00FDCA  25                 	db	37
  1383  00FDCB  69                 	db	105	;'i'
  1384  00FDCC  3A                 	db	58	;':'
  1385  00FDCD  0D                 	db	13
  1386  00FDCE  0A                 	db	10
  1387  00FDCF  00                 	db	0
  1388  00FDD0                     STR_2:
  1389                           
  1390                           ; BSR set to: 0
  1391  00FDD0  55                 	db	85	;'U'
  1392  00FDD1  6E                 	db	110	;'n'
  1393  00FDD2  73                 	db	115	;'s'
  1394  00FDD3  75                 	db	117	;'u'
  1395  00FDD4  70                 	db	112	;'p'
  1396  00FDD5  70                 	db	112	;'p'
  1397  00FDD6  6F                 	db	111	;'o'
  1398  00FDD7  72                 	db	114	;'r'
  1399  00FDD8  74                 	db	116	;'t'
  1400  00FDD9  65                 	db	101	;'e'
  1401  00FDDA  64                 	db	100	;'d'
  1402  00FDDB  20                 	db	32
  1403  00FDDC  46                 	db	70	;'F'
  1404  00FDDD  75                 	db	117	;'u'
  1405  00FDDE  6E                 	db	110	;'n'
  1406  00FDDF  63                 	db	99	;'c'
  1407  00FDE0  74                 	db	116	;'t'
  1408  00FDE1  69                 	db	105	;'i'
  1409  00FDE2  6F                 	db	111	;'o'
  1410  00FDE3  6E                 	db	110	;'n'
  1411  00FDE4  20                 	db	32
  1412  00FDE5  43                 	db	67	;'C'
  1413  00FDE6  6F                 	db	111	;'o'
  1414  00FDE7  64                 	db	100	;'d'
  1415  00FDE8  65                 	db	101	;'e'
  1416  00FDE9  0D                 	db	13
  1417  00FDEA  0A                 	db	10
  1418  00FDEB  00                 	db	0
  1419  00FDEC                     STR_49:
  1420                           
  1421                           ; BSR set to: 0
  1422  00FDEC  59                 	db	89	;'Y'
  1423  00FDED  0D                 	db	13
  1424  00FDEE  0A                 	db	10
  1425  00FDEF  53                 	db	83	;'S'
  1426  00FDF0  61                 	db	97	;'a'
  1427  00FDF1  76                 	db	118	;'v'
  1428  00FDF2  69                 	db	105	;'i'
  1429  00FDF3  6E                 	db	110	;'n'
  1430  00FDF4  67                 	db	103	;'g'
  1431  00FDF5  20                 	db	32
  1432  00FDF6  53                 	db	83	;'S'
  1433  00FDF7  65                 	db	101	;'e'
  1434  00FDF8  72                 	db	114	;'r'
  1435  00FDF9  69                 	db	105	;'i'
  1436  00FDFA  61                 	db	97	;'a'
  1437  00FDFB  6C                 	db	108	;'l'
  1438  00FDFC  20                 	db	32
  1439  00FDFD  4E                 	db	78	;'N'
  1440  00FDFE  75                 	db	117	;'u'
  1441  00FDFF  6D                 	db	109	;'m'
  1442  00FE00  62                 	db	98	;'b'
  1443  00FE01  65                 	db	101	;'e'
  1444  00FE02  72                 	db	114	;'r'
  1445  00FE03  20                 	db	32
  1446  00FE04  0D                 	db	13
  1447  00FE05  0A                 	db	10
  1448  00FE06  00                 	db	0
  1449  00FE07                     STR_51:
  1450                           
  1451                           ; BSR set to: 0
  1452  00FE07  43                 	db	67	;'C'
  1453  00FE08  68                 	db	104	;'h'
  1454  00FE09  61                 	db	97	;'a'
  1455  00FE0A  72                 	db	114	;'r'
  1456  00FE0B  20                 	db	32
  1457  00FE0C  30                 	db	48	;'0'
  1458  00FE0D  78                 	db	120	;'x'
  1459  00FE0E  25                 	db	37
  1460  00FE0F  30                 	db	48	;'0'
  1461  00FE10  32                 	db	50	;'2'
  1462  00FE11  78                 	db	120	;'x'
  1463  00FE12  20                 	db	32
  1464  00FE13  69                 	db	105	;'i'
  1465  00FE14  6E                 	db	110	;'n'
  1466  00FE15  20                 	db	32
  1467  00FE16  30                 	db	48	;'0'
  1468  00FE17  78                 	db	120	;'x'
  1469  00FE18  25                 	db	37
  1470  00FE19  30                 	db	48	;'0'
  1471  00FE1A  32                 	db	50	;'2'
  1472  00FE1B  78                 	db	120	;'x'
  1473  00FE1C  20                 	db	32
  1474  00FE1D  0D                 	db	13
  1475  00FE1E  0A                 	db	10
  1476  00FE1F  00                 	db	0
  1477  00FE20                     STR_52:
  1478                           
  1479                           ; BSR set to: 0
  1480  00FE20  53                 	db	83	;'S'
  1481  00FE21  65                 	db	101	;'e'
  1482  00FE22  72                 	db	114	;'r'
  1483  00FE23  69                 	db	105	;'i'
  1484  00FE24  61                 	db	97	;'a'
  1485  00FE25  6C                 	db	108	;'l'
  1486  00FE26  20                 	db	32
  1487  00FE27  4E                 	db	78	;'N'
  1488  00FE28  75                 	db	117	;'u'
  1489  00FE29  6D                 	db	109	;'m'
  1490  00FE2A  62                 	db	98	;'b'
  1491  00FE2B  65                 	db	101	;'e'
  1492  00FE2C  72                 	db	114	;'r'
  1493  00FE2D  20                 	db	32
  1494  00FE2E  53                 	db	83	;'S'
  1495  00FE2F  61                 	db	97	;'a'
  1496  00FE30  76                 	db	118	;'v'
  1497  00FE31  65                 	db	101	;'e'
  1498  00FE32  64                 	db	100	;'d'
  1499  00FE33  2E                 	db	46
  1500  00FE34  20                 	db	32
  1501  00FE35  0D                 	db	13
  1502  00FE36  0A                 	db	10
  1503  00FE37  00                 	db	0
  1504  00FE38                     STR_27:
  1505                           
  1506                           ; BSR set to: 0
  1507  00FE38  4D                 	db	77	;'M'
  1508  00FE39  6F                 	db	111	;'o'
  1509  00FE3A  64                 	db	100	;'d'
  1510  00FE3B  62                 	db	98	;'b'
  1511  00FE3C  75                 	db	117	;'u'
  1512  00FE3D  73                 	db	115	;'s'
  1513  00FE3E  20                 	db	32
  1514  00FE3F  52                 	db	82	;'R'
  1515  00FE40  78                 	db	120	;'x'
  1516  00FE41  20                 	db	32
  1517  00FE42  47                 	db	71	;'G'
  1518  00FE43  6F                 	db	111	;'o'
  1519  00FE44  6F                 	db	111	;'o'
  1520  00FE45  64                 	db	100	;'d'
  1521  00FE46  20                 	db	32
  1522  00FE47  47                 	db	71	;'G'
  1523  00FE48  6F                 	db	111	;'o'
  1524  00FE49  6F                 	db	111	;'o'
  1525  00FE4A  64                 	db	100	;'d'
  1526  00FE4B  2E                 	db	46
  1527  00FE4C  0D                 	db	13
  1528  00FE4D  0A                 	db	10
  1529  00FE4E  0A                 	db	10
  1530  00FE4F  00                 	db	0
  1531  00FE50                     STR_24:
  1532                           
  1533                           ; BSR set to: 0
  1534  00FE50  53                 	db	83	;'S'
  1535  00FE51  6F                 	db	111	;'o'
  1536  00FE52  6D                 	db	109	;'m'
  1537  00FE53  65                 	db	101	;'e'
  1538  00FE54  74                 	db	116	;'t'
  1539  00FE55  68                 	db	104	;'h'
  1540  00FE56  69                 	db	105	;'i'
  1541  00FE57  6E                 	db	110	;'n'
  1542  00FE58  67                 	db	103	;'g'
  1543  00FE59  20                 	db	32
  1544  00FE5A  69                 	db	105	;'i'
  1545  00FE5B  6E                 	db	110	;'n'
  1546  00FE5C  20                 	db	32
  1547  00FE5D  45                 	db	69	;'E'
  1548  00FE5E  53                 	db	83	;'S'
  1549  00FE5F  55                 	db	85	;'U'
  1550  00FE60  41                 	db	65	;'A'
  1551  00FE61  52                 	db	82	;'R'
  1552  00FE62  54                 	db	84	;'T'
  1553  00FE63  31                 	db	49	;'1'
  1554  00FE64  20                 	db	32
  1555  00FE65  0D                 	db	13
  1556  00FE66  0A                 	db	10
  1557  00FE67  00                 	db	0
  1558  00FE68                     STR_5:
  1559                           
  1560                           ; BSR set to: 0
  1561  00FE68  52                 	db	82	;'R'
  1562  00FE69  65                 	db	101	;'e'
  1563  00FE6A  67                 	db	103	;'g'
  1564  00FE6B  3A                 	db	58	;':'
  1565  00FE6C  20                 	db	32
  1566  00FE6D  25                 	db	37
  1567  00FE6E  69                 	db	105	;'i'
  1568  00FE6F  20                 	db	32
  1569  00FE70  44                 	db	68	;'D'
  1570  00FE71  61                 	db	97	;'a'
  1571  00FE72  74                 	db	116	;'t'
  1572  00FE73  61                 	db	97	;'a'
  1573  00FE74  3A                 	db	58	;':'
  1574  00FE75  20                 	db	32
  1575  00FE76  30                 	db	48	;'0'
  1576  00FE77  78                 	db	120	;'x'
  1577  00FE78  25                 	db	37
  1578  00FE79  30                 	db	48	;'0'
  1579  00FE7A  34                 	db	52	;'4'
  1580  00FE7B  78                 	db	120	;'x'
  1581  00FE7C  20                 	db	32
  1582  00FE7D  0D                 	db	13
  1583  00FE7E  0A                 	db	10
  1584  00FE7F  00                 	db	0
  1585  00FE80                     STR_9:
  1586                           
  1587                           ; BSR set to: 0
  1588  00FE80  20                 	db	32
  1589  00FE81  20                 	db	32
  1590  00FE82  20                 	db	32
  1591  00FE83  42                 	db	66	;'B'
  1592  00FE84  79                 	db	121	;'y'
  1593  00FE85  74                 	db	116	;'t'
  1594  00FE86  65                 	db	101	;'e'
  1595  00FE87  20                 	db	32
  1596  00FE88  25                 	db	37
  1597  00FE89  69                 	db	105	;'i'
  1598  00FE8A  20                 	db	32
  1599  00FE8B  3A                 	db	58	;':'
  1600  00FE8C  20                 	db	32
  1601  00FE8D  30                 	db	48	;'0'
  1602  00FE8E  78                 	db	120	;'x'
  1603  00FE8F  25                 	db	37
  1604  00FE90  30                 	db	48	;'0'
  1605  00FE91  32                 	db	50	;'2'
  1606  00FE92  78                 	db	120	;'x'
  1607  00FE93  20                 	db	32
  1608  00FE94  0D                 	db	13
  1609  00FE95  0A                 	db	10
  1610  00FE96  00                 	db	0
  1611  00FE97                     STR_31:
  1612                           
  1613                           ; BSR set to: 0
  1614  00FE97  43                 	db	67	;'C'
  1615  00FE98  61                 	db	97	;'a'
  1616  00FE99  72                 	db	114	;'r'
  1617  00FE9A  64                 	db	100	;'d'
  1618  00FE9B  20                 	db	32
  1619  00FE9C  41                 	db	65	;'A'
  1620  00FE9D  64                 	db	100	;'d'
  1621  00FE9E  64                 	db	100	;'d'
  1622  00FE9F  72                 	db	114	;'r'
  1623  00FEA0  65                 	db	101	;'e'
  1624  00FEA1  73                 	db	115	;'s'
  1625  00FEA2  73                 	db	115	;'s'
  1626  00FEA3  2E                 	db	46
  1627  00FEA4  20                 	db	32
  1628  00FEA5  30                 	db	48	;'0'
  1629  00FEA6  78                 	db	120	;'x'
  1630  00FEA7  30                 	db	48	;'0'
  1631  00FEA8  35                 	db	53	;'5'
  1632  00FEA9  20                 	db	32
  1633  00FEAA  0D                 	db	13
  1634  00FEAB  0A                 	db	10
  1635  00FEAC  00                 	db	0
  1636  00FEAD                     STR_22:
  1637                           
  1638                           ; BSR set to: 0
  1639  00FEAD  42                 	db	66	;'B'
  1640  00FEAE  79                 	db	121	;'y'
  1641  00FEAF  74                 	db	116	;'t'
  1642  00FEB0  65                 	db	101	;'e'
  1643  00FEB1  20                 	db	32
  1644  00FEB2  25                 	db	37
  1645  00FEB3  30                 	db	48	;'0'
  1646  00FEB4  32                 	db	50	;'2'
  1647  00FEB5  69                 	db	105	;'i'
  1648  00FEB6  20                 	db	32
  1649  00FEB7  3A                 	db	58	;':'
  1650  00FEB8  20                 	db	32
  1651  00FEB9  30                 	db	48	;'0'
  1652  00FEBA  78                 	db	120	;'x'
  1653  00FEBB  25                 	db	37
  1654  00FEBC  30                 	db	48	;'0'
  1655  00FEBD  32                 	db	50	;'2'
  1656  00FEBE  78                 	db	120	;'x'
  1657  00FEBF  20                 	db	32
  1658  00FEC0  0D                 	db	13
  1659  00FEC1  0A                 	db	10
  1660  00FEC2  00                 	db	0
  1661  00FEC3                     STR_1:
  1662                           
  1663                           ; BSR set to: 0
  1664  00FEC3  46                 	db	70	;'F'
  1665  00FEC4  75                 	db	117	;'u'
  1666  00FEC5  6E                 	db	110	;'n'
  1667  00FEC6  63                 	db	99	;'c'
  1668  00FEC7  74                 	db	116	;'t'
  1669  00FEC8  69                 	db	105	;'i'
  1670  00FEC9  6F                 	db	111	;'o'
  1671  00FECA  6E                 	db	110	;'n'
  1672  00FECB  20                 	db	32
  1673  00FECC  43                 	db	67	;'C'
  1674  00FECD  6F                 	db	111	;'o'
  1675  00FECE  64                 	db	100	;'d'
  1676  00FECF  65                 	db	101	;'e'
  1677  00FED0  20                 	db	32
  1678  00FED1  30                 	db	48	;'0'
  1679  00FED2  78                 	db	120	;'x'
  1680  00FED3  31                 	db	49	;'1'
  1681  00FED4  30                 	db	48	;'0'
  1682  00FED5  0D                 	db	13
  1683  00FED6  0A                 	db	10
  1684  00FED7  00                 	db	0
  1685  00FED8                     STR_30:
  1686                           
  1687                           ; BSR set to: 0
  1688  00FED8  43                 	db	67	;'C'
  1689  00FED9  61                 	db	97	;'a'
  1690  00FEDA  72                 	db	114	;'r'
  1691  00FEDB  64                 	db	100	;'d'
  1692  00FEDC  20                 	db	32
  1693  00FEDD  53                 	db	83	;'S'
  1694  00FEDE  65                 	db	101	;'e'
  1695  00FEDF  72                 	db	114	;'r'
  1696  00FEE0  20                 	db	32
  1697  00FEE1  4E                 	db	78	;'N'
  1698  00FEE2  6F                 	db	111	;'o'
  1699  00FEE3  2E                 	db	46
  1700  00FEE4  20                 	db	32
  1701  00FEE5  25                 	db	37
  1702  00FEE6  73                 	db	115	;'s'
  1703  00FEE7  20                 	db	32
  1704  00FEE8  0D                 	db	13
  1705  00FEE9  0A                 	db	10
  1706  00FEEA  00                 	db	0
  1707  00FEEB                     STR_44:
  1708                           
  1709                           ; BSR set to: 0
  1710  00FEEB  53                 	db	83	;'S'
  1711  00FEEC  61                 	db	97	;'a'
  1712  00FEED  76                 	db	118	;'v'
  1713  00FEEE  69                 	db	105	;'i'
  1714  00FEEF  6E                 	db	110	;'n'
  1715  00FEF0  67                 	db	103	;'g'
  1716  00FEF1  20                 	db	32
  1717  00FEF2  43                 	db	67	;'C'
  1718  00FEF3  61                 	db	97	;'a'
  1719  00FEF4  72                 	db	114	;'r'
  1720  00FEF5  64                 	db	100	;'d'
  1721  00FEF6  20                 	db	32
  1722  00FEF7  44                 	db	68	;'D'
  1723  00FEF8  61                 	db	97	;'a'
  1724  00FEF9  74                 	db	116	;'t'
  1725  00FEFA  61                 	db	97	;'a'
  1726  00FEFB  0D                 	db	13
  1727  00FEFC  0A                 	db	10
  1728  00FEFD  00                 	db	0
  1729  00FEFE                     STR_28:
  1730                           
  1731                           ; BSR set to: 0
  1732  00FEFE  4D                 	db	77	;'M'
  1733  00FEFF  6F                 	db	111	;'o'
  1734  00FF00  64                 	db	100	;'d'
  1735  00FF01  62                 	db	98	;'b'
  1736  00FF02  75                 	db	117	;'u'
  1737  00FF03  73                 	db	115	;'s'
  1738  00FF04  20                 	db	32
  1739  00FF05  52                 	db	82	;'R'
  1740  00FF06  78                 	db	120	;'x'
  1741  00FF07  20                 	db	32
  1742  00FF08  42                 	db	66	;'B'
  1743  00FF09  61                 	db	97	;'a'
  1744  00FF0A  64                 	db	100	;'d'
  1745  00FF0B  2E                 	db	46
  1746  00FF0C  0D                 	db	13
  1747  00FF0D  0A                 	db	10
  1748  00FF0E  0A                 	db	10
  1749  00FF0F  00                 	db	0
  1750  00FF10                     STR_19:
  1751                           
  1752                           ; BSR set to: 0
  1753  00FF10  41                 	db	65	;'A'
  1754  00FF11  6E                 	db	110	;'n'
  1755  00FF12  61                 	db	97	;'a'
  1756  00FF13  6C                 	db	108	;'l'
  1757  00FF14  6F                 	db	111	;'o'
  1758  00FF15  67                 	db	103	;'g'
  1759  00FF16  75                 	db	117	;'u'
  1760  00FF17  65                 	db	101	;'e'
  1761  00FF18  20                 	db	32
  1762  00FF19  49                 	db	73	;'I'
  1763  00FF1A  6E                 	db	110	;'n'
  1764  00FF1B  70                 	db	112	;'p'
  1765  00FF1C  75                 	db	117	;'u'
  1766  00FF1D  74                 	db	116	;'t'
  1767  00FF1E  73                 	db	115	;'s'
  1768  00FF1F  0D                 	db	13
  1769  00FF20  0A                 	db	10
  1770  00FF21  00                 	db	0
  1771  00FF22                     STR_50:
  1772                           
  1773                           ; BSR set to: 0
  1774  00FF22  4E                 	db	78	;'N'
  1775  00FF23  75                 	db	117	;'u'
  1776  00FF24  6D                 	db	109	;'m'
  1777  00FF25  20                 	db	32
  1778  00FF26  43                 	db	67	;'C'
  1779  00FF27  68                 	db	104	;'h'
  1780  00FF28  61                 	db	97	;'a'
  1781  00FF29  72                 	db	114	;'r'
  1782  00FF2A  73                 	db	115	;'s'
  1783  00FF2B  3A                 	db	58	;':'
  1784  00FF2C  20                 	db	32
  1785  00FF2D  25                 	db	37
  1786  00FF2E  69                 	db	105	;'i'
  1787  00FF2F  20                 	db	32
  1788  00FF30  0D                 	db	13
  1789  00FF31  0A                 	db	10
  1790  00FF32  00                 	db	0
  1791  00FF33                     STR_41:
  1792                           
  1793                           ; BSR set to: 0
  1794  00FF33  44                 	db	68	;'D'
  1795  00FF34  65                 	db	101	;'e'
  1796  00FF35  62                 	db	98	;'b'
  1797  00FF36  75                 	db	117	;'u'
  1798  00FF37  67                 	db	103	;'g'
  1799  00FF38  20                 	db	32
  1800  00FF39  44                 	db	68	;'D'
  1801  00FF3A  69                 	db	105	;'i'
  1802  00FF3B  73                 	db	115	;'s'
  1803  00FF3C  61                 	db	97	;'a'
  1804  00FF3D  62                 	db	98	;'b'
  1805  00FF3E  6C                 	db	108	;'l'
  1806  00FF3F  65                 	db	101	;'e'
  1807  00FF40  64                 	db	100	;'d'
  1808  00FF41  0D                 	db	13
  1809  00FF42  0A                 	db	10
  1810  00FF43  00                 	db	0
  1811  00FF44                     STR_40:
  1812                           
  1813                           ; BSR set to: 0
  1814  00FF44  44                 	db	68	;'D'
  1815  00FF45  65                 	db	101	;'e'
  1816  00FF46  62                 	db	98	;'b'
  1817  00FF47  75                 	db	117	;'u'
  1818  00FF48  67                 	db	103	;'g'
  1819  00FF49  20                 	db	32
  1820  00FF4A  45                 	db	69	;'E'
  1821  00FF4B  6E                 	db	110	;'n'
  1822  00FF4C  61                 	db	97	;'a'
  1823  00FF4D  62                 	db	98	;'b'
  1824  00FF4E  6C                 	db	108	;'l'
  1825  00FF4F  65                 	db	101	;'e'
  1826  00FF50  64                 	db	100	;'d'
  1827  00FF51  0D                 	db	13
  1828  00FF52  0A                 	db	10
  1829  00FF53  00                 	db	0
  1830  00FF54                     STR_4:
  1831                           
  1832                           ; BSR set to: 0
  1833  00FF54  55                 	db	85	;'U'
  1834  00FF55  70                 	db	112	;'p'
  1835  00FF56  64                 	db	100	;'d'
  1836  00FF57  61                 	db	97	;'a'
  1837  00FF58  74                 	db	116	;'t'
  1838  00FF59  65                 	db	101	;'e'
  1839  00FF5A  64                 	db	100	;'d'
  1840  00FF5B  4D                 	db	77	;'M'
  1841  00FF5C  42                 	db	66	;'B'
  1842  00FF5D  34                 	db	52	;'4'
  1843  00FF5E  30                 	db	48	;'0'
  1844  00FF5F  30                 	db	48	;'0'
  1845  00FF60  20                 	db	32
  1846  00FF61  0D                 	db	13
  1847  00FF62  0A                 	db	10
  1848  00FF63  00                 	db	0
  1849  00FF64                     STR_25:
  1850                           
  1851                           ; BSR set to: 0
  1852  00FF64  52                 	db	82	;'R'
  1853  00FF65  65                 	db	101	;'e'
  1854  00FF66  61                 	db	97	;'a'
  1855  00FF67  64                 	db	100	;'d'
  1856  00FF68  3A                 	db	58	;':'
  1857  00FF69  20                 	db	32
  1858  00FF6A  30                 	db	48	;'0'
  1859  00FF6B  78                 	db	120	;'x'
  1860  00FF6C  25                 	db	37
  1861  00FF6D  30                 	db	48	;'0'
  1862  00FF6E  32                 	db	50	;'2'
  1863  00FF6F  78                 	db	120	;'x'
  1864  00FF70  20                 	db	32
  1865  00FF71  0D                 	db	13
  1866  00FF72  0A                 	db	10
  1867  00FF73  00                 	db	0
  1868  00FF74                     STR_17:
  1869                           
  1870                           ; BSR set to: 0
  1871  00FF74  43                 	db	67	;'C'
  1872  00FF75  6F                 	db	111	;'o'
  1873  00FF76  6D                 	db	109	;'m'
  1874  00FF77  70                 	db	112	;'p'
  1875  00FF78  69                 	db	105	;'i'
  1876  00FF79  6C                 	db	108	;'l'
  1877  00FF7A  65                 	db	101	;'e'
  1878  00FF7B  20                 	db	32
  1879  00FF7C  54                 	db	84	;'T'
  1880  00FF7D  69                 	db	105	;'i'
  1881  00FF7E  6D                 	db	109	;'m'
  1882  00FF7F  65                 	db	101	;'e'
  1883  00FF80  0D                 	db	13
  1884  00FF81  0A                 	db	10
  1885  00FF82  00                 	db	0
  1886  00FF83                     STR_16:
  1887                           
  1888                           ; BSR set to: 0
  1889  00FF83  43                 	db	67	;'C'
  1890  00FF84  6F                 	db	111	;'o'
  1891  00FF85  6D                 	db	109	;'m'
  1892  00FF86  70                 	db	112	;'p'
  1893  00FF87  69                 	db	105	;'i'
  1894  00FF88  6C                 	db	108	;'l'
  1895  00FF89  65                 	db	101	;'e'
  1896  00FF8A  20                 	db	32
  1897  00FF8B  44                 	db	68	;'D'
  1898  00FF8C  61                 	db	97	;'a'
  1899  00FF8D  74                 	db	116	;'t'
  1900  00FF8E  65                 	db	101	;'e'
  1901  00FF8F  0D                 	db	13
  1902  00FF90  0A                 	db	10
  1903  00FF91  00                 	db	0
  1904  00FF92                     STR_18:
  1905                           
  1906                           ; BSR set to: 0
  1907  00FF92  43                 	db	67	;'C'
  1908  00FF93  6F                 	db	111	;'o'
  1909  00FF94  6D                 	db	109	;'m'
  1910  00FF95  70                 	db	112	;'p'
  1911  00FF96  69                 	db	105	;'i'
  1912  00FF97  6C                 	db	108	;'l'
  1913  00FF98  65                 	db	101	;'e'
  1914  00FF99  72                 	db	114	;'r'
  1915  00FF9A  20                 	db	32
  1916  00FF9B  56                 	db	86	;'V'
  1917  00FF9C  65                 	db	101	;'e'
  1918  00FF9D  72                 	db	114	;'r'
  1919  00FF9E  0D                 	db	13
  1920  00FF9F  0A                 	db	10
  1921  00FFA0  00                 	db	0
  1922  00FFA1                     STR_12:
  1923                           
  1924                           ; BSR set to: 0
  1925  00FFA1  43                 	db	67	;'C'
  1926  00FFA2  69                 	db	105	;'i'
  1927  00FFA3  72                 	db	114	;'r'
  1928  00FFA4  63                 	db	99	;'c'
  1929  00FFA5  75                 	db	117	;'u'
  1930  00FFA6  69                 	db	105	;'i'
  1931  00FFA7  74                 	db	116	;'t'
  1932  00FFA8  20                 	db	32
  1933  00FFA9  47                 	db	71	;'G'
  1934  00FFAA  65                 	db	101	;'e'
  1935  00FFAB  74                 	db	116	;'t'
  1936  00FFAC  0D                 	db	13
  1937  00FFAD  0A                 	db	10
  1938  00FFAE  00                 	db	0
  1939  00FFAF                     STR_15:
  1940                           
  1941                           ; BSR set to: 0
  1942  00FFAF  53                 	db	83	;'S'
  1943  00FFB0  65                 	db	101	;'e'
  1944  00FFB1  72                 	db	114	;'r'
  1945  00FFB2  69                 	db	105	;'i'
  1946  00FFB3  61                 	db	97	;'a'
  1947  00FFB4  6C                 	db	108	;'l'
  1948  00FFB5  20                 	db	32
  1949  00FFB6  4E                 	db	78	;'N'
  1950  00FFB7  6F                 	db	111	;'o'
  1951  00FFB8  2E                 	db	46
  1952  00FFB9  0D                 	db	13
  1953  00FFBA  0A                 	db	10
  1954  00FFBB  00                 	db	0
  1955  00FFBC                     STR_33:
  1956                           
  1957                           ; BSR set to: 0
  1958  00FFBC  4D                 	db	77	;'M'
  1959  00FFBD  61                 	db	97	;'a'
  1960  00FFBE  72                 	db	114	;'r'
  1961  00FFBF  20                 	db	32
  1962  00FFC0  32                 	db	50	;'2'
  1963  00FFC1  30                 	db	48	;'0'
  1964  00FFC2  20                 	db	32
  1965  00FFC3  32                 	db	50	;'2'
  1966  00FFC4  30                 	db	48	;'0'
  1967  00FFC5  32                 	db	50	;'2'
  1968  00FFC6  31                 	db	49	;'1'
  1969  00FFC7  00                 	db	0
  1970  00FFC8                     STR_13:
  1971                           
  1972                           ; BSR set to: 0
  1973  00FFC8  50                 	db	80	;'P'
  1974  00FFC9  61                 	db	97	;'a'
  1975  00FFCA  72                 	db	114	;'r'
  1976  00FFCB  74                 	db	116	;'t'
  1977  00FFCC  20                 	db	32
  1978  00FFCD  4E                 	db	78	;'N'
  1979  00FFCE  6F                 	db	111	;'o'
  1980  00FFCF  2E                 	db	46
  1981  00FFD0  0D                 	db	13
  1982  00FFD1  0A                 	db	10
  1983  00FFD2  00                 	db	0
  1984  00FFD3                     STR_14:
  1985                           
  1986                           ; BSR set to: 0
  1987  00FFD3  52                 	db	82	;'R'
  1988  00FFD4  65                 	db	101	;'e'
  1989  00FFD5  76                 	db	118	;'v'
  1990  00FFD6  69                 	db	105	;'i'
  1991  00FFD7  73                 	db	115	;'s'
  1992  00FFD8  69                 	db	105	;'i'
  1993  00FFD9  6F                 	db	111	;'o'
  1994  00FFDA  6E                 	db	110	;'n'
  1995  00FFDB  0D                 	db	13
  1996  00FFDC  0A                 	db	10
  1997  00FFDD  00                 	db	0
  1998  00FFDE                     STR_34:
  1999                           
  2000                           ; BSR set to: 0
  2001  00FFDE  31                 	db	49	;'1'
  2002  00FFDF  36                 	db	54	;'6'
  2003  00FFE0  3A                 	db	58	;':'
  2004  00FFE1  30                 	db	48	;'0'
  2005  00FFE2  36                 	db	54	;'6'
  2006  00FFE3  3A                 	db	58	;':'
  2007  00FFE4  32                 	db	50	;'2'
  2008  00FFE5  33                 	db	51	;'3'
  2009  00FFE6  00                 	db	0
  2010  00FFE7                     STR_60:
  2011                           
  2012                           ; BSR set to: 0
  2013  00FFE7  73                 	db	115	;'s'
  2014  00FFE8  65                 	db	101	;'e'
  2015  00FFE9  72                 	db	114	;'r'
  2016  00FFEA  69                 	db	105	;'i'
  2017  00FFEB  61                 	db	97	;'a'
  2018  00FFEC  6C                 	db	108	;'l'
  2019  00FFED  00                 	db	0
  2020  00FFEE                     STR_56:
  2021                           
  2022                           ; BSR set to: 0
  2023  00FFEE  64                 	db	100	;'d'
  2024  00FFEF  65                 	db	101	;'e'
  2025  00FFF0  62                 	db	98	;'b'
  2026  00FFF1  75                 	db	117	;'u'
  2027  00FFF2  67                 	db	103	;'g'
  2028  00FFF3  00                 	db	0
  2029  00FFF4                     STR_62:
  2030                           
  2031                           ; BSR set to: 0
  2032  00FFF4  70                 	db	112	;'p'
  2033  00FFF5  61                 	db	97	;'a'
  2034  00FFF6  72                 	db	114	;'r'
  2035  00FFF7  74                 	db	116	;'t'
  2036  00FFF8  00                 	db	0
  2037  00FFF9                     STR_64:
  2038                           
  2039                           ; BSR set to: 0
  2040  00FFF9  72                 	db	114	;'r'
  2041  00FFFA  65                 	db	101	;'e'
  2042  00FFFB  76                 	db	118	;'v'
  2043  00FFFC  00                 	db	0
  2044  00FFFD                     STR_58:
  2045                           
  2046                           ; BSR set to: 0
  2047  00FFFD  3F                 	db	63	;'?'
  2048  00FFFE  00                 	db	0
  2049  0000                     
  2050                           ; #config settings
  2051  00FFFF  00                 	db	0	; dummy byte at the end
  2052  0000                     
  2053                           	psect	cinit
  2054  002B18                     __pcinit:
  2055                           	opt callstack 0
  2056  002B18                     start_initialization:
  2057                           	opt callstack 0
  2058  002B18                     __initialization:
  2059                           	opt callstack 0
  2060                           
  2061                           ; Initialize objects allocated to BANK3 (128 bytes)
  2062                           ; load TBLPTR registers with __pidataBANK3
  2063  002B18  0E21               	movlw	low __pidataBANK3
  2064  002B1A  6EF6               	movwf	tblptrl,c
  2065  002B1C  0E31               	movlw	high __pidataBANK3
  2066  002B1E  6EF7               	movwf	tblptrh,c
  2067  002B20  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  2068  002B22  6EF8               	movwf	tblptru,c
  2069  002B24  EE03  F000         	lfsr	0,__pdataBANK3
  2070  002B28  EE10 F080          	lfsr	1,128
  2071  002B2C                     copy_data0:
  2072  002B2C  0009               	tblrd		*+
  2073  002B2E  CFF5 FFEE          	movff	tablat,postinc0
  2074  002B32  50E5               	movf	postdec1,w,c
  2075  002B34  50E1               	movf	fsr1l,w,c
  2076  002B36  E1FA               	bnz	copy_data0
  2077                           
  2078                           ; Initialize objects allocated to BANK2 (60 bytes)
  2079                           ; load TBLPTR registers with __pidataBANK2
  2080  002B38  0E4A               	movlw	low __pidataBANK2
  2081  002B3A  6EF6               	movwf	tblptrl,c
  2082  002B3C  0E3A               	movlw	high __pidataBANK2
  2083  002B3E  6EF7               	movwf	tblptrh,c
  2084  002B40  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2085  002B42  6EF8               	movwf	tblptru,c
  2086  002B44  EE02  F0AF         	lfsr	0,__pdataBANK2
  2087  002B48  EE10 F03C          	lfsr	1,60
  2088  002B4C                     copy_data1:
  2089  002B4C  0009               	tblrd		*+
  2090  002B4E  CFF5 FFEE          	movff	tablat,postinc0
  2091  002B52  50E5               	movf	postdec1,w,c
  2092  002B54  50E1               	movf	fsr1l,w,c
  2093  002B56  E1FA               	bnz	copy_data1
  2094                           
  2095                           ; Initialize objects allocated to BANK1 (129 bytes)
  2096                           ; load TBLPTR registers with __pidataBANK1
  2097  002B58  0EA0               	movlw	low __pidataBANK1
  2098  002B5A  6EF6               	movwf	tblptrl,c
  2099  002B5C  0E30               	movlw	high __pidataBANK1
  2100  002B5E  6EF7               	movwf	tblptrh,c
  2101  002B60  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2102  002B62  6EF8               	movwf	tblptru,c
  2103  002B64  EE01  F000         	lfsr	0,__pdataBANK1
  2104  002B68  EE10 F081          	lfsr	1,129
  2105  002B6C                     copy_data2:
  2106  002B6C  0009               	tblrd		*+
  2107  002B6E  CFF5 FFEE          	movff	tablat,postinc0
  2108  002B72  50E5               	movf	postdec1,w,c
  2109  002B74  50E1               	movf	fsr1l,w,c
  2110  002B76  E1FA               	bnz	copy_data2
  2111                           
  2112                           ; Initialize objects allocated to BANK0 (2 bytes)
  2113                           ; load TBLPTR registers with __pidataBANK0
  2114  002B78  0EF6               	movlw	low __pidataBANK0
  2115  002B7A  6EF6               	movwf	tblptrl,c
  2116  002B7C  0E3D               	movlw	high __pidataBANK0
  2117  002B7E  6EF7               	movwf	tblptrh,c
  2118  002B80  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2119  002B82  6EF8               	movwf	tblptru,c
  2120  002B84  0009               	tblrd		*+	;fetch initializer
  2121  002B86  CFF5 F0BD          	movff	tablat,__pdataBANK0
  2122  002B8A  0009               	tblrd		*+	;fetch initializer
  2123  002B8C  CFF5 F0BE          	movff	tablat,__pdataBANK0+1
  2124                           
  2125                           ; Clear objects allocated to BANK4 (200 bytes)
  2126  002B90  EE04  F000         	lfsr	0,__pbssBANK4
  2127  002B94  0EC8               	movlw	200
  2128  002B96                     clear_0:
  2129  002B96  6AEE               	clrf	postinc0,c
  2130  002B98  06E8               	decf	wreg,f,c
  2131  002B9A  E1FD               	bnz	clear_0
  2132                           
  2133                           ; Clear objects allocated to BANK3 (100 bytes)
  2134  002B9C  EE03  F080         	lfsr	0,__pbssBANK3
  2135  002BA0  0E64               	movlw	100
  2136  002BA2                     clear_1:
  2137  002BA2  6AEE               	clrf	postinc0,c
  2138  002BA4  06E8               	decf	wreg,f,c
  2139  002BA6  E1FD               	bnz	clear_1
  2140                           
  2141                           ; Clear objects allocated to BANK2 (175 bytes)
  2142  002BA8  EE02  F000         	lfsr	0,__pbssBANK2
  2143  002BAC  0EAF               	movlw	175
  2144  002BAE                     clear_2:
  2145  002BAE  6AEE               	clrf	postinc0,c
  2146  002BB0  06E8               	decf	wreg,f,c
  2147  002BB2  E1FD               	bnz	clear_2
  2148                           
  2149                           ; Clear objects allocated to BANK1 (99 bytes)
  2150  002BB4  EE01  F081         	lfsr	0,__pbssBANK1
  2151  002BB8  0E63               	movlw	99
  2152  002BBA                     clear_3:
  2153  002BBA  6AEE               	clrf	postinc0,c
  2154  002BBC  06E8               	decf	wreg,f,c
  2155  002BBE  E1FD               	bnz	clear_3
  2156                           
  2157                           ; Clear objects allocated to BANK0 (24 bytes)
  2158  002BC0  EE00  F0A3         	lfsr	0,__pbssBANK0
  2159  002BC4  0E18               	movlw	24
  2160  002BC6                     clear_4:
  2161  002BC6  6AEE               	clrf	postinc0,c
  2162  002BC8  06E8               	decf	wreg,f,c
  2163  002BCA  E1FD               	bnz	clear_4
  2164                           
  2165                           ; Clear objects allocated to COMRAM (4 bytes)
  2166  002BCC  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2167  002BCE  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2168  002BD0  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2169  002BD2  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2170  002BD4                     end_of_initialization:
  2171                           	opt callstack 0
  2172  002BD4                     __end_of__initialization:
  2173                           	opt callstack 0
  2174  002BD4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2175  002BD6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2176  002BD8  0100               	movlb	0
  2177  002BDA  EF54  F012         	goto	_main	;jump to C main() function
  2178                           
  2179                           	psect	bssCOMRAM
  2180  000057                     __pbssCOMRAM:
  2181                           	opt callstack 0
  2182  000057                     _flags:
  2183                           	opt callstack 0
  2184  000057                     	ds	2
  2185  000059                     _eusart1RxHead:
  2186                           	opt callstack 0
  2187  000059                     	ds	1
  2188  00005A                     _eusart2RxHead:
  2189                           	opt callstack 0
  2190  00005A                     	ds	1
  2191                           
  2192                           	psect	bssBANK0
  2193  0000A3                     __pbssBANK0:
  2194                           	opt callstack 0
  2195  0000A3                     _width:
  2196                           	opt callstack 0
  2197  0000A3                     	ds	2
  2198  0000A5                     _prec:
  2199                           	opt callstack 0
  2200  0000A5                     	ds	2
  2201  0000A7                     _ByteHi:
  2202                           	opt callstack 0
  2203  0000A7                     	ds	2
  2204  0000A9                     _MBResCnt:
  2205                           	opt callstack 0
  2206  0000A9                     	ds	2
  2207  0000AB                     _ByteNum:
  2208                           	opt callstack 0
  2209  0000AB                     	ds	2
  2210  0000AD                     _ModDataCnt:
  2211                           	opt callstack 0
  2212  0000AD                     	ds	2
  2213  0000AF                     _RXStat:
  2214                           	opt callstack 0
  2215  0000AF                     	ds	1
  2216  0000B0                     _Debug:
  2217                           	opt callstack 0
  2218  0000B0                     	ds	1
  2219  0000B1                     _eusart1RxLastError:
  2220                           	opt callstack 0
  2221  0000B1                     	ds	1
  2222  0000B2                     _eusart1RxCount:
  2223                           	opt callstack 0
  2224  0000B2                     	ds	1
  2225  0000B3                     _eusart1RxTail:
  2226                           	opt callstack 0
  2227  0000B3                     	ds	1
  2228  0000B4                     _eusart1TxTail:
  2229                           	opt callstack 0
  2230  0000B4                     	ds	1
  2231  0000B5                     _eusart1TxHead:
  2232                           	opt callstack 0
  2233  0000B5                     	ds	1
  2234  0000B6                     _eusart2RxLastError:
  2235                           	opt callstack 0
  2236  0000B6                     	ds	1
  2237  0000B7                     _eusart2RxCount:
  2238                           	opt callstack 0
  2239  0000B7                     	ds	1
  2240  0000B8                     _eusart2RxTail:
  2241                           	opt callstack 0
  2242  0000B8                     	ds	1
  2243  0000B9                     _eusart2TxTail:
  2244                           	opt callstack 0
  2245  0000B9                     	ds	1
  2246  0000BA                     _eusart2TxHead:
  2247                           	opt callstack 0
  2248  0000BA                     	ds	1
  2249                           
  2250                           	psect	dataBANK0
  2251  0000BD                     __pdataBANK0:
  2252                           	opt callstack 0
  2253  0000BD                     _ByteLo:
  2254                           	opt callstack 0
  2255  0000BD                     	ds	2
  2256                           
  2257                           	psect	bssBANK1
  2258  000181                     __pbssBANK1:
  2259                           	opt callstack 0
  2260  000181                     _eusart2RxStatusBuffer:
  2261                           	opt callstack 0
  2262  000181                     	ds	32
  2263  0001A1                     _eusart1TxBuffer:
  2264                           	opt callstack 0
  2265  0001A1                     	ds	16
  2266  0001B1                     _nout:
  2267                           	opt callstack 0
  2268  0001B1                     	ds	2
  2269  0001B3                     _rxStatus:
  2270                           	opt callstack 0
  2271  0001B3                     	ds	1
  2272  0001B4                     _dbuf:
  2273                           	opt callstack 0
  2274  0001B4                     	ds	32
  2275  0001D4                     _Command:
  2276                           	opt callstack 0
  2277  0001D4                     	ds	16
  2278                           
  2279                           	psect	dataBANK1
  2280  000100                     __pdataBANK1:
  2281                           	opt callstack 0
  2282  000100                     _MB301xx:
  2283                           	opt callstack 0
  2284  000100                     	ds	14
  2285  00010E                     _MB304xx:
  2286                           	opt callstack 0
  2287  00010E                     	ds	10
  2288  000118                     _MB303xx:
  2289                           	opt callstack 0
  2290  000118                     	ds	10
  2291  000122                     stoa@F1139:
  2292                           	opt callstack 0
  2293  000122                     	ds	7
  2294  000129                     _MB307xx:
  2295                           	opt callstack 0
  2296  000129                     	ds	6
  2297  00012F                     _MB305xx:
  2298                           	opt callstack 0
  2299  00012F                     	ds	6
  2300  000135                     _MB306xx:
  2301                           	opt callstack 0
  2302  000135                     	ds	4
  2303  000139                     ReadRX232@F10714:
  2304                           	opt callstack 0
  2305  000139                     	ds	2
  2306  00013B                     _MBResCRC:
  2307                           	opt callstack 0
  2308  00013B                     	ds	2
  2309  00013D                     _ExpectedBytes:
  2310                           	opt callstack 0
  2311  00013D                     	ds	2
  2312  00013F                     _MB302xx:
  2313                           	opt callstack 0
  2314  00013F                     	ds	2
  2315  000141                     _MBRespon:
  2316                           	opt callstack 0
  2317  000141                     	ds	64
  2318                           
  2319                           	psect	bssBANK2
  2320  000200                     __pbssBANK2:
  2321                           	opt callstack 0
  2322  000200                     _ModbusData:
  2323                           	opt callstack 0
  2324  000200                     	ds	100
  2325  000264                     _eusart2RxBuffer:
  2326                           	opt callstack 0
  2327  000264                     	ds	32
  2328  000284                     _eusart2TxBuffer:
  2329                           	opt callstack 0
  2330  000284                     	ds	32
  2331  0002A4                     	ds	11
  2332                           
  2333                           	psect	dataBANK2
  2334  0002AF                     __pdataBANK2:
  2335                           	opt callstack 0
  2336  0002AF                     ValidateCmd@F10738:
  2337                           	opt callstack 0
  2338  0002AF                     	ds	20
  2339  0002C3                     ValidateCmd@F10735:
  2340                           	opt callstack 0
  2341  0002C3                     	ds	20
  2342  0002D7                     ValidateCmd@F10732:
  2343                           	opt callstack 0
  2344  0002D7                     	ds	20
  2345                           
  2346                           	psect	bssBANK3
  2347  000380                     __pbssBANK3:
  2348                           	opt callstack 0
  2349  000380                     _eusart1RxStatusBuffer:
  2350                           	opt callstack 0
  2351  000380                     	ds	100
  2352                           
  2353                           	psect	dataBANK3
  2354  000300                     __pdataBANK3:
  2355                           	opt callstack 0
  2356  000300                     _MB400xx:
  2357                           	opt callstack 0
  2358  000300                     	ds	64
  2359  000340                     _MB300xx:
  2360                           	opt callstack 0
  2361  000340                     	ds	64
  2362                           
  2363                           	psect	bssBANK4
  2364  000400                     __pbssBANK4:
  2365                           	opt callstack 0
  2366  000400                     _rxData:
  2367                           	opt callstack 0
  2368  000400                     	ds	100
  2369  000464                     _eusart1RxBuffer:
  2370                           	opt callstack 0
  2371  000464                     	ds	100
  2372                           
  2373                           	psect	cstackBANK5
  2374  000500                     __pcstackBANK5:
  2375                           	opt callstack 0
  2376  000500                     ValidateCmd@ConfName:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 20 bytes @ 0x0
  2380  000500                     	ds	20
  2381  000514                     ValidateCmd@ConfName_1449:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 20 bytes @ 0x14
  2385  000514                     	ds	20
  2386  000528                     ValidateCmd@ConfName_1453:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 20 bytes @ 0x28
  2390  000528                     	ds	20
  2391                           
  2392                           	psect	cstackBANK0
  2393  000060                     __pcstackBANK0:
  2394                           	opt callstack 0
  2395  000060                     vfpfcnvrt@ll:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 8 bytes @ 0x0
  2399  000060                     	ds	8
  2400  000068                     vfpfcnvrt@cp:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x8
  2404  000068                     	ds	2
  2405  00006A                     vfpfcnvrt@c:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 1 bytes @ 0xA
  2409  00006A                     	ds	1
  2410  00006B                     vfpfcnvrt@done:
  2411                           	opt callstack 0
  2412                           
  2413                           ; 2 bytes @ 0xB
  2414  00006B                     	ds	2
  2415  00006D                     _vfpfcnvrt$1572:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 2 bytes @ 0xD
  2419  00006D                     	ds	2
  2420  00006F                     vfpfcnvrt@llu:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 8 bytes @ 0xF
  2424  00006F                     	ds	8
  2425  000077                     ?_vfprintf:
  2426                           	opt callstack 0
  2427  000077                     vfprintf@fp:
  2428                           	opt callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x17
  2431  000077                     	ds	2
  2432  000079                     vfprintf@fmt:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x19
  2436  000079                     	ds	2
  2437  00007B                     vfprintf@ap:
  2438                           	opt callstack 0
  2439                           
  2440                           ; 2 bytes @ 0x1B
  2441  00007B                     	ds	2
  2442  00007D                     ?_printf:
  2443                           	opt callstack 0
  2444  00007D                     printf@fmt:
  2445                           	opt callstack 0
  2446                           
  2447                           ; 2 bytes @ 0x1D
  2448  00007D                     	ds	12
  2449  000089                     printf@ap:
  2450                           	opt callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x29
  2453  000089                     	ds	2
  2454  00008B                     ??_checkCRC:
  2455  00008B                     ?_ReadRX232:
  2456                           	opt callstack 0
  2457  00008B                     AddRxBuffToModBus@i:
  2458                           	opt callstack 0
  2459  00008B                     PrintModbus@i:
  2460                           	opt callstack 0
  2461  00008B                     PrintModRespon@i:
  2462                           	opt callstack 0
  2463  00008B                     ReadRX232@NumChars:
  2464                           	opt callstack 0
  2465  00008B                     ClearEEAddRange@StartAdd:
  2466                           	opt callstack 0
  2467  00008B                     InitialiseString@SerialNum:
  2468                           	opt callstack 0
  2469                           
  2470                           ; 11 bytes @ 0x2B
  2471  00008B                     	ds	2
  2472  00008D                     ??_ModbusFC03:
  2473  00008D                     ??_ModbusFC10:
  2474  00008D                     ModbusError@ErrorCode:
  2475                           	opt callstack 0
  2476  00008D                     ClearEEAddRange@NumBytes:
  2477                           	opt callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x2D
  2480  00008D                     	ds	2
  2481  00008F                     ??_ModbusError:
  2482  00008F                     SaveCardDat@Name:
  2483                           	opt callstack 0
  2484                           
  2485                           ; 2 bytes @ 0x2F
  2486  00008F                     	ds	1
  2487  000090                     checkCRC@crcHigh:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 2 bytes @ 0x30
  2491  000090                     	ds	1
  2492  000091                     ModbusFC03@i:
  2493                           	opt callstack 0
  2494  000091                     ModbusFC10@TempData:
  2495                           	opt callstack 0
  2496  000091                     SaveCardDat@MBAddress:
  2497                           	opt callstack 0
  2498                           
  2499                           ; 2 bytes @ 0x31
  2500  000091                     	ds	1
  2501  000092                     checkCRC@crcLow:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x32
  2505  000092                     	ds	1
  2506  000093                     ModbusFC10@i:
  2507                           	opt callstack 0
  2508  000093                     SaveCardDat@dataeeAddr:
  2509                           	opt callstack 0
  2510                           
  2511                           ; 2 bytes @ 0x33
  2512  000093                     	ds	1
  2513  000094                     checkCRC@j:
  2514                           	opt callstack 0
  2515                           
  2516                           ; 2 bytes @ 0x34
  2517  000094                     	ds	1
  2518  000095                     ModbusFC10@j:
  2519                           	opt callstack 0
  2520  000095                     SaveCardDat@NumBytes:
  2521                           	opt callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x35
  2524  000095                     	ds	1
  2525  000096                     checkCRC@crc:
  2526                           	opt callstack 0
  2527                           
  2528                           ; 2 bytes @ 0x36
  2529  000096                     	ds	1
  2530  000097                     ??_SaveCardDat:
  2531                           
  2532                           ; 1 bytes @ 0x37
  2533  000097                     	ds	1
  2534  000098                     checkCRC@i:
  2535                           	opt callstack 0
  2536                           
  2537                           ; 2 bytes @ 0x38
  2538  000098                     	ds	1
  2539  000099                     _SaveCardDat$2436:
  2540                           	opt callstack 0
  2541                           
  2542                           ; 2 bytes @ 0x39
  2543  000099                     	ds	2
  2544  00009B                     SaveCardDat@readData:
  2545                           	opt callstack 0
  2546                           
  2547                           ; 1 bytes @ 0x3B
  2548  00009B                     	ds	1
  2549  00009C                     SaveCardDat@Conf:
  2550                           	opt callstack 0
  2551                           
  2552                           ; 1 bytes @ 0x3C
  2553  00009C                     	ds	1
  2554  00009D                     SaveCardDat@dataeeAddrWrk:
  2555                           	opt callstack 0
  2556                           
  2557                           ; 2 bytes @ 0x3D
  2558  00009D                     	ds	2
  2559  00009F                     SaveCardDat@i:
  2560                           	opt callstack 0
  2561                           
  2562                           ; 2 bytes @ 0x3F
  2563  00009F                     	ds	2
  2564  0000A1                     ??_main:
  2565                           
  2566                           ; 1 bytes @ 0x41
  2567  0000A1                     	ds	2
  2568                           
  2569                           	psect	cstackCOMRAM
  2570  000001                     __pcstackCOMRAM:
  2571                           	opt callstack 0
  2572  000001                     ??_INTERRUPT_InterruptManager:
  2573  000001                     
  2574                           ; 1 bytes @ 0x0
  2575  000001                     	ds	4
  2576  000005                     ??_ClearRxBuff:
  2577  000005                     ?_generateCRC:
  2578                           	opt callstack 0
  2579  000005                     ?_strlen:
  2580                           	opt callstack 0
  2581  000005                     ?_strcmp:
  2582                           	opt callstack 0
  2583  000005                     ?_isupper:
  2584                           	opt callstack 0
  2585  000005                     ?_isalpha:
  2586                           	opt callstack 0
  2587  000005                     ?_isdigit:
  2588                           	opt callstack 0
  2589  000005                     ?_isspace:
  2590                           	opt callstack 0
  2591  000005                     ?_islower:
  2592                           	opt callstack 0
  2593  000005                     ?___wmul:
  2594                           	opt callstack 0
  2595  000005                     ?___aodiv:
  2596                           	opt callstack 0
  2597  000005                     ?___aomod:
  2598                           	opt callstack 0
  2599  000005                     ?___lodiv:
  2600                           	opt callstack 0
  2601  000005                     ?___lomod:
  2602                           	opt callstack 0
  2603  000005                     EUSART2_Read@readValue:
  2604                           	opt callstack 0
  2605  000005                     EUSART2_Write@txData:
  2606                           	opt callstack 0
  2607  000005                     EUSART1_Read@readValue:
  2608                           	opt callstack 0
  2609  000005                     EUSART1_Write@txData:
  2610                           	opt callstack 0
  2611  000005                     DATAEE_WriteByte@bAdd:
  2612                           	opt callstack 0
  2613  000005                     DATAEE_ReadByte@bAdd:
  2614                           	opt callstack 0
  2615  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  2616                           	opt callstack 0
  2617  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  2618                           	opt callstack 0
  2619  000005                     EUSART2_SetErrorHandler@interruptHandler:
  2620                           	opt callstack 0
  2621  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2622                           	opt callstack 0
  2623  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2624                           	opt callstack 0
  2625  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2626                           	opt callstack 0
  2627  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2628                           	opt callstack 0
  2629  000005                     EUSART1_SetErrorHandler@interruptHandler:
  2630                           	opt callstack 0
  2631  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  2632                           	opt callstack 0
  2633  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  2634                           	opt callstack 0
  2635  000005                     ClearModbusData@i:
  2636                           	opt callstack 0
  2637  000005                     generateCRC@MessCnt:
  2638                           	opt callstack 0
  2639  000005                     ClearModbusRespon@i:
  2640                           	opt callstack 0
  2641  000005                     ___wmul@multiplier:
  2642                           	opt callstack 0
  2643  000005                     isalpha@c:
  2644                           	opt callstack 0
  2645  000005                     isdigit@c:
  2646                           	opt callstack 0
  2647  000005                     isspace@c:
  2648                           	opt callstack 0
  2649  000005                     isupper@c:
  2650                           	opt callstack 0
  2651  000005                     strcmp@l:
  2652                           	opt callstack 0
  2653  000005                     strlen@s:
  2654                           	opt callstack 0
  2655  000005                     islower@c:
  2656                           	opt callstack 0
  2657  000005                     ___aodiv@dividend:
  2658                           	opt callstack 0
  2659  000005                     ___aomod@dividend:
  2660                           	opt callstack 0
  2661  000005                     ___lodiv@dividend:
  2662                           	opt callstack 0
  2663  000005                     ___lomod@dividend:
  2664                           	opt callstack 0
  2665                           
  2666                           ; 8 bytes @ 0x4
  2667  000005                     	ds	1
  2668  000006                     putch@txData:
  2669                           	opt callstack 0
  2670  000006                     ClearRxBuff@i:
  2671                           	opt callstack 0
  2672  000006                     UART1_Write_string@data:
  2673                           	opt callstack 0
  2674                           
  2675                           ; 2 bytes @ 0x5
  2676  000006                     	ds	1
  2677  000007                     ??_isupper:
  2678  000007                     ??_isalpha:
  2679  000007                     ??_isdigit:
  2680  000007                     ??_isspace:
  2681  000007                     ??_islower:
  2682  000007                     DATAEE_WriteByte@bData:
  2683                           	opt callstack 0
  2684  000007                     generateCRC@HiOrLo:
  2685                           	opt callstack 0
  2686  000007                     SerIni@SerialNum:
  2687                           	opt callstack 0
  2688  000007                     ___wmul@multiplicand:
  2689                           	opt callstack 0
  2690  000007                     fputc@c:
  2691                           	opt callstack 0
  2692  000007                     strcmp@r:
  2693                           	opt callstack 0
  2694  000007                     strlen@a:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 2 bytes @ 0x6
  2698  000007                     	ds	1
  2699  000008                     ??_generateCRC:
  2700  000008                     DATAEE_WriteByte@GIEBitValue:
  2701                           	opt callstack 0
  2702  000008                     UART1_Write_string@data_len:
  2703                           	opt callstack 0
  2704                           
  2705                           ; 2 bytes @ 0x7
  2706  000008                     	ds	1
  2707  000009                     ??_strcmp:
  2708  000009                     ??_SerIni:
  2709  000009                     ___wmul@product:
  2710                           	opt callstack 0
  2711  000009                     memmove@d1:
  2712                           	opt callstack 0
  2713  000009                     fputc@fp:
  2714                           	opt callstack 0
  2715  000009                     strcpy@dest:
  2716                           	opt callstack 0
  2717                           
  2718                           ; 2 bytes @ 0x8
  2719  000009                     	ds	1
  2720  00000A                     ??_UART1_Write_string:
  2721  00000A                     generateCRC@crcHigh:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x9
  2725  00000A                     	ds	1
  2726  00000B                     ??_fputc:
  2727  00000B                     ?_toupper:
  2728                           	opt callstack 0
  2729  00000B                     _isspace$2059:
  2730                           	opt callstack 0
  2731  00000B                     UART1_Write_string@i:
  2732                           	opt callstack 0
  2733  00000B                     SerIni@dataeeAddrWrk:
  2734                           	opt callstack 0
  2735  00000B                     memmove@s1:
  2736                           	opt callstack 0
  2737  00000B                     strcpy@src:
  2738                           	opt callstack 0
  2739  00000B                     toupper@c:
  2740                           	opt callstack 0
  2741                           
  2742                           ; 2 bytes @ 0xA
  2743  00000B                     	ds	1
  2744  00000C                     ?_atoi:
  2745                           	opt callstack 0
  2746  00000C                     generateCRC@crcLow:
  2747                           	opt callstack 0
  2748  00000C                     atoi@s:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 2 bytes @ 0xB
  2752  00000C                     	ds	1
  2753  00000D                     ??_strcpy:
  2754  00000D                     ??_toupper:
  2755  00000D                     SerIni@readDataOdd:
  2756                           	opt callstack 0
  2757  00000D                     memmove@n:
  2758                           	opt callstack 0
  2759  00000D                     ___aodiv@divisor:
  2760                           	opt callstack 0
  2761  00000D                     ___aomod@divisor:
  2762                           	opt callstack 0
  2763  00000D                     ___lodiv@divisor:
  2764                           	opt callstack 0
  2765  00000D                     ___lomod@divisor:
  2766                           	opt callstack 0
  2767                           
  2768                           ; 8 bytes @ 0xC
  2769  00000D                     	ds	1
  2770  00000E                     ??_atoi:
  2771  00000E                     SerIni@readDataEven:
  2772                           	opt callstack 0
  2773  00000E                     generateCRC@i:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 2 bytes @ 0xD
  2777  00000E                     	ds	1
  2778  00000F                     ??_memmove:
  2779  00000F                     SerIni@i:
  2780                           	opt callstack 0
  2781  00000F                     strcpy@s:
  2782                           	opt callstack 0
  2783                           
  2784                           ; 2 bytes @ 0xE
  2785  00000F                     	ds	1
  2786  000010                     ?_stoa:
  2787                           	opt callstack 0
  2788  000010                     generateCRC@j:
  2789                           	opt callstack 0
  2790  000010                     stoa@fp:
  2791                           	opt callstack 0
  2792  000010                     fputs@s:
  2793                           	opt callstack 0
  2794                           
  2795                           ; 2 bytes @ 0xF
  2796  000010                     	ds	1
  2797  000011                     SerIni@j:
  2798                           	opt callstack 0
  2799  000011                     memmove@d:
  2800                           	opt callstack 0
  2801  000011                     strcpy@d:
  2802                           	opt callstack 0
  2803  000011                     _toupper$2146:
  2804                           	opt callstack 0
  2805                           
  2806                           ; 2 bytes @ 0x10
  2807  000011                     	ds	1
  2808  000012                     generateCRC@crc:
  2809                           	opt callstack 0
  2810  000012                     stoa@s:
  2811                           	opt callstack 0
  2812  000012                     atoi@neg:
  2813                           	opt callstack 0
  2814  000012                     fputs@fp:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 2 bytes @ 0x11
  2818  000012                     	ds	1
  2819  000013                     memmove@s:
  2820                           	opt callstack 0
  2821  000013                     strcat@dest:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x12
  2825  000013                     	ds	1
  2826  000014                     ??_stoa:
  2827  000014                     fputs@c:
  2828                           	opt callstack 0
  2829  000014                     _atoi$2032:
  2830                           	opt callstack 0
  2831                           
  2832                           ; 2 bytes @ 0x13
  2833  000014                     	ds	1
  2834  000015                     ___aodiv@counter:
  2835                           	opt callstack 0
  2836  000015                     ___aomod@counter:
  2837                           	opt callstack 0
  2838  000015                     ___lomod@counter:
  2839                           	opt callstack 0
  2840  000015                     fputs@i:
  2841                           	opt callstack 0
  2842  000015                     strcat@src:
  2843                           	opt callstack 0
  2844  000015                     stoa@nuls:
  2845                           	opt callstack 0
  2846  000015                     ___lodiv@quotient:
  2847                           	opt callstack 0
  2848                           
  2849                           ; 8 bytes @ 0x14
  2850  000015                     	ds	1
  2851  000016                     ___aodiv@sign:
  2852                           	opt callstack 0
  2853  000016                     ___aomod@sign:
  2854                           	opt callstack 0
  2855  000016                     _atoi$2034:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 2 bytes @ 0x15
  2859  000016                     	ds	1
  2860  000017                     ?_abs:
  2861                           	opt callstack 0
  2862  000017                     ?_pad:
  2863                           	opt callstack 0
  2864  000017                     pad@fp:
  2865                           	opt callstack 0
  2866  000017                     abs@a:
  2867                           	opt callstack 0
  2868  000017                     ___aodiv@quotient:
  2869                           	opt callstack 0
  2870                           
  2871                           ; 8 bytes @ 0x16
  2872  000017                     	ds	1
  2873  000018                     _atoi$2033:
  2874                           	opt callstack 0
  2875                           
  2876                           ; 1 bytes @ 0x17
  2877  000018                     	ds	1
  2878  000019                     ??_abs:
  2879  000019                     pad@buf:
  2880                           	opt callstack 0
  2881  000019                     atoi@n:
  2882                           	opt callstack 0
  2883                           
  2884                           ; 2 bytes @ 0x18
  2885  000019                     	ds	2
  2886  00001B                     pad@p:
  2887                           	opt callstack 0
  2888                           
  2889                           ; 2 bytes @ 0x1A
  2890  00001B                     	ds	1
  2891  00001C                     stoa@i:
  2892                           	opt callstack 0
  2893                           
  2894                           ; 2 bytes @ 0x1B
  2895  00001C                     	ds	1
  2896  00001D                     ??_pad:
  2897  00001D                     ___lodiv@counter:
  2898                           	opt callstack 0
  2899                           
  2900                           ; 1 bytes @ 0x1C
  2901  00001D                     	ds	1
  2902  00001E                     pad@i:
  2903                           	opt callstack 0
  2904  00001E                     stoa@w:
  2905                           	opt callstack 0
  2906                           
  2907                           ; 2 bytes @ 0x1D
  2908  00001E                     	ds	2
  2909  000020                     pad@w:
  2910                           	opt callstack 0
  2911  000020                     stoa@cp:
  2912                           	opt callstack 0
  2913                           
  2914                           ; 2 bytes @ 0x1F
  2915  000020                     	ds	2
  2916  000022                     ?_dtoa:
  2917                           	opt callstack 0
  2918  000022                     ?_utoa:
  2919                           	opt callstack 0
  2920  000022                     ?_xtoa:
  2921                           	opt callstack 0
  2922  000022                     dtoa@fp:
  2923                           	opt callstack 0
  2924  000022                     stoa@p:
  2925                           	opt callstack 0
  2926  000022                     utoa@fp:
  2927                           	opt callstack 0
  2928  000022                     xtoa@fp:
  2929                           	opt callstack 0
  2930                           
  2931                           ; 2 bytes @ 0x21
  2932  000022                     	ds	2
  2933  000024                     stoa@l:
  2934                           	opt callstack 0
  2935  000024                     dtoa@d:
  2936                           	opt callstack 0
  2937  000024                     utoa@d:
  2938                           	opt callstack 0
  2939  000024                     xtoa@d:
  2940                           	opt callstack 0
  2941                           
  2942                           ; 8 bytes @ 0x23
  2943  000024                     	ds	8
  2944  00002C                     ??_dtoa:
  2945  00002C                     ??_utoa:
  2946  00002C                     xtoa@x:
  2947                           	opt callstack 0
  2948                           
  2949                           ; 1 bytes @ 0x2B
  2950  00002C                     	ds	1
  2951  00002D                     ??_xtoa:
  2952                           
  2953                           ; 1 bytes @ 0x2C
  2954  00002D                     	ds	7
  2955  000034                     _dtoa$1528:
  2956                           	opt callstack 0
  2957  000034                     utoa@p:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x33
  2961  000034                     	ds	1
  2962  000035                     _xtoa$1557:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x34
  2966  000035                     	ds	1
  2967  000036                     dtoa@p:
  2968                           	opt callstack 0
  2969  000036                     utoa@w:
  2970                           	opt callstack 0
  2971                           
  2972                           ; 2 bytes @ 0x35
  2973  000036                     	ds	1
  2974  000037                     _xtoa$1558:
  2975                           	opt callstack 0
  2976                           
  2977                           ; 2 bytes @ 0x36
  2978  000037                     	ds	1
  2979  000038                     dtoa@w:
  2980                           	opt callstack 0
  2981  000038                     utoa@n:
  2982                           	opt callstack 0
  2983                           
  2984                           ; 8 bytes @ 0x37
  2985  000038                     	ds	1
  2986  000039                     xtoa@p:
  2987                           	opt callstack 0
  2988                           
  2989                           ; 2 bytes @ 0x38
  2990  000039                     	ds	1
  2991  00003A                     dtoa@s:
  2992                           	opt callstack 0
  2993                           
  2994                           ; 2 bytes @ 0x39
  2995  00003A                     	ds	1
  2996  00003B                     xtoa@w:
  2997                           	opt callstack 0
  2998                           
  2999                           ; 2 bytes @ 0x3A
  3000  00003B                     	ds	1
  3001  00003C                     dtoa@n:
  3002                           	opt callstack 0
  3003                           
  3004                           ; 8 bytes @ 0x3B
  3005  00003C                     	ds	1
  3006  00003D                     xtoa@n:
  3007                           	opt callstack 0
  3008                           
  3009                           ; 8 bytes @ 0x3C
  3010  00003D                     	ds	3
  3011  000040                     utoa@i:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x3F
  3015  000040                     	ds	4
  3016  000044                     dtoa@i:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 2 bytes @ 0x43
  3020  000044                     	ds	1
  3021  000045                     xtoa@i:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 2 bytes @ 0x44
  3025  000045                     	ds	2
  3026  000047                     xtoa@c:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 2 bytes @ 0x46
  3030  000047                     	ds	2
  3031  000049                     ?_vfpfcnvrt:
  3032                           	opt callstack 0
  3033  000049                     vfpfcnvrt@fp:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 2 bytes @ 0x48
  3037  000049                     	ds	2
  3038  00004B                     vfpfcnvrt@fmt:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 2 bytes @ 0x4A
  3042  00004B                     	ds	2
  3043  00004D                     vfpfcnvrt@ap:
  3044                           	opt callstack 0
  3045                           
  3046                           ; 2 bytes @ 0x4C
  3047  00004D                     	ds	2
  3048  00004F                     ??_vfpfcnvrt:
  3049                           
  3050                           ; 1 bytes @ 0x4E
  3051  00004F                     	ds	4
  3052  000053                     vfprintf@cfmt:
  3053                           	opt callstack 0
  3054                           
  3055                           ; 2 bytes @ 0x52
  3056  000053                     	ds	2
  3057  000055                     ??_PrintModbus:
  3058  000055                     ??_PrintModRespon:
  3059  000055                     ??_AddRxBuffToModBus:
  3060  000055                     PrintMB400@i:
  3061                           	opt callstack 0
  3062  000055                     ReadRX232@temp:
  3063                           	opt callstack 0
  3064  000055                     ClearEEAddRange@i:
  3065                           	opt callstack 0
  3066                           
  3067                           ; 2 bytes @ 0x54
  3068  000055                     	ds	1
  3069  000056                     ??_ModbusRx:
  3070                           
  3071                           ; 1 bytes @ 0x55
  3072  000056                     	ds	1
  3073  000057                     
  3074                           ; 1 bytes @ 0x56
  3075 ;;
  3076 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3077 ;;
  3078 ;; *************** function _main *****************
  3079 ;; Defined at:
  3080 ;;		line 29 in file "main.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  RXStat          1    0        _Bool 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3096 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;Total ram usage:        3 bytes
  3099 ;; Hardware stack levels required when called:   16
  3100 ;; This function calls:
  3101 ;;		_ClearModbusData
  3102 ;;		_ClearModbusRespon
  3103 ;;		_ClearRxBuff
  3104 ;;		_InitialiseString
  3105 ;;		_ModbusError
  3106 ;;		_ModbusFC03
  3107 ;;		_ModbusFC10
  3108 ;;		_ModbusRx
  3109 ;;		_PrintMB400
  3110 ;;		_PrintModRespon
  3111 ;;		_PrintModbus
  3112 ;;		_RXMode
  3113 ;;		_ReadRX232
  3114 ;;		_SYSTEM_Initialize
  3115 ;;		_ValidateCmd
  3116 ;;		_printf
  3117 ;;		_strcpy
  3118 ;; This function is called by:
  3119 ;;		Startup code after reset
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text0
  3124  0024A8                     __ptext0:
  3125                           	opt callstack 0
  3126  0024A8                     _main:
  3127                           	opt callstack 15
  3128  0024A8                     
  3129                           ;main.c: 32:     SYSTEM_Initialize();
  3130  0024A8  EC45  F01E         	call	_SYSTEM_Initialize	;wreg free
  3131  0024AC                     
  3132                           ;main.c: 39:     (INTCONbits.GIE = 1);
  3133  0024AC  8EF2               	bsf	242,7,c	;volatile
  3134  0024AE                     
  3135                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  3136  0024AE  8CF2               	bsf	242,6,c	;volatile
  3137  0024B0  9883               	bcf	131,4,c	;volatile
  3138  0024B2  9A83               	bcf	131,5,c	;volatile
  3139  0024B4  9C83               	bcf	131,6,c	;volatile
  3140  0024B6  9E83               	bcf	131,7,c	;volatile
  3141  0024B8                     
  3142                           ;main.c: 55:     InitialiseString();
  3143  0024B8  EC10  F017         	call	_InitialiseString	;wreg free
  3144  0024BC                     
  3145                           ;main.c: 58:     RXMode();
  3146  0024BC  ECEA  F01E         	call	_RXMode	;wreg free
  3147  0024C0                     
  3148                           ;main.c: 59:     ClearRxBuff();
  3149  0024C0  EC56  F01C         	call	_ClearRxBuff	;wreg free
  3150  0024C4                     
  3151                           ;main.c: 60:     ClearModbusRespon();
  3152  0024C4  EC0A  F01C         	call	_ClearModbusRespon	;wreg free
  3153  0024C8                     l7111:
  3154                           
  3155                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  3156  0024C8  ECCF  F00B         	call	_ModbusRx	;wreg free
  3157  0024CC  06E8               	decf	wreg,f,c
  3158  0024CE  A4D8               	btfss	status,2,c
  3159  0024D0  EF6C  F012         	goto	u7061
  3160  0024D4  EF6E  F012         	goto	u7060
  3161  0024D8                     u7061:
  3162  0024D8  EFBB  F012         	goto	l7133
  3163  0024DC                     u7060:
  3164  0024DC                     
  3165                           ;main.c: 70:             if(Debug == 1){
  3166  0024DC  0100               	movlb	0	; () banked
  3167  0024DE  05B0               	decf	_Debug& (0+255),w,b
  3168  0024E0  A4D8               	btfss	status,2,c
  3169  0024E2  EF75  F012         	goto	u7071
  3170  0024E6  EF77  F012         	goto	u7070
  3171  0024EA                     u7071:
  3172  0024EA  EF9A  F012         	goto	l7125
  3173  0024EE                     u7070:
  3174  0024EE                     
  3175                           ; BSR set to: 0
  3176                           ;main.c: 71:                 PrintModbus();
  3177  0024EE  EC8F  F019         	call	_PrintModbus	;wreg free
  3178  0024F2  EF9A  F012         	goto	l7125
  3179  0024F6                     l7117:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;main.c: 77:                 {;main.c: 81:                     ModbusFC03();
  3183  0024F6  EC5A  F003         	call	_ModbusFC03	;wreg free
  3184                           
  3185                           ;main.c: 82:                     break;
  3186  0024FA  EFB1  F012         	goto	l7127
  3187  0024FE                     l7119:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;main.c: 85:                 {;main.c: 86:                     printf("Function Code 0x1
      +                          0\r\n");
  3191  0024FE  0EC3               	movlw	low STR_1
  3192  002500  6F7D               	movwf	printf@fmt& (0+255),b
  3193  002502  0EFE               	movlw	high STR_1
  3194  002504  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3195  002506  ECFD  F01D         	call	_printf	;wreg free
  3196                           
  3197                           ;main.c: 88:                     PrintMB400();
  3198  00250A  EC3F  F01A         	call	_PrintMB400	;wreg free
  3199                           
  3200                           ;main.c: 89:                     ModbusFC10();
  3201  00250E  ECA9  F009         	call	_ModbusFC10	;wreg free
  3202                           
  3203                           ;main.c: 91:                     break;
  3204  002512  EFB1  F012         	goto	l7127
  3205  002516                     l7121:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;main.c: 94:                 {;main.c: 95:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  3209  002516  0ED0               	movlw	low STR_2
  3210  002518  6F7D               	movwf	printf@fmt& (0+255),b
  3211  00251A  0EFD               	movlw	high STR_2
  3212  00251C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3213  00251E  ECFD  F01D         	call	_printf	;wreg free
  3214                           
  3215                           ;main.c: 97:                     ModbusError(0x01);
  3216  002522  0E00               	movlw	0
  3217  002524  0100               	movlb	0	; () banked
  3218  002526  6F8E               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  3219  002528  0E01               	movlw	1
  3220  00252A  6F8D               	movwf	ModbusError@ErrorCode& (0+255),b
  3221  00252C  ECDE  F012         	call	_ModbusError	;wreg free
  3222                           
  3223                           ;main.c: 98:                     break;
  3224  002530  EFB1  F012         	goto	l7127
  3225  002534                     l7125:
  3226  002534  0102               	movlb	2	; () banked
  3227  002536  5101               	movf	(_ModbusData+1)& (0+255),w,b
  3228  002538  0100               	movlb	0	; () banked
  3229  00253A  6FA1               	movwf	??_main& (0+255),b
  3230  00253C  6BA2               	clrf	(??_main+1)& (0+255),b
  3231                           
  3232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3233                           ; Switch size 1, requested type "simple"
  3234                           ; Number of cases is 1, Range of values is 0 to 0
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte            4     3 (average)
  3238                           ;	Chosen strategy is simple_byte
  3239  00253E  51A2               	movf	(??_main+1)& (0+255),w,b
  3240  002540  0A00               	xorlw	0	; case 0
  3241  002542  B4D8               	btfsc	status,2,c
  3242  002544  EFA6  F012         	goto	l7255
  3243  002548  EF8B  F012         	goto	l7121
  3244  00254C                     l7255:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 2, Range of values is 3 to 16
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            7     4 (average)
  3252                           ;	Chosen strategy is simple_byte
  3253  00254C  51A1               	movf	??_main& (0+255),w,b
  3254  00254E  0A03               	xorlw	3	; case 3
  3255  002550  B4D8               	btfsc	status,2,c
  3256  002552  EF7B  F012         	goto	l7117
  3257  002556  0A13               	xorlw	19	; case 16
  3258  002558  B4D8               	btfsc	status,2,c
  3259  00255A  EF7F  F012         	goto	l7119
  3260  00255E  EF8B  F012         	goto	l7121
  3261  002562                     l7127:
  3262                           
  3263                           ;main.c: 102:             PrintModbus();
  3264  002562  EC8F  F019         	call	_PrintModbus	;wreg free
  3265                           
  3266                           ;main.c: 103:             PrintModRespon();
  3267  002566  EC67  F017         	call	_PrintModRespon	;wreg free
  3268  00256A                     
  3269                           ;main.c: 107:             ClearModbusData();
  3270  00256A  EC30  F01C         	call	_ClearModbusData	;wreg free
  3271  00256E                     
  3272                           ;main.c: 108:             ClearModbusRespon();
  3273  00256E  EC0A  F01C         	call	_ClearModbusRespon	;wreg free
  3274                           
  3275                           ;main.c: 110:         }else if(ReadRX232(16) != 0){
  3276  002572  EF64  F012         	goto	l7111
  3277  002576                     l7133:
  3278  002576  0E00               	movlw	0
  3279  002578  0100               	movlb	0	; () banked
  3280  00257A  6F8C               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  3281  00257C  0E10               	movlw	16
  3282  00257E  6F8B               	movwf	ReadRX232@NumChars& (0+255),b
  3283  002580  EC34  F011         	call	_ReadRX232	;wreg free
  3284  002584  0100               	movlb	0	; () banked
  3285  002586  518B               	movf	?_ReadRX232& (0+255),w,b
  3286  002588  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3287  00258A  B4D8               	btfsc	status,2,c
  3288  00258C  EFCA  F012         	goto	u7081
  3289  002590  EFCC  F012         	goto	u7080
  3290  002594                     u7081:
  3291  002594  EFDA  F012         	goto	l596
  3292  002598                     u7080:
  3293  002598                     
  3294                           ; BSR set to: 0
  3295                           ;main.c: 112:             if(ValidateCmd() ==1){
  3296  002598  ECA7  F00C         	call	_ValidateCmd	;wreg free
  3297  00259C                     
  3298                           ;main.c: 120:              strcpy(Command, "");
  3299  00259C  0ED4               	movlw	low _Command
  3300  00259E  6E09               	movwf	strcpy@dest^0,c
  3301  0025A0  0E01               	movlw	high _Command
  3302  0025A2  6E0A               	movwf	(strcpy@dest+1)^0,c
  3303  0025A4  0EC3               	movlw	low (STR_37+53)
  3304  0025A6  6E0B               	movwf	strcpy@src^0,c
  3305  0025A8  0EFB               	movlw	high (STR_37+53)
  3306  0025AA  6E0C               	movwf	(strcpy@src+1)^0,c
  3307  0025AC  ECA5  F01A         	call	_strcpy	;wreg free
  3308                           
  3309                           ;main.c: 122:         }else{
  3310  0025B0  EF64  F012         	goto	l7111
  3311  0025B4                     l596:
  3312                           
  3313                           ; BSR set to: 0
  3314  0025B4  EF64  F012         	goto	l7111
  3315  0025B8  EF93  F000         	goto	start
  3316  0025BC                     __end_of_main:
  3317                           	opt callstack 0
  3318                           
  3319 ;; *************** function _ValidateCmd *****************
  3320 ;; Defined at:
  3321 ;;		line 242 in file "RS232.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  ConfName       20   40[BANK5 ] unsigned char [20]
  3326 ;;  MaxChars        2    0        int 
  3327 ;;  ConfName       20   20[BANK5 ] unsigned char [20]
  3328 ;;  MaxChars        2    0        int 
  3329 ;;  ConfName       20    0[BANK5 ] unsigned char [20]
  3330 ;;  MaxChars        2    0        int 
  3331 ;;  i               2    0        int 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      _Bool 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0      68       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0      68       0       0       0       0       0       
      +0       0       0       0
  3345 ;;Total ram usage:       68 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:   15
  3348 ;; This function calls:
  3349 ;;		_InitialiseString
  3350 ;;		_SaveCardDat
  3351 ;;		_TogDebug
  3352 ;;		_printf
  3353 ;;		_strcmp
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text1
  3360  00194E                     __ptext1:
  3361                           	opt callstack 0
  3362  00194E                     _ValidateCmd:
  3363                           	opt callstack 15
  3364  00194E                     
  3365                           ;RS232.c: 247:     printf("\r\n Validating Command: %s \r\n" , Command);
  3366  00194E  0E5F               	movlw	low STR_55
  3367  001950  0100               	movlb	0	; () banked
  3368  001952  6F7D               	movwf	printf@fmt& (0+255),b
  3369  001954  0EFD               	movlw	high STR_55
  3370  001956  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3371  001958  0ED4               	movlw	low _Command
  3372  00195A  6F7F               	movwf	(?_printf+2)& (0+255),b
  3373  00195C  0E01               	movlw	high _Command
  3374  00195E  6F80               	movwf	(?_printf+3)& (0+255),b
  3375  001960  ECFD  F01D         	call	_printf	;wreg free
  3376  001964                     
  3377                           ;RS232.c: 249:     if(!strcmp(Command,"debug")){
  3378  001964  0ED4               	movlw	low _Command
  3379  001966  6E05               	movwf	strcmp@l^0,c
  3380  001968  0E01               	movlw	high _Command
  3381  00196A  6E06               	movwf	(strcmp@l+1)^0,c
  3382  00196C  0EEE               	movlw	low STR_56
  3383  00196E  6E07               	movwf	strcmp@r^0,c
  3384  001970  0EFF               	movlw	high STR_56
  3385  001972  6E08               	movwf	(strcmp@r+1)^0,c
  3386  001974  ECCB  F019         	call	_strcmp	;wreg free
  3387  001978  5005               	movf	?_strcmp^0,w,c
  3388  00197A  1006               	iorwf	(?_strcmp+1)^0,w,c
  3389  00197C  A4D8               	btfss	status,2,c
  3390  00197E  EFC3  F00C         	goto	u6981
  3391  001982  EFC5  F00C         	goto	u6980
  3392  001986                     u6981:
  3393  001986  EFCA  F00C         	goto	l7021
  3394  00198A                     u6980:
  3395  00198A                     
  3396                           ;RS232.c: 250:         TogDebug();
  3397  00198A  EC61  F01D         	call	_TogDebug	;wreg free
  3398  00198E                     l7015:
  3399                           
  3400                           ;RS232.c: 251:         return 1;
  3401  00198E  0E01               	movlw	1
  3402  001990  EF75  F00D         	goto	l934
  3403  001994                     l7021:
  3404  001994  0ED4               	movlw	low _Command
  3405  001996  6E05               	movwf	strcmp@l^0,c
  3406  001998  0E01               	movlw	high _Command
  3407  00199A  6E06               	movwf	(strcmp@l+1)^0,c
  3408  00199C  0EFD               	movlw	low STR_58
  3409  00199E  6E07               	movwf	strcmp@r^0,c
  3410  0019A0  0EFF               	movlw	high STR_58
  3411  0019A2  6E08               	movwf	(strcmp@r+1)^0,c
  3412  0019A4  ECCB  F019         	call	_strcmp	;wreg free
  3413  0019A8  5005               	movf	?_strcmp^0,w,c
  3414  0019AA  1006               	iorwf	(?_strcmp+1)^0,w,c
  3415  0019AC  A4D8               	btfss	status,2,c
  3416  0019AE  EFDB  F00C         	goto	u6991
  3417  0019B2  EFDD  F00C         	goto	u6990
  3418  0019B6                     u6991:
  3419  0019B6  EFE1  F00C         	goto	l7031
  3420  0019BA                     u6990:
  3421  0019BA                     l7023:
  3422                           
  3423                           ;RS232.c: 253:         InitialiseString();
  3424  0019BA  EC10  F017         	call	_InitialiseString	;wreg free
  3425  0019BE  EFC7  F00C         	goto	l7015
  3426  0019C2                     l7031:
  3427  0019C2  0ED4               	movlw	low _Command
  3428  0019C4  6E05               	movwf	strcmp@l^0,c
  3429  0019C6  0E01               	movlw	high _Command
  3430  0019C8  6E06               	movwf	(strcmp@l+1)^0,c
  3431  0019CA  0EE7               	movlw	low STR_60
  3432  0019CC  6E07               	movwf	strcmp@r^0,c
  3433  0019CE  0EFF               	movlw	high STR_60
  3434  0019D0  6E08               	movwf	(strcmp@r+1)^0,c
  3435  0019D2  ECCB  F019         	call	_strcmp	;wreg free
  3436  0019D6  5005               	movf	?_strcmp^0,w,c
  3437  0019D8  1006               	iorwf	(?_strcmp+1)^0,w,c
  3438  0019DA  A4D8               	btfss	status,2,c
  3439  0019DC  EFF2  F00C         	goto	u7001
  3440  0019E0  EFF4  F00C         	goto	u7000
  3441  0019E4                     u7001:
  3442  0019E4  EF12  F00D         	goto	l7047
  3443  0019E8                     u7000:
  3444  0019E8                     
  3445                           ;RS232.c: 257:         char ConfName[20] = "Serial Number";
  3446  0019E8  EE22  F0D7         	lfsr	2,ValidateCmd@F10732
  3447  0019EC  EE15  F000         	lfsr	1,ValidateCmd@ConfName
  3448  0019F0  0E13               	movlw	19
  3449  0019F2                     u7011:
  3450  0019F2  CFDB FFE3          	movff	plusw2,plusw1
  3451  0019F6  06E8               	decf	wreg,f,c
  3452  0019F8  E2FC               	bc	u7011
  3453  0019FA                     
  3454                           ;RS232.c: 263:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  3455  0019FA  0E00               	movlw	low ValidateCmd@ConfName
  3456  0019FC  0100               	movlb	0	; () banked
  3457  0019FE  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3458  001A00  0E05               	movlw	high ValidateCmd@ConfName
  3459  001A02  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3460  001A04  0E03               	movlw	3
  3461  001A06  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3462  001A08  0E00               	movlw	0
  3463  001A0A  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3464  001A0C  0E03               	movlw	3
  3465  001A0E  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3466  001A10  0E00               	movlw	0
  3467  001A12  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3468  001A14  0E00               	movlw	0
  3469  001A16  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3470  001A18  0E0A               	movlw	10
  3471  001A1A  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3472  001A1C  EC5F  F008         	call	_SaveCardDat	;wreg free
  3473  001A20  EFDD  F00C         	goto	l7023
  3474  001A24                     l7047:
  3475  001A24  0ED4               	movlw	low _Command
  3476  001A26  6E05               	movwf	strcmp@l^0,c
  3477  001A28  0E01               	movlw	high _Command
  3478  001A2A  6E06               	movwf	(strcmp@l+1)^0,c
  3479  001A2C  0EF4               	movlw	low STR_62
  3480  001A2E  6E07               	movwf	strcmp@r^0,c
  3481  001A30  0EFF               	movlw	high STR_62
  3482  001A32  6E08               	movwf	(strcmp@r+1)^0,c
  3483  001A34  ECCB  F019         	call	_strcmp	;wreg free
  3484  001A38  5005               	movf	?_strcmp^0,w,c
  3485  001A3A  1006               	iorwf	(?_strcmp+1)^0,w,c
  3486  001A3C  A4D8               	btfss	status,2,c
  3487  001A3E  EF23  F00D         	goto	u7021
  3488  001A42  EF25  F00D         	goto	u7020
  3489  001A46                     u7021:
  3490  001A46  EF43  F00D         	goto	l7061
  3491  001A4A                     u7020:
  3492  001A4A                     
  3493                           ;RS232.c: 271:         char ConfName[20] = "Part Number";
  3494  001A4A  EE22  F0C3         	lfsr	2,ValidateCmd@F10735
  3495  001A4E  EE15  F014         	lfsr	1,ValidateCmd@ConfName_1449
  3496  001A52  0E13               	movlw	19
  3497  001A54                     u7031:
  3498  001A54  CFDB FFE3          	movff	plusw2,plusw1
  3499  001A58  06E8               	decf	wreg,f,c
  3500  001A5A  E2FC               	bc	u7031
  3501  001A5C                     
  3502                           ;RS232.c: 273:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  3503  001A5C  0E14               	movlw	low ValidateCmd@ConfName_1449
  3504  001A5E  0100               	movlb	0	; () banked
  3505  001A60  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3506  001A62  0E05               	movlw	high ValidateCmd@ConfName_1449
  3507  001A64  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3508  001A66  0E01               	movlw	1
  3509  001A68  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3510  001A6A  0E00               	movlw	0
  3511  001A6C  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3512  001A6E  0E01               	movlw	1
  3513  001A70  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3514  001A72  0E00               	movlw	0
  3515  001A74  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3516  001A76  0E00               	movlw	0
  3517  001A78  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3518  001A7A  0E10               	movlw	16
  3519  001A7C  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3520  001A7E  EC5F  F008         	call	_SaveCardDat	;wreg free
  3521  001A82  EFC7  F00C         	goto	l7015
  3522  001A86                     l7061:
  3523  001A86  0ED4               	movlw	low _Command
  3524  001A88  6E05               	movwf	strcmp@l^0,c
  3525  001A8A  0E01               	movlw	high _Command
  3526  001A8C  6E06               	movwf	(strcmp@l+1)^0,c
  3527  001A8E  0EF9               	movlw	low STR_64
  3528  001A90  6E07               	movwf	strcmp@r^0,c
  3529  001A92  0EFF               	movlw	high STR_64
  3530  001A94  6E08               	movwf	(strcmp@r+1)^0,c
  3531  001A96  ECCB  F019         	call	_strcmp	;wreg free
  3532  001A9A  5005               	movf	?_strcmp^0,w,c
  3533  001A9C  1006               	iorwf	(?_strcmp+1)^0,w,c
  3534  001A9E  A4D8               	btfss	status,2,c
  3535  001AA0  EF54  F00D         	goto	u7041
  3536  001AA4  EF56  F00D         	goto	u7040
  3537  001AA8                     u7041:
  3538  001AA8  EF74  F00D         	goto	l7075
  3539  001AAC                     u7040:
  3540  001AAC                     
  3541                           ;RS232.c: 281:         char ConfName[20] = "Revision";
  3542  001AAC  EE22  F0AF         	lfsr	2,ValidateCmd@F10738
  3543  001AB0  EE15  F028         	lfsr	1,ValidateCmd@ConfName_1453
  3544  001AB4  0E13               	movlw	19
  3545  001AB6                     u7051:
  3546  001AB6  CFDB FFE3          	movff	plusw2,plusw1
  3547  001ABA  06E8               	decf	wreg,f,c
  3548  001ABC  E2FC               	bc	u7051
  3549  001ABE                     
  3550                           ;RS232.c: 285:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  3551  001ABE  0E28               	movlw	low ValidateCmd@ConfName_1453
  3552  001AC0  0100               	movlb	0	; () banked
  3553  001AC2  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3554  001AC4  0E05               	movlw	high ValidateCmd@ConfName_1453
  3555  001AC6  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3556  001AC8  0E02               	movlw	2
  3557  001ACA  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3558  001ACC  0E00               	movlw	0
  3559  001ACE  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3560  001AD0  0E02               	movlw	2
  3561  001AD2  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3562  001AD4  0E00               	movlw	0
  3563  001AD6  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3564  001AD8  0E00               	movlw	0
  3565  001ADA  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3566  001ADC  0E02               	movlw	2
  3567  001ADE  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3568  001AE0  EC5F  F008         	call	_SaveCardDat	;wreg free
  3569  001AE4  EFC7  F00C         	goto	l7015
  3570  001AE8                     l7075:
  3571                           
  3572                           ;RS232.c: 290:         return 0;
  3573  001AE8  0E00               	movlw	0
  3574  001AEA                     l934:
  3575  001AEA  0012               	return		;funcret
  3576  001AEC                     __end_of_ValidateCmd:
  3577                           	opt callstack 0
  3578                           
  3579 ;; *************** function _strcmp *****************
  3580 ;; Defined at:
  3581 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  l               2    4[COMRAM] PTR const unsigned char 
  3584 ;;		 -> Command(16), 
  3585 ;;  r               2    6[COMRAM] PTR const unsigned char 
  3586 ;;		 -> STR_65(4), STR_63(5), STR_61(7), STR_59(2), 
  3587 ;;		 -> STR_57(6), 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2    4[COMRAM] int 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;Total ram usage:        5 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    4
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_ValidateCmd
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text2
  3614  003396                     __ptext2:
  3615                           	opt callstack 0
  3616  003396                     _strcmp:
  3617                           	opt callstack 25
  3618  003396  EFD1  F019         	goto	l6773
  3619  00339A                     l6771:
  3620  00339A  4A05               	infsnz	strcmp@l^0,f,c
  3621  00339C  2A06               	incf	(strcmp@l+1)^0,f,c
  3622  00339E  4A07               	infsnz	strcmp@r^0,f,c
  3623  0033A0  2A08               	incf	(strcmp@r+1)^0,f,c
  3624  0033A2                     l6773:
  3625  0033A2  C005  FFD9         	movff	strcmp@l,fsr2l
  3626  0033A6  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3627  0033AA  50DF               	movf	indf2,w,c
  3628  0033AC  6E09               	movwf	??_strcmp^0,c
  3629  0033AE  C007  FFF6         	movff	strcmp@r,tblptrl
  3630  0033B2  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3631  0033B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3632  0033B6  6AF8               	clrf	tblptru,c
  3633  0033B8                     	endif
  3634  0033B8                     	if	0	;tblptru may be non-zero
  3635  0033B8                     	endif
  3636  0033B8  0008               	tblrd		*
  3637  0033BA  50F5               	movf	tablat,w,c
  3638  0033BC  1809               	xorwf	??_strcmp^0,w,c
  3639  0033BE  A4D8               	btfss	status,2,c
  3640  0033C0  EFE4  F019         	goto	u6761
  3641  0033C4  EFE6  F019         	goto	u6760
  3642  0033C8                     u6761:
  3643  0033C8  EFF2  F019         	goto	l6777
  3644  0033CC                     u6760:
  3645  0033CC  C005  FFD9         	movff	strcmp@l,fsr2l
  3646  0033D0  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3647  0033D4  50DF               	movf	indf2,w,c
  3648  0033D6  A4D8               	btfss	status,2,c
  3649  0033D8  EFF0  F019         	goto	u6771
  3650  0033DC  EFF2  F019         	goto	u6770
  3651  0033E0                     u6771:
  3652  0033E0  EFCD  F019         	goto	l6771
  3653  0033E4                     u6770:
  3654  0033E4                     l6777:
  3655  0033E4  C005  FFD9         	movff	strcmp@l,fsr2l
  3656  0033E8  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3657  0033EC  50DF               	movf	indf2,w,c
  3658  0033EE  6E09               	movwf	??_strcmp^0,c
  3659  0033F0  C007  FFF6         	movff	strcmp@r,tblptrl
  3660  0033F4  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3661  0033F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3662  0033F8  6AF8               	clrf	tblptru,c
  3663  0033FA                     	endif
  3664  0033FA                     	if	0	;tblptru may be non-zero
  3665  0033FA                     	endif
  3666  0033FA  0008               	tblrd		*
  3667  0033FC  50F5               	movf	tablat,w,c
  3668  0033FE  5C09               	subwf	??_strcmp^0,w,c
  3669  003400  6E05               	movwf	?_strcmp^0,c
  3670  003402  6A06               	clrf	(?_strcmp+1)^0,c
  3671  003404  A0D8               	btfss	status,0,c
  3672  003406  0606               	decf	(?_strcmp+1)^0,f,c
  3673  003408  0012               	return		;funcret
  3674  00340A                     __end_of_strcmp:
  3675                           	opt callstack 0
  3676                           
  3677 ;; *************** function _TogDebug *****************
  3678 ;; Defined at:
  3679 ;;		line 148 in file "RS232.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:   13
  3700 ;; This function calls:
  3701 ;;		_printf
  3702 ;; This function is called by:
  3703 ;;		_ValidateCmd
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text3
  3708  003AC2                     __ptext3:
  3709                           	opt callstack 0
  3710  003AC2                     _TogDebug:
  3711                           	opt callstack 16
  3712  003AC2                     
  3713                           ;RS232.c: 150:     if(Debug==0){
  3714  003AC2  0100               	movlb	0	; () banked
  3715  003AC4  51B0               	movf	_Debug& (0+255),w,b
  3716  003AC6  A4D8               	btfss	status,2,c
  3717  003AC8  EF68  F01D         	goto	u6691
  3718  003ACC  EF6A  F01D         	goto	u6690
  3719  003AD0                     u6691:
  3720  003AD0  EF74  F01D         	goto	l6697
  3721  003AD4                     u6690:
  3722  003AD4                     
  3723                           ; BSR set to: 0
  3724                           ;RS232.c: 151:         Debug =1;
  3725  003AD4  0E01               	movlw	1
  3726  003AD6  6FB0               	movwf	_Debug& (0+255),b
  3727  003AD8                     
  3728                           ; BSR set to: 0
  3729                           ;RS232.c: 152:         printf("Debug Enabled\r\n");
  3730  003AD8  0E44               	movlw	low STR_40
  3731  003ADA  6F7D               	movwf	printf@fmt& (0+255),b
  3732  003ADC  0EFF               	movlw	high STR_40
  3733  003ADE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3734  003AE0  ECFD  F01D         	call	_printf	;wreg free
  3735                           
  3736                           ;RS232.c: 153:     }else{
  3737  003AE4  EF7C  F01D         	goto	l906
  3738  003AE8                     l6697:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;RS232.c: 154:         Debug =0;
  3742  003AE8  0E00               	movlw	0
  3743  003AEA  6FB0               	movwf	_Debug& (0+255),b
  3744  003AEC                     
  3745                           ; BSR set to: 0
  3746                           ;RS232.c: 155:         printf("Debug Disabled\r\n");
  3747  003AEC  0E33               	movlw	low STR_41
  3748  003AEE  6F7D               	movwf	printf@fmt& (0+255),b
  3749  003AF0  0EFF               	movlw	high STR_41
  3750  003AF2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3751  003AF4  ECFD  F01D         	call	_printf	;wreg free
  3752  003AF8                     l906:
  3753  003AF8  0012               	return		;funcret
  3754  003AFA                     __end_of_TogDebug:
  3755                           	opt callstack 0
  3756                           
  3757 ;; *************** function _SaveCardDat *****************
  3758 ;; Defined at:
  3759 ;;		line 174 in file "RS232.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  Name            2   47[BANK0 ] PTR unsigned char 
  3762 ;;		 -> ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), 
  3763 ;;  MBAddress       2   49[BANK0 ] unsigned int 
  3764 ;;  dataeeAddr      2   51[BANK0 ] unsigned short 
  3765 ;;  NumBytes        2   53[BANK0 ] int 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  i               2   63[BANK0 ] int 
  3768 ;;  dataeeAddrWr    2   61[BANK0 ] unsigned short 
  3769 ;;  Conf            1   60[BANK0 ] unsigned char 
  3770 ;;  readData        1   59[BANK0 ] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3780 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;Total ram usage:       18 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:   14
  3787 ;; This function calls:
  3788 ;;		_ClearEEAddRange
  3789 ;;		_DATAEE_ReadByte
  3790 ;;		_DATAEE_WriteByte
  3791 ;;		_EUSART2_Read
  3792 ;;		_EUSART2_is_rx_ready
  3793 ;;		_ReadRX232
  3794 ;;		_printf
  3795 ;;		_strcpy
  3796 ;;		_strlen
  3797 ;; This function is called by:
  3798 ;;		_ValidateCmd
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text4
  3803  0010BE                     __ptext4:
  3804                           	opt callstack 0
  3805  0010BE                     _SaveCardDat:
  3806                           	opt callstack 15
  3807  0010BE                     
  3808                           ;RS232.c: 177:     unsigned char Conf, readData;;RS232.c: 178:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  3809  0010BE  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  3810  0010C2  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  3811  0010C6                     
  3812                           ;RS232.c: 180:     printf("Saving Card Data\r\n");
  3813  0010C6  0EEB               	movlw	low STR_44
  3814  0010C8  0100               	movlb	0	; () banked
  3815  0010CA  6F7D               	movwf	printf@fmt& (0+255),b
  3816  0010CC  0EFE               	movlw	high STR_44
  3817  0010CE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3818  0010D0  ECFD  F01D         	call	_printf	;wreg free
  3819  0010D4                     
  3820                           ;RS232.c: 181:     printf("Name: %s  MBAddress: 0x%04x   dataeeAddr: 0x%04x   NumBytes: 
      +                          %i \r\n", Name, MBAddress, dataeeAddr, NumBytes);
  3821  0010D4  0ED7               	movlw	low STR_45
  3822  0010D6  0100               	movlb	0	; () banked
  3823  0010D8  6F7D               	movwf	printf@fmt& (0+255),b
  3824  0010DA  0EFA               	movlw	high STR_45
  3825  0010DC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3826  0010DE  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3827  0010E2  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3828  0010E6  C091  F081         	movff	SaveCardDat@MBAddress,?_printf+4
  3829  0010EA  C092  F082         	movff	SaveCardDat@MBAddress+1,?_printf+5
  3830  0010EE  C093  F083         	movff	SaveCardDat@dataeeAddr,?_printf+6
  3831  0010F2  C094  F084         	movff	SaveCardDat@dataeeAddr+1,?_printf+7
  3832  0010F6  C095  F085         	movff	SaveCardDat@NumBytes,?_printf+8
  3833  0010FA  C096  F086         	movff	SaveCardDat@NumBytes+1,?_printf+9
  3834  0010FE  ECFD  F01D         	call	_printf	;wreg free
  3835  001102                     
  3836                           ;RS232.c: 183:     printf("Enter card %s (max %i characters): ", Name, NumBytes);
  3837  001102  0E58               	movlw	low STR_46
  3838  001104  0100               	movlb	0	; () banked
  3839  001106  6F7D               	movwf	printf@fmt& (0+255),b
  3840  001108  0EFC               	movlw	high STR_46
  3841  00110A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3842  00110C  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3843  001110  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3844  001114  C095  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  3845  001118  C096  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  3846  00111C  ECFD  F01D         	call	_printf	;wreg free
  3847  001120                     
  3848                           ;RS232.c: 185:     strcpy(Command, "");
  3849  001120  0ED4               	movlw	low _Command
  3850  001122  6E09               	movwf	strcpy@dest^0,c
  3851  001124  0E01               	movlw	high _Command
  3852  001126  6E0A               	movwf	(strcpy@dest+1)^0,c
  3853  001128  0EC3               	movlw	low (STR_37+53)
  3854  00112A  6E0B               	movwf	strcpy@src^0,c
  3855  00112C  0EFB               	movlw	high (STR_37+53)
  3856  00112E  6E0C               	movwf	(strcpy@src+1)^0,c
  3857  001130  ECA5  F01A         	call	_strcpy	;wreg free
  3858  001134                     l6713:
  3859  001134  C095  F08B         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  3860  001138  C096  F08C         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  3861  00113C  EC34  F011         	call	_ReadRX232	;wreg free
  3862  001140  0100               	movlb	0	; () banked
  3863  001142  518B               	movf	?_ReadRX232& (0+255),w,b
  3864  001144  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3865  001146  B4D8               	btfsc	status,2,c
  3866  001148  EFA8  F008         	goto	u6701
  3867  00114C  EFAA  F008         	goto	u6700
  3868  001150                     u6701:
  3869  001150  EF9A  F008         	goto	l6713
  3870  001154                     u6700:
  3871  001154                     
  3872                           ; BSR set to: 0
  3873                           ;RS232.c: 188:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  3874  001154  0EC2               	movlw	low STR_48
  3875  001156  6F7D               	movwf	printf@fmt& (0+255),b
  3876  001158  0EFC               	movlw	high STR_48
  3877  00115A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3878  00115C  0ED4               	movlw	low _Command
  3879  00115E  6F7F               	movwf	(?_printf+2)& (0+255),b
  3880  001160  0E01               	movlw	high _Command
  3881  001162  6F80               	movwf	(?_printf+3)& (0+255),b
  3882  001164  ECFD  F01D         	call	_printf	;wreg free
  3883  001168                     l6717:
  3884  001168  EC52  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  3885  00116C  0900               	iorlw	0
  3886  00116E  B4D8               	btfsc	status,2,c
  3887  001170  EFBC  F008         	goto	u6711
  3888  001174  EFBE  F008         	goto	u6710
  3889  001178                     u6711:
  3890  001178  EFB4  F008         	goto	l6717
  3891  00117C                     u6710:
  3892  00117C                     
  3893                           ;RS232.c: 193:     Conf = EUSART2_Read();
  3894  00117C  EC61  F01B         	call	_EUSART2_Read	;wreg free
  3895  001180  0100               	movlb	0	; () banked
  3896  001182  6F9C               	movwf	SaveCardDat@Conf& (0+255),b
  3897  001184                     
  3898                           ; BSR set to: 0
  3899                           ;RS232.c: 196:     if(Conf == 0x79 || Conf == 0x59){
  3900  001184  0E79               	movlw	121
  3901  001186  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3902  001188  B4D8               	btfsc	status,2,c
  3903  00118A  EFC9  F008         	goto	u6721
  3904  00118E  EFCB  F008         	goto	u6720
  3905  001192                     u6721:
  3906  001192  EFD4  F008         	goto	l923
  3907  001196                     u6720:
  3908  001196                     
  3909                           ; BSR set to: 0
  3910  001196  0E59               	movlw	89
  3911  001198  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3912  00119A  A4D8               	btfss	status,2,c
  3913  00119C  EFD2  F008         	goto	u6731
  3914  0011A0  EFD4  F008         	goto	u6730
  3915  0011A4                     u6731:
  3916  0011A4  EFA8  F009         	goto	l930
  3917  0011A8                     u6730:
  3918  0011A8                     l923:
  3919  0011A8                     
  3920                           ; BSR set to: 0
  3921                           ;RS232.c: 198:         printf("Y\r\nSaving Serial Number \r\n");
  3922  0011A8  0EEC               	movlw	low STR_49
  3923  0011AA  6F7D               	movwf	printf@fmt& (0+255),b
  3924  0011AC  0EFD               	movlw	high STR_49
  3925  0011AE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3926  0011B0  ECFD  F01D         	call	_printf	;wreg free
  3927  0011B4                     
  3928                           ;RS232.c: 199:         printf("Num Chars: %i \r\n", strlen(Command));
  3929  0011B4  0ED4               	movlw	low _Command
  3930  0011B6  6E05               	movwf	strlen@s^0,c
  3931  0011B8  0E01               	movlw	high _Command
  3932  0011BA  6E06               	movwf	(strlen@s+1)^0,c
  3933  0011BC  ECE2  F01B         	call	_strlen	;wreg free
  3934  0011C0  C005  F099         	movff	?_strlen,_SaveCardDat$2436
  3935  0011C4  C006  F09A         	movff	?_strlen+1,_SaveCardDat$2436+1
  3936  0011C8                     
  3937                           ;RS232.c: 199:         printf("Num Chars: %i \r\n", strlen(Command));
  3938  0011C8  0E22               	movlw	low STR_50
  3939  0011CA  0100               	movlb	0	; () banked
  3940  0011CC  6F7D               	movwf	printf@fmt& (0+255),b
  3941  0011CE  0EFF               	movlw	high STR_50
  3942  0011D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3943  0011D2  C099  F07F         	movff	_SaveCardDat$2436,?_printf+2
  3944  0011D6  C09A  F080         	movff	_SaveCardDat$2436+1,?_printf+3
  3945  0011DA  ECFD  F01D         	call	_printf	;wreg free
  3946  0011DE                     
  3947                           ;RS232.c: 203:         ClearEEAddRange(dataeeAddr,NumBytes);
  3948  0011DE  C093  F08B         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  3949  0011E2  C094  F08C         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  3950  0011E6  C095  F08D         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  3951  0011EA  C096  F08E         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  3952  0011EE  EC11  F019         	call	_ClearEEAddRange	;wreg free
  3953  0011F2                     
  3954                           ;RS232.c: 206:         for (i = 0; i < strlen(Command); i++){
  3955  0011F2  0E00               	movlw	0
  3956  0011F4  0100               	movlb	0	; () banked
  3957  0011F6  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  3958  0011F8  0E00               	movlw	0
  3959  0011FA  6F9F               	movwf	SaveCardDat@i& (0+255),b
  3960  0011FC  EF36  F009         	goto	l6745
  3961  001200                     l6735:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;RS232.c: 207:             printf("Char 0x%02x in 0x%02x \r\n", Command[i], dataeeAddrWr
      +                          k);
  3965  001200  0E07               	movlw	low STR_51
  3966  001202  6F7D               	movwf	printf@fmt& (0+255),b
  3967  001204  0EFE               	movlw	high STR_51
  3968  001206  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3969  001208  0ED4               	movlw	low _Command
  3970  00120A  259F               	addwf	SaveCardDat@i& (0+255),w,b
  3971  00120C  6ED9               	movwf	fsr2l,c
  3972  00120E  0E01               	movlw	high _Command
  3973  001210  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  3974  001212  6EDA               	movwf	fsr2h,c
  3975  001214  50DF               	movf	indf2,w,c
  3976  001216  6F97               	movwf	??_SaveCardDat& (0+255),b
  3977  001218  5197               	movf	??_SaveCardDat& (0+255),w,b
  3978  00121A  6F7F               	movwf	(?_printf+2)& (0+255),b
  3979  00121C  6B80               	clrf	(?_printf+3)& (0+255),b
  3980  00121E  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  3981  001222  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  3982  001226  ECFD  F01D         	call	_printf	;wreg free
  3983  00122A                     
  3984                           ;RS232.c: 208:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  3985  00122A  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  3986  00122E  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  3987  001232  0ED4               	movlw	low _Command
  3988  001234  0100               	movlb	0	; () banked
  3989  001236  259F               	addwf	SaveCardDat@i& (0+255),w,b
  3990  001238  6ED9               	movwf	fsr2l,c
  3991  00123A  0E01               	movlw	high _Command
  3992  00123C  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  3993  00123E  6EDA               	movwf	fsr2h,c
  3994  001240  50DF               	movf	indf2,w,c
  3995  001242  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  3996  001244  EC9F  F01C         	call	_DATAEE_WriteByte	;wreg free
  3997  001248                     
  3998                           ;RS232.c: 209:             dataeeAddrWrk++;
  3999  001248  0100               	movlb	0	; () banked
  4000  00124A  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4001  00124C  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4002  00124E                     
  4003                           ; BSR set to: 0
  4004                           ;RS232.c: 210:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4005  00124E  0E03               	movlw	3
  4006  001250  0100               	movlb	0	; () banked
  4007  001252  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  4008  001254  0E08               	movlw	8
  4009  001256  6F97               	movwf	??_SaveCardDat& (0+255),b
  4010  001258  0E77               	movlw	119
  4011  00125A                     u7097:
  4012  00125A  2EE8               	decfsz	wreg,f,c
  4013  00125C  D7FE               	bra	u7097
  4014  00125E  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  4015  001260  D7FC               	bra	u7097
  4016  001262  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4017  001264  D7FA               	bra	u7097
  4018  001266                     
  4019                           ;RS232.c: 211:         }
  4020  001266  0100               	movlb	0	; () banked
  4021  001268  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  4022  00126A  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4023  00126C                     l6745:
  4024                           
  4025                           ; BSR set to: 0
  4026  00126C  0ED4               	movlw	low _Command
  4027  00126E  6E05               	movwf	strlen@s^0,c
  4028  001270  0E01               	movlw	high _Command
  4029  001272  6E06               	movwf	(strlen@s+1)^0,c
  4030  001274  ECE2  F01B         	call	_strlen	;wreg free
  4031  001278  5005               	movf	?_strlen^0,w,c
  4032  00127A  0100               	movlb	0	; () banked
  4033  00127C  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  4034  00127E  5006               	movf	(?_strlen+1)^0,w,c
  4035  001280  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4036  001282  A0D8               	btfss	status,0,c
  4037  001284  EF46  F009         	goto	u6741
  4038  001288  EF48  F009         	goto	u6740
  4039  00128C                     u6741:
  4040  00128C  EF00  F009         	goto	l6735
  4041  001290                     u6740:
  4042  001290                     
  4043                           ; BSR set to: 0
  4044                           ;RS232.c: 213:         printf("Serial Number Saved. \r\n");
  4045  001290  0E20               	movlw	low STR_52
  4046  001292  6F7D               	movwf	printf@fmt& (0+255),b
  4047  001294  0EFE               	movlw	high STR_52
  4048  001296  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4049  001298  ECFD  F01D         	call	_printf	;wreg free
  4050  00129C                     
  4051                           ;RS232.c: 216:         dataeeAddrWrk = dataeeAddr;
  4052  00129C  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  4053  0012A0  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  4054  0012A4                     
  4055                           ;RS232.c: 217:          _delay((unsigned long)((50)*(32000000/4000.0)));
  4056  0012A4  0E03               	movlw	3
  4057  0012A6  0100               	movlb	0	; () banked
  4058  0012A8  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  4059  0012AA  0E08               	movlw	8
  4060  0012AC  6F97               	movwf	??_SaveCardDat& (0+255),b
  4061  0012AE  0E77               	movlw	119
  4062  0012B0                     u7107:
  4063  0012B0  2EE8               	decfsz	wreg,f,c
  4064  0012B2  D7FE               	bra	u7107
  4065  0012B4  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  4066  0012B6  D7FC               	bra	u7107
  4067  0012B8  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4068  0012BA  D7FA               	bra	u7107
  4069  0012BC                     
  4070                           ;RS232.c: 220:         for(i = 0; i < strlen(Command); i++){
  4071  0012BC  0E00               	movlw	0
  4072  0012BE  0100               	movlb	0	; () banked
  4073  0012C0  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  4074  0012C2  0E00               	movlw	0
  4075  0012C4  6F9F               	movwf	SaveCardDat@i& (0+255),b
  4076  0012C6  EF8C  F009         	goto	l6765
  4077  0012CA                     l6755:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;RS232.c: 221:             readData = DATAEE_ReadByte(dataeeAddrWrk);
  4081  0012CA  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  4082  0012CE  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  4083  0012D2  EC5E  F01E         	call	_DATAEE_ReadByte	;wreg free
  4084  0012D6  0100               	movlb	0	; () banked
  4085  0012D8  6F9B               	movwf	SaveCardDat@readData& (0+255),b
  4086  0012DA                     
  4087                           ; BSR set to: 0
  4088                           ;RS232.c: 222:             printf("EEPROM: 0x%02x Add: 0x%02x \r\n", readData,dataeeAddr
      +                          Wrk);
  4089  0012DA  0E24               	movlw	low STR_53
  4090  0012DC  6F7D               	movwf	printf@fmt& (0+255),b
  4091  0012DE  0EFD               	movlw	high STR_53
  4092  0012E0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4093  0012E2  C09B  F07F         	movff	SaveCardDat@readData,?_printf+2
  4094  0012E6  6B80               	clrf	(?_printf+3)& (0+255),b
  4095  0012E8  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  4096  0012EC  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  4097  0012F0  ECFD  F01D         	call	_printf	;wreg free
  4098  0012F4                     
  4099                           ;RS232.c: 223:             dataeeAddrWrk++;
  4100  0012F4  0100               	movlb	0	; () banked
  4101  0012F6  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4102  0012F8  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4103  0012FA                     
  4104                           ; BSR set to: 0
  4105                           ;RS232.c: 224:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4106  0012FA  0E03               	movlw	3
  4107  0012FC  0100               	movlb	0	; () banked
  4108  0012FE  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  4109  001300  0E08               	movlw	8
  4110  001302  6F97               	movwf	??_SaveCardDat& (0+255),b
  4111  001304  0E77               	movlw	119
  4112  001306                     u7117:
  4113  001306  2EE8               	decfsz	wreg,f,c
  4114  001308  D7FE               	bra	u7117
  4115  00130A  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  4116  00130C  D7FC               	bra	u7117
  4117  00130E  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4118  001310  D7FA               	bra	u7117
  4119  001312                     
  4120                           ;RS232.c: 225:         }
  4121  001312  0100               	movlb	0	; () banked
  4122  001314  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  4123  001316  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4124  001318                     l6765:
  4125                           
  4126                           ; BSR set to: 0
  4127  001318  0ED4               	movlw	low _Command
  4128  00131A  6E05               	movwf	strlen@s^0,c
  4129  00131C  0E01               	movlw	high _Command
  4130  00131E  6E06               	movwf	(strlen@s+1)^0,c
  4131  001320  ECE2  F01B         	call	_strlen	;wreg free
  4132  001324  5005               	movf	?_strlen^0,w,c
  4133  001326  0100               	movlb	0	; () banked
  4134  001328  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  4135  00132A  5006               	movf	(?_strlen+1)^0,w,c
  4136  00132C  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4137  00132E  A0D8               	btfss	status,0,c
  4138  001330  EF9C  F009         	goto	u6751
  4139  001334  EF9E  F009         	goto	u6750
  4140  001338                     u6751:
  4141  001338  EF65  F009         	goto	l6755
  4142  00133C                     u6750:
  4143  00133C                     
  4144                           ; BSR set to: 0
  4145                           ;RS232.c: 228:         strcpy(Command, "");
  4146  00133C  0ED4               	movlw	low _Command
  4147  00133E  6E09               	movwf	strcpy@dest^0,c
  4148  001340  0E01               	movlw	high _Command
  4149  001342  6E0A               	movwf	(strcpy@dest+1)^0,c
  4150  001344  0EC3               	movlw	low (STR_37+53)
  4151  001346  6E0B               	movwf	strcpy@src^0,c
  4152  001348  0EFB               	movlw	high (STR_37+53)
  4153  00134A  6E0C               	movwf	(strcpy@src+1)^0,c
  4154  00134C  ECA5  F01A         	call	_strcpy	;wreg free
  4155  001350                     l930:
  4156  001350  0012               	return		;funcret
  4157  001352                     __end_of_SaveCardDat:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _ReadRX232 *****************
  4161 ;; Defined at:
  4162 ;;		line 93 in file "RS232.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  NumChars        2   43[BANK0 ] int 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  temp            2   84[COMRAM] unsigned char [2]
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  2   43[BANK0 ] int 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;Total ram usage:        4 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:   13
  4183 ;; This function calls:
  4184 ;;		_EUSART2_Read
  4185 ;;		_EUSART2_Write
  4186 ;;		_EUSART2_is_rx_ready
  4187 ;;		_memmove
  4188 ;;		_printf
  4189 ;;		_strcat
  4190 ;;		_strlen
  4191 ;; This function is called by:
  4192 ;;		_main
  4193 ;;		_SaveCardDat
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text5
  4198  002268                     __ptext5:
  4199                           	opt callstack 0
  4200  002268                     _ReadRX232:
  4201                           	opt callstack 15
  4202  002268                     
  4203                           ;RS232.c: 93: int ReadRX232(int NumChars);RS232.c: 94: {;RS232.c: 99:     char temp[2] =
      +                           {'Z','\0'};
  4204  002268  C139  F055         	movff	ReadRX232@F10714,ReadRX232@temp
  4205  00226C  C13A  F056         	movff	ReadRX232@F10714+1,ReadRX232@temp+1
  4206  002270                     
  4207                           ;RS232.c: 102:     if(EUSART2_is_rx_ready())
  4208  002270  EC52  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4209  002274  0900               	iorlw	0
  4210  002276  B4D8               	btfsc	status,2,c
  4211  002278  EF40  F011         	goto	u6441
  4212  00227C  EF42  F011         	goto	u6440
  4213  002280                     u6441:
  4214  002280  EFC0  F011         	goto	l6513
  4215  002284                     u6440:
  4216  002284                     l6485:
  4217                           
  4218                           ;RS232.c: 108:              if(EUSART2_is_rx_ready())
  4219  002284  EC52  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4220  002288  0900               	iorlw	0
  4221  00228A  B4D8               	btfsc	status,2,c
  4222  00228C  EF4A  F011         	goto	u6451
  4223  002290  EF4C  F011         	goto	u6450
  4224  002294                     u6451:
  4225  002294  EF9C  F011         	goto	l6505
  4226  002298                     u6450:
  4227  002298                     
  4228                           ;RS232.c: 109:              {;RS232.c: 111:                 temp[0]=EUSART2_Read();
  4229  002298  EC61  F01B         	call	_EUSART2_Read	;wreg free
  4230  00229C  6E55               	movwf	ReadRX232@temp^0,c
  4231                           
  4232                           ;RS232.c: 114:                 EUSART2_Write(temp[0]);
  4233  00229E  5055               	movf	ReadRX232@temp^0,w,c
  4234  0022A0  EC32  F01B         	call	_EUSART2_Write
  4235  0022A4                     
  4236                           ;RS232.c: 116:                 if(temp[0]!='\r'){
  4237  0022A4  0E0D               	movlw	13
  4238  0022A6  1855               	xorwf	ReadRX232@temp^0,w,c
  4239  0022A8  B4D8               	btfsc	status,2,c
  4240  0022AA  EF59  F011         	goto	u6461
  4241  0022AE  EF5B  F011         	goto	u6460
  4242  0022B2                     u6461:
  4243  0022B2  EF65  F011         	goto	l6493
  4244  0022B6                     u6460:
  4245  0022B6                     
  4246                           ;RS232.c: 117:                     strcat(Command, temp);
  4247  0022B6  0ED4               	movlw	low _Command
  4248  0022B8  6E13               	movwf	strcat@dest^0,c
  4249  0022BA  0E01               	movlw	high _Command
  4250  0022BC  6E14               	movwf	(strcat@dest+1)^0,c
  4251  0022BE  0E55               	movlw	low ReadRX232@temp
  4252  0022C0  6E15               	movwf	strcat@src^0,c
  4253  0022C2  0E00               	movlw	high ReadRX232@temp
  4254  0022C4  6E16               	movwf	(strcat@src+1)^0,c
  4255  0022C6  EC11  F01E         	call	_strcat	;wreg free
  4256  0022CA                     l6493:
  4257                           
  4258                           ;RS232.c: 120:                 if(strlen(Command)>NumChars)
  4259  0022CA  0ED4               	movlw	low _Command
  4260  0022CC  6E05               	movwf	strlen@s^0,c
  4261  0022CE  0E01               	movlw	high _Command
  4262  0022D0  6E06               	movwf	(strlen@s+1)^0,c
  4263  0022D2  ECE2  F01B         	call	_strlen	;wreg free
  4264  0022D6  5005               	movf	?_strlen^0,w,c
  4265  0022D8  0100               	movlb	0	; () banked
  4266  0022DA  5D8B               	subwf	ReadRX232@NumChars& (0+255),w,b
  4267  0022DC  5006               	movf	(?_strlen+1)^0,w,c
  4268  0022DE  598C               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4269  0022E0  B0D8               	btfsc	status,0,c
  4270  0022E2  EF75  F011         	goto	u6471
  4271  0022E6  EF77  F011         	goto	u6470
  4272  0022EA                     u6471:
  4273  0022EA  EF8B  F011         	goto	l6497
  4274  0022EE                     u6470:
  4275  0022EE                     
  4276                           ; BSR set to: 0
  4277                           ;RS232.c: 121:                 {;RS232.c: 123:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  4278  0022EE  0ED4               	movlw	low _Command
  4279  0022F0  6E09               	movwf	memmove@d1^0,c
  4280  0022F2  0E01               	movlw	high _Command
  4281  0022F4  6E0A               	movwf	(memmove@d1+1)^0,c
  4282  0022F6  0ED5               	movlw	low (_Command+1)
  4283  0022F8  6E0B               	movwf	memmove@s1^0,c
  4284  0022FA  0E01               	movlw	high (_Command+1)
  4285  0022FC  6E0C               	movwf	(memmove@s1+1)^0,c
  4286  0022FE  0ED4               	movlw	low _Command
  4287  002300  6E05               	movwf	strlen@s^0,c
  4288  002302  0E01               	movlw	high _Command
  4289  002304  6E06               	movwf	(strlen@s+1)^0,c
  4290  002306  ECE2  F01B         	call	_strlen	;wreg free
  4291  00230A  C005  F00D         	movff	?_strlen,memmove@n
  4292  00230E  C006  F00E         	movff	?_strlen+1,memmove@n+1
  4293  002312  EC4D  F014         	call	_memmove	;wreg free
  4294  002316                     l6497:
  4295                           
  4296                           ;RS232.c: 127:                 if(temp[0]=='\r'){
  4297  002316  0E0D               	movlw	13
  4298  002318  1855               	xorwf	ReadRX232@temp^0,w,c
  4299  00231A  A4D8               	btfss	status,2,c
  4300  00231C  EF92  F011         	goto	u6481
  4301  002320  EF94  F011         	goto	u6480
  4302  002324                     u6481:
  4303  002324  EF9C  F011         	goto	l6505
  4304  002328                     u6480:
  4305  002328                     
  4306                           ;RS232.c: 129:                     temp[0]='z';
  4307  002328  0E7A               	movlw	122
  4308  00232A  6E55               	movwf	ReadRX232@temp^0,c
  4309  00232C                     
  4310                           ;RS232.c: 130:                     return NumChars;
  4311  00232C  C08B  F08B         	movff	ReadRX232@NumChars,?_ReadRX232
  4312  002330  C08C  F08C         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  4313  002334  EFC5  F011         	goto	l900
  4314  002338                     l6505:
  4315                           
  4316                           ;RS232.c: 133:         }while( temp[0] !='\r' );
  4317  002338  0E0D               	movlw	13
  4318  00233A  1855               	xorwf	ReadRX232@temp^0,w,c
  4319  00233C  A4D8               	btfss	status,2,c
  4320  00233E  EFA3  F011         	goto	u6491
  4321  002342  EFA5  F011         	goto	u6490
  4322  002346                     u6491:
  4323  002346  EF42  F011         	goto	l6485
  4324  00234A                     u6490:
  4325  00234A                     
  4326                           ;RS232.c: 135:         Command[strlen(Command)-1] = '\0';
  4327  00234A  0ED4               	movlw	low _Command
  4328  00234C  6E05               	movwf	strlen@s^0,c
  4329  00234E  0E01               	movlw	high _Command
  4330  002350  6E06               	movwf	(strlen@s+1)^0,c
  4331  002352  ECE2  F01B         	call	_strlen	;wreg free
  4332  002356  0ED3               	movlw	low (_Command+65535)
  4333  002358  2405               	addwf	?_strlen^0,w,c
  4334  00235A  6ED9               	movwf	fsr2l,c
  4335  00235C  0E01               	movlw	high (_Command+65535)
  4336  00235E  2006               	addwfc	(?_strlen+1)^0,w,c
  4337  002360  6EDA               	movwf	fsr2h,c
  4338  002362  0E00               	movlw	0
  4339  002364  6EDF               	movwf	indf2,c
  4340  002366                     
  4341                           ;RS232.c: 137:         printf("\r\n\n");
  4342  002366  0EC0               	movlw	low (STR_37+50)
  4343  002368  0100               	movlb	0	; () banked
  4344  00236A  6F7D               	movwf	printf@fmt& (0+255),b
  4345  00236C  0EFB               	movlw	high (STR_37+50)
  4346  00236E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4347  002370  ECFD  F01D         	call	_printf	;wreg free
  4348  002374                     
  4349                           ;RS232.c: 139:         strlen(Command);
  4350  002374  0ED4               	movlw	low _Command
  4351  002376  6E05               	movwf	strlen@s^0,c
  4352  002378  0E01               	movlw	high _Command
  4353  00237A  6E06               	movwf	(strlen@s+1)^0,c
  4354  00237C  ECE2  F01B         	call	_strlen	;wreg free
  4355  002380                     l6513:
  4356                           
  4357                           ;RS232.c: 142:     return 0;
  4358  002380  0E00               	movlw	0
  4359  002382  0100               	movlb	0	; () banked
  4360  002384  6F8C               	movwf	(?_ReadRX232+1)& (0+255),b
  4361  002386  0E00               	movlw	0
  4362  002388  6F8B               	movwf	?_ReadRX232& (0+255),b
  4363  00238A                     l900:
  4364  00238A  0012               	return		;funcret
  4365  00238C                     __end_of_ReadRX232:
  4366                           	opt callstack 0
  4367                           
  4368 ;; *************** function _strcat *****************
  4369 ;; Defined at:
  4370 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  dest            2   18[COMRAM] PTR unsigned char 
  4373 ;;		 -> Command(16), 
  4374 ;;  src             2   20[COMRAM] PTR const unsigned char 
  4375 ;;		 -> ReadRX232@temp(2), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  2   18[COMRAM] PTR unsigned char 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;Total ram usage:        4 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    5
  4394 ;; This function calls:
  4395 ;;		_strcpy
  4396 ;;		_strlen
  4397 ;; This function is called by:
  4398 ;;		_ReadRX232
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text6
  4403  003C22                     __ptext6:
  4404                           	opt callstack 0
  4405  003C22                     _strcat:
  4406                           	opt callstack 22
  4407  003C22  C013  F005         	movff	strcat@dest,strlen@s
  4408  003C26  C014  F006         	movff	strcat@dest+1,strlen@s+1
  4409  003C2A  ECE2  F01B         	call	_strlen	;wreg free
  4410  003C2E  5005               	movf	?_strlen^0,w,c
  4411  003C30  2413               	addwf	strcat@dest^0,w,c
  4412  003C32  6E09               	movwf	strcpy@dest^0,c
  4413  003C34  5006               	movf	(?_strlen+1)^0,w,c
  4414  003C36  2014               	addwfc	(strcat@dest+1)^0,w,c
  4415  003C38  6E0A               	movwf	(strcpy@dest+1)^0,c
  4416  003C3A  C015  F00B         	movff	strcat@src,strcpy@src
  4417  003C3E  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  4418  003C42  ECA5  F01A         	call	_strcpy	;wreg free
  4419  003C46  0012               	return		;funcret
  4420  003C48                     __end_of_strcat:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _strcpy *****************
  4424 ;; Defined at:
  4425 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  dest            2    8[COMRAM] PTR unsigned char 
  4428 ;;		 -> Command(16), 
  4429 ;;  src             2   10[COMRAM] PTR const unsigned char 
  4430 ;;		 -> STR_54(1), STR_47(1), ReadRX232@temp(2), STR_3(1), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  d               2   16[COMRAM] PTR unsigned char 
  4433 ;;		 -> Command(16), 
  4434 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4435 ;;		 -> STR_54(1), STR_47(1), ReadRX232@temp(2), STR_3(1), 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2    8[COMRAM] PTR unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4448 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;Total ram usage:       10 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    4
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;;		_SaveCardDat
  4457 ;;		_strcat
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text7
  4462  00354A                     __ptext7:
  4463                           	opt callstack 0
  4464  00354A                     _strcpy:
  4465                           	opt callstack 26
  4466  00354A  C00B  F00F         	movff	strcpy@src,strcpy@s
  4467  00354E  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  4468  003552  C009  F011         	movff	strcpy@dest,strcpy@d
  4469  003556  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  4470  00355A                     l6379:
  4471  00355A  500F               	movf	strcpy@s^0,w,c
  4472  00355C  6E0D               	movwf	??_strcpy^0,c
  4473  00355E  5010               	movf	(strcpy@s+1)^0,w,c
  4474  003560  6E0E               	movwf	(??_strcpy+1)^0,c
  4475  003562  4A0F               	infsnz	strcpy@s^0,f,c
  4476  003564  2A10               	incf	(strcpy@s+1)^0,f,c
  4477  003566  C00D  FFF6         	movff	??_strcpy,tblptrl
  4478  00356A  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  4479  00356E  0E00               	movlw	low (__mediumconst shr (0+16))
  4480  003570  6EF8               	movwf	tblptru,c
  4481  003572  C011  FFD9         	movff	strcpy@d,fsr2l
  4482  003576  C012  FFDA         	movff	strcpy@d+1,fsr2h
  4483  00357A  4A11               	infsnz	strcpy@d^0,f,c
  4484  00357C  2A12               	incf	(strcpy@d+1)^0,f,c
  4485  00357E  0E0E               	movlw	(high __ramtop+-1)
  4486  003580  64F7               	cpfsgt	tblptrh,c
  4487  003582  D003               	bra	u6307
  4488  003584  0008               	tblrd		*
  4489  003586  50F5               	movf	tablat,w,c
  4490  003588  D005               	bra	u6300
  4491  00358A                     u6307:
  4492  00358A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4493  00358E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4494  003592  50EF               	movf	indf0,w,c
  4495  003594                     u6300:
  4496  003594  6EDF               	movwf	indf2,c
  4497  003596  50DF               	movf	indf2,w,c
  4498  003598  A4D8               	btfss	status,2,c
  4499  00359A  EFD1  F01A         	goto	u6311
  4500  00359E  EFD3  F01A         	goto	u6310
  4501  0035A2                     u6311:
  4502  0035A2  EFAD  F01A         	goto	l6379
  4503  0035A6                     u6310:
  4504  0035A6  0012               	return		;funcret
  4505  0035A8                     __end_of_strcpy:
  4506                           	opt callstack 0
  4507                           
  4508 ;; *************** function _memmove *****************
  4509 ;; Defined at:
  4510 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  d1              2    8[COMRAM] PTR void 
  4513 ;;		 -> Command(16), 
  4514 ;;  s1              2   10[COMRAM] PTR const void 
  4515 ;;		 -> Command(16), 
  4516 ;;  n               2   12[COMRAM] unsigned int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  s               2   18[COMRAM] PTR const unsigned char 
  4519 ;;		 -> Command(16), 
  4520 ;;  d               2   16[COMRAM] PTR unsigned char 
  4521 ;;		 -> Command(16), 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2    8[COMRAM] PTR void 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4531 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;Total ram usage:       12 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    4
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_ReadRX232
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text8
  4546  00289A                     __ptext8:
  4547                           	opt callstack 0
  4548  00289A                     _memmove:
  4549                           	opt callstack 23
  4550  00289A  C00B  F013         	movff	memmove@s1,memmove@s
  4551  00289E  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  4552  0028A2  C009  F011         	movff	memmove@d1,memmove@d
  4553  0028A6  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  4554  0028AA  5011               	movf	memmove@d^0,w,c
  4555  0028AC  5C13               	subwf	memmove@s^0,w,c
  4556  0028AE  5012               	movf	(memmove@d+1)^0,w,c
  4557  0028B0  5814               	subwfb	(memmove@s+1)^0,w,c
  4558  0028B2  B0D8               	btfsc	status,0,c
  4559  0028B4  EF5E  F014         	goto	u6391
  4560  0028B8  EF60  F014         	goto	u6390
  4561  0028BC                     u6391:
  4562  0028BC  EF97  F014         	goto	l6471
  4563  0028C0                     u6390:
  4564  0028C0  500D               	movf	memmove@n^0,w,c
  4565  0028C2  2413               	addwf	memmove@s^0,w,c
  4566  0028C4  6E0F               	movwf	??_memmove^0,c
  4567  0028C6  500E               	movf	(memmove@n+1)^0,w,c
  4568  0028C8  2014               	addwfc	(memmove@s+1)^0,w,c
  4569  0028CA  6E10               	movwf	(??_memmove+1)^0,c
  4570  0028CC  500F               	movf	??_memmove^0,w,c
  4571  0028CE  5C11               	subwf	memmove@d^0,w,c
  4572  0028D0  5010               	movf	(??_memmove+1)^0,w,c
  4573  0028D2  5812               	subwfb	(memmove@d+1)^0,w,c
  4574  0028D4  B0D8               	btfsc	status,0,c
  4575  0028D6  EF6F  F014         	goto	u6401
  4576  0028DA  EF71  F014         	goto	u6400
  4577  0028DE                     u6401:
  4578  0028DE  EF97  F014         	goto	l6471
  4579  0028E2                     u6400:
  4580  0028E2  500D               	movf	memmove@n^0,w,c
  4581  0028E4  2613               	addwf	memmove@s^0,f,c
  4582  0028E6  500E               	movf	(memmove@n+1)^0,w,c
  4583  0028E8  2214               	addwfc	(memmove@s+1)^0,f,c
  4584  0028EA  500D               	movf	memmove@n^0,w,c
  4585  0028EC  2611               	addwf	memmove@d^0,f,c
  4586  0028EE  500E               	movf	(memmove@n+1)^0,w,c
  4587  0028F0  2212               	addwfc	(memmove@d+1)^0,f,c
  4588  0028F2                     l6467:
  4589  0028F2  0613               	decf	memmove@s^0,f,c
  4590  0028F4  A0D8               	btfss	status,0,c
  4591  0028F6  0614               	decf	(memmove@s+1)^0,f,c
  4592  0028F8  C013  FFD9         	movff	memmove@s,fsr2l
  4593  0028FC  C014  FFDA         	movff	memmove@s+1,fsr2h
  4594  002900  0611               	decf	memmove@d^0,f,c
  4595  002902  A0D8               	btfss	status,0,c
  4596  002904  0612               	decf	(memmove@d+1)^0,f,c
  4597  002906  C011  FFE1         	movff	memmove@d,fsr1l
  4598  00290A  C012  FFE2         	movff	memmove@d+1,fsr1h
  4599  00290E  CFDF FFE7          	movff	indf2,indf1
  4600  002912  060D               	decf	memmove@n^0,f,c
  4601  002914  A0D8               	btfss	status,0,c
  4602  002916  060E               	decf	(memmove@n+1)^0,f,c
  4603  002918  500D               	movf	memmove@n^0,w,c
  4604  00291A  100E               	iorwf	(memmove@n+1)^0,w,c
  4605  00291C  A4D8               	btfss	status,2,c
  4606  00291E  EF93  F014         	goto	u6411
  4607  002922  EF95  F014         	goto	u6410
  4608  002926                     u6411:
  4609  002926  EF79  F014         	goto	l6467
  4610  00292A                     u6410:
  4611  00292A  EFBA  F014         	goto	l1874
  4612  00292E                     l6471:
  4613  00292E  500D               	movf	memmove@n^0,w,c
  4614  002930  100E               	iorwf	(memmove@n+1)^0,w,c
  4615  002932  B4D8               	btfsc	status,2,c
  4616  002934  EF9E  F014         	goto	u6421
  4617  002938  EFA0  F014         	goto	u6420
  4618  00293C                     u6421:
  4619  00293C  EFBA  F014         	goto	l1874
  4620  002940                     u6420:
  4621  002940                     l6473:
  4622  002940  C013  FFD9         	movff	memmove@s,fsr2l
  4623  002944  C014  FFDA         	movff	memmove@s+1,fsr2h
  4624  002948  C011  FFE1         	movff	memmove@d,fsr1l
  4625  00294C  C012  FFE2         	movff	memmove@d+1,fsr1h
  4626  002950  CFDF FFE7          	movff	indf2,indf1
  4627  002954  4A13               	infsnz	memmove@s^0,f,c
  4628  002956  2A14               	incf	(memmove@s+1)^0,f,c
  4629  002958  4A11               	infsnz	memmove@d^0,f,c
  4630  00295A  2A12               	incf	(memmove@d+1)^0,f,c
  4631  00295C  060D               	decf	memmove@n^0,f,c
  4632  00295E  A0D8               	btfss	status,0,c
  4633  002960  060E               	decf	(memmove@n+1)^0,f,c
  4634  002962  500D               	movf	memmove@n^0,w,c
  4635  002964  100E               	iorwf	(memmove@n+1)^0,w,c
  4636  002966  A4D8               	btfss	status,2,c
  4637  002968  EFB8  F014         	goto	u6431
  4638  00296C  EFBA  F014         	goto	u6430
  4639  002970                     u6431:
  4640  002970  EFA0  F014         	goto	l6473
  4641  002974                     u6430:
  4642  002974                     l1874:
  4643  002974  0012               	return		;funcret
  4644  002976                     __end_of_memmove:
  4645                           	opt callstack 0
  4646                           
  4647 ;; *************** function _EUSART2_is_rx_ready *****************
  4648 ;; Defined at:
  4649 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      _Bool 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    4
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_ReadRX232
  4674 ;;		_SaveCardDat
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text9
  4679  003CA4                     __ptext9:
  4680                           	opt callstack 0
  4681  003CA4                     _EUSART2_is_rx_ready:
  4682                           	opt callstack 23
  4683  003CA4                     
  4684                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  4685  003CA4  0100               	movlb	0	; () banked
  4686  003CA6  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4687  003CA8  A4D8               	btfss	status,2,c
  4688  003CAA  EF59  F01E         	goto	u6351
  4689  003CAE  EF5C  F01E         	goto	u6350
  4690  003CB2                     u6351:
  4691  003CB2  0E01               	movlw	1
  4692  003CB4  EF5D  F01E         	goto	u6360
  4693  003CB8                     u6350:
  4694  003CB8  0E00               	movlw	0
  4695  003CBA                     u6360:
  4696  003CBA                     
  4697                           ; BSR set to: 0
  4698  003CBA  0012               	return		;funcret
  4699  003CBC                     __end_of_EUSART2_is_rx_ready:
  4700                           	opt callstack 0
  4701                           
  4702 ;; *************** function _EUSART2_Read *****************
  4703 ;; Defined at:
  4704 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  readValue       1    4[COMRAM] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      unsigned char 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;Total ram usage:        1 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    4
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_ReadRX232
  4729 ;;		_SaveCardDat
  4730 ;;		_getch
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text10
  4735  0036C2                     __ptext10:
  4736                           	opt callstack 0
  4737  0036C2                     _EUSART2_Read:
  4738                           	opt callstack 23
  4739  0036C2                     l6431:
  4740                           
  4741                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  4742  0036C2  0100               	movlb	0	; () banked
  4743  0036C4  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4744  0036C6  B4D8               	btfsc	status,2,c
  4745  0036C8  EF68  F01B         	goto	u6371
  4746  0036CC  EF6A  F01B         	goto	u6370
  4747  0036D0                     u6371:
  4748  0036D0  EF61  F01B         	goto	l6431
  4749  0036D4                     u6370:
  4750  0036D4                     
  4751                           ; BSR set to: 0
  4752                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  4753  0036D4  0E81               	movlw	low _eusart2RxStatusBuffer
  4754  0036D6  25B8               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4755  0036D8  6ED9               	movwf	fsr2l,c
  4756  0036DA  6ADA               	clrf	fsr2h,c
  4757  0036DC  0E01               	movlw	high _eusart2RxStatusBuffer
  4758  0036DE  22DA               	addwfc	fsr2h,f,c
  4759  0036E0  50DF               	movf	indf2,w,c
  4760  0036E2  6FB6               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  4761                           
  4762                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  4763  0036E4  0E64               	movlw	low _eusart2RxBuffer
  4764  0036E6  25B8               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4765  0036E8  6ED9               	movwf	fsr2l,c
  4766  0036EA  6ADA               	clrf	fsr2h,c
  4767  0036EC  0E02               	movlw	high _eusart2RxBuffer
  4768  0036EE  22DA               	addwfc	fsr2h,f,c
  4769  0036F0  50DF               	movf	indf2,w,c
  4770  0036F2  6E05               	movwf	EUSART2_Read@readValue^0,c
  4771  0036F4                     
  4772                           ; BSR set to: 0
  4773  0036F4  2BB8               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  4774  0036F6                     
  4775                           ; BSR set to: 0
  4776                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  4777  0036F6  0E1F               	movlw	31
  4778  0036F8  65B8               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  4779  0036FA  EF81  F01B         	goto	u6381
  4780  0036FE  EF83  F01B         	goto	u6380
  4781  003702                     u6381:
  4782  003702  EF85  F01B         	goto	l6441
  4783  003706                     u6380:
  4784  003706                     
  4785                           ; BSR set to: 0
  4786                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  4787  003706  0E00               	movlw	0
  4788  003708  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  4789  00370A                     l6441:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  4793  00370A  010E               	movlb	14	; () banked
  4794  00370C  9FC5               	bcf	197,7,b	;volatile
  4795  00370E                     
  4796                           ; BSR set to: 14
  4797                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  4798  00370E  0100               	movlb	0	; () banked
  4799  003710  07B7               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  4800  003712                     
  4801                           ; BSR set to: 0
  4802                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  4803  003712  010E               	movlb	14	; () banked
  4804  003714  8FC5               	bsf	197,7,b	;volatile
  4805  003716                     
  4806                           ; BSR set to: 14
  4807                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  4808  003716  5005               	movf	EUSART2_Read@readValue^0,w,c
  4809  003718                     
  4810                           ; BSR set to: 14
  4811  003718  0012               	return		;funcret
  4812  00371A                     __end_of_EUSART2_Read:
  4813                           	opt callstack 0
  4814                           
  4815 ;; *************** function _ClearEEAddRange *****************
  4816 ;; Defined at:
  4817 ;;		line 161 in file "RS232.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  StartAdd        2   43[BANK0 ] unsigned int 
  4820 ;;  NumBytes        2   45[BANK0 ] unsigned int 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  i               2   84[COMRAM] int 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;Total ram usage:        6 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:   13
  4839 ;; This function calls:
  4840 ;;		_DATAEE_WriteByte
  4841 ;;		_printf
  4842 ;; This function is called by:
  4843 ;;		_SaveCardDat
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text11
  4848  003222                     __ptext11:
  4849                           	opt callstack 0
  4850  003222                     _ClearEEAddRange:
  4851                           	opt callstack 15
  4852  003222                     
  4853                           ;RS232.c: 164:     printf("Clearing EEPROM from Address: 0x%04x, Num Bytes: %i \r\n", St
      +                          artAdd, NumBytes);
  4854  003222  0E57               	movlw	low STR_42
  4855  003224  0100               	movlb	0	; () banked
  4856  003226  6F7D               	movwf	printf@fmt& (0+255),b
  4857  003228  0EFB               	movlw	high STR_42
  4858  00322A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4859  00322C  C08B  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  4860  003230  C08C  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  4861  003234  C08D  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  4862  003238  C08E  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  4863  00323C  ECFD  F01D         	call	_printf	;wreg free
  4864  003240                     
  4865                           ;RS232.c: 166:     for(int i = 0; i<NumBytes; i++){
  4866  003240  0E00               	movlw	0
  4867  003242  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  4868  003244  0E00               	movlw	0
  4869  003246  6E55               	movwf	ClearEEAddRange@i^0,c
  4870  003248  EF43  F019         	goto	l6563
  4871  00324C                     l6557:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;RS232.c: 167:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  4875  00324C  518B               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  4876  00324E  2455               	addwf	ClearEEAddRange@i^0,w,c
  4877  003250  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  4878  003252  518C               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  4879  003254  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  4880  003256  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  4881  003258  0EFF               	movlw	255
  4882  00325A  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4883  00325C  EC9F  F01C         	call	_DATAEE_WriteByte	;wreg free
  4884  003260                     
  4885                           ;RS232.c: 168:         printf("Clear 0x%04x NumByte:  %i \r\n", StartAdd +i, NumBytes);
  4886  003260  0E42               	movlw	low STR_43
  4887  003262  0100               	movlb	0	; () banked
  4888  003264  6F7D               	movwf	printf@fmt& (0+255),b
  4889  003266  0EFD               	movlw	high STR_43
  4890  003268  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4891  00326A  518B               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  4892  00326C  2455               	addwf	ClearEEAddRange@i^0,w,c
  4893  00326E  6F7F               	movwf	(?_printf+2)& (0+255),b
  4894  003270  518C               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  4895  003272  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  4896  003274  6F80               	movwf	(?_printf+3)& (0+255),b
  4897  003276  C08D  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  4898  00327A  C08E  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  4899  00327E  ECFD  F01D         	call	_printf	;wreg free
  4900  003282                     
  4901                           ;RS232.c: 169:     }
  4902  003282  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  4903  003284  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  4904  003286                     l6563:
  4905  003286  0100               	movlb	0	; () banked
  4906  003288  518D               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  4907  00328A  5C55               	subwf	ClearEEAddRange@i^0,w,c
  4908  00328C  518E               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  4909  00328E  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  4910  003290  A0D8               	btfss	status,0,c
  4911  003292  EF4D  F019         	goto	u6531
  4912  003296  EF4F  F019         	goto	u6530
  4913  00329A                     u6531:
  4914  00329A  EF26  F019         	goto	l6557
  4915  00329E                     u6530:
  4916  00329E                     
  4917                           ; BSR set to: 0
  4918  00329E  0012               	return		;funcret
  4919  0032A0                     __end_of_ClearEEAddRange:
  4920                           	opt callstack 0
  4921                           
  4922 ;; *************** function _DATAEE_WriteByte *****************
  4923 ;; Defined at:
  4924 ;;		line 165 in file "mcc_generated_files/memory.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  bAdd            2    4[COMRAM] unsigned short 
  4927 ;;  bData           1    6[COMRAM] unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4939 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;Total ram usage:        4 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    4
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_ClearEEAddRange
  4950 ;;		_SaveCardDat
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text12
  4955  00393E                     __ptext12:
  4956                           	opt callstack 0
  4957  00393E                     _DATAEE_WriteByte:
  4958                           	opt callstack 24
  4959  00393E                     
  4960                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  4961  00393E  0E00               	movlw	0
  4962  003940  BEF2               	btfsc	242,7,c	;volatile
  4963  003942  0E01               	movlw	1
  4964  003944  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  4965  003946                     
  4966                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  4967  003946  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  4968  003948  0B03               	andlw	3
  4969  00394A  6E7F               	movwf	127,c	;volatile
  4970  00394C                     
  4971                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  4972  00394C  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  4973  003950                     
  4974                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  4975  003950  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  4976  003954                     
  4977                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  4978  003954  0E3F               	movlw	-193
  4979  003956  1681               	andwf	129,f,c	;volsfr
  4980  003958                     
  4981                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  4982  003958  8481               	bsf	129,2,c	;volsfr
  4983  00395A                     
  4984                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  4985  00395A  9EF2               	bcf	242,7,c	;volatile
  4986  00395C                     
  4987                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  4988  00395C  0E55               	movlw	85
  4989  00395E  6E82               	movwf	130,c	;volsfr
  4990  003960                     
  4991                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  4992  003960  0EAA               	movlw	170
  4993  003962  6E82               	movwf	130,c	;volsfr
  4994  003964                     
  4995                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  4996  003964  8281               	bsf	129,1,c	;volsfr
  4997  003966                     l212:
  4998                           
  4999                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  5000  003966  B281               	btfsc	129,1,c	;volsfr
  5001  003968  EFB8  F01C         	goto	u6331
  5002  00396C  EFBA  F01C         	goto	u6330
  5003  003970                     u6331:
  5004  003970  EFB3  F01C         	goto	l212
  5005  003974                     u6330:
  5006  003974                     
  5007                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  5008  003974  9481               	bcf	129,2,c	;volsfr
  5009                           
  5010                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  5011  003976  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  5012  003978  D002               	bra	u6345
  5013  00397A  9EF2               	bcf	242,7,c	;volatile
  5014  00397C  D001               	bra	u6346
  5015  00397E                     u6345:
  5016  00397E  8EF2               	bsf	242,7,c	;volatile
  5017  003980                     u6346:
  5018  003980  0012               	return		;funcret
  5019  003982                     __end_of_DATAEE_WriteByte:
  5020                           	opt callstack 0
  5021                           
  5022 ;; *************** function _InitialiseString *****************
  5023 ;; Defined at:
  5024 ;;		line 66 in file "RS232.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  SerialNum      11   43[BANK0 ] unsigned char [11]
  5029 ;;  i               2    0        int 
  5030 ;;  dataeeAddrWr    2    0        unsigned short 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;Total ram usage:       13 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:   13
  5047 ;; This function calls:
  5048 ;;		_Initalisation
  5049 ;;		_SerIni
  5050 ;;		_printf
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;;		_ValidateCmd
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text13
  5058  002E20                     __ptext13:
  5059                           	opt callstack 0
  5060  002E20                     _InitialiseString:
  5061                           	opt callstack 16
  5062  002E20                     
  5063                           ;RS232.c: 69:     uint16_t dataeeAddrWrk;;RS232.c: 71:     char SerialNum[11] = { '\0' }
      +                          ;
  5064  002E20  EE20  F08B         	lfsr	2,InitialiseString@SerialNum
  5065  002E24  0E0A               	movlw	10
  5066  002E26                     u6541:
  5067  002E26  6ADE               	clrf	postinc2,c
  5068  002E28  06E8               	decf	wreg,f,c
  5069  002E2A  E2FD               	bc	u6541
  5070  002E2C                     
  5071                           ;RS232.c: 72:     SerIni(SerialNum);
  5072  002E2C  0E8B               	movlw	low InitialiseString@SerialNum
  5073  002E2E  6E07               	movwf	SerIni@SerialNum^0,c
  5074  002E30  0E00               	movlw	high InitialiseString@SerialNum
  5075  002E32  6E08               	movwf	(SerIni@SerialNum+1)^0,c
  5076  002E34  ECC6  F011         	call	_SerIni	;wreg free
  5077  002E38                     
  5078                           ;RS232.c: 76:     printf("\rDan and Sam's Modbus GPIO Expansion - AP00070125-01 Rev -\r\
      +                          n");
  5079  002E38  0E1A               	movlw	low STR_29
  5080  002E3A  0100               	movlb	0	; () banked
  5081  002E3C  6F7D               	movwf	printf@fmt& (0+255),b
  5082  002E3E  0EFB               	movlw	high STR_29
  5083  002E40  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5084  002E42  ECFD  F01D         	call	_printf	;wreg free
  5085  002E46                     
  5086                           ;RS232.c: 78:     Initalisation();
  5087  002E46  ECFC  F01E         	call	_Initalisation	;wreg free
  5088  002E4A                     
  5089                           ;RS232.c: 82:     printf("Card Ser No. %s \r\n",SerialNum);
  5090  002E4A  0ED8               	movlw	low STR_30
  5091  002E4C  0100               	movlb	0	; () banked
  5092  002E4E  6F7D               	movwf	printf@fmt& (0+255),b
  5093  002E50  0EFE               	movlw	high STR_30
  5094  002E52  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5095  002E54  0E8B               	movlw	low InitialiseString@SerialNum
  5096  002E56  6F7F               	movwf	(?_printf+2)& (0+255),b
  5097  002E58  0E00               	movlw	high InitialiseString@SerialNum
  5098  002E5A  6F80               	movwf	(?_printf+3)& (0+255),b
  5099  002E5C  ECFD  F01D         	call	_printf	;wreg free
  5100  002E60                     
  5101                           ;RS232.c: 83:     printf("Card Address. 0x05 \r\n");
  5102  002E60  0E97               	movlw	low STR_31
  5103  002E62  0100               	movlb	0	; () banked
  5104  002E64  6F7D               	movwf	printf@fmt& (0+255),b
  5105  002E66  0EFE               	movlw	high STR_31
  5106  002E68  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5107  002E6A  ECFD  F01D         	call	_printf	;wreg free
  5108  002E6E                     
  5109                           ;RS232.c: 84:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  5110  002E6E  0E2E               	movlw	low STR_32
  5111  002E70  0100               	movlb	0	; () banked
  5112  002E72  6F7D               	movwf	printf@fmt& (0+255),b
  5113  002E74  0EFC               	movlw	high STR_32
  5114  002E76  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5115  002E78  0EBC               	movlw	low STR_33
  5116  002E7A  6F7F               	movwf	(?_printf+2)& (0+255),b
  5117  002E7C  0EFF               	movlw	high STR_33
  5118  002E7E  6F80               	movwf	(?_printf+3)& (0+255),b
  5119  002E80  0EDE               	movlw	low STR_34
  5120  002E82  6F81               	movwf	(?_printf+4)& (0+255),b
  5121  002E84  0EFF               	movlw	high STR_34
  5122  002E86  6F82               	movwf	(?_printf+5)& (0+255),b
  5123  002E88  0E08               	movlw	8
  5124  002E8A  6F84               	movwf	(?_printf+7)& (0+255),b
  5125  002E8C  0E34               	movlw	52
  5126  002E8E  6F83               	movwf	(?_printf+6)& (0+255),b
  5127  002E90  ECFD  F01D         	call	_printf	;wreg free
  5128  002E94                     
  5129                           ;RS232.c: 86:     printf("Function Codes Supported:\r\n");
  5130  002E94  0E7C               	movlw	low STR_35
  5131  002E96  0100               	movlb	0	; () banked
  5132  002E98  6F7D               	movwf	printf@fmt& (0+255),b
  5133  002E9A  0EFD               	movlw	high STR_35
  5134  002E9C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5135  002E9E  ECFD  F01D         	call	_printf	;wreg free
  5136  002EA2                     
  5137                           ;RS232.c: 87:     printf("   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  5138  002EA2  0EFA               	movlw	low STR_36
  5139  002EA4  0100               	movlb	0	; () banked
  5140  002EA6  6F7D               	movwf	printf@fmt& (0+255),b
  5141  002EA8  0EFB               	movlw	high STR_36
  5142  002EAA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5143  002EAC  ECFD  F01D         	call	_printf	;wreg free
  5144  002EB0                     
  5145                           ;RS232.c: 88:     printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  5146  002EB0  0E8E               	movlw	low STR_37
  5147  002EB2  0100               	movlb	0	; () banked
  5148  002EB4  6F7D               	movwf	printf@fmt& (0+255),b
  5149  002EB6  0EFB               	movlw	high STR_37
  5150  002EB8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5151  002EBA  ECFD  F01D         	call	_printf	;wreg free
  5152  002EBE                     
  5153                           ;RS232.c: 89:     printf("Initalisation Complete - Ready\r\n\n");
  5154  002EBE  0EA0               	movlw	low STR_38
  5155  002EC0  0100               	movlb	0	; () banked
  5156  002EC2  6F7D               	movwf	printf@fmt& (0+255),b
  5157  002EC4  0EFC               	movlw	high STR_38
  5158  002EC6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5159  002EC8  ECFD  F01D         	call	_printf	;wreg free
  5160  002ECC  0012               	return		;funcret
  5161  002ECE                     __end_of_InitialiseString:
  5162                           	opt callstack 0
  5163                           
  5164 ;; *************** function _SerIni *****************
  5165 ;; Defined at:
  5166 ;;		line 18 in file "RS232.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  SerialNum       2    6[COMRAM] PTR unsigned char 
  5169 ;;		 -> InitialiseString@SerialNum(11), 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  j               2   16[COMRAM] int 
  5172 ;;  i               2   14[COMRAM] int 
  5173 ;;  dataeeAddrWr    2   10[COMRAM] unsigned short 
  5174 ;;  readDataEven    1   13[COMRAM] unsigned char 
  5175 ;;  readDataOdd     1   12[COMRAM] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;Total ram usage:       12 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    5
  5192 ;; This function calls:
  5193 ;;		_DATAEE_ReadByte
  5194 ;; This function is called by:
  5195 ;;		_InitialiseString
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text14
  5200  00238C                     __ptext14:
  5201                           	opt callstack 0
  5202  00238C                     _SerIni:
  5203                           	opt callstack 23
  5204  00238C                     
  5205                           ;RS232.c: 22:     char readDataOdd, readDataEven;;RS232.c: 23:     int i=0, j=0;
  5206  00238C  0E00               	movlw	0
  5207  00238E  6E10               	movwf	(SerIni@i+1)^0,c
  5208  002390  0E00               	movlw	0
  5209  002392  6E0F               	movwf	SerIni@i^0,c
  5210  002394  0E00               	movlw	0
  5211  002396  6E12               	movwf	(SerIni@j+1)^0,c
  5212  002398  0E00               	movlw	0
  5213  00239A  6E11               	movwf	SerIni@j^0,c
  5214                           
  5215                           ;RS232.c: 24:     uint16_t dataeeAddrWrk;;RS232.c: 28:     dataeeAddrWrk = 0x0300;
  5216  00239C  0E03               	movlw	3
  5217  00239E  6E0C               	movwf	(SerIni@dataeeAddrWrk+1)^0,c
  5218  0023A0  0E00               	movlw	0
  5219  0023A2  6E0B               	movwf	SerIni@dataeeAddrWrk^0,c
  5220                           
  5221                           ;RS232.c: 29:     for(i = 0; i < 5; i++){
  5222  0023A4  0E00               	movlw	0
  5223  0023A6  6E10               	movwf	(SerIni@i+1)^0,c
  5224  0023A8  0E00               	movlw	0
  5225  0023AA  6E0F               	movwf	SerIni@i^0,c
  5226  0023AC                     l6523:
  5227                           
  5228                           ;RS232.c: 30:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  5229  0023AC  C00B  F005         	movff	SerIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5230  0023B0  C00C  F006         	movff	SerIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5231  0023B4  EC5E  F01E         	call	_DATAEE_ReadByte	;wreg free
  5232  0023B8  6E0D               	movwf	SerIni@readDataOdd^0,c
  5233  0023BA                     
  5234                           ;RS232.c: 32:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5235  0023BA  0E03               	movlw	3
  5236  0023BC  6E0A               	movwf	(??_SerIni+1)^0,c
  5237  0023BE  0E08               	movlw	8
  5238  0023C0  6E09               	movwf	??_SerIni^0,c
  5239  0023C2  0E77               	movlw	119
  5240  0023C4                     u7127:
  5241  0023C4  2EE8               	decfsz	wreg,f,c
  5242  0023C6  D7FE               	bra	u7127
  5243  0023C8  2E09               	decfsz	??_SerIni^0,f,c
  5244  0023CA  D7FC               	bra	u7127
  5245  0023CC  2E0A               	decfsz	(??_SerIni+1)^0,f,c
  5246  0023CE  D7FA               	bra	u7127
  5247  0023D0  F000               	nop	
  5248  0023D2                     
  5249                           ;RS232.c: 35:         if(readDataOdd != 0xFF){
  5250  0023D2  280D               	incf	SerIni@readDataOdd^0,w,c
  5251  0023D4  B4D8               	btfsc	status,2,c
  5252  0023D6  EFEF  F011         	goto	u6501
  5253  0023DA  EFF1  F011         	goto	u6500
  5254  0023DE                     u6501:
  5255  0023DE  EFFB  F011         	goto	l6533
  5256  0023E2                     u6500:
  5257  0023E2                     
  5258                           ;RS232.c: 36:             SerialNum[j] = readDataOdd;
  5259  0023E2  5011               	movf	SerIni@j^0,w,c
  5260  0023E4  2407               	addwf	SerIni@SerialNum^0,w,c
  5261  0023E6  6ED9               	movwf	fsr2l,c
  5262  0023E8  5012               	movf	(SerIni@j+1)^0,w,c
  5263  0023EA  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5264  0023EC  6EDA               	movwf	fsr2h,c
  5265  0023EE  C00D  FFDF         	movff	SerIni@readDataOdd,indf2
  5266  0023F2                     
  5267                           ;RS232.c: 37:             j++;
  5268  0023F2  4A11               	infsnz	SerIni@j^0,f,c
  5269  0023F4  2A12               	incf	(SerIni@j+1)^0,f,c
  5270  0023F6                     l6533:
  5271                           
  5272                           ;RS232.c: 40:         dataeeAddrWrk++;
  5273  0023F6  4A0B               	infsnz	SerIni@dataeeAddrWrk^0,f,c
  5274  0023F8  2A0C               	incf	(SerIni@dataeeAddrWrk+1)^0,f,c
  5275  0023FA                     
  5276                           ;RS232.c: 41:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  5277  0023FA  C00B  F005         	movff	SerIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5278  0023FE  C00C  F006         	movff	SerIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5279  002402  EC5E  F01E         	call	_DATAEE_ReadByte	;wreg free
  5280  002406  6E0E               	movwf	SerIni@readDataEven^0,c
  5281  002408                     
  5282                           ;RS232.c: 43:         dataeeAddrWrk++;
  5283  002408  4A0B               	infsnz	SerIni@dataeeAddrWrk^0,f,c
  5284  00240A  2A0C               	incf	(SerIni@dataeeAddrWrk+1)^0,f,c
  5285  00240C                     
  5286                           ;RS232.c: 44:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5287  00240C  0E03               	movlw	3
  5288  00240E  6E0A               	movwf	(??_SerIni+1)^0,c
  5289  002410  0E08               	movlw	8
  5290  002412  6E09               	movwf	??_SerIni^0,c
  5291  002414  0E77               	movlw	119
  5292  002416                     u7137:
  5293  002416  2EE8               	decfsz	wreg,f,c
  5294  002418  D7FE               	bra	u7137
  5295  00241A  2E09               	decfsz	??_SerIni^0,f,c
  5296  00241C  D7FC               	bra	u7137
  5297  00241E  2E0A               	decfsz	(??_SerIni+1)^0,f,c
  5298  002420  D7FA               	bra	u7137
  5299  002422  F000               	nop	
  5300  002424                     
  5301                           ;RS232.c: 47:         if(readDataEven != 0xFF){
  5302  002424  280E               	incf	SerIni@readDataEven^0,w,c
  5303  002426  B4D8               	btfsc	status,2,c
  5304  002428  EF18  F012         	goto	u6511
  5305  00242C  EF1A  F012         	goto	u6510
  5306  002430                     u6511:
  5307  002430  EF24  F012         	goto	l6547
  5308  002434                     u6510:
  5309  002434                     
  5310                           ;RS232.c: 48:             SerialNum[j] = readDataEven;
  5311  002434  5011               	movf	SerIni@j^0,w,c
  5312  002436  2407               	addwf	SerIni@SerialNum^0,w,c
  5313  002438  6ED9               	movwf	fsr2l,c
  5314  00243A  5012               	movf	(SerIni@j+1)^0,w,c
  5315  00243C  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5316  00243E  6EDA               	movwf	fsr2h,c
  5317  002440  C00E  FFDF         	movff	SerIni@readDataEven,indf2
  5318  002444                     
  5319                           ;RS232.c: 49:             j++;
  5320  002444  4A11               	infsnz	SerIni@j^0,f,c
  5321  002446  2A12               	incf	(SerIni@j+1)^0,f,c
  5322  002448                     l6547:
  5323                           
  5324                           ;RS232.c: 52:         MB303xx[i] = readDataOdd *256 + readDataEven;
  5325  002448  500E               	movf	SerIni@readDataEven^0,w,c
  5326  00244A  C00D  F009         	movff	SerIni@readDataOdd,??_SerIni
  5327  00244E  6A0A               	clrf	(??_SerIni+1)^0,c
  5328  002450  C009  F00A         	movff	??_SerIni,??_SerIni+1
  5329  002454  6A09               	clrf	??_SerIni^0,c
  5330  002456  2609               	addwf	??_SerIni^0,f,c
  5331  002458  0E00               	movlw	0
  5332  00245A  220A               	addwfc	(??_SerIni+1)^0,f,c
  5333  00245C  90D8               	bcf	status,0,c
  5334  00245E  340F               	rlcf	SerIni@i^0,w,c
  5335  002460  6ED9               	movwf	fsr2l,c
  5336  002462  3410               	rlcf	(SerIni@i+1)^0,w,c
  5337  002464  6EDA               	movwf	fsr2h,c
  5338  002466  0E18               	movlw	low _MB303xx
  5339  002468  26D9               	addwf	fsr2l,f,c
  5340  00246A  0E01               	movlw	high _MB303xx
  5341  00246C  22DA               	addwfc	fsr2h,f,c
  5342  00246E  C009  FFDE         	movff	??_SerIni,postinc2
  5343  002472  C00A  FFDD         	movff	??_SerIni+1,postdec2
  5344                           
  5345                           ;RS232.c: 56:     }
  5346  002476  4A0F               	infsnz	SerIni@i^0,f,c
  5347  002478  2A10               	incf	(SerIni@i+1)^0,f,c
  5348  00247A  BE10               	btfsc	(SerIni@i+1)^0,7,c
  5349  00247C  EF49  F012         	goto	u6521
  5350  002480  5010               	movf	(SerIni@i+1)^0,w,c
  5351  002482  E109               	bnz	u6520
  5352  002484  0E05               	movlw	5
  5353  002486  5C0F               	subwf	SerIni@i^0,w,c
  5354  002488  A0D8               	btfss	status,0,c
  5355  00248A  EF49  F012         	goto	u6521
  5356  00248E  EF4B  F012         	goto	u6520
  5357  002492                     u6521:
  5358  002492  EFD6  F011         	goto	l6523
  5359  002496                     u6520:
  5360  002496                     
  5361                           ;RS232.c: 58:     SerialNum[j] = '\0';
  5362  002496  5011               	movf	SerIni@j^0,w,c
  5363  002498  2407               	addwf	SerIni@SerialNum^0,w,c
  5364  00249A  6ED9               	movwf	fsr2l,c
  5365  00249C  5012               	movf	(SerIni@j+1)^0,w,c
  5366  00249E  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5367  0024A0  6EDA               	movwf	fsr2h,c
  5368  0024A2  0E00               	movlw	0
  5369  0024A4  6EDF               	movwf	indf2,c
  5370  0024A6  0012               	return		;funcret
  5371  0024A8                     __end_of_SerIni:
  5372                           	opt callstack 0
  5373                           
  5374 ;; *************** function _DATAEE_ReadByte *****************
  5375 ;; Defined at:
  5376 ;;		line 187 in file "mcc_generated_files/memory.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  bAdd            2    4[COMRAM] unsigned short 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      unsigned char 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;Total ram usage:        2 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    4
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_SerIni
  5401 ;;		_SaveCardDat
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text15
  5406  003CBC                     __ptext15:
  5407                           	opt callstack 0
  5408  003CBC                     _DATAEE_ReadByte:
  5409                           	opt callstack 24
  5410  003CBC                     
  5411                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  5412  003CBC  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  5413  003CBE  0B03               	andlw	3
  5414  003CC0  6E7F               	movwf	127,c	;volatile
  5415  003CC2                     
  5416                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  5417  003CC2  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  5418  003CC6                     
  5419                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  5420  003CC6  0E3F               	movlw	-193
  5421  003CC8  1681               	andwf	129,f,c	;volsfr
  5422  003CCA                     
  5423                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  5424  003CCA  8081               	bsf	129,0,c	;volsfr
  5425  003CCC                     
  5426                           ;mcc_generated_files/memory.c: 193:     __nop();
  5427  003CCC  F000               	nop	
  5428  003CCE                     
  5429                           ;mcc_generated_files/memory.c: 194:     __nop();
  5430  003CCE  F000               	nop	
  5431  003CD0                     
  5432                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  5433  003CD0  5080               	movf	128,w,c	;volatile
  5434  003CD2  0012               	return		;funcret
  5435  003CD4                     __end_of_DATAEE_ReadByte:
  5436                           	opt callstack 0
  5437                           
  5438 ;; *************** function _Initalisation *****************
  5439 ;; Defined at:
  5440 ;;		line 11 in file "RS232.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		None
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    4
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_InitialiseString
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text16
  5469  003DF8                     __ptext16:
  5470                           	opt callstack 0
  5471  003DF8                     _Initalisation:
  5472                           	opt callstack 24
  5473  003DF8  0012               	return		;funcret
  5474  003DFA                     __end_of_Initalisation:
  5475                           	opt callstack 0
  5476                           
  5477 ;; *************** function _SYSTEM_Initialize *****************
  5478 ;; Defined at:
  5479 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;Total ram usage:        0 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    6
  5500 ;; This function calls:
  5501 ;;		_EUSART1_Initialize
  5502 ;;		_EUSART2_Initialize
  5503 ;;		_INTERRUPT_Initialize
  5504 ;;		_OSCILLATOR_Initialize
  5505 ;;		_PIN_MANAGER_Initialize
  5506 ;;		_PMD_Initialize
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text17
  5513  003C8A                     __ptext17:
  5514                           	opt callstack 0
  5515  003C8A                     _SYSTEM_Initialize:
  5516                           	opt callstack 24
  5517  003C8A                     
  5518                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5519  003C8A  ECF9  F01E         	call	_INTERRUPT_Initialize	;wreg free
  5520  003C8E                     
  5521                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5522  003C8E  EC37  F01E         	call	_PMD_Initialize	;wreg free
  5523  003C92                     
  5524                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5525  003C92  EC09  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  5526  003C96                     
  5527                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5528  003C96  EC6A  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  5529  003C9A                     
  5530                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5531  003C9A  ECD1  F018         	call	_EUSART1_Initialize	;wreg free
  5532  003C9E                     
  5533                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  5534  003C9E  EC50  F019         	call	_EUSART2_Initialize	;wreg free
  5535  003CA2  0012               	return		;funcret
  5536  003CA4                     __end_of_SYSTEM_Initialize:
  5537                           	opt callstack 0
  5538                           
  5539 ;; *************** function _PMD_Initialize *****************
  5540 ;; Defined at:
  5541 ;;		line 74 in file "mcc_generated_files/mcc.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    4
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_SYSTEM_Initialize
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text18
  5570  003C6E                     __ptext18:
  5571                           	opt callstack 0
  5572  003C6E                     _PMD_Initialize:
  5573                           	opt callstack 25
  5574  003C6E                     
  5575                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  5576  003C6E  0E00               	movlw	0
  5577  003C70  010E               	movlb	14	; () banked
  5578  003C72  6FE1               	movwf	225,b	;volatile
  5579                           
  5580                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  5581  003C74  0E00               	movlw	0
  5582  003C76  6FE2               	movwf	226,b	;volatile
  5583                           
  5584                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  5585  003C78  0E00               	movlw	0
  5586  003C7A  6FE3               	movwf	227,b	;volatile
  5587                           
  5588                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  5589  003C7C  0E00               	movlw	0
  5590  003C7E  6FE4               	movwf	228,b	;volatile
  5591                           
  5592                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  5593  003C80  0E00               	movlw	0
  5594  003C82  6FE5               	movwf	229,b	;volatile
  5595                           
  5596                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  5597  003C84  0E00               	movlw	0
  5598  003C86  6FE6               	movwf	230,b	;volatile
  5599  003C88                     
  5600                           ; BSR set to: 14
  5601  003C88  0012               	return		;funcret
  5602  003C8A                     __end_of_PMD_Initialize:
  5603                           	opt callstack 0
  5604                           
  5605 ;; *************** function _PIN_MANAGER_Initialize *****************
  5606 ;; Defined at:
  5607 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    4
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_SYSTEM_Initialize
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text19
  5636  003012                     __ptext19:
  5637                           	opt callstack 0
  5638  003012                     _PIN_MANAGER_Initialize:
  5639                           	opt callstack 25
  5640  003012                     
  5641                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5642  003012  0E00               	movlw	0
  5643  003014  6E87               	movwf	135,c	;volatile
  5644                           
  5645                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5646  003016  0E00               	movlw	0
  5647  003018  6E86               	movwf	134,c	;volatile
  5648                           
  5649                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5650  00301A  0E00               	movlw	0
  5651  00301C  6E83               	movwf	131,c	;volatile
  5652                           
  5653                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5654  00301E  0E00               	movlw	0
  5655  003020  6E84               	movwf	132,c	;volatile
  5656                           
  5657                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5658  003022  0E00               	movlw	0
  5659  003024  6E85               	movwf	133,c	;volatile
  5660                           
  5661                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5662  003026  0E07               	movlw	7
  5663  003028  6E8C               	movwf	140,c	;volatile
  5664                           
  5665                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  5666  00302A  0E07               	movlw	7
  5667  00302C  6E88               	movwf	136,c	;volatile
  5668                           
  5669                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5670  00302E  0EBF               	movlw	191
  5671  003030  6E89               	movwf	137,c	;volatile
  5672                           
  5673                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5674  003032  0EBF               	movlw	191
  5675  003034  6E8A               	movwf	138,c	;volatile
  5676                           
  5677                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  5678  003036  0EFE               	movlw	254
  5679  003038  6E8B               	movwf	139,c	;volatile
  5680  00303A                     
  5681                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5682  00303A  010F               	movlb	15	; () banked
  5683  00303C  6926               	setf	38,b	;volatile
  5684                           
  5685                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  5686  00303E  0E3B               	movlw	59
  5687  003040  6F21               	movwf	33,b	;volatile
  5688                           
  5689                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  5690  003042  0E37               	movlw	55
  5691  003044  6F19               	movwf	25,b	;volatile
  5692                           
  5693                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5694  003046  0E07               	movlw	7
  5695  003048  6F2E               	movwf	46,b	;volatile
  5696  00304A                     
  5697                           ; BSR set to: 15
  5698                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5699  00304A  6911               	setf	17,b	;volatile
  5700                           
  5701                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5702  00304C  0E00               	movlw	0
  5703  00304E  6F25               	movwf	37,b	;volatile
  5704                           
  5705                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5706  003050  0E00               	movlw	0
  5707  003052  6F2D               	movwf	45,b	;volatile
  5708                           
  5709                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5710  003054  0E00               	movlw	0
  5711  003056  6F18               	movwf	24,b	;volatile
  5712                           
  5713                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5714  003058  0E00               	movlw	0
  5715  00305A  6F10               	movwf	16,b	;volatile
  5716                           
  5717                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5718  00305C  0E00               	movlw	0
  5719  00305E  6F20               	movwf	32,b	;volatile
  5720                           
  5721                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  5722  003060  0E00               	movlw	0
  5723  003062  6F2C               	movwf	44,b	;volatile
  5724                           
  5725                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  5726  003064  0E00               	movlw	0
  5727  003066  6F0F               	movwf	15,b	;volatile
  5728                           
  5729                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  5730  003068  0E00               	movlw	0
  5731  00306A  6F17               	movwf	23,b	;volatile
  5732                           
  5733                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  5734  00306C  0E00               	movlw	0
  5735  00306E  6F1F               	movwf	31,b	;volatile
  5736                           
  5737                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  5738  003070  0E00               	movlw	0
  5739  003072  6F24               	movwf	36,b	;volatile
  5740  003074                     
  5741                           ; BSR set to: 15
  5742                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  5743  003074  690E               	setf	14,b	;volatile
  5744  003076                     
  5745                           ; BSR set to: 15
  5746                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  5747  003076  6916               	setf	22,b	;volatile
  5748  003078                     
  5749                           ; BSR set to: 15
  5750                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  5751  003078  691E               	setf	30,b	;volatile
  5752  00307A                     
  5753                           ; BSR set to: 15
  5754                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  5755  00307A  6923               	setf	35,b	;volatile
  5756                           
  5757                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  5758  00307C  0E07               	movlw	7
  5759  00307E  6F2B               	movwf	43,b	;volatile
  5760  003080                     
  5761                           ; BSR set to: 15
  5762                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  5763  003080  690D               	setf	13,b	;volatile
  5764  003082                     
  5765                           ; BSR set to: 15
  5766                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  5767  003082  6915               	setf	21,b	;volatile
  5768  003084                     
  5769                           ; BSR set to: 15
  5770                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  5771  003084  691D               	setf	29,b	;volatile
  5772  003086                     
  5773                           ; BSR set to: 15
  5774                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  5775  003086  6922               	setf	34,b	;volatile
  5776                           
  5777                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  5778  003088  0E0F               	movlw	15
  5779  00308A  6F2A               	movwf	42,b	;volatile
  5780                           
  5781                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  5782  00308C  0E17               	movlw	23
  5783  00308E  010E               	movlb	14	; () banked
  5784  003090  6FB5               	movwf	181,b	;volatile
  5785                           
  5786                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  5787  003092  0E0B               	movlw	11
  5788  003094  6FF5               	movwf	245,b	;volatile
  5789                           
  5790                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  5791  003096  0E09               	movlw	9
  5792  003098  6FFD               	movwf	253,b	;volatile
  5793                           
  5794                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  5795  00309A  0E0F               	movlw	15
  5796  00309C  6F8D               	movwf	141,b	;volatile
  5797  00309E                     
  5798                           ; BSR set to: 14
  5799  00309E  0012               	return		;funcret
  5800  0030A0                     __end_of_PIN_MANAGER_Initialize:
  5801                           	opt callstack 0
  5802                           
  5803 ;; *************** function _OSCILLATOR_Initialize *****************
  5804 ;; Defined at:
  5805 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;Total ram usage:        0 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    4
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_SYSTEM_Initialize
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text20
  5834  003CD4                     __ptext20:
  5835                           	opt callstack 0
  5836  003CD4                     _OSCILLATOR_Initialize:
  5837                           	opt callstack 25
  5838  003CD4                     
  5839                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  5840  003CD4  0E60               	movlw	96
  5841  003CD6  010E               	movlb	14	; () banked
  5842  003CD8  6FD8               	movwf	216,b	;volatile
  5843                           
  5844                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  5845  003CDA  0E00               	movlw	0
  5846  003CDC  6FDA               	movwf	218,b	;volatile
  5847                           
  5848                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5849  003CDE  0E00               	movlw	0
  5850  003CE0  6FDC               	movwf	220,b	;volatile
  5851                           
  5852                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  5853  003CE2  0E06               	movlw	6
  5854  003CE4  6FDE               	movwf	222,b	;volatile
  5855                           
  5856                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5857  003CE6  0E00               	movlw	0
  5858  003CE8  6FDD               	movwf	221,b	;volatile
  5859  003CEA                     
  5860                           ; BSR set to: 14
  5861  003CEA  0012               	return		;funcret
  5862  003CEC                     __end_of_OSCILLATOR_Initialize:
  5863                           	opt callstack 0
  5864                           
  5865 ;; *************** function _INTERRUPT_Initialize *****************
  5866 ;; Defined at:
  5867 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		None
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    4
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_SYSTEM_Initialize
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text21
  5896  003DF2                     __ptext21:
  5897                           	opt callstack 0
  5898  003DF2                     _INTERRUPT_Initialize:
  5899                           	opt callstack 25
  5900  003DF2                     
  5901                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  5902  003DF2  9AF2               	bcf	242,5,c	;volatile
  5903  003DF4  0012               	return		;funcret
  5904  003DF6                     __end_of_INTERRUPT_Initialize:
  5905                           	opt callstack 0
  5906                           
  5907 ;; *************** function _EUSART2_Initialize *****************
  5908 ;; Defined at:
  5909 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    5
  5930 ;; This function calls:
  5931 ;;		_EUSART2_SetErrorHandler
  5932 ;;		_EUSART2_SetFramingErrorHandler
  5933 ;;		_EUSART2_SetOverrunErrorHandler
  5934 ;;		_EUSART2_SetRxInterruptHandler
  5935 ;;		_EUSART2_SetTxInterruptHandler
  5936 ;; This function is called by:
  5937 ;;		_SYSTEM_Initialize
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text22
  5942  0032A0                     __ptext22:
  5943                           	opt callstack 0
  5944  0032A0                     _EUSART2_Initialize:
  5945                           	opt callstack 24
  5946  0032A0                     
  5947                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  5948  0032A0  010E               	movlb	14	; () banked
  5949  0032A2  9FC5               	bcf	197,7,b	;volatile
  5950  0032A4                     
  5951                           ; BSR set to: 14
  5952                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  5953  0032A4  0EA0               	movlw	low _EUSART2_Receive_ISR
  5954  0032A6  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  5955  0032A8  0E2C               	movlw	high _EUSART2_Receive_ISR
  5956  0032AA  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  5957  0032AC  ECB4  F01E         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  5958  0032B0                     
  5959                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  5960  0032B0  010E               	movlb	14	; () banked
  5961  0032B2  9DC5               	bcf	197,6,b	;volatile
  5962                           
  5963                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  5964  0032B4  0EF6               	movlw	low _EUSART2_Transmit_ISR
  5965  0032B6  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  5966  0032B8  0E38               	movlw	high _EUSART2_Transmit_ISR
  5967  0032BA  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  5968  0032BC  ECAF  F01E         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  5969  0032C0                     
  5970                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  5971  0032C0  0E08               	movlw	8
  5972  0032C2  010E               	movlb	14	; () banked
  5973  0032C4  6F9F               	movwf	159,b	;volatile
  5974  0032C6                     
  5975                           ; BSR set to: 14
  5976                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  5977  0032C6  0E90               	movlw	144
  5978  0032C8  6F9D               	movwf	157,b	;volatile
  5979  0032CA                     
  5980                           ; BSR set to: 14
  5981                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  5982  0032CA  0E24               	movlw	36
  5983  0032CC  6F9E               	movwf	158,b	;volatile
  5984  0032CE                     
  5985                           ; BSR set to: 14
  5986                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  5987  0032CE  0EA0               	movlw	160
  5988  0032D0  6F9B               	movwf	155,b	;volatile
  5989  0032D2                     
  5990                           ; BSR set to: 14
  5991                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  5992  0032D2  0E01               	movlw	1
  5993  0032D4  6F9C               	movwf	156,b	;volatile
  5994  0032D6                     
  5995                           ; BSR set to: 14
  5996                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  5997  0032D6  0EFA               	movlw	low _EUSART2_DefaultFramingErrorHandler
  5998  0032D8  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  5999  0032DA  0E3D               	movlw	high _EUSART2_DefaultFramingErrorHandler
  6000  0032DC  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  6001  0032DE  ECBE  F01E         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  6002  0032E2                     
  6003                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  6004  0032E2  0ECC               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  6005  0032E4  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  6006  0032E6  0E3D               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  6007  0032E8  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6008  0032EA  ECB9  F01E         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  6009  0032EE                     
  6010                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  6011  0032EE  0EE0               	movlw	low _EUSART2_DefaultErrorHandler
  6012  0032F0  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  6013  0032F2  0E3D               	movlw	high _EUSART2_DefaultErrorHandler
  6014  0032F4  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  6015  0032F6  ECC3  F01E         	call	_EUSART2_SetErrorHandler	;wreg free
  6016                           
  6017                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  6018  0032FA  0E00               	movlw	0
  6019  0032FC  0100               	movlb	0	; () banked
  6020  0032FE  6FB6               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6021                           
  6022                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  6023  003300  0E00               	movlw	0
  6024  003302  6FBA               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6025                           
  6026                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  6027  003304  0E00               	movlw	0
  6028  003306  6FB9               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6029                           
  6030                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  6031  003308  0E20               	movlw	32
  6032  00330A  6FBC               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6033                           
  6034                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  6035  00330C  0E00               	movlw	0
  6036  00330E  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6037                           
  6038                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  6039  003310  0E00               	movlw	0
  6040  003312  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  6041                           
  6042                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  6043  003314  0E00               	movlw	0
  6044  003316  6FB7               	movwf	_eusart2RxCount& (0+255),b	;volatile
  6045  003318                     
  6046                           ; BSR set to: 0
  6047                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  6048  003318  010E               	movlb	14	; () banked
  6049  00331A  8FC5               	bsf	197,7,b	;volatile
  6050  00331C                     
  6051                           ; BSR set to: 14
  6052  00331C  0012               	return		;funcret
  6053  00331E                     __end_of_EUSART2_Initialize:
  6054                           	opt callstack 0
  6055                           
  6056 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  6057 ;; Defined at:
  6058 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6061 ;;		 -> EUSART2_Transmit_ISR(1), 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;Total ram usage:        2 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    4
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_EUSART2_Initialize
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text23
  6088  003D5E                     __ptext23:
  6089                           	opt callstack 0
  6090  003D5E                     _EUSART2_SetTxInterruptHandler:
  6091                           	opt callstack 24
  6092  003D5E                     
  6093                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6094  003D5E  C005  F1F6         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  6095  003D62  C006  F1F7         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  6096  003D66  0012               	return		;funcret
  6097  003D68                     __end_of_EUSART2_SetTxInterruptHandler:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  6101 ;; Defined at:
  6102 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6105 ;;		 -> EUSART2_Receive_ISR(1), 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;Total ram usage:        2 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    4
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_EUSART2_Initialize
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text24
  6132  003D68                     __ptext24:
  6133                           	opt callstack 0
  6134  003D68                     _EUSART2_SetRxInterruptHandler:
  6135                           	opt callstack 24
  6136  003D68                     
  6137                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6138  003D68  C005  F1F4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  6139  003D6C  C006  F1F5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  6140  003D70  0012               	return		;funcret
  6141  003D72                     __end_of_EUSART2_SetRxInterruptHandler:
  6142                           	opt callstack 0
  6143                           
  6144 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6145 ;; Defined at:
  6146 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6149 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, status,2, status,0
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;Total ram usage:        2 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    4
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_EUSART2_Initialize
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text25
  6176  003D72                     __ptext25:
  6177                           	opt callstack 0
  6178  003D72                     _EUSART2_SetOverrunErrorHandler:
  6179                           	opt callstack 24
  6180  003D72                     
  6181                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  6182  003D72  C005  F1EC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  6183  003D76  C006  F1ED         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  6184  003D7A  0012               	return		;funcret
  6185  003D7C                     __end_of_EUSART2_SetOverrunErrorHandler:
  6186                           	opt callstack 0
  6187                           
  6188 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6189 ;; Defined at:
  6190 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6193 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;Total ram usage:        2 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    4
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_EUSART2_Initialize
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text26
  6220  003D7C                     __ptext26:
  6221                           	opt callstack 0
  6222  003D7C                     _EUSART2_SetFramingErrorHandler:
  6223                           	opt callstack 24
  6224  003D7C                     
  6225                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  6226  003D7C  C005  F1EE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  6227  003D80  C006  F1EF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  6228  003D84  0012               	return		;funcret
  6229  003D86                     __end_of_EUSART2_SetFramingErrorHandler:
  6230                           	opt callstack 0
  6231                           
  6232 ;; *************** function _EUSART2_SetErrorHandler *****************
  6233 ;; Defined at:
  6234 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6237 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;Total ram usage:        2 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    4
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_EUSART2_Initialize
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text27
  6264  003D86                     __ptext27:
  6265                           	opt callstack 0
  6266  003D86                     _EUSART2_SetErrorHandler:
  6267                           	opt callstack 24
  6268  003D86                     
  6269                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  6270  003D86  C005  F1EA         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  6271  003D8A  C006  F1EB         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  6272  003D8E  0012               	return		;funcret
  6273  003D90                     __end_of_EUSART2_SetErrorHandler:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function _EUSART1_Initialize *****************
  6277 ;; Defined at:
  6278 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;Total ram usage:        0 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    5
  6299 ;; This function calls:
  6300 ;;		_EUSART1_SetErrorHandler
  6301 ;;		_EUSART1_SetFramingErrorHandler
  6302 ;;		_EUSART1_SetOverrunErrorHandler
  6303 ;;		_EUSART1_SetRxInterruptHandler
  6304 ;;		_EUSART1_SetTxInterruptHandler
  6305 ;; This function is called by:
  6306 ;;		_SYSTEM_Initialize
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text28
  6311  0031A2                     __ptext28:
  6312                           	opt callstack 0
  6313  0031A2                     _EUSART1_Initialize:
  6314                           	opt callstack 24
  6315  0031A2                     
  6316                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  6317  0031A2  010E               	movlb	14	; () banked
  6318  0031A4  9BC5               	bcf	197,5,b	;volatile
  6319  0031A6                     
  6320                           ; BSR set to: 14
  6321                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6322  0031A6  0E60               	movlw	low _EUSART1_Receive_ISR
  6323  0031A8  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  6324  0031AA  0E2D               	movlw	high _EUSART1_Receive_ISR
  6325  0031AC  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  6326  0031AE  ECCD  F01E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  6327  0031B2                     
  6328                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  6329  0031B2  010E               	movlb	14	; () banked
  6330  0031B4  99C5               	bcf	197,4,b	;volatile
  6331                           
  6332                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  6333  0031B6  0EC6               	movlw	low _EUSART1_Transmit_ISR
  6334  0031B8  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  6335  0031BA  0E39               	movlw	high _EUSART1_Transmit_ISR
  6336  0031BC  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  6337  0031BE  ECC8  F01E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  6338  0031C2                     
  6339                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  6340  0031C2  0E08               	movlw	8
  6341  0031C4  6E9F               	movwf	159,c	;volatile
  6342  0031C6                     
  6343                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  6344  0031C6  0E90               	movlw	144
  6345  0031C8  6E9D               	movwf	157,c	;volatile
  6346  0031CA                     
  6347                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  6348  0031CA  0E24               	movlw	36
  6349  0031CC  6E9E               	movwf	158,c	;volatile
  6350  0031CE                     
  6351                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  6352  0031CE  0EA0               	movlw	160
  6353  0031D0  6E9B               	movwf	155,c	;volatile
  6354  0031D2                     
  6355                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  6356  0031D2  0E03               	movlw	3
  6357  0031D4  6E9C               	movwf	156,c	;volatile
  6358  0031D6                     
  6359                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  6360  0031D6  0E01               	movlw	1
  6361  0031D8  6E9C               	movwf	156,c	;volatile
  6362                           
  6363                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6364  0031DA  0EFC               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6365  0031DC  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6366  0031DE  0E3D               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6367  0031E0  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6368  0031E2  ECD7  F01E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6369                           
  6370                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6371  0031E6  0EE6               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6372  0031E8  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6373  0031EA  0E3D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6374  0031EC  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6375  0031EE  ECD2  F01E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6376                           
  6377                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6378  0031F2  0EEC               	movlw	low _EUSART1_DefaultErrorHandler
  6379  0031F4  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6380  0031F6  0E3D               	movlw	high _EUSART1_DefaultErrorHandler
  6381  0031F8  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6382  0031FA  ECDC  F01E         	call	_EUSART1_SetErrorHandler	;wreg free
  6383  0031FE                     
  6384                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  6385  0031FE  0E00               	movlw	0
  6386  003200  0100               	movlb	0	; () banked
  6387  003202  6FB1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6388  003204                     
  6389                           ; BSR set to: 0
  6390                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  6391  003204  0E00               	movlw	0
  6392  003206  6FB5               	movwf	_eusart1TxHead& (0+255),b	;volatile
  6393  003208                     
  6394                           ; BSR set to: 0
  6395                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  6396  003208  0E00               	movlw	0
  6397  00320A  6FB4               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6398  00320C                     
  6399                           ; BSR set to: 0
  6400                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  6401  00320C  0E10               	movlw	16
  6402  00320E  6FBB               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6403  003210                     
  6404                           ; BSR set to: 0
  6405                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  6406  003210  0E00               	movlw	0
  6407  003212  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  6408  003214                     
  6409                           ; BSR set to: 0
  6410                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  6411  003214  0E00               	movlw	0
  6412  003216  6FB3               	movwf	_eusart1RxTail& (0+255),b	;volatile
  6413  003218                     
  6414                           ; BSR set to: 0
  6415                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  6416  003218  0E00               	movlw	0
  6417  00321A  6FB2               	movwf	_eusart1RxCount& (0+255),b	;volatile
  6418  00321C                     
  6419                           ; BSR set to: 0
  6420                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  6421  00321C  010E               	movlb	14	; () banked
  6422  00321E  8BC5               	bsf	197,5,b	;volatile
  6423  003220                     
  6424                           ; BSR set to: 14
  6425  003220  0012               	return		;funcret
  6426  003222                     __end_of_EUSART1_Initialize:
  6427                           	opt callstack 0
  6428                           
  6429 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6430 ;; Defined at:
  6431 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6434 ;;		 -> EUSART1_Transmit_ISR(1), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      void 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6450 ;;Total ram usage:        2 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    4
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_EUSART1_Initialize
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text29
  6461  003D90                     __ptext29:
  6462                           	opt callstack 0
  6463  003D90                     _EUSART1_SetTxInterruptHandler:
  6464                           	opt callstack 24
  6465  003D90                     
  6466                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6467  003D90  C005  F1F2         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6468  003D94  C006  F1F3         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6469  003D98  0012               	return		;funcret
  6470  003D9A                     __end_of_EUSART1_SetTxInterruptHandler:
  6471                           	opt callstack 0
  6472                           
  6473 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6474 ;; Defined at:
  6475 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6478 ;;		 -> EUSART1_Receive_ISR(1), 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6494 ;;Total ram usage:        2 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    4
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_EUSART1_Initialize
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text30
  6505  003D9A                     __ptext30:
  6506                           	opt callstack 0
  6507  003D9A                     _EUSART1_SetRxInterruptHandler:
  6508                           	opt callstack 24
  6509  003D9A                     
  6510                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6511  003D9A  C005  F1F0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6512  003D9E  C006  F1F1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6513  003DA2  0012               	return		;funcret
  6514  003DA4                     __end_of_EUSART1_SetRxInterruptHandler:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6518 ;; Defined at:
  6519 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6522 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;Total ram usage:        2 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    4
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_EUSART1_Initialize
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text31
  6549  003DA4                     __ptext31:
  6550                           	opt callstack 0
  6551  003DA4                     _EUSART1_SetOverrunErrorHandler:
  6552                           	opt callstack 24
  6553  003DA4                     
  6554                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  6555  003DA4  C005  F1E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6556  003DA8  C006  F1E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6557  003DAC  0012               	return		;funcret
  6558  003DAE                     __end_of_EUSART1_SetOverrunErrorHandler:
  6559                           	opt callstack 0
  6560                           
  6561 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6562 ;; Defined at:
  6563 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6566 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;Total ram usage:        2 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    4
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_EUSART1_Initialize
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text32
  6593  003DAE                     __ptext32:
  6594                           	opt callstack 0
  6595  003DAE                     _EUSART1_SetFramingErrorHandler:
  6596                           	opt callstack 24
  6597  003DAE                     
  6598                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  6599  003DAE  C005  F1E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6600  003DB2  C006  F1E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6601  003DB6  0012               	return		;funcret
  6602  003DB8                     __end_of_EUSART1_SetFramingErrorHandler:
  6603                           	opt callstack 0
  6604                           
  6605 ;; *************** function _EUSART1_SetErrorHandler *****************
  6606 ;; Defined at:
  6607 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6610 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6626 ;;Total ram usage:        2 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    4
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_EUSART1_Initialize
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text33
  6637  003DB8                     __ptext33:
  6638                           	opt callstack 0
  6639  003DB8                     _EUSART1_SetErrorHandler:
  6640                           	opt callstack 24
  6641  003DB8                     
  6642                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  6643  003DB8  C005  F1E4         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6644  003DBC  C006  F1E5         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6645  003DC0  0012               	return		;funcret
  6646  003DC2                     __end_of_EUSART1_SetErrorHandler:
  6647                           	opt callstack 0
  6648                           
  6649 ;; *************** function _PrintModbus *****************
  6650 ;; Defined at:
  6651 ;;		line 104 in file "Modbus.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  i               2   43[BANK0 ] int 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;Total ram usage:        3 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:   13
  6672 ;; This function calls:
  6673 ;;		_printf
  6674 ;; This function is called by:
  6675 ;;		_main
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text34
  6680  00331E                     __ptext34:
  6681                           	opt callstack 0
  6682  00331E                     _PrintModbus:
  6683                           	opt callstack 17
  6684  00331E                     
  6685                           ;Modbus.c: 109:     printf("Modbus Data Capture Complete:\r\n");
  6686  00331E  0E04               	movlw	low STR_8
  6687  003320  0100               	movlb	0	; () banked
  6688  003322  6F7D               	movwf	printf@fmt& (0+255),b
  6689  003324  0EFD               	movlw	high STR_8
  6690  003326  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6691  003328  ECFD  F01D         	call	_printf	;wreg free
  6692  00332C                     
  6693                           ;Modbus.c: 111:     for(i=0; i< ModDataCnt ; i++ ){
  6694  00332C  0E00               	movlw	0
  6695  00332E  0100               	movlb	0	; () banked
  6696  003330  6F8C               	movwf	(PrintModbus@i+1)& (0+255),b
  6697  003332  0E00               	movlw	0
  6698  003334  6F8B               	movwf	PrintModbus@i& (0+255),b
  6699  003336  EFB5  F019         	goto	l6849
  6700  00333A                     l6845:
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;Modbus.c: 112:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  6704  00333A  0E80               	movlw	low STR_9
  6705  00333C  6F7D               	movwf	printf@fmt& (0+255),b
  6706  00333E  0EFE               	movlw	high STR_9
  6707  003340  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6708  003342  C08B  F07F         	movff	PrintModbus@i,?_printf+2
  6709  003346  C08C  F080         	movff	PrintModbus@i+1,?_printf+3
  6710  00334A  0E00               	movlw	low _ModbusData
  6711  00334C  258B               	addwf	PrintModbus@i& (0+255),w,b
  6712  00334E  6ED9               	movwf	fsr2l,c
  6713  003350  0E02               	movlw	high _ModbusData
  6714  003352  218C               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  6715  003354  6EDA               	movwf	fsr2h,c
  6716  003356  50DF               	movf	indf2,w,c
  6717  003358  6E55               	movwf	??_PrintModbus^0,c
  6718  00335A  5055               	movf	??_PrintModbus^0,w,c
  6719  00335C  6F81               	movwf	(?_printf+4)& (0+255),b
  6720  00335E  6B82               	clrf	(?_printf+5)& (0+255),b
  6721  003360  ECFD  F01D         	call	_printf	;wreg free
  6722  003364                     
  6723                           ;Modbus.c: 113:     }
  6724  003364  0100               	movlb	0	; () banked
  6725  003366  4B8B               	infsnz	PrintModbus@i& (0+255),f,b
  6726  003368  2B8C               	incf	(PrintModbus@i+1)& (0+255),f,b
  6727  00336A                     l6849:
  6728                           
  6729                           ; BSR set to: 0
  6730  00336A  51AD               	movf	_ModDataCnt& (0+255),w,b
  6731  00336C  5D8B               	subwf	PrintModbus@i& (0+255),w,b
  6732  00336E  518C               	movf	(PrintModbus@i+1)& (0+255),w,b
  6733  003370  0A80               	xorlw	128
  6734  003372  6E55               	movwf	??_PrintModbus^0,c
  6735  003374  51AE               	movf	(_ModDataCnt+1)& (0+255),w,b
  6736  003376  0A80               	xorlw	128
  6737  003378  5855               	subwfb	??_PrintModbus^0,w,c
  6738  00337A  A0D8               	btfss	status,0,c
  6739  00337C  EFC2  F019         	goto	u6891
  6740  003380  EFC4  F019         	goto	u6890
  6741  003384                     u6891:
  6742  003384  EF9D  F019         	goto	l6845
  6743  003388                     u6890:
  6744  003388                     
  6745                           ; BSR set to: 0
  6746                           ;Modbus.c: 114:     printf("\r\n\n");
  6747  003388  0EC0               	movlw	low (STR_37+50)
  6748  00338A  6F7D               	movwf	printf@fmt& (0+255),b
  6749  00338C  0EFB               	movlw	high (STR_37+50)
  6750  00338E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6751  003390  ECFD  F01D         	call	_printf	;wreg free
  6752  003394  0012               	return		;funcret
  6753  003396                     __end_of_PrintModbus:
  6754                           	opt callstack 0
  6755                           
  6756 ;; *************** function _ModbusRx *****************
  6757 ;; Defined at:
  6758 ;;		line 439 in file "Modbus.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      _Bool 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6776 ;;Total ram usage:        1 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:   14
  6779 ;; This function calls:
  6780 ;;		_AddRxBuffToModBus
  6781 ;;		_ClearRxBuff
  6782 ;;		_EUSART1_Read
  6783 ;;		_EUSART1_is_rx_ready
  6784 ;;		_RXMode
  6785 ;;		_checkCRC
  6786 ;;		_printf
  6787 ;; This function is called by:
  6788 ;;		_main
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text35
  6793  00179E                     __ptext35:
  6794                           	opt callstack 0
  6795  00179E                     _ModbusRx:
  6796                           	opt callstack 16
  6797  00179E                     
  6798                           ;Modbus.c: 440:     RXMode();
  6799  00179E  ECEA  F01E         	call	_RXMode	;wreg free
  6800  0017A2                     
  6801                           ;Modbus.c: 441:     if(EUSART1_is_rx_ready()){
  6802  0017A2  EC76  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  6803  0017A6  0900               	iorlw	0
  6804  0017A8  B4D8               	btfsc	status,2,c
  6805  0017AA  EFD9  F00B         	goto	u6781
  6806  0017AE  EFDB  F00B         	goto	u6780
  6807  0017B2                     u6781:
  6808  0017B2  EFA5  F00C         	goto	l6835
  6809  0017B6                     u6780:
  6810  0017B6                     
  6811                           ;Modbus.c: 442:         if(Debug ==1){
  6812  0017B6  0100               	movlb	0	; () banked
  6813  0017B8  05B0               	decf	_Debug& (0+255),w,b
  6814  0017BA  A4D8               	btfss	status,2,c
  6815  0017BC  EFE2  F00B         	goto	u6791
  6816  0017C0  EFE4  F00B         	goto	u6790
  6817  0017C4                     u6791:
  6818  0017C4  EFEA  F00B         	goto	l6789
  6819  0017C8                     u6790:
  6820  0017C8                     
  6821                           ; BSR set to: 0
  6822                           ;Modbus.c: 443:             printf("Something in ESUART1 \r\n");
  6823  0017C8  0E50               	movlw	low STR_24
  6824  0017CA  6F7D               	movwf	printf@fmt& (0+255),b
  6825  0017CC  0EFE               	movlw	high STR_24
  6826  0017CE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6827  0017D0  ECFD  F01D         	call	_printf	;wreg free
  6828  0017D4                     l6789:
  6829                           
  6830                           ;Modbus.c: 446:             if(EUSART1_is_rx_ready()){
  6831  0017D4  EC76  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  6832  0017D8  0900               	iorlw	0
  6833  0017DA  B4D8               	btfsc	status,2,c
  6834  0017DC  EFF2  F00B         	goto	u6801
  6835  0017E0  EFF4  F00B         	goto	u6800
  6836  0017E4                     u6801:
  6837  0017E4  EF2B  F00C         	goto	l6805
  6838  0017E8                     u6800:
  6839  0017E8  EF1E  F00C         	goto	l6801
  6840  0017EC                     l6793:
  6841                           
  6842                           ;Modbus.c: 450:                     rxData[ByteNum] = EUSART1_Read();
  6843  0017EC  EC8D  F01B         	call	_EUSART1_Read	;wreg free
  6844  0017F0  6E56               	movwf	??_ModbusRx^0,c
  6845  0017F2  0E00               	movlw	low _rxData
  6846  0017F4  0100               	movlb	0	; () banked
  6847  0017F6  25AB               	addwf	_ByteNum& (0+255),w,b
  6848  0017F8  6ED9               	movwf	fsr2l,c
  6849  0017FA  0E04               	movlw	high _rxData
  6850  0017FC  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6851  0017FE  6EDA               	movwf	fsr2h,c
  6852  001800  C056  FFDF         	movff	??_ModbusRx,indf2
  6853  001804                     
  6854                           ; BSR set to: 0
  6855                           ;Modbus.c: 452:                     if(Debug == 1){
  6856  001804  05B0               	decf	_Debug& (0+255),w,b
  6857  001806  A4D8               	btfss	status,2,c
  6858  001808  EF08  F00C         	goto	u6811
  6859  00180C  EF0A  F00C         	goto	u6810
  6860  001810                     u6811:
  6861  001810  EF1B  F00C         	goto	l6799
  6862  001814                     u6810:
  6863  001814                     
  6864                           ; BSR set to: 0
  6865                           ;Modbus.c: 453:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  6866  001814  0E64               	movlw	low STR_25
  6867  001816  6F7D               	movwf	printf@fmt& (0+255),b
  6868  001818  0EFF               	movlw	high STR_25
  6869  00181A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6870  00181C  0E00               	movlw	low _rxData
  6871  00181E  25AB               	addwf	_ByteNum& (0+255),w,b
  6872  001820  6ED9               	movwf	fsr2l,c
  6873  001822  0E04               	movlw	high _rxData
  6874  001824  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6875  001826  6EDA               	movwf	fsr2h,c
  6876  001828  50DF               	movf	indf2,w,c
  6877  00182A  6E56               	movwf	??_ModbusRx^0,c
  6878  00182C  5056               	movf	??_ModbusRx^0,w,c
  6879  00182E  6F7F               	movwf	(?_printf+2)& (0+255),b
  6880  001830  6B80               	clrf	(?_printf+3)& (0+255),b
  6881  001832  ECFD  F01D         	call	_printf	;wreg free
  6882  001836                     l6799:
  6883                           
  6884                           ;Modbus.c: 455:                     ByteNum++;
  6885  001836  0100               	movlb	0	; () banked
  6886  001838  4BAB               	infsnz	_ByteNum& (0+255),f,b
  6887  00183A  2BAC               	incf	(_ByteNum+1)& (0+255),f,b
  6888  00183C                     l6801:
  6889                           
  6890                           ;Modbus.c: 448:                 while(EUSART1_is_rx_ready()){
  6891  00183C  EC76  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  6892  001840  0900               	iorlw	0
  6893  001842  A4D8               	btfss	status,2,c
  6894  001844  EF26  F00C         	goto	u6821
  6895  001848  EF28  F00C         	goto	u6820
  6896  00184C                     u6821:
  6897  00184C  EFF6  F00B         	goto	l6793
  6898  001850                     u6820:
  6899  001850                     
  6900                           ;Modbus.c: 458:                 RXStat = 1;
  6901  001850  0E01               	movlw	1
  6902  001852  0100               	movlb	0	; () banked
  6903  001854  6FAF               	movwf	_RXStat& (0+255),b
  6904  001856                     l6805:
  6905                           
  6906                           ;Modbus.c: 461:             if(RXStat ==1){
  6907  001856  0100               	movlb	0	; () banked
  6908  001858  05AF               	decf	_RXStat& (0+255),w,b
  6909  00185A  A4D8               	btfss	status,2,c
  6910  00185C  EF32  F00C         	goto	u6831
  6911  001860  EF34  F00C         	goto	u6830
  6912  001864                     u6831:
  6913  001864  EF50  F00C         	goto	l6817
  6914  001868                     u6830:
  6915  001868                     
  6916                           ; BSR set to: 0
  6917                           ;Modbus.c: 464:                 AddRxBuffToModBus();
  6918  001868  ECBB  F014         	call	_AddRxBuffToModBus	;wreg free
  6919  00186C                     
  6920                           ;Modbus.c: 465:                 ClearRxBuff();
  6921  00186C  EC56  F01C         	call	_ClearRxBuff	;wreg free
  6922  001870                     
  6923                           ;Modbus.c: 466:                 RXStat = 0;
  6924  001870  0E00               	movlw	0
  6925  001872  0100               	movlb	0	; () banked
  6926  001874  6FAF               	movwf	_RXStat& (0+255),b
  6927  001876                     
  6928                           ; BSR set to: 0
  6929                           ;Modbus.c: 467:                 ByteNum = 0;
  6930  001876  0E00               	movlw	0
  6931  001878  6FAC               	movwf	(_ByteNum+1)& (0+255),b
  6932  00187A  0E00               	movlw	0
  6933  00187C  6FAB               	movwf	_ByteNum& (0+255),b
  6934  00187E                     
  6935                           ; BSR set to: 0
  6936  00187E  B883               	btfsc	131,4,c	;volatile
  6937  001880  EF44  F00C         	goto	u6841
  6938  001884  EF47  F00C         	goto	u6840
  6939  001888                     u6841:
  6940  001888  0E01               	movlw	1
  6941  00188A  EF48  F00C         	goto	u6846
  6942  00188E                     u6840:
  6943  00188E  0E00               	movlw	0
  6944  001890                     u6846:
  6945  001890  0AFF               	xorlw	255
  6946  001892  6E56               	movwf	??_ModbusRx^0,c
  6947  001894  3A56               	swapf	??_ModbusRx^0,f,c
  6948  001896  5083               	movf	131,w,c	;volatile
  6949  001898  1856               	xorwf	??_ModbusRx^0,w,c
  6950  00189A  0BEF               	andlw	-17
  6951  00189C  1856               	xorwf	??_ModbusRx^0,w,c
  6952  00189E  6E83               	movwf	131,c	;volatile
  6953  0018A0                     l6817:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;Modbus.c: 471:             if(Debug == 1){
  6957  0018A0  05B0               	decf	_Debug& (0+255),w,b
  6958  0018A2  A4D8               	btfss	status,2,c
  6959  0018A4  EF56  F00C         	goto	u6851
  6960  0018A8  EF58  F00C         	goto	u6850
  6961  0018AC                     u6851:
  6962  0018AC  EF66  F00C         	goto	l6821
  6963  0018B0                     u6850:
  6964  0018B0                     
  6965                           ; BSR set to: 0
  6966                           ;Modbus.c: 472:                 printf("ModDatCnt: %i ExpetedBytes %i \r\n", ModDataCnt,
      +                          ExpectedBytes);
  6967  0018B0  0EE3               	movlw	low STR_26
  6968  0018B2  6F7D               	movwf	printf@fmt& (0+255),b
  6969  0018B4  0EFC               	movlw	high STR_26
  6970  0018B6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6971  0018B8  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  6972  0018BC  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  6973  0018C0  C13D  F081         	movff	_ExpectedBytes,?_printf+4
  6974  0018C4  C13E  F082         	movff	_ExpectedBytes+1,?_printf+5
  6975  0018C8  ECFD  F01D         	call	_printf	;wreg free
  6976  0018CC                     l6821:
  6977                           
  6978                           ;Modbus.c: 475:         }while(ModDataCnt != ExpectedBytes);
  6979  0018CC  0101               	movlb	1	; () banked
  6980  0018CE  513D               	movf	_ExpectedBytes& (0+255),w,b
  6981  0018D0  0100               	movlb	0	; () banked
  6982  0018D2  19AD               	xorwf	_ModDataCnt& (0+255),w,b
  6983  0018D4  E109               	bnz	u6861
  6984  0018D6  0101               	movlb	1	; () banked
  6985  0018D8  513E               	movf	(_ExpectedBytes+1)& (0+255),w,b
  6986  0018DA  0100               	movlb	0	; () banked
  6987  0018DC  19AE               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  6988  0018DE  A4D8               	btfss	status,2,c
  6989  0018E0  EF74  F00C         	goto	u6861
  6990  0018E4  EF76  F00C         	goto	u6860
  6991  0018E8                     u6861:
  6992  0018E8  EFEA  F00B         	goto	l6789
  6993  0018EC                     u6860:
  6994  0018EC                     
  6995                           ; BSR set to: 0
  6996  0018EC  BA83               	btfsc	131,5,c	;volatile
  6997  0018EE  EF7B  F00C         	goto	u6871
  6998  0018F2  EF7E  F00C         	goto	u6870
  6999  0018F6                     u6871:
  7000  0018F6  0E01               	movlw	1
  7001  0018F8  EF7F  F00C         	goto	u6876
  7002  0018FC                     u6870:
  7003  0018FC  0E00               	movlw	0
  7004  0018FE                     u6876:
  7005  0018FE  0AFF               	xorlw	255
  7006  001900  6E56               	movwf	??_ModbusRx^0,c
  7007  001902  3A56               	swapf	??_ModbusRx^0,f,c
  7008  001904  4656               	rlncf	??_ModbusRx^0,f,c
  7009  001906  5083               	movf	131,w,c	;volatile
  7010  001908  1856               	xorwf	??_ModbusRx^0,w,c
  7011  00190A  0BDF               	andlw	-33
  7012  00190C  1856               	xorwf	??_ModbusRx^0,w,c
  7013  00190E  6E83               	movwf	131,c	;volatile
  7014  001910                     
  7015                           ; BSR set to: 0
  7016                           ;Modbus.c: 480:         if(checkCRC() == 1)
  7017  001910  EC86  F010         	call	_checkCRC	;wreg free
  7018  001914  06E8               	decf	wreg,f,c
  7019  001916  A4D8               	btfss	status,2,c
  7020  001918  EF90  F00C         	goto	u6881
  7021  00191C  EF92  F00C         	goto	u6880
  7022  001920                     u6881:
  7023  001920  EF9B  F00C         	goto	l6829
  7024  001924                     u6880:
  7025  001924                     
  7026                           ;Modbus.c: 481:         {;Modbus.c: 482:             printf("Modbus Rx Good Good.\r\n\n"
      +                          );
  7027  001924  0E38               	movlw	low STR_27
  7028  001926  0100               	movlb	0	; () banked
  7029  001928  6F7D               	movwf	printf@fmt& (0+255),b
  7030  00192A  0EFE               	movlw	high STR_27
  7031  00192C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7032  00192E  ECFD  F01D         	call	_printf	;wreg free
  7033                           
  7034                           ;Modbus.c: 483:         }else{
  7035  001932  EFA2  F00C         	goto	l6831
  7036  001936                     l6829:
  7037                           
  7038                           ;Modbus.c: 484:             printf("Modbus Rx Bad.\r\n\n");
  7039  001936  0EFE               	movlw	low STR_28
  7040  001938  0100               	movlb	0	; () banked
  7041  00193A  6F7D               	movwf	printf@fmt& (0+255),b
  7042  00193C  0EFE               	movlw	high STR_28
  7043  00193E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7044  001940  ECFD  F01D         	call	_printf	;wreg free
  7045  001944                     l6831:
  7046                           
  7047                           ;Modbus.c: 488:         return 1;
  7048  001944  0E01               	movlw	1
  7049  001946  EFA6  F00C         	goto	l828
  7050  00194A                     l6835:
  7051                           
  7052                           ;Modbus.c: 490:     return 0;
  7053  00194A  0E00               	movlw	0
  7054  00194C                     l828:
  7055  00194C  0012               	return		;funcret
  7056  00194E                     __end_of_ModbusRx:
  7057                           	opt callstack 0
  7058                           
  7059 ;; *************** function _checkCRC *****************
  7060 ;; Defined at:
  7061 ;;		line 120 in file "Modbus.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  i               2   56[BANK0 ] int 
  7066 ;;  crc             2   54[BANK0 ] unsigned int 
  7067 ;;  j               2   52[BANK0 ] int 
  7068 ;;  crcLow          2   50[BANK0 ] unsigned int 
  7069 ;;  crcHigh         2   48[BANK0 ] unsigned int 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      _Bool 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;Total ram usage:       15 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:   13
  7086 ;; This function calls:
  7087 ;;		_printf
  7088 ;; This function is called by:
  7089 ;;		_ModbusRx
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text36
  7094  00210C                     __ptext36:
  7095                           	opt callstack 0
  7096  00210C                     _checkCRC:
  7097                           	opt callstack 16
  7098  00210C                     
  7099                           ;Modbus.c: 121:   unsigned int crc = 0xFFFF;
  7100  00210C  0100               	movlb	0	; () banked
  7101  00210E  6996               	setf	checkCRC@crc& (0+255),b
  7102  002110  6997               	setf	(checkCRC@crc+1)& (0+255),b
  7103  002112                     
  7104                           ; BSR set to: 0
  7105                           ;Modbus.c: 123:   unsigned int crcLow = 0;
  7106  002112  0E00               	movlw	0
  7107  002114  6F93               	movwf	(checkCRC@crcLow+1)& (0+255),b
  7108  002116  0E00               	movlw	0
  7109  002118  6F92               	movwf	checkCRC@crcLow& (0+255),b
  7110                           
  7111                           ;Modbus.c: 124:   int i,j = 0;
  7112  00211A  0E00               	movlw	0
  7113  00211C  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  7114  00211E  0E00               	movlw	0
  7115  002120  6F94               	movwf	checkCRC@j& (0+255),b
  7116                           
  7117                           ;Modbus.c: 126:     for(i=0;i<ModDataCnt-2;i++){
  7118  002122  0E00               	movlw	0
  7119  002124  6F99               	movwf	(checkCRC@i+1)& (0+255),b
  7120  002126  0E00               	movlw	0
  7121  002128  6F98               	movwf	checkCRC@i& (0+255),b
  7122  00212A  EFC6  F010         	goto	l6669
  7123  00212E                     l6651:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;Modbus.c: 127:       crc ^= ModbusData[i];
  7127  00212E  0E00               	movlw	low _ModbusData
  7128  002130  2598               	addwf	checkCRC@i& (0+255),w,b
  7129  002132  6ED9               	movwf	fsr2l,c
  7130  002134  0E02               	movlw	high _ModbusData
  7131  002136  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7132  002138  6EDA               	movwf	fsr2h,c
  7133  00213A  50DF               	movf	indf2,w,c
  7134  00213C  6F8B               	movwf	??_checkCRC& (0+255),b
  7135  00213E  518B               	movf	??_checkCRC& (0+255),w,b
  7136  002140  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  7137  002142                     
  7138                           ; BSR set to: 0
  7139                           ;Modbus.c: 128:       for(j=8; j!=0; j--){
  7140  002142  0E00               	movlw	0
  7141  002144  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  7142  002146  0E08               	movlw	8
  7143  002148  6F94               	movwf	checkCRC@j& (0+255),b
  7144  00214A                     l725:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;Modbus.c: 129:         if((crc & 0x0001) != 0){
  7148  00214A  A196               	btfss	checkCRC@crc& (0+255),0,b
  7149  00214C  EFAA  F010         	goto	u6631
  7150  002150  EFAC  F010         	goto	u6630
  7151  002154                     u6631:
  7152  002154  EFB5  F010         	goto	l6663
  7153  002158                     u6630:
  7154  002158                     
  7155                           ; BSR set to: 0
  7156                           ;Modbus.c: 130:           crc >>= 1;
  7157  002158  90D8               	bcf	status,0,c
  7158  00215A  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  7159  00215C  3396               	rrcf	checkCRC@crc& (0+255),f,b
  7160  00215E                     
  7161                           ; BSR set to: 0
  7162                           ;Modbus.c: 131:           crc ^= 0xA001;
  7163  00215E  0E01               	movlw	1
  7164  002160  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  7165  002162  0EA0               	movlw	160
  7166  002164  1B97               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  7167                           
  7168                           ;Modbus.c: 132:         }
  7169  002166  EFB8  F010         	goto	l728
  7170  00216A                     l6663:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;Modbus.c: 134:           crc >>= 1;
  7174  00216A  90D8               	bcf	status,0,c
  7175  00216C  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  7176  00216E  3396               	rrcf	checkCRC@crc& (0+255),f,b
  7177  002170                     l728:
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;Modbus.c: 136:       }
  7181  002170  0794               	decf	checkCRC@j& (0+255),f,b
  7182  002172  A0D8               	btfss	status,0,c
  7183  002174  0795               	decf	(checkCRC@j+1)& (0+255),f,b
  7184  002176                     
  7185                           ; BSR set to: 0
  7186  002176  5194               	movf	checkCRC@j& (0+255),w,b
  7187  002178  1195               	iorwf	(checkCRC@j+1)& (0+255),w,b
  7188  00217A  A4D8               	btfss	status,2,c
  7189  00217C  EFC2  F010         	goto	u6641
  7190  002180  EFC4  F010         	goto	u6640
  7191  002184                     u6641:
  7192  002184  EFA5  F010         	goto	l725
  7193  002188                     u6640:
  7194  002188                     
  7195                           ; BSR set to: 0
  7196                           ;Modbus.c: 137:     }
  7197  002188  4B98               	infsnz	checkCRC@i& (0+255),f,b
  7198  00218A  2B99               	incf	(checkCRC@i+1)& (0+255),f,b
  7199  00218C                     l6669:
  7200                           
  7201                           ; BSR set to: 0
  7202  00218C  0EFE               	movlw	254
  7203  00218E  6F8B               	movwf	??_checkCRC& (0+255),b
  7204  002190  0EFF               	movlw	255
  7205  002192  6F8C               	movwf	(??_checkCRC+1)& (0+255),b
  7206  002194  C0AD  F08D         	movff	_ModDataCnt,??_checkCRC+2
  7207  002198  C0AE  F08E         	movff	_ModDataCnt+1,??_checkCRC+3
  7208  00219C  518B               	movf	??_checkCRC& (0+255),w,b
  7209  00219E  278D               	addwf	(??_checkCRC+2)& (0+255),f,b
  7210  0021A0  518C               	movf	(??_checkCRC+1)& (0+255),w,b
  7211  0021A2  238E               	addwfc	(??_checkCRC+3)& (0+255),f,b
  7212  0021A4  518D               	movf	(??_checkCRC+2)& (0+255),w,b
  7213  0021A6  5D98               	subwf	checkCRC@i& (0+255),w,b
  7214  0021A8  5199               	movf	(checkCRC@i+1)& (0+255),w,b
  7215  0021AA  0A80               	xorlw	128
  7216  0021AC  6F8F               	movwf	(??_checkCRC+4)& (0+255),b
  7217  0021AE  518E               	movf	(??_checkCRC+3)& (0+255),w,b
  7218  0021B0  0A80               	xorlw	128
  7219  0021B2  598F               	subwfb	(??_checkCRC+4)& (0+255),w,b
  7220  0021B4  A0D8               	btfss	status,0,c
  7221  0021B6  EFDF  F010         	goto	u6651
  7222  0021BA  EFE1  F010         	goto	u6650
  7223  0021BE                     u6651:
  7224  0021BE  EF97  F010         	goto	l6651
  7225  0021C2                     u6650:
  7226  0021C2                     
  7227                           ; BSR set to: 0
  7228                           ;Modbus.c: 139:   crcHigh = (crc & 0x00FF);
  7229  0021C2  5196               	movf	checkCRC@crc& (0+255),w,b
  7230  0021C4  6F90               	movwf	checkCRC@crcHigh& (0+255),b
  7231  0021C6  6B91               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  7232                           
  7233                           ;Modbus.c: 140:   crcLow = (crc & 0xFF00) >>8;
  7234  0021C8  C096  F08B         	movff	checkCRC@crc,??_checkCRC
  7235  0021CC  C097  F08C         	movff	checkCRC@crc+1,??_checkCRC+1
  7236  0021D0  C08C  F08B         	movff	??_checkCRC+1,??_checkCRC
  7237  0021D4  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7238  0021D6  518B               	movf	??_checkCRC& (0+255),w,b
  7239  0021D8  6F92               	movwf	checkCRC@crcLow& (0+255),b
  7240  0021DA  6B93               	clrf	(checkCRC@crcLow+1)& (0+255),b
  7241  0021DC                     
  7242                           ; BSR set to: 0
  7243                           ;Modbus.c: 142:   if(Debug == 1){
  7244  0021DC  05B0               	decf	_Debug& (0+255),w,b
  7245  0021DE  A4D8               	btfss	status,2,c
  7246  0021E0  EFF4  F010         	goto	u6661
  7247  0021E4  EFF6  F010         	goto	u6660
  7248  0021E8                     u6661:
  7249  0021E8  EF04  F011         	goto	l6677
  7250  0021EC                     u6660:
  7251  0021EC                     
  7252                           ; BSR set to: 0
  7253                           ;Modbus.c: 143:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  7254  0021EC  0E7C               	movlw	low STR_11
  7255  0021EE  6F7D               	movwf	printf@fmt& (0+255),b
  7256  0021F0  0EFC               	movlw	high STR_11
  7257  0021F2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7258  0021F4  C090  F07F         	movff	checkCRC@crcHigh,?_printf+2
  7259  0021F8  C091  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  7260  0021FC  C092  F081         	movff	checkCRC@crcLow,?_printf+4
  7261  002200  C093  F082         	movff	checkCRC@crcLow+1,?_printf+5
  7262  002204  ECFD  F01D         	call	_printf	;wreg free
  7263  002208                     l6677:
  7264                           
  7265                           ;Modbus.c: 147:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  7266  002208  0E00               	movlw	low _ModbusData
  7267  00220A  0100               	movlb	0	; () banked
  7268  00220C  2598               	addwf	checkCRC@i& (0+255),w,b
  7269  00220E  6ED9               	movwf	fsr2l,c
  7270  002210  0E02               	movlw	high _ModbusData
  7271  002212  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7272  002214  6EDA               	movwf	fsr2h,c
  7273  002216  50DF               	movf	indf2,w,c
  7274  002218  6F8B               	movwf	??_checkCRC& (0+255),b
  7275  00221A  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7276  00221C  5190               	movf	checkCRC@crcHigh& (0+255),w,b
  7277  00221E  198B               	xorwf	??_checkCRC& (0+255),w,b
  7278  002220  E107               	bnz	u6671
  7279  002222  5191               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  7280  002224  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  7281  002226  A4D8               	btfss	status,2,c
  7282  002228  EF18  F011         	goto	u6671
  7283  00222C  EF1A  F011         	goto	u6670
  7284  002230                     u6671:
  7285  002230  EF32  F011         	goto	l6687
  7286  002234                     u6670:
  7287  002234                     
  7288                           ; BSR set to: 0
  7289  002234  0E01               	movlw	low (_ModbusData+1)
  7290  002236  2598               	addwf	checkCRC@i& (0+255),w,b
  7291  002238  6ED9               	movwf	fsr2l,c
  7292  00223A  0E02               	movlw	high (_ModbusData+1)
  7293  00223C  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7294  00223E  6EDA               	movwf	fsr2h,c
  7295  002240  50DF               	movf	indf2,w,c
  7296  002242  6F8B               	movwf	??_checkCRC& (0+255),b
  7297  002244  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7298  002246  5192               	movf	checkCRC@crcLow& (0+255),w,b
  7299  002248  198B               	xorwf	??_checkCRC& (0+255),w,b
  7300  00224A  E107               	bnz	u6681
  7301  00224C  5193               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  7302  00224E  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  7303  002250  A4D8               	btfss	status,2,c
  7304  002252  EF2D  F011         	goto	u6681
  7305  002256  EF2F  F011         	goto	u6680
  7306  00225A                     u6681:
  7307  00225A  EF32  F011         	goto	l6687
  7308  00225E                     u6680:
  7309  00225E                     
  7310                           ; BSR set to: 0
  7311                           ;Modbus.c: 148:   {;Modbus.c: 149:     return 1;
  7312  00225E  0E01               	movlw	1
  7313  002260  EF33  F011         	goto	l732
  7314  002264                     l6687:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;Modbus.c: 152:     return 0;
  7318  002264  0E00               	movlw	0
  7319  002266                     l732:
  7320                           
  7321                           ; BSR set to: 0
  7322  002266  0012               	return		;funcret
  7323  002268                     __end_of_checkCRC:
  7324                           	opt callstack 0
  7325                           
  7326 ;; *************** function _RXMode *****************
  7327 ;; Defined at:
  7328 ;;		line 56 in file "Modbus.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		None
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    4
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_main
  7353 ;;		_ModbusRx
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text37
  7358  003DD4                     __ptext37:
  7359                           	opt callstack 0
  7360  003DD4                     _RXMode:
  7361                           	opt callstack 26
  7362  003DD4  9086               	bcf	134,0,c	;volatile
  7363  003DD6  9683               	bcf	131,3,c	;volatile
  7364  003DD8  0012               	return		;funcret
  7365  003DDA                     __end_of_RXMode:
  7366                           	opt callstack 0
  7367                           
  7368 ;; *************** function _EUSART1_is_rx_ready *****************
  7369 ;; Defined at:
  7370 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;		None
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;		None
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      _Bool 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;Total ram usage:        0 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; Hardware stack levels required when called:    4
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_ModbusRx
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text38
  7399  003CEC                     __ptext38:
  7400                           	opt callstack 0
  7401  003CEC                     _EUSART1_is_rx_ready:
  7402                           	opt callstack 25
  7403  003CEC                     
  7404                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
  7405  003CEC  0100               	movlb	0	; () banked
  7406  003CEE  51B2               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7407  003CF0  A4D8               	btfss	status,2,c
  7408  003CF2  EF7D  F01E         	goto	u4131
  7409  003CF6  EF80  F01E         	goto	u4130
  7410  003CFA                     u4131:
  7411  003CFA  0E01               	movlw	1
  7412  003CFC  EF81  F01E         	goto	u4140
  7413  003D00                     u4130:
  7414  003D00  0E00               	movlw	0
  7415  003D02                     u4140:
  7416  003D02                     
  7417                           ; BSR set to: 0
  7418  003D02  0012               	return		;funcret
  7419  003D04                     __end_of_EUSART1_is_rx_ready:
  7420                           	opt callstack 0
  7421                           
  7422 ;; *************** function _EUSART1_Read *****************
  7423 ;; Defined at:
  7424 ;;		line 153 in file "mcc_generated_files/eusart1.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  readValue       1    4[COMRAM] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      unsigned char 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    4
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_ModbusRx
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text39
  7453  00371A                     __ptext39:
  7454                           	opt callstack 0
  7455  00371A                     _EUSART1_Read:
  7456                           	opt callstack 25
  7457  00371A                     l4867:
  7458                           
  7459                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
  7460  00371A  0100               	movlb	0	; () banked
  7461  00371C  51B2               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7462  00371E  B4D8               	btfsc	status,2,c
  7463  003720  EF94  F01B         	goto	u4151
  7464  003724  EF96  F01B         	goto	u4150
  7465  003728                     u4151:
  7466  003728  EF8D  F01B         	goto	l4867
  7467  00372C                     u4150:
  7468  00372C                     
  7469                           ; BSR set to: 0
  7470                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7471  00372C  0E80               	movlw	low _eusart1RxStatusBuffer
  7472  00372E  25B3               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7473  003730  6ED9               	movwf	fsr2l,c
  7474  003732  6ADA               	clrf	fsr2h,c
  7475  003734  0E03               	movlw	high _eusart1RxStatusBuffer
  7476  003736  22DA               	addwfc	fsr2h,f,c
  7477  003738  50DF               	movf	indf2,w,c
  7478  00373A  6FB1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7479                           
  7480                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7481  00373C  0E64               	movlw	low _eusart1RxBuffer
  7482  00373E  25B3               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7483  003740  6ED9               	movwf	fsr2l,c
  7484  003742  6ADA               	clrf	fsr2h,c
  7485  003744  0E04               	movlw	high _eusart1RxBuffer
  7486  003746  22DA               	addwfc	fsr2h,f,c
  7487  003748  50DF               	movf	indf2,w,c
  7488  00374A  6E05               	movwf	EUSART1_Read@readValue^0,c
  7489  00374C                     
  7490                           ; BSR set to: 0
  7491  00374C  2BB3               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  7492  00374E                     
  7493                           ; BSR set to: 0
  7494                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7495  00374E  0E63               	movlw	99
  7496  003750  65B3               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  7497  003752  EFAD  F01B         	goto	u4161
  7498  003756  EFAF  F01B         	goto	u4160
  7499  00375A                     u4161:
  7500  00375A  EFB1  F01B         	goto	l4877
  7501  00375E                     u4160:
  7502  00375E                     
  7503                           ; BSR set to: 0
  7504                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
  7505  00375E  0E00               	movlw	0
  7506  003760  6FB3               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7507  003762                     l4877:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
  7511  003762  010E               	movlb	14	; () banked
  7512  003764  9BC5               	bcf	197,5,b	;volatile
  7513  003766                     
  7514                           ; BSR set to: 14
  7515                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
  7516  003766  0100               	movlb	0	; () banked
  7517  003768  07B2               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7518  00376A                     
  7519                           ; BSR set to: 0
  7520                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
  7521  00376A  010E               	movlb	14	; () banked
  7522  00376C  8BC5               	bsf	197,5,b	;volatile
  7523  00376E                     
  7524                           ; BSR set to: 14
  7525                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
  7526  00376E  5005               	movf	EUSART1_Read@readValue^0,w,c
  7527  003770                     
  7528                           ; BSR set to: 14
  7529  003770  0012               	return		;funcret
  7530  003772                     __end_of_EUSART1_Read:
  7531                           	opt callstack 0
  7532                           
  7533 ;; *************** function _ClearRxBuff *****************
  7534 ;; Defined at:
  7535 ;;		line 72 in file "Modbus.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  i               2    5[COMRAM] int 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7553 ;;Total ram usage:        3 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    4
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_main
  7560 ;;		_ModbusRx
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text40
  7565  0038AC                     __ptext40:
  7566                           	opt callstack 0
  7567  0038AC                     _ClearRxBuff:
  7568                           	opt callstack 25
  7569  0038AC                     
  7570                           ;Modbus.c: 74:     int i = 0;
  7571  0038AC  0E00               	movlw	0
  7572  0038AE  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7573  0038B0  0E00               	movlw	0
  7574  0038B2  6E06               	movwf	ClearRxBuff@i^0,c
  7575                           
  7576                           ;Modbus.c: 75:     for(i=0; i<ByteNum; i++ ){
  7577  0038B4  0E00               	movlw	0
  7578  0038B6  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7579  0038B8  0E00               	movlw	0
  7580  0038BA  6E06               	movwf	ClearRxBuff@i^0,c
  7581  0038BC  EF6A  F01C         	goto	l4921
  7582  0038C0                     l4917:
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;Modbus.c: 76:         rxData[i] = 0xFF;
  7586  0038C0  0E00               	movlw	low _rxData
  7587  0038C2  2406               	addwf	ClearRxBuff@i^0,w,c
  7588  0038C4  6ED9               	movwf	fsr2l,c
  7589  0038C6  0E04               	movlw	high _rxData
  7590  0038C8  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  7591  0038CA  6EDA               	movwf	fsr2h,c
  7592  0038CC  0EFF               	movlw	255
  7593  0038CE  6EDF               	movwf	indf2,c
  7594  0038D0                     
  7595                           ; BSR set to: 0
  7596                           ;Modbus.c: 77:     }
  7597  0038D0  4A06               	infsnz	ClearRxBuff@i^0,f,c
  7598  0038D2  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  7599  0038D4                     l4921:
  7600  0038D4  0100               	movlb	0	; () banked
  7601  0038D6  51AB               	movf	_ByteNum& (0+255),w,b
  7602  0038D8  5C06               	subwf	ClearRxBuff@i^0,w,c
  7603  0038DA  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  7604  0038DC  0A80               	xorlw	128
  7605  0038DE  6E05               	movwf	??_ClearRxBuff^0,c
  7606  0038E0  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7607  0038E2  0A80               	xorlw	128
  7608  0038E4  5805               	subwfb	??_ClearRxBuff^0,w,c
  7609  0038E6  A0D8               	btfss	status,0,c
  7610  0038E8  EF78  F01C         	goto	u4181
  7611  0038EC  EF7A  F01C         	goto	u4180
  7612  0038F0                     u4181:
  7613  0038F0  EF60  F01C         	goto	l4917
  7614  0038F4                     u4180:
  7615  0038F4                     
  7616                           ; BSR set to: 0
  7617  0038F4  0012               	return		;funcret
  7618  0038F6                     __end_of_ClearRxBuff:
  7619                           	opt callstack 0
  7620                           
  7621 ;; *************** function _AddRxBuffToModBus *****************
  7622 ;; Defined at:
  7623 ;;		line 81 in file "Modbus.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  i               2   43[BANK0 ] int 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7640 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7641 ;;Total ram usage:        3 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:   13
  7644 ;; This function calls:
  7645 ;;		_printf
  7646 ;; This function is called by:
  7647 ;;		_ModbusRx
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text41
  7652  002976                     __ptext41:
  7653                           	opt callstack 0
  7654  002976                     _AddRxBuffToModBus:
  7655                           	opt callstack 16
  7656  002976                     
  7657                           ;Modbus.c: 82:     int i = 0;
  7658  002976  0E00               	movlw	0
  7659  002978  0100               	movlb	0	; () banked
  7660  00297A  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7661  00297C  0E00               	movlw	0
  7662  00297E  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7663                           
  7664                           ;Modbus.c: 84:     for(i=0l; i<ByteNum; i++){
  7665  002980  0E00               	movlw	0
  7666  002982  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7667  002984  0E00               	movlw	0
  7668  002986  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7669  002988  EFD8  F014         	goto	l6631
  7670  00298C                     l6625:
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;Modbus.c: 85:         ModbusData[ModDataCnt] = rxData[i];
  7674  00298C  0E00               	movlw	low _rxData
  7675  00298E  258B               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  7676  002990  6ED9               	movwf	fsr2l,c
  7677  002992  0E04               	movlw	high _rxData
  7678  002994  218C               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7679  002996  6EDA               	movwf	fsr2h,c
  7680  002998  0E00               	movlw	low _ModbusData
  7681  00299A  25AD               	addwf	_ModDataCnt& (0+255),w,b
  7682  00299C  6EE1               	movwf	fsr1l,c
  7683  00299E  0E02               	movlw	high _ModbusData
  7684  0029A0  21AE               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  7685  0029A2  6EE2               	movwf	fsr1h,c
  7686  0029A4  CFDF FFE7          	movff	indf2,indf1
  7687  0029A8                     
  7688                           ; BSR set to: 0
  7689                           ;Modbus.c: 86:         ModDataCnt++;
  7690  0029A8  4BAD               	infsnz	_ModDataCnt& (0+255),f,b
  7691  0029AA  2BAE               	incf	(_ModDataCnt+1)& (0+255),f,b
  7692  0029AC                     
  7693                           ; BSR set to: 0
  7694                           ;Modbus.c: 87:     }
  7695  0029AC  4B8B               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  7696  0029AE  2B8C               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  7697  0029B0                     l6631:
  7698                           
  7699                           ; BSR set to: 0
  7700  0029B0  51AB               	movf	_ByteNum& (0+255),w,b
  7701  0029B2  5D8B               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  7702  0029B4  518C               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7703  0029B6  0A80               	xorlw	128
  7704  0029B8  6E55               	movwf	??_AddRxBuffToModBus^0,c
  7705  0029BA  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7706  0029BC  0A80               	xorlw	128
  7707  0029BE  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  7708  0029C0  A0D8               	btfss	status,0,c
  7709  0029C2  EFE5  F014         	goto	u6591
  7710  0029C6  EFE7  F014         	goto	u6590
  7711  0029CA                     u6591:
  7712  0029CA  EFC6  F014         	goto	l6625
  7713  0029CE                     u6590:
  7714  0029CE                     
  7715                           ; BSR set to: 0
  7716                           ;Modbus.c: 89:     if(Debug ==1){
  7717  0029CE  05B0               	decf	_Debug& (0+255),w,b
  7718  0029D0  A4D8               	btfss	status,2,c
  7719  0029D2  EFED  F014         	goto	u6601
  7720  0029D6  EFEF  F014         	goto	u6600
  7721  0029DA                     u6601:
  7722  0029DA  EF00  F015         	goto	l6637
  7723  0029DE                     u6600:
  7724  0029DE                     
  7725                           ; BSR set to: 0
  7726                           ;Modbus.c: 90:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
  7727  0029DE  0EC4               	movlw	low STR_6
  7728  0029E0  6F7D               	movwf	printf@fmt& (0+255),b
  7729  0029E2  0EFB               	movlw	high STR_6
  7730  0029E4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7731  0029E6  ECFD  F01D         	call	_printf	;wreg free
  7732                           
  7733                           ;Modbus.c: 91:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  7734  0029EA  0E98               	movlw	low STR_7
  7735  0029EC  0100               	movlb	0	; () banked
  7736  0029EE  6F7D               	movwf	printf@fmt& (0+255),b
  7737  0029F0  0EFD               	movlw	high STR_7
  7738  0029F2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7739  0029F4  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  7740  0029F8  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  7741  0029FC  ECFD  F01D         	call	_printf	;wreg free
  7742  002A00                     l6637:
  7743                           
  7744                           ;Modbus.c: 94:     if(ModbusData[1] == 0x0F){
  7745  002A00  0E0F               	movlw	15
  7746  002A02  0102               	movlb	2	; () banked
  7747  002A04  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7748  002A06  A4D8               	btfss	status,2,c
  7749  002A08  EF08  F015         	goto	u6611
  7750  002A0C  EF0A  F015         	goto	u6610
  7751  002A10                     u6611:
  7752  002A10  EF13  F015         	goto	l6641
  7753  002A14                     u6610:
  7754  002A14                     l6639:
  7755                           
  7756                           ; BSR set to: 2
  7757                           ;Modbus.c: 95:         ExpectedBytes = ModbusData[6] + 9;
  7758  002A14  0E09               	movlw	9
  7759  002A16  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  7760  002A18  0101               	movlb	1	; () banked
  7761  002A1A  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7762  002A1C  6B3E               	clrf	(_ExpectedBytes+1)& (0+255),b
  7763  002A1E  0E00               	movlw	0
  7764  002A20  233E               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  7765                           
  7766                           ;Modbus.c: 96:     }else if (ModbusData[1] == 0x10){
  7767  002A22  EF23  F015         	goto	l714
  7768  002A26                     l6641:
  7769                           
  7770                           ; BSR set to: 2
  7771  002A26  0E10               	movlw	16
  7772  002A28  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7773  002A2A  A4D8               	btfss	status,2,c
  7774  002A2C  EF1A  F015         	goto	u6621
  7775  002A30  EF1C  F015         	goto	u6620
  7776  002A34                     u6621:
  7777  002A34  EF1E  F015         	goto	l6645
  7778  002A38                     u6620:
  7779  002A38  EF0A  F015         	goto	l6639
  7780  002A3C                     l6645:
  7781                           
  7782                           ; BSR set to: 2
  7783                           ;Modbus.c: 99:         ExpectedBytes = 8;
  7784  002A3C  0E00               	movlw	0
  7785  002A3E  0101               	movlb	1	; () banked
  7786  002A40  6F3E               	movwf	(_ExpectedBytes+1)& (0+255),b
  7787  002A42  0E08               	movlw	8
  7788  002A44  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7789  002A46                     l714:
  7790                           
  7791                           ; BSR set to: 1
  7792  002A46  0012               	return		;funcret
  7793  002A48                     __end_of_AddRxBuffToModBus:
  7794                           	opt callstack 0
  7795                           
  7796 ;; *************** function _ModbusFC10 *****************
  7797 ;; Defined at:
  7798 ;;		line 288 in file "Modbus.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  j               2   53[BANK0 ] int 
  7803 ;;  i               2   51[BANK0 ] int 
  7804 ;;  TempData        2   49[BANK0 ] unsigned int 
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7815 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7817 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;Total ram usage:       10 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:   14
  7821 ;; This function calls:
  7822 ;;		_PrintMB400
  7823 ;;		_PrintModRespon
  7824 ;;		_UART1_Write_string
  7825 ;;		_generateCRC
  7826 ;; This function is called by:
  7827 ;;		_main
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text42
  7832  001352                     __ptext42:
  7833                           	opt callstack 0
  7834  001352                     _ModbusFC10:
  7835                           	opt callstack 16
  7836  001352                     
  7837                           ;Modbus.c: 293:     int j = 0;
  7838  001352  0E00               	movlw	0
  7839  001354  0100               	movlb	0	; () banked
  7840  001356  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  7841  001358  0E00               	movlw	0
  7842  00135A  6F95               	movwf	ModbusFC10@j& (0+255),b
  7843                           
  7844                           ;Modbus.c: 294:     unsigned int TempData = 0x0000;
  7845  00135C  0E00               	movlw	0
  7846  00135E  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  7847  001360  0E00               	movlw	0
  7848  001362  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  7849                           
  7850                           ;Modbus.c: 296:     MBResCnt = 0;
  7851  001364  0E00               	movlw	0
  7852  001366  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7853  001368  0E00               	movlw	0
  7854  00136A  6FA9               	movwf	_MBResCnt& (0+255),b
  7855  00136C                     
  7856                           ; BSR set to: 0
  7857                           ;Modbus.c: 297:     MBRespon[MBResCnt] = ModbusData[0];
  7858  00136C  0102               	movlb	2	; () banked
  7859  00136E  5100               	movf	_ModbusData& (0+255),w,b
  7860  001370  0100               	movlb	0	; () banked
  7861  001372  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7862  001374  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7863  001376  90D8               	bcf	status,0,c
  7864  001378  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7865  00137A  6ED9               	movwf	fsr2l,c
  7866  00137C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7867  00137E  6EDA               	movwf	fsr2h,c
  7868  001380  0E41               	movlw	low _MBRespon
  7869  001382  26D9               	addwf	fsr2l,f,c
  7870  001384  0E01               	movlw	high _MBRespon
  7871  001386  22DA               	addwfc	fsr2h,f,c
  7872  001388  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7873  00138C  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7874  001390                     
  7875                           ; BSR set to: 0
  7876                           ;Modbus.c: 298:     MBResCnt++;
  7877  001390  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7878  001392  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7879  001394                     
  7880                           ; BSR set to: 0
  7881                           ;Modbus.c: 299:     MBRespon[MBResCnt] = ModbusData[1];
  7882  001394  0102               	movlb	2	; () banked
  7883  001396  5101               	movf	(_ModbusData+1)& (0+255),w,b
  7884  001398  0100               	movlb	0	; () banked
  7885  00139A  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7886  00139C  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7887  00139E  90D8               	bcf	status,0,c
  7888  0013A0  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7889  0013A2  6ED9               	movwf	fsr2l,c
  7890  0013A4  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7891  0013A6  6EDA               	movwf	fsr2h,c
  7892  0013A8  0E41               	movlw	low _MBRespon
  7893  0013AA  26D9               	addwf	fsr2l,f,c
  7894  0013AC  0E01               	movlw	high _MBRespon
  7895  0013AE  22DA               	addwfc	fsr2h,f,c
  7896  0013B0  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7897  0013B4  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7898  0013B8                     
  7899                           ; BSR set to: 0
  7900                           ;Modbus.c: 300:     MBResCnt++;
  7901  0013B8  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7902  0013BA  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7903  0013BC                     
  7904                           ; BSR set to: 0
  7905                           ;Modbus.c: 301:     MBRespon[MBResCnt] = ModbusData[2];
  7906  0013BC  0102               	movlb	2	; () banked
  7907  0013BE  5102               	movf	(_ModbusData+2)& (0+255),w,b
  7908  0013C0  0100               	movlb	0	; () banked
  7909  0013C2  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7910  0013C4  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7911  0013C6  90D8               	bcf	status,0,c
  7912  0013C8  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7913  0013CA  6ED9               	movwf	fsr2l,c
  7914  0013CC  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7915  0013CE  6EDA               	movwf	fsr2h,c
  7916  0013D0  0E41               	movlw	low _MBRespon
  7917  0013D2  26D9               	addwf	fsr2l,f,c
  7918  0013D4  0E01               	movlw	high _MBRespon
  7919  0013D6  22DA               	addwfc	fsr2h,f,c
  7920  0013D8  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7921  0013DC  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7922  0013E0                     
  7923                           ; BSR set to: 0
  7924                           ;Modbus.c: 302:     MBResCnt++;
  7925  0013E0  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7926  0013E2  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7927  0013E4                     
  7928                           ; BSR set to: 0
  7929                           ;Modbus.c: 303:     MBRespon[MBResCnt] = ModbusData[3];
  7930  0013E4  0102               	movlb	2	; () banked
  7931  0013E6  5103               	movf	(_ModbusData+3)& (0+255),w,b
  7932  0013E8  0100               	movlb	0	; () banked
  7933  0013EA  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7934  0013EC  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7935  0013EE  90D8               	bcf	status,0,c
  7936  0013F0  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7937  0013F2  6ED9               	movwf	fsr2l,c
  7938  0013F4  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7939  0013F6  6EDA               	movwf	fsr2h,c
  7940  0013F8  0E41               	movlw	low _MBRespon
  7941  0013FA  26D9               	addwf	fsr2l,f,c
  7942  0013FC  0E01               	movlw	high _MBRespon
  7943  0013FE  22DA               	addwfc	fsr2h,f,c
  7944  001400  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7945  001404  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7946  001408                     
  7947                           ; BSR set to: 0
  7948                           ;Modbus.c: 304:     MBResCnt++;
  7949  001408  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7950  00140A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7951  00140C                     
  7952                           ; BSR set to: 0
  7953                           ;Modbus.c: 305:     MBRespon[MBResCnt] = ModbusData[4];
  7954  00140C  0102               	movlb	2	; () banked
  7955  00140E  5104               	movf	(_ModbusData+4)& (0+255),w,b
  7956  001410  0100               	movlb	0	; () banked
  7957  001412  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7958  001414  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7959  001416  90D8               	bcf	status,0,c
  7960  001418  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7961  00141A  6ED9               	movwf	fsr2l,c
  7962  00141C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7963  00141E  6EDA               	movwf	fsr2h,c
  7964  001420  0E41               	movlw	low _MBRespon
  7965  001422  26D9               	addwf	fsr2l,f,c
  7966  001424  0E01               	movlw	high _MBRespon
  7967  001426  22DA               	addwfc	fsr2h,f,c
  7968  001428  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7969  00142C  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7970  001430                     
  7971                           ; BSR set to: 0
  7972                           ;Modbus.c: 306:     MBResCnt++;
  7973  001430  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7974  001432  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7975  001434                     
  7976                           ; BSR set to: 0
  7977                           ;Modbus.c: 307:     MBRespon[MBResCnt] = ModbusData[5];
  7978  001434  0102               	movlb	2	; () banked
  7979  001436  5105               	movf	(_ModbusData+5)& (0+255),w,b
  7980  001438  0100               	movlb	0	; () banked
  7981  00143A  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7982  00143C  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7983  00143E  90D8               	bcf	status,0,c
  7984  001440  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7985  001442  6ED9               	movwf	fsr2l,c
  7986  001444  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7987  001446  6EDA               	movwf	fsr2h,c
  7988  001448  0E41               	movlw	low _MBRespon
  7989  00144A  26D9               	addwf	fsr2l,f,c
  7990  00144C  0E01               	movlw	high _MBRespon
  7991  00144E  22DA               	addwfc	fsr2h,f,c
  7992  001450  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7993  001454  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7994  001458                     
  7995                           ; BSR set to: 0
  7996                           ;Modbus.c: 308:     MBResCnt++;
  7997  001458  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7998  00145A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7999                           
  8000                           ;Modbus.c: 310:     for(i=0; i< (ModbusData[5]) ; i++ ){
  8001  00145C  0E00               	movlw	0
  8002  00145E  6F94               	movwf	(ModbusFC10@i+1)& (0+255),b
  8003  001460  0E00               	movlw	0
  8004  001462  6F93               	movwf	ModbusFC10@i& (0+255),b
  8005  001464  EF6A  F00A         	goto	l6963
  8006  001468                     l6955:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;Modbus.c: 317:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  8010  001468  0E08               	movlw	low (_ModbusData+8)
  8011  00146A  2595               	addwf	ModbusFC10@j& (0+255),w,b
  8012  00146C  6ED9               	movwf	fsr2l,c
  8013  00146E  0E02               	movlw	high (_ModbusData+8)
  8014  001470  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8015  001472  6EDA               	movwf	fsr2h,c
  8016  001474  50DF               	movf	indf2,w,c
  8017  001476  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8018  001478  0E07               	movlw	low (_ModbusData+7)
  8019  00147A  2595               	addwf	ModbusFC10@j& (0+255),w,b
  8020  00147C  6ED9               	movwf	fsr2l,c
  8021  00147E  0E02               	movlw	high (_ModbusData+7)
  8022  001480  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8023  001482  6EDA               	movwf	fsr2h,c
  8024  001484  50DF               	movf	indf2,w,c
  8025  001486  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  8026  001488  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  8027  00148A  6F90               	movwf	(??_ModbusFC10+3)& (0+255),b
  8028  00148C  6B8F               	clrf	(??_ModbusFC10+2)& (0+255),b
  8029  00148E  518D               	movf	??_ModbusFC10& (0+255),w,b
  8030  001490  258F               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  8031  001492  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  8032  001494  0E00               	movlw	0
  8033  001496  2190               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  8034  001498  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  8035  00149A                     
  8036                           ; BSR set to: 0
  8037                           ;Modbus.c: 318:         j = j+2;
  8038  00149A  0E02               	movlw	2
  8039  00149C  2595               	addwf	ModbusFC10@j& (0+255),w,b
  8040  00149E  6F95               	movwf	ModbusFC10@j& (0+255),b
  8041  0014A0  0E00               	movlw	0
  8042  0014A2  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8043  0014A4  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  8044  0014A6                     
  8045                           ; BSR set to: 0
  8046                           ;Modbus.c: 319:         MB400xx[ModbusData[3] +i] = TempData;
  8047  0014A6  0102               	movlb	2	; () banked
  8048  0014A8  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8049  0014AA  0100               	movlb	0	; () banked
  8050  0014AC  2593               	addwf	ModbusFC10@i& (0+255),w,b
  8051  0014AE  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8052  0014B0  0E00               	movlw	0
  8053  0014B2  2194               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  8054  0014B4  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  8055  0014B6  90D8               	bcf	status,0,c
  8056  0014B8  378D               	rlcf	??_ModbusFC10& (0+255),f,b
  8057  0014BA  378E               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  8058  0014BC  0E00               	movlw	low _MB400xx
  8059  0014BE  258D               	addwf	??_ModbusFC10& (0+255),w,b
  8060  0014C0  6ED9               	movwf	fsr2l,c
  8061  0014C2  0E03               	movlw	high _MB400xx
  8062  0014C4  218E               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  8063  0014C6  6EDA               	movwf	fsr2h,c
  8064  0014C8  C091  FFDE         	movff	ModbusFC10@TempData,postinc2
  8065  0014CC  C092  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  8066  0014D0                     
  8067                           ; BSR set to: 0
  8068                           ;Modbus.c: 320:     }
  8069  0014D0  4B93               	infsnz	ModbusFC10@i& (0+255),f,b
  8070  0014D2  2B94               	incf	(ModbusFC10@i+1)& (0+255),f,b
  8071  0014D4                     l6963:
  8072                           
  8073                           ; BSR set to: 0
  8074  0014D4  0102               	movlb	2	; () banked
  8075  0014D6  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8076  0014D8  0100               	movlb	0	; () banked
  8077  0014DA  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8078  0014DC  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  8079  0014DE  518D               	movf	??_ModbusFC10& (0+255),w,b
  8080  0014E0  5D93               	subwf	ModbusFC10@i& (0+255),w,b
  8081  0014E2  5194               	movf	(ModbusFC10@i+1)& (0+255),w,b
  8082  0014E4  0A80               	xorlw	128
  8083  0014E6  6F8F               	movwf	(??_ModbusFC10+2)& (0+255),b
  8084  0014E8  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  8085  0014EA  0A80               	xorlw	128
  8086  0014EC  598F               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  8087  0014EE  A0D8               	btfss	status,0,c
  8088  0014F0  EF7C  F00A         	goto	u6961
  8089  0014F4  EF7E  F00A         	goto	u6960
  8090  0014F8                     u6961:
  8091  0014F8  EF34  F00A         	goto	l6955
  8092  0014FC                     u6960:
  8093  0014FC                     
  8094                           ; BSR set to: 0
  8095                           ;Modbus.c: 322:     ByteHi = generateCRC(MBResCnt, 1);
  8096  0014FC  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8097  001500  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8098  001504  0E01               	movlw	1
  8099  001506  6E07               	movwf	generateCRC@HiOrLo^0,c
  8100  001508  ECDC  F013         	call	_generateCRC	;wreg free
  8101  00150C  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8102  001510  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8103                           
  8104                           ;Modbus.c: 323:     ByteLo = generateCRC(MBResCnt, 0);
  8105  001514  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8106  001518  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8107  00151C  0E00               	movlw	0
  8108  00151E  6E07               	movwf	generateCRC@HiOrLo^0,c
  8109  001520  ECDC  F013         	call	_generateCRC	;wreg free
  8110  001524  C005  F0BD         	movff	?_generateCRC,_ByteLo
  8111  001528  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  8112  00152C                     
  8113                           ;Modbus.c: 325:     MBRespon[MBResCnt] = ByteHi;
  8114  00152C  90D8               	bcf	status,0,c
  8115  00152E  0100               	movlb	0	; () banked
  8116  001530  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8117  001532  6ED9               	movwf	fsr2l,c
  8118  001534  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8119  001536  6EDA               	movwf	fsr2h,c
  8120  001538  0E41               	movlw	low _MBRespon
  8121  00153A  26D9               	addwf	fsr2l,f,c
  8122  00153C  0E01               	movlw	high _MBRespon
  8123  00153E  22DA               	addwfc	fsr2h,f,c
  8124  001540  C0A7  FFDE         	movff	_ByteHi,postinc2
  8125  001544  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8126  001548                     
  8127                           ; BSR set to: 0
  8128                           ;Modbus.c: 326:     MBRespon[MBResCnt +1] = ByteLo;
  8129  001548  90D8               	bcf	status,0,c
  8130  00154A  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8131  00154C  6ED9               	movwf	fsr2l,c
  8132  00154E  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8133  001550  6EDA               	movwf	fsr2h,c
  8134  001552  0E43               	movlw	low (_MBRespon+2)
  8135  001554  26D9               	addwf	fsr2l,f,c
  8136  001556  0E01               	movlw	high (_MBRespon+2)
  8137  001558  22DA               	addwfc	fsr2h,f,c
  8138  00155A  C0BD  FFDE         	movff	_ByteLo,postinc2
  8139  00155E  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8140  001562                     
  8141                           ; BSR set to: 0
  8142                           ;Modbus.c: 327:     MBResCnt = MBResCnt +2;
  8143  001562  0E02               	movlw	2
  8144  001564  25A9               	addwf	_MBResCnt& (0+255),w,b
  8145  001566  6FA9               	movwf	_MBResCnt& (0+255),b
  8146  001568  0E00               	movlw	0
  8147  00156A  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8148  00156C  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8149  00156E                     
  8150                           ; BSR set to: 0
  8151                           ;Modbus.c: 329:     if(Debug==1){
  8152  00156E  05B0               	decf	_Debug& (0+255),w,b
  8153  001570  A4D8               	btfss	status,2,c
  8154  001572  EFBD  F00A         	goto	u6971
  8155  001576  EFBF  F00A         	goto	u6970
  8156  00157A                     u6971:
  8157  00157A  EFC3  F00A         	goto	l6977
  8158  00157E                     u6970:
  8159  00157E                     
  8160                           ; BSR set to: 0
  8161                           ;Modbus.c: 330:         PrintMB400();
  8162  00157E  EC3F  F01A         	call	_PrintMB400	;wreg free
  8163                           
  8164                           ;Modbus.c: 331:         PrintModRespon();
  8165  001582  EC67  F017         	call	_PrintModRespon	;wreg free
  8166  001586                     l6977:
  8167                           
  8168                           ;Modbus.c: 334:     UART1_Write_string(MBRespon,MBResCnt);
  8169  001586  0E41               	movlw	low _MBRespon
  8170  001588  6E06               	movwf	UART1_Write_string@data^0,c
  8171  00158A  0E01               	movlw	high _MBRespon
  8172  00158C  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8173  00158E  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8174  001592  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8175  001596  EC05  F01A         	call	_UART1_Write_string	;wreg free
  8176  00159A  0012               	return		;funcret
  8177  00159C                     __end_of_ModbusFC10:
  8178                           	opt callstack 0
  8179                           
  8180 ;; *************** function _PrintMB400 *****************
  8181 ;; Defined at:
  8182 ;;		line 37 in file "Modbus.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  i               2   84[COMRAM] int 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8200 ;;Total ram usage:        2 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:   13
  8203 ;; This function calls:
  8204 ;;		_printf
  8205 ;; This function is called by:
  8206 ;;		_main
  8207 ;;		_ModbusFC10
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text43
  8212  00347E                     __ptext43:
  8213                           	opt callstack 0
  8214  00347E                     _PrintMB400:
  8215                           	opt callstack 17
  8216  00347E                     
  8217                           ;Modbus.c: 39:     printf("UpdatedMB400 \r\n");
  8218  00347E  0E54               	movlw	low STR_4
  8219  003480  0100               	movlb	0	; () banked
  8220  003482  6F7D               	movwf	printf@fmt& (0+255),b
  8221  003484  0EFF               	movlw	high STR_4
  8222  003486  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8223  003488  ECFD  F01D         	call	_printf	;wreg free
  8224  00348C                     
  8225                           ;Modbus.c: 42:     for(i=0; i<32; i++ ){
  8226  00348C  0E00               	movlw	0
  8227  00348E  6E56               	movwf	(PrintMB400@i+1)^0,c
  8228  003490  0E00               	movlw	0
  8229  003492  6E55               	movwf	PrintMB400@i^0,c
  8230  003494                     l6599:
  8231                           
  8232                           ;Modbus.c: 43:         printf("Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  8233  003494  0E68               	movlw	low STR_5
  8234  003496  0100               	movlb	0	; () banked
  8235  003498  6F7D               	movwf	printf@fmt& (0+255),b
  8236  00349A  0EFE               	movlw	high STR_5
  8237  00349C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8238  00349E  C055  F07F         	movff	PrintMB400@i,?_printf+2
  8239  0034A2  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  8240  0034A6  90D8               	bcf	status,0,c
  8241  0034A8  3455               	rlcf	PrintMB400@i^0,w,c
  8242  0034AA  6ED9               	movwf	fsr2l,c
  8243  0034AC  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  8244  0034AE  6EDA               	movwf	fsr2h,c
  8245  0034B0  0E00               	movlw	low _MB400xx
  8246  0034B2  26D9               	addwf	fsr2l,f,c
  8247  0034B4  0E03               	movlw	high _MB400xx
  8248  0034B6  22DA               	addwfc	fsr2h,f,c
  8249  0034B8  CFDE F081          	movff	postinc2,?_printf+4
  8250  0034BC  CFDD F082          	movff	postdec2,?_printf+5
  8251  0034C0  ECFD  F01D         	call	_printf	;wreg free
  8252  0034C4                     
  8253                           ;Modbus.c: 44:     }
  8254  0034C4  4A55               	infsnz	PrintMB400@i^0,f,c
  8255  0034C6  2A56               	incf	(PrintMB400@i+1)^0,f,c
  8256  0034C8  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  8257  0034CA  EF70  F01A         	goto	u6551
  8258  0034CE  5056               	movf	(PrintMB400@i+1)^0,w,c
  8259  0034D0  E109               	bnz	u6550
  8260  0034D2  0E20               	movlw	32
  8261  0034D4  5C55               	subwf	PrintMB400@i^0,w,c
  8262  0034D6  A0D8               	btfss	status,0,c
  8263  0034D8  EF70  F01A         	goto	u6551
  8264  0034DC  EF72  F01A         	goto	u6550
  8265  0034E0                     u6551:
  8266  0034E0  EF4A  F01A         	goto	l6599
  8267  0034E4                     u6550:
  8268  0034E4  0012               	return		;funcret
  8269  0034E6                     __end_of_PrintMB400:
  8270                           	opt callstack 0
  8271                           
  8272 ;; *************** function _ModbusFC03 *****************
  8273 ;; Defined at:
  8274 ;;		line 157 in file "Modbus.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  i               2   49[BANK0 ] int 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        6 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:   14
  8295 ;; This function calls:
  8296 ;;		_PrintModRespon
  8297 ;;		_UART1_Write_string
  8298 ;;		_generateCRC
  8299 ;;		_printf
  8300 ;; This function is called by:
  8301 ;;		_main
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text44
  8306  0006B4                     __ptext44:
  8307                           	opt callstack 0
  8308  0006B4                     _ModbusFC03:
  8309                           	opt callstack 16
  8310  0006B4                     
  8311                           ;Modbus.c: 162:     MBResCnt = 0;
  8312  0006B4  0E00               	movlw	0
  8313  0006B6  0100               	movlb	0	; () banked
  8314  0006B8  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8315  0006BA  0E00               	movlw	0
  8316  0006BC  6FA9               	movwf	_MBResCnt& (0+255),b
  8317  0006BE                     
  8318                           ; BSR set to: 0
  8319                           ;Modbus.c: 163:     MBRespon[MBResCnt] = ModbusData[0];
  8320  0006BE  0102               	movlb	2	; () banked
  8321  0006C0  5100               	movf	_ModbusData& (0+255),w,b
  8322  0006C2  0100               	movlb	0	; () banked
  8323  0006C4  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8324  0006C6  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8325  0006C8  90D8               	bcf	status,0,c
  8326  0006CA  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8327  0006CC  6ED9               	movwf	fsr2l,c
  8328  0006CE  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8329  0006D0  6EDA               	movwf	fsr2h,c
  8330  0006D2  0E41               	movlw	low _MBRespon
  8331  0006D4  26D9               	addwf	fsr2l,f,c
  8332  0006D6  0E01               	movlw	high _MBRespon
  8333  0006D8  22DA               	addwfc	fsr2h,f,c
  8334  0006DA  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  8335  0006DE  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  8336  0006E2                     
  8337                           ; BSR set to: 0
  8338                           ;Modbus.c: 164:     MBResCnt++;
  8339  0006E2  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8340  0006E4  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8341  0006E6                     
  8342                           ; BSR set to: 0
  8343                           ;Modbus.c: 165:     MBRespon[MBResCnt] = ModbusData[1];
  8344  0006E6  0102               	movlb	2	; () banked
  8345  0006E8  5101               	movf	(_ModbusData+1)& (0+255),w,b
  8346  0006EA  0100               	movlb	0	; () banked
  8347  0006EC  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8348  0006EE  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8349  0006F0  90D8               	bcf	status,0,c
  8350  0006F2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8351  0006F4  6ED9               	movwf	fsr2l,c
  8352  0006F6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8353  0006F8  6EDA               	movwf	fsr2h,c
  8354  0006FA  0E41               	movlw	low _MBRespon
  8355  0006FC  26D9               	addwf	fsr2l,f,c
  8356  0006FE  0E01               	movlw	high _MBRespon
  8357  000700  22DA               	addwfc	fsr2h,f,c
  8358  000702  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  8359  000706  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  8360  00070A                     
  8361                           ; BSR set to: 0
  8362                           ;Modbus.c: 166:     MBResCnt++;
  8363  00070A  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8364  00070C  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8365  00070E                     
  8366                           ; BSR set to: 0
  8367                           ;Modbus.c: 167:     MBRespon[MBResCnt] = ModbusData[5] *2;
  8368  00070E  0102               	movlb	2	; () banked
  8369  000710  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8370  000712  0D02               	mullw	2
  8371  000714  90D8               	bcf	status,0,c
  8372  000716  0100               	movlb	0	; () banked
  8373  000718  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8374  00071A  6ED9               	movwf	fsr2l,c
  8375  00071C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8376  00071E  6EDA               	movwf	fsr2h,c
  8377  000720  0E41               	movlw	low _MBRespon
  8378  000722  26D9               	addwf	fsr2l,f,c
  8379  000724  0E01               	movlw	high _MBRespon
  8380  000726  22DA               	addwfc	fsr2h,f,c
  8381  000728  CFF3 FFDE          	movff	prodl,postinc2
  8382  00072C  CFF4 FFDD          	movff	prodh,postdec2
  8383  000730                     
  8384                           ; BSR set to: 0
  8385                           ;Modbus.c: 168:     MBResCnt++;
  8386  000730  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8387  000732  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8388                           
  8389                           ;Modbus.c: 172:     switch(ModbusData[2]){
  8390  000734  EFDC  F003         	goto	l6885
  8391  000738                     l6867:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;Modbus.c: 175:         {;Modbus.c: 176:             printf("Circuit Get\r\n");
  8395  000738  0EA1               	movlw	low STR_12
  8396  00073A  6F7D               	movwf	printf@fmt& (0+255),b
  8397  00073C  0EFF               	movlw	high STR_12
  8398  00073E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8399  000740  ECFD  F01D         	call	_printf	;wreg free
  8400                           
  8401                           ;Modbus.c: 177:             break;
  8402  000744  EF0B  F004         	goto	l6887
  8403  000748                     l6869:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;Modbus.c: 180:         {;Modbus.c: 181:             printf("Part No.\r\n");
  8407  000748  0EC8               	movlw	low STR_13
  8408  00074A  6F7D               	movwf	printf@fmt& (0+255),b
  8409  00074C  0EFF               	movlw	high STR_13
  8410  00074E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8411  000750  ECFD  F01D         	call	_printf	;wreg free
  8412                           
  8413                           ;Modbus.c: 182:             break;
  8414  000754  EF0B  F004         	goto	l6887
  8415  000758                     l6871:
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;Modbus.c: 185:         {;Modbus.c: 186:             printf("Revision\r\n");
  8419  000758  0ED3               	movlw	low STR_14
  8420  00075A  6F7D               	movwf	printf@fmt& (0+255),b
  8421  00075C  0EFF               	movlw	high STR_14
  8422  00075E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8423  000760  ECFD  F01D         	call	_printf	;wreg free
  8424                           
  8425                           ;Modbus.c: 187:             break;
  8426  000764  EF0B  F004         	goto	l6887
  8427  000768                     l6873:
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;Modbus.c: 190:         {;Modbus.c: 191:             printf("Serial No.\r\n");
  8431  000768  0EAF               	movlw	low STR_15
  8432  00076A  6F7D               	movwf	printf@fmt& (0+255),b
  8433  00076C  0EFF               	movlw	high STR_15
  8434  00076E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8435  000770  ECFD  F01D         	call	_printf	;wreg free
  8436                           
  8437                           ;Modbus.c: 192:             break;
  8438  000774  EF0B  F004         	goto	l6887
  8439  000778                     l6875:
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;Modbus.c: 195:         {;Modbus.c: 196:             printf("Compile Date\r\n");
  8443  000778  0E83               	movlw	low STR_16
  8444  00077A  6F7D               	movwf	printf@fmt& (0+255),b
  8445  00077C  0EFF               	movlw	high STR_16
  8446  00077E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8447  000780  ECFD  F01D         	call	_printf	;wreg free
  8448                           
  8449                           ;Modbus.c: 197:             break;
  8450  000784  EF0B  F004         	goto	l6887
  8451  000788                     l6877:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;Modbus.c: 200:         {;Modbus.c: 201:             printf("Compile Time\r\n");
  8455  000788  0E74               	movlw	low STR_17
  8456  00078A  6F7D               	movwf	printf@fmt& (0+255),b
  8457  00078C  0EFF               	movlw	high STR_17
  8458  00078E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8459  000790  ECFD  F01D         	call	_printf	;wreg free
  8460                           
  8461                           ;Modbus.c: 202:             break;
  8462  000794  EF0B  F004         	goto	l6887
  8463  000798                     l6879:
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;Modbus.c: 205:         {;Modbus.c: 206:             printf("Compiler Ver\r\n");
  8467  000798  0E92               	movlw	low STR_18
  8468  00079A  6F7D               	movwf	printf@fmt& (0+255),b
  8469  00079C  0EFF               	movlw	high STR_18
  8470  00079E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8471  0007A0  ECFD  F01D         	call	_printf	;wreg free
  8472                           
  8473                           ;Modbus.c: 207:             break;
  8474  0007A4  EF0B  F004         	goto	l6887
  8475  0007A8                     l6881:
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;Modbus.c: 210:         {;Modbus.c: 211:             printf("Analogue Inputs\r\n");
  8479  0007A8  0E10               	movlw	low STR_19
  8480  0007AA  6F7D               	movwf	printf@fmt& (0+255),b
  8481  0007AC  0EFF               	movlw	high STR_19
  8482  0007AE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8483  0007B0  ECFD  F01D         	call	_printf	;wreg free
  8484                           
  8485                           ;Modbus.c: 212:             break;
  8486  0007B4  EF0B  F004         	goto	l6887
  8487  0007B8                     l6885:
  8488                           
  8489                           ; BSR set to: 0
  8490  0007B8  0102               	movlb	2	; () banked
  8491  0007BA  5102               	movf	(_ModbusData+2)& (0+255),w,b
  8492  0007BC  0100               	movlb	0	; () banked
  8493  0007BE  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8494  0007C0  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8495                           
  8496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8497                           ; Switch size 1, requested type "simple"
  8498                           ; Number of cases is 1, Range of values is 0 to 0
  8499                           ; switch strategies available:
  8500                           ; Name         Instructions Cycles
  8501                           ; simple_byte            4     3 (average)
  8502                           ;	Chosen strategy is simple_byte
  8503  0007C2  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
  8504  0007C4  0A00               	xorlw	0	; case 0
  8505  0007C6  B4D8               	btfsc	status,2,c
  8506  0007C8  EFE8  F003         	goto	l7257
  8507  0007CC  EF0B  F004         	goto	l6887
  8508  0007D0                     l7257:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ; Switch size 1, requested type "simple"
  8512                           ; Number of cases is 8, Range of values is 0 to 7
  8513                           ; switch strategies available:
  8514                           ; Name         Instructions Cycles
  8515                           ; simple_byte           25    13 (average)
  8516                           ;	Chosen strategy is simple_byte
  8517  0007D0  518D               	movf	??_ModbusFC03& (0+255),w,b
  8518  0007D2  0A00               	xorlw	0	; case 0
  8519  0007D4  B4D8               	btfsc	status,2,c
  8520  0007D6  EF9C  F003         	goto	l6867
  8521  0007DA  0A01               	xorlw	1	; case 1
  8522  0007DC  B4D8               	btfsc	status,2,c
  8523  0007DE  EFA4  F003         	goto	l6869
  8524  0007E2  0A03               	xorlw	3	; case 2
  8525  0007E4  B4D8               	btfsc	status,2,c
  8526  0007E6  EFAC  F003         	goto	l6871
  8527  0007EA  0A01               	xorlw	1	; case 3
  8528  0007EC  B4D8               	btfsc	status,2,c
  8529  0007EE  EFB4  F003         	goto	l6873
  8530  0007F2  0A07               	xorlw	7	; case 4
  8531  0007F4  B4D8               	btfsc	status,2,c
  8532  0007F6  EFBC  F003         	goto	l6875
  8533  0007FA  0A01               	xorlw	1	; case 5
  8534  0007FC  B4D8               	btfsc	status,2,c
  8535  0007FE  EFC4  F003         	goto	l6877
  8536  000802  0A03               	xorlw	3	; case 6
  8537  000804  B4D8               	btfsc	status,2,c
  8538  000806  EFCC  F003         	goto	l6879
  8539  00080A  0A01               	xorlw	1	; case 7
  8540  00080C  B4D8               	btfsc	status,2,c
  8541  00080E  EFD4  F003         	goto	l6881
  8542  000812  EF0B  F004         	goto	l6887
  8543  000816                     l6887:
  8544                           
  8545                           ;Modbus.c: 217:     for(i=0; i< (ModbusData[5]) ; i++ ){
  8546  000816  0E00               	movlw	0
  8547  000818  0100               	movlb	0	; () banked
  8548  00081A  6F92               	movwf	(ModbusFC03@i+1)& (0+255),b
  8549  00081C  0E00               	movlw	0
  8550  00081E  6F91               	movwf	ModbusFC03@i& (0+255),b
  8551  000820  EF18  F005         	goto	l6909
  8552  000824                     l6889:
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;Modbus.c: 222:         if(ModbusData[2] == 0x03){
  8556  000824  0E03               	movlw	3
  8557  000826  0102               	movlb	2	; () banked
  8558  000828  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  8559  00082A  A4D8               	btfss	status,2,c
  8560  00082C  EF1A  F004         	goto	u6901
  8561  000830  EF1C  F004         	goto	u6900
  8562  000834                     u6901:
  8563  000834  EF4D  F004         	goto	l6893
  8564  000838                     u6900:
  8565  000838                     
  8566                           ; BSR set to: 2
  8567                           ;Modbus.c: 229:             ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
  8568  000838  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8569  00083A  0100               	movlb	0	; () banked
  8570  00083C  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8571  00083E  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8572  000840  0E00               	movlw	0
  8573  000842  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8574  000844  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8575  000846  90D8               	bcf	status,0,c
  8576  000848  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8577  00084A  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8578  00084C  0E18               	movlw	low _MB303xx
  8579  00084E  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8580  000850  6ED9               	movwf	fsr2l,c
  8581  000852  0E01               	movlw	high _MB303xx
  8582  000854  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8583  000856  6EDA               	movwf	fsr2h,c
  8584  000858  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8585  00085C  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8586  000860  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8587  000862  6FBD               	movwf	_ByteLo& (0+255),b
  8588  000864  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8589                           
  8590                           ;Modbus.c: 230:             ByteHi = MB303xx[ModbusData[3] +i] >> 8;
  8591  000866  0102               	movlb	2	; () banked
  8592  000868  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8593  00086A  0100               	movlb	0	; () banked
  8594  00086C  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8595  00086E  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8596  000870  0E00               	movlw	0
  8597  000872  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8598  000874  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8599  000876  90D8               	bcf	status,0,c
  8600  000878  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8601  00087A  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8602  00087C  0E18               	movlw	low _MB303xx
  8603  00087E  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8604  000880  6ED9               	movwf	fsr2l,c
  8605  000882  0E01               	movlw	high _MB303xx
  8606  000884  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8607  000886  6EDA               	movwf	fsr2h,c
  8608  000888  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8609  00088C  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8610  000890  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8611  000892  6FA7               	movwf	_ByteHi& (0+255),b
  8612  000894  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8613                           
  8614                           ;Modbus.c: 233:         }else if(ModbusData[2] == 0x01){
  8615  000896  EFF7  F004         	goto	l749
  8616  00089A                     l6893:
  8617                           
  8618                           ; BSR set to: 2
  8619  00089A  0502               	decf	(_ModbusData+2)& (0+255),w,b
  8620  00089C  A4D8               	btfss	status,2,c
  8621  00089E  EF53  F004         	goto	u6911
  8622  0008A2  EF55  F004         	goto	u6910
  8623  0008A6                     u6911:
  8624  0008A6  EF86  F004         	goto	l6897
  8625  0008AA                     u6910:
  8626  0008AA                     
  8627                           ; BSR set to: 2
  8628                           ;Modbus.c: 240:             ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
  8629  0008AA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8630  0008AC  0100               	movlb	0	; () banked
  8631  0008AE  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8632  0008B0  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8633  0008B2  0E00               	movlw	0
  8634  0008B4  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8635  0008B6  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8636  0008B8  90D8               	bcf	status,0,c
  8637  0008BA  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8638  0008BC  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8639  0008BE  0E00               	movlw	low _MB301xx
  8640  0008C0  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8641  0008C2  6ED9               	movwf	fsr2l,c
  8642  0008C4  0E01               	movlw	high _MB301xx
  8643  0008C6  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8644  0008C8  6EDA               	movwf	fsr2h,c
  8645  0008CA  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8646  0008CE  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8647  0008D2  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8648  0008D4  6FBD               	movwf	_ByteLo& (0+255),b
  8649  0008D6  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8650                           
  8651                           ;Modbus.c: 241:             ByteHi = MB301xx[ModbusData[3] +i] >> 8;
  8652  0008D8  0102               	movlb	2	; () banked
  8653  0008DA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8654  0008DC  0100               	movlb	0	; () banked
  8655  0008DE  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8656  0008E0  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8657  0008E2  0E00               	movlw	0
  8658  0008E4  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8659  0008E6  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8660  0008E8  90D8               	bcf	status,0,c
  8661  0008EA  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8662  0008EC  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8663  0008EE  0E00               	movlw	low _MB301xx
  8664  0008F0  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8665  0008F2  6ED9               	movwf	fsr2l,c
  8666  0008F4  0E01               	movlw	high _MB301xx
  8667  0008F6  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8668  0008F8  6EDA               	movwf	fsr2h,c
  8669  0008FA  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8670  0008FE  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8671  000902  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8672  000904  6FA7               	movwf	_ByteHi& (0+255),b
  8673  000906  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8674                           
  8675                           ;Modbus.c: 243:         }
  8676  000908  EFF7  F004         	goto	l749
  8677  00090C                     l6897:
  8678                           
  8679                           ; BSR set to: 2
  8680  00090C  0E02               	movlw	2
  8681  00090E  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  8682  000910  A4D8               	btfss	status,2,c
  8683  000912  EF8D  F004         	goto	u6921
  8684  000916  EF8F  F004         	goto	u6920
  8685  00091A                     u6921:
  8686  00091A  EFC0  F004         	goto	l6901
  8687  00091E                     u6920:
  8688  00091E                     
  8689                           ; BSR set to: 2
  8690                           ;Modbus.c: 250:             ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
  8691  00091E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8692  000920  0100               	movlb	0	; () banked
  8693  000922  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8694  000924  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8695  000926  0E00               	movlw	0
  8696  000928  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8697  00092A  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8698  00092C  90D8               	bcf	status,0,c
  8699  00092E  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8700  000930  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8701  000932  0E3F               	movlw	low _MB302xx
  8702  000934  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8703  000936  6ED9               	movwf	fsr2l,c
  8704  000938  0E01               	movlw	high _MB302xx
  8705  00093A  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8706  00093C  6EDA               	movwf	fsr2h,c
  8707  00093E  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8708  000942  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8709  000946  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8710  000948  6FBD               	movwf	_ByteLo& (0+255),b
  8711  00094A  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8712                           
  8713                           ;Modbus.c: 251:             ByteHi = MB302xx[ModbusData[3] +i] >> 8;
  8714  00094C  0102               	movlb	2	; () banked
  8715  00094E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8716  000950  0100               	movlb	0	; () banked
  8717  000952  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8718  000954  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8719  000956  0E00               	movlw	0
  8720  000958  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8721  00095A  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8722  00095C  90D8               	bcf	status,0,c
  8723  00095E  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8724  000960  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8725  000962  0E3F               	movlw	low _MB302xx
  8726  000964  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8727  000966  6ED9               	movwf	fsr2l,c
  8728  000968  0E01               	movlw	high _MB302xx
  8729  00096A  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8730  00096C  6EDA               	movwf	fsr2h,c
  8731  00096E  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8732  000972  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8733  000976  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8734  000978  6FA7               	movwf	_ByteHi& (0+255),b
  8735  00097A  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8736                           
  8737                           ;Modbus.c: 253:         }
  8738  00097C  EFF7  F004         	goto	l749
  8739  000980                     l6901:
  8740                           
  8741                           ; BSR set to: 2
  8742  000980  5102               	movf	(_ModbusData+2)& (0+255),w,b
  8743  000982  A4D8               	btfss	status,2,c
  8744  000984  EFC6  F004         	goto	u6931
  8745  000988  EFC8  F004         	goto	u6930
  8746  00098C                     u6931:
  8747  00098C  EFF7  F004         	goto	l749
  8748  000990                     u6930:
  8749  000990                     
  8750                           ; BSR set to: 2
  8751                           ;Modbus.c: 255:             ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  8752  000990  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8753  000992  0100               	movlb	0	; () banked
  8754  000994  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8755  000996  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8756  000998  0E00               	movlw	0
  8757  00099A  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8758  00099C  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8759  00099E  90D8               	bcf	status,0,c
  8760  0009A0  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8761  0009A2  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8762  0009A4  0E40               	movlw	low _MB300xx
  8763  0009A6  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8764  0009A8  6ED9               	movwf	fsr2l,c
  8765  0009AA  0E03               	movlw	high _MB300xx
  8766  0009AC  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8767  0009AE  6EDA               	movwf	fsr2h,c
  8768  0009B0  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8769  0009B4  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8770  0009B8  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8771  0009BA  6FBD               	movwf	_ByteLo& (0+255),b
  8772  0009BC  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8773                           
  8774                           ;Modbus.c: 256:             ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  8775  0009BE  0102               	movlb	2	; () banked
  8776  0009C0  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8777  0009C2  0100               	movlb	0	; () banked
  8778  0009C4  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8779  0009C6  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8780  0009C8  0E00               	movlw	0
  8781  0009CA  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8782  0009CC  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8783  0009CE  90D8               	bcf	status,0,c
  8784  0009D0  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8785  0009D2  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8786  0009D4  0E40               	movlw	low _MB300xx
  8787  0009D6  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8788  0009D8  6ED9               	movwf	fsr2l,c
  8789  0009DA  0E03               	movlw	high _MB300xx
  8790  0009DC  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8791  0009DE  6EDA               	movwf	fsr2h,c
  8792  0009E0  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8793  0009E4  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8794  0009E8  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8795  0009EA  6FA7               	movwf	_ByteHi& (0+255),b
  8796  0009EC  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8797  0009EE                     l749:
  8798                           
  8799                           ;Modbus.c: 263:         MBRespon[MBResCnt] = ByteHi;
  8800  0009EE  90D8               	bcf	status,0,c
  8801  0009F0  0100               	movlb	0	; () banked
  8802  0009F2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8803  0009F4  6ED9               	movwf	fsr2l,c
  8804  0009F6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8805  0009F8  6EDA               	movwf	fsr2h,c
  8806  0009FA  0E41               	movlw	low _MBRespon
  8807  0009FC  26D9               	addwf	fsr2l,f,c
  8808  0009FE  0E01               	movlw	high _MBRespon
  8809  000A00  22DA               	addwfc	fsr2h,f,c
  8810  000A02  C0A7  FFDE         	movff	_ByteHi,postinc2
  8811  000A06  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8812  000A0A                     
  8813                           ; BSR set to: 0
  8814                           ;Modbus.c: 264:         MBResCnt++;
  8815  000A0A  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8816  000A0C  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8817  000A0E                     
  8818                           ; BSR set to: 0
  8819                           ;Modbus.c: 265:         MBRespon[MBResCnt] = ByteLo;
  8820  000A0E  90D8               	bcf	status,0,c
  8821  000A10  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8822  000A12  6ED9               	movwf	fsr2l,c
  8823  000A14  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8824  000A16  6EDA               	movwf	fsr2h,c
  8825  000A18  0E41               	movlw	low _MBRespon
  8826  000A1A  26D9               	addwf	fsr2l,f,c
  8827  000A1C  0E01               	movlw	high _MBRespon
  8828  000A1E  22DA               	addwfc	fsr2h,f,c
  8829  000A20  C0BD  FFDE         	movff	_ByteLo,postinc2
  8830  000A24  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8831                           
  8832                           ;Modbus.c: 266:         MBResCnt++;
  8833  000A28  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8834  000A2A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8835                           
  8836                           ;Modbus.c: 268:     }
  8837  000A2C  4B91               	infsnz	ModbusFC03@i& (0+255),f,b
  8838  000A2E  2B92               	incf	(ModbusFC03@i+1)& (0+255),f,b
  8839  000A30                     l6909:
  8840                           
  8841                           ; BSR set to: 0
  8842  000A30  0102               	movlb	2	; () banked
  8843  000A32  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8844  000A34  0100               	movlb	0	; () banked
  8845  000A36  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8846  000A38  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8847  000A3A  518D               	movf	??_ModbusFC03& (0+255),w,b
  8848  000A3C  5D91               	subwf	ModbusFC03@i& (0+255),w,b
  8849  000A3E  5192               	movf	(ModbusFC03@i+1)& (0+255),w,b
  8850  000A40  0A80               	xorlw	128
  8851  000A42  6F8F               	movwf	(??_ModbusFC03+2)& (0+255),b
  8852  000A44  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
  8853  000A46  0A80               	xorlw	128
  8854  000A48  598F               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
  8855  000A4A  A0D8               	btfss	status,0,c
  8856  000A4C  EF2A  F005         	goto	u6941
  8857  000A50  EF2C  F005         	goto	u6940
  8858  000A54                     u6941:
  8859  000A54  EF12  F004         	goto	l6889
  8860  000A58                     u6940:
  8861  000A58                     
  8862                           ; BSR set to: 0
  8863                           ;Modbus.c: 270:     ByteHi = generateCRC(MBResCnt, 1);
  8864  000A58  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8865  000A5C  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8866  000A60  0E01               	movlw	1
  8867  000A62  6E07               	movwf	generateCRC@HiOrLo^0,c
  8868  000A64  ECDC  F013         	call	_generateCRC	;wreg free
  8869  000A68  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8870  000A6C  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8871                           
  8872                           ;Modbus.c: 271:     ByteLo = generateCRC(MBResCnt, 0);
  8873  000A70  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8874  000A74  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8875  000A78  0E00               	movlw	0
  8876  000A7A  6E07               	movwf	generateCRC@HiOrLo^0,c
  8877  000A7C  ECDC  F013         	call	_generateCRC	;wreg free
  8878  000A80  C005  F0BD         	movff	?_generateCRC,_ByteLo
  8879  000A84  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  8880  000A88                     
  8881                           ;Modbus.c: 273:     MBRespon[MBResCnt] = ByteHi;
  8882  000A88  90D8               	bcf	status,0,c
  8883  000A8A  0100               	movlb	0	; () banked
  8884  000A8C  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8885  000A8E  6ED9               	movwf	fsr2l,c
  8886  000A90  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8887  000A92  6EDA               	movwf	fsr2h,c
  8888  000A94  0E41               	movlw	low _MBRespon
  8889  000A96  26D9               	addwf	fsr2l,f,c
  8890  000A98  0E01               	movlw	high _MBRespon
  8891  000A9A  22DA               	addwfc	fsr2h,f,c
  8892  000A9C  C0A7  FFDE         	movff	_ByteHi,postinc2
  8893  000AA0  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8894  000AA4                     
  8895                           ; BSR set to: 0
  8896                           ;Modbus.c: 274:     MBRespon[MBResCnt +1] = ByteLo;
  8897  000AA4  90D8               	bcf	status,0,c
  8898  000AA6  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8899  000AA8  6ED9               	movwf	fsr2l,c
  8900  000AAA  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8901  000AAC  6EDA               	movwf	fsr2h,c
  8902  000AAE  0E43               	movlw	low (_MBRespon+2)
  8903  000AB0  26D9               	addwf	fsr2l,f,c
  8904  000AB2  0E01               	movlw	high (_MBRespon+2)
  8905  000AB4  22DA               	addwfc	fsr2h,f,c
  8906  000AB6  C0BD  FFDE         	movff	_ByteLo,postinc2
  8907  000ABA  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8908  000ABE                     
  8909                           ; BSR set to: 0
  8910                           ;Modbus.c: 275:     MBResCnt = MBResCnt +2;
  8911  000ABE  0E02               	movlw	2
  8912  000AC0  25A9               	addwf	_MBResCnt& (0+255),w,b
  8913  000AC2  6FA9               	movwf	_MBResCnt& (0+255),b
  8914  000AC4  0E00               	movlw	0
  8915  000AC6  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8916  000AC8  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8917  000ACA                     
  8918                           ; BSR set to: 0
  8919                           ;Modbus.c: 277:     if(Debug ==1){
  8920  000ACA  05B0               	decf	_Debug& (0+255),w,b
  8921  000ACC  A4D8               	btfss	status,2,c
  8922  000ACE  EF6B  F005         	goto	u6951
  8923  000AD2  EF6D  F005         	goto	u6950
  8924  000AD6                     u6951:
  8925  000AD6  EF79  F005         	goto	l6923
  8926  000ADA                     u6950:
  8927  000ADA                     
  8928                           ; BSR set to: 0
  8929                           ;Modbus.c: 278:         printf("Modbus Response Count %i:\r\n",MBResCnt);
  8930  000ADA  0EB4               	movlw	low STR_20
  8931  000ADC  6F7D               	movwf	printf@fmt& (0+255),b
  8932  000ADE  0EFD               	movlw	high STR_20
  8933  000AE0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8934  000AE2  C0A9  F07F         	movff	_MBResCnt,?_printf+2
  8935  000AE6  C0AA  F080         	movff	_MBResCnt+1,?_printf+3
  8936  000AEA  ECFD  F01D         	call	_printf	;wreg free
  8937                           
  8938                           ;Modbus.c: 279:         PrintModRespon();
  8939  000AEE  EC67  F017         	call	_PrintModRespon	;wreg free
  8940  000AF2                     l6923:
  8941                           
  8942                           ;Modbus.c: 283:     UART1_Write_string(MBRespon,MBResCnt);
  8943  000AF2  0E41               	movlw	low _MBRespon
  8944  000AF4  6E06               	movwf	UART1_Write_string@data^0,c
  8945  000AF6  0E01               	movlw	high _MBRespon
  8946  000AF8  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8947  000AFA  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8948  000AFE  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8949  000B02  EC05  F01A         	call	_UART1_Write_string	;wreg free
  8950  000B06  0012               	return		;funcret
  8951  000B08                     __end_of_ModbusFC03:
  8952                           	opt callstack 0
  8953                           
  8954 ;; *************** function _ModbusError *****************
  8955 ;; Defined at:
  8956 ;;		line 412 in file "Modbus.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  ErrorCode       2   45[BANK0 ] int 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  i               2    0        int 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8973 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8974 ;;Total ram usage:        6 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:   14
  8977 ;; This function calls:
  8978 ;;		_PrintModRespon
  8979 ;;		_UART1_Write_string
  8980 ;;		_generateCRC
  8981 ;; This function is called by:
  8982 ;;		_main
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text45
  8987  0025BC                     __ptext45:
  8988                           	opt callstack 0
  8989  0025BC                     _ModbusError:
  8990                           	opt callstack 16
  8991  0025BC                     
  8992                           ;Modbus.c: 417:     MBResCnt = 0;
  8993  0025BC  0E00               	movlw	0
  8994  0025BE  0100               	movlb	0	; () banked
  8995  0025C0  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8996  0025C2  0E00               	movlw	0
  8997  0025C4  6FA9               	movwf	_MBResCnt& (0+255),b
  8998  0025C6                     
  8999                           ; BSR set to: 0
  9000                           ;Modbus.c: 418:     MBRespon[MBResCnt] = ModbusData[0];
  9001  0025C6  0102               	movlb	2	; () banked
  9002  0025C8  5100               	movf	_ModbusData& (0+255),w,b
  9003  0025CA  0100               	movlb	0	; () banked
  9004  0025CC  6F8F               	movwf	??_ModbusError& (0+255),b
  9005  0025CE  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  9006  0025D0  90D8               	bcf	status,0,c
  9007  0025D2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9008  0025D4  6ED9               	movwf	fsr2l,c
  9009  0025D6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9010  0025D8  6EDA               	movwf	fsr2h,c
  9011  0025DA  0E41               	movlw	low _MBRespon
  9012  0025DC  26D9               	addwf	fsr2l,f,c
  9013  0025DE  0E01               	movlw	high _MBRespon
  9014  0025E0  22DA               	addwfc	fsr2h,f,c
  9015  0025E2  C08F  FFDE         	movff	??_ModbusError,postinc2
  9016  0025E6  C090  FFDD         	movff	??_ModbusError+1,postdec2
  9017  0025EA                     
  9018                           ; BSR set to: 0
  9019                           ;Modbus.c: 419:     MBResCnt++;
  9020  0025EA  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  9021  0025EC  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  9022  0025EE                     
  9023                           ; BSR set to: 0
  9024                           ;Modbus.c: 420:     MBRespon[MBResCnt] = ModbusData[1] + 128;
  9025  0025EE  0102               	movlb	2	; () banked
  9026  0025F0  5101               	movf	(_ModbusData+1)& (0+255),w,b
  9027  0025F2  0100               	movlb	0	; () banked
  9028  0025F4  6F8F               	movwf	??_ModbusError& (0+255),b
  9029  0025F6  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  9030  0025F8  0E80               	movlw	128
  9031  0025FA  278F               	addwf	??_ModbusError& (0+255),f,b
  9032  0025FC  0E00               	movlw	0
  9033  0025FE  2390               	addwfc	(??_ModbusError+1)& (0+255),f,b
  9034  002600  90D8               	bcf	status,0,c
  9035  002602  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9036  002604  6ED9               	movwf	fsr2l,c
  9037  002606  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9038  002608  6EDA               	movwf	fsr2h,c
  9039  00260A  0E41               	movlw	low _MBRespon
  9040  00260C  26D9               	addwf	fsr2l,f,c
  9041  00260E  0E01               	movlw	high _MBRespon
  9042  002610  22DA               	addwfc	fsr2h,f,c
  9043  002612  C08F  FFDE         	movff	??_ModbusError,postinc2
  9044  002616  C090  FFDD         	movff	??_ModbusError+1,postdec2
  9045  00261A                     
  9046                           ; BSR set to: 0
  9047                           ;Modbus.c: 421:     MBResCnt++;
  9048  00261A  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  9049  00261C  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  9050  00261E                     
  9051                           ; BSR set to: 0
  9052                           ;Modbus.c: 422:     MBRespon[MBResCnt] = ErrorCode;
  9053  00261E  90D8               	bcf	status,0,c
  9054  002620  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9055  002622  6ED9               	movwf	fsr2l,c
  9056  002624  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9057  002626  6EDA               	movwf	fsr2h,c
  9058  002628  0E41               	movlw	low _MBRespon
  9059  00262A  26D9               	addwf	fsr2l,f,c
  9060  00262C  0E01               	movlw	high _MBRespon
  9061  00262E  22DA               	addwfc	fsr2h,f,c
  9062  002630  C08D  FFDE         	movff	ModbusError@ErrorCode,postinc2
  9063  002634  C08E  FFDD         	movff	ModbusError@ErrorCode+1,postdec2
  9064  002638                     
  9065                           ; BSR set to: 0
  9066                           ;Modbus.c: 423:     MBResCnt++;
  9067  002638  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  9068  00263A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  9069  00263C                     
  9070                           ; BSR set to: 0
  9071                           ;Modbus.c: 425:     ByteHi = generateCRC(MBResCnt, 1);
  9072  00263C  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9073  002640  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9074  002644  0E01               	movlw	1
  9075  002646  6E07               	movwf	generateCRC@HiOrLo^0,c
  9076  002648  ECDC  F013         	call	_generateCRC	;wreg free
  9077  00264C  C005  F0A7         	movff	?_generateCRC,_ByteHi
  9078  002650  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  9079  002654                     
  9080                           ;Modbus.c: 426:     ByteLo = generateCRC(MBResCnt, 0);
  9081  002654  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9082  002658  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9083  00265C  0E00               	movlw	0
  9084  00265E  6E07               	movwf	generateCRC@HiOrLo^0,c
  9085  002660  ECDC  F013         	call	_generateCRC	;wreg free
  9086  002664  C005  F0BD         	movff	?_generateCRC,_ByteLo
  9087  002668  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  9088  00266C                     
  9089                           ;Modbus.c: 428:     MBRespon[MBResCnt] = ByteHi;
  9090  00266C  90D8               	bcf	status,0,c
  9091  00266E  0100               	movlb	0	; () banked
  9092  002670  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9093  002672  6ED9               	movwf	fsr2l,c
  9094  002674  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9095  002676  6EDA               	movwf	fsr2h,c
  9096  002678  0E41               	movlw	low _MBRespon
  9097  00267A  26D9               	addwf	fsr2l,f,c
  9098  00267C  0E01               	movlw	high _MBRespon
  9099  00267E  22DA               	addwfc	fsr2h,f,c
  9100  002680  C0A7  FFDE         	movff	_ByteHi,postinc2
  9101  002684  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  9102  002688                     
  9103                           ; BSR set to: 0
  9104                           ;Modbus.c: 429:     MBRespon[MBResCnt +1] = ByteLo;
  9105  002688  90D8               	bcf	status,0,c
  9106  00268A  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9107  00268C  6ED9               	movwf	fsr2l,c
  9108  00268E  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9109  002690  6EDA               	movwf	fsr2h,c
  9110  002692  0E43               	movlw	low (_MBRespon+2)
  9111  002694  26D9               	addwf	fsr2l,f,c
  9112  002696  0E01               	movlw	high (_MBRespon+2)
  9113  002698  22DA               	addwfc	fsr2h,f,c
  9114  00269A  C0BD  FFDE         	movff	_ByteLo,postinc2
  9115  00269E  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  9116  0026A2                     
  9117                           ; BSR set to: 0
  9118                           ;Modbus.c: 430:     MBResCnt = MBResCnt +2;
  9119  0026A2  0E02               	movlw	2
  9120  0026A4  25A9               	addwf	_MBResCnt& (0+255),w,b
  9121  0026A6  6FA9               	movwf	_MBResCnt& (0+255),b
  9122  0026A8  0E00               	movlw	0
  9123  0026AA  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9124  0026AC  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  9125  0026AE                     
  9126                           ; BSR set to: 0
  9127                           ;Modbus.c: 432:     PrintModRespon();
  9128  0026AE  EC67  F017         	call	_PrintModRespon	;wreg free
  9129  0026B2                     
  9130                           ;Modbus.c: 433:     UART1_Write_string(MBRespon,MBResCnt);
  9131  0026B2  0E41               	movlw	low _MBRespon
  9132  0026B4  6E06               	movwf	UART1_Write_string@data^0,c
  9133  0026B6  0E01               	movlw	high _MBRespon
  9134  0026B8  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9135  0026BA  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9136  0026BE  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9137  0026C2  EC05  F01A         	call	_UART1_Write_string	;wreg free
  9138  0026C6  0012               	return		;funcret
  9139  0026C8                     __end_of_ModbusError:
  9140                           	opt callstack 0
  9141                           
  9142 ;; *************** function _generateCRC *****************
  9143 ;; Defined at:
  9144 ;;		line 340 in file "Modbus.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  MessCnt         2    4[COMRAM] int 
  9147 ;;  HiOrLo          1    6[COMRAM] _Bool 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  crc             2   17[COMRAM] unsigned int 
  9150 ;;  j               2   15[COMRAM] int 
  9151 ;;  i               2   13[COMRAM] int 
  9152 ;;  crcLow          2   11[COMRAM] unsigned int 
  9153 ;;  crcHigh         2    9[COMRAM] unsigned int 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  2    4[COMRAM] unsigned int 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9163 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9164 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9166 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;Total ram usage:       15 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    4
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_ModbusFC03
  9174 ;;		_ModbusFC10
  9175 ;;		_ModbusError
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text46
  9180  0027B8                     __ptext46:
  9181                           	opt callstack 0
  9182  0027B8                     _generateCRC:
  9183                           	opt callstack 25
  9184  0027B8                     
  9185                           ;Modbus.c: 341:   unsigned int crc = 0xFFFF;
  9186  0027B8  6812               	setf	generateCRC@crc^0,c
  9187  0027BA  6813               	setf	(generateCRC@crc+1)^0,c
  9188  0027BC                     
  9189                           ;Modbus.c: 343:   unsigned int crcLow = 0;
  9190  0027BC  0E00               	movlw	0
  9191  0027BE  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  9192  0027C0  0E00               	movlw	0
  9193  0027C2  6E0C               	movwf	generateCRC@crcLow^0,c
  9194                           
  9195                           ;Modbus.c: 344:   int i,j = 0;
  9196  0027C4  0E00               	movlw	0
  9197  0027C6  6E11               	movwf	(generateCRC@j+1)^0,c
  9198  0027C8  0E00               	movlw	0
  9199  0027CA  6E10               	movwf	generateCRC@j^0,c
  9200                           
  9201                           ;Modbus.c: 346:     for(i=0;i<MessCnt;i++){
  9202  0027CC  0E00               	movlw	0
  9203  0027CE  6E0F               	movwf	(generateCRC@i+1)^0,c
  9204  0027D0  0E00               	movlw	0
  9205  0027D2  6E0E               	movwf	generateCRC@i^0,c
  9206  0027D4  EF1E  F014         	goto	l5047
  9207  0027D8                     l5029:
  9208                           
  9209                           ;Modbus.c: 347:       crc ^= MBRespon[i];
  9210  0027D8  90D8               	bcf	status,0,c
  9211  0027DA  340E               	rlcf	generateCRC@i^0,w,c
  9212  0027DC  6ED9               	movwf	fsr2l,c
  9213  0027DE  340F               	rlcf	(generateCRC@i+1)^0,w,c
  9214  0027E0  6EDA               	movwf	fsr2h,c
  9215  0027E2  0E41               	movlw	low _MBRespon
  9216  0027E4  26D9               	addwf	fsr2l,f,c
  9217  0027E6  0E01               	movlw	high _MBRespon
  9218  0027E8  22DA               	addwfc	fsr2h,f,c
  9219  0027EA  50DE               	movf	postinc2,w,c
  9220  0027EC  1A12               	xorwf	generateCRC@crc^0,f,c
  9221  0027EE  50DD               	movf	postdec2,w,c
  9222  0027F0  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  9223  0027F2                     
  9224                           ;Modbus.c: 348:       for(j=8; j!=0; j--){
  9225  0027F2  0E00               	movlw	0
  9226  0027F4  6E11               	movwf	(generateCRC@j+1)^0,c
  9227  0027F6  0E08               	movlw	8
  9228  0027F8  6E10               	movwf	generateCRC@j^0,c
  9229  0027FA                     l769:
  9230                           
  9231                           ;Modbus.c: 349:         if((crc & 0x0001) != 0){
  9232  0027FA  A012               	btfss	generateCRC@crc^0,0,c
  9233  0027FC  EF02  F014         	goto	u4331
  9234  002800  EF04  F014         	goto	u4330
  9235  002804                     u4331:
  9236  002804  EF0D  F014         	goto	l5041
  9237  002808                     u4330:
  9238  002808                     
  9239                           ;Modbus.c: 350:           crc >>= 1;
  9240  002808  90D8               	bcf	status,0,c
  9241  00280A  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  9242  00280C  3212               	rrcf	generateCRC@crc^0,f,c
  9243  00280E                     
  9244                           ;Modbus.c: 351:           crc ^= 0xA001;
  9245  00280E  0E01               	movlw	1
  9246  002810  1A12               	xorwf	generateCRC@crc^0,f,c
  9247  002812  0EA0               	movlw	160
  9248  002814  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  9249                           
  9250                           ;Modbus.c: 352:         }
  9251  002816  EF10  F014         	goto	l772
  9252  00281A                     l5041:
  9253                           
  9254                           ;Modbus.c: 354:           crc >>= 1;
  9255  00281A  90D8               	bcf	status,0,c
  9256  00281C  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  9257  00281E  3212               	rrcf	generateCRC@crc^0,f,c
  9258  002820                     l772:
  9259                           
  9260                           ;Modbus.c: 356:       }
  9261  002820  0610               	decf	generateCRC@j^0,f,c
  9262  002822  A0D8               	btfss	status,0,c
  9263  002824  0611               	decf	(generateCRC@j+1)^0,f,c
  9264  002826  5010               	movf	generateCRC@j^0,w,c
  9265  002828  1011               	iorwf	(generateCRC@j+1)^0,w,c
  9266  00282A  A4D8               	btfss	status,2,c
  9267  00282C  EF1A  F014         	goto	u4341
  9268  002830  EF1C  F014         	goto	u4340
  9269  002834                     u4341:
  9270  002834  EFFD  F013         	goto	l769
  9271  002838                     u4340:
  9272  002838                     
  9273                           ;Modbus.c: 357:     }
  9274  002838  4A0E               	infsnz	generateCRC@i^0,f,c
  9275  00283A  2A0F               	incf	(generateCRC@i+1)^0,f,c
  9276  00283C                     l5047:
  9277  00283C  5005               	movf	generateCRC@MessCnt^0,w,c
  9278  00283E  5C0E               	subwf	generateCRC@i^0,w,c
  9279  002840  500F               	movf	(generateCRC@i+1)^0,w,c
  9280  002842  0A80               	xorlw	128
  9281  002844  6E08               	movwf	??_generateCRC^0,c
  9282  002846  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
  9283  002848  0A80               	xorlw	128
  9284  00284A  5808               	subwfb	??_generateCRC^0,w,c
  9285  00284C  A0D8               	btfss	status,0,c
  9286  00284E  EF2B  F014         	goto	u4351
  9287  002852  EF2D  F014         	goto	u4350
  9288  002856                     u4351:
  9289  002856  EFEC  F013         	goto	l5029
  9290  00285A                     u4350:
  9291  00285A                     
  9292                           ;Modbus.c: 359:     crcHigh = (crc & 0x00FF);
  9293  00285A  5012               	movf	generateCRC@crc^0,w,c
  9294  00285C  6E0A               	movwf	generateCRC@crcHigh^0,c
  9295  00285E  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
  9296                           
  9297                           ;Modbus.c: 360:     crcLow = (crc & 0xFF00) >>8;
  9298  002860  C012  F008         	movff	generateCRC@crc,??_generateCRC
  9299  002864  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
  9300  002868  C009  F008         	movff	??_generateCRC+1,??_generateCRC
  9301  00286C  6A09               	clrf	(??_generateCRC+1)^0,c
  9302  00286E  5008               	movf	??_generateCRC^0,w,c
  9303  002870  6E0C               	movwf	generateCRC@crcLow^0,c
  9304  002872  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
  9305  002874                     
  9306                           ;Modbus.c: 362:     if(HiOrLo == 1){
  9307  002874  0407               	decf	generateCRC@HiOrLo^0,w,c
  9308  002876  A4D8               	btfss	status,2,c
  9309  002878  EF40  F014         	goto	u4361
  9310  00287C  EF42  F014         	goto	u4360
  9311  002880                     u4361:
  9312  002880  EF48  F014         	goto	l774
  9313  002884                     u4360:
  9314  002884                     
  9315                           ;Modbus.c: 363:         return crcHigh;
  9316  002884  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
  9317  002888  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
  9318  00288C  EF4C  F014         	goto	l775
  9319  002890                     l774:
  9320                           
  9321                           ;Modbus.c: 365:         return crcLow;
  9322  002890  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
  9323  002894  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
  9324  002898                     l775:
  9325  002898  0012               	return		;funcret
  9326  00289A                     __end_of_generateCRC:
  9327                           	opt callstack 0
  9328                           
  9329 ;; *************** function _UART1_Write_string *****************
  9330 ;; Defined at:
  9331 ;;		line 370 in file "Modbus.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  data            2    5[COMRAM] PTR unsigned int 
  9334 ;;		 -> MBRespon(64), 
  9335 ;;  data_len        2    7[COMRAM] int 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  i               2   10[COMRAM] int 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;Total ram usage:        7 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    5
  9354 ;; This function calls:
  9355 ;;		_EUSART1_Write
  9356 ;;		_EUSART1_is_tx_done
  9357 ;;		_EUSART1_is_tx_ready
  9358 ;;		_TXMode
  9359 ;; This function is called by:
  9360 ;;		_ModbusFC03
  9361 ;;		_ModbusFC10
  9362 ;;		_ModbusError
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text47
  9367  00340A                     __ptext47:
  9368                           	opt callstack 0
  9369  00340A                     _UART1_Write_string:
  9370                           	opt callstack 24
  9371  00340A                     
  9372                           ;Modbus.c: 370: void UART1_Write_string(unsigned int * data, int data_len);Modbus.c: 371
      +                          : {;Modbus.c: 372:     TXMode();
  9373  00340A  ECED  F01E         	call	_TXMode	;wreg free
  9374  00340E                     l5059:
  9375  00340E  EC82  F01E         	call	_EUSART1_is_tx_ready	;wreg free
  9376  003412  0900               	iorlw	0
  9377  003414  B4D8               	btfsc	status,2,c
  9378  003416  EF0F  F01A         	goto	u4371
  9379  00341A  EF11  F01A         	goto	u4370
  9380  00341E                     u4371:
  9381  00341E  EF07  F01A         	goto	l5059
  9382  003422                     u4370:
  9383  003422                     
  9384                           ;Modbus.c: 374:     for (int i = 0; i < data_len; i++) {
  9385  003422  0E00               	movlw	0
  9386  003424  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  9387  003426  0E00               	movlw	0
  9388  003428  6E0B               	movwf	UART1_Write_string@i^0,c
  9389  00342A  EF2F  F01A         	goto	l5069
  9390  00342E                     l5063:
  9391                           
  9392                           ;Modbus.c: 375:         EUSART1_Write(data[i]);
  9393  00342E  90D8               	bcf	status,0,c
  9394  003430  340B               	rlcf	UART1_Write_string@i^0,w,c
  9395  003432  6ED9               	movwf	fsr2l,c
  9396  003434  340C               	rlcf	(UART1_Write_string@i+1)^0,w,c
  9397  003436  6EDA               	movwf	fsr2h,c
  9398  003438  5006               	movf	UART1_Write_string@data^0,w,c
  9399  00343A  26D9               	addwf	fsr2l,f,c
  9400  00343C  5007               	movf	(UART1_Write_string@data+1)^0,w,c
  9401  00343E  22DA               	addwfc	fsr2h,f,c
  9402  003440  50DF               	movf	indf2,w,c
  9403  003442  ECD4  F01A         	call	_EUSART1_Write
  9404  003446                     l5065:
  9405  003446  ECA5  F01E         	call	_EUSART1_is_tx_done	;wreg free
  9406  00344A  0900               	iorlw	0
  9407  00344C  B4D8               	btfsc	status,2,c
  9408  00344E  EF2B  F01A         	goto	u4381
  9409  003452  EF2D  F01A         	goto	u4380
  9410  003456                     u4381:
  9411  003456  EF23  F01A         	goto	l5065
  9412  00345A                     u4380:
  9413  00345A                     
  9414                           ;Modbus.c: 377:     }
  9415  00345A  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  9416  00345C  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  9417  00345E                     l5069:
  9418  00345E  5008               	movf	UART1_Write_string@data_len^0,w,c
  9419  003460  5C0B               	subwf	UART1_Write_string@i^0,w,c
  9420  003462  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  9421  003464  0A80               	xorlw	128
  9422  003466  6E0A               	movwf	??_UART1_Write_string^0,c
  9423  003468  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  9424  00346A  0A80               	xorlw	128
  9425  00346C  580A               	subwfb	??_UART1_Write_string^0,w,c
  9426  00346E  A0D8               	btfss	status,0,c
  9427  003470  EF3C  F01A         	goto	u4391
  9428  003474  EF3E  F01A         	goto	u4390
  9429  003478                     u4391:
  9430  003478  EF17  F01A         	goto	l5063
  9431  00347C                     u4390:
  9432  00347C  0012               	return		;funcret
  9433  00347E                     __end_of_UART1_Write_string:
  9434                           	opt callstack 0
  9435                           
  9436 ;; *************** function _TXMode *****************
  9437 ;; Defined at:
  9438 ;;		line 50 in file "Modbus.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		None
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9456 ;;Total ram usage:        0 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    4
  9459 ;; This function calls:
  9460 ;;		Nothing
  9461 ;; This function is called by:
  9462 ;;		_UART1_Write_string
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text48
  9467  003DDA                     __ptext48:
  9468                           	opt callstack 0
  9469  003DDA                     _TXMode:
  9470                           	opt callstack 24
  9471  003DDA  8086               	bsf	134,0,c	;volatile
  9472  003DDC  8683               	bsf	131,3,c	;volatile
  9473  003DDE  0012               	return		;funcret
  9474  003DE0                     __end_of_TXMode:
  9475                           	opt callstack 0
  9476                           
  9477 ;; *************** function _EUSART1_is_tx_ready *****************
  9478 ;; Defined at:
  9479 ;;		line 134 in file "mcc_generated_files/eusart1.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      _Bool 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;Total ram usage:        0 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    4
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_UART1_Write_string
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text49
  9508  003D04                     __ptext49:
  9509                           	opt callstack 0
  9510  003D04                     _EUSART1_is_tx_ready:
  9511                           	opt callstack 24
  9512  003D04                     
  9513                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
  9514  003D04  0100               	movlb	0	; () banked
  9515  003D06  51BB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  9516  003D08  A4D8               	btfss	status,2,c
  9517  003D0A  EF89  F01E         	goto	u3961
  9518  003D0E  EF8C  F01E         	goto	u3960
  9519  003D12                     u3961:
  9520  003D12  0E01               	movlw	1
  9521  003D14  EF8D  F01E         	goto	u3970
  9522  003D18                     u3960:
  9523  003D18  0E00               	movlw	0
  9524  003D1A                     u3970:
  9525  003D1A                     
  9526                           ; BSR set to: 0
  9527  003D1A  0012               	return		;funcret
  9528  003D1C                     __end_of_EUSART1_is_tx_ready:
  9529                           	opt callstack 0
  9530                           
  9531 ;; *************** function _EUSART1_is_tx_done *****************
  9532 ;; Defined at:
  9533 ;;		line 144 in file "mcc_generated_files/eusart1.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;		None
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;		None
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      _Bool 
  9540 ;; Registers used:
  9541 ;;		wreg
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9551 ;;Total ram usage:        0 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; Hardware stack levels required when called:    4
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_UART1_Write_string
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text50
  9562  003D4A                     __ptext50:
  9563                           	opt callstack 0
  9564  003D4A                     _EUSART1_is_tx_done:
  9565                           	opt callstack 24
  9566  003D4A                     
  9567                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
  9568  003D4A  B29E               	btfsc	158,1,c	;volatile
  9569  003D4C  EFAA  F01E         	goto	u3981
  9570  003D50  EFAD  F01E         	goto	u3980
  9571  003D54                     u3981:
  9572  003D54  0E01               	movlw	1
  9573  003D56  EFAE  F01E         	goto	u3986
  9574  003D5A                     u3980:
  9575  003D5A  0E00               	movlw	0
  9576  003D5C                     u3986:
  9577  003D5C  0012               	return		;funcret
  9578  003D5E                     __end_of_EUSART1_is_tx_done:
  9579                           	opt callstack 0
  9580                           
  9581 ;; *************** function _EUSART1_Write *****************
  9582 ;; Defined at:
  9583 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  txData          1    wreg     unsigned char 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  txData          1    4[COMRAM] unsigned char 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9601 ;;Total ram usage:        1 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    4
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_UART1_Write_string
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text51
  9612  0035A8                     __ptext51:
  9613                           	opt callstack 0
  9614  0035A8                     _EUSART1_Write:
  9615                           	opt callstack 24
  9616                           
  9617                           ;incstack = 0
  9618                           ;EUSART1_Write@txData stored from wreg
  9619  0035A8  6E05               	movwf	EUSART1_Write@txData^0,c
  9620  0035AA                     l4661:
  9621                           
  9622                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
  9623  0035AA  0100               	movlb	0	; () banked
  9624  0035AC  51BB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  9625  0035AE  B4D8               	btfsc	status,2,c
  9626  0035B0  EFDC  F01A         	goto	u3991
  9627  0035B4  EFDE  F01A         	goto	u3990
  9628  0035B8                     u3991:
  9629  0035B8  EFD5  F01A         	goto	l4661
  9630  0035BC                     u3990:
  9631  0035BC                     
  9632                           ; BSR set to: 0
  9633                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
  9634  0035BC  010E               	movlb	14	; () banked
  9635  0035BE  B9C5               	btfsc	197,4,b	;volatile
  9636  0035C0  EFE4  F01A         	goto	u4001
  9637  0035C4  EFE6  F01A         	goto	u4000
  9638  0035C8                     u4001:
  9639  0035C8  EFEA  F01A         	goto	l471
  9640  0035CC                     u4000:
  9641  0035CC                     
  9642                           ; BSR set to: 14
  9643                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
  9644  0035CC  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  9645                           
  9646                           ;mcc_generated_files/eusart1.c: 184:     }
  9647  0035D0  EF00  F01B         	goto	l4675
  9648  0035D4                     l471:
  9649                           
  9650                           ; BSR set to: 14
  9651                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
  9652  0035D4  99C5               	bcf	197,4,b	;volatile
  9653  0035D6                     
  9654                           ; BSR set to: 14
  9655                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
  9656  0035D6  0EA1               	movlw	low _eusart1TxBuffer
  9657  0035D8  0100               	movlb	0	; () banked
  9658  0035DA  25B5               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  9659  0035DC  6ED9               	movwf	fsr2l,c
  9660  0035DE  6ADA               	clrf	fsr2h,c
  9661  0035E0  0E01               	movlw	high _eusart1TxBuffer
  9662  0035E2  22DA               	addwfc	fsr2h,f,c
  9663  0035E4  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  9664  0035E8                     
  9665                           ; BSR set to: 0
  9666  0035E8  2BB5               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  9667  0035EA                     
  9668                           ; BSR set to: 0
  9669                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  9670  0035EA  0E0F               	movlw	15
  9671  0035EC  65B5               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  9672  0035EE  EFFB  F01A         	goto	u4011
  9673  0035F2  EFFD  F01A         	goto	u4010
  9674  0035F6                     u4011:
  9675  0035F6  EFFF  F01A         	goto	l4673
  9676  0035FA                     u4010:
  9677  0035FA                     
  9678                           ; BSR set to: 0
  9679                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
  9680  0035FA  0E00               	movlw	0
  9681  0035FC  6FB5               	movwf	_eusart1TxHead& (0+255),b	;volatile
  9682  0035FE                     l4673:
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
  9686  0035FE  07BB               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  9687  003600                     l4675:
  9688                           
  9689                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
  9690  003600  010E               	movlb	14	; () banked
  9691  003602  89C5               	bsf	197,4,b	;volatile
  9692  003604                     
  9693                           ; BSR set to: 14
  9694  003604  0012               	return		;funcret
  9695  003606                     __end_of_EUSART1_Write:
  9696                           	opt callstack 0
  9697                           
  9698 ;; *************** function _PrintModRespon *****************
  9699 ;; Defined at:
  9700 ;;		line 384 in file "Modbus.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  i               2   43[BANK0 ] int 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9718 ;;Total ram usage:        3 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:   13
  9721 ;; This function calls:
  9722 ;;		_EUSART2_is_tx_done
  9723 ;;		_EUSART2_is_tx_ready
  9724 ;;		_printf
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;;		_ModbusFC03
  9728 ;;		_ModbusFC10
  9729 ;;		_ModbusError
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text52
  9734  002ECE                     __ptext52:
  9735                           	opt callstack 0
  9736  002ECE                     _PrintModRespon:
  9737                           	opt callstack 17
  9738  002ECE                     
  9739                           ;Modbus.c: 388:     printf("Modbus Response Count %i:\r\n",MBResCnt);
  9740  002ECE  0EB4               	movlw	low STR_20
  9741  002ED0  0100               	movlb	0	; () banked
  9742  002ED2  6F7D               	movwf	printf@fmt& (0+255),b
  9743  002ED4  0EFD               	movlw	high STR_20
  9744  002ED6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9745  002ED8  C0A9  F07F         	movff	_MBResCnt,?_printf+2
  9746  002EDC  C0AA  F080         	movff	_MBResCnt+1,?_printf+3
  9747  002EE0  ECFD  F01D         	call	_printf	;wreg free
  9748  002EE4                     
  9749                           ;Modbus.c: 390:     for(i=0; i< MBResCnt ; i++ ){
  9750  002EE4  0E00               	movlw	0
  9751  002EE6  0100               	movlb	0	; () banked
  9752  002EE8  6F8C               	movwf	(PrintModRespon@i+1)& (0+255),b
  9753  002EEA  0E00               	movlw	0
  9754  002EEC  6F8B               	movwf	PrintModRespon@i& (0+255),b
  9755  002EEE  EFA8  F017         	goto	l6619
  9756  002EF2                     l6611:
  9757  002EF2  EC8E  F01E         	call	_EUSART2_is_tx_ready	;wreg free
  9758  002EF6  0900               	iorlw	0
  9759  002EF8  B4D8               	btfsc	status,2,c
  9760  002EFA  EF81  F017         	goto	u6561
  9761  002EFE  EF83  F017         	goto	u6560
  9762  002F02                     u6561:
  9763  002F02  EF79  F017         	goto	l6611
  9764  002F06                     u6560:
  9765  002F06                     
  9766                           ;Modbus.c: 392:         printf("Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
  9767  002F06  0EAD               	movlw	low STR_22
  9768  002F08  0100               	movlb	0	; () banked
  9769  002F0A  6F7D               	movwf	printf@fmt& (0+255),b
  9770  002F0C  0EFE               	movlw	high STR_22
  9771  002F0E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9772  002F10  C08B  F07F         	movff	PrintModRespon@i,?_printf+2
  9773  002F14  C08C  F080         	movff	PrintModRespon@i+1,?_printf+3
  9774  002F18  90D8               	bcf	status,0,c
  9775  002F1A  358B               	rlcf	PrintModRespon@i& (0+255),w,b
  9776  002F1C  6ED9               	movwf	fsr2l,c
  9777  002F1E  358C               	rlcf	(PrintModRespon@i+1)& (0+255),w,b
  9778  002F20  6EDA               	movwf	fsr2h,c
  9779  002F22  0E41               	movlw	low _MBRespon
  9780  002F24  26D9               	addwf	fsr2l,f,c
  9781  002F26  0E01               	movlw	high _MBRespon
  9782  002F28  22DA               	addwfc	fsr2h,f,c
  9783  002F2A  CFDE F081          	movff	postinc2,?_printf+4
  9784  002F2E  CFDD F082          	movff	postdec2,?_printf+5
  9785  002F32  ECFD  F01D         	call	_printf	;wreg free
  9786  002F36                     l6615:
  9787  002F36  EC9A  F01E         	call	_EUSART2_is_tx_done	;wreg free
  9788  002F3A  0900               	iorlw	0
  9789  002F3C  B4D8               	btfsc	status,2,c
  9790  002F3E  EFA3  F017         	goto	u6571
  9791  002F42  EFA5  F017         	goto	u6570
  9792  002F46                     u6571:
  9793  002F46  EF9B  F017         	goto	l6615
  9794  002F4A                     u6570:
  9795  002F4A                     
  9796                           ;Modbus.c: 394:     }
  9797  002F4A  0100               	movlb	0	; () banked
  9798  002F4C  4B8B               	infsnz	PrintModRespon@i& (0+255),f,b
  9799  002F4E  2B8C               	incf	(PrintModRespon@i+1)& (0+255),f,b
  9800  002F50                     l6619:
  9801                           
  9802                           ; BSR set to: 0
  9803  002F50  51A9               	movf	_MBResCnt& (0+255),w,b
  9804  002F52  5D8B               	subwf	PrintModRespon@i& (0+255),w,b
  9805  002F54  518C               	movf	(PrintModRespon@i+1)& (0+255),w,b
  9806  002F56  0A80               	xorlw	128
  9807  002F58  6E55               	movwf	??_PrintModRespon^0,c
  9808  002F5A  51AA               	movf	(_MBResCnt+1)& (0+255),w,b
  9809  002F5C  0A80               	xorlw	128
  9810  002F5E  5855               	subwfb	??_PrintModRespon^0,w,c
  9811  002F60  A0D8               	btfss	status,0,c
  9812  002F62  EFB5  F017         	goto	u6581
  9813  002F66  EFB7  F017         	goto	u6580
  9814  002F6A                     u6581:
  9815  002F6A  EF79  F017         	goto	l6611
  9816  002F6E                     u6580:
  9817  002F6E                     
  9818                           ; BSR set to: 0
  9819                           ;Modbus.c: 396:     printf("\r\n\n");
  9820  002F6E  0EC0               	movlw	low (STR_37+50)
  9821  002F70  6F7D               	movwf	printf@fmt& (0+255),b
  9822  002F72  0EFB               	movlw	high (STR_37+50)
  9823  002F74  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9824  002F76  ECFD  F01D         	call	_printf	;wreg free
  9825  002F7A  0012               	return		;funcret
  9826  002F7C                     __end_of_PrintModRespon:
  9827                           	opt callstack 0
  9828                           
  9829 ;; *************** function _printf *****************
  9830 ;; Defined at:
  9831 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  9834 ;;		 -> STR_55(29), STR_53(30), STR_52(24), STR_51(25), 
  9835 ;;		 -> STR_50(17), STR_49(27), STR_48(33), STR_46(36), 
  9836 ;;		 -> STR_45(67), STR_44(19), STR_43(29), STR_42(55), 
  9837 ;;		 -> STR_41(17), STR_40(16), STR_39(4), STR_38(34), 
  9838 ;;		 -> STR_37(54), STR_36(52), STR_35(28), STR_32(42), 
  9839 ;;		 -> STR_31(22), STR_30(19), STR_29(61), STR_28(18), 
  9840 ;;		 -> STR_27(24), STR_26(33), STR_25(16), STR_24(24), 
  9841 ;;		 -> STR_23(4), STR_22(22), STR_21(28), STR_20(28), 
  9842 ;;		 -> STR_19(18), STR_18(15), STR_17(15), STR_16(15), 
  9843 ;;		 -> STR_15(13), STR_14(11), STR_13(11), STR_12(14), 
  9844 ;;		 -> STR_11(36), STR_10(4), STR_9(23), STR_8(32), 
  9845 ;;		 -> STR_7(28), STR_6(54), STR_5(24), STR_4(16), 
  9846 ;;		 -> STR_2(28), STR_1(21), 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  ap              2   41[BANK0 ] PTR void [1]
  9849 ;;		 -> ?_printf(2), 
  9850 ;;  ret             2    0        int 
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  2   29[BANK0 ] int 
  9853 ;; Registers used:
  9854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9860 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9863 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9864 ;;Total ram usage:       14 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:   12
  9867 ;; This function calls:
  9868 ;;		_vfprintf
  9869 ;; This function is called by:
  9870 ;;		_main
  9871 ;;		_PrintMB400
  9872 ;;		_AddRxBuffToModBus
  9873 ;;		_PrintModbus
  9874 ;;		_checkCRC
  9875 ;;		_ModbusFC03
  9876 ;;		_PrintModRespon
  9877 ;;		_ModbusRx
  9878 ;;		_InitialiseString
  9879 ;;		_ReadRX232
  9880 ;;		_TogDebug
  9881 ;;		_ClearEEAddRange
  9882 ;;		_SaveCardDat
  9883 ;;		_ValidateCmd
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text53
  9888  003BFA                     __ptext53:
  9889                           	opt callstack 0
  9890  003BFA                     _printf:
  9891                           	opt callstack 18
  9892  003BFA  0E7F               	movlw	low (?_printf+2)
  9893  003BFC  0100               	movlb	0	; () banked
  9894  003BFE  6F89               	movwf	printf@ap& (0+255),b
  9895  003C00  0E00               	movlw	high (?_printf+2)
  9896  003C02  6F8A               	movwf	(printf@ap+1)& (0+255),b
  9897  003C04                     
  9898                           ; BSR set to: 0
  9899  003C04  0E00               	movlw	0
  9900  003C06  6F77               	movwf	vfprintf@fp& (0+255),b
  9901  003C08  0E00               	movlw	0
  9902  003C0A  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
  9903  003C0C  C07D  F079         	movff	printf@fmt,vfprintf@fmt
  9904  003C10  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
  9905  003C14  0E89               	movlw	low printf@ap
  9906  003C16  6F7B               	movwf	vfprintf@ap& (0+255),b
  9907  003C18  0E00               	movlw	high printf@ap
  9908  003C1A  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
  9909  003C1C  EC73  F01A         	call	_vfprintf	;wreg free
  9910  003C20  0012               	return		;funcret
  9911  003C22                     __end_of_printf:
  9912                           	opt callstack 0
  9913                           
  9914 ;; *************** function _vfprintf *****************
  9915 ;; Defined at:
  9916 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  9919 ;;		 -> NULL(0), 
  9920 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  9921 ;;		 -> STR_55(29), STR_53(30), STR_52(24), STR_51(25), 
  9922 ;;		 -> STR_50(17), STR_49(27), STR_48(33), STR_46(36), 
  9923 ;;		 -> STR_45(67), STR_44(19), STR_43(29), STR_42(55), 
  9924 ;;		 -> STR_41(17), STR_40(16), STR_39(4), STR_38(34), 
  9925 ;;		 -> STR_37(54), STR_36(52), STR_35(28), STR_32(42), 
  9926 ;;		 -> STR_31(22), STR_30(19), STR_29(61), STR_28(18), 
  9927 ;;		 -> STR_27(24), STR_26(33), STR_25(16), STR_24(24), 
  9928 ;;		 -> STR_23(4), STR_22(22), STR_21(28), STR_20(28), 
  9929 ;;		 -> STR_19(18), STR_18(15), STR_17(15), STR_16(15), 
  9930 ;;		 -> STR_15(13), STR_14(11), STR_13(11), STR_12(14), 
  9931 ;;		 -> STR_11(36), STR_10(4), STR_9(23), STR_8(32), 
  9932 ;;		 -> STR_7(28), STR_6(54), STR_5(24), STR_4(16), 
  9933 ;;		 -> STR_2(28), STR_1(21), 
  9934 ;;  ap              2   27[BANK0 ] PTR PTR void 
  9935 ;;		 -> printf@ap(2), 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  9938 ;;		 -> STR_55(29), STR_53(30), STR_52(24), STR_51(25), 
  9939 ;;		 -> STR_50(17), STR_49(27), STR_48(33), STR_46(36), 
  9940 ;;		 -> STR_45(67), STR_44(19), STR_43(29), STR_42(55), 
  9941 ;;		 -> STR_41(17), STR_40(16), STR_39(4), STR_38(34), 
  9942 ;;		 -> STR_37(54), STR_36(52), STR_35(28), STR_32(42), 
  9943 ;;		 -> STR_31(22), STR_30(19), STR_29(61), STR_28(18), 
  9944 ;;		 -> STR_27(24), STR_26(33), STR_25(16), STR_24(24), 
  9945 ;;		 -> STR_23(4), STR_22(22), STR_21(28), STR_20(28), 
  9946 ;;		 -> STR_19(18), STR_18(15), STR_17(15), STR_16(15), 
  9947 ;;		 -> STR_15(13), STR_14(11), STR_13(11), STR_12(14), 
  9948 ;;		 -> STR_11(36), STR_10(4), STR_9(23), STR_8(32), 
  9949 ;;		 -> STR_7(28), STR_6(54), STR_5(24), STR_4(16), 
  9950 ;;		 -> STR_2(28), STR_1(21), 
  9951 ;; Return value:  Size  Location     Type
  9952 ;;                  2   23[BANK0 ] int 
  9953 ;; Registers used:
  9954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9955 ;; Tracked objects:
  9956 ;;		On entry : 0/0
  9957 ;;		On exit  : 0/0
  9958 ;;		Unchanged: 0/0
  9959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9960 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9963 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;Total ram usage:        8 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; Hardware stack levels required when called:   11
  9967 ;; This function calls:
  9968 ;;		_vfpfcnvrt
  9969 ;; This function is called by:
  9970 ;;		_printf
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           	psect	text54
  9975  0034E6                     __ptext54:
  9976                           	opt callstack 0
  9977  0034E6                     _vfprintf:
  9978                           	opt callstack 18
  9979  0034E6                     
  9980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9981  0034E6  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  9982  0034EA  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9983  0034EE                     
  9984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9985  0034EE  0E00               	movlw	0
  9986  0034F0  0101               	movlb	1	; () banked
  9987  0034F2  6FB2               	movwf	(_nout+1)& (0+255),b
  9988  0034F4  0E00               	movlw	0
  9989  0034F6  6FB1               	movwf	_nout& (0+255),b
  9990                           
  9991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9992  0034F8  EF91  F01A         	goto	l6387
  9993  0034FC                     l6385:
  9994                           
  9995                           ; BSR set to: 1
  9996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9997  0034FC  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  9998  003500  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9999  003504  0E53               	movlw	low vfprintf@cfmt
 10000  003506  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 10001  003508  0E00               	movlw	high vfprintf@cfmt
 10002  00350A  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 10003  00350C  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 10004  003510  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10005  003514  EC95  F000         	call	_vfpfcnvrt	;wreg free
 10006  003518  5049               	movf	?_vfpfcnvrt^0,w,c
 10007  00351A  0101               	movlb	1	; () banked
 10008  00351C  27B1               	addwf	_nout& (0+255),f,b
 10009  00351E  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 10010  003520  23B2               	addwfc	(_nout+1)& (0+255),f,b
 10011  003522                     l6387:
 10012                           
 10013                           ; BSR set to: 1
 10014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10015  003522  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 10016  003526  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10017  00352A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10018  00352A  6AF8               	clrf	tblptru,c
 10019  00352C                     	endif
 10020  00352C                     	if	0	;tblptru may be non-zero
 10021  00352C                     	endif
 10022  00352C  0008               	tblrd		*
 10023  00352E  50F5               	movf	tablat,w,c
 10024  003530  0900               	iorlw	0
 10025  003532  A4D8               	btfss	status,2,c
 10026  003534  EF9E  F01A         	goto	u6321
 10027  003538  EFA0  F01A         	goto	u6320
 10028  00353C                     u6321:
 10029  00353C  EF7E  F01A         	goto	l6385
 10030  003540                     u6320:
 10031  003540                     
 10032                           ; BSR set to: 1
 10033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10034  003540  C1B1  F077         	movff	_nout,?_vfprintf
 10035  003544  C1B2  F078         	movff	_nout+1,?_vfprintf+1
 10036  003548                     
 10037                           ; BSR set to: 1
 10038  003548  0012               	return		;funcret
 10039  00354A                     __end_of_vfprintf:
 10040                           	opt callstack 0
 10041                           
 10042 ;; *************** function _vfpfcnvrt *****************
 10043 ;; Defined at:
 10044 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 10047 ;;		 -> NULL(0), 
 10048 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 10049 ;;		 -> vfprintf@cfmt(2), 
 10050 ;;  ap              2   76[COMRAM] PTR PTR void 
 10051 ;;		 -> printf@ap(2), 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;  llu             8   15[BANK0 ] unsigned long long 
 10054 ;;  ll              8    0[BANK0 ] long long 
 10055 ;;  f               4    0        long long 
 10056 ;;  vp              3    0        PTR void 
 10057 ;;  ct              3    0        unsigned char [3]
 10058 ;;  done            2   11[BANK0 ] int 
 10059 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 10060 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), 
 10061 ;;		 -> STR_34(9), STR_33(12), InitialiseString@SerialNum(11), Command(16), 
 10062 ;;  i               2    0        int 
 10063 ;;  c               1   10[BANK0 ] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  2   72[COMRAM] int 
 10066 ;; Registers used:
 10067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10073 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10074 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10075 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10076 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10077 ;;Total ram usage:       33 bytes
 10078 ;; Hardware stack levels used:    1
 10079 ;; Hardware stack levels required when called:   10
 10080 ;; This function calls:
 10081 ;;		_atoi
 10082 ;;		_dtoa
 10083 ;;		_fputc
 10084 ;;		_isdigit
 10085 ;;		_stoa
 10086 ;;		_utoa
 10087 ;;		_xtoa
 10088 ;; This function is called by:
 10089 ;;		_vfprintf
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           	psect	text55
 10094  00012A                     __ptext55:
 10095                           	opt callstack 0
 10096  00012A                     _vfpfcnvrt:
 10097                           	opt callstack 18
 10098  00012A                     
 10099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10100  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10101  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10102  000132  CFDE FFF6          	movff	postinc2,tblptrl
 10103  000136  CFDD FFF7          	movff	postdec2,tblptrh
 10104  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10105  00013A  6AF8               	clrf	tblptru,c
 10106  00013C                     	endif
 10107  00013C                     	if	0	;tblptru may be non-zero
 10108  00013C                     	endif
 10109  00013C  0008               	tblrd		*
 10110  00013E  50F5               	movf	tablat,w,c
 10111  000140  0A25               	xorlw	37
 10112  000142  A4D8               	btfss	status,2,c
 10113  000144  EFA6  F000         	goto	u6151
 10114  000148  EFA8  F000         	goto	u6150
 10115  00014C                     u6151:
 10116  00014C  EF3D  F003         	goto	l6359
 10117  000150                     u6150:
 10118  000150                     
 10119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10120  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10121  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10122  000158  2ADE               	incf	postinc2,f,c
 10123  00015A  0E00               	movlw	0
 10124  00015C  22DD               	addwfc	postdec2,f,c
 10125  00015E                     
 10126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10127  00015E  0E00               	movlw	0
 10128  000160  0100               	movlb	0	; () banked
 10129  000162  6FA4               	movwf	(_width+1)& (0+255),b
 10130  000164  0E00               	movlw	0
 10131  000166  6FA3               	movwf	_width& (0+255),b
 10132  000168  C0A3  F057         	movff	_width,_flags
 10133  00016C  C0A4  F058         	movff	_width+1,_flags+1
 10134  000170                     
 10135                           ; BSR set to: 0
 10136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10137  000170  69A5               	setf	_prec& (0+255),b
 10138  000172  69A6               	setf	(_prec+1)& (0+255),b
 10139  000174                     
 10140                           ; BSR set to: 0
 10141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10142  000174  0E00               	movlw	0
 10143  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10144  000178  0E00               	movlw	0
 10145  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 10146                           
 10147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10148  00017C  EF07  F001         	goto	l6281
 10149  000180                     l6255:
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10153  000180  8057               	bsf	_flags^0,0,c
 10154  000182                     l6257:
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10158  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10159  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10160  00018A  2ADE               	incf	postinc2,f,c
 10161  00018C  0E00               	movlw	0
 10162  00018E  22DD               	addwfc	postdec2,f,c
 10163                           
 10164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10165  000190  EF07  F001         	goto	l6281
 10166  000194                     l6259:
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10170  000194  8257               	bsf	_flags^0,1,c
 10171  000196  EFC1  F000         	goto	l6257
 10172  00019A                     l6263:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10176  00019A  8457               	bsf	_flags^0,2,c
 10177  00019C  EFC1  F000         	goto	l6257
 10178  0001A0                     l6267:
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10182  0001A0  8657               	bsf	_flags^0,3,c
 10183  0001A2  EFC1  F000         	goto	l6257
 10184  0001A6                     l6271:
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10188  0001A6  8857               	bsf	_flags^0,4,c
 10189  0001A8  EFC1  F000         	goto	l6257
 10190  0001AC                     l6275:
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10194  0001AC  0E00               	movlw	0
 10195  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10196  0001B0  0E01               	movlw	1
 10197  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 10198                           
 10199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10200  0001B4  EF07  F001         	goto	l6281
 10201  0001B8                     l6279:
 10202                           
 10203                           ; BSR set to: 0
 10204  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10205  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10206  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
 10207  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
 10208  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10209  0001C8  6AF8               	clrf	tblptru,c
 10210  0001CA                     	endif
 10211  0001CA                     	if	0	;tblptru may be non-zero
 10212  0001CA                     	endif
 10213  0001CA  0008               	tblrd		*
 10214  0001CC  50F5               	movf	tablat,w,c
 10215  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
 10216  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 10217                           
 10218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10219                           ; Switch size 1, requested type "simple"
 10220                           ; Number of cases is 1, Range of values is 0 to 0
 10221                           ; switch strategies available:
 10222                           ; Name         Instructions Cycles
 10223                           ; simple_byte            4     3 (average)
 10224                           ;	Chosen strategy is simple_byte
 10225  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 10226  0001D4  0A00               	xorlw	0	; case 0
 10227  0001D6  B4D8               	btfsc	status,2,c
 10228  0001D8  EFF0  F000         	goto	l7259
 10229  0001DC  EFD6  F000         	goto	l6275
 10230  0001E0                     l7259:
 10231                           
 10232                           ; BSR set to: 0
 10233                           ; Switch size 1, requested type "simple"
 10234                           ; Number of cases is 5, Range of values is 32 to 48
 10235                           ; switch strategies available:
 10236                           ; Name         Instructions Cycles
 10237                           ; simple_byte           16     9 (average)
 10238                           ;	Chosen strategy is simple_byte
 10239  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
 10240  0001E2  0A20               	xorlw	32	; case 32
 10241  0001E4  B4D8               	btfsc	status,2,c
 10242  0001E6  EFD0  F000         	goto	l6267
 10243  0001EA  0A03               	xorlw	3	; case 35
 10244  0001EC  B4D8               	btfsc	status,2,c
 10245  0001EE  EFD3  F000         	goto	l6271
 10246  0001F2  0A08               	xorlw	8	; case 43
 10247  0001F4  B4D8               	btfsc	status,2,c
 10248  0001F6  EFCD  F000         	goto	l6263
 10249  0001FA  0A06               	xorlw	6	; case 45
 10250  0001FC  B4D8               	btfsc	status,2,c
 10251  0001FE  EFC0  F000         	goto	l6255
 10252  000202  0A1D               	xorlw	29	; case 48
 10253  000204  B4D8               	btfsc	status,2,c
 10254  000206  EFCA  F000         	goto	l6259
 10255  00020A  EFD6  F000         	goto	l6275
 10256  00020E                     l6281:
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10260  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 10261  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10262  000212  B4D8               	btfsc	status,2,c
 10263  000214  EF0E  F001         	goto	u6161
 10264  000218  EF10  F001         	goto	u6160
 10265  00021C                     u6161:
 10266  00021C  EFDC  F000         	goto	l6279
 10267  000220                     u6160:
 10268  000220                     
 10269                           ; BSR set to: 0
 10270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 10271  000220  A057               	btfss	_flags^0,0,c
 10272  000222  EF15  F001         	goto	u6171
 10273  000226  EF17  F001         	goto	u6170
 10274  00022A                     u6171:
 10275  00022A  EF18  F001         	goto	l6285
 10276  00022E                     u6170:
 10277  00022E                     
 10278                           ; BSR set to: 0
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 10280  00022E  9257               	bcf	_flags^0,1,c
 10281  000230                     l6285:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 10285  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10286  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10287  000238  CFDE FFF6          	movff	postinc2,tblptrl
 10288  00023C  CFDD FFF7          	movff	postdec2,tblptrh
 10289  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10290  000240  6AF8               	clrf	tblptru,c
 10291  000242                     	endif
 10292  000242                     	if	0	;tblptru may be non-zero
 10293  000242                     	endif
 10294  000242  0008               	tblrd		*
 10295  000244  50F5               	movf	tablat,w,c
 10296  000246  0A2A               	xorlw	42
 10297  000248  A4D8               	btfss	status,2,c
 10298  00024A  EF29  F001         	goto	u6181
 10299  00024E  EF2B  F001         	goto	u6180
 10300  000252                     u6181:
 10301  000252  EF54  F001         	goto	l6293
 10302  000256                     u6180:
 10303  000256                     
 10304                           ; BSR set to: 0
 10305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 10306  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10307  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10308  00025E  2ADE               	incf	postinc2,f,c
 10309  000260  0E00               	movlw	0
 10310  000262  22DD               	addwfc	postdec2,f,c
 10311                           
 10312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10313  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10314  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10315  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10316  000270  0E02               	movlw	2
 10317  000272  26DE               	addwf	postinc2,f,c
 10318  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10319  000278  0E00               	movlw	0
 10320  00027A  22DD               	addwfc	postdec2,f,c
 10321  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10322  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10323  000284  CFDE F0A3          	movff	postinc2,_width
 10324  000288  CFDD F0A4          	movff	postdec2,_width+1
 10325  00028C                     
 10326                           ; BSR set to: 0
 10327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 10328  00028C  BFA4               	btfsc	(_width+1)& (0+255),7,b
 10329  00028E  EF4D  F001         	goto	u6190
 10330  000292  EF4B  F001         	goto	u6191
 10331  000296                     u6191:
 10332  000296  EF99  F001         	goto	l6303
 10333  00029A                     u6190:
 10334  00029A                     
 10335                           ; BSR set to: 0
 10336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 10337  00029A  8057               	bsf	_flags^0,0,c
 10338                           
 10339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 10340  00029C  6DA3               	negf	_width& (0+255),b
 10341  00029E  1FA4               	comf	(_width+1)& (0+255),f,b
 10342  0002A0  B0D8               	btfsc	status,0,c
 10343  0002A2  2BA4               	incf	(_width+1)& (0+255),f,b
 10344  0002A4  EF99  F001         	goto	l6303
 10345  0002A8                     l6293:
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 10349  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10350  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10351  0002B0  CFDE F00C          	movff	postinc2,atoi@s
 10352  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
 10353  0002B8  EC43  F00E         	call	_atoi	;wreg free
 10354  0002BC  C00C  F0A3         	movff	?_atoi,_width
 10355  0002C0  C00D  F0A4         	movff	?_atoi+1,_width+1
 10356                           
 10357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10358  0002C4  EF6B  F001         	goto	l6297
 10359  0002C8                     l6295:
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 10363  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10364  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10365  0002D0  2ADE               	incf	postinc2,f,c
 10366  0002D2  0E00               	movlw	0
 10367  0002D4  22DD               	addwfc	postdec2,f,c
 10368  0002D6                     l6297:
 10369  0002D6  0ED0               	movlw	208
 10370  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
 10371  0002DA  0EFF               	movlw	255
 10372  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 10373  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10374  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10375  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
 10376  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
 10377  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10378  0002EE  6AF8               	clrf	tblptru,c
 10379  0002F0                     	endif
 10380  0002F0                     	if	0	;tblptru may be non-zero
 10381  0002F0                     	endif
 10382  0002F0  0008               	tblrd		*
 10383  0002F2  50F5               	movf	tablat,w,c
 10384  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 10385  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 10386  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
 10387  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 10388  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 10389  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 10390  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 10391  000302  E10A               	bnz	u6200
 10392  000304  0E0A               	movlw	10
 10393  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 10394  000308  A0D8               	btfss	status,0,c
 10395  00030A  EF89  F001         	goto	u6201
 10396  00030E  EF8C  F001         	goto	u6200
 10397  000312                     u6201:
 10398  000312  0E01               	movlw	1
 10399  000314  EF8D  F001         	goto	u6210
 10400  000318                     u6200:
 10401  000318  0E00               	movlw	0
 10402  00031A                     u6210:
 10403  00031A  0100               	movlb	0	; () banked
 10404  00031C  6F6D               	movwf	_vfpfcnvrt$1572& (0+255),b
 10405  00031E  6B6E               	clrf	(_vfpfcnvrt$1572+1)& (0+255),b
 10406  000320                     
 10407                           ; BSR set to: 0
 10408  000320  516D               	movf	_vfpfcnvrt$1572& (0+255),w,b
 10409  000322  116E               	iorwf	(_vfpfcnvrt$1572+1)& (0+255),w,b
 10410  000324  A4D8               	btfss	status,2,c
 10411  000326  EF97  F001         	goto	u6221
 10412  00032A  EF99  F001         	goto	u6220
 10413  00032E                     u6221:
 10414  00032E  EF64  F001         	goto	l6295
 10415  000332                     u6220:
 10416  000332                     l6303:
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10420  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10421  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10422  00033A  CFDE FFF6          	movff	postinc2,tblptrl
 10423  00033E  CFDD FFF7          	movff	postdec2,tblptrh
 10424  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10425  000342  6AF8               	clrf	tblptru,c
 10426  000344                     	endif
 10427  000344                     	if	0	;tblptru may be non-zero
 10428  000344                     	endif
 10429  000344  0008               	tblrd		*
 10430  000346  50F5               	movf	tablat,w,c
 10431  000348  0A64               	xorlw	100
 10432  00034A  B4D8               	btfsc	status,2,c
 10433  00034C  EFAA  F001         	goto	u6231
 10434  000350  EFAC  F001         	goto	u6230
 10435  000354                     u6231:
 10436  000354  EFBF  F001         	goto	l6307
 10437  000358                     u6230:
 10438  000358                     
 10439                           ; BSR set to: 0
 10440  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10441  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10442  000360  CFDE FFF6          	movff	postinc2,tblptrl
 10443  000364  CFDD FFF7          	movff	postdec2,tblptrh
 10444  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10445  000368  6AF8               	clrf	tblptru,c
 10446  00036A                     	endif
 10447  00036A                     	if	0	;tblptru may be non-zero
 10448  00036A                     	endif
 10449  00036A  0008               	tblrd		*
 10450  00036C  50F5               	movf	tablat,w,c
 10451  00036E  0A69               	xorlw	105
 10452  000370  A4D8               	btfss	status,2,c
 10453  000372  EFBD  F001         	goto	u6241
 10454  000376  EFBF  F001         	goto	u6240
 10455  00037A                     u6241:
 10456  00037A  EFFF  F001         	goto	l6313
 10457  00037E                     u6240:
 10458  00037E                     l6307:
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 10462  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10463  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10464  000386  2ADE               	incf	postinc2,f,c
 10465  000388  0E00               	movlw	0
 10466  00038A  22DD               	addwfc	postdec2,f,c
 10467                           
 10468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10469  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10470  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10471  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10472  000398  0E02               	movlw	2
 10473  00039A  26DE               	addwf	postinc2,f,c
 10474  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10475  0003A0  0E00               	movlw	0
 10476  0003A2  22DD               	addwfc	postdec2,f,c
 10477  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10478  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10479  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 10480  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 10481  0003B4  0E00               	movlw	0
 10482  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10483  0003B8  0EFF               	movlw	-1
 10484  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10485  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10486  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10487  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10488  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10489  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10490  0003C6                     
 10491                           ; BSR set to: 0
 10492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 10493  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 10494  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10495  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 10496  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10497  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10498  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10499  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10500  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10501  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10502  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10503  0003EE  EC84  F005         	call	_dtoa	;wreg free
 10504  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 10505  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10506  0003FA  EF59  F003         	goto	l1114
 10507  0003FE                     l6313:
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 10511  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10512  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10513  000406  CFDE FFF6          	movff	postinc2,tblptrl
 10514  00040A  CFDD FFF7          	movff	postdec2,tblptrh
 10515  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10516  00040E  6AF8               	clrf	tblptru,c
 10517  000410                     	endif
 10518  000410                     	if	0	;tblptru may be non-zero
 10519  000410                     	endif
 10520  000410  0008               	tblrd		*
 10521  000412  50F5               	movf	tablat,w,c
 10522  000414  0A73               	xorlw	115
 10523  000416  A4D8               	btfss	status,2,c
 10524  000418  EF10  F002         	goto	u6251
 10525  00041C  EF12  F002         	goto	u6250
 10526  000420                     u6251:
 10527  000420  EF3D  F002         	goto	l6321
 10528  000424                     u6250:
 10529  000424                     
 10530                           ; BSR set to: 0
 10531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 10532  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10533  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10534  00042C  2ADE               	incf	postinc2,f,c
 10535  00042E  0E00               	movlw	0
 10536  000430  22DD               	addwfc	postdec2,f,c
 10537                           
 10538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 10539  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10540  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10541  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10542  00043E  0E02               	movlw	2
 10543  000440  26DE               	addwf	postinc2,f,c
 10544  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10545  000446  0E00               	movlw	0
 10546  000448  22DD               	addwfc	postdec2,f,c
 10547  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10548  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10549  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 10550  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 10551  00045A                     
 10552                           ; BSR set to: 0
 10553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 10554  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 10555  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 10556  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 10557  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 10558  00046A  EC76  F00D         	call	_stoa	;wreg free
 10559  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 10560  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 10561  000476  EF59  F003         	goto	l1114
 10562  00047A                     l6321:
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 10566  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10567  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10568  000482  CFDE FFF6          	movff	postinc2,tblptrl
 10569  000486  CFDD FFF7          	movff	postdec2,tblptrh
 10570  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10571  00048A  6AF8               	clrf	tblptru,c
 10572  00048C                     	endif
 10573  00048C                     	if	0	;tblptru may be non-zero
 10574  00048C                     	endif
 10575  00048C  0008               	tblrd		*
 10576  00048E  50F5               	movf	tablat,w,c
 10577  000490  0A75               	xorlw	117
 10578  000492  A4D8               	btfss	status,2,c
 10579  000494  EF4E  F002         	goto	u6261
 10580  000498  EF50  F002         	goto	u6260
 10581  00049C                     u6261:
 10582  00049C  EF91  F002         	goto	l6329
 10583  0004A0                     u6260:
 10584  0004A0                     
 10585                           ; BSR set to: 0
 10586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 10587  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10588  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10589  0004A8  2ADE               	incf	postinc2,f,c
 10590  0004AA  0E00               	movlw	0
 10591  0004AC  22DD               	addwfc	postdec2,f,c
 10592                           
 10593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10594  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10595  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10596  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10597  0004BA  0E02               	movlw	2
 10598  0004BC  26DE               	addwf	postinc2,f,c
 10599  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10600  0004C2  0E00               	movlw	0
 10601  0004C4  22DD               	addwfc	postdec2,f,c
 10602  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10603  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10604  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 10605  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 10606  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10607  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10608  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10609  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10610  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10611  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10612  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10613  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10614  0004EA                     
 10615                           ; BSR set to: 0
 10616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 10617  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 10618  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10619  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 10620  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10621  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10622  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10623  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10624  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10625  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10626  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10627  000512  ECCE  F00A         	call	_utoa	;wreg free
 10628  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 10629  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 10630  00051E  EF59  F003         	goto	l1114
 10631  000522                     l6329:
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10635  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10636  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10637  00052A  CFDE FFF6          	movff	postinc2,tblptrl
 10638  00052E  CFDD FFF7          	movff	postdec2,tblptrh
 10639  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10640  000532  6AF8               	clrf	tblptru,c
 10641  000534                     	endif
 10642  000534                     	if	0	;tblptru may be non-zero
 10643  000534                     	endif
 10644  000534  0008               	tblrd		*
 10645  000536  50F5               	movf	tablat,w,c
 10646  000538  0A78               	xorlw	120
 10647  00053A  B4D8               	btfsc	status,2,c
 10648  00053C  EFA2  F002         	goto	u6271
 10649  000540  EFA4  F002         	goto	u6270
 10650  000544                     u6271:
 10651  000544  EFB7  F002         	goto	l6333
 10652  000548                     u6270:
 10653  000548                     
 10654                           ; BSR set to: 0
 10655  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10656  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10657  000550  CFDE FFF6          	movff	postinc2,tblptrl
 10658  000554  CFDD FFF7          	movff	postdec2,tblptrh
 10659  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10660  000558  6AF8               	clrf	tblptru,c
 10661  00055A                     	endif
 10662  00055A                     	if	0	;tblptru may be non-zero
 10663  00055A                     	endif
 10664  00055A  0008               	tblrd		*
 10665  00055C  50F5               	movf	tablat,w,c
 10666  00055E  0A58               	xorlw	88
 10667  000560  A4D8               	btfss	status,2,c
 10668  000562  EFB5  F002         	goto	u6281
 10669  000566  EFB7  F002         	goto	u6280
 10670  00056A                     u6281:
 10671  00056A  EF06  F003         	goto	l6343
 10672  00056E                     u6280:
 10673  00056E                     l6333:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 10677  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10678  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10679  000576  CFDE FFF6          	movff	postinc2,tblptrl
 10680  00057A  CFDD FFF7          	movff	postdec2,tblptrh
 10681  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10682  00057E  6AF8               	clrf	tblptru,c
 10683  000580                     	endif
 10684  000580                     	if	0	;tblptru may be non-zero
 10685  000580                     	endif
 10686  000580  0008               	tblrd		*
 10687  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 10688  000586                     
 10689                           ; BSR set to: 0
 10690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 10691  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10692  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10693  00058E  2ADE               	incf	postinc2,f,c
 10694  000590  0E00               	movlw	0
 10695  000592  22DD               	addwfc	postdec2,f,c
 10696  000594                     
 10697                           ; BSR set to: 0
 10698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10699  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10700  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10701  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10702  0005A0  0E02               	movlw	2
 10703  0005A2  26DE               	addwf	postinc2,f,c
 10704  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10705  0005A8  0E00               	movlw	0
 10706  0005AA  22DD               	addwfc	postdec2,f,c
 10707  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10708  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10709  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 10710  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 10711  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10712  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10713  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10714  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10715  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10716  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10717  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10718  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10719  0005D0                     
 10720                           ; BSR set to: 0
 10721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 10722  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 10723  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10724  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 10725  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10726  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10727  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10728  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10729  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10730  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10731  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10732  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 10733  0005FC  ECF4  F006         	call	_xtoa	;wreg free
 10734  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 10735  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10736  000608  EF59  F003         	goto	l1114
 10737  00060C                     l6343:
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10741  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10742  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10743  000614  CFDE FFF6          	movff	postinc2,tblptrl
 10744  000618  CFDD FFF7          	movff	postdec2,tblptrh
 10745  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10746  00061C  6AF8               	clrf	tblptru,c
 10747  00061E                     	endif
 10748  00061E                     	if	0	;tblptru may be non-zero
 10749  00061E                     	endif
 10750  00061E  0008               	tblrd		*
 10751  000620  50F5               	movf	tablat,w,c
 10752  000622  0A25               	xorlw	37
 10753  000624  A4D8               	btfss	status,2,c
 10754  000626  EF17  F003         	goto	u6291
 10755  00062A  EF19  F003         	goto	u6290
 10756  00062E                     u6291:
 10757  00062E  EF30  F003         	goto	l6353
 10758  000632                     u6290:
 10759  000632                     
 10760                           ; BSR set to: 0
 10761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10762  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10763  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10764  00063A  2ADE               	incf	postinc2,f,c
 10765  00063C  0E00               	movlw	0
 10766  00063E  22DD               	addwfc	postdec2,f,c
 10767  000640                     
 10768                           ; BSR set to: 0
 10769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10770  000640  0E00               	movlw	0
 10771  000642  6E08               	movwf	(fputc@c+1)^0,c
 10772  000644  0E25               	movlw	37
 10773  000646  6E07               	movwf	fputc@c^0,c
 10774  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 10775  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10776  000650  ECBE  F017         	call	_fputc	;wreg free
 10777  000654                     l6349:
 10778                           
 10779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10780  000654  0E00               	movlw	0
 10781  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 10782  000658  0E01               	movlw	1
 10783  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
 10784  00065C  EF59  F003         	goto	l1114
 10785  000660                     l6353:
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10789  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10790  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10791  000668  2ADE               	incf	postinc2,f,c
 10792  00066A  0E00               	movlw	0
 10793  00066C  22DD               	addwfc	postdec2,f,c
 10794  00066E                     
 10795                           ; BSR set to: 0
 10796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10797  00066E  0E00               	movlw	0
 10798  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 10799  000672  0E00               	movlw	0
 10800  000674  6E49               	movwf	?_vfpfcnvrt^0,c
 10801  000676  EF59  F003         	goto	l1114
 10802  00067A                     l6359:
 10803                           
 10804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10805  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10806  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10807  000682  CFDE FFF6          	movff	postinc2,tblptrl
 10808  000686  CFDD FFF7          	movff	postdec2,tblptrh
 10809  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10810  00068A  6AF8               	clrf	tblptru,c
 10811  00068C                     	endif
 10812  00068C                     	if	0	;tblptru may be non-zero
 10813  00068C                     	endif
 10814  00068C  0008               	tblrd		*
 10815  00068E  50F5               	movf	tablat,w,c
 10816  000690  6E07               	movwf	fputc@c^0,c
 10817  000692  6A08               	clrf	(fputc@c+1)^0,c
 10818  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 10819  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10820  00069C  ECBE  F017         	call	_fputc	;wreg free
 10821  0006A0                     
 10822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10823  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10824  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10825  0006A8  2ADE               	incf	postinc2,f,c
 10826  0006AA  0E00               	movlw	0
 10827  0006AC  22DD               	addwfc	postdec2,f,c
 10828  0006AE  EF2A  F003         	goto	l6349
 10829  0006B2                     l1114:
 10830  0006B2  0012               	return		;funcret
 10831  0006B4                     __end_of_vfpfcnvrt:
 10832                           	opt callstack 0
 10833                           
 10834 ;; *************** function _xtoa *****************
 10835 ;; Defined at:
 10836 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 10839 ;;		 -> NULL(0), 
 10840 ;;  d               8   35[COMRAM] unsigned long long 
 10841 ;;  x               1   43[COMRAM] unsigned char 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  n               8   60[COMRAM] unsigned long long 
 10844 ;;  c               2   70[COMRAM] int 
 10845 ;;  i               2   68[COMRAM] int 
 10846 ;;  w               2   58[COMRAM] int 
 10847 ;;  p               2   56[COMRAM] int 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  2   33[COMRAM] int 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10857 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10858 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10859 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10860 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10861 ;;Total ram usage:       39 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    9
 10864 ;; This function calls:
 10865 ;;		_isalpha
 10866 ;;		_isupper
 10867 ;;		_pad
 10868 ;;		_toupper
 10869 ;; This function is called by:
 10870 ;;		_vfpfcnvrt
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text56
 10875  000DE8                     __ptext56:
 10876                           	opt callstack 0
 10877  000DE8                     _xtoa:
 10878                           	opt callstack 18
 10879  000DE8                     
 10880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10881  000DE8  0100               	movlb	0	; () banked
 10882  000DEA  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10883  000DEC  EFFA  F006         	goto	u5911
 10884  000DF0  EFFC  F006         	goto	u5910
 10885  000DF4                     u5911:
 10886  000DF4  EFFD  F006         	goto	l6141
 10887  000DF8                     u5910:
 10888  000DF8                     
 10889                           ; BSR set to: 0
 10890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10891  000DF8  9257               	bcf	_flags^0,1,c
 10892  000DFA                     l6141:
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10896  000DFA  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10897  000DFC  EF0A  F007         	goto	u5920
 10898  000E00  51A6               	movf	(_prec+1)& (0+255),w,b
 10899  000E02  E106               	bnz	u5921
 10900  000E04  05A5               	decf	_prec& (0+255),w,b
 10901  000E06  B0D8               	btfsc	status,0,c
 10902  000E08  EF08  F007         	goto	u5921
 10903  000E0C  EF0A  F007         	goto	u5920
 10904  000E10                     u5921:
 10905  000E10  EF10  F007         	goto	l1060
 10906  000E14                     u5920:
 10907  000E14                     
 10908                           ; BSR set to: 0
 10909  000E14  0E00               	movlw	0
 10910  000E16  6E3A               	movwf	(xtoa@p+1)^0,c
 10911  000E18  0E01               	movlw	1
 10912  000E1A  6E39               	movwf	xtoa@p^0,c
 10913  000E1C  EF14  F007         	goto	l1062
 10914  000E20                     l1060:
 10915                           
 10916                           ; BSR set to: 0
 10917  000E20  C0A5  F039         	movff	_prec,xtoa@p
 10918  000E24  C0A6  F03A         	movff	_prec+1,xtoa@p+1
 10919  000E28                     l1062:
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 10923  000E28  C0A3  F03B         	movff	_width,xtoa@w
 10924  000E2C  C0A4  F03C         	movff	_width+1,xtoa@w+1
 10925                           
 10926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 10927  000E30  A857               	btfss	_flags^0,4,c
 10928  000E32  EF1D  F007         	goto	u5931
 10929  000E36  EF1F  F007         	goto	u5930
 10930  000E3A                     u5931:
 10931  000E3A  EF23  F007         	goto	l6147
 10932  000E3E                     u5930:
 10933  000E3E                     
 10934                           ; BSR set to: 0
 10935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 10936  000E3E  0EFE               	movlw	254
 10937  000E40  263B               	addwf	xtoa@w^0,f,c
 10938  000E42  0EFF               	movlw	255
 10939  000E44  223C               	addwfc	(xtoa@w+1)^0,f,c
 10940  000E46                     l6147:
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 10944  000E46  C024  F03D         	movff	xtoa@d,xtoa@n
 10945  000E4A  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 10946  000E4E  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 10947  000E52  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 10948  000E56  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 10949  000E5A  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 10950  000E5E  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 10951  000E62  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 10952  000E66                     
 10953                           ; BSR set to: 0
 10954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 10955  000E66  0E00               	movlw	0
 10956  000E68  6E46               	movwf	(xtoa@i+1)^0,c
 10957  000E6A  0E1F               	movlw	31
 10958  000E6C  6E45               	movwf	xtoa@i^0,c
 10959  000E6E                     
 10960                           ; BSR set to: 0
 10961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 10962  000E6E  0E00               	movlw	0
 10963  000E70  0101               	movlb	1	; () banked
 10964  000E72  6FD3               	movwf	(_dbuf+31)& (0+255),b
 10965                           
 10966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10967  000E74  EFEF  F007         	goto	l6183
 10968  000E78                     l6153:
 10969                           
 10970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 10971  000E78  0645               	decf	xtoa@i^0,f,c
 10972  000E7A  A0D8               	btfss	status,0,c
 10973  000E7C  0646               	decf	(xtoa@i+1)^0,f,c
 10974  000E7E                     
 10975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 10976  000E7E  0E0F               	movlw	15
 10977  000E80  143D               	andwf	xtoa@n^0,w,c
 10978  000E82  6E47               	movwf	xtoa@c^0,c
 10979  000E84  6A48               	clrf	(xtoa@c+1)^0,c
 10980  000E86                     
 10981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10982  000E86  BE48               	btfsc	(xtoa@c+1)^0,7,c
 10983  000E88  EF4F  F007         	goto	u5941
 10984  000E8C  5048               	movf	(xtoa@c+1)^0,w,c
 10985  000E8E  E109               	bnz	u5940
 10986  000E90  0E0A               	movlw	10
 10987  000E92  5C47               	subwf	xtoa@c^0,w,c
 10988  000E94  A0D8               	btfss	status,0,c
 10989  000E96  EF4F  F007         	goto	u5941
 10990  000E9A  EF51  F007         	goto	u5940
 10991  000E9E                     u5941:
 10992  000E9E  EF59  F007         	goto	l6161
 10993  000EA2                     u5940:
 10994  000EA2  0E57               	movlw	87
 10995  000EA4  2447               	addwf	xtoa@c^0,w,c
 10996  000EA6  6E47               	movwf	xtoa@c^0,c
 10997  000EA8  0E00               	movlw	0
 10998  000EAA  2048               	addwfc	(xtoa@c+1)^0,w,c
 10999  000EAC  6E48               	movwf	(xtoa@c+1)^0,c
 11000  000EAE  EF5F  F007         	goto	l1069
 11001  000EB2                     l6161:
 11002  000EB2  0E30               	movlw	48
 11003  000EB4  2447               	addwf	xtoa@c^0,w,c
 11004  000EB6  6E47               	movwf	xtoa@c^0,c
 11005  000EB8  0E00               	movlw	0
 11006  000EBA  2048               	addwfc	(xtoa@c+1)^0,w,c
 11007  000EBC  6E48               	movwf	(xtoa@c+1)^0,c
 11008  000EBE                     l1069:
 11009  000EBE  0EBF               	movlw	191
 11010  000EC0  6E2D               	movwf	??_xtoa^0,c
 11011  000EC2  0EFF               	movlw	255
 11012  000EC4  6E2E               	movwf	(??_xtoa+1)^0,c
 11013  000EC6  502C               	movf	xtoa@x^0,w,c
 11014  000EC8  6E2F               	movwf	(??_xtoa+2)^0,c
 11015  000ECA  6A30               	clrf	(??_xtoa+3)^0,c
 11016  000ECC  502D               	movf	??_xtoa^0,w,c
 11017  000ECE  262F               	addwf	(??_xtoa+2)^0,f,c
 11018  000ED0  502E               	movf	(??_xtoa+1)^0,w,c
 11019  000ED2  2230               	addwfc	(??_xtoa+3)^0,f,c
 11020  000ED4  5030               	movf	(??_xtoa+3)^0,w,c
 11021  000ED6  E10A               	bnz	u5950
 11022  000ED8  0E1A               	movlw	26
 11023  000EDA  5C2F               	subwf	(??_xtoa+2)^0,w,c
 11024  000EDC  A0D8               	btfss	status,0,c
 11025  000EDE  EF73  F007         	goto	u5951
 11026  000EE2  EF76  F007         	goto	u5950
 11027  000EE6                     u5951:
 11028  000EE6  0E01               	movlw	1
 11029  000EE8  EF77  F007         	goto	u5960
 11030  000EEC                     u5950:
 11031  000EEC  0E00               	movlw	0
 11032  000EEE                     u5960:
 11033  000EEE  6E35               	movwf	_xtoa$1557^0,c
 11034  000EF0  6A36               	clrf	(_xtoa$1557+1)^0,c
 11035  000EF2  5035               	movf	_xtoa$1557^0,w,c
 11036  000EF4  1036               	iorwf	(_xtoa$1557+1)^0,w,c
 11037  000EF6  B4D8               	btfsc	status,2,c
 11038  000EF8  EF80  F007         	goto	u5971
 11039  000EFC  EF82  F007         	goto	u5970
 11040  000F00                     u5971:
 11041  000F00  EFB2  F007         	goto	l6175
 11042  000F04                     u5970:
 11043  000F04  0E9F               	movlw	159
 11044  000F06  6E2D               	movwf	??_xtoa^0,c
 11045  000F08  0EFF               	movlw	255
 11046  000F0A  6E2E               	movwf	(??_xtoa+1)^0,c
 11047  000F0C  0E20               	movlw	32
 11048  000F0E  1047               	iorwf	xtoa@c^0,w,c
 11049  000F10  6E2F               	movwf	(??_xtoa+2)^0,c
 11050  000F12  0E00               	movlw	0
 11051  000F14  1048               	iorwf	(xtoa@c+1)^0,w,c
 11052  000F16  6E30               	movwf	(??_xtoa+3)^0,c
 11053  000F18  502D               	movf	??_xtoa^0,w,c
 11054  000F1A  262F               	addwf	(??_xtoa+2)^0,f,c
 11055  000F1C  502E               	movf	(??_xtoa+1)^0,w,c
 11056  000F1E  2230               	addwfc	(??_xtoa+3)^0,f,c
 11057  000F20  5030               	movf	(??_xtoa+3)^0,w,c
 11058  000F22  E10A               	bnz	u5980
 11059  000F24  0E1A               	movlw	26
 11060  000F26  5C2F               	subwf	(??_xtoa+2)^0,w,c
 11061  000F28  A0D8               	btfss	status,0,c
 11062  000F2A  EF99  F007         	goto	u5981
 11063  000F2E  EF9C  F007         	goto	u5980
 11064  000F32                     u5981:
 11065  000F32  0E01               	movlw	1
 11066  000F34  EF9D  F007         	goto	u5990
 11067  000F38                     u5980:
 11068  000F38  0E00               	movlw	0
 11069  000F3A                     u5990:
 11070  000F3A  6E37               	movwf	_xtoa$1558^0,c
 11071  000F3C  6A38               	clrf	(_xtoa$1558+1)^0,c
 11072  000F3E  5037               	movf	_xtoa$1558^0,w,c
 11073  000F40  1038               	iorwf	(_xtoa$1558+1)^0,w,c
 11074  000F42  B4D8               	btfsc	status,2,c
 11075  000F44  EFA6  F007         	goto	u6001
 11076  000F48  EFA8  F007         	goto	u6000
 11077  000F4C                     u6001:
 11078  000F4C  EFB2  F007         	goto	l6175
 11079  000F50                     u6000:
 11080  000F50                     
 11081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11082  000F50  C047  F00B         	movff	xtoa@c,toupper@c
 11083  000F54  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 11084  000F58  EC03  F01B         	call	_toupper	;wreg free
 11085  000F5C  C00B  F047         	movff	?_toupper,xtoa@c
 11086  000F60  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 11087  000F64                     l6175:
 11088                           
 11089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11090  000F64  0EB4               	movlw	low _dbuf
 11091  000F66  2445               	addwf	xtoa@i^0,w,c
 11092  000F68  6ED9               	movwf	fsr2l,c
 11093  000F6A  0E01               	movlw	high _dbuf
 11094  000F6C  2046               	addwfc	(xtoa@i+1)^0,w,c
 11095  000F6E  6EDA               	movwf	fsr2h,c
 11096  000F70  C047  FFDF         	movff	xtoa@c,indf2
 11097  000F74                     
 11098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11099  000F74  0639               	decf	xtoa@p^0,f,c
 11100  000F76  A0D8               	btfss	status,0,c
 11101  000F78  063A               	decf	(xtoa@p+1)^0,f,c
 11102  000F7A                     
 11103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11104  000F7A  063B               	decf	xtoa@w^0,f,c
 11105  000F7C  A0D8               	btfss	status,0,c
 11106  000F7E  063C               	decf	(xtoa@w+1)^0,f,c
 11107  000F80                     
 11108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11109  000F80  C03D  F02D         	movff	xtoa@n,??_xtoa
 11110  000F84  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 11111  000F88  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 11112  000F8C  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 11113  000F90  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 11114  000F94  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 11115  000F98  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 11116  000F9C  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 11117  000FA0  0E05               	movlw	5
 11118  000FA2  EFDC  F007         	goto	u6010
 11119  000FA6                     u6015:
 11120  000FA6  90D8               	bcf	status,0,c
 11121  000FA8  3234               	rrcf	(??_xtoa+7)^0,f,c
 11122  000FAA  3233               	rrcf	(??_xtoa+6)^0,f,c
 11123  000FAC  3232               	rrcf	(??_xtoa+5)^0,f,c
 11124  000FAE  3231               	rrcf	(??_xtoa+4)^0,f,c
 11125  000FB0  3230               	rrcf	(??_xtoa+3)^0,f,c
 11126  000FB2  322F               	rrcf	(??_xtoa+2)^0,f,c
 11127  000FB4  322E               	rrcf	(??_xtoa+1)^0,f,c
 11128  000FB6  322D               	rrcf	??_xtoa^0,f,c
 11129  000FB8                     u6010:
 11130  000FB8  2EE8               	decfsz	wreg,f,c
 11131  000FBA  EFD3  F007         	goto	u6015
 11132  000FBE  C02D  F03D         	movff	??_xtoa,xtoa@n
 11133  000FC2  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 11134  000FC6  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 11135  000FCA  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 11136  000FCE  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 11137  000FD2  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 11138  000FD6  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 11139  000FDA  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 11140  000FDE                     l6183:
 11141                           
 11142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11143  000FDE  BE46               	btfsc	(xtoa@i+1)^0,7,c
 11144  000FE0  EFFB  F007         	goto	u6021
 11145  000FE4  5046               	movf	(xtoa@i+1)^0,w,c
 11146  000FE6  E109               	bnz	u6020
 11147  000FE8  0E02               	movlw	2
 11148  000FEA  5C45               	subwf	xtoa@i^0,w,c
 11149  000FEC  A0D8               	btfss	status,0,c
 11150  000FEE  EFFB  F007         	goto	u6021
 11151  000FF2  EFFD  F007         	goto	u6020
 11152  000FF6                     u6021:
 11153  000FF6  EF2D  F008         	goto	l1083
 11154  000FFA                     u6020:
 11155  000FFA  503D               	movf	xtoa@n^0,w,c
 11156  000FFC  103E               	iorwf	(xtoa@n+1)^0,w,c
 11157  000FFE  103F               	iorwf	(xtoa@n+2)^0,w,c
 11158  001000  1040               	iorwf	(xtoa@n+3)^0,w,c
 11159  001002  1041               	iorwf	(xtoa@n+4)^0,w,c
 11160  001004  1042               	iorwf	(xtoa@n+5)^0,w,c
 11161  001006  1043               	iorwf	(xtoa@n+6)^0,w,c
 11162  001008  1044               	iorwf	(xtoa@n+7)^0,w,c
 11163  00100A  A4D8               	btfss	status,2,c
 11164  00100C  EF0A  F008         	goto	u6031
 11165  001010  EF0C  F008         	goto	u6030
 11166  001014                     u6031:
 11167  001014  EF3C  F007         	goto	l6153
 11168  001018                     u6030:
 11169  001018  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 11170  00101A  EF19  F008         	goto	u6040
 11171  00101E  503A               	movf	(xtoa@p+1)^0,w,c
 11172  001020  E106               	bnz	u6041
 11173  001022  0439               	decf	xtoa@p^0,w,c
 11174  001024  B0D8               	btfsc	status,0,c
 11175  001026  EF17  F008         	goto	u6041
 11176  00102A  EF19  F008         	goto	u6040
 11177  00102E                     u6041:
 11178  00102E  EF3C  F007         	goto	l6153
 11179  001032                     u6040:
 11180  001032  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 11181  001034  EF24  F008         	goto	u6051
 11182  001038  503C               	movf	(xtoa@w+1)^0,w,c
 11183  00103A  E108               	bnz	u6050
 11184  00103C  043B               	decf	xtoa@w^0,w,c
 11185  00103E  A0D8               	btfss	status,0,c
 11186  001040  EF24  F008         	goto	u6051
 11187  001044  EF26  F008         	goto	u6050
 11188  001048                     u6051:
 11189  001048  EF2D  F008         	goto	l1083
 11190  00104C                     u6050:
 11191  00104C  B257               	btfsc	_flags^0,1,c
 11192  00104E  EF2B  F008         	goto	u6061
 11193  001052  EF2D  F008         	goto	u6060
 11194  001056                     u6061:
 11195  001056  EF3C  F007         	goto	l6153
 11196  00105A                     u6060:
 11197  00105A                     l1083:
 11198                           
 11199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11200  00105A  A857               	btfss	_flags^0,4,c
 11201  00105C  EF32  F008         	goto	u6071
 11202  001060  EF34  F008         	goto	u6070
 11203  001064                     u6071:
 11204  001064  EF4A  F008         	goto	l6199
 11205  001068                     u6070:
 11206  001068                     
 11207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11208  001068  0645               	decf	xtoa@i^0,f,c
 11209  00106A  A0D8               	btfss	status,0,c
 11210  00106C  0646               	decf	(xtoa@i+1)^0,f,c
 11211  00106E                     
 11212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11213  00106E  0EB4               	movlw	low _dbuf
 11214  001070  2445               	addwf	xtoa@i^0,w,c
 11215  001072  6ED9               	movwf	fsr2l,c
 11216  001074  0E01               	movlw	high _dbuf
 11217  001076  2046               	addwfc	(xtoa@i+1)^0,w,c
 11218  001078  6EDA               	movwf	fsr2h,c
 11219  00107A  C02C  FFDF         	movff	xtoa@x,indf2
 11220  00107E                     
 11221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11222  00107E  0645               	decf	xtoa@i^0,f,c
 11223  001080  A0D8               	btfss	status,0,c
 11224  001082  0646               	decf	(xtoa@i+1)^0,f,c
 11225                           
 11226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11227  001084  0EB4               	movlw	low _dbuf
 11228  001086  2445               	addwf	xtoa@i^0,w,c
 11229  001088  6ED9               	movwf	fsr2l,c
 11230  00108A  0E01               	movlw	high _dbuf
 11231  00108C  2046               	addwfc	(xtoa@i+1)^0,w,c
 11232  00108E  6EDA               	movwf	fsr2h,c
 11233  001090  0E30               	movlw	48
 11234  001092  6EDF               	movwf	indf2,c
 11235  001094                     l6199:
 11236                           
 11237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11238  001094  C022  F017         	movff	xtoa@fp,pad@fp
 11239  001098  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 11240  00109C  0EB4               	movlw	low _dbuf
 11241  00109E  2445               	addwf	xtoa@i^0,w,c
 11242  0010A0  6E19               	movwf	pad@buf^0,c
 11243  0010A2  0E01               	movlw	high _dbuf
 11244  0010A4  2046               	addwfc	(xtoa@i+1)^0,w,c
 11245  0010A6  6E1A               	movwf	(pad@buf+1)^0,c
 11246  0010A8  C03B  F01B         	movff	xtoa@w,pad@p
 11247  0010AC  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 11248  0010B0  ECEF  F015         	call	_pad	;wreg free
 11249  0010B4  C017  F022         	movff	?_pad,?_xtoa
 11250  0010B8  C018  F023         	movff	?_pad+1,?_xtoa+1
 11251  0010BC  0012               	return		;funcret
 11252  0010BE                     __end_of_xtoa:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _toupper *****************
 11256 ;; Defined at:
 11257 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  c               2   10[COMRAM] int 
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  2   10[COMRAM] int 
 11264 ;; Registers used:
 11265 ;;		wreg, status,2, status,0
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11275 ;;Total ram usage:        8 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:    5
 11278 ;; This function calls:
 11279 ;;		_islower
 11280 ;; This function is called by:
 11281 ;;		_xtoa
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           	psect	text57
 11286  003606                     __ptext57:
 11287                           	opt callstack 0
 11288  003606                     _toupper:
 11289                           	opt callstack 21
 11290  003606  0E9F               	movlw	159
 11291  003608  6E0D               	movwf	??_toupper^0,c
 11292  00360A  0EFF               	movlw	255
 11293  00360C  6E0E               	movwf	(??_toupper+1)^0,c
 11294  00360E  C00B  F00F         	movff	toupper@c,??_toupper+2
 11295  003612  C00C  F010         	movff	toupper@c+1,??_toupper+3
 11296  003616  500D               	movf	??_toupper^0,w,c
 11297  003618  260F               	addwf	(??_toupper+2)^0,f,c
 11298  00361A  500E               	movf	(??_toupper+1)^0,w,c
 11299  00361C  2210               	addwfc	(??_toupper+3)^0,f,c
 11300  00361E  5010               	movf	(??_toupper+3)^0,w,c
 11301  003620  E10A               	bnz	u5320
 11302  003622  0E1A               	movlw	26
 11303  003624  5C0F               	subwf	(??_toupper+2)^0,w,c
 11304  003626  A0D8               	btfss	status,0,c
 11305  003628  EF18  F01B         	goto	u5321
 11306  00362C  EF1B  F01B         	goto	u5320
 11307  003630                     u5321:
 11308  003630  0E01               	movlw	1
 11309  003632  EF1C  F01B         	goto	u5330
 11310  003636                     u5320:
 11311  003636  0E00               	movlw	0
 11312  003638                     u5330:
 11313  003638  6E11               	movwf	_toupper$2146^0,c
 11314  00363A  6A12               	clrf	(_toupper$2146+1)^0,c
 11315  00363C  5011               	movf	_toupper$2146^0,w,c
 11316  00363E  1012               	iorwf	(_toupper$2146+1)^0,w,c
 11317  003640  B4D8               	btfsc	status,2,c
 11318  003642  EF25  F01B         	goto	u5341
 11319  003646  EF27  F01B         	goto	u5340
 11320  00364A                     u5341:
 11321  00364A  EF2D  F01B         	goto	l1933
 11322  00364E                     u5340:
 11323  00364E  0E5F               	movlw	95
 11324  003650  140B               	andwf	toupper@c^0,w,c
 11325  003652  6E0B               	movwf	?_toupper^0,c
 11326  003654  6A0C               	clrf	(?_toupper+1)^0,c
 11327  003656  EF31  F01B         	goto	l1938
 11328  00365A                     l1933:
 11329  00365A  C00B  F00B         	movff	toupper@c,?_toupper
 11330  00365E  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 11331  003662                     l1938:
 11332  003662  0012               	return		;funcret
 11333  003664                     __end_of_toupper:
 11334                           	opt callstack 0
 11335                           
 11336 ;; *************** function _islower *****************
 11337 ;; Defined at:
 11338 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  c               2    4[COMRAM] int 
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;		None
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  2    4[COMRAM] int 
 11345 ;; Registers used:
 11346 ;;		wreg, status,2, status,0
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;Total ram usage:        6 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    4
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_toupper
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text58
 11367  003AFA                     __ptext58:
 11368                           	opt callstack 0
 11369  003AFA                     _islower:
 11370                           	opt callstack 21
 11371  003AFA  0E9F               	movlw	159
 11372  003AFC  6E07               	movwf	??_islower^0,c
 11373  003AFE  0EFF               	movlw	255
 11374  003B00  6E08               	movwf	(??_islower+1)^0,c
 11375  003B02  C005  F009         	movff	islower@c,??_islower+2
 11376  003B06  C006  F00A         	movff	islower@c+1,??_islower+3
 11377  003B0A  5007               	movf	??_islower^0,w,c
 11378  003B0C  2609               	addwf	(??_islower+2)^0,f,c
 11379  003B0E  5008               	movf	(??_islower+1)^0,w,c
 11380  003B10  220A               	addwfc	(??_islower+3)^0,f,c
 11381  003B12  500A               	movf	(??_islower+3)^0,w,c
 11382  003B14  E10A               	bnz	u5210
 11383  003B16  0E1A               	movlw	26
 11384  003B18  5C09               	subwf	(??_islower+2)^0,w,c
 11385  003B1A  A0D8               	btfss	status,0,c
 11386  003B1C  EF92  F01D         	goto	u5211
 11387  003B20  EF95  F01D         	goto	u5210
 11388  003B24                     u5211:
 11389  003B24  0E01               	movlw	1
 11390  003B26  EF96  F01D         	goto	u5220
 11391  003B2A                     u5210:
 11392  003B2A  0E00               	movlw	0
 11393  003B2C                     u5220:
 11394  003B2C  6E05               	movwf	?_islower^0,c
 11395  003B2E  6A06               	clrf	(?_islower+1)^0,c
 11396  003B30  0012               	return		;funcret
 11397  003B32                     __end_of_islower:
 11398                           	opt callstack 0
 11399                           
 11400 ;; *************** function _isupper *****************
 11401 ;; Defined at:
 11402 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;  c               2    4[COMRAM] int 
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;		None
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  2    4[COMRAM] int 
 11409 ;; Registers used:
 11410 ;;		wreg, status,2, status,0
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11420 ;;Total ram usage:        6 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:    4
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_xtoa
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text59
 11431  003B32                     __ptext59:
 11432                           	opt callstack 0
 11433  003B32                     _isupper:
 11434                           	opt callstack 22
 11435  003B32  0EBF               	movlw	191
 11436  003B34  6E07               	movwf	??_isupper^0,c
 11437  003B36  0EFF               	movlw	255
 11438  003B38  6E08               	movwf	(??_isupper+1)^0,c
 11439  003B3A  C005  F009         	movff	isupper@c,??_isupper+2
 11440  003B3E  C006  F00A         	movff	isupper@c+1,??_isupper+3
 11441  003B42  5007               	movf	??_isupper^0,w,c
 11442  003B44  2609               	addwf	(??_isupper+2)^0,f,c
 11443  003B46  5008               	movf	(??_isupper+1)^0,w,c
 11444  003B48  220A               	addwfc	(??_isupper+3)^0,f,c
 11445  003B4A  500A               	movf	(??_isupper+3)^0,w,c
 11446  003B4C  E10A               	bnz	u5280
 11447  003B4E  0E1A               	movlw	26
 11448  003B50  5C09               	subwf	(??_isupper+2)^0,w,c
 11449  003B52  A0D8               	btfss	status,0,c
 11450  003B54  EFAE  F01D         	goto	u5281
 11451  003B58  EFB1  F01D         	goto	u5280
 11452  003B5C                     u5281:
 11453  003B5C  0E01               	movlw	1
 11454  003B5E  EFB2  F01D         	goto	u5290
 11455  003B62                     u5280:
 11456  003B62  0E00               	movlw	0
 11457  003B64                     u5290:
 11458  003B64  6E05               	movwf	?_isupper^0,c
 11459  003B66  6A06               	clrf	(?_isupper+1)^0,c
 11460  003B68  0012               	return		;funcret
 11461  003B6A                     __end_of_isupper:
 11462                           	opt callstack 0
 11463                           
 11464 ;; *************** function _isalpha *****************
 11465 ;; Defined at:
 11466 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  c               2    4[COMRAM] int 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  2    4[COMRAM] int 
 11473 ;; Registers used:
 11474 ;;		wreg, status,2, status,0
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;Total ram usage:        6 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    4
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_xtoa
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text60
 11495  003A86                     __ptext60:
 11496                           	opt callstack 0
 11497  003A86                     _isalpha:
 11498                           	opt callstack 22
 11499  003A86  0E9F               	movlw	159
 11500  003A88  6E07               	movwf	??_isalpha^0,c
 11501  003A8A  0EFF               	movlw	255
 11502  003A8C  6E08               	movwf	(??_isalpha+1)^0,c
 11503  003A8E  0E20               	movlw	32
 11504  003A90  1005               	iorwf	isalpha@c^0,w,c
 11505  003A92  6E09               	movwf	(??_isalpha+2)^0,c
 11506  003A94  0E00               	movlw	0
 11507  003A96  1006               	iorwf	(isalpha@c+1)^0,w,c
 11508  003A98  6E0A               	movwf	(??_isalpha+3)^0,c
 11509  003A9A  5007               	movf	??_isalpha^0,w,c
 11510  003A9C  2609               	addwf	(??_isalpha+2)^0,f,c
 11511  003A9E  5008               	movf	(??_isalpha+1)^0,w,c
 11512  003AA0  220A               	addwfc	(??_isalpha+3)^0,f,c
 11513  003AA2  500A               	movf	(??_isalpha+3)^0,w,c
 11514  003AA4  E10A               	bnz	u5300
 11515  003AA6  0E1A               	movlw	26
 11516  003AA8  5C09               	subwf	(??_isalpha+2)^0,w,c
 11517  003AAA  A0D8               	btfss	status,0,c
 11518  003AAC  EF5A  F01D         	goto	u5301
 11519  003AB0  EF5D  F01D         	goto	u5300
 11520  003AB4                     u5301:
 11521  003AB4  0E01               	movlw	1
 11522  003AB6  EF5E  F01D         	goto	u5310
 11523  003ABA                     u5300:
 11524  003ABA  0E00               	movlw	0
 11525  003ABC                     u5310:
 11526  003ABC  6E05               	movwf	?_isalpha^0,c
 11527  003ABE  6A06               	clrf	(?_isalpha+1)^0,c
 11528  003AC0  0012               	return		;funcret
 11529  003AC2                     __end_of_isalpha:
 11530                           	opt callstack 0
 11531                           
 11532 ;; *************** function _utoa *****************
 11533 ;; Defined at:
 11534 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11537 ;;		 -> NULL(0), 
 11538 ;;  d               8   35[COMRAM] unsigned long long 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  n               8   55[COMRAM] unsigned long long 
 11541 ;;  i               2   63[COMRAM] int 
 11542 ;;  w               2   53[COMRAM] int 
 11543 ;;  p               2   51[COMRAM] int 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  2   33[COMRAM] int 
 11546 ;; Registers used:
 11547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11553 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11554 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11555 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11556 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;Total ram usage:       32 bytes
 11558 ;; Hardware stack levels used:    1
 11559 ;; Hardware stack levels required when called:    9
 11560 ;; This function calls:
 11561 ;;		___lodiv
 11562 ;;		___lomod
 11563 ;;		_pad
 11564 ;; This function is called by:
 11565 ;;		_vfpfcnvrt
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text61
 11570  00159C                     __ptext61:
 11571                           	opt callstack 0
 11572  00159C                     _utoa:
 11573                           	opt callstack 18
 11574  00159C                     
 11575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11576  00159C  0100               	movlb	0	; () banked
 11577  00159E  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11578  0015A0  EFD4  F00A         	goto	u5841
 11579  0015A4  EFD6  F00A         	goto	u5840
 11580  0015A8                     u5841:
 11581  0015A8  EFD7  F00A         	goto	l6105
 11582  0015AC                     u5840:
 11583  0015AC                     
 11584                           ; BSR set to: 0
 11585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 11586  0015AC  9257               	bcf	_flags^0,1,c
 11587  0015AE                     l6105:
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 11591  0015AE  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11592  0015B0  EFE4  F00A         	goto	u5850
 11593  0015B4  51A6               	movf	(_prec+1)& (0+255),w,b
 11594  0015B6  E106               	bnz	u5851
 11595  0015B8  05A5               	decf	_prec& (0+255),w,b
 11596  0015BA  B0D8               	btfsc	status,0,c
 11597  0015BC  EFE2  F00A         	goto	u5851
 11598  0015C0  EFE4  F00A         	goto	u5850
 11599  0015C4                     u5851:
 11600  0015C4  EFEA  F00A         	goto	l1045
 11601  0015C8                     u5850:
 11602  0015C8                     
 11603                           ; BSR set to: 0
 11604  0015C8  0E00               	movlw	0
 11605  0015CA  6E35               	movwf	(utoa@p+1)^0,c
 11606  0015CC  0E01               	movlw	1
 11607  0015CE  6E34               	movwf	utoa@p^0,c
 11608  0015D0  EFEE  F00A         	goto	l1047
 11609  0015D4                     l1045:
 11610                           
 11611                           ; BSR set to: 0
 11612  0015D4  C0A5  F034         	movff	_prec,utoa@p
 11613  0015D8  C0A6  F035         	movff	_prec+1,utoa@p+1
 11614  0015DC                     l1047:
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 11618  0015DC  C0A3  F036         	movff	_width,utoa@w
 11619  0015E0  C0A4  F037         	movff	_width+1,utoa@w+1
 11620                           
 11621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 11622  0015E4  C024  F038         	movff	utoa@d,utoa@n
 11623  0015E8  C025  F039         	movff	utoa@d+1,utoa@n+1
 11624  0015EC  C026  F03A         	movff	utoa@d+2,utoa@n+2
 11625  0015F0  C027  F03B         	movff	utoa@d+3,utoa@n+3
 11626  0015F4  C028  F03C         	movff	utoa@d+4,utoa@n+4
 11627  0015F8  C029  F03D         	movff	utoa@d+5,utoa@n+5
 11628  0015FC  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 11629  001600  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 11630  001604                     
 11631                           ; BSR set to: 0
 11632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 11633  001604  0E00               	movlw	0
 11634  001606  6E41               	movwf	(utoa@i+1)^0,c
 11635  001608  0E1F               	movlw	31
 11636  00160A  6E40               	movwf	utoa@i^0,c
 11637  00160C                     
 11638                           ; BSR set to: 0
 11639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 11640  00160C  0E00               	movlw	0
 11641  00160E  0101               	movlb	1	; () banked
 11642  001610  6FD3               	movwf	(_dbuf+31)& (0+255),b
 11643                           
 11644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11645  001612  EF81  F00B         	goto	l6123
 11646  001616                     l6113:
 11647                           
 11648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 11649  001616  0640               	decf	utoa@i^0,f,c
 11650  001618  A0D8               	btfss	status,0,c
 11651  00161A  0641               	decf	(utoa@i+1)^0,f,c
 11652  00161C                     
 11653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 11654  00161C  0EB4               	movlw	low _dbuf
 11655  00161E  2440               	addwf	utoa@i^0,w,c
 11656  001620  6ED9               	movwf	fsr2l,c
 11657  001622  0E01               	movlw	high _dbuf
 11658  001624  2041               	addwfc	(utoa@i+1)^0,w,c
 11659  001626  6EDA               	movwf	fsr2h,c
 11660  001628  C038  F005         	movff	utoa@n,___lomod@dividend
 11661  00162C  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 11662  001630  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 11663  001634  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 11664  001638  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 11665  00163C  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 11666  001640  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 11667  001644  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 11668  001648  0E0A               	movlw	10
 11669  00164A  6E0D               	movwf	___lomod@divisor^0,c
 11670  00164C  0E00               	movlw	0
 11671  00164E  6E0E               	movwf	(___lomod@divisor+1)^0,c
 11672  001650  0E00               	movlw	0
 11673  001652  6E0F               	movwf	(___lomod@divisor+2)^0,c
 11674  001654  0E00               	movlw	0
 11675  001656  6E10               	movwf	(___lomod@divisor+3)^0,c
 11676  001658  0E00               	movlw	0
 11677  00165A  6E11               	movwf	(___lomod@divisor+4)^0,c
 11678  00165C  0E00               	movlw	0
 11679  00165E  6E12               	movwf	(___lomod@divisor+5)^0,c
 11680  001660  0E00               	movlw	0
 11681  001662  6E13               	movwf	(___lomod@divisor+6)^0,c
 11682  001664  0E00               	movlw	0
 11683  001666  6E14               	movwf	(___lomod@divisor+7)^0,c
 11684  001668  EC24  F015         	call	___lomod	;wreg free
 11685  00166C  C005  F02C         	movff	?___lomod,??_utoa
 11686  001670  C006  F02D         	movff	?___lomod+1,??_utoa+1
 11687  001674  C007  F02E         	movff	?___lomod+2,??_utoa+2
 11688  001678  C008  F02F         	movff	?___lomod+3,??_utoa+3
 11689  00167C  C009  F030         	movff	?___lomod+4,??_utoa+4
 11690  001680  C00A  F031         	movff	?___lomod+5,??_utoa+5
 11691  001684  C00B  F032         	movff	?___lomod+6,??_utoa+6
 11692  001688  C00C  F033         	movff	?___lomod+7,??_utoa+7
 11693  00168C  502C               	movf	??_utoa^0,w,c
 11694  00168E  0F30               	addlw	48
 11695  001690  6EDF               	movwf	indf2,c
 11696  001692                     
 11697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 11698  001692  0634               	decf	utoa@p^0,f,c
 11699  001694  A0D8               	btfss	status,0,c
 11700  001696  0635               	decf	(utoa@p+1)^0,f,c
 11701  001698                     
 11702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 11703  001698  0636               	decf	utoa@w^0,f,c
 11704  00169A  A0D8               	btfss	status,0,c
 11705  00169C  0637               	decf	(utoa@w+1)^0,f,c
 11706  00169E                     
 11707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 11708  00169E  C038  F005         	movff	utoa@n,___lodiv@dividend
 11709  0016A2  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 11710  0016A6  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 11711  0016AA  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 11712  0016AE  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 11713  0016B2  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 11714  0016B6  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 11715  0016BA  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 11716  0016BE  0E0A               	movlw	10
 11717  0016C0  6E0D               	movwf	___lodiv@divisor^0,c
 11718  0016C2  0E00               	movlw	0
 11719  0016C4  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 11720  0016C6  0E00               	movlw	0
 11721  0016C8  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 11722  0016CA  0E00               	movlw	0
 11723  0016CC  6E10               	movwf	(___lodiv@divisor+3)^0,c
 11724  0016CE  0E00               	movlw	0
 11725  0016D0  6E11               	movwf	(___lodiv@divisor+4)^0,c
 11726  0016D2  0E00               	movlw	0
 11727  0016D4  6E12               	movwf	(___lodiv@divisor+5)^0,c
 11728  0016D6  0E00               	movlw	0
 11729  0016D8  6E13               	movwf	(___lodiv@divisor+6)^0,c
 11730  0016DA  0E00               	movlw	0
 11731  0016DC  6E14               	movwf	(___lodiv@divisor+7)^0,c
 11732  0016DE  EC64  F013         	call	___lodiv	;wreg free
 11733  0016E2  C005  F038         	movff	?___lodiv,utoa@n
 11734  0016E6  C006  F039         	movff	?___lodiv+1,utoa@n+1
 11735  0016EA  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 11736  0016EE  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 11737  0016F2  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 11738  0016F6  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 11739  0016FA  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 11740  0016FE  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 11741  001702                     l6123:
 11742                           
 11743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11744  001702  5040               	movf	utoa@i^0,w,c
 11745  001704  1041               	iorwf	(utoa@i+1)^0,w,c
 11746  001706  B4D8               	btfsc	status,2,c
 11747  001708  EF88  F00B         	goto	u5861
 11748  00170C  EF8A  F00B         	goto	u5860
 11749  001710                     u5861:
 11750  001710  EFBA  F00B         	goto	l6133
 11751  001714                     u5860:
 11752  001714  5038               	movf	utoa@n^0,w,c
 11753  001716  1039               	iorwf	(utoa@n+1)^0,w,c
 11754  001718  103A               	iorwf	(utoa@n+2)^0,w,c
 11755  00171A  103B               	iorwf	(utoa@n+3)^0,w,c
 11756  00171C  103C               	iorwf	(utoa@n+4)^0,w,c
 11757  00171E  103D               	iorwf	(utoa@n+5)^0,w,c
 11758  001720  103E               	iorwf	(utoa@n+6)^0,w,c
 11759  001722  103F               	iorwf	(utoa@n+7)^0,w,c
 11760  001724  A4D8               	btfss	status,2,c
 11761  001726  EF97  F00B         	goto	u5871
 11762  00172A  EF99  F00B         	goto	u5870
 11763  00172E                     u5871:
 11764  00172E  EF0B  F00B         	goto	l6113
 11765  001732                     u5870:
 11766  001732  BE35               	btfsc	(utoa@p+1)^0,7,c
 11767  001734  EFA6  F00B         	goto	u5880
 11768  001738  5035               	movf	(utoa@p+1)^0,w,c
 11769  00173A  E106               	bnz	u5881
 11770  00173C  0434               	decf	utoa@p^0,w,c
 11771  00173E  B0D8               	btfsc	status,0,c
 11772  001740  EFA4  F00B         	goto	u5881
 11773  001744  EFA6  F00B         	goto	u5880
 11774  001748                     u5881:
 11775  001748  EF0B  F00B         	goto	l6113
 11776  00174C                     u5880:
 11777  00174C  BE37               	btfsc	(utoa@w+1)^0,7,c
 11778  00174E  EFB1  F00B         	goto	u5891
 11779  001752  5037               	movf	(utoa@w+1)^0,w,c
 11780  001754  E108               	bnz	u5890
 11781  001756  0436               	decf	utoa@w^0,w,c
 11782  001758  A0D8               	btfss	status,0,c
 11783  00175A  EFB1  F00B         	goto	u5891
 11784  00175E  EFB3  F00B         	goto	u5890
 11785  001762                     u5891:
 11786  001762  EFBA  F00B         	goto	l6133
 11787  001766                     u5890:
 11788  001766  B257               	btfsc	_flags^0,1,c
 11789  001768  EFB8  F00B         	goto	u5901
 11790  00176C  EFBA  F00B         	goto	u5900
 11791  001770                     u5901:
 11792  001770  EF0B  F00B         	goto	l6113
 11793  001774                     u5900:
 11794  001774                     l6133:
 11795                           
 11796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 11797  001774  C022  F017         	movff	utoa@fp,pad@fp
 11798  001778  C023  F018         	movff	utoa@fp+1,pad@fp+1
 11799  00177C  0EB4               	movlw	low _dbuf
 11800  00177E  2440               	addwf	utoa@i^0,w,c
 11801  001780  6E19               	movwf	pad@buf^0,c
 11802  001782  0E01               	movlw	high _dbuf
 11803  001784  2041               	addwfc	(utoa@i+1)^0,w,c
 11804  001786  6E1A               	movwf	(pad@buf+1)^0,c
 11805  001788  C036  F01B         	movff	utoa@w,pad@p
 11806  00178C  C037  F01C         	movff	utoa@w+1,pad@p+1
 11807  001790  ECEF  F015         	call	_pad	;wreg free
 11808  001794  C017  F022         	movff	?_pad,?_utoa
 11809  001798  C018  F023         	movff	?_pad+1,?_utoa+1
 11810  00179C  0012               	return		;funcret
 11811  00179E                     __end_of_utoa:
 11812                           	opt callstack 0
 11813                           
 11814 ;; *************** function ___lomod *****************
 11815 ;; Defined at:
 11816 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;  dividend        8    4[COMRAM] unsigned long long 
 11819 ;;  divisor         8   12[COMRAM] unsigned long long 
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;  counter         1   20[COMRAM] unsigned char 
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  8    4[COMRAM] unsigned long long 
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11831 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11834 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11835 ;;Total ram usage:       17 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; Hardware stack levels required when called:    4
 11838 ;; This function calls:
 11839 ;;		Nothing
 11840 ;; This function is called by:
 11841 ;;		_utoa
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text62
 11846  002A48                     __ptext62:
 11847                           	opt callstack 0
 11848  002A48                     ___lomod:
 11849                           	opt callstack 22
 11850  002A48  500D               	movf	___lomod@divisor^0,w,c
 11851  002A4A  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 11852  002A4C  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 11853  002A4E  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 11854  002A50  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 11855  002A52  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 11856  002A54  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 11857  002A56  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 11858  002A58  B4D8               	btfsc	status,2,c
 11859  002A5A  EF31  F015         	goto	u5541
 11860  002A5E  EF33  F015         	goto	u5540
 11861  002A62                     u5541:
 11862  002A62  EF7B  F015         	goto	l1577
 11863  002A66                     u5540:
 11864  002A66  0E01               	movlw	1
 11865  002A68  6E15               	movwf	___lomod@counter^0,c
 11866  002A6A  EF41  F015         	goto	l5975
 11867  002A6E                     l5973:
 11868  002A6E  90D8               	bcf	status,0,c
 11869  002A70  360D               	rlcf	___lomod@divisor^0,f,c
 11870  002A72  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 11871  002A74  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 11872  002A76  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 11873  002A78  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 11874  002A7A  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 11875  002A7C  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 11876  002A7E  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 11877  002A80  2A15               	incf	___lomod@counter^0,f,c
 11878  002A82                     l5975:
 11879  002A82  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 11880  002A84  EF46  F015         	goto	u5551
 11881  002A88  EF48  F015         	goto	u5550
 11882  002A8C                     u5551:
 11883  002A8C  EF37  F015         	goto	l5973
 11884  002A90                     u5550:
 11885  002A90                     l5977:
 11886  002A90  500D               	movf	___lomod@divisor^0,w,c
 11887  002A92  5C05               	subwf	___lomod@dividend^0,w,c
 11888  002A94  500E               	movf	(___lomod@divisor+1)^0,w,c
 11889  002A96  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 11890  002A98  500F               	movf	(___lomod@divisor+2)^0,w,c
 11891  002A9A  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 11892  002A9C  5010               	movf	(___lomod@divisor+3)^0,w,c
 11893  002A9E  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 11894  002AA0  5011               	movf	(___lomod@divisor+4)^0,w,c
 11895  002AA2  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 11896  002AA4  5012               	movf	(___lomod@divisor+5)^0,w,c
 11897  002AA6  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 11898  002AA8  5013               	movf	(___lomod@divisor+6)^0,w,c
 11899  002AAA  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 11900  002AAC  5014               	movf	(___lomod@divisor+7)^0,w,c
 11901  002AAE  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 11902  002AB0  A0D8               	btfss	status,0,c
 11903  002AB2  EF5D  F015         	goto	u5561
 11904  002AB6  EF5F  F015         	goto	u5560
 11905  002ABA                     u5561:
 11906  002ABA  EF6F  F015         	goto	l5981
 11907  002ABE                     u5560:
 11908  002ABE  500D               	movf	___lomod@divisor^0,w,c
 11909  002AC0  5E05               	subwf	___lomod@dividend^0,f,c
 11910  002AC2  500E               	movf	(___lomod@divisor+1)^0,w,c
 11911  002AC4  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 11912  002AC6  500F               	movf	(___lomod@divisor+2)^0,w,c
 11913  002AC8  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 11914  002ACA  5010               	movf	(___lomod@divisor+3)^0,w,c
 11915  002ACC  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 11916  002ACE  5011               	movf	(___lomod@divisor+4)^0,w,c
 11917  002AD0  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 11918  002AD2  5012               	movf	(___lomod@divisor+5)^0,w,c
 11919  002AD4  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 11920  002AD6  5013               	movf	(___lomod@divisor+6)^0,w,c
 11921  002AD8  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 11922  002ADA  5014               	movf	(___lomod@divisor+7)^0,w,c
 11923  002ADC  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 11924  002ADE                     l5981:
 11925  002ADE  90D8               	bcf	status,0,c
 11926  002AE0  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 11927  002AE2  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 11928  002AE4  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 11929  002AE6  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 11930  002AE8  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 11931  002AEA  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 11932  002AEC  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 11933  002AEE  320D               	rrcf	___lomod@divisor^0,f,c
 11934  002AF0  2E15               	decfsz	___lomod@counter^0,f,c
 11935  002AF2  EF48  F015         	goto	l5977
 11936  002AF6                     l1577:
 11937  002AF6  C005  F005         	movff	___lomod@dividend,?___lomod
 11938  002AFA  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 11939  002AFE  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 11940  002B02  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 11941  002B06  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 11942  002B0A  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 11943  002B0E  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 11944  002B12  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 11945  002B16  0012               	return		;funcret
 11946  002B18                     __end_of___lomod:
 11947                           	opt callstack 0
 11948                           
 11949 ;; *************** function ___lodiv *****************
 11950 ;; Defined at:
 11951 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  dividend        8    4[COMRAM] unsigned long long 
 11954 ;;  divisor         8   12[COMRAM] unsigned long long 
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  quotient        8   20[COMRAM] unsigned long long 
 11957 ;;  counter         1   28[COMRAM] unsigned char 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  8    4[COMRAM] unsigned long long 
 11960 ;; Registers used:
 11961 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11967 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11968 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11970 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;Total ram usage:       25 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    4
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_utoa
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           	psect	text63
 11982  0026C8                     __ptext63:
 11983                           	opt callstack 0
 11984  0026C8                     ___lodiv:
 11985                           	opt callstack 22
 11986  0026C8  EE20  F015         	lfsr	2,___lodiv@quotient
 11987  0026CC  0E07               	movlw	7
 11988  0026CE                     u5501:
 11989  0026CE  6ADE               	clrf	postinc2,c
 11990  0026D0  06E8               	decf	wreg,f,c
 11991  0026D2  E2FD               	bc	u5501
 11992  0026D4  500D               	movf	___lodiv@divisor^0,w,c
 11993  0026D6  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 11994  0026D8  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 11995  0026DA  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 11996  0026DC  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 11997  0026DE  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 11998  0026E0  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 11999  0026E2  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 12000  0026E4  B4D8               	btfsc	status,2,c
 12001  0026E6  EF77  F013         	goto	u5511
 12002  0026EA  EF79  F013         	goto	u5510
 12003  0026EE                     u5511:
 12004  0026EE  EFCB  F013         	goto	l1567
 12005  0026F2                     u5510:
 12006  0026F2  0E01               	movlw	1
 12007  0026F4  6E1D               	movwf	___lodiv@counter^0,c
 12008  0026F6  EF87  F013         	goto	l5955
 12009  0026FA                     l5953:
 12010  0026FA  90D8               	bcf	status,0,c
 12011  0026FC  360D               	rlcf	___lodiv@divisor^0,f,c
 12012  0026FE  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 12013  002700  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 12014  002702  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 12015  002704  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 12016  002706  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 12017  002708  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 12018  00270A  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 12019  00270C  2A1D               	incf	___lodiv@counter^0,f,c
 12020  00270E                     l5955:
 12021  00270E  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 12022  002710  EF8C  F013         	goto	u5521
 12023  002714  EF8E  F013         	goto	u5520
 12024  002718                     u5521:
 12025  002718  EF7D  F013         	goto	l5953
 12026  00271C                     u5520:
 12027  00271C                     l5957:
 12028  00271C  90D8               	bcf	status,0,c
 12029  00271E  3615               	rlcf	___lodiv@quotient^0,f,c
 12030  002720  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 12031  002722  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 12032  002724  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 12033  002726  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 12034  002728  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 12035  00272A  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 12036  00272C  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 12037  00272E  500D               	movf	___lodiv@divisor^0,w,c
 12038  002730  5C05               	subwf	___lodiv@dividend^0,w,c
 12039  002732  500E               	movf	(___lodiv@divisor+1)^0,w,c
 12040  002734  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 12041  002736  500F               	movf	(___lodiv@divisor+2)^0,w,c
 12042  002738  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 12043  00273A  5010               	movf	(___lodiv@divisor+3)^0,w,c
 12044  00273C  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 12045  00273E  5011               	movf	(___lodiv@divisor+4)^0,w,c
 12046  002740  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 12047  002742  5012               	movf	(___lodiv@divisor+5)^0,w,c
 12048  002744  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 12049  002746  5013               	movf	(___lodiv@divisor+6)^0,w,c
 12050  002748  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 12051  00274A  5014               	movf	(___lodiv@divisor+7)^0,w,c
 12052  00274C  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 12053  00274E  A0D8               	btfss	status,0,c
 12054  002750  EFAC  F013         	goto	u5531
 12055  002754  EFAE  F013         	goto	u5530
 12056  002758                     u5531:
 12057  002758  EFBF  F013         	goto	l5965
 12058  00275C                     u5530:
 12059  00275C  500D               	movf	___lodiv@divisor^0,w,c
 12060  00275E  5E05               	subwf	___lodiv@dividend^0,f,c
 12061  002760  500E               	movf	(___lodiv@divisor+1)^0,w,c
 12062  002762  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 12063  002764  500F               	movf	(___lodiv@divisor+2)^0,w,c
 12064  002766  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 12065  002768  5010               	movf	(___lodiv@divisor+3)^0,w,c
 12066  00276A  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 12067  00276C  5011               	movf	(___lodiv@divisor+4)^0,w,c
 12068  00276E  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 12069  002770  5012               	movf	(___lodiv@divisor+5)^0,w,c
 12070  002772  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 12071  002774  5013               	movf	(___lodiv@divisor+6)^0,w,c
 12072  002776  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 12073  002778  5014               	movf	(___lodiv@divisor+7)^0,w,c
 12074  00277A  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 12075  00277C  8015               	bsf	___lodiv@quotient^0,0,c
 12076  00277E                     l5965:
 12077  00277E  90D8               	bcf	status,0,c
 12078  002780  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 12079  002782  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 12080  002784  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 12081  002786  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 12082  002788  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 12083  00278A  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 12084  00278C  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 12085  00278E  320D               	rrcf	___lodiv@divisor^0,f,c
 12086  002790  2E1D               	decfsz	___lodiv@counter^0,f,c
 12087  002792  EF8E  F013         	goto	l5957
 12088  002796                     l1567:
 12089  002796  C015  F005         	movff	___lodiv@quotient,?___lodiv
 12090  00279A  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 12091  00279E  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 12092  0027A2  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 12093  0027A6  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 12094  0027AA  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 12095  0027AE  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 12096  0027B2  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 12097  0027B6  0012               	return		;funcret
 12098  0027B8                     __end_of___lodiv:
 12099                           	opt callstack 0
 12100                           
 12101 ;; *************** function _stoa *****************
 12102 ;; Defined at:
 12103 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 12106 ;;		 -> NULL(0), 
 12107 ;;  s               2   17[COMRAM] PTR unsigned char 
 12108 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), 
 12109 ;;		 -> STR_34(9), STR_33(12), InitialiseString@SerialNum(11), Command(16), 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  nuls            7   20[COMRAM] unsigned char [7]
 12112 ;;  l               2   35[COMRAM] int 
 12113 ;;  p               2   33[COMRAM] int 
 12114 ;;  cp              2   31[COMRAM] PTR unsigned char 
 12115 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), 
 12116 ;;		 -> ValidateCmd@ConfName(20), STR_34(9), STR_33(12), InitialiseString@SerialNum(11), 
 12117 ;;		 -> Command(16), 
 12118 ;;  w               2   29[COMRAM] int 
 12119 ;;  i               2   27[COMRAM] int 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  2   15[COMRAM] int 
 12122 ;; Registers used:
 12123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12130 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12132 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12133 ;;Total ram usage:       22 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    7
 12136 ;; This function calls:
 12137 ;;		_fputc
 12138 ;;		_strlen
 12139 ;; This function is called by:
 12140 ;;		_vfpfcnvrt
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text64
 12145  001AEC                     __ptext64:
 12146                           	opt callstack 0
 12147  001AEC                     _stoa:
 12148                           	opt callstack 20
 12149  001AEC                     
 12150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12151  001AEC  EE21  F022         	lfsr	2,stoa@F1139
 12152  001AF0  EE10  F015         	lfsr	1,stoa@nuls
 12153  001AF4  0E06               	movlw	6
 12154  001AF6                     u5741:
 12155  001AF6  CFDB FFE3          	movff	plusw2,plusw1
 12156  001AFA  06E8               	decf	wreg,f,c
 12157  001AFC  E2FC               	bc	u5741
 12158  001AFE                     
 12159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 12160  001AFE  C012  F020         	movff	stoa@s,stoa@cp
 12161  001B02  C013  F021         	movff	stoa@s+1,stoa@cp+1
 12162  001B06                     
 12163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 12164  001B06  5020               	movf	stoa@cp^0,w,c
 12165  001B08  1021               	iorwf	(stoa@cp+1)^0,w,c
 12166  001B0A  A4D8               	btfss	status,2,c
 12167  001B0C  EF8A  F00D         	goto	u5751
 12168  001B10  EF8C  F00D         	goto	u5750
 12169  001B14                     u5751:
 12170  001B14  EF90  F00D         	goto	l6067
 12171  001B18                     u5750:
 12172  001B18                     
 12173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 12174  001B18  0E15               	movlw	low stoa@nuls
 12175  001B1A  6E20               	movwf	stoa@cp^0,c
 12176  001B1C  0E00               	movlw	high stoa@nuls
 12177  001B1E  6E21               	movwf	(stoa@cp+1)^0,c
 12178  001B20                     l6067:
 12179                           
 12180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 12181  001B20  C020  F005         	movff	stoa@cp,strlen@s
 12182  001B24  C021  F006         	movff	stoa@cp+1,strlen@s+1
 12183  001B28  ECE2  F01B         	call	_strlen	;wreg free
 12184  001B2C  C005  F024         	movff	?_strlen,stoa@l
 12185  001B30  C006  F025         	movff	?_strlen+1,stoa@l+1
 12186  001B34                     
 12187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 12188  001B34  C0A5  F022         	movff	_prec,stoa@p
 12189  001B38  C0A6  F023         	movff	_prec+1,stoa@p+1
 12190  001B3C                     
 12191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 12192  001B3C  BE23               	btfsc	(stoa@p+1)^0,7,c
 12193  001B3E  EFA3  F00D         	goto	u5761
 12194  001B42  EFA5  F00D         	goto	u5760
 12195  001B46                     u5761:
 12196  001B46  EFBA  F00D         	goto	l1026
 12197  001B4A                     u5760:
 12198  001B4A  5024               	movf	stoa@l^0,w,c
 12199  001B4C  5C22               	subwf	stoa@p^0,w,c
 12200  001B4E  5023               	movf	(stoa@p+1)^0,w,c
 12201  001B50  0A80               	xorlw	128
 12202  001B52  6E14               	movwf	??_stoa^0,c
 12203  001B54  5025               	movf	(stoa@l+1)^0,w,c
 12204  001B56  0A80               	xorlw	128
 12205  001B58  5814               	subwfb	??_stoa^0,w,c
 12206  001B5A  A0D8               	btfss	status,0,c
 12207  001B5C  EFB2  F00D         	goto	u5771
 12208  001B60  EFB4  F00D         	goto	u5770
 12209  001B64                     u5771:
 12210  001B64  EFB6  F00D         	goto	l1024
 12211  001B68                     u5770:
 12212  001B68  EFBA  F00D         	goto	l1026
 12213  001B6C                     l1024:
 12214  001B6C  C022  F024         	movff	stoa@p,stoa@l
 12215  001B70  C023  F025         	movff	stoa@p+1,stoa@l+1
 12216  001B74                     l1026:
 12217                           
 12218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 12219  001B74  C024  F022         	movff	stoa@l,stoa@p
 12220  001B78  C025  F023         	movff	stoa@l+1,stoa@p+1
 12221                           
 12222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 12223  001B7C  C0A3  F01E         	movff	_width,stoa@w
 12224  001B80  C0A4  F01F         	movff	_width+1,stoa@w+1
 12225                           
 12226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 12227  001B84  B057               	btfsc	_flags^0,0,c
 12228  001B86  EFC7  F00D         	goto	u5781
 12229  001B8A  EFC9  F00D         	goto	u5780
 12230  001B8E                     u5781:
 12231  001B8E  EFE6  F00D         	goto	l6083
 12232  001B92                     u5780:
 12233  001B92  EFD7  F00D         	goto	l6081
 12234  001B96                     l6077:
 12235                           
 12236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 12237  001B96  0E00               	movlw	0
 12238  001B98  6E08               	movwf	(fputc@c+1)^0,c
 12239  001B9A  0E20               	movlw	32
 12240  001B9C  6E07               	movwf	fputc@c^0,c
 12241  001B9E  C010  F009         	movff	stoa@fp,fputc@fp
 12242  001BA2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12243  001BA6  ECBE  F017         	call	_fputc	;wreg free
 12244  001BAA                     
 12245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 12246  001BAA  4A24               	infsnz	stoa@l^0,f,c
 12247  001BAC  2A25               	incf	(stoa@l+1)^0,f,c
 12248  001BAE                     l6081:
 12249                           
 12250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 12251  001BAE  501E               	movf	stoa@w^0,w,c
 12252  001BB0  5C24               	subwf	stoa@l^0,w,c
 12253  001BB2  5025               	movf	(stoa@l+1)^0,w,c
 12254  001BB4  0A80               	xorlw	128
 12255  001BB6  6E14               	movwf	??_stoa^0,c
 12256  001BB8  501F               	movf	(stoa@w+1)^0,w,c
 12257  001BBA  0A80               	xorlw	128
 12258  001BBC  5814               	subwfb	??_stoa^0,w,c
 12259  001BBE  A0D8               	btfss	status,0,c
 12260  001BC0  EFE4  F00D         	goto	u5791
 12261  001BC4  EFE6  F00D         	goto	u5790
 12262  001BC8                     u5791:
 12263  001BC8  EFCB  F00D         	goto	l6077
 12264  001BCC                     u5790:
 12265  001BCC                     l6083:
 12266                           
 12267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 12268  001BCC  0E00               	movlw	0
 12269  001BCE  6E1D               	movwf	(stoa@i+1)^0,c
 12270  001BD0  0E00               	movlw	0
 12271  001BD2  6E1C               	movwf	stoa@i^0,c
 12272                           
 12273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12274  001BD4  EF0B  F00E         	goto	l6091
 12275  001BD8                     l6085:
 12276                           
 12277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 12278  001BD8  C020  FFF6         	movff	stoa@cp,tblptrl
 12279  001BDC  C021  FFF7         	movff	stoa@cp+1,tblptrh
 12280  001BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 12281  001BE2  6EF8               	movwf	tblptru,c
 12282  001BE4  0E0E               	movlw	(high __ramtop+-1)
 12283  001BE6  64F7               	cpfsgt	tblptrh,c
 12284  001BE8  D003               	bra	u5807
 12285  001BEA  0008               	tblrd		*
 12286  001BEC  50F5               	movf	tablat,w,c
 12287  001BEE  D005               	bra	u5800
 12288  001BF0                     u5807:
 12289  001BF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12290  001BF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12291  001BF8  50EF               	movf	indf0,w,c
 12292  001BFA                     u5800:
 12293  001BFA  6E14               	movwf	??_stoa^0,c
 12294  001BFC  5014               	movf	??_stoa^0,w,c
 12295  001BFE  6E07               	movwf	fputc@c^0,c
 12296  001C00  6A08               	clrf	(fputc@c+1)^0,c
 12297  001C02  C010  F009         	movff	stoa@fp,fputc@fp
 12298  001C06  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12299  001C0A  ECBE  F017         	call	_fputc	;wreg free
 12300  001C0E                     
 12301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 12302  001C0E  4A20               	infsnz	stoa@cp^0,f,c
 12303  001C10  2A21               	incf	(stoa@cp+1)^0,f,c
 12304  001C12                     
 12305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 12306  001C12  4A1C               	infsnz	stoa@i^0,f,c
 12307  001C14  2A1D               	incf	(stoa@i+1)^0,f,c
 12308  001C16                     l6091:
 12309                           
 12310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12311  001C16  5022               	movf	stoa@p^0,w,c
 12312  001C18  5C1C               	subwf	stoa@i^0,w,c
 12313  001C1A  501D               	movf	(stoa@i+1)^0,w,c
 12314  001C1C  0A80               	xorlw	128
 12315  001C1E  6E14               	movwf	??_stoa^0,c
 12316  001C20  5023               	movf	(stoa@p+1)^0,w,c
 12317  001C22  0A80               	xorlw	128
 12318  001C24  5814               	subwfb	??_stoa^0,w,c
 12319  001C26  A0D8               	btfss	status,0,c
 12320  001C28  EF18  F00E         	goto	u5811
 12321  001C2C  EF1A  F00E         	goto	u5810
 12322  001C30                     u5811:
 12323  001C30  EFEC  F00D         	goto	l6085
 12324  001C34                     u5810:
 12325  001C34                     
 12326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 12327  001C34  A057               	btfss	_flags^0,0,c
 12328  001C36  EF1F  F00E         	goto	u5821
 12329  001C3A  EF21  F00E         	goto	u5820
 12330  001C3E                     u5821:
 12331  001C3E  EF3E  F00E         	goto	l1036
 12332  001C42                     u5820:
 12333  001C42  EF2F  F00E         	goto	l6099
 12334  001C46                     l6095:
 12335                           
 12336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 12337  001C46  0E00               	movlw	0
 12338  001C48  6E08               	movwf	(fputc@c+1)^0,c
 12339  001C4A  0E20               	movlw	32
 12340  001C4C  6E07               	movwf	fputc@c^0,c
 12341  001C4E  C010  F009         	movff	stoa@fp,fputc@fp
 12342  001C52  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12343  001C56  ECBE  F017         	call	_fputc	;wreg free
 12344  001C5A                     
 12345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 12346  001C5A  4A24               	infsnz	stoa@l^0,f,c
 12347  001C5C  2A25               	incf	(stoa@l+1)^0,f,c
 12348  001C5E                     l6099:
 12349                           
 12350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 12351  001C5E  501E               	movf	stoa@w^0,w,c
 12352  001C60  5C24               	subwf	stoa@l^0,w,c
 12353  001C62  5025               	movf	(stoa@l+1)^0,w,c
 12354  001C64  0A80               	xorlw	128
 12355  001C66  6E14               	movwf	??_stoa^0,c
 12356  001C68  501F               	movf	(stoa@w+1)^0,w,c
 12357  001C6A  0A80               	xorlw	128
 12358  001C6C  5814               	subwfb	??_stoa^0,w,c
 12359  001C6E  A0D8               	btfss	status,0,c
 12360  001C70  EF3C  F00E         	goto	u5831
 12361  001C74  EF3E  F00E         	goto	u5830
 12362  001C78                     u5831:
 12363  001C78  EF23  F00E         	goto	l6095
 12364  001C7C                     u5830:
 12365  001C7C                     l1036:
 12366                           
 12367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 12368  001C7C  C024  F010         	movff	stoa@l,?_stoa
 12369  001C80  C025  F011         	movff	stoa@l+1,?_stoa+1
 12370  001C84  0012               	return		;funcret
 12371  001C86                     __end_of_stoa:
 12372                           	opt callstack 0
 12373                           
 12374 ;; *************** function _dtoa *****************
 12375 ;; Defined at:
 12376 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12379 ;;		 -> NULL(0), 
 12380 ;;  d               8   35[COMRAM] long long 
 12381 ;; Auto vars:     Size  Location     Type
 12382 ;;  n               8   59[COMRAM] long long 
 12383 ;;  i               2   67[COMRAM] int 
 12384 ;;  s               2   57[COMRAM] int 
 12385 ;;  w               2   55[COMRAM] int 
 12386 ;;  p               2   53[COMRAM] int 
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  2   33[COMRAM] int 
 12389 ;; Registers used:
 12390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12396 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12397 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12398 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12399 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12400 ;;Total ram usage:       36 bytes
 12401 ;; Hardware stack levels used:    1
 12402 ;; Hardware stack levels required when called:    9
 12403 ;; This function calls:
 12404 ;;		___aodiv
 12405 ;;		___aomod
 12406 ;;		_abs
 12407 ;;		_pad
 12408 ;; This function is called by:
 12409 ;;		_vfpfcnvrt
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           	psect	text65
 12414  000B08                     __ptext65:
 12415                           	opt callstack 0
 12416  000B08                     _dtoa:
 12417                           	opt callstack 18
 12418  000B08                     
 12419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12420  000B08  C024  F03C         	movff	dtoa@d,dtoa@n
 12421  000B0C  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 12422  000B10  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 12423  000B14  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 12424  000B18  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 12425  000B1C  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 12426  000B20  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 12427  000B24  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 12428  000B28                     
 12429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12430  000B28  BE43               	btfsc	(dtoa@n+7)^0,7,c
 12431  000B2A  EF99  F005         	goto	u5591
 12432  000B2E  EF9C  F005         	goto	u5590
 12433  000B32                     u5591:
 12434  000B32  0E01               	movlw	1
 12435  000B34  EF9D  F005         	goto	u5600
 12436  000B38                     u5590:
 12437  000B38  0E00               	movlw	0
 12438  000B3A                     u5600:
 12439  000B3A  6E3A               	movwf	dtoa@s^0,c
 12440  000B3C  6A3B               	clrf	(dtoa@s+1)^0,c
 12441                           
 12442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12443  000B3E  503A               	movf	dtoa@s^0,w,c
 12444  000B40  103B               	iorwf	(dtoa@s+1)^0,w,c
 12445  000B42  B4D8               	btfsc	status,2,c
 12446  000B44  EFA6  F005         	goto	u5611
 12447  000B48  EFA8  F005         	goto	u5610
 12448  000B4C                     u5611:
 12449  000B4C  EFB8  F005         	goto	l6003
 12450  000B50                     u5610:
 12451  000B50                     
 12452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12453  000B50  1E43               	comf	(dtoa@n+7)^0,f,c
 12454  000B52  1E42               	comf	(dtoa@n+6)^0,f,c
 12455  000B54  1E41               	comf	(dtoa@n+5)^0,f,c
 12456  000B56  1E40               	comf	(dtoa@n+4)^0,f,c
 12457  000B58  1E3F               	comf	(dtoa@n+3)^0,f,c
 12458  000B5A  1E3E               	comf	(dtoa@n+2)^0,f,c
 12459  000B5C  1E3D               	comf	(dtoa@n+1)^0,f,c
 12460  000B5E  6C3C               	negf	dtoa@n^0,c
 12461  000B60  0E00               	movlw	0
 12462  000B62  223D               	addwfc	(dtoa@n+1)^0,f,c
 12463  000B64  223E               	addwfc	(dtoa@n+2)^0,f,c
 12464  000B66  223F               	addwfc	(dtoa@n+3)^0,f,c
 12465  000B68  2240               	addwfc	(dtoa@n+4)^0,f,c
 12466  000B6A  2241               	addwfc	(dtoa@n+5)^0,f,c
 12467  000B6C  2242               	addwfc	(dtoa@n+6)^0,f,c
 12468  000B6E  2243               	addwfc	(dtoa@n+7)^0,f,c
 12469  000B70                     l6003:
 12470                           
 12471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12472  000B70  0100               	movlb	0	; () banked
 12473  000B72  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 12474  000B74  EFBE  F005         	goto	u5621
 12475  000B78  EFC0  F005         	goto	u5620
 12476  000B7C                     u5621:
 12477  000B7C  EFC1  F005         	goto	l6007
 12478  000B80                     u5620:
 12479  000B80                     
 12480                           ; BSR set to: 0
 12481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12482  000B80  9257               	bcf	_flags^0,1,c
 12483  000B82                     l6007:
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12487  000B82  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 12488  000B84  EFCE  F005         	goto	u5630
 12489  000B88  51A6               	movf	(_prec+1)& (0+255),w,b
 12490  000B8A  E106               	bnz	u5631
 12491  000B8C  05A5               	decf	_prec& (0+255),w,b
 12492  000B8E  B0D8               	btfsc	status,0,c
 12493  000B90  EFCC  F005         	goto	u5631
 12494  000B94  EFCE  F005         	goto	u5630
 12495  000B98                     u5631:
 12496  000B98  EFD4  F005         	goto	l997
 12497  000B9C                     u5630:
 12498  000B9C                     
 12499                           ; BSR set to: 0
 12500  000B9C  0E00               	movlw	0
 12501  000B9E  6E37               	movwf	(dtoa@p+1)^0,c
 12502  000BA0  0E01               	movlw	1
 12503  000BA2  6E36               	movwf	dtoa@p^0,c
 12504  000BA4  EFD8  F005         	goto	l999
 12505  000BA8                     l997:
 12506                           
 12507                           ; BSR set to: 0
 12508  000BA8  C0A5  F036         	movff	_prec,dtoa@p
 12509  000BAC  C0A6  F037         	movff	_prec+1,dtoa@p+1
 12510  000BB0                     l999:
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12514  000BB0  C0A3  F038         	movff	_width,dtoa@w
 12515  000BB4  C0A4  F039         	movff	_width+1,dtoa@w+1
 12516  000BB8                     
 12517                           ; BSR set to: 0
 12518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12519  000BB8  503A               	movf	dtoa@s^0,w,c
 12520  000BBA  103B               	iorwf	(dtoa@s+1)^0,w,c
 12521  000BBC  A4D8               	btfss	status,2,c
 12522  000BBE  EFE3  F005         	goto	u5641
 12523  000BC2  EFE5  F005         	goto	u5640
 12524  000BC6                     u5641:
 12525  000BC6  EFEC  F005         	goto	l6015
 12526  000BCA                     u5640:
 12527  000BCA                     
 12528                           ; BSR set to: 0
 12529  000BCA  A457               	btfss	_flags^0,2,c
 12530  000BCC  EFEA  F005         	goto	u5651
 12531  000BD0  EFEC  F005         	goto	u5650
 12532  000BD4                     u5651:
 12533  000BD4  EFEF  F005         	goto	l6017
 12534  000BD8                     u5650:
 12535  000BD8                     l6015:
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12539  000BD8  0638               	decf	dtoa@w^0,f,c
 12540  000BDA  A0D8               	btfss	status,0,c
 12541  000BDC  0639               	decf	(dtoa@w+1)^0,f,c
 12542  000BDE                     l6017:
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12546  000BDE  0E00               	movlw	0
 12547  000BE0  6E45               	movwf	(dtoa@i+1)^0,c
 12548  000BE2  0E1F               	movlw	31
 12549  000BE4  6E44               	movwf	dtoa@i^0,c
 12550  000BE6                     
 12551                           ; BSR set to: 0
 12552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12553  000BE6  0E00               	movlw	0
 12554  000BE8  0101               	movlb	1	; () banked
 12555  000BEA  6FD3               	movwf	(_dbuf+31)& (0+255),b
 12556                           
 12557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12558  000BEC  EF74  F006         	goto	l6031
 12559  000BF0                     l6021:
 12560                           
 12561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12562  000BF0  0644               	decf	dtoa@i^0,f,c
 12563  000BF2  A0D8               	btfss	status,0,c
 12564  000BF4  0645               	decf	(dtoa@i+1)^0,f,c
 12565  000BF6                     
 12566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12567  000BF6  0EB4               	movlw	low _dbuf
 12568  000BF8  2444               	addwf	dtoa@i^0,w,c
 12569  000BFA  6ED9               	movwf	fsr2l,c
 12570  000BFC  0E01               	movlw	high _dbuf
 12571  000BFE  2045               	addwfc	(dtoa@i+1)^0,w,c
 12572  000C00  6EDA               	movwf	fsr2h,c
 12573  000C02  C03C  F005         	movff	dtoa@n,___aomod@dividend
 12574  000C06  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 12575  000C0A  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 12576  000C0E  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 12577  000C12  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 12578  000C16  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 12579  000C1A  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 12580  000C1E  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 12581  000C22  0E0A               	movlw	10
 12582  000C24  6E0D               	movwf	___aomod@divisor^0,c
 12583  000C26  0E00               	movlw	0
 12584  000C28  6E0E               	movwf	(___aomod@divisor+1)^0,c
 12585  000C2A  0E00               	movlw	0
 12586  000C2C  6E0F               	movwf	(___aomod@divisor+2)^0,c
 12587  000C2E  0E00               	movlw	0
 12588  000C30  6E10               	movwf	(___aomod@divisor+3)^0,c
 12589  000C32  0E00               	movlw	0
 12590  000C34  6E11               	movwf	(___aomod@divisor+4)^0,c
 12591  000C36  0E00               	movlw	0
 12592  000C38  6E12               	movwf	(___aomod@divisor+5)^0,c
 12593  000C3A  0E00               	movlw	0
 12594  000C3C  6E13               	movwf	(___aomod@divisor+6)^0,c
 12595  000C3E  0E00               	movlw	0
 12596  000C40  6E14               	movwf	(___aomod@divisor+7)^0,c
 12597  000C42  ECD4  F00F         	call	___aomod	;wreg free
 12598  000C46  C005  F02C         	movff	?___aomod,??_dtoa
 12599  000C4A  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 12600  000C4E  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 12601  000C52  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 12602  000C56  C009  F030         	movff	?___aomod+4,??_dtoa+4
 12603  000C5A  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 12604  000C5E  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 12605  000C62  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 12606  000C66  C02C  F017         	movff	??_dtoa,abs@a
 12607  000C6A  C02E  F018         	movff	??_dtoa+2,abs@a+1
 12608  000C6E  EC05  F01D         	call	_abs	;wreg free
 12609  000C72  5017               	movf	?_abs^0,w,c
 12610  000C74  0F30               	addlw	48
 12611  000C76  6EDF               	movwf	indf2,c
 12612  000C78                     
 12613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12614  000C78  0636               	decf	dtoa@p^0,f,c
 12615  000C7A  A0D8               	btfss	status,0,c
 12616  000C7C  0637               	decf	(dtoa@p+1)^0,f,c
 12617  000C7E                     
 12618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12619  000C7E  0638               	decf	dtoa@w^0,f,c
 12620  000C80  A0D8               	btfss	status,0,c
 12621  000C82  0639               	decf	(dtoa@w+1)^0,f,c
 12622  000C84                     
 12623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12624  000C84  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 12625  000C88  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 12626  000C8C  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 12627  000C90  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 12628  000C94  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 12629  000C98  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 12630  000C9C  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 12631  000CA0  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 12632  000CA4  0E0A               	movlw	10
 12633  000CA6  6E0D               	movwf	___aodiv@divisor^0,c
 12634  000CA8  0E00               	movlw	0
 12635  000CAA  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 12636  000CAC  0E00               	movlw	0
 12637  000CAE  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 12638  000CB0  0E00               	movlw	0
 12639  000CB2  6E10               	movwf	(___aodiv@divisor+3)^0,c
 12640  000CB4  0E00               	movlw	0
 12641  000CB6  6E11               	movwf	(___aodiv@divisor+4)^0,c
 12642  000CB8  0E00               	movlw	0
 12643  000CBA  6E12               	movwf	(___aodiv@divisor+5)^0,c
 12644  000CBC  0E00               	movlw	0
 12645  000CBE  6E13               	movwf	(___aodiv@divisor+6)^0,c
 12646  000CC0  0E00               	movlw	0
 12647  000CC2  6E14               	movwf	(___aodiv@divisor+7)^0,c
 12648  000CC4  EC10  F00F         	call	___aodiv	;wreg free
 12649  000CC8  C005  F03C         	movff	?___aodiv,dtoa@n
 12650  000CCC  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 12651  000CD0  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 12652  000CD4  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 12653  000CD8  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 12654  000CDC  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 12655  000CE0  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 12656  000CE4  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 12657  000CE8                     l6031:
 12658                           
 12659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12660  000CE8  BE45               	btfsc	(dtoa@i+1)^0,7,c
 12661  000CEA  EF7F  F006         	goto	u5661
 12662  000CEE  5045               	movf	(dtoa@i+1)^0,w,c
 12663  000CF0  E108               	bnz	u5660
 12664  000CF2  0444               	decf	dtoa@i^0,w,c
 12665  000CF4  A0D8               	btfss	status,0,c
 12666  000CF6  EF7F  F006         	goto	u5661
 12667  000CFA  EF81  F006         	goto	u5660
 12668  000CFE                     u5661:
 12669  000CFE  EFB1  F006         	goto	l6041
 12670  000D02                     u5660:
 12671  000D02  503C               	movf	dtoa@n^0,w,c
 12672  000D04  103D               	iorwf	(dtoa@n+1)^0,w,c
 12673  000D06  103E               	iorwf	(dtoa@n+2)^0,w,c
 12674  000D08  103F               	iorwf	(dtoa@n+3)^0,w,c
 12675  000D0A  1040               	iorwf	(dtoa@n+4)^0,w,c
 12676  000D0C  1041               	iorwf	(dtoa@n+5)^0,w,c
 12677  000D0E  1042               	iorwf	(dtoa@n+6)^0,w,c
 12678  000D10  1043               	iorwf	(dtoa@n+7)^0,w,c
 12679  000D12  A4D8               	btfss	status,2,c
 12680  000D14  EF8E  F006         	goto	u5671
 12681  000D18  EF90  F006         	goto	u5670
 12682  000D1C                     u5671:
 12683  000D1C  EFF8  F005         	goto	l6021
 12684  000D20                     u5670:
 12685  000D20  BE37               	btfsc	(dtoa@p+1)^0,7,c
 12686  000D22  EF9D  F006         	goto	u5680
 12687  000D26  5037               	movf	(dtoa@p+1)^0,w,c
 12688  000D28  E106               	bnz	u5681
 12689  000D2A  0436               	decf	dtoa@p^0,w,c
 12690  000D2C  B0D8               	btfsc	status,0,c
 12691  000D2E  EF9B  F006         	goto	u5681
 12692  000D32  EF9D  F006         	goto	u5680
 12693  000D36                     u5681:
 12694  000D36  EFF8  F005         	goto	l6021
 12695  000D3A                     u5680:
 12696  000D3A  BE39               	btfsc	(dtoa@w+1)^0,7,c
 12697  000D3C  EFA8  F006         	goto	u5691
 12698  000D40  5039               	movf	(dtoa@w+1)^0,w,c
 12699  000D42  E108               	bnz	u5690
 12700  000D44  0438               	decf	dtoa@w^0,w,c
 12701  000D46  A0D8               	btfss	status,0,c
 12702  000D48  EFA8  F006         	goto	u5691
 12703  000D4C  EFAA  F006         	goto	u5690
 12704  000D50                     u5691:
 12705  000D50  EFB1  F006         	goto	l6041
 12706  000D54                     u5690:
 12707  000D54  B257               	btfsc	_flags^0,1,c
 12708  000D56  EFAF  F006         	goto	u5701
 12709  000D5A  EFB1  F006         	goto	u5700
 12710  000D5E                     u5701:
 12711  000D5E  EFF8  F005         	goto	l6021
 12712  000D62                     u5700:
 12713  000D62                     l6041:
 12714                           
 12715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12716  000D62  503A               	movf	dtoa@s^0,w,c
 12717  000D64  103B               	iorwf	(dtoa@s+1)^0,w,c
 12718  000D66  A4D8               	btfss	status,2,c
 12719  000D68  EFB8  F006         	goto	u5711
 12720  000D6C  EFBA  F006         	goto	u5710
 12721  000D70                     u5711:
 12722  000D70  EFC1  F006         	goto	l6045
 12723  000D74                     u5710:
 12724  000D74  A457               	btfss	_flags^0,2,c
 12725  000D76  EFBF  F006         	goto	u5721
 12726  000D7A  EFC1  F006         	goto	u5720
 12727  000D7E                     u5721:
 12728  000D7E  EFDF  F006         	goto	l6055
 12729  000D82                     u5720:
 12730  000D82                     l6045:
 12731                           
 12732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12733  000D82  0644               	decf	dtoa@i^0,f,c
 12734  000D84  A0D8               	btfss	status,0,c
 12735  000D86  0645               	decf	(dtoa@i+1)^0,f,c
 12736  000D88                     
 12737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12738  000D88  503A               	movf	dtoa@s^0,w,c
 12739  000D8A  103B               	iorwf	(dtoa@s+1)^0,w,c
 12740  000D8C  A4D8               	btfss	status,2,c
 12741  000D8E  EFCB  F006         	goto	u5731
 12742  000D92  EFCD  F006         	goto	u5730
 12743  000D96                     u5731:
 12744  000D96  EFD3  F006         	goto	l6051
 12745  000D9A                     u5730:
 12746  000D9A  0E00               	movlw	0
 12747  000D9C  6E35               	movwf	(_dtoa$1528+1)^0,c
 12748  000D9E  0E2B               	movlw	43
 12749  000DA0  6E34               	movwf	_dtoa$1528^0,c
 12750  000DA2  EFD7  F006         	goto	l6053
 12751  000DA6                     l6051:
 12752  000DA6  0E00               	movlw	0
 12753  000DA8  6E35               	movwf	(_dtoa$1528+1)^0,c
 12754  000DAA  0E2D               	movlw	45
 12755  000DAC  6E34               	movwf	_dtoa$1528^0,c
 12756  000DAE                     l6053:
 12757  000DAE  0EB4               	movlw	low _dbuf
 12758  000DB0  2444               	addwf	dtoa@i^0,w,c
 12759  000DB2  6ED9               	movwf	fsr2l,c
 12760  000DB4  0E01               	movlw	high _dbuf
 12761  000DB6  2045               	addwfc	(dtoa@i+1)^0,w,c
 12762  000DB8  6EDA               	movwf	fsr2h,c
 12763  000DBA  C034  FFDF         	movff	_dtoa$1528,indf2
 12764  000DBE                     l6055:
 12765                           
 12766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12767  000DBE  C022  F017         	movff	dtoa@fp,pad@fp
 12768  000DC2  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 12769  000DC6  0EB4               	movlw	low _dbuf
 12770  000DC8  2444               	addwf	dtoa@i^0,w,c
 12771  000DCA  6E19               	movwf	pad@buf^0,c
 12772  000DCC  0E01               	movlw	high _dbuf
 12773  000DCE  2045               	addwfc	(dtoa@i+1)^0,w,c
 12774  000DD0  6E1A               	movwf	(pad@buf+1)^0,c
 12775  000DD2  C038  F01B         	movff	dtoa@w,pad@p
 12776  000DD6  C039  F01C         	movff	dtoa@w+1,pad@p+1
 12777  000DDA  ECEF  F015         	call	_pad	;wreg free
 12778  000DDE  C017  F022         	movff	?_pad,?_dtoa
 12779  000DE2  C018  F023         	movff	?_pad+1,?_dtoa+1
 12780  000DE6  0012               	return		;funcret
 12781  000DE8                     __end_of_dtoa:
 12782                           	opt callstack 0
 12783                           
 12784 ;; *************** function _pad *****************
 12785 ;; Defined at:
 12786 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12789 ;;		 -> NULL(0), 
 12790 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12791 ;;		 -> dbuf(32), 
 12792 ;;  p               2   26[COMRAM] int 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  w               2   31[COMRAM] int 
 12795 ;;  i               2   29[COMRAM] int 
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  2   22[COMRAM] int 
 12798 ;; Registers used:
 12799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12805 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12806 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12808 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12809 ;;Total ram usage:       11 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    8
 12812 ;; This function calls:
 12813 ;;		_fputc
 12814 ;;		_fputs
 12815 ;;		_strlen
 12816 ;; This function is called by:
 12817 ;;		_dtoa
 12818 ;;		_utoa
 12819 ;;		_xtoa
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           	psect	text66
 12824  002BDE                     __ptext66:
 12825                           	opt callstack 0
 12826  002BDE                     _pad:
 12827                           	opt callstack 18
 12828  002BDE                     
 12829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12830  002BDE  A057               	btfss	_flags^0,0,c
 12831  002BE0  EFF4  F015         	goto	u5231
 12832  002BE4  EFF6  F015         	goto	u5230
 12833  002BE8                     u5231:
 12834  002BE8  EF00  F016         	goto	l5817
 12835  002BEC                     u5230:
 12836  002BEC                     
 12837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12838  002BEC  C019  F010         	movff	pad@buf,fputs@s
 12839  002BF0  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12840  002BF4  C017  F012         	movff	pad@fp,fputs@fp
 12841  002BF8  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12842  002BFC  ECC1  F01C         	call	_fputs	;wreg free
 12843  002C00                     l5817:
 12844                           
 12845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 12846  002C00  BE1C               	btfsc	(pad@p+1)^0,7,c
 12847  002C02  EF05  F016         	goto	u5241
 12848  002C06  EF07  F016         	goto	u5240
 12849  002C0A                     u5241:
 12850  002C0A  EF0D  F016         	goto	l5821
 12851  002C0E                     u5240:
 12852  002C0E  C01B  F020         	movff	pad@p,pad@w
 12853  002C12  C01C  F021         	movff	pad@p+1,pad@w+1
 12854  002C16  EF11  F016         	goto	l986
 12855  002C1A                     l5821:
 12856  002C1A  0E00               	movlw	0
 12857  002C1C  6E21               	movwf	(pad@w+1)^0,c
 12858  002C1E  0E00               	movlw	0
 12859  002C20  6E20               	movwf	pad@w^0,c
 12860  002C22                     l986:
 12861                           
 12862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12863  002C22  0E00               	movlw	0
 12864  002C24  6E1F               	movwf	(pad@i+1)^0,c
 12865  002C26  0E00               	movlw	0
 12866  002C28  6E1E               	movwf	pad@i^0,c
 12867                           
 12868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12869  002C2A  EF23  F016         	goto	l5827
 12870  002C2E                     l5823:
 12871                           
 12872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12873  002C2E  0E00               	movlw	0
 12874  002C30  6E08               	movwf	(fputc@c+1)^0,c
 12875  002C32  0E20               	movlw	32
 12876  002C34  6E07               	movwf	fputc@c^0,c
 12877  002C36  C017  F009         	movff	pad@fp,fputc@fp
 12878  002C3A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12879  002C3E  ECBE  F017         	call	_fputc	;wreg free
 12880  002C42                     
 12881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12882  002C42  4A1E               	infsnz	pad@i^0,f,c
 12883  002C44  2A1F               	incf	(pad@i+1)^0,f,c
 12884  002C46                     l5827:
 12885                           
 12886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12887  002C46  5020               	movf	pad@w^0,w,c
 12888  002C48  5C1E               	subwf	pad@i^0,w,c
 12889  002C4A  501F               	movf	(pad@i+1)^0,w,c
 12890  002C4C  0A80               	xorlw	128
 12891  002C4E  6E1D               	movwf	??_pad^0,c
 12892  002C50  5021               	movf	(pad@w+1)^0,w,c
 12893  002C52  0A80               	xorlw	128
 12894  002C54  581D               	subwfb	??_pad^0,w,c
 12895  002C56  A0D8               	btfss	status,0,c
 12896  002C58  EF30  F016         	goto	u5251
 12897  002C5C  EF32  F016         	goto	u5250
 12898  002C60                     u5251:
 12899  002C60  EF17  F016         	goto	l5823
 12900  002C64                     u5250:
 12901  002C64                     
 12902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12903  002C64  B057               	btfsc	_flags^0,0,c
 12904  002C66  EF37  F016         	goto	u5261
 12905  002C6A  EF39  F016         	goto	u5260
 12906  002C6E                     u5261:
 12907  002C6E  EF43  F016         	goto	l5831
 12908  002C72                     u5260:
 12909  002C72                     
 12910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12911  002C72  C019  F010         	movff	pad@buf,fputs@s
 12912  002C76  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12913  002C7A  C017  F012         	movff	pad@fp,fputs@fp
 12914  002C7E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12915  002C82  ECC1  F01C         	call	_fputs	;wreg free
 12916  002C86                     l5831:
 12917                           
 12918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12919  002C86  C019  F005         	movff	pad@buf,strlen@s
 12920  002C8A  C01A  F006         	movff	pad@buf+1,strlen@s+1
 12921  002C8E  ECE2  F01B         	call	_strlen	;wreg free
 12922  002C92  5020               	movf	pad@w^0,w,c
 12923  002C94  2405               	addwf	?_strlen^0,w,c
 12924  002C96  6E17               	movwf	?_pad^0,c
 12925  002C98  5021               	movf	(pad@w+1)^0,w,c
 12926  002C9A  2006               	addwfc	(?_strlen+1)^0,w,c
 12927  002C9C  6E18               	movwf	(?_pad+1)^0,c
 12928  002C9E  0012               	return		;funcret
 12929  002CA0                     __end_of_pad:
 12930                           	opt callstack 0
 12931                           
 12932 ;; *************** function _strlen *****************
 12933 ;; Defined at:
 12934 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 12935 ;; Parameters:    Size  Location     Type
 12936 ;;  s               2    4[COMRAM] PTR const unsigned char 
 12937 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1453(20), 
 12938 ;;		 -> ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), STR_34(9), STR_33(12), 
 12939 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;  a               2    6[COMRAM] PTR const unsigned char 
 12942 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1453(20), 
 12943 ;;		 -> ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), STR_34(9), STR_33(12), 
 12944 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  2    4[COMRAM] unsigned int 
 12947 ;; Registers used:
 12948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12958 ;;Total ram usage:        4 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    4
 12961 ;; This function calls:
 12962 ;;		Nothing
 12963 ;; This function is called by:
 12964 ;;		_ReadRX232
 12965 ;;		_SaveCardDat
 12966 ;;		_pad
 12967 ;;		_stoa
 12968 ;;		_strcat
 12969 ;; This function uses a non-reentrant model
 12970 ;;
 12971                           
 12972                           	psect	text67
 12973  0037C4                     __ptext67:
 12974                           	opt callstack 0
 12975  0037C4                     _strlen:
 12976                           	opt callstack 21
 12977  0037C4  C005  F007         	movff	strlen@s,strlen@a
 12978  0037C8  C006  F008         	movff	strlen@s+1,strlen@a+1
 12979  0037CC  EFEA  F01B         	goto	l5795
 12980  0037D0                     l5793:
 12981  0037D0  4A05               	infsnz	strlen@s^0,f,c
 12982  0037D2  2A06               	incf	(strlen@s+1)^0,f,c
 12983  0037D4                     l5795:
 12984  0037D4  C005  FFF6         	movff	strlen@s,tblptrl
 12985  0037D8  C006  FFF7         	movff	strlen@s+1,tblptrh
 12986  0037DC  0E00               	movlw	low (__mediumconst shr (0+16))
 12987  0037DE  6EF8               	movwf	tblptru,c
 12988  0037E0  0E0E               	movlw	(high __ramtop+-1)
 12989  0037E2  64F7               	cpfsgt	tblptrh,c
 12990  0037E4  D003               	bra	u5187
 12991  0037E6  0008               	tblrd		*
 12992  0037E8  50F5               	movf	tablat,w,c
 12993  0037EA  D005               	bra	u5180
 12994  0037EC                     u5187:
 12995  0037EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 12996  0037F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 12997  0037F4  50EF               	movf	indf0,w,c
 12998  0037F6                     u5180:
 12999  0037F6  0900               	iorlw	0
 13000  0037F8  A4D8               	btfss	status,2,c
 13001  0037FA  EF01  F01C         	goto	u5191
 13002  0037FE  EF03  F01C         	goto	u5190
 13003  003802                     u5191:
 13004  003802  EFE8  F01B         	goto	l5793
 13005  003806                     u5190:
 13006  003806  5007               	movf	strlen@a^0,w,c
 13007  003808  5C05               	subwf	strlen@s^0,w,c
 13008  00380A  6E05               	movwf	?_strlen^0,c
 13009  00380C  5008               	movf	(strlen@a+1)^0,w,c
 13010  00380E  5806               	subwfb	(strlen@s+1)^0,w,c
 13011  003810  6E06               	movwf	(?_strlen+1)^0,c
 13012  003812  0012               	return		;funcret
 13013  003814                     __end_of_strlen:
 13014                           	opt callstack 0
 13015                           
 13016 ;; *************** function _fputs *****************
 13017 ;; Defined at:
 13018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  s               2   15[COMRAM] PTR const unsigned char 
 13021 ;;		 -> dbuf(32), 
 13022 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 13023 ;;		 -> NULL(0), 
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;  i               2   20[COMRAM] int 
 13026 ;;  c               1   19[COMRAM] unsigned char 
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  2   15[COMRAM] int 
 13029 ;; Registers used:
 13030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13037 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13040 ;;Total ram usage:        7 bytes
 13041 ;; Hardware stack levels used:    1
 13042 ;; Hardware stack levels required when called:    7
 13043 ;; This function calls:
 13044 ;;		_fputc
 13045 ;; This function is called by:
 13046 ;;		_pad
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text68
 13051  003982                     __ptext68:
 13052                           	opt callstack 0
 13053  003982                     _fputs:
 13054                           	opt callstack 18
 13055  003982  0E00               	movlw	0
 13056  003984  6E16               	movwf	(fputs@i+1)^0,c
 13057  003986  0E00               	movlw	0
 13058  003988  6E15               	movwf	fputs@i^0,c
 13059  00398A  EFD2  F01C         	goto	l5807
 13060  00398E                     l5803:
 13061  00398E  C014  F007         	movff	fputs@c,fputc@c
 13062  003992  6A08               	clrf	(fputc@c+1)^0,c
 13063  003994  C012  F009         	movff	fputs@fp,fputc@fp
 13064  003998  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 13065  00399C  ECBE  F017         	call	_fputc	;wreg free
 13066  0039A0  4A15               	infsnz	fputs@i^0,f,c
 13067  0039A2  2A16               	incf	(fputs@i+1)^0,f,c
 13068  0039A4                     l5807:
 13069  0039A4  5015               	movf	fputs@i^0,w,c
 13070  0039A6  2410               	addwf	fputs@s^0,w,c
 13071  0039A8  6ED9               	movwf	fsr2l,c
 13072  0039AA  5016               	movf	(fputs@i+1)^0,w,c
 13073  0039AC  2011               	addwfc	(fputs@s+1)^0,w,c
 13074  0039AE  6EDA               	movwf	fsr2h,c
 13075  0039B0  50DF               	movf	indf2,w,c
 13076  0039B2  6E14               	movwf	fputs@c^0,c
 13077  0039B4  5014               	movf	fputs@c^0,w,c
 13078  0039B6  A4D8               	btfss	status,2,c
 13079  0039B8  EFE0  F01C         	goto	u5201
 13080  0039BC  EFE2  F01C         	goto	u5200
 13081  0039C0                     u5201:
 13082  0039C0  EFC7  F01C         	goto	l5803
 13083  0039C4                     u5200:
 13084  0039C4  0012               	return		;funcret
 13085  0039C6                     __end_of_fputs:
 13086                           	opt callstack 0
 13087                           
 13088 ;; *************** function _fputc *****************
 13089 ;; Defined at:
 13090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;  c               2    6[COMRAM] int 
 13093 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 13094 ;;		 -> NULL(0), 
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;		None
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  2    6[COMRAM] int 
 13099 ;; Registers used:
 13100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13101 ;; Tracked objects:
 13102 ;;		On entry : 0/0
 13103 ;;		On exit  : 0/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13108 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13109 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13110 ;;Total ram usage:        9 bytes
 13111 ;; Hardware stack levels used:    1
 13112 ;; Hardware stack levels required when called:    6
 13113 ;; This function calls:
 13114 ;;		_putch
 13115 ;; This function is called by:
 13116 ;;		_pad
 13117 ;;		_stoa
 13118 ;;		_vfpfcnvrt
 13119 ;;		_fputs
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text69
 13124  002F7C                     __ptext69:
 13125                           	opt callstack 0
 13126  002F7C                     _fputc:
 13127                           	opt callstack 18
 13128  002F7C  5009               	movf	fputc@fp^0,w,c
 13129  002F7E  100A               	iorwf	(fputc@fp+1)^0,w,c
 13130  002F80  B4D8               	btfsc	status,2,c
 13131  002F82  EFC5  F017         	goto	u5141
 13132  002F86  EFC7  F017         	goto	u5140
 13133  002F8A                     u5141:
 13134  002F8A  EFD0  F017         	goto	l5781
 13135  002F8E                     u5140:
 13136  002F8E  5009               	movf	fputc@fp^0,w,c
 13137  002F90  100A               	iorwf	(fputc@fp+1)^0,w,c
 13138  002F92  A4D8               	btfss	status,2,c
 13139  002F94  EFCE  F017         	goto	u5151
 13140  002F98  EFD0  F017         	goto	u5150
 13141  002F9C                     u5151:
 13142  002F9C  EFD5  F017         	goto	l5783
 13143  002FA0                     u5150:
 13144  002FA0                     l5781:
 13145  002FA0  5007               	movf	fputc@c^0,w,c
 13146  002FA2  ECE1  F01E         	call	_putch
 13147  002FA6  EF08  F018         	goto	l1886
 13148  002FAA                     l5783:
 13149  002FAA  EE20 F004          	lfsr	2,4
 13150  002FAE  5009               	movf	fputc@fp^0,w,c
 13151  002FB0  26D9               	addwf	fsr2l,f,c
 13152  002FB2  500A               	movf	(fputc@fp+1)^0,w,c
 13153  002FB4  22DA               	addwfc	fsr2h,f,c
 13154  002FB6  50DE               	movf	postinc2,w,c
 13155  002FB8  10DE               	iorwf	postinc2,w,c
 13156  002FBA  B4D8               	btfsc	status,2,c
 13157  002FBC  EFE2  F017         	goto	u5161
 13158  002FC0  EFE4  F017         	goto	u5160
 13159  002FC4                     u5161:
 13160  002FC4  EFFF  F017         	goto	l5787
 13161  002FC8                     u5160:
 13162  002FC8  EE20 F004          	lfsr	2,4
 13163  002FCC  5009               	movf	fputc@fp^0,w,c
 13164  002FCE  26D9               	addwf	fsr2l,f,c
 13165  002FD0  500A               	movf	(fputc@fp+1)^0,w,c
 13166  002FD2  22DA               	addwfc	fsr2h,f,c
 13167  002FD4  EE10 F002          	lfsr	1,2
 13168  002FD8  5009               	movf	fputc@fp^0,w,c
 13169  002FDA  26E1               	addwf	fsr1l,f,c
 13170  002FDC  500A               	movf	(fputc@fp+1)^0,w,c
 13171  002FDE  22E2               	addwfc	fsr1h,f,c
 13172  002FE0  50DE               	movf	postinc2,w,c
 13173  002FE2  5CE6               	subwf	postinc1,w,c
 13174  002FE4  50E6               	movf	postinc1,w,c
 13175  002FE6  0A80               	xorlw	128
 13176  002FE8  6E0F               	movwf	(??_fputc+4)^0,c
 13177  002FEA  50DE               	movf	postinc2,w,c
 13178  002FEC  0A80               	xorlw	128
 13179  002FEE  580F               	subwfb	(??_fputc+4)^0,w,c
 13180  002FF0  B0D8               	btfsc	status,0,c
 13181  002FF2  EFFD  F017         	goto	u5171
 13182  002FF6  EFFF  F017         	goto	u5170
 13183  002FFA                     u5171:
 13184  002FFA  EF08  F018         	goto	l1886
 13185  002FFE                     u5170:
 13186  002FFE                     l5787:
 13187  002FFE  EE20 F002          	lfsr	2,2
 13188  003002  5009               	movf	fputc@fp^0,w,c
 13189  003004  26D9               	addwf	fsr2l,f,c
 13190  003006  500A               	movf	(fputc@fp+1)^0,w,c
 13191  003008  22DA               	addwfc	fsr2h,f,c
 13192  00300A  2ADE               	incf	postinc2,f,c
 13193  00300C  0E00               	movlw	0
 13194  00300E  22DD               	addwfc	postdec2,f,c
 13195  003010                     l1886:
 13196  003010  0012               	return		;funcret
 13197  003012                     __end_of_fputc:
 13198                           	opt callstack 0
 13199                           
 13200 ;; *************** function _putch *****************
 13201 ;; Defined at:
 13202 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;  txData          1    wreg     unsigned char 
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;  txData          1    5[COMRAM] unsigned char 
 13207 ;; Return value:  Size  Location     Type
 13208 ;;                  1    wreg      void 
 13209 ;; Registers used:
 13210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13211 ;; Tracked objects:
 13212 ;;		On entry : 0/0
 13213 ;;		On exit  : 0/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13220 ;;Total ram usage:        1 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:    5
 13223 ;; This function calls:
 13224 ;;		_EUSART2_Write
 13225 ;; This function is called by:
 13226 ;;		_fputc
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text70
 13231  003DC2                     __ptext70:
 13232                           	opt callstack 0
 13233  003DC2                     _putch:
 13234                           	opt callstack 18
 13235                           
 13236                           ;incstack = 0
 13237                           ;putch@txData stored from wreg
 13238  003DC2  6E06               	movwf	putch@txData^0,c
 13239  003DC4                     
 13240                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 13241  003DC4  5006               	movf	putch@txData^0,w,c
 13242  003DC6  EC32  F01B         	call	_EUSART2_Write
 13243  003DCA  0012               	return		;funcret
 13244  003DCC                     __end_of_putch:
 13245                           	opt callstack 0
 13246                           
 13247 ;; *************** function _EUSART2_Write *****************
 13248 ;; Defined at:
 13249 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;  txData          1    wreg     unsigned char 
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;  txData          1    4[COMRAM] unsigned char 
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      void 
 13256 ;; Registers used:
 13257 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13267 ;;Total ram usage:        1 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    4
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_putch
 13274 ;;		_ReadRX232
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           	psect	text71
 13279  003664                     __ptext71:
 13280                           	opt callstack 0
 13281  003664                     _EUSART2_Write:
 13282                           	opt callstack 18
 13283                           
 13284                           ;incstack = 0
 13285                           ;EUSART2_Write@txData stored from wreg
 13286  003664  6E05               	movwf	EUSART2_Write@txData^0,c
 13287  003666                     l5759:
 13288                           
 13289                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 13290  003666  0100               	movlb	0	; () banked
 13291  003668  51BC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 13292  00366A  B4D8               	btfsc	status,2,c
 13293  00366C  EF3A  F01B         	goto	u5111
 13294  003670  EF3C  F01B         	goto	u5110
 13295  003674                     u5111:
 13296  003674  EF33  F01B         	goto	l5759
 13297  003678                     u5110:
 13298  003678                     
 13299                           ; BSR set to: 0
 13300                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 13301  003678  010E               	movlb	14	; () banked
 13302  00367A  BDC5               	btfsc	197,6,b	;volatile
 13303  00367C  EF42  F01B         	goto	u5121
 13304  003680  EF44  F01B         	goto	u5120
 13305  003684                     u5121:
 13306  003684  EF48  F01B         	goto	l321
 13307  003688                     u5120:
 13308  003688                     
 13309                           ; BSR set to: 14
 13310                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 13311  003688  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 13312                           
 13313                           ;mcc_generated_files/eusart2.c: 184:     }
 13314  00368C  EF5E  F01B         	goto	l5773
 13315  003690                     l321:
 13316                           
 13317                           ; BSR set to: 14
 13318                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 13319  003690  9DC5               	bcf	197,6,b	;volatile
 13320  003692                     
 13321                           ; BSR set to: 14
 13322                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 13323  003692  0E84               	movlw	low _eusart2TxBuffer
 13324  003694  0100               	movlb	0	; () banked
 13325  003696  25BA               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 13326  003698  6ED9               	movwf	fsr2l,c
 13327  00369A  6ADA               	clrf	fsr2h,c
 13328  00369C  0E02               	movlw	high _eusart2TxBuffer
 13329  00369E  22DA               	addwfc	fsr2h,f,c
 13330  0036A0  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 13331  0036A4                     
 13332                           ; BSR set to: 0
 13333  0036A4  2BBA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 13334  0036A6                     
 13335                           ; BSR set to: 0
 13336                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 13337  0036A6  0E1F               	movlw	31
 13338  0036A8  65BA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 13339  0036AA  EF59  F01B         	goto	u5131
 13340  0036AE  EF5B  F01B         	goto	u5130
 13341  0036B2                     u5131:
 13342  0036B2  EF5D  F01B         	goto	l5771
 13343  0036B6                     u5130:
 13344  0036B6                     
 13345                           ; BSR set to: 0
 13346                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 13347  0036B6  0E00               	movlw	0
 13348  0036B8  6FBA               	movwf	_eusart2TxHead& (0+255),b	;volatile
 13349  0036BA                     l5771:
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 13353  0036BA  07BC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13354  0036BC                     l5773:
 13355                           
 13356                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 13357  0036BC  010E               	movlb	14	; () banked
 13358  0036BE  8DC5               	bsf	197,6,b	;volatile
 13359  0036C0                     
 13360                           ; BSR set to: 14
 13361  0036C0  0012               	return		;funcret
 13362  0036C2                     __end_of_EUSART2_Write:
 13363                           	opt callstack 0
 13364                           
 13365 ;; *************** function _abs *****************
 13366 ;; Defined at:
 13367 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;  a               2   22[COMRAM] int 
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;		None
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  2   22[COMRAM] int 
 13374 ;; Registers used:
 13375 ;;		wreg, status,2, status,0
 13376 ;; Tracked objects:
 13377 ;;		On entry : 0/0
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;Total ram usage:        4 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; Hardware stack levels required when called:    4
 13388 ;; This function calls:
 13389 ;;		Nothing
 13390 ;; This function is called by:
 13391 ;;		_dtoa
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           	psect	text72
 13396  003A0A                     __ptext72:
 13397                           	opt callstack 0
 13398  003A0A                     _abs:
 13399                           	opt callstack 22
 13400  003A0A  BE18               	btfsc	(abs@a+1)^0,7,c
 13401  003A0C  EF12  F01D         	goto	u5270
 13402  003A10  5018               	movf	(abs@a+1)^0,w,c
 13403  003A12  E106               	bnz	u5271
 13404  003A14  0417               	decf	abs@a^0,w,c
 13405  003A16  B0D8               	btfsc	status,0,c
 13406  003A18  EF10  F01D         	goto	u5271
 13407  003A1C  EF12  F01D         	goto	u5270
 13408  003A20                     u5271:
 13409  003A20  EF20  F01D         	goto	l1804
 13410  003A24                     u5270:
 13411  003A24  C017  F019         	movff	abs@a,??_abs
 13412  003A28  C018  F01A         	movff	abs@a+1,??_abs+1
 13413  003A2C  1E19               	comf	??_abs^0,f,c
 13414  003A2E  1E1A               	comf	(??_abs+1)^0,f,c
 13415  003A30  4A19               	infsnz	??_abs^0,f,c
 13416  003A32  2A1A               	incf	(??_abs+1)^0,f,c
 13417  003A34  C019  F017         	movff	??_abs,?_abs
 13418  003A38  C01A  F018         	movff	??_abs+1,?_abs+1
 13419  003A3C  EF24  F01D         	goto	l1807
 13420  003A40                     l1804:
 13421  003A40  C017  F017         	movff	abs@a,?_abs
 13422  003A44  C018  F018         	movff	abs@a+1,?_abs+1
 13423  003A48                     l1807:
 13424  003A48  0012               	return		;funcret
 13425  003A4A                     __end_of_abs:
 13426                           	opt callstack 0
 13427                           
 13428 ;; *************** function ___aomod *****************
 13429 ;; Defined at:
 13430 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;  dividend        8    4[COMRAM] long long 
 13433 ;;  divisor         8   12[COMRAM] long long 
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;  sign            1   21[COMRAM] unsigned char 
 13436 ;;  counter         1   20[COMRAM] unsigned char 
 13437 ;; Return value:  Size  Location     Type
 13438 ;;                  8    4[COMRAM] long long 
 13439 ;; Registers used:
 13440 ;;		wreg, status,2, status,0
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13446 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13449 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13450 ;;Total ram usage:       18 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; Hardware stack levels required when called:    4
 13453 ;; This function calls:
 13454 ;;		Nothing
 13455 ;; This function is called by:
 13456 ;;		_dtoa
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text73
 13461  001FA8                     __ptext73:
 13462                           	opt callstack 0
 13463  001FA8                     ___aomod:
 13464                           	opt callstack 22
 13465  001FA8  0E00               	movlw	0
 13466  001FAA  6E16               	movwf	___aomod@sign^0,c
 13467  001FAC  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 13468  001FAE  EFDD  F00F         	goto	u5440
 13469  001FB2  EFDB  F00F         	goto	u5441
 13470  001FB6                     u5441:
 13471  001FB6  EFEF  F00F         	goto	l5919
 13472  001FBA                     u5440:
 13473  001FBA  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 13474  001FBC  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 13475  001FBE  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 13476  001FC0  1E09               	comf	(___aomod@dividend+4)^0,f,c
 13477  001FC2  1E08               	comf	(___aomod@dividend+3)^0,f,c
 13478  001FC4  1E07               	comf	(___aomod@dividend+2)^0,f,c
 13479  001FC6  1E06               	comf	(___aomod@dividend+1)^0,f,c
 13480  001FC8  6C05               	negf	___aomod@dividend^0,c
 13481  001FCA  0E00               	movlw	0
 13482  001FCC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 13483  001FCE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 13484  001FD0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 13485  001FD2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 13486  001FD4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 13487  001FD6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 13488  001FD8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 13489  001FDA  0E01               	movlw	1
 13490  001FDC  6E16               	movwf	___aomod@sign^0,c
 13491  001FDE                     l5919:
 13492  001FDE  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 13493  001FE0  EFF6  F00F         	goto	u5450
 13494  001FE4  EFF4  F00F         	goto	u5451
 13495  001FE8                     u5451:
 13496  001FE8  EF06  F010         	goto	l5923
 13497  001FEC                     u5450:
 13498  001FEC  1E14               	comf	(___aomod@divisor+7)^0,f,c
 13499  001FEE  1E13               	comf	(___aomod@divisor+6)^0,f,c
 13500  001FF0  1E12               	comf	(___aomod@divisor+5)^0,f,c
 13501  001FF2  1E11               	comf	(___aomod@divisor+4)^0,f,c
 13502  001FF4  1E10               	comf	(___aomod@divisor+3)^0,f,c
 13503  001FF6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 13504  001FF8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 13505  001FFA  6C0D               	negf	___aomod@divisor^0,c
 13506  001FFC  0E00               	movlw	0
 13507  001FFE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 13508  002000  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 13509  002002  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 13510  002004  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 13511  002006  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 13512  002008  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 13513  00200A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 13514  00200C                     l5923:
 13515  00200C  500D               	movf	___aomod@divisor^0,w,c
 13516  00200E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 13517  002010  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 13518  002012  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 13519  002014  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 13520  002016  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 13521  002018  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 13522  00201A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 13523  00201C  B4D8               	btfsc	status,2,c
 13524  00201E  EF13  F010         	goto	u5461
 13525  002022  EF15  F010         	goto	u5460
 13526  002026                     u5461:
 13527  002026  EF5D  F010         	goto	l5939
 13528  00202A                     u5460:
 13529  00202A  0E01               	movlw	1
 13530  00202C  6E15               	movwf	___aomod@counter^0,c
 13531  00202E  EF23  F010         	goto	l5929
 13532  002032                     l5927:
 13533  002032  90D8               	bcf	status,0,c
 13534  002034  360D               	rlcf	___aomod@divisor^0,f,c
 13535  002036  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 13536  002038  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 13537  00203A  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 13538  00203C  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 13539  00203E  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 13540  002040  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 13541  002042  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 13542  002044  2A15               	incf	___aomod@counter^0,f,c
 13543  002046                     l5929:
 13544  002046  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 13545  002048  EF28  F010         	goto	u5471
 13546  00204C  EF2A  F010         	goto	u5470
 13547  002050                     u5471:
 13548  002050  EF19  F010         	goto	l5927
 13549  002054                     u5470:
 13550  002054                     l5931:
 13551  002054  500D               	movf	___aomod@divisor^0,w,c
 13552  002056  5C05               	subwf	___aomod@dividend^0,w,c
 13553  002058  500E               	movf	(___aomod@divisor+1)^0,w,c
 13554  00205A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 13555  00205C  500F               	movf	(___aomod@divisor+2)^0,w,c
 13556  00205E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 13557  002060  5010               	movf	(___aomod@divisor+3)^0,w,c
 13558  002062  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 13559  002064  5011               	movf	(___aomod@divisor+4)^0,w,c
 13560  002066  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 13561  002068  5012               	movf	(___aomod@divisor+5)^0,w,c
 13562  00206A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 13563  00206C  5013               	movf	(___aomod@divisor+6)^0,w,c
 13564  00206E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 13565  002070  5014               	movf	(___aomod@divisor+7)^0,w,c
 13566  002072  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 13567  002074  A0D8               	btfss	status,0,c
 13568  002076  EF3F  F010         	goto	u5481
 13569  00207A  EF41  F010         	goto	u5480
 13570  00207E                     u5481:
 13571  00207E  EF51  F010         	goto	l5935
 13572  002082                     u5480:
 13573  002082  500D               	movf	___aomod@divisor^0,w,c
 13574  002084  5E05               	subwf	___aomod@dividend^0,f,c
 13575  002086  500E               	movf	(___aomod@divisor+1)^0,w,c
 13576  002088  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 13577  00208A  500F               	movf	(___aomod@divisor+2)^0,w,c
 13578  00208C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 13579  00208E  5010               	movf	(___aomod@divisor+3)^0,w,c
 13580  002090  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 13581  002092  5011               	movf	(___aomod@divisor+4)^0,w,c
 13582  002094  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 13583  002096  5012               	movf	(___aomod@divisor+5)^0,w,c
 13584  002098  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 13585  00209A  5013               	movf	(___aomod@divisor+6)^0,w,c
 13586  00209C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 13587  00209E  5014               	movf	(___aomod@divisor+7)^0,w,c
 13588  0020A0  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 13589  0020A2                     l5935:
 13590  0020A2  90D8               	bcf	status,0,c
 13591  0020A4  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 13592  0020A6  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 13593  0020A8  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 13594  0020AA  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 13595  0020AC  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 13596  0020AE  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 13597  0020B0  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 13598  0020B2  320D               	rrcf	___aomod@divisor^0,f,c
 13599  0020B4  2E15               	decfsz	___aomod@counter^0,f,c
 13600  0020B6  EF2A  F010         	goto	l5931
 13601  0020BA                     l5939:
 13602  0020BA  5016               	movf	___aomod@sign^0,w,c
 13603  0020BC  B4D8               	btfsc	status,2,c
 13604  0020BE  EF63  F010         	goto	u5491
 13605  0020C2  EF65  F010         	goto	u5490
 13606  0020C6                     u5491:
 13607  0020C6  EF75  F010         	goto	l5943
 13608  0020CA                     u5490:
 13609  0020CA  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 13610  0020CC  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 13611  0020CE  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 13612  0020D0  1E09               	comf	(___aomod@dividend+4)^0,f,c
 13613  0020D2  1E08               	comf	(___aomod@dividend+3)^0,f,c
 13614  0020D4  1E07               	comf	(___aomod@dividend+2)^0,f,c
 13615  0020D6  1E06               	comf	(___aomod@dividend+1)^0,f,c
 13616  0020D8  6C05               	negf	___aomod@dividend^0,c
 13617  0020DA  0E00               	movlw	0
 13618  0020DC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 13619  0020DE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 13620  0020E0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 13621  0020E2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 13622  0020E4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 13623  0020E6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 13624  0020E8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 13625  0020EA                     l5943:
 13626  0020EA  C005  F005         	movff	___aomod@dividend,?___aomod
 13627  0020EE  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 13628  0020F2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 13629  0020F6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 13630  0020FA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 13631  0020FE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 13632  002102  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 13633  002106  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 13634  00210A  0012               	return		;funcret
 13635  00210C                     __end_of___aomod:
 13636                           	opt callstack 0
 13637                           
 13638 ;; *************** function ___aodiv *****************
 13639 ;; Defined at:
 13640 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13641 ;; Parameters:    Size  Location     Type
 13642 ;;  dividend        8    4[COMRAM] long long 
 13643 ;;  divisor         8   12[COMRAM] long long 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  quotient        8   22[COMRAM] long long 
 13646 ;;  sign            1   21[COMRAM] unsigned char 
 13647 ;;  counter         1   20[COMRAM] unsigned char 
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  8    4[COMRAM] long long 
 13650 ;; Registers used:
 13651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13657 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13658 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13660 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13661 ;;Total ram usage:       26 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:    4
 13664 ;; This function calls:
 13665 ;;		Nothing
 13666 ;; This function is called by:
 13667 ;;		_dtoa
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text74
 13672  001E20                     __ptext74:
 13673                           	opt callstack 0
 13674  001E20                     ___aodiv:
 13675                           	opt callstack 22
 13676  001E20  0E00               	movlw	0
 13677  001E22  6E16               	movwf	___aodiv@sign^0,c
 13678  001E24  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 13679  001E26  EF19  F00F         	goto	u5370
 13680  001E2A  EF17  F00F         	goto	u5371
 13681  001E2E                     u5371:
 13682  001E2E  EF2B  F00F         	goto	l5875
 13683  001E32                     u5370:
 13684  001E32  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 13685  001E34  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 13686  001E36  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 13687  001E38  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 13688  001E3A  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 13689  001E3C  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 13690  001E3E  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 13691  001E40  6C0D               	negf	___aodiv@divisor^0,c
 13692  001E42  0E00               	movlw	0
 13693  001E44  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 13694  001E46  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 13695  001E48  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 13696  001E4A  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 13697  001E4C  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 13698  001E4E  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 13699  001E50  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 13700  001E52  0E01               	movlw	1
 13701  001E54  6E16               	movwf	___aodiv@sign^0,c
 13702  001E56                     l5875:
 13703  001E56  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 13704  001E58  EF32  F00F         	goto	u5380
 13705  001E5C  EF30  F00F         	goto	u5381
 13706  001E60                     u5381:
 13707  001E60  EF44  F00F         	goto	l5881
 13708  001E64                     u5380:
 13709  001E64  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 13710  001E66  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 13711  001E68  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 13712  001E6A  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 13713  001E6C  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 13714  001E6E  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 13715  001E70  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 13716  001E72  6C05               	negf	___aodiv@dividend^0,c
 13717  001E74  0E00               	movlw	0
 13718  001E76  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 13719  001E78  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 13720  001E7A  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 13721  001E7C  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 13722  001E7E  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 13723  001E80  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 13724  001E82  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 13725  001E84  0E01               	movlw	1
 13726  001E86  1A16               	xorwf	___aodiv@sign^0,f,c
 13727  001E88                     l5881:
 13728  001E88  EE20  F017         	lfsr	2,___aodiv@quotient
 13729  001E8C  0E07               	movlw	7
 13730  001E8E                     u5391:
 13731  001E8E  6ADE               	clrf	postinc2,c
 13732  001E90  06E8               	decf	wreg,f,c
 13733  001E92  E2FD               	bc	u5391
 13734  001E94  500D               	movf	___aodiv@divisor^0,w,c
 13735  001E96  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 13736  001E98  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 13737  001E9A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 13738  001E9C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 13739  001E9E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 13740  001EA0  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 13741  001EA2  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 13742  001EA4  B4D8               	btfsc	status,2,c
 13743  001EA6  EF57  F00F         	goto	u5401
 13744  001EAA  EF59  F00F         	goto	u5400
 13745  001EAE                     u5401:
 13746  001EAE  EFAB  F00F         	goto	l5903
 13747  001EB2                     u5400:
 13748  001EB2  0E01               	movlw	1
 13749  001EB4  6E15               	movwf	___aodiv@counter^0,c
 13750  001EB6  EF67  F00F         	goto	l5889
 13751  001EBA                     l5887:
 13752  001EBA  90D8               	bcf	status,0,c
 13753  001EBC  360D               	rlcf	___aodiv@divisor^0,f,c
 13754  001EBE  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 13755  001EC0  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 13756  001EC2  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 13757  001EC4  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 13758  001EC6  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 13759  001EC8  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 13760  001ECA  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 13761  001ECC  2A15               	incf	___aodiv@counter^0,f,c
 13762  001ECE                     l5889:
 13763  001ECE  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 13764  001ED0  EF6C  F00F         	goto	u5411
 13765  001ED4  EF6E  F00F         	goto	u5410
 13766  001ED8                     u5411:
 13767  001ED8  EF5D  F00F         	goto	l5887
 13768  001EDC                     u5410:
 13769  001EDC                     l5891:
 13770  001EDC  90D8               	bcf	status,0,c
 13771  001EDE  3617               	rlcf	___aodiv@quotient^0,f,c
 13772  001EE0  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 13773  001EE2  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 13774  001EE4  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 13775  001EE6  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 13776  001EE8  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 13777  001EEA  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 13778  001EEC  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 13779  001EEE  500D               	movf	___aodiv@divisor^0,w,c
 13780  001EF0  5C05               	subwf	___aodiv@dividend^0,w,c
 13781  001EF2  500E               	movf	(___aodiv@divisor+1)^0,w,c
 13782  001EF4  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 13783  001EF6  500F               	movf	(___aodiv@divisor+2)^0,w,c
 13784  001EF8  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 13785  001EFA  5010               	movf	(___aodiv@divisor+3)^0,w,c
 13786  001EFC  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 13787  001EFE  5011               	movf	(___aodiv@divisor+4)^0,w,c
 13788  001F00  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 13789  001F02  5012               	movf	(___aodiv@divisor+5)^0,w,c
 13790  001F04  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 13791  001F06  5013               	movf	(___aodiv@divisor+6)^0,w,c
 13792  001F08  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 13793  001F0A  5014               	movf	(___aodiv@divisor+7)^0,w,c
 13794  001F0C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 13795  001F0E  A0D8               	btfss	status,0,c
 13796  001F10  EF8C  F00F         	goto	u5421
 13797  001F14  EF8E  F00F         	goto	u5420
 13798  001F18                     u5421:
 13799  001F18  EF9F  F00F         	goto	l5899
 13800  001F1C                     u5420:
 13801  001F1C  500D               	movf	___aodiv@divisor^0,w,c
 13802  001F1E  5E05               	subwf	___aodiv@dividend^0,f,c
 13803  001F20  500E               	movf	(___aodiv@divisor+1)^0,w,c
 13804  001F22  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 13805  001F24  500F               	movf	(___aodiv@divisor+2)^0,w,c
 13806  001F26  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 13807  001F28  5010               	movf	(___aodiv@divisor+3)^0,w,c
 13808  001F2A  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 13809  001F2C  5011               	movf	(___aodiv@divisor+4)^0,w,c
 13810  001F2E  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 13811  001F30  5012               	movf	(___aodiv@divisor+5)^0,w,c
 13812  001F32  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 13813  001F34  5013               	movf	(___aodiv@divisor+6)^0,w,c
 13814  001F36  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 13815  001F38  5014               	movf	(___aodiv@divisor+7)^0,w,c
 13816  001F3A  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 13817  001F3C  8017               	bsf	___aodiv@quotient^0,0,c
 13818  001F3E                     l5899:
 13819  001F3E  90D8               	bcf	status,0,c
 13820  001F40  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 13821  001F42  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 13822  001F44  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 13823  001F46  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 13824  001F48  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 13825  001F4A  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 13826  001F4C  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 13827  001F4E  320D               	rrcf	___aodiv@divisor^0,f,c
 13828  001F50  2E15               	decfsz	___aodiv@counter^0,f,c
 13829  001F52  EF6E  F00F         	goto	l5891
 13830  001F56                     l5903:
 13831  001F56  5016               	movf	___aodiv@sign^0,w,c
 13832  001F58  B4D8               	btfsc	status,2,c
 13833  001F5A  EFB1  F00F         	goto	u5431
 13834  001F5E  EFB3  F00F         	goto	u5430
 13835  001F62                     u5431:
 13836  001F62  EFC3  F00F         	goto	l5907
 13837  001F66                     u5430:
 13838  001F66  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 13839  001F68  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 13840  001F6A  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 13841  001F6C  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 13842  001F6E  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 13843  001F70  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 13844  001F72  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 13845  001F74  6C17               	negf	___aodiv@quotient^0,c
 13846  001F76  0E00               	movlw	0
 13847  001F78  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 13848  001F7A  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 13849  001F7C  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 13850  001F7E  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 13851  001F80  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 13852  001F82  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 13853  001F84  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 13854  001F86                     l5907:
 13855  001F86  C017  F005         	movff	___aodiv@quotient,?___aodiv
 13856  001F8A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 13857  001F8E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 13858  001F92  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 13859  001F96  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 13860  001F9A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 13861  001F9E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 13862  001FA2  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 13863  001FA6  0012               	return		;funcret
 13864  001FA8                     __end_of___aodiv:
 13865                           	opt callstack 0
 13866                           
 13867 ;; *************** function _atoi *****************
 13868 ;; Defined at:
 13869 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;  s               2   11[COMRAM] PTR const unsigned char 
 13872 ;;		 -> STR_55(29), STR_53(30), STR_52(24), STR_51(25), 
 13873 ;;		 -> STR_50(17), STR_49(27), STR_48(33), STR_46(36), 
 13874 ;;		 -> STR_45(67), STR_44(19), STR_43(29), STR_42(55), 
 13875 ;;		 -> STR_41(17), STR_40(16), STR_39(4), STR_38(34), 
 13876 ;;		 -> STR_37(54), STR_36(52), STR_35(28), STR_32(42), 
 13877 ;;		 -> STR_31(22), STR_30(19), STR_29(61), STR_28(18), 
 13878 ;;		 -> STR_27(24), STR_26(33), STR_25(16), STR_24(24), 
 13879 ;;		 -> STR_23(4), STR_22(22), STR_21(28), STR_20(28), 
 13880 ;;		 -> STR_19(18), STR_18(15), STR_17(15), STR_16(15), 
 13881 ;;		 -> STR_15(13), STR_14(11), STR_13(11), STR_12(14), 
 13882 ;;		 -> STR_11(36), STR_10(4), STR_9(23), STR_8(32), 
 13883 ;;		 -> STR_7(28), STR_6(54), STR_5(24), STR_4(16), 
 13884 ;;		 -> STR_2(28), STR_1(21), 
 13885 ;; Auto vars:     Size  Location     Type
 13886 ;;  n               2   24[COMRAM] int 
 13887 ;;  neg             2   17[COMRAM] int 
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  2   11[COMRAM] int 
 13890 ;; Registers used:
 13891 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13898 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13900 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13901 ;;Total ram usage:       15 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; Hardware stack levels required when called:    5
 13904 ;; This function calls:
 13905 ;;		___wmul
 13906 ;;		_isdigit
 13907 ;;		_isspace
 13908 ;; This function is called by:
 13909 ;;		_vfpfcnvrt
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text75
 13914  001C86                     __ptext75:
 13915                           	opt callstack 0
 13916  001C86                     _atoi:
 13917                           	opt callstack 22
 13918  001C86  0E00               	movlw	0
 13919  001C88  6E1A               	movwf	(atoi@n+1)^0,c
 13920  001C8A  0E00               	movlw	0
 13921  001C8C  6E19               	movwf	atoi@n^0,c
 13922  001C8E  0E00               	movlw	0
 13923  001C90  6E13               	movwf	(atoi@neg+1)^0,c
 13924  001C92  0E00               	movlw	0
 13925  001C94  6E12               	movwf	atoi@neg^0,c
 13926  001C96  EF4F  F00E         	goto	l6207
 13927  001C9A                     l6205:
 13928  001C9A  4A0C               	infsnz	atoi@s^0,f,c
 13929  001C9C  2A0D               	incf	(atoi@s+1)^0,f,c
 13930  001C9E                     l6207:
 13931  001C9E  0E01               	movlw	1
 13932  001CA0  6E18               	movwf	_atoi$2033^0,c
 13933  001CA2  C00C  FFF6         	movff	atoi@s,tblptrl
 13934  001CA6  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13935  001CAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13936  001CAA  6AF8               	clrf	tblptru,c
 13937  001CAC                     	endif
 13938  001CAC                     	if	0	;tblptru may be non-zero
 13939  001CAC                     	endif
 13940  001CAC  0008               	tblrd		*
 13941  001CAE  50F5               	movf	tablat,w,c
 13942  001CB0  0A20               	xorlw	32
 13943  001CB2  B4D8               	btfsc	status,2,c
 13944  001CB4  EF5E  F00E         	goto	u6081
 13945  001CB8  EF60  F00E         	goto	u6080
 13946  001CBC                     u6081:
 13947  001CBC  EF7E  F00E         	goto	l6215
 13948  001CC0                     u6080:
 13949  001CC0  0EF7               	movlw	247
 13950  001CC2  6E0E               	movwf	??_atoi^0,c
 13951  001CC4  0EFF               	movlw	255
 13952  001CC6  6E0F               	movwf	(??_atoi+1)^0,c
 13953  001CC8  C00C  FFF6         	movff	atoi@s,tblptrl
 13954  001CCC  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13955  001CD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13956  001CD0  6AF8               	clrf	tblptru,c
 13957  001CD2                     	endif
 13958  001CD2                     	if	0	;tblptru may be non-zero
 13959  001CD2                     	endif
 13960  001CD2  0008               	tblrd		*
 13961  001CD4  50F5               	movf	tablat,w,c
 13962  001CD6  6E10               	movwf	(??_atoi+2)^0,c
 13963  001CD8  6A11               	clrf	(??_atoi+3)^0,c
 13964  001CDA  500E               	movf	??_atoi^0,w,c
 13965  001CDC  2610               	addwf	(??_atoi+2)^0,f,c
 13966  001CDE  500F               	movf	(??_atoi+1)^0,w,c
 13967  001CE0  2211               	addwfc	(??_atoi+3)^0,f,c
 13968  001CE2  5011               	movf	(??_atoi+3)^0,w,c
 13969  001CE4  E109               	bnz	u6090
 13970  001CE6  0E05               	movlw	5
 13971  001CE8  5C10               	subwf	(??_atoi+2)^0,w,c
 13972  001CEA  A0D8               	btfss	status,0,c
 13973  001CEC  EF7A  F00E         	goto	u6091
 13974  001CF0  EF7C  F00E         	goto	u6090
 13975  001CF4                     u6091:
 13976  001CF4  EF7E  F00E         	goto	l6215
 13977  001CF8                     u6090:
 13978  001CF8  0E00               	movlw	0
 13979  001CFA  6E18               	movwf	_atoi$2033^0,c
 13980  001CFC                     l6215:
 13981  001CFC  C018  F014         	movff	_atoi$2033,_atoi$2032
 13982  001D00  6A15               	clrf	(_atoi$2032+1)^0,c
 13983  001D02  5014               	movf	_atoi$2032^0,w,c
 13984  001D04  1015               	iorwf	(_atoi$2032+1)^0,w,c
 13985  001D06  A4D8               	btfss	status,2,c
 13986  001D08  EF88  F00E         	goto	u6101
 13987  001D0C  EF8A  F00E         	goto	u6100
 13988  001D10                     u6101:
 13989  001D10  EF4D  F00E         	goto	l6205
 13990  001D14                     u6100:
 13991  001D14  EF94  F00E         	goto	l6225
 13992  001D18                     l6221:
 13993  001D18  0E00               	movlw	0
 13994  001D1A  6E13               	movwf	(atoi@neg+1)^0,c
 13995  001D1C  0E01               	movlw	1
 13996  001D1E  6E12               	movwf	atoi@neg^0,c
 13997  001D20                     l6223:
 13998  001D20  4A0C               	infsnz	atoi@s^0,f,c
 13999  001D22  2A0D               	incf	(atoi@s+1)^0,f,c
 14000  001D24  EFCB  F00E         	goto	l6231
 14001  001D28                     l6225:
 14002  001D28  C00C  FFF6         	movff	atoi@s,tblptrl
 14003  001D2C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14004  001D30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14005  001D30  6AF8               	clrf	tblptru,c
 14006  001D32                     	endif
 14007  001D32                     	if	0	;tblptru may be non-zero
 14008  001D32                     	endif
 14009  001D32  0008               	tblrd		*
 14010  001D34  50F5               	movf	tablat,w,c
 14011  001D36  6E0E               	movwf	??_atoi^0,c
 14012  001D38  6A0F               	clrf	(??_atoi+1)^0,c
 14013                           
 14014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14015                           ; Switch size 1, requested type "simple"
 14016                           ; Number of cases is 1, Range of values is 0 to 0
 14017                           ; switch strategies available:
 14018                           ; Name         Instructions Cycles
 14019                           ; simple_byte            4     3 (average)
 14020                           ;	Chosen strategy is simple_byte
 14021  001D3A  500F               	movf	(??_atoi+1)^0,w,c
 14022  001D3C  0A00               	xorlw	0	; case 0
 14023  001D3E  B4D8               	btfsc	status,2,c
 14024  001D40  EFA4  F00E         	goto	l7261
 14025  001D44  EFCB  F00E         	goto	l6231
 14026  001D48                     l7261:
 14027                           
 14028                           ; Switch size 1, requested type "simple"
 14029                           ; Number of cases is 2, Range of values is 43 to 45
 14030                           ; switch strategies available:
 14031                           ; Name         Instructions Cycles
 14032                           ; simple_byte            7     4 (average)
 14033                           ;	Chosen strategy is simple_byte
 14034  001D48  500E               	movf	??_atoi^0,w,c
 14035  001D4A  0A2B               	xorlw	43	; case 43
 14036  001D4C  B4D8               	btfsc	status,2,c
 14037  001D4E  EF90  F00E         	goto	l6223
 14038  001D52  0A06               	xorlw	6	; case 45
 14039  001D54  B4D8               	btfsc	status,2,c
 14040  001D56  EF8C  F00E         	goto	l6221
 14041  001D5A  EFCB  F00E         	goto	l6231
 14042  001D5E                     l6227:
 14043  001D5E  C019  F005         	movff	atoi@n,___wmul@multiplier
 14044  001D62  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 14045  001D66  0E00               	movlw	0
 14046  001D68  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 14047  001D6A  0E0A               	movlw	10
 14048  001D6C  6E07               	movwf	___wmul@multiplicand^0,c
 14049  001D6E  EC24  F01E         	call	___wmul	;wreg free
 14050  001D72  C00C  FFF6         	movff	atoi@s,tblptrl
 14051  001D76  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14052  001D7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14053  001D7A  6AF8               	clrf	tblptru,c
 14054  001D7C                     	endif
 14055  001D7C                     	if	0	;tblptru may be non-zero
 14056  001D7C                     	endif
 14057  001D7C  0008               	tblrd		*
 14058  001D7E  50F5               	movf	tablat,w,c
 14059  001D80  5E05               	subwf	?___wmul^0,f,c
 14060  001D82  0E00               	movlw	0
 14061  001D84  5A06               	subwfb	(?___wmul+1)^0,f,c
 14062  001D86  0E30               	movlw	48
 14063  001D88  2405               	addwf	?___wmul^0,w,c
 14064  001D8A  6E19               	movwf	atoi@n^0,c
 14065  001D8C  0E00               	movlw	0
 14066  001D8E  2006               	addwfc	(?___wmul+1)^0,w,c
 14067  001D90  6E1A               	movwf	(atoi@n+1)^0,c
 14068  001D92  EF90  F00E         	goto	l6223
 14069  001D96                     l6231:
 14070  001D96  0ED0               	movlw	208
 14071  001D98  6E0E               	movwf	??_atoi^0,c
 14072  001D9A  0EFF               	movlw	255
 14073  001D9C  6E0F               	movwf	(??_atoi+1)^0,c
 14074  001D9E  C00C  FFF6         	movff	atoi@s,tblptrl
 14075  001DA2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14076  001DA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14077  001DA6  6AF8               	clrf	tblptru,c
 14078  001DA8                     	endif
 14079  001DA8                     	if	0	;tblptru may be non-zero
 14080  001DA8                     	endif
 14081  001DA8  0008               	tblrd		*
 14082  001DAA  50F5               	movf	tablat,w,c
 14083  001DAC  6E10               	movwf	(??_atoi+2)^0,c
 14084  001DAE  6A11               	clrf	(??_atoi+3)^0,c
 14085  001DB0  500E               	movf	??_atoi^0,w,c
 14086  001DB2  2610               	addwf	(??_atoi+2)^0,f,c
 14087  001DB4  500F               	movf	(??_atoi+1)^0,w,c
 14088  001DB6  2211               	addwfc	(??_atoi+3)^0,f,c
 14089  001DB8  5011               	movf	(??_atoi+3)^0,w,c
 14090  001DBA  E10A               	bnz	u6110
 14091  001DBC  0E0A               	movlw	10
 14092  001DBE  5C10               	subwf	(??_atoi+2)^0,w,c
 14093  001DC0  A0D8               	btfss	status,0,c
 14094  001DC2  EFE5  F00E         	goto	u6111
 14095  001DC6  EFE8  F00E         	goto	u6110
 14096  001DCA                     u6111:
 14097  001DCA  0E01               	movlw	1
 14098  001DCC  EFE9  F00E         	goto	u6120
 14099  001DD0                     u6110:
 14100  001DD0  0E00               	movlw	0
 14101  001DD2                     u6120:
 14102  001DD2  6E16               	movwf	_atoi$2034^0,c
 14103  001DD4  6A17               	clrf	(_atoi$2034+1)^0,c
 14104  001DD6  5016               	movf	_atoi$2034^0,w,c
 14105  001DD8  1017               	iorwf	(_atoi$2034+1)^0,w,c
 14106  001DDA  A4D8               	btfss	status,2,c
 14107  001DDC  EFF2  F00E         	goto	u6131
 14108  001DE0  EFF4  F00E         	goto	u6130
 14109  001DE4                     u6131:
 14110  001DE4  EFAF  F00E         	goto	l6227
 14111  001DE8                     u6130:
 14112  001DE8  5012               	movf	atoi@neg^0,w,c
 14113  001DEA  1013               	iorwf	(atoi@neg+1)^0,w,c
 14114  001DEC  A4D8               	btfss	status,2,c
 14115  001DEE  EFFB  F00E         	goto	u6141
 14116  001DF2  EFFD  F00E         	goto	u6140
 14117  001DF6                     u6141:
 14118  001DF6  EF0B  F00F         	goto	l1835
 14119  001DFA                     u6140:
 14120  001DFA  C019  F00E         	movff	atoi@n,??_atoi
 14121  001DFE  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 14122  001E02  1E0E               	comf	??_atoi^0,f,c
 14123  001E04  1E0F               	comf	(??_atoi+1)^0,f,c
 14124  001E06  4A0E               	infsnz	??_atoi^0,f,c
 14125  001E08  2A0F               	incf	(??_atoi+1)^0,f,c
 14126  001E0A  C00E  F00C         	movff	??_atoi,?_atoi
 14127  001E0E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 14128  001E12  EF0F  F00F         	goto	l1838
 14129  001E16                     l1835:
 14130  001E16  C019  F00C         	movff	atoi@n,?_atoi
 14131  001E1A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 14132  001E1E                     l1838:
 14133  001E1E  0012               	return		;funcret
 14134  001E20                     __end_of_atoi:
 14135                           	opt callstack 0
 14136                           
 14137 ;; *************** function _isspace *****************
 14138 ;; Defined at:
 14139 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  c               2    4[COMRAM] int 
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  2    4[COMRAM] int 
 14146 ;; Registers used:
 14147 ;;		wreg, status,2, status,0
 14148 ;; Tracked objects:
 14149 ;;		On entry : 0/0
 14150 ;;		On exit  : 0/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14157 ;;Total ram usage:        7 bytes
 14158 ;; Hardware stack levels used:    1
 14159 ;; Hardware stack levels required when called:    4
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		_atoi
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text76
 14168  003772                     __ptext76:
 14169                           	opt callstack 0
 14170  003772                     _isspace:
 14171                           	opt callstack 22
 14172  003772  0E01               	movlw	1
 14173  003774  6E0B               	movwf	_isspace$2059^0,c
 14174  003776  0E20               	movlw	32
 14175  003778  1805               	xorwf	isspace@c^0,w,c
 14176  00377A  1006               	iorwf	(isspace@c+1)^0,w,c
 14177  00377C  B4D8               	btfsc	status,2,c
 14178  00377E  EFC3  F01B         	goto	u5571
 14179  003782  EFC5  F01B         	goto	u5570
 14180  003786                     u5571:
 14181  003786  EFDE  F01B         	goto	l5993
 14182  00378A                     u5570:
 14183  00378A  0EF7               	movlw	247
 14184  00378C  6E07               	movwf	??_isspace^0,c
 14185  00378E  0EFF               	movlw	255
 14186  003790  6E08               	movwf	(??_isspace+1)^0,c
 14187  003792  C005  F009         	movff	isspace@c,??_isspace+2
 14188  003796  C006  F00A         	movff	isspace@c+1,??_isspace+3
 14189  00379A  5007               	movf	??_isspace^0,w,c
 14190  00379C  2609               	addwf	(??_isspace+2)^0,f,c
 14191  00379E  5008               	movf	(??_isspace+1)^0,w,c
 14192  0037A0  220A               	addwfc	(??_isspace+3)^0,f,c
 14193  0037A2  500A               	movf	(??_isspace+3)^0,w,c
 14194  0037A4  E109               	bnz	u5580
 14195  0037A6  0E05               	movlw	5
 14196  0037A8  5C09               	subwf	(??_isspace+2)^0,w,c
 14197  0037AA  A0D8               	btfss	status,0,c
 14198  0037AC  EFDA  F01B         	goto	u5581
 14199  0037B0  EFDC  F01B         	goto	u5580
 14200  0037B4                     u5581:
 14201  0037B4  EFDE  F01B         	goto	l5993
 14202  0037B8                     u5580:
 14203  0037B8  0E00               	movlw	0
 14204  0037BA  6E0B               	movwf	_isspace$2059^0,c
 14205  0037BC                     l5993:
 14206  0037BC  C00B  F005         	movff	_isspace$2059,?_isspace
 14207  0037C0  6A06               	clrf	(?_isspace+1)^0,c
 14208  0037C2  0012               	return		;funcret
 14209  0037C4                     __end_of_isspace:
 14210                           	opt callstack 0
 14211                           
 14212 ;; *************** function _isdigit *****************
 14213 ;; Defined at:
 14214 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  c               2    4[COMRAM] int 
 14217 ;; Auto vars:     Size  Location     Type
 14218 ;;		None
 14219 ;; Return value:  Size  Location     Type
 14220 ;;                  2    4[COMRAM] int 
 14221 ;; Registers used:
 14222 ;;		wreg, status,2, status,0
 14223 ;; Tracked objects:
 14224 ;;		On entry : 0/0
 14225 ;;		On exit  : 0/0
 14226 ;;		Unchanged: 0/0
 14227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14230 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14231 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14232 ;;Total ram usage:        6 bytes
 14233 ;; Hardware stack levels used:    1
 14234 ;; Hardware stack levels required when called:    4
 14235 ;; This function calls:
 14236 ;;		Nothing
 14237 ;; This function is called by:
 14238 ;;		_vfpfcnvrt
 14239 ;;		_atoi
 14240 ;; This function uses a non-reentrant model
 14241 ;;
 14242                           
 14243                           	psect	text77
 14244  003B6A                     __ptext77:
 14245                           	opt callstack 0
 14246  003B6A                     _isdigit:
 14247                           	opt callstack 23
 14248  003B6A  0ED0               	movlw	208
 14249  003B6C  6E07               	movwf	??_isdigit^0,c
 14250  003B6E  0EFF               	movlw	255
 14251  003B70  6E08               	movwf	(??_isdigit+1)^0,c
 14252  003B72  C005  F009         	movff	isdigit@c,??_isdigit+2
 14253  003B76  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 14254  003B7A  5007               	movf	??_isdigit^0,w,c
 14255  003B7C  2609               	addwf	(??_isdigit+2)^0,f,c
 14256  003B7E  5008               	movf	(??_isdigit+1)^0,w,c
 14257  003B80  220A               	addwfc	(??_isdigit+3)^0,f,c
 14258  003B82  500A               	movf	(??_isdigit+3)^0,w,c
 14259  003B84  E10A               	bnz	u5350
 14260  003B86  0E0A               	movlw	10
 14261  003B88  5C09               	subwf	(??_isdigit+2)^0,w,c
 14262  003B8A  A0D8               	btfss	status,0,c
 14263  003B8C  EFCA  F01D         	goto	u5351
 14264  003B90  EFCD  F01D         	goto	u5350
 14265  003B94                     u5351:
 14266  003B94  0E01               	movlw	1
 14267  003B96  EFCE  F01D         	goto	u5360
 14268  003B9A                     u5350:
 14269  003B9A  0E00               	movlw	0
 14270  003B9C                     u5360:
 14271  003B9C  6E05               	movwf	?_isdigit^0,c
 14272  003B9E  6A06               	clrf	(?_isdigit+1)^0,c
 14273  003BA0  0012               	return		;funcret
 14274  003BA2                     __end_of_isdigit:
 14275                           	opt callstack 0
 14276                           
 14277 ;; *************** function ___wmul *****************
 14278 ;; Defined at:
 14279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;  multiplier      2    4[COMRAM] unsigned int 
 14282 ;;  multiplicand    2    6[COMRAM] unsigned int 
 14283 ;; Auto vars:     Size  Location     Type
 14284 ;;  product         2    8[COMRAM] unsigned int 
 14285 ;; Return value:  Size  Location     Type
 14286 ;;                  2    4[COMRAM] unsigned int 
 14287 ;; Registers used:
 14288 ;;		wreg, status,2, status,0, prodl, prodh
 14289 ;; Tracked objects:
 14290 ;;		On entry : 0/0
 14291 ;;		On exit  : 0/0
 14292 ;;		Unchanged: 0/0
 14293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14298 ;;Total ram usage:        6 bytes
 14299 ;; Hardware stack levels used:    1
 14300 ;; Hardware stack levels required when called:    4
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		_atoi
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text78
 14309  003C48                     __ptext78:
 14310                           	opt callstack 0
 14311  003C48                     ___wmul:
 14312                           	opt callstack 22
 14313  003C48  5005               	movf	___wmul@multiplier^0,w,c
 14314  003C4A  0207               	mulwf	___wmul@multiplicand^0,c
 14315  003C4C  CFF3 F009          	movff	prodl,___wmul@product
 14316  003C50  CFF4 F00A          	movff	prodh,___wmul@product+1
 14317  003C54  5005               	movf	___wmul@multiplier^0,w,c
 14318  003C56  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 14319  003C58  50F3               	movf	243,w,c
 14320  003C5A  260A               	addwf	(___wmul@product+1)^0,f,c
 14321  003C5C  5006               	movf	(___wmul@multiplier+1)^0,w,c
 14322  003C5E  0207               	mulwf	___wmul@multiplicand^0,c
 14323  003C60  50F3               	movf	243,w,c
 14324  003C62  260A               	addwf	(___wmul@product+1)^0,f,c
 14325  003C64  C009  F005         	movff	___wmul@product,?___wmul
 14326  003C68  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 14327  003C6C  0012               	return		;funcret
 14328  003C6E                     __end_of___wmul:
 14329                           	opt callstack 0
 14330                           
 14331 ;; *************** function _EUSART2_is_tx_ready *****************
 14332 ;; Defined at:
 14333 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;		None
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;		None
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  1    wreg      _Bool 
 14340 ;; Registers used:
 14341 ;;		wreg, status,2
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14351 ;;Total ram usage:        0 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    4
 14354 ;; This function calls:
 14355 ;;		Nothing
 14356 ;; This function is called by:
 14357 ;;		_PrintModRespon
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text79
 14362  003D1C                     __ptext79:
 14363                           	opt callstack 0
 14364  003D1C                     _EUSART2_is_tx_ready:
 14365                           	opt callstack 25
 14366  003D1C                     
 14367                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 14368  003D1C  0100               	movlb	0	; () banked
 14369  003D1E  51BC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 14370  003D20  A4D8               	btfss	status,2,c
 14371  003D22  EF95  F01E         	goto	u3921
 14372  003D26  EF98  F01E         	goto	u3920
 14373  003D2A                     u3921:
 14374  003D2A  0E01               	movlw	1
 14375  003D2C  EF99  F01E         	goto	u3930
 14376  003D30                     u3920:
 14377  003D30  0E00               	movlw	0
 14378  003D32                     u3930:
 14379  003D32                     
 14380                           ; BSR set to: 0
 14381  003D32  0012               	return		;funcret
 14382  003D34                     __end_of_EUSART2_is_tx_ready:
 14383                           	opt callstack 0
 14384                           
 14385 ;; *************** function _EUSART2_is_tx_done *****************
 14386 ;; Defined at:
 14387 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 14388 ;; Parameters:    Size  Location     Type
 14389 ;;		None
 14390 ;; Auto vars:     Size  Location     Type
 14391 ;;		None
 14392 ;; Return value:  Size  Location     Type
 14393 ;;                  1    wreg      _Bool 
 14394 ;; Registers used:
 14395 ;;		wreg
 14396 ;; Tracked objects:
 14397 ;;		On entry : 0/0
 14398 ;;		On exit  : 0/0
 14399 ;;		Unchanged: 0/0
 14400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14405 ;;Total ram usage:        0 bytes
 14406 ;; Hardware stack levels used:    1
 14407 ;; Hardware stack levels required when called:    4
 14408 ;; This function calls:
 14409 ;;		Nothing
 14410 ;; This function is called by:
 14411 ;;		_PrintModRespon
 14412 ;; This function uses a non-reentrant model
 14413 ;;
 14414                           
 14415                           	psect	text80
 14416  003D34                     __ptext80:
 14417                           	opt callstack 0
 14418  003D34                     _EUSART2_is_tx_done:
 14419                           	opt callstack 25
 14420  003D34                     
 14421                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 14422  003D34  010E               	movlb	14	; () banked
 14423  003D36  B39E               	btfsc	158,1,b	;volatile
 14424  003D38  EFA0  F01E         	goto	u3941
 14425  003D3C  EFA3  F01E         	goto	u3940
 14426  003D40                     u3941:
 14427  003D40  0E01               	movlw	1
 14428  003D42  EFA4  F01E         	goto	u3946
 14429  003D46                     u3940:
 14430  003D46  0E00               	movlw	0
 14431  003D48                     u3946:
 14432  003D48                     
 14433                           ; BSR set to: 14
 14434  003D48  0012               	return		;funcret
 14435  003D4A                     __end_of_EUSART2_is_tx_done:
 14436                           	opt callstack 0
 14437                           
 14438 ;; *************** function _ClearModbusRespon *****************
 14439 ;; Defined at:
 14440 ;;		line 402 in file "Modbus.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;  i               2    4[COMRAM] int 
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;Total ram usage:        2 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; Hardware stack levels required when called:    4
 14461 ;; This function calls:
 14462 ;;		Nothing
 14463 ;; This function is called by:
 14464 ;;		_main
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           	psect	text81
 14469  003814                     __ptext81:
 14470                           	opt callstack 0
 14471  003814                     _ClearModbusRespon:
 14472                           	opt callstack 26
 14473  003814                     
 14474                           ;Modbus.c: 403:     int i = 0;
 14475  003814  0E00               	movlw	0
 14476  003816  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 14477  003818  0E00               	movlw	0
 14478  00381A  6E05               	movwf	ClearModbusRespon@i^0,c
 14479                           
 14480                           ;Modbus.c: 404:     for(i=0; i<32; i++ ){
 14481  00381C  0E00               	movlw	0
 14482  00381E  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 14483  003820  0E00               	movlw	0
 14484  003822  6E05               	movwf	ClearModbusRespon@i^0,c
 14485  003824                     l5243:
 14486                           
 14487                           ;Modbus.c: 405:         MBRespon[i] = 0xFFFF;
 14488  003824  90D8               	bcf	status,0,c
 14489  003826  3405               	rlcf	ClearModbusRespon@i^0,w,c
 14490  003828  6ED9               	movwf	fsr2l,c
 14491  00382A  3406               	rlcf	(ClearModbusRespon@i+1)^0,w,c
 14492  00382C  6EDA               	movwf	fsr2h,c
 14493  00382E  0E41               	movlw	low _MBRespon
 14494  003830  26D9               	addwf	fsr2l,f,c
 14495  003832  0E01               	movlw	high _MBRespon
 14496  003834  22DA               	addwfc	fsr2h,f,c
 14497  003836  0EFF               	movlw	255
 14498  003838  6EDE               	movwf	postinc2,c
 14499  00383A  0EFF               	movlw	255
 14500  00383C  6EDD               	movwf	postdec2,c
 14501  00383E                     
 14502                           ;Modbus.c: 406:     }
 14503  00383E  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 14504  003840  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 14505  003842  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 14506  003844  EF2D  F01C         	goto	u4651
 14507  003848  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 14508  00384A  E109               	bnz	u4650
 14509  00384C  0E20               	movlw	32
 14510  00384E  5C05               	subwf	ClearModbusRespon@i^0,w,c
 14511  003850  A0D8               	btfss	status,0,c
 14512  003852  EF2D  F01C         	goto	u4651
 14513  003856  EF2F  F01C         	goto	u4650
 14514  00385A                     u4651:
 14515  00385A  EF12  F01C         	goto	l5243
 14516  00385E                     u4650:
 14517  00385E  0012               	return		;funcret
 14518  003860                     __end_of_ClearModbusRespon:
 14519                           	opt callstack 0
 14520                           
 14521 ;; *************** function _ClearModbusData *****************
 14522 ;; Defined at:
 14523 ;;		line 62 in file "Modbus.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;		None
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  i               2    4[COMRAM] int 
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14541 ;;Total ram usage:        2 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    4
 14544 ;; This function calls:
 14545 ;;		Nothing
 14546 ;; This function is called by:
 14547 ;;		_main
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text82
 14552  003860                     __ptext82:
 14553                           	opt callstack 0
 14554  003860                     _ClearModbusData:
 14555                           	opt callstack 26
 14556  003860                     
 14557                           ;Modbus.c: 63:     int i = 0;
 14558  003860  0E00               	movlw	0
 14559  003862  6E06               	movwf	(ClearModbusData@i+1)^0,c
 14560  003864  0E00               	movlw	0
 14561  003866  6E05               	movwf	ClearModbusData@i^0,c
 14562                           
 14563                           ;Modbus.c: 64:     for(i=0; i<99; i++ ){
 14564  003868  0E00               	movlw	0
 14565  00386A  6E06               	movwf	(ClearModbusData@i+1)^0,c
 14566  00386C  0E00               	movlw	0
 14567  00386E  6E05               	movwf	ClearModbusData@i^0,c
 14568  003870                     l5481:
 14569                           
 14570                           ;Modbus.c: 65:         ModbusData[i] = 0xFF;
 14571  003870  0E00               	movlw	low _ModbusData
 14572  003872  2405               	addwf	ClearModbusData@i^0,w,c
 14573  003874  6ED9               	movwf	fsr2l,c
 14574  003876  0E02               	movlw	high _ModbusData
 14575  003878  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 14576  00387A  6EDA               	movwf	fsr2h,c
 14577  00387C  0EFF               	movlw	255
 14578  00387E  6EDF               	movwf	indf2,c
 14579  003880                     
 14580                           ;Modbus.c: 66:     }
 14581  003880  4A05               	infsnz	ClearModbusData@i^0,f,c
 14582  003882  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 14583  003884  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 14584  003886  EF4E  F01C         	goto	u4861
 14585  00388A  5006               	movf	(ClearModbusData@i+1)^0,w,c
 14586  00388C  E109               	bnz	u4860
 14587  00388E  0E63               	movlw	99
 14588  003890  5C05               	subwf	ClearModbusData@i^0,w,c
 14589  003892  A0D8               	btfss	status,0,c
 14590  003894  EF4E  F01C         	goto	u4861
 14591  003898  EF50  F01C         	goto	u4860
 14592  00389C                     u4861:
 14593  00389C  EF38  F01C         	goto	l5481
 14594  0038A0                     u4860:
 14595  0038A0                     
 14596                           ;Modbus.c: 68:     ModDataCnt = 0;
 14597  0038A0  0E00               	movlw	0
 14598  0038A2  0100               	movlb	0	; () banked
 14599  0038A4  6FAE               	movwf	(_ModDataCnt+1)& (0+255),b
 14600  0038A6  0E00               	movlw	0
 14601  0038A8  6FAD               	movwf	_ModDataCnt& (0+255),b
 14602  0038AA                     
 14603                           ; BSR set to: 0
 14604  0038AA  0012               	return		;funcret
 14605  0038AC                     __end_of_ClearModbusData:
 14606                           	opt callstack 0
 14607                           
 14608 ;; *************** function _INTERRUPT_InterruptManager *****************
 14609 ;; Defined at:
 14610 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;		None
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;		None
 14615 ;; Return value:  Size  Location     Type
 14616 ;;                  1    wreg      void 
 14617 ;; Registers used:
 14618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14619 ;; Tracked objects:
 14620 ;;		On entry : 0/0
 14621 ;;		On exit  : 0/0
 14622 ;;		Unchanged: 0/0
 14623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14628 ;;Total ram usage:        4 bytes
 14629 ;; Hardware stack levels used:    1
 14630 ;; Hardware stack levels required when called:    3
 14631 ;; This function calls:
 14632 ;;		Absolute function
 14633 ;;		_EUSART1_Receive_ISR
 14634 ;;		_EUSART1_Transmit_ISR
 14635 ;;		_EUSART2_Receive_ISR
 14636 ;;		_EUSART2_Transmit_ISR
 14637 ;; This function is called by:
 14638 ;;		Interrupt level 2
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	intcode
 14643  000008                     __pintcode:
 14644                           	opt callstack 0
 14645  000008                     _INTERRUPT_InterruptManager:
 14646                           	opt callstack 15
 14647                           
 14648                           ; BSR set to: 0
 14649                           ;incstack = 0
 14650  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14651  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 14652  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14653  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14654  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14655  00001A                     
 14656                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 14657  00001A  ACF2               	btfss	242,6,c	;volatile
 14658  00001C  EF12  F000         	goto	i2u495_41
 14659  000020  EF14  F000         	goto	i2u495_40
 14660  000024                     i2u495_41:
 14661  000024  EF89  F000         	goto	i2l159
 14662  000028                     i2u495_40:
 14663  000028                     
 14664                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 14665  000028  010E               	movlb	14	; () banked
 14666  00002A  ADC5               	btfss	197,6,b	;volatile
 14667  00002C  EF1A  F000         	goto	i2u496_41
 14668  000030  EF1C  F000         	goto	i2u496_40
 14669  000034                     i2u496_41:
 14670  000034  EF32  F000         	goto	i2l150
 14671  000038                     i2u496_40:
 14672  000038                     
 14673                           ; BSR set to: 14
 14674  000038  ADCD               	btfss	205,6,b	;volatile
 14675  00003A  EF21  F000         	goto	i2u497_41
 14676  00003E  EF23  F000         	goto	i2u497_40
 14677  000042                     i2u497_41:
 14678  000042  EF32  F000         	goto	i2l150
 14679  000046                     i2u497_40:
 14680  000046                     
 14681                           ; BSR set to: 14
 14682                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 14683  000046  D802               	call	i2u498_48
 14684  000048  EF30  F000         	goto	i2u498_49
 14685  00004C                     i2u498_48:
 14686  00004C  0005               	push	
 14687  00004E  6EFA               	movwf	pclath,c
 14688  000050  0101               	movlb	1	; () banked
 14689  000052  51F6               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 14690  000054  6EFD               	movwf	tosl,c
 14691  000056  51F7               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 14692  000058  6EFE               	movwf	tosh,c
 14693  00005A  6AFF               	clrf	tosu,c
 14694  00005C  50FA               	movf	pclath,w,c
 14695  00005E  0012               	return		;indir
 14696  000060                     i2u498_49:
 14697                           
 14698                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 14699  000060  EF89  F000         	goto	i2l159
 14700  000064                     i2l150:
 14701                           
 14702                           ; BSR set to: 14
 14703  000064  AFC5               	btfss	197,7,b	;volatile
 14704  000066  EF37  F000         	goto	i2u499_41
 14705  00006A  EF39  F000         	goto	i2u499_40
 14706  00006E                     i2u499_41:
 14707  00006E  EF4F  F000         	goto	i2l152
 14708  000072                     i2u499_40:
 14709  000072                     
 14710                           ; BSR set to: 14
 14711  000072  AFCD               	btfss	205,7,b	;volatile
 14712  000074  EF3E  F000         	goto	i2u500_41
 14713  000078  EF40  F000         	goto	i2u500_40
 14714  00007C                     i2u500_41:
 14715  00007C  EF4F  F000         	goto	i2l152
 14716  000080                     i2u500_40:
 14717  000080                     
 14718                           ; BSR set to: 14
 14719                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 14720  000080  D802               	call	i2u501_48
 14721  000082  EF4D  F000         	goto	i2u501_49
 14722  000086                     i2u501_48:
 14723  000086  0005               	push	
 14724  000088  6EFA               	movwf	pclath,c
 14725  00008A  0101               	movlb	1	; () banked
 14726  00008C  51F4               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 14727  00008E  6EFD               	movwf	tosl,c
 14728  000090  51F5               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 14729  000092  6EFE               	movwf	tosh,c
 14730  000094  6AFF               	clrf	tosu,c
 14731  000096  50FA               	movf	pclath,w,c
 14732  000098  0012               	return		;indir
 14733  00009A                     i2u501_49:
 14734                           
 14735                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 14736  00009A  EF89  F000         	goto	i2l159
 14737  00009E                     i2l152:
 14738                           
 14739                           ; BSR set to: 14
 14740  00009E  A9C5               	btfss	197,4,b	;volatile
 14741  0000A0  EF54  F000         	goto	i2u502_41
 14742  0000A4  EF56  F000         	goto	i2u502_40
 14743  0000A8                     i2u502_41:
 14744  0000A8  EF6C  F000         	goto	i2l154
 14745  0000AC                     i2u502_40:
 14746  0000AC                     
 14747                           ; BSR set to: 14
 14748  0000AC  A9CD               	btfss	205,4,b	;volatile
 14749  0000AE  EF5B  F000         	goto	i2u503_41
 14750  0000B2  EF5D  F000         	goto	i2u503_40
 14751  0000B6                     i2u503_41:
 14752  0000B6  EF6C  F000         	goto	i2l154
 14753  0000BA                     i2u503_40:
 14754  0000BA                     
 14755                           ; BSR set to: 14
 14756                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 14757  0000BA  D802               	call	i2u504_48
 14758  0000BC  EF6A  F000         	goto	i2u504_49
 14759  0000C0                     i2u504_48:
 14760  0000C0  0005               	push	
 14761  0000C2  6EFA               	movwf	pclath,c
 14762  0000C4  0101               	movlb	1	; () banked
 14763  0000C6  51F2               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 14764  0000C8  6EFD               	movwf	tosl,c
 14765  0000CA  51F3               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 14766  0000CC  6EFE               	movwf	tosh,c
 14767  0000CE  6AFF               	clrf	tosu,c
 14768  0000D0  50FA               	movf	pclath,w,c
 14769  0000D2  0012               	return		;indir
 14770  0000D4                     i2u504_49:
 14771                           
 14772                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 14773  0000D4  EF89  F000         	goto	i2l159
 14774  0000D8                     i2l154:
 14775                           
 14776                           ; BSR set to: 14
 14777  0000D8  ABC5               	btfss	197,5,b	;volatile
 14778  0000DA  EF71  F000         	goto	i2u505_41
 14779  0000DE  EF73  F000         	goto	i2u505_40
 14780  0000E2                     i2u505_41:
 14781  0000E2  EF89  F000         	goto	i2l153
 14782  0000E6                     i2u505_40:
 14783  0000E6                     
 14784                           ; BSR set to: 14
 14785  0000E6  ABCD               	btfss	205,5,b	;volatile
 14786  0000E8  EF78  F000         	goto	i2u506_41
 14787  0000EC  EF7A  F000         	goto	i2u506_40
 14788  0000F0                     i2u506_41:
 14789  0000F0  EF89  F000         	goto	i2l153
 14790  0000F4                     i2u506_40:
 14791  0000F4                     
 14792                           ; BSR set to: 14
 14793                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 14794  0000F4  D802               	call	i2u507_48
 14795  0000F6  EF87  F000         	goto	i2u507_49
 14796  0000FA                     i2u507_48:
 14797  0000FA  0005               	push	
 14798  0000FC  6EFA               	movwf	pclath,c
 14799  0000FE  0101               	movlb	1	; () banked
 14800  000100  51F0               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 14801  000102  6EFD               	movwf	tosl,c
 14802  000104  51F1               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 14803  000106  6EFE               	movwf	tosh,c
 14804  000108  6AFF               	clrf	tosu,c
 14805  00010A  50FA               	movf	pclath,w,c
 14806  00010C  0012               	return		;indir
 14807  00010E                     i2u507_49:
 14808                           
 14809                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 14810  00010E  EF89  F000         	goto	i2l159
 14811  000112                     i2l153:
 14812  000112                     i2l159:
 14813  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14814  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14815  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14816  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14817  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14818  000124  0011               	retfie		f
 14819  000126                     __end_of_INTERRUPT_InterruptManager:
 14820                           	opt callstack 0
 14821                           
 14822 ;; *************** function _EUSART2_Transmit_ISR *****************
 14823 ;; Defined at:
 14824 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;		None
 14827 ;; Auto vars:     Size  Location     Type
 14828 ;;		None
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  1    wreg      void 
 14831 ;; Registers used:
 14832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14833 ;; Tracked objects:
 14834 ;;		On entry : 0/0
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14842 ;;Total ram usage:        0 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; This function calls:
 14845 ;;		Nothing
 14846 ;; This function is called by:
 14847 ;;		_EUSART2_Initialize
 14848 ;;		_INTERRUPT_InterruptManager
 14849 ;; This function uses a non-reentrant model
 14850 ;;
 14851                           
 14852                           	psect	text84
 14853  0038F6                     __ptext84:
 14854                           	opt callstack 0
 14855  0038F6                     _EUSART2_Transmit_ISR:
 14856                           	opt callstack 17
 14857  0038F6                     
 14858                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 14859  0038F6  0E20               	movlw	32
 14860  0038F8  0100               	movlb	0	; () banked
 14861  0038FA  61BC               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 14862  0038FC  EF82  F01C         	goto	i2u449_41
 14863  003900  EF84  F01C         	goto	i2u449_40
 14864  003904                     i2u449_41:
 14865  003904  EF9C  F01C         	goto	i2l333
 14866  003908                     i2u449_40:
 14867  003908                     
 14868                           ; BSR set to: 0
 14869                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 14870  003908  0E84               	movlw	low _eusart2TxBuffer
 14871  00390A  25B9               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 14872  00390C  6ED9               	movwf	fsr2l,c
 14873  00390E  6ADA               	clrf	fsr2h,c
 14874  003910  0E02               	movlw	high _eusart2TxBuffer
 14875  003912  22DA               	addwfc	fsr2h,f,c
 14876  003914  50DF               	movf	indf2,w,c
 14877  003916  010E               	movlb	14	; () banked
 14878  003918  6F9A               	movwf	154,b	;volatile
 14879  00391A                     
 14880                           ; BSR set to: 14
 14881  00391A  0100               	movlb	0	; () banked
 14882  00391C  2BB9               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 14883  00391E                     
 14884                           ; BSR set to: 0
 14885                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 14886  00391E  0E1F               	movlw	31
 14887  003920  65B9               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 14888  003922  EF95  F01C         	goto	i2u450_41
 14889  003926  EF97  F01C         	goto	i2u450_40
 14890  00392A                     i2u450_41:
 14891  00392A  EF99  F01C         	goto	i2l5183
 14892  00392E                     i2u450_40:
 14893  00392E                     
 14894                           ; BSR set to: 0
 14895                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 14896  00392E  0E00               	movlw	0
 14897  003930  6FB9               	movwf	_eusart2TxTail& (0+255),b	;volatile
 14898  003932                     i2l5183:
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 14902  003932  2BBC               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14903                           
 14904                           ;mcc_generated_files/eusart2.c: 220:     }
 14905  003934  EF9E  F01C         	goto	i2l336
 14906  003938                     i2l333:
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 14910  003938  010E               	movlb	14	; () banked
 14911  00393A  9DC5               	bcf	197,6,b	;volatile
 14912  00393C                     i2l336:
 14913  00393C  0012               	return		;funcret
 14914  00393E                     __end_of_EUSART2_Transmit_ISR:
 14915                           	opt callstack 0
 14916                           
 14917 ;; *************** function _EUSART2_Receive_ISR *****************
 14918 ;; Defined at:
 14919 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 14920 ;; Parameters:    Size  Location     Type
 14921 ;;		None
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;		None
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  1    wreg      void 
 14926 ;; Registers used:
 14927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/0
 14930 ;;		On exit  : 0/0
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14937 ;;Total ram usage:        0 bytes
 14938 ;; Hardware stack levels used:    1
 14939 ;; Hardware stack levels required when called:    2
 14940 ;; This function calls:
 14941 ;;		Absolute function
 14942 ;;		_EUSART2_DefaultErrorHandler
 14943 ;;		_EUSART2_DefaultFramingErrorHandler
 14944 ;;		_EUSART2_DefaultOverrunErrorHandler
 14945 ;;		_EUSART2_RxDataHandler
 14946 ;; This function is called by:
 14947 ;;		_EUSART2_Initialize
 14948 ;;		_INTERRUPT_InterruptManager
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           	psect	text85
 14953  002CA0                     __ptext85:
 14954                           	opt callstack 0
 14955  002CA0                     _EUSART2_Receive_ISR:
 14956                           	opt callstack 15
 14957  002CA0                     
 14958                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 14959  002CA0  0E81               	movlw	low _eusart2RxStatusBuffer
 14960  002CA2  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14961  002CA4  6ED9               	movwf	fsr2l,c
 14962  002CA6  6ADA               	clrf	fsr2h,c
 14963  002CA8  0E01               	movlw	high _eusart2RxStatusBuffer
 14964  002CAA  22DA               	addwfc	fsr2h,f,c
 14965  002CAC  0E00               	movlw	0
 14966  002CAE  6EDF               	movwf	indf2,c
 14967  002CB0                     
 14968                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 14969  002CB0  010E               	movlb	14	; () banked
 14970  002CB2  A59D               	btfss	157,2,b	;volatile
 14971  002CB4  EF5E  F016         	goto	i2u451_41
 14972  002CB8  EF60  F016         	goto	i2u451_40
 14973  002CBC                     i2u451_41:
 14974  002CBC  EF74  F016         	goto	i2l5193
 14975  002CC0                     i2u451_40:
 14976  002CC0                     
 14977                           ; BSR set to: 14
 14978                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 14979  002CC0  0E81               	movlw	low _eusart2RxStatusBuffer
 14980  002CC2  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14981  002CC4  6ED9               	movwf	fsr2l,c
 14982  002CC6  6ADA               	clrf	fsr2h,c
 14983  002CC8  0E01               	movlw	high _eusart2RxStatusBuffer
 14984  002CCA  22DA               	addwfc	fsr2h,f,c
 14985  002CCC  0101               	movlb	1	; () banked
 14986  002CCE  82DF               	bsf	indf2,1,c
 14987  002CD0                     
 14988                           ; BSR set to: 1
 14989                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 14990  002CD0  D802               	call	i2u452_48
 14991  002CD2  EF74  F016         	goto	i2u452_49
 14992  002CD6                     i2u452_48:
 14993  002CD6  0005               	push	
 14994  002CD8  6EFA               	movwf	pclath,c
 14995  002CDA  51EE               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 14996  002CDC  6EFD               	movwf	tosl,c
 14997  002CDE  51EF               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 14998  002CE0  6EFE               	movwf	tosh,c
 14999  002CE2  6AFF               	clrf	tosu,c
 15000  002CE4  50FA               	movf	pclath,w,c
 15001  002CE6  0012               	return		;indir
 15002  002CE8                     i2u452_49:
 15003  002CE8                     i2l5193:
 15004                           
 15005                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 15006  002CE8  010E               	movlb	14	; () banked
 15007  002CEA  A39D               	btfss	157,1,b	;volatile
 15008  002CEC  EF7A  F016         	goto	i2u453_41
 15009  002CF0  EF7C  F016         	goto	i2u453_40
 15010  002CF4                     i2u453_41:
 15011  002CF4  EF90  F016         	goto	i2l5199
 15012  002CF8                     i2u453_40:
 15013  002CF8                     
 15014                           ; BSR set to: 14
 15015                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 15016  002CF8  0E81               	movlw	low _eusart2RxStatusBuffer
 15017  002CFA  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15018  002CFC  6ED9               	movwf	fsr2l,c
 15019  002CFE  6ADA               	clrf	fsr2h,c
 15020  002D00  0E01               	movlw	high _eusart2RxStatusBuffer
 15021  002D02  22DA               	addwfc	fsr2h,f,c
 15022  002D04  0101               	movlb	1	; () banked
 15023  002D06  84DF               	bsf	indf2,2,c
 15024  002D08                     
 15025                           ; BSR set to: 1
 15026                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 15027  002D08  D802               	call	i2u454_48
 15028  002D0A  EF90  F016         	goto	i2u454_49
 15029  002D0E                     i2u454_48:
 15030  002D0E  0005               	push	
 15031  002D10  6EFA               	movwf	pclath,c
 15032  002D12  51EC               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 15033  002D14  6EFD               	movwf	tosl,c
 15034  002D16  51ED               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 15035  002D18  6EFE               	movwf	tosh,c
 15036  002D1A  6AFF               	clrf	tosu,c
 15037  002D1C  50FA               	movf	pclath,w,c
 15038  002D1E  0012               	return		;indir
 15039  002D20                     i2u454_49:
 15040  002D20                     i2l5199:
 15041                           
 15042                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 15043  002D20  0E81               	movlw	low _eusart2RxStatusBuffer
 15044  002D22  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15045  002D24  6ED9               	movwf	fsr2l,c
 15046  002D26  6ADA               	clrf	fsr2h,c
 15047  002D28  0E01               	movlw	high _eusart2RxStatusBuffer
 15048  002D2A  22DA               	addwfc	fsr2h,f,c
 15049  002D2C  50DF               	movf	indf2,w,c
 15050  002D2E  B4D8               	btfsc	status,2,c
 15051  002D30  EF9C  F016         	goto	i2u455_41
 15052  002D34  EF9E  F016         	goto	i2u455_40
 15053  002D38                     i2u455_41:
 15054  002D38  EFAD  F016         	goto	i2l5203
 15055  002D3C                     i2u455_40:
 15056  002D3C                     
 15057                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 15058  002D3C  D802               	call	i2u456_48
 15059  002D3E  EFAB  F016         	goto	i2u456_49
 15060  002D42                     i2u456_48:
 15061  002D42  0005               	push	
 15062  002D44  6EFA               	movwf	pclath,c
 15063  002D46  0101               	movlb	1	; () banked
 15064  002D48  51EA               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 15065  002D4A  6EFD               	movwf	tosl,c
 15066  002D4C  51EB               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 15067  002D4E  6EFE               	movwf	tosh,c
 15068  002D50  6AFF               	clrf	tosu,c
 15069  002D52  50FA               	movf	pclath,w,c
 15070  002D54  0012               	return		;indir
 15071  002D56                     i2u456_49:
 15072                           
 15073                           ;mcc_generated_files/eusart2.c: 244:     } else {
 15074  002D56  EFAF  F016         	goto	i2l343
 15075  002D5A                     i2l5203:
 15076                           
 15077                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 15078  002D5A  ECD1  F01D         	call	_EUSART2_RxDataHandler	;wreg free
 15079  002D5E                     i2l343:
 15080  002D5E  0012               	return		;funcret
 15081  002D60                     __end_of_EUSART2_Receive_ISR:
 15082                           	opt callstack 0
 15083                           
 15084 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 15085 ;; Defined at:
 15086 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;		None
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;		None
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  1    wreg      void 
 15093 ;; Registers used:
 15094 ;;		None
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15104 ;;Total ram usage:        0 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; This function calls:
 15107 ;;		Nothing
 15108 ;; This function is called by:
 15109 ;;		_EUSART2_Initialize
 15110 ;;		_EUSART2_Receive_ISR
 15111 ;; This function uses a non-reentrant model
 15112 ;;
 15113                           
 15114                           	psect	text86
 15115  003DCC                     __ptext86:
 15116                           	opt callstack 0
 15117  003DCC                     _EUSART2_DefaultOverrunErrorHandler:
 15118                           	opt callstack 16
 15119  003DCC                     
 15120                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 15121  003DCC  010E               	movlb	14	; () banked
 15122  003DCE  999D               	bcf	157,4,b	;volatile
 15123                           
 15124                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 15125  003DD0  899D               	bsf	157,4,b	;volatile
 15126  003DD2                     
 15127                           ; BSR set to: 14
 15128  003DD2  0012               	return		;funcret
 15129  003DD4                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 15130                           	opt callstack 0
 15131                           
 15132 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 15133 ;; Defined at:
 15134 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;		None
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;		None
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  1    wreg      void 
 15141 ;; Registers used:
 15142 ;;		None
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15152 ;;Total ram usage:        0 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; This function calls:
 15155 ;;		Nothing
 15156 ;; This function is called by:
 15157 ;;		_EUSART2_Initialize
 15158 ;;		_EUSART2_Receive_ISR
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text87
 15163  003DFA                     __ptext87:
 15164                           	opt callstack 0
 15165  003DFA                     _EUSART2_DefaultFramingErrorHandler:
 15166                           	opt callstack 16
 15167  003DFA  0012               	return		;funcret
 15168  003DFC                     __end_of_EUSART2_DefaultFramingErrorHandler:
 15169                           	opt callstack 0
 15170                           
 15171 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 15172 ;; Defined at:
 15173 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 15174 ;; Parameters:    Size  Location     Type
 15175 ;;		None
 15176 ;; Auto vars:     Size  Location     Type
 15177 ;;		None
 15178 ;; Return value:  Size  Location     Type
 15179 ;;                  1    wreg      void 
 15180 ;; Registers used:
 15181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15182 ;; Tracked objects:
 15183 ;;		On entry : 0/0
 15184 ;;		On exit  : 0/0
 15185 ;;		Unchanged: 0/0
 15186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15191 ;;Total ram usage:        0 bytes
 15192 ;; Hardware stack levels used:    1
 15193 ;; Hardware stack levels required when called:    1
 15194 ;; This function calls:
 15195 ;;		_EUSART2_RxDataHandler
 15196 ;; This function is called by:
 15197 ;;		_EUSART2_Initialize
 15198 ;;		_EUSART2_Receive_ISR
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text88
 15203  003DE0                     __ptext88:
 15204                           	opt callstack 0
 15205  003DE0                     _EUSART2_DefaultErrorHandler:
 15206                           	opt callstack 15
 15207  003DE0                     
 15208                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 15209  003DE0  ECD1  F01D         	call	_EUSART2_RxDataHandler	;wreg free
 15210  003DE4  0012               	return		;funcret
 15211  003DE6                     __end_of_EUSART2_DefaultErrorHandler:
 15212                           	opt callstack 0
 15213                           
 15214 ;; *************** function _EUSART2_RxDataHandler *****************
 15215 ;; Defined at:
 15216 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;		None
 15219 ;; Auto vars:     Size  Location     Type
 15220 ;;		None
 15221 ;; Return value:  Size  Location     Type
 15222 ;;                  1    wreg      void 
 15223 ;; Registers used:
 15224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15225 ;; Tracked objects:
 15226 ;;		On entry : 0/0
 15227 ;;		On exit  : 0/0
 15228 ;;		Unchanged: 0/0
 15229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15234 ;;Total ram usage:        0 bytes
 15235 ;; Hardware stack levels used:    1
 15236 ;; This function calls:
 15237 ;;		Nothing
 15238 ;; This function is called by:
 15239 ;;		_EUSART2_Receive_ISR
 15240 ;;		_EUSART2_DefaultErrorHandler
 15241 ;; This function uses a non-reentrant model
 15242 ;;
 15243                           
 15244                           	psect	text89
 15245  003BA2                     __ptext89:
 15246                           	opt callstack 0
 15247  003BA2                     _EUSART2_RxDataHandler:
 15248                           	opt callstack 16
 15249  003BA2                     
 15250                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 15251  003BA2  0E64               	movlw	low _eusart2RxBuffer
 15252  003BA4  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15253  003BA6  6ED9               	movwf	fsr2l,c
 15254  003BA8  6ADA               	clrf	fsr2h,c
 15255  003BAA  0E02               	movlw	high _eusart2RxBuffer
 15256  003BAC  22DA               	addwfc	fsr2h,f,c
 15257  003BAE  CE99 FFDF          	movff	3737,indf2	;volatile
 15258  003BB2  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 15259  003BB4                     
 15260                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 15261  003BB4  0E1F               	movlw	31
 15262  003BB6  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 15263  003BB8  EFE0  F01D         	goto	i2u395_41
 15264  003BBC  EFE2  F01D         	goto	i2u395_40
 15265  003BC0                     i2u395_41:
 15266  003BC0  EFE4  F01D         	goto	i2l4639
 15267  003BC4                     i2u395_40:
 15268  003BC4                     
 15269                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 15270  003BC4  0E00               	movlw	0
 15271  003BC6  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 15272  003BC8                     i2l4639:
 15273                           
 15274                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 15275  003BC8  0100               	movlb	0	; () banked
 15276  003BCA  2BB7               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 15277  003BCC                     
 15278                           ; BSR set to: 0
 15279  003BCC  0012               	return		;funcret
 15280  003BCE                     __end_of_EUSART2_RxDataHandler:
 15281                           	opt callstack 0
 15282                           
 15283 ;; *************** function _EUSART1_Transmit_ISR *****************
 15284 ;; Defined at:
 15285 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;		None
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;		None
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  1    wreg      void 
 15292 ;; Registers used:
 15293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15303 ;;Total ram usage:        0 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; This function calls:
 15306 ;;		Nothing
 15307 ;; This function is called by:
 15308 ;;		_EUSART1_Initialize
 15309 ;;		_INTERRUPT_InterruptManager
 15310 ;; This function uses a non-reentrant model
 15311 ;;
 15312                           
 15313                           	psect	text90
 15314  0039C6                     __ptext90:
 15315                           	opt callstack 0
 15316  0039C6                     _EUSART1_Transmit_ISR:
 15317                           	opt callstack 17
 15318  0039C6                     
 15319                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 15320  0039C6  0E10               	movlw	16
 15321  0039C8  0100               	movlb	0	; () banked
 15322  0039CA  61BB               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 15323  0039CC  EFEA  F01C         	goto	i2u457_41
 15324  0039D0  EFEC  F01C         	goto	i2u457_40
 15325  0039D4                     i2u457_41:
 15326  0039D4  EF02  F01D         	goto	i2l477
 15327  0039D8                     i2u457_40:
 15328  0039D8                     
 15329                           ; BSR set to: 0
 15330                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 15331  0039D8  0EA1               	movlw	low _eusart1TxBuffer
 15332  0039DA  25B4               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 15333  0039DC  6ED9               	movwf	fsr2l,c
 15334  0039DE  6ADA               	clrf	fsr2h,c
 15335  0039E0  0E01               	movlw	high _eusart1TxBuffer
 15336  0039E2  22DA               	addwfc	fsr2h,f,c
 15337  0039E4  50DF               	movf	indf2,w,c
 15338  0039E6  6E9A               	movwf	154,c	;volatile
 15339  0039E8                     
 15340                           ; BSR set to: 0
 15341  0039E8  2BB4               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 15342  0039EA                     
 15343                           ; BSR set to: 0
 15344                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 15345  0039EA  0E0F               	movlw	15
 15346  0039EC  65B4               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 15347  0039EE  EFFB  F01C         	goto	i2u458_41
 15348  0039F2  EFFD  F01C         	goto	i2u458_40
 15349  0039F6                     i2u458_41:
 15350  0039F6  EFFF  F01C         	goto	i2l5215
 15351  0039FA                     i2u458_40:
 15352  0039FA                     
 15353                           ; BSR set to: 0
 15354                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 15355  0039FA  0E00               	movlw	0
 15356  0039FC  6FB4               	movwf	_eusart1TxTail& (0+255),b	;volatile
 15357  0039FE                     i2l5215:
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 15361  0039FE  2BBB               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 15362                           
 15363                           ;mcc_generated_files/eusart1.c: 211:     }
 15364  003A00  EF04  F01D         	goto	i2l480
 15365  003A04                     i2l477:
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 15369  003A04  010E               	movlb	14	; () banked
 15370  003A06  99C5               	bcf	197,4,b	;volatile
 15371  003A08                     i2l480:
 15372  003A08  0012               	return		;funcret
 15373  003A0A                     __end_of_EUSART1_Transmit_ISR:
 15374                           	opt callstack 0
 15375                           
 15376 ;; *************** function _EUSART1_Receive_ISR *****************
 15377 ;; Defined at:
 15378 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;		None
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;		None
 15383 ;; Return value:  Size  Location     Type
 15384 ;;                  1    wreg      void 
 15385 ;; Registers used:
 15386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15387 ;; Tracked objects:
 15388 ;;		On entry : 0/0
 15389 ;;		On exit  : 0/0
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;Total ram usage:        0 bytes
 15397 ;; Hardware stack levels used:    1
 15398 ;; Hardware stack levels required when called:    2
 15399 ;; This function calls:
 15400 ;;		Absolute function
 15401 ;;		_EUSART1_DefaultErrorHandler
 15402 ;;		_EUSART1_DefaultFramingErrorHandler
 15403 ;;		_EUSART1_DefaultOverrunErrorHandler
 15404 ;;		_EUSART1_RxDataHandler
 15405 ;; This function is called by:
 15406 ;;		_EUSART1_Initialize
 15407 ;;		_INTERRUPT_InterruptManager
 15408 ;; This function uses a non-reentrant model
 15409 ;;
 15410                           
 15411                           	psect	text91
 15412  002D60                     __ptext91:
 15413                           	opt callstack 0
 15414  002D60                     _EUSART1_Receive_ISR:
 15415                           	opt callstack 15
 15416  002D60                     
 15417                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15418  002D60  0E80               	movlw	low _eusart1RxStatusBuffer
 15419  002D62  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15420  002D64  6ED9               	movwf	fsr2l,c
 15421  002D66  6ADA               	clrf	fsr2h,c
 15422  002D68  0E03               	movlw	high _eusart1RxStatusBuffer
 15423  002D6A  22DA               	addwfc	fsr2h,f,c
 15424  002D6C  0E00               	movlw	0
 15425  002D6E  6EDF               	movwf	indf2,c
 15426  002D70                     
 15427                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 15428  002D70  A49D               	btfss	157,2,c	;volatile
 15429  002D72  EFBD  F016         	goto	i2u459_41
 15430  002D76  EFBF  F016         	goto	i2u459_40
 15431  002D7A                     i2u459_41:
 15432  002D7A  EFD4  F016         	goto	i2l5225
 15433  002D7E                     i2u459_40:
 15434  002D7E                     
 15435                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15436  002D7E  0E80               	movlw	low _eusart1RxStatusBuffer
 15437  002D80  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15438  002D82  6ED9               	movwf	fsr2l,c
 15439  002D84  6ADA               	clrf	fsr2h,c
 15440  002D86  0E03               	movlw	high _eusart1RxStatusBuffer
 15441  002D88  22DA               	addwfc	fsr2h,f,c
 15442  002D8A  0103               	movlb	3	; () banked
 15443  002D8C  82DF               	bsf	indf2,1,c
 15444  002D8E                     
 15445                           ; BSR set to: 3
 15446                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 15447  002D8E  D802               	call	i2u460_48
 15448  002D90  EFD4  F016         	goto	i2u460_49
 15449  002D94                     i2u460_48:
 15450  002D94  0005               	push	
 15451  002D96  6EFA               	movwf	pclath,c
 15452  002D98  0101               	movlb	1	; () banked
 15453  002D9A  51E8               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 15454  002D9C  6EFD               	movwf	tosl,c
 15455  002D9E  51E9               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 15456  002DA0  6EFE               	movwf	tosh,c
 15457  002DA2  6AFF               	clrf	tosu,c
 15458  002DA4  50FA               	movf	pclath,w,c
 15459  002DA6  0012               	return		;indir
 15460  002DA8                     i2u460_49:
 15461  002DA8                     i2l5225:
 15462                           
 15463                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 15464  002DA8  A29D               	btfss	157,1,c	;volatile
 15465  002DAA  EFD9  F016         	goto	i2u461_41
 15466  002DAE  EFDB  F016         	goto	i2u461_40
 15467  002DB2                     i2u461_41:
 15468  002DB2  EFF0  F016         	goto	i2l5231
 15469  002DB6                     i2u461_40:
 15470  002DB6                     
 15471                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 15472  002DB6  0E80               	movlw	low _eusart1RxStatusBuffer
 15473  002DB8  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15474  002DBA  6ED9               	movwf	fsr2l,c
 15475  002DBC  6ADA               	clrf	fsr2h,c
 15476  002DBE  0E03               	movlw	high _eusart1RxStatusBuffer
 15477  002DC0  22DA               	addwfc	fsr2h,f,c
 15478  002DC2  0103               	movlb	3	; () banked
 15479  002DC4  84DF               	bsf	indf2,2,c
 15480  002DC6                     
 15481                           ; BSR set to: 3
 15482                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 15483  002DC6  D802               	call	i2u462_48
 15484  002DC8  EFF0  F016         	goto	i2u462_49
 15485  002DCC                     i2u462_48:
 15486  002DCC  0005               	push	
 15487  002DCE  6EFA               	movwf	pclath,c
 15488  002DD0  0101               	movlb	1	; () banked
 15489  002DD2  51E6               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 15490  002DD4  6EFD               	movwf	tosl,c
 15491  002DD6  51E7               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 15492  002DD8  6EFE               	movwf	tosh,c
 15493  002DDA  6AFF               	clrf	tosu,c
 15494  002DDC  50FA               	movf	pclath,w,c
 15495  002DDE  0012               	return		;indir
 15496  002DE0                     i2u462_49:
 15497  002DE0                     i2l5231:
 15498                           
 15499                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 15500  002DE0  0E80               	movlw	low _eusart1RxStatusBuffer
 15501  002DE2  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15502  002DE4  6ED9               	movwf	fsr2l,c
 15503  002DE6  6ADA               	clrf	fsr2h,c
 15504  002DE8  0E03               	movlw	high _eusart1RxStatusBuffer
 15505  002DEA  22DA               	addwfc	fsr2h,f,c
 15506  002DEC  50DF               	movf	indf2,w,c
 15507  002DEE  B4D8               	btfsc	status,2,c
 15508  002DF0  EFFC  F016         	goto	i2u463_41
 15509  002DF4  EFFE  F016         	goto	i2u463_40
 15510  002DF8                     i2u463_41:
 15511  002DF8  EF0D  F017         	goto	i2l5235
 15512  002DFC                     i2u463_40:
 15513  002DFC                     
 15514                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 15515  002DFC  D802               	call	i2u464_48
 15516  002DFE  EF0B  F017         	goto	i2u464_49
 15517  002E02                     i2u464_48:
 15518  002E02  0005               	push	
 15519  002E04  6EFA               	movwf	pclath,c
 15520  002E06  0101               	movlb	1	; () banked
 15521  002E08  51E4               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 15522  002E0A  6EFD               	movwf	tosl,c
 15523  002E0C  51E5               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 15524  002E0E  6EFE               	movwf	tosh,c
 15525  002E10  6AFF               	clrf	tosu,c
 15526  002E12  50FA               	movf	pclath,w,c
 15527  002E14  0012               	return		;indir
 15528  002E16                     i2u464_49:
 15529                           
 15530                           ;mcc_generated_files/eusart1.c: 235:     } else {
 15531  002E16  EF0F  F017         	goto	i2l487
 15532  002E1A                     i2l5235:
 15533                           
 15534                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 15535  002E1A  ECE7  F01D         	call	_EUSART1_RxDataHandler	;wreg free
 15536  002E1E                     i2l487:
 15537  002E1E  0012               	return		;funcret
 15538  002E20                     __end_of_EUSART1_Receive_ISR:
 15539                           	opt callstack 0
 15540                           
 15541 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 15542 ;; Defined at:
 15543 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;		None
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;		None
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  1    wreg      void 
 15550 ;; Registers used:
 15551 ;;		None
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15561 ;;Total ram usage:        0 bytes
 15562 ;; Hardware stack levels used:    1
 15563 ;; This function calls:
 15564 ;;		Nothing
 15565 ;; This function is called by:
 15566 ;;		_EUSART1_Initialize
 15567 ;;		_EUSART1_Receive_ISR
 15568 ;; This function uses a non-reentrant model
 15569 ;;
 15570                           
 15571                           	psect	text92
 15572  003DE6                     __ptext92:
 15573                           	opt callstack 0
 15574  003DE6                     _EUSART1_DefaultOverrunErrorHandler:
 15575                           	opt callstack 16
 15576  003DE6                     
 15577                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 15578  003DE6  989D               	bcf	157,4,c	;volatile
 15579                           
 15580                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 15581  003DE8  889D               	bsf	157,4,c	;volatile
 15582  003DEA  0012               	return		;funcret
 15583  003DEC                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 15584                           	opt callstack 0
 15585                           
 15586 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 15587 ;; Defined at:
 15588 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      void 
 15595 ;; Registers used:
 15596 ;;		None
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15606 ;;Total ram usage:        0 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; This function calls:
 15609 ;;		Nothing
 15610 ;; This function is called by:
 15611 ;;		_EUSART1_Initialize
 15612 ;;		_EUSART1_Receive_ISR
 15613 ;; This function uses a non-reentrant model
 15614 ;;
 15615                           
 15616                           	psect	text93
 15617  003DFC                     __ptext93:
 15618                           	opt callstack 0
 15619  003DFC                     _EUSART1_DefaultFramingErrorHandler:
 15620                           	opt callstack 16
 15621  003DFC  0012               	return		;funcret
 15622  003DFE                     __end_of_EUSART1_DefaultFramingErrorHandler:
 15623                           	opt callstack 0
 15624                           
 15625 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 15626 ;; Defined at:
 15627 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;		None
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;		None
 15632 ;; Return value:  Size  Location     Type
 15633 ;;                  1    wreg      void 
 15634 ;; Registers used:
 15635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15636 ;; Tracked objects:
 15637 ;;		On entry : 0/0
 15638 ;;		On exit  : 0/0
 15639 ;;		Unchanged: 0/0
 15640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15645 ;;Total ram usage:        0 bytes
 15646 ;; Hardware stack levels used:    1
 15647 ;; Hardware stack levels required when called:    1
 15648 ;; This function calls:
 15649 ;;		_EUSART1_RxDataHandler
 15650 ;; This function is called by:
 15651 ;;		_EUSART1_Initialize
 15652 ;;		_EUSART1_Receive_ISR
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text94
 15657  003DEC                     __ptext94:
 15658                           	opt callstack 0
 15659  003DEC                     _EUSART1_DefaultErrorHandler:
 15660                           	opt callstack 15
 15661  003DEC                     
 15662                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 15663  003DEC  ECE7  F01D         	call	_EUSART1_RxDataHandler	;wreg free
 15664  003DF0  0012               	return		;funcret
 15665  003DF2                     __end_of_EUSART1_DefaultErrorHandler:
 15666                           	opt callstack 0
 15667                           
 15668 ;; *************** function _EUSART1_RxDataHandler *****************
 15669 ;; Defined at:
 15670 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;		None
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;		None
 15675 ;; Return value:  Size  Location     Type
 15676 ;;                  1    wreg      void 
 15677 ;; Registers used:
 15678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15679 ;; Tracked objects:
 15680 ;;		On entry : 0/0
 15681 ;;		On exit  : 0/0
 15682 ;;		Unchanged: 0/0
 15683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;Total ram usage:        0 bytes
 15689 ;; Hardware stack levels used:    1
 15690 ;; This function calls:
 15691 ;;		Nothing
 15692 ;; This function is called by:
 15693 ;;		_EUSART1_Receive_ISR
 15694 ;;		_EUSART1_DefaultErrorHandler
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698                           	psect	text95
 15699  003BCE                     __ptext95:
 15700                           	opt callstack 0
 15701  003BCE                     _EUSART1_RxDataHandler:
 15702                           	opt callstack 16
 15703  003BCE                     
 15704                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 15705  003BCE  0E64               	movlw	low _eusart1RxBuffer
 15706  003BD0  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15707  003BD2  6ED9               	movwf	fsr2l,c
 15708  003BD4  6ADA               	clrf	fsr2h,c
 15709  003BD6  0E04               	movlw	high _eusart1RxBuffer
 15710  003BD8  22DA               	addwfc	fsr2h,f,c
 15711  003BDA  CF99 FFDF          	movff	3993,indf2	;volatile
 15712  003BDE  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 15713  003BE0                     
 15714                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 15715  003BE0  0E63               	movlw	99
 15716  003BE2  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 15717  003BE4  EFF6  F01D         	goto	i2u402_41
 15718  003BE8  EFF8  F01D         	goto	i2u402_40
 15719  003BEC                     i2u402_41:
 15720  003BEC  EFFA  F01D         	goto	i2l4685
 15721  003BF0                     i2u402_40:
 15722  003BF0                     
 15723                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 15724  003BF0  0E00               	movlw	0
 15725  003BF2  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 15726  003BF4                     i2l4685:
 15727                           
 15728                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 15729  003BF4  0100               	movlb	0	; () banked
 15730  003BF6  2BB2               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 15731  003BF8                     
 15732                           ; BSR set to: 0
 15733  003BF8  0012               	return		;funcret
 15734  003BFA                     __end_of_EUSART1_RxDataHandler:
 15735                           	opt callstack 0
 15736                           
 15737                           	psect	text96
 15738  000000                     __ptext96:
 15739                           	opt callstack 0
 15740  000000                     
 15741                           	psect	rparam
 15742  0000                     
 15743                           	psect	temp
 15744  00005B                     btemp:
 15745                           	opt callstack 0
 15746  00005B                     	ds	1
 15747  0000                     int$flags	set	btemp
 15748  0000                     wtemp8	set	btemp+1
 15749  0000                     ttemp5	set	btemp+1
 15750  0000                     ttemp6	set	btemp+4
 15751  0000                     ttemp7	set	btemp+8
 15752                           tosu	equ	0xFFF
 15753                           tosh	equ	0xFFE
 15754                           tosl	equ	0xFFD
 15755                           stkptr	equ	0xFFC
 15756                           pclatu	equ	0xFFB
 15757                           pclath	equ	0xFFA
 15758                           pcl	equ	0xFF9
 15759                           tblptru	equ	0xFF8
 15760                           tblptrh	equ	0xFF7
 15761                           tblptrl	equ	0xFF6
 15762                           tablat	equ	0xFF5
 15763                           prodh	equ	0xFF4
 15764                           prodl	equ	0xFF3
 15765                           indf0	equ	0xFEF
 15766                           postinc0	equ	0xFEE
 15767                           postdec0	equ	0xFED
 15768                           preinc0	equ	0xFEC
 15769                           plusw0	equ	0xFEB
 15770                           fsr0h	equ	0xFEA
 15771                           fsr0l	equ	0xFE9
 15772                           wreg	equ	0xFE8
 15773                           indf1	equ	0xFE7
 15774                           postinc1	equ	0xFE6
 15775                           postdec1	equ	0xFE5
 15776                           preinc1	equ	0xFE4
 15777                           plusw1	equ	0xFE3
 15778                           fsr1h	equ	0xFE2
 15779                           fsr1l	equ	0xFE1
 15780                           bsr	equ	0xFE0
 15781                           indf2	equ	0xFDF
 15782                           postinc2	equ	0xFDE
 15783                           postdec2	equ	0xFDD
 15784                           preinc2	equ	0xFDC
 15785                           plusw2	equ	0xFDB
 15786                           fsr2h	equ	0xFDA
 15787                           fsr2l	equ	0xFD9
 15788                           status	equ	0xFD8


Data Sizes:
    Strings     1320
    Constant    0
    Data        319
    BSS         602
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     68      96
    BANK1           256      0     248
    BANK2           256      0     235
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256     68      68
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1453(BANK5[20]), 
		 -> ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), STR_34(CODE[9]), STR_33(CODE[12]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1453(BANK5[20]), 
		 -> ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), STR_34(CODE[9]), STR_33(CODE[12]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_54(CODE[1]), STR_47(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_3(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_54(CODE[1]), STR_47(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_3(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_65(CODE[4]), STR_63(CODE[5]), STR_61(CODE[7]), STR_59(CODE[2]), 
		 -> STR_57(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_55(CODE[29]), STR_53(CODE[30]), STR_52(CODE[24]), STR_51(CODE[25]), 
		 -> STR_50(CODE[17]), STR_49(CODE[27]), STR_48(CODE[33]), STR_46(CODE[36]), 
		 -> STR_45(CODE[67]), STR_44(CODE[19]), STR_43(CODE[29]), STR_42(CODE[55]), 
		 -> STR_41(CODE[17]), STR_40(CODE[16]), STR_39(CODE[4]), STR_38(CODE[34]), 
		 -> STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), STR_32(CODE[42]), 
		 -> STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), STR_28(CODE[18]), 
		 -> STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), STR_24(CODE[24]), 
		 -> STR_23(CODE[4]), STR_22(CODE[22]), STR_21(CODE[28]), STR_20(CODE[28]), 
		 -> STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), 
		 -> STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[14]), 
		 -> STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), 
		 -> STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), 
		 -> STR_2(CODE[28]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2078_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_55(CODE[29]), STR_53(CODE[30]), STR_52(CODE[24]), STR_51(CODE[25]), 
		 -> STR_50(CODE[17]), STR_49(CODE[27]), STR_48(CODE[33]), STR_46(CODE[36]), 
		 -> STR_45(CODE[67]), STR_44(CODE[19]), STR_43(CODE[29]), STR_42(CODE[55]), 
		 -> STR_41(CODE[17]), STR_40(CODE[16]), STR_39(CODE[4]), STR_38(CODE[34]), 
		 -> STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), STR_32(CODE[42]), 
		 -> STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), STR_28(CODE[18]), 
		 -> STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), STR_24(CODE[24]), 
		 -> STR_23(CODE[4]), STR_22(CODE[22]), STR_21(CODE[28]), STR_20(CODE[28]), 
		 -> STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), 
		 -> STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[14]), 
		 -> STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), 
		 -> STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), 
		 -> STR_2(CODE[28]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_55(CODE[29]), STR_53(CODE[30]), STR_52(CODE[24]), STR_51(CODE[25]), 
		 -> STR_50(CODE[17]), STR_49(CODE[27]), STR_48(CODE[33]), STR_46(CODE[36]), 
		 -> STR_45(CODE[67]), STR_44(CODE[19]), STR_43(CODE[29]), STR_42(CODE[55]), 
		 -> STR_41(CODE[17]), STR_40(CODE[16]), STR_39(CODE[4]), STR_38(CODE[34]), 
		 -> STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), STR_32(CODE[42]), 
		 -> STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), STR_28(CODE[18]), 
		 -> STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), STR_24(CODE[24]), 
		 -> STR_23(CODE[4]), STR_22(CODE[22]), STR_21(CODE[28]), STR_20(CODE[28]), 
		 -> STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), 
		 -> STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[14]), 
		 -> STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), 
		 -> STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), 
		 -> STR_2(CODE[28]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 67
		 -> STR_55(CODE[29]), STR_53(CODE[30]), STR_52(CODE[24]), STR_51(CODE[25]), 
		 -> STR_50(CODE[17]), STR_49(CODE[27]), STR_48(CODE[33]), STR_46(CODE[36]), 
		 -> STR_45(CODE[67]), STR_44(CODE[19]), STR_43(CODE[29]), STR_42(CODE[55]), 
		 -> STR_41(CODE[17]), STR_40(CODE[16]), STR_39(CODE[4]), STR_38(CODE[34]), 
		 -> STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), STR_32(CODE[42]), 
		 -> STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), STR_28(CODE[18]), 
		 -> STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), STR_24(CODE[24]), 
		 -> STR_23(CODE[4]), STR_22(CODE[22]), STR_21(CODE[28]), STR_20(CODE[28]), 
		 -> STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), 
		 -> STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[14]), 
		 -> STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), 
		 -> STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), 
		 -> STR_2(CODE[28]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), 
		 -> STR_34(CODE[9]), STR_33(CODE[12]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), 
		 -> STR_34(CODE[9]), STR_33(CODE[12]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), 
		 -> ValidateCmd@ConfName(BANK5[20]), STR_34(CODE[9]), STR_33(CODE[12]), InitialiseString@SerialNum(BANK0[11]), 
		 -> Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    SerIni@SerialNum	PTR unsigned char  size(2) Largest target is 11
		 -> InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned int  size(2) Largest target is 64
		 -> MBRespon(BANK1[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _SerIni->_DATAEE_ReadByte
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _ValidateCmd->_SaveCardDat
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  773774
                                             65 BANK0      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  236345
                                              0 BANK5     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1061
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   37327
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  122004
                                             47 BANK0     18    10      8
                    _ClearEEAddRange
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   41823
                                             84 COMRAM     2     2      0
                                             43 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2167
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   38279
                                             84 COMRAM     2     2      0
                                             43 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    15    15      0   38401
                                             43 BANK0     13    13      0
                      _Initalisation
                             _SerIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SerIni                                              12    10      2     982
                                              6 COMRAM    12    10      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     332
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Initalisation                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   37429
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  112568
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   37772
                                             43 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   37398
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   76854
                                             45 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   37460
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   76802
                                             45 BANK0      6     6      0
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          6     4      2   39311
                                             45 BANK0      6     4      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1168
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     590
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   37429
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   37327
                                             29 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32722
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   32159
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7877
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7259
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3452
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8113
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5847
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2    1030
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _Initalisation
     _SerIni
       _DATAEE_ReadByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _Initalisation
       _SerIni
         _DATAEE_ReadByte
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_ReadByte
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     44      44      16       26.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      EB      10       91.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F8       8       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      60       5       60.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     48D       6        0.0%
DATA                 0      0     48D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 20 16:12:18 2021

                      _eusart1TxBufferRemaining 00BB                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 309E  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 3CA2                                             l124 3CEA  
                                           l212 3966                                             l214 3974  
                                           l302 3CBA                                             l127 3C88  
                                           l215 3980                                             l320 3678  
                                           l144 3DF4                                             l305 3D48  
                                           l321 3690                                             l330 3DCA  
                                           l218 3CD2                                             l315 3718  
                                           l324 36C0                                             l503 3DB6  
                                           l512 3D98                                             l506 3DAC  
                                           l362 3D7A                                             l515 3DA2  
                                           l371 3D70                                             l452 3D02  
                                           l509 3DC0                                             l365 3D8E  
                                           l470 35BC                                             l446 3220  
                                           l471 35D4                                             l455 3D5C  
                                           l703 38F4                                             l359 3D84  
                                           l800 2F7A                                             l720 3394  
                                           l368 3D66                                             l296 331C  
                                           l449 3D1A                                             l465 3770  
                                           l474 3604                                             l714 2A46  
                                           l299 3D32                                             l732 2266  
                                           l900 238A                                             l805 385E  
                                           l725 214A                                             l808 26C6  
                                           l728 2170                                             l912 329E  
                                           l681 3DDA                                             l690 3DD6  
                                           l930 1350                                             l906 3AF8  
                                           l683 3DDC                                             l923 11A8  
                                           l772 2820                                             l764 159A  
                                           l692 3DD8                                             l828 194C  
                                           l596 25B4                                             l685 3DDE  
                                           l757 0B06                                             l749 09EE  
                                           l774 2890                                             l678 34E4  
                                           l934 1AEA                                             l775 2898  
                                           l688 3DD4                                             l697 38AA  
                                           l769 27FA                                             l788 347C  
                                           l884 24A6                                             l877 3DF8  
                                           l991 2C9E                                             l889 2ECC  
                                           l986 2C22                                             l989 2C64  
                                           l997 0BA8                                             l999 0BB0  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 3D86  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 3D7C  
                                           _abs 3A0A                                             _pad 2BDE  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1040 1C84                                            l1024 1B6C  
                                          l1017 0DE6                                            l1026 1B74  
                                          l1114 06B2                                            l1035 1C34  
                                          ?_abs 0017                                            l1036 1C7C  
                                          l1060 0E20                                            l1045 15D4  
                                          l1125 3540                                            l1062 0E28  
                                          l1126 3548                                            l1055 179C  
                                          l1047 15DC                                            l1129 3C6C  
                                          l1243 1FA6                                            l1083 105A  
                                          l1085 10BC                                            l1069 0EBE  
                                          l1256 210A                                            l1099 0220  
                                          l1804 3A40                                            l1901 3C20  
                                          l1574 27B6                                            l1807 3A48  
                                          l1567 2796                                            l5031 27F2  
                                          l1584 2B16                                            l6001 0B50  
                                          l1577 2AF6                                            l1841 3AC0  
                                          l5041 281A                                            l5025 27B8  
                                          l1922 35A6                                            l1835 1E16  
                                          l6011 0BB8                                            l6003 0B70  
                                          l5051 2874                                            l5043 2826  
                                          l5027 27BC                                            l1908 3C46  
                                          l1916 3408                                            l6021 0BF0  
                                          l6013 0BCA                                            l6005 0B80  
                                          l6101 159C                                            l1861 3B68  
                                          l1933 365A                                            l5061 3422  
                                          l5053 2884                                            l5045 2838  
                                          l5037 2808                                            l5029 27D8  
                                          l1838 1E1E                                            l1847 3BA0  
                                          l1855 37C2                                            l6023 0BF6  
                                          l6031 0CE8                                            l6015 0BD8  
                                          l6007 0B82                                            l6111 160C  
                                          l6103 15AC                                            l5063 342E  
                                          l5039 280E                                            l5047 283C  
                                          l1928 3812                                            l1944 3B30  
                                          l6033 0D02                                            l6041 0D62  
                                          l6025 0C78                                            l6017 0BDE  
                                          l6009 0B9C                                            l6121 169E  
                                          l6113 1616                                            l6105 15AE  
                                          l5065 3446                                            l5057 340A  
                                          l5049 285A                                            l7001 26A2  
                                          l5161 3C8A                                            l1938 3662  
                                          l1874 2974                                            l5243 3824  
                                          l6211 1CC0                                            l6203 1C86  
                                          l6051 0DA6                                            l6043 0D74  
                                          l6035 0D20                                            l6027 0C7E  
                                          l6019 0BE6                                            l6131 1766  
                                          l6115 161C                                            l6123 1702  
                                          l6107 15C8                                            l5067 345A  
                                          l5059 340E                                            l7003 26AE  
                                          l5171 3C9E                                            l5163 3C8E  
                                          l7011 1964                                            l5245 383E  
                                          l5237 3814                                            l6221 1D18  
                                          l6213 1CF8                                            l6205 1C9A  
                                          l6053 0DAE                                            l6045 0D82  
                                          l6037 0D3A                                            l6029 0C84  
                                          l6061 1AFE                                            l6125 1714  
                                          l6133 1774                                            l6117 1692  
                                          l6109 1604                                            l6141 0DFA  
                                          l6301 0320                                            l5069 345E  
                                          l7005 26B2                                            l4621 3D86  
                                          l4613 3D68                                            l5165 3C92  
                                          l7013 198A                                            l7021 1994  
                                          l7101 24B8                                            l1886 3010  
                                          l1894 39C4                                            ?_pad 0017  
                                          l5247 3842                                            l4623 3D1C  
                                          l6231 1D96                                            l6223 1D20  
                                          l6215 1CFC                                            l6207 1C9E  
                                          l6047 0D88                                            l6055 0DBE  
                                          l6039 0D54                                            l6071 1B3C  
                                          l6063 1B06                                            l6127 1732  
                                          l6119 1698                                            l6151 0E6E  
                                          l6143 0E14                                            l6303 0332  
                                          l4615 3D5E                                            l5167 3C96  
                                          l7023 19BA                                            l7031 19C2  
                                          l7015 198E                                            l7007 194E  
                                          l7111 24C8                                            l7103 24BC  
                                          l6225 1D28                                            l6209 1CA2  
                                          l6049 0D9A                                            l6081 1BAE  
                                          l6073 1B4A                                            l6065 1B18  
                                          l6129 174C                                            l6161 0EB2  
                                          l6153 0E78                                            l6145 0E3E  
                                          l6137 0DE8                                            l6321 047A  
                                          l6313 03FE                                            l6305 0358  
                                          l4641 3D9A                                            l4801 31A6  
                                          l4617 3D7C                                            l5169 3C9A  
                                          l6401 395A                                            l7033 19E8  
                                          l7009 194E                                            l7121 2516  
                                          l7113 24DC                                            l7105 24C0  
                                          l4627 3D34                                            l6235 1DD6  
                                          l6227 1D5E                                            l6219 1D02  
                                          l6091 1C16                                            l6083 1BCC  
                                          l6067 1B20                                            l6059 1AEC  
                                          l6171 0F3E                                            l6155 0E7E  
                                          l6147 0E46                                            l6139 0DF8  
                                          l6331 0548                                            l6323 04A0  
                                          l6315 0424                                            l6307 037E  
                                          l6251 0170                                            l4651 3D04  
                                          l4643 3D90                                            l4811 31CE  
                                          l4803 31B2                                            l4619 3D72  
                                          l6411 3CC2                                            l6403 395C  
                                          l7051 1A5C                                            l7035 19FA  
                                          l7131 256E                                            l7115 24EE  
                                          l7107 24C4                                            l6237 1DE8  
                                          l6085 1BD8                                            l6077 1B96  
                                          l6069 1B34                                            l6181 0F80  
                                          l6173 0F50                                            l6165 0EF2  
                                          l6157 0E86                                            l6149 0E66  
                                          l6333 056E                                            l6325 04EA  
                                          l6317 045A                                            l6309 03C6  
                                          l6253 0174                                            l6245 012A  
                                          l4661 35AA                                            l4645 3DAE  
                                          l4821 3208                                            l4813 31D2  
                                          l4805 31C2                                            l6421 3CD0  
                                          l6413 3CC6                                            l6405 3960  
                                          l6501 232C                                            l7053 1A5C  
                                          l7061 1A86                                            l7037 19FA  
                                          l7117 24F6                                            l7125 2534  
                                          l7133 2576                                            l7109 24C8  
                                          l6239 1DFA                                            l6095 1C46  
                                          l6087 1C0E                                            l6079 1BAA  
                                          l6191 104C                                            l6167 0F04  
                                          l6175 0F64                                            l6159 0EA2  
                                          l6183 0FDE                                            l6335 0586  
                                          l6343 060C                                            l6271 01A6  
                                          l6263 019A                                            l6255 0180  
                                          l6247 0150                                            l4671 35FA  
                                          l4663 35CC                                            l4655 3D4A  
                                          l4647 3DA4                                            l4831 321C  
                                          l4823 320C                                            l4815 31D6  
                                          l4807 31C6                                            l6415 3CCA  
                                          l6407 3964                                            l6431 36C2  
                                          l6511 2374                                            l7063 1AAC  
                                          l7047 1A24                                            l7135 2598  
                                          l7119 24FE                                            l7127 2562  
                                          l5481 3870                                            l5801 3982  
                                          l6097 1C5A                                            l6089 1C12  
                                          l6193 1068                                            l6185 0FFA  
                                          l6177 0F74                                            l6361 06A0  
                                          l6345 0632                                            l6353 0660  
                                          l6337 0594                                            l6329 0522  
                                          l6257 0182                                            l6281 020E  
                                          l6249 015E                                            l4673 35FE  
                                          l4665 35D6                                            l6601 34C4  
                                          l4921 38D4                                            l4649 3DB8  
                                          l4825 3210                                            l4817 31FE  
                                          l4809 31CA                                            l4841 32C6  
                                          l4833 32A0                                            l6417 3CCC  
                                          l6409 3CBC                                            l6441 370A  
                                          l6433 36D4                                            l6425 3CA4  
                                          l6505 2338                                            l6513 2380  
                                          l7065 1ABE                                            l7049 1A4A  
                                          l7129 256A                                            l5483 3880  
                                          l5475 3860                                            l5803 398E  
                                          l6099 1C5E                                            l6195 106E  
                                          l6187 1018                                            l6179 0F7A  
                                          l6355 066E                                            l6347 0640  
                                          l6339 05D0                                            l6291 029A  
                                          l6283 022E                                            l6275 01AC  
                                          l6267 01A0                                            l6259 0194  
                                          l6451 3BFA                                            l6611 2EF2  
                                          l4667 35E8                                            l4675 3600  
                                          l4659 35AA                                            l6603 34C8  
                                          l4915 38AC                                            l4827 3214  
                                          l4819 3204                                            l4851 32E2  
                                          l4843 32CA                                            l4835 32A4  
                                          l4771 3012                                            l6419 3CCE  
                                          l6531 23F2                                            l6523 23AC  
                                          l6443 370E                                            l6435 36F4  
                                          l6507 234A                                            l7067 1ABE  
                                          l7075 1AE8                                            l7139 259C  
                                          l7091 24AE                                            l5485 3884  
                                          l7261 1D48                                            l5901 1F50  
                                          l5805 39A0                                            l5821 2C1A  
                                          l5813 2BDE                                            l6197 107E  
                                          l6189 1032                                            l6349 0654  
                                          l6293 02A8                                            l6285 0230  
                                          l6381 34E6                                            l6453 3C04  
                                          l6621 2F6E                                            l6613 2F06  
                                          l6605 2ECE                                            l4669 35EA  
                                          l4917 38C0                                            l4861 3CEC  
                                          l4829 3218                                            l4853 32EE  
                                          l4845 32CE                                            l4837 32B0  
                                          l4781 3078                                            l4773 303A  
                                          l6541 2424                                            l6533 23F6  
                                          l6525 23BA                                            l6517 238C  
                                          l6445 3712                                            l6437 36F6  
                                          l6429 36C2                                            l6461 289A  
                                          l6509 2366                                            l6701 10BE  
                                          l7093 24B0                                            l5487 38A0  
                                          l5903 1F56                                            l5911 1FA8  
                                          l5807 39A4                                            l5831 2C86  
                                          l5823 2C2E                                            l5815 2BEC  
                                          l6199 1094                                            l6295 02C8  
                                          l6287 0256                                            l6279 01B8  
                                          l6359 067A                                            l6383 34EE  
                                          l6615 2F36                                            l6607 2ECE  
                                          l6631 29B0                                            l6623 2976  
                                          l4919 38D0                                            l4871 374C  
                                          l4855 3318                                            l4847 32D2  
                                          l4839 32C0                                            l4791 3086  
                                          l4783 307A                                            l4775 304A  
                                          l6551 2496                                            l6543 2434  
                                          l6535 23FA                                            l6527 23D2  
                                          l6391 3946                                            l6447 3716  
                                          l6439 3706                                            l6463 28C0  
                                          l6471 292E                                            l6711 1120  
                                          l6703 10BE                                            l7255 254C  
                                          l7095 24B2                                            l7087 24A8  
                                          l5905 1F66                                            l5921 1FEC  
                                          l5913 1FAC                                            l5761 3688  
                                          l5825 2C42                                            l5817 2C00  
                                          l5809 3AFA                                            l6297 02D6  
                                          l6289 028C                                            l6385 34FC  
                                          l6617 2F4A                                            l6609 2EE4  
                                          l7257 07D0                                            l6641 2A26  
                                          l6633 29CE                                            l6625 298C  
                                          l4881 376A                                            l4873 374E  
                                          l4865 371A                                            l6801 183C  
                                          l4849 32D6                                            l4793 3DF2  
                                          l4785 3080                                            l4777 3074  
                                          l6545 2444                                            l6537 2408  
                                          l6529 23E2                                            l6393 394C  
                                          l6561 3282                                            l6553 3222  
                                          l6473 2940                                            l6465 28E2  
                                          l6377 354A                                            l6457 3C22  
                                          l6481 2268                                            l6721 1184  
                                          l6713 1134                                            l6705 10C6  
                                          l7097 24B4                                            l7089 24AC  
                                          l5907 1F86                                            l5931 2054  
                                          l5923 200C                                            l5915 1FBA  
                                          l5835 3A0A                                            l5771 36BA  
                                          l5763 3692                                            l5827 2C46  
                                          l5819 2C0E                                            l5843 3A86  
                                          l5851 363C                                            l7259 01E0  
                                          l6387 3522                                            l6619 2F50  
                                          l6635 29DE                                            l6627 29A8  
                                          l4883 376E                                            l4875 375E  
                                          l4867 371A                                            l6651 212E  
                                          l6811 1870                                            l6803 1850  
                                          l4787 3082                                            l4779 3076  
                                          l4795 3C6E                                            l6547 2448  
                                          l6539 240C                                            l6571 2E38  
                                          l6395 3950                                            l6563 3286  
                                          l6555 3240                                            l6475 2954  
                                          l6467 28F2                                            l6379 355A  
                                          l6491 22B6                                            l6483 2270  
                                          l6731 11DE                                            l6723 1196  
                                          l6715 1154                                            l6707 10D4  
                                          l7099 24B6                                            l5861 3C48  
                                          l5941 20CA                                            l5933 2082  
                                          l5925 202A                                            l5917 1FDA  
                                          l5837 3A24                                            l5765 36A4  
                                          l5773 36BC                                            l5757 3666  
                                          l5781 2FA0                                            l5829 2C72  
                                          l5853 364E                                            l6901 0980  
                                          l6645 2A3C                                            l6637 2A00  
                                          l6629 29AC                                            l4877 3762  
                                          l4869 372C                                            l6661 215E  
                                          l6653 2142                                            l6821 18CC  
                                          l6813 1876                                            l6805 1856  
                                          l4797 3CD4                                            l4789 3084  
                                          l6549 247A                                            l6581 2E94  
                                          l6573 2E46                                            l6565 2E20  
                                          l6397 3954                                            l6389 393E  
                                          l6557 324C                                            l6477 2958  
                                          l6469 2912                                            l6493 22CA  
                                          l6485 2284                                            l6741 124E  
                                          l6733 11F2                                            l6725 11A8  
                                          l6717 1168                                            l6709 1102  
                                          l5863 3C64                                            l5871 1E32  
                                          l5943 20EA                                            l5935 20A2  
                                          l5927 2032                                            l5919 1FDE  
                                          l5767 36A6                                            l5759 3666  
                                          l5775 3DC4                                            l5783 2FAA  
                                          l5791 37C4                                            l5951 26F2  
                                          l5839 3B32                                            l5847 3606  
                                          l6911 0A58                                            l6903 0990  
                                          l6591 348C                                            l6639 2A14  
                                          l4879 3766                                            l6671 21C2  
                                          l6663 216A                                            l6647 210C  
                                          l6831 1944                                            l6823 18EC  
                                          l6815 187E                                            l6807 1868  
                                          l4799 31A2                                            l6583 2EA2  
                                          l6575 2E4A                                            l6567 2E20  
                                          l6399 3958                                            l6559 3260  
                                          l6479 295C                                            l6495 22EE  
                                          l6487 2298                                            l6751 12A4  
                                          l6743 1266                                            l6735 1200  
                                          l6727 11B4                                            l6719 117C  
                                          l5857 3B6A                                            l5881 1E88  
                                          l5873 1E52                                            l5937 20B4  
                                          l5929 2046                                            l5769 36B6  
                                          l5785 2FC8                                            l5777 2F7C  
                                          l5793 37D0                                            l5961 275C  
                                          l5953 26FA                                            l6921 0ADA  
                                          l6913 0A88                                            l6905 0A0A  
                                          l6593 348C                                            l6681 225E  
                                          l6673 21DC                                            l6665 2176  
                                          l6649 2112                                            l6825 1910  
                                          l6809 186C                                            l6817 18A0  
                                          l6841 331E                                            l6585 2EB0  
                                          l6577 2E60                                            l6569 2E2C  
                                          l6497 2316                                            l6489 22A4  
                                          l6761 12FA                                            l6753 12BC  
                                          l6737 122A                                            l6745 126C  
                                          l6729 11C8                                            l5891 1EDC  
                                          l5883 1E94                                            l5875 1E56  
                                          l5867 1E20                                            l5939 20BA  
                                          l5787 2FFE                                            l5779 2F8E  
                                          l5795 37D4                                            l5963 277C  
                                          l5955 270E                                            l5947 26C8  
                                          l5971 2A66                                            l6923 0AF2  
                                          l6915 0AA4                                            l6907 0A0E  
                                          l6931 136C                                            l6675 21EC  
                                          l6667 2188                                            l6659 2158  
                                          l6827 1924                                            l6819 18B0  
                                          l6835 194A                                            l6851 3388  
                                          l6843 332C                                            l6587 2EBE  
                                          l6579 2E6E                                            l6499 2328  
                                          l6763 1312                                            l6755 12CA  
                                          l6747 1290                                            l6739 1248  
                                          l6691 3AC2                                            l6771 339A  
                                          l5893 1EEE                                            l5885 1EB2  
                                          l5877 1E64                                            l5869 1E24  
                                          l5797 3806                                            l5965 277E  
                                          l5957 271C                                            l5949 26D4  
                                          l5981 2ADE                                            l5973 2A6E  
                                          l6917 0ABE                                            l6909 0A30  
                                          l6861 070A                                            l6853 06B4  
                                          l6589 347E                                            l6941 13E0  
                                          l6933 1390                                            l6677 2208  
                                          l6669 218C                                            l6829 1936  
                                          l6781 179E                                            l6845 333A  
                                          l6757 12DA                                            l6765 1318  
                                          l6749 129C                                            l6693 3AD4  
                                          l6773 33A2                                            l5991 37B8  
                                          l5895 1F1C                                            l5887 1EBA  
                                          l5879 1E84                                            l5967 2790  
                                          l5959 272E                                            l5983 2AF0  
                                          l5975 2A82                                            l6919 0ACA  
                                          l6871 0758                                            l6863 070E  
                                          l6855 06BE                                            l6599 3494  
                                          l6951 1434                                            l6943 13E4  
                                          l6935 1394                                            l6679 2234  
                                          l6687 2264                                            l6783 17A2  
                                          l6847 3364                                            l6839 331E  
                                          l6767 133C                                            l6759 12F4  
                                          l6695 3AD8                                            l6775 33CC  
                                          l5993 37BC                                            l5985 3772  
                                          l5897 1F3C                                            l5889 1ECE  
                                          l5977 2A90                                            l5969 2A48  
                                          l6881 07A8                                            l6873 0768  
                                          l6865 0730                                            l6857 06E2  
                                          l6961 14D0                                            l6953 1458  
                                          l6945 1408                                            l6937 13B8  
                                          l6929 1352                                            l6793 17EC  
                                          l6785 17B6                                            l6849 336A  
                                          l6697 3AE8                                            l6777 33E4  
                                          l6769 3396                                            l5987 3776  
                                          l5899 1F3E                                            l5979 2ABE  
                                          l6891 0838                                            l6875 0778  
                                          l6867 0738                                            l6859 06E6  
                                          l6971 1562                                            l6955 1468  
                                          l6963 14D4                                            l6947 140C  
                                          l6939 13BC                                            l6795 1804  
                                          l6787 17C8                                            l6699 3AEC  
                                          l5989 378A                                            l5997 0B08  
                                          l6981 25C6                                            l6893 089A  
                                          l6877 0788                                            l6869 0748  
                                          l6885 07B8                                            l6973 156E  
                                          l6965 14FC                                            l6957 149A  
                                          l6949 1430                                            l6797 1814  
                                          l6789 17D4                                            l5999 0B28  
                                          l6991 2638                                            l6983 25EA  
                                          l6895 08AA                                            l6879 0798  
                                          l6887 0816                                            l6975 157E  
                                          l6967 152C                                            l6959 14A6  
                                          l6799 1836                                            l6993 263C  
                                          l6985 25EE                                            l6897 090C  
                                          l6889 0824                                            l6977 1586  
                                          l6969 1548                                            l6995 2654  
                                          l6987 261A                                            l6979 25BC  
                                          l6899 091E                                            l6997 266C  
                                          l6989 261E                                            l6999 2688  
                                          STR_1 FEC3                                            STR_2 FDD0  
                                          STR_3 FBC3                                            STR_4 FF54  
                                          STR_5 FE68                                            STR_6 FBC4  
                                          STR_7 FD98                                            STR_8 FD04  
                                          STR_9 FE80                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          u4000 35CC                                            _LATD 000F86  
                                          u4001 35C8                                            _LATE 000F87  
                                          u4010 35FA                                            u4011 35F6  
                                          u4130 3D00                                            u4131 3CFA  
                                          u4140 3D02                                            u5110 3678  
                                          u4150 372C                                            u5111 3674  
                                          u4151 3728                                            u5120 3688  
                                          u5200 39C4                                            u6000 0F50  
                                          u4160 375E                                            u5121 3684  
                                          u5201 39C0                                            u6001 0F4C  
                                          u4161 375A                                            u5130 36B6  
                                          u5210 3B2A                                            u6010 0FB8  
                                          u4330 2808                                            u5131 36B2  
                                          u5211 3B24                                            u4331 2804  
                                          u6100 1D14                                            u5140 2F8E  
                                          u5300 3ABA                                            u5220 3B2C  
                                          u6020 0FFA                                            u4340 2838  
                                          u4180 38F4                                            u6101 1D10  
                                          u5141 2F8A                                            u5301 3AB4  
                                          u6021 0FF6                                            u4341 2834  
                                          u4181 38F0                                            u6110 1DD0  
                                          u5150 2FA0                                            u5230 2BEC  
                                          u5310 3ABC                                            u6030 1018  
                                          u4350 285A                                            u6111 1DCA  
                                          u5151 2F9C                                            u5231 2BE8  
                                          u6031 1014                                            u6015 0FA6  
                                          u4351 2856                                            u6120 1DD2  
                                          u5400 1EB2                                            u5160 2FC8  
                                          u5240 2C0E                                            u5320 3636  
                                          u6040 1032                                            u6200 0318  
                                          u4360 2884                                            u7000 19E8  
                                          u5401 1EAE                                            u5161 2FC4  
                                          u5241 2C0A                                            u5321 3630  
                                          u6041 102E                                            u6201 0312  
                                          u4361 2880                                            u7001 19E4  
                                          u6130 1DE8                                            u5410 1EDC  
                                          u5170 2FFE                                            u5250 2C64  
                                          u5330 3638                                            u6050 104C  
                                          u6210 031A                                            u4370 3422  
                                          u6131 1DE4                                            u5411 1ED8  
                                          u5171 2FFA                                            u5251 2C60  
                                          u6051 1048                                            u4371 341E  
                                          u7011 19F2                                            u6140 1DFA  
                                          u5420 1F1C                                            u5180 37F6  
                                          u5260 2C72                                            u5340 364E  
                                          u6060 105A                                            u6220 0332  
                                          u4380 345A                                            u6300 3594  
                                          u7020 1A4A                                            _PMD0 000EE1  
                                          u6141 1DF6                                            u5421 1F18  
                                          u5261 2C6E                                            u5501 26CE  
                                          u5341 364A                                            u6061 1056  
                                          u6221 032E                                            u4381 3456  
                                          u7021 1A46                                            _PMD1 000EE2  
                                          u5350 3B9A                                            u5430 1F66  
                                          u5270 3A24                                            u5190 3806  
                                          u5510 26F2                                            u6070 1068  
                                          u6230 0358                                            u6150 0150  
                                          u4390 347C                                            u6310 35A6  
                                          _PMD2 000EE3                                            u5351 3B94  
                                          u5431 1F62                                            u5271 3A20  
                                          u5191 3802                                            u5511 26EE  
                                          u6071 1064                                            u6231 0354  
                                          u6151 014C                                            u4391 3478  
                                          u6311 35A2                                            u7031 1A54  
                                          _PMD3 000EE4                                            u3920 3D30  
                                          u5360 3B9C                                            u6080 1CC0  
                                          u5440 1FBA                                            u5600 0B3A  
                                          u5520 271C                                            u5280 3B62  
                                          u6240 037E                                            u6160 0220  
                                          u6320 3540                                            u6400 28E2  
                                          u7040 1AAC                                            _PMD4 000EE5  
                                          u3921 3D2A                                            u6081 1CBC  
                                          u5441 1FB6                                            u5521 2718  
                                          u5281 3B5C                                            u6241 037A  
                                          u6161 021C                                            u6321 353C  
                                          u6401 28DE                                            u7041 1AA8  
                                          _PMD5 000EE6                                            u4650 385E  
                                          u3930 3D32                                            u6090 1CF8  
                                          u5370 1E32                                            u5450 1FEC  
                                          u5610 0B50                                            u5530 275C  
                                          u5290 3B64                                            u6250 0424  
                                          u6170 022E                                            u6330 3974  
                                          u6410 292A                                            u4651 385A  
                                          u6091 1CF4                                            u5371 1E2E  
                                          u5451 1FE8                                            u5187 37EC  
                                          u5611 0B4C                                            u5531 2758  
                                          u6251 0420                                            u6171 022A  
                                          u6331 3970                                            u6411 2926  
                                          u6307 358A                                            u7107 12B0  
                                          u7051 1AB6                                            u3940 3D46  
                                          u5380 1E64                                            u5460 202A  
                                          u5700 0D62                                            u5620 0B80  
                                          u5540 2A66                                            u6260 04A0  
                                          u6180 0256                                            u6500 23E2  
                                          u6420 2940                                            u7060 24DC  
                                          u3941 3D40                                            u5381 1E60  
                                          u5461 2026                                            u5701 0D5E  
                                          u5621 0B7C                                            u5541 2A62  
                                          u6261 049C                                            u6181 0252  
                                          u6501 23DE                                            u6421 293C  
                                          u7117 1306                                            u7061 24D8  
                                          u5470 2054                                            u5710 0D74  
                                          u5630 0B9C                                            u5550 2A90  
                                          u6270 0548                                            u6190 029A  
                                          u6510 2434                                            u6350 3CB8  
                                          u6430 2974                                            u7070 24EE  
                                          u5391 1E8E                                            u5471 2050  
                                          u5711 0D70                                            u5631 0B98  
                                          u5551 2A8C                                            u6271 0544  
                                          u6191 0296                                            u6511 2430  
                                          u7127 23C4                                            u6351 3CB2  
                                          u6431 2970                                            u7071 24EA  
                                          u5480 2082                                            u5720 0D82  
                                          u5640 0BCA                                            u5800 1BFA  
                                          u5560 2ABE                                            u6280 056E  
                                          u3960 3D18                                            u6600 29DE  
                                          u6520 2496                                            u6360 3CBA  
                                          u6440 2284                                            u7080 2598  
                                          u5481 207E                                            u5721 0D7E  
                                          u5641 0BC6                                            u5561 2ABA  
                                          u6281 056A                                            u3961 3D12  
                                          u6601 29DA                                            u6521 2492  
                                          u7137 2416                                            u6345 397E  
                                          u6441 2280                                            u7081 2594  
                                          u3946 3D48                                            u5570 378A  
                                          u5490 20CA                                            u5730 0D9A  
                                          u5650 0BD8                                            u5810 1C34  
                                          u6290 0632                                            u3970 3D1A  
                                          u6610 2A14                                            u6346 3980  
                                          u6530 329E                                            u6370 36D4  
                                          u6450 2298                                            u5571 3786  
                                          u5491 20C6                                            u5731 0D96  
                                          u5651 0BD4                                            u5811 1C30  
                                          u6291 062E                                            u6611 2A10  
                                          u6531 329A                                            u6371 36D0  
                                          u6451 2294                                            u4860 38A0  
                                          u5580 37B8                                            u5660 0D02  
                                          u5820 1C42                                            u5900 1774  
                                          u3980 3D5A                                            u6620 2A38  
                                          u6380 3706                                            u6460 22B6  
                                          u6700 1154                                            u4861 389C  
                                          u5581 37B4                                            u5661 0CFE  
                                          u5821 1C3E                                            u5741 1AF6  
                                          u5901 1770                                            u3981 3D54  
                                          u6621 2A34                                            u6541 2E26  
                                          u6381 3702                                            u6461 22B2  
                                          u6701 1150                                            u5670 0D20  
                                          u5590 0B38                                            u5830 1C7C  
                                          u5750 1B18                                            u5910 0DF8  
                                          u3990 35BC                                            u6550 34E4  
                                          u6630 2158                                            u6390 28C0  
                                          u6470 22EE                                            u6710 117C  
                                          u5671 0D1C                                            u5591 0B32  
                                          u5831 1C78                                            u5807 1BF0  
                                          u5751 1B14                                            u5911 0DF4  
                                          u3991 35B8                                            u6551 34E0  
                                          u6631 2154                                            u6391 28BC  
                                          u6471 22EA                                            u6711 1178  
                                          u5680 0D3A                                            u5760 1B4A  
                                          u5840 15AC                                            u5920 0E14  
                                          u6560 2F06                                            u6640 2188  
                                          u6800 17E8                                            u6480 2328  
                                          u6720 1196                                            u5681 0D36  
                                          u5761 1B46                                            u5841 15A8  
                                          u5921 0E10                                            u6561 2F02  
                                          u6641 2184                                            u6801 17E4  
                                          u6481 2324                                            u7097 125A  
                                          u6721 1192                                            u5690 0D54  
                                          u5770 1B68                                            u5850 15C8  
                                          u5930 0E3E                                            u6570 2F4A  
                                          u3986 3D5C                                            u6650 21C2  
                                          u6810 1814                                            u6490 234A  
                                          u6730 11A8                                            u5691 0D50  
                                          u5771 1B64                                            u5851 15C4  
                                          u5931 0E3A                                            u6571 2F46  
                                          u6651 21BE                                            u6811 1810  
                                          u6491 2346                                            u6731 11A4  
                                          u5780 1B92                                            u5860 1714  
                                          u5940 0EA2                                            u6580 2F6E  
                                          u6900 0838                                            u6660 21EC  
                                          u6820 1850                                            u6740 1290  
                                          u5781 1B8E                                            u5861 1710  
                                          u5941 0E9E                                            u6581 2F6A  
                                          u6901 0834                                            u6661 21E8  
                                          u6821 184C                                            u6741 128C  
                                          u5790 1BCC                                            u5870 1732  
                                          u5950 0EEC                                            u6910 08AA  
                                          u6590 29CE                                            u6670 2234  
                                          u6830 1868                                            u6750 133C  
                                          u5791 1BC8                                            u5871 172E  
                                          u5951 0EE6                                            u6911 08A6  
                                          u6591 29CA                                            u6671 2230  
                                          u6831 1864                                            u6751 1338  
                                          u5880 174C                                            u5960 0EEE  
                                          u6920 091E                                            u6680 225E  
                                          u6840 188E                                            u6760 33CC  
                                          u5881 1748                                            u6921 091A  
                                          u6681 225A                                            u6841 1888  
                                          u6761 33C8                                            u5890 1766  
                                          u5970 0F04                                            u6930 0990  
                                          u6850 18B0                                            u6690 3AD4  
                                          u6770 33E4                                            u5891 1762  
                                          u5971 0F00                                            u6931 098C  
                                          u6851 18AC                                            u6691 3AD0  
                                          u6771 33E0                                            u5980 0F38  
                                          u6940 0A58                                            u6860 18EC  
                                          u6780 17B6                                            u5981 0F32  
                                          u6941 0A54                                            u6861 18E8  
                                          u6781 17B2                                            u5990 0F3A  
                                          u6950 0ADA                                            u6870 18FC  
                                          u6846 1890                                            u6790 17C8  
                                          u6951 0AD6                                            u6871 18F6  
                                          u6791 17C4                                            u6960 14FC  
                                          u6880 1924                                            u6961 14F8  
                                          u6881 1920                                            u6970 157E  
                                          u6890 3388                                            u6971 157A  
                                          u6891 3384                                            u6876 18FE  
                                          u6980 198A                                            u6981 1986  
                                          u6990 19BA                                            u6991 19B6  
                           ValidateCmd@ConfName 0500                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 35A8  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 3664  
                            ClearModbusRespon@i 0005                                  generateCRC@crc 0012  
                                          abs@a 0017                                            _dbuf 01B4  
                                          _atoi 1C86                                            _main 24A8  
                                          _dtoa 0B08                                   ?_EUSART1_Read 0001  
                                          _prec 00A5                                   ?_EUSART2_Read 0001  
                                          _nout 01B1                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 1AEC  
                                          btemp 005B                                            _utoa 159C  
                                          _xtoa 0DE8                          __size_of_Initalisation 0002  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 393E  
                                 __CFG_CSWEN$ON 000000                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                       __size_of_DATAEE_WriteByte 0044  
                            SerIni@readDataEven 000E                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 3CEC                           _eusart1RxStatusBuffer 0380  
                               __end_of___aodiv 1FA8                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 210C                                           STR_10 FBC0  
                                         STR_11 FC7C                                           STR_12 FFA1  
                                         STR_20 FDB4                                           STR_21 FDB4  
                                         STR_13 FFC8                                           STR_14 FFD3  
                                         STR_30 FED8                                           STR_22 FEAD  
                                         STR_23 FBC0                                           STR_15 FFAF  
                                         STR_31 FE97                                           STR_16 FF83  
                                         STR_40 FF44                                           STR_24 FE50  
                                         STR_32 FC2E                                           STR_33 FFBC  
                                         STR_17 FF74                                           STR_25 FF64  
                                         STR_41 FF33                                   __CFG_WDTE$OFF 000000  
                                         STR_34 FFDE                                           STR_18 FF92  
                                         STR_50 FF22                                           STR_26 FCE3  
                                         STR_42 FB57                                           STR_19 FF10  
                                         STR_27 FE38                                           STR_51 FE07  
                                         STR_35 FD7C                                           STR_43 FD42  
                                         STR_60 FFE7                                           STR_28 FEFE  
                                         STR_44 FEEB                                           STR_52 FE20  
                                         STR_36 FBFA                                           STR_61 FFE7  
                                         STR_53 FD24                                           STR_37 FB8E  
                                         STR_29 FB1A                                           STR_45 FAD7  
                                         STR_54 FBC3                                           STR_62 FFF4  
                                         STR_38 FCA0                                           STR_46 FC58  
                                         STR_47 FBC3                                           STR_39 FBC0  
                                         STR_63 FFF4                                           STR_55 FD5F  
                                         STR_64 FFF9                                           STR_56 FFEE  
                                         STR_48 FCC2                                           STR_57 FFEE  
                                         STR_65 FFF9                                           STR_49 FDEC  
                                         STR_58 FFFD                                ?_ClearModbusData 0001  
                                         STR_59 FFFD                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 27B8  
                                         ?_xtoa 0022                                 __end_of___lomod 2B18  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 3DF0  
                                         i2l333 3938                                           i2l350 3DFA  
                                         i2l343 2D5E                                           i2l159 0112  
                                         i2l336 393C                                           i2l353 3DD2  
                                         i2l347 3BCC                                           i2l356 3DE4  
                                         i2l480 3A08                                           i2l491 3BF8  
                                         i2l477 3A04                                           i2l494 3DFC  
                                         i2l487 2E1E                                           i2l497 3DEA  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 00B0  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 39C6                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 3CBC                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                                           _fputc 2F7C  
                               __end_of_isalpha 3AC2                                           _fputs 3982  
                               __end_of_isdigit 3BA2                        SaveCardDat@dataeeAddrWrk 009D  
                               __end_of_memmove 2976                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00A3  
                                         _putch 3DC2                        __size_of_ClearEEAddRange 007E  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 3B32                                 __end_of_isspace 37C4  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 3B6A                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 38AC  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00AD                                   ??_ModbusError 008F  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 3664                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 3DFE  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 3DFC  
                   __size_of_EUSART2_is_tx_done 0016                                   ??_SaveCardDat 0097  
                                checkCRC@crcLow 0092           __end_of_EUSART2_SetTxInterruptHandler 3D68  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 3D5E  
                                  _toupper$2146 0011                                 __initialization 2B18  
                                  __end_of_atoi 1E20                      __end_of_EUSART1_Initialize 3222  
                                  __end_of_main 25BC                                    __end_of_dtoa 0DE8  
                     __size_of_InitialiseString 00AE                                    __end_of_stoa 1C86  
                                  __end_of_utoa 179E                                    __end_of_xtoa 10BE  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 194E  
                                        ??_atoi 000E                                          ??_main 00A1  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 1352                                      _ModbusFC03 06B4  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 3AFA  
                                 _Initalisation 3DF8                             SaveCardDat@NumBytes 0095  
           __end_of_EUSART2_DefaultErrorHandler 3DE6                     _EUSART2_DefaultErrorHandler 3DE0  
                                    _ModbusData 0200                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                            SaveCardDat@MBAddress 0091  
                    __end_of_EUSART2_Initialize 331E                        _eusart2TxBufferRemaining 00BC  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                     InitialiseString@SerialNum 008B                                ClearEEAddRange@i 0055  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                            __size_of_ReadRX232 0124                                  __CFG_WDTCCS$SC 000000  
                                        i2l5201 2D3C                                          i2l5211 39EA  
                                        i2l5203 2D5A                                          i2l5221 2D7E  
                                        i2l5213 39FA                                          i2l5205 39C6  
                                        i2l5231 2DE0                                          i2l5223 2D8E  
                                        i2l5215 39FE                                          i2l5207 39D8  
                                        i2l5233 2DFC                                          i2l5225 2DA8  
                                        i2l5217 2D60                                          i2l5209 39E8  
                                        i2l5235 2E1A                                          i2l5227 2DB6  
                                        i2l5219 2D70                                          i2l5229 2DC6  
                                        i2l5181 392E                                          i2l5173 38F6  
                                        i2l4631 3BA2                                          i2l5191 2CD0  
                                        i2l5183 3932                                          i2l5175 3908  
                                        i2l4633 3BB2                                          i2l5193 2CE8  
                                        i2l5185 2CA0                                          i2l5177 391A  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        i2l4635 3BB4                                          i2l5195 2CF8  
                                        i2l5187 2CB0                                          i2l5179 391E  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        i2l4637 3BC4                                          i2l5197 2D08  
                                        i2l5189 2CC0                                          _INLVLE 000F2A  
                                        i2l4639 3BC8                                          i2l5199 2D20  
                                        i2l4681 3BE0                                          i2l4683 3BF0  
                                        i2l5571 0046                                          i2l4685 3BF4  
                                        i2l4677 3BCE                                          i2l5581 00E6  
                                        i2l5573 0072                                          i2l5565 001A  
                                        i2l4679 3BDE                                          i2l5583 00F4  
                                        i2l5575 0080                                          i2l5567 0028  
                                        i2l4857 3DCC                                          i2l5577 00AC  
                                        i2l5569 0038                                          i2l4859 3DE0  
                                        i2l5579 00BA                                          _TABLAT 000FF5  
                                        i2l4887 3DE6                                          i2l4889 3DEC  
                                 ??_ValidateCmd 0057                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 006B                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 2268  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 0093                                     ModbusFC10@j 0095  
                                   ModbusFC03@i 0091                                          _RXMode 3DD4  
                                        _TXMode 3DDA                                          _RXStat 00AF  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00E2  
                                        _ByteHi 00A7                                          _ByteLo 00BD  
                            _UART1_Write_string 340A                                  __CFG_XINST$OFF 000000  
                                        _SerIni 238C                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 008B  
                                    _PrintMB400 347E                             __end_of_ModbusError 26C8  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 3C48                                  __CFG_STVREN$ON 000000  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           SaveCardDat@readData 009B                             __end_of_SaveCardDat 1352  
                                        clear_0 2B96                                          clear_1 2BA2  
                                        clear_2 2BAE                                          clear_3 2BBA  
                                        clear_4 2BC6                                          _rxData 0400  
                   _EUSART2_FramingErrorHandler 01EE                                          _printf 3BFA  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                ?_Initalisation 0001                                          _strcat 3C22  
                                        dtoa@fp 0022                         __end_of_DATAEE_ReadByte 3CD4  
                                        _strcmp 3396                                          _strcpy 354A  
                                        _strlen 37C4                                   _ExpectedBytes 013D  
                                        fputc@c 0007                                  _PMD_Initialize 3C6E  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst FAD6                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 38F6                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 354A  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0464                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0264                                 _eusart1TxBuffer 01A1  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 3C8A  
                       __size_of_PrintModRespon 00AE                                 _eusart2TxBuffer 0284  
                                    __accesstop 0060                         __end_of__initialization 2BD4  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 0090  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 3BFA  
                           __end_of_ValidateCmd 1AEC                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 3DF6                                    __pidataBANK1 30A0  
                                  __pidataBANK2 3A4A                                    __pidataBANK3 3121  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 393E  
                                 __end_of_fputc 3012                                   __end_of_fputs 39C6  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 3DCC  
                             __end_of_ReadRX232 238C                          __end_of_PMD_Initialize 3C8A  
                          __end_of_EUSART1_Read 3772                            __end_of_EUSART2_Read 371A  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 2E20  
                          ModbusError@ErrorCode 008D                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 3CA4                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 00B5                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 00B3                                   _eusart2TxHead 00BA  
                                    __pbssBANK0 00A3                                      __pbssBANK1 0181  
                                    __pbssBANK2 0200                                      __pbssBANK3 0380  
                                    __pbssBANK4 0400                                   _eusart2RxTail 00B8  
                                 _eusart1TxTail 00B4               _EUSART1_TxDefaultInterruptHandler 01F2  
                                 _eusart2TxTail 00B9                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 3396                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 25BC  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                                         ?_SerIni 0007  
               __end_of_EUSART1_SetErrorHandler 3DC2                                     _SaveCardDat 10BE  
                                   ?_PrintMB400 0001                                _InitialiseString 2E20  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                               ??_Initalisation 0005                                         _MB300xx 0340  
                                       _MB301xx 0100                                         _MB302xx 013F  
                                       _MB303xx 0118                                         _MB304xx 010E  
                                       _MB400xx 0300                                         _MB305xx 012F  
                                       _MB306xx 0135                                         _MB307xx 0129  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 3814                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 3DB8  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 3DAE  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 0181  
                                     ?_checkCRC 0001                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 2D60  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                             ??_ClearModbusRespon 0005  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                   PrintMB400@i 0055                            DATAEE_WriteByte@bAdd 0005  
                                   _ValidateCmd 194E                                         _Command 01D4  
                                       SerIni@i 000F                                         SerIni@j 0011  
                             generateCRC@HiOrLo 0007                                      ??_ModbusRx 0056  
                                       _ByteNum 00AB                             __size_of_ModbusFC10 024A  
                           __size_of_ModbusFC03 0454                                 __size_of_RXMode 0006  
                               __size_of_TXMode 0006                                         __Hparam 0000  
                                    ??_TogDebug 0055                                         __Lparam 0000  
                               __size_of_SerIni 011C                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 1E20                                         ___aomod 1FA8  
                             generateCRC@crcLow 000C                                 __size_of___wmul 0026  
                                       ___lodiv 26C8                                         ___lomod 2A48  
                                     ?_vfprintf 0077                       __end_of_ClearModbusRespon 3860  
                           _EUSART1_is_rx_ready 3CEC                          InitialiseString@F10710 02A4  
                    __end_of_EUSART1_is_tx_done 3D5E                                         __pcinit 2B18  
               __end_of_EUSART2_SetErrorHandler 3D90                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 3D04                                         __ptext0 24A8  
                                       __ptext1 194E                                         __ptext2 3396  
                                       __ptext3 3AC2                                         __ptext4 10BE  
                                       __ptext5 2268                                         __ptext6 3C22  
                                       __ptext7 354A                                         __ptext8 289A  
                                       __ptext9 3CA4                                 __size_of_printf 0028  
                               __size_of_strcat 0026                                 __size_of_strcmp 0074  
                               __size_of_strcpy 005E                                 __size_of_strlen 0050  
                             ReadRX232@NumChars 008B                                      ??_checkCRC 008B  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 3DD4  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 3DCC  
                         _OSCILLATOR_Initialize 3CD4                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 3A86                                         _isdigit 3B6A  
                                       _memmove 289A                              _EUSART1_Initialize 31A2  
                                       _islower 3AFA                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 3772                                     _PrintModbus 331E  
                                       _isupper 3B32                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0068  
                                       _toupper 3606                            end_of_initialization 2BD4  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                _PrintModRespon 2ECE                      __end_of_EUSART2_is_tx_done 3D4A  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01E6                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 3DA4          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 3D9A                                    SaveCardDat@i 009F  
                            _EUSART2_Initialize 32A0                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                             SerIni@dataeeAddrWrk 000B  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                                       strcmp@l 0005                                         strcmp@r 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strcpy@d 0011                                         strlen@a 0007  
                           _EUSART2_is_rx_ready 3CA4                                         strcpy@s 000F  
                                       strlen@s 0005                               ValidateCmd@F10732 02D7  
                             ValidateCmd@F10735 02C3                               ValidateCmd@F10738 02AF  
                           _EUSART2_is_tx_ready 3D1C                        ValidateCmd@ConfName_1453 0528  
                      ValidateCmd@ConfName_1449 0514                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                                 _ClearEEAddRange 3222  
                        __end_of_PrintModRespon 2F7C                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                        __end_of_DATAEE_WriteByte 3982  
                          ??_EUSART2_Initialize 0007                            ?_EUSART2_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                          ?_EUSART2_is_tx_ready 0001                                    _EUSART1_Read 371A  
                                  _EUSART2_Read 36C2            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 3DDA                                 SerIni@SerialNum 0007  
                                __end_of_TXMode 3DE0                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 3BCE  
                                __end_of_SerIni 24A8                               SerIni@readDataOdd 000D  
                  __end_of_INTERRUPT_Initialize 3DF6                      __size_of_ClearModbusRespon 004C  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 3C6E                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008D                                    ??_ModbusFC03 008D  
                                __end_of_printf 3C22                                  __end_of_strcat 3C48  
                                __end_of_strcmp 340A                                  __end_of_strcpy 35A8  
                                     _ReadRX232 2268                                  __end_of_strlen 3814  
                           start_initialization 2B18                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 3A4A                                     __end_of_pad 2CA0  
                      __end_of_InitialiseString 2ECE   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 3606                     __size_of_UART1_Write_string 0074  
                         __end_of_EUSART2_Write 36C2                           ??_EUSART2_is_tx_ready 0005  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 008D  
              __size_of_EUSART2_SetErrorHandler 000A                             DATAEE_ReadByte@bAdd 0005  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 3D7C         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 3D72                              __end_of_ModbusFC10 159C  
                            __end_of_ModbusFC03 0B08                                    ?_SaveCardDat 008F  
                                      ??_SerIni 0009                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                _SaveCardDat$2436 0099  
                             __size_of_ModbusRx 01B0                                     vfprintf@fmt 0079  
                           __end_of_generateCRC 289A                                    ??_PrintMB400 0055  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                             __size_of_TogDebug 0038                           _EUSART1_RxDataHandler 3BCE  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00BD  
                                   __pdataBANK1 0100                                     __pdataBANK2 02AF  
                                   __pdataBANK3 0300                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00B2                         __end_of_ClearEEAddRange 32A0  
                                _eusart2RxCount 00B7                                      ?_ReadRX232 008B  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 01F0  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 0060  
                                 __pcstackBANK5 0500                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 015C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 2976                             EUSART2_Write@txData 0005  
                            __end_of_PrintMB400 34E6                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                                  ?_ValidateCmd 0001                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$2032 0014  
                                     _atoi$2033 0018                                       _atoi$2034 0016  
                                     __pnvBANK0 00BB                                       __pnvBANK1 01E4  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 3012  
                                     _dtoa$1528 0034                                       __pintcode 0008  
                                 __pmediumconst FAD6                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 01F6                    ??_INTERRUPT_InterruptManager 0001  
                         __end_of_Initalisation 3DFA                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0098  
                                     checkCRC@j 0094                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 3DEC  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3DE6  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01E4  
                               SaveCardDat@Conf 009C                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008F                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 2A48                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 3DB8                              _EUSART1_is_tx_done 3D4A  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 3DF2  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 27B8  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 013B  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u402_40 3BF0  
                                      i2u402_41 3BEC                                        i2u500_40 0080  
                                      i2u500_41 007C                                        i2u502_40 00AC  
                                      i2u501_48 0086                                        _MBResCnt 00A9  
                                      i2u502_41 00A8                                        i2u501_49 009A  
                                      i2u503_40 00BA                                        i2u503_41 00B6  
                                      i2u505_40 00E6                                        i2u504_48 00C0  
                                      i2u505_41 00E2                                        i2u504_49 00D4  
                                      i2u450_40 392E                                        i2u506_40 00F4  
                                      i2u450_41 392A                                        i2u506_41 00F0  
                                      i2u451_40 2CC0                                        i2u451_41 2CBC  
                                      i2u507_48 00FA                                        i2u507_49 010E  
                                      i2u461_40 2DB6                                        i2u460_48 2D94  
                                      i2u453_40 2CF8                                        i2u452_48 2CD6  
                                      i2u461_41 2DB2                                        i2u460_49 2DA8  
                                      i2u453_41 2CF4                                        i2u452_49 2CE8  
                                      _PIR3bits 000ECD                                        i2u463_40 2DFC  
                                      i2u462_48 2DCC                                        i2u455_40 2D3C  
                                      i2u454_48 2D0E                                        i2u463_41 2DF8  
                                      i2u462_49 2DE0                                        i2u455_41 2D38  
                                      i2u454_49 2D20                                        i2u464_48 2E02  
                                      i2u457_40 39D8                                        i2u456_48 2D42  
                                      i2u449_40 3908                                        i2u464_49 2E16  
                                      i2u457_41 39D4                                        i2u456_49 2D56  
                                      i2u449_41 3904                                        i2u458_40 39FA  
                                      i2u458_41 39F6                                        i2u459_40 2D7E  
                                      i2u395_40 3BC4                                        i2u459_41 2D7A  
                                      i2u395_41 3BC0                                        _PIR7bits 000ED1  
                                      i2u495_40 0028                                        i2u495_41 0024  
                                      i2u496_40 0038                                        i2u496_41 0034  
                                      i2u497_40 0046                                        i2u497_41 0042  
                                      i2u499_40 0072                                        i2u498_48 004C  
                                      i2u499_41 006E                                        i2u498_49 0060  
                                      _MBRespon 0141                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 3D34                                       _vfpfcnvrt 012A  
                                     _xtoa$1557 0035                                       _xtoa$1558 0037  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 008B                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0093  
                                   checkCRC@crc 0096                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2059 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 2B2C                                       copy_data1 2B4C  
                                     copy_data2 2B6C                              ModbusFC10@TempData 0091  
                         ?_INTERRUPT_Initialize 0001                               ?_DATAEE_WriteByte 0005  
                       _EUSART2_SetErrorHandler 3D86                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 01EC                              ??_DATAEE_WriteByte 0008  
                          ??_EUSART2_is_tx_done 0005                                        _ModbusRx 179E  
                            generateCRC@MessCnt 0005           __end_of_EUSART1_SetTxInterruptHandler 3D9A  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 3D90  
                                      __Hrparam 0000                                        _TogDebug 3AC2  
         __end_of_EUSART2_SetRxInterruptHandler 3D72          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 3D68                            __size_of_ModbusError 010C  
                                    vfprintf@ap 007B                                        __Lrparam 0000  
                                    vfprintf@fp 0077                              __CFG_BOREN$SBORDIS 000000  
                          __size_of_SaveCardDat 0294                         ??_OSCILLATOR_Initialize 0005  
                                     memmove@d1 0009                                       memmove@s1 000B  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                            generateCRC@crcHigh 000A                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 0080  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                 ReadRX232@F10714 0139  
                     ??_EUSART1_SetErrorHandler 0007                                        _checkCRC 210C  
           __end_of_EUSART1_DefaultErrorHandler 3DF2                     _EUSART1_DefaultErrorHandler 3DEC  
                              ??_PrintModRespon 0055                     __end_of_EUSART1_is_rx_ready 3D04  
                                    strcat@dest 0013                            _EUSART2_ErrorHandler 01EA  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 3D1C                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 3860  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 36C2                                        __ptext11 3222  
                                      __ptext20 3CD4                                        __ptext12 393E  
                                      __ptext21 3DF2                                        __ptext13 2E20  
                                      __ptext30 3D9A                                        __ptext22 32A0  
                                      __ptext14 238C                                        __ptext31 3DA4  
                                      __ptext23 3D5E                                        __ptext15 3CBC  
                                      __ptext40 38AC                                        __ptext32 3DAE  
                                      __ptext24 3D68                                        __ptext16 3DF8  
                                      __ptext41 2976                                        __ptext33 3DB8  
                                      __ptext25 3D72                                        __ptext17 3C8A  
                                      __ptext50 3D4A                                        __ptext42 1352  
                                      __ptext34 331E                                        __ptext26 3D7C  
                                      __ptext18 3C6E                                        __ptext51 35A8  
                                      __ptext43 347E                                        __ptext35 179E  
                                      __ptext27 3D86                                        __ptext19 3012  
                                      __ptext60 3A86                                        __ptext52 2ECE  
                                      __ptext44 06B4                                        __ptext36 210C  
                                      __ptext28 31A2                                        __ptext61 159C  
                                      __ptext53 3BFA                                        __ptext45 25BC  
                                      __ptext37 3DD4                                        __ptext29 3D90  
                                      __ptext70 3DC2                                        __ptext62 2A48  
                                      __ptext54 34E6                                        __ptext46 27B8  
                                      __ptext38 3CEC                                        __ptext71 3664  
                                      __ptext63 26C8                                        __ptext55 012A  
                                      __ptext47 340A                                        __ptext39 371A  
                                      __ptext80 3D34                                        __ptext72 3A0A  
                                      __ptext64 1AEC                                        __ptext56 0DE8  
                                      __ptext48 3DDA                                        __ptext81 3814  
                                      __ptext73 1FA8                                        __ptext65 0B08  
                                      __ptext57 3606                                        __ptext49 3D04  
                                      __ptext90 39C6                                        __ptext82 3860  
                                      __ptext74 1E20                                        __ptext66 2BDE  
                                      __ptext58 3AFA                                        __ptext91 2D60  
                                      __ptext75 1C86                                        __ptext67 37C4  
                                      __ptext59 3B32                                        __ptext92 3DE6  
                                      __ptext84 38F6                                        __ptext76 3772  
                                      __ptext68 3982                                        __ptext93 3DFC  
                                      __ptext85 2CA0                                        __ptext77 3B6A  
                                      __ptext69 2F7C                                        __ptext94 3DEC  
                                      __ptext86 3DCC                                        __ptext78 3C48  
                                      __ptext95 3BCE                                        __ptext87 3DFA  
                                      __ptext79 3D1C                                        __ptext96 0000  
                                      __ptext88 3DE0                                        __ptext89 3BA2  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 008D                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 0114  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 3DFC  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 3DFA  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019E  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008B  
                                  PrintModbus@i 008B            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 0122  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                 PrintModRespon@i 008B  
                                      _rxStatus 01B3                                        int$flags 005B  
                                      _vfprintf 34E6              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 3BA2  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01E8  
                           _EUSART1_Receive_ISR 2D60                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                                _vfpfcnvrt$1572 006D                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 3CBC                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 3D34                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 347E                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 3DAE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 3DA4                                       strcpy@src 000B  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 3A0A  
                                      printf@ap 0089  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 00B1                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 2CA0                         __end_of_ClearModbusData 38AC  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 30A0  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00B6                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 01F4                             __end_of_ClearRxBuff 38F6  
