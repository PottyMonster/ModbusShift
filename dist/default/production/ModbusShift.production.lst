

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 18 00:43:10 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   126                           	psect	text96,global,reloc=2,class=CODE,delta=1
   127                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   128                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   129  0000                     
   130                           ; Version 2.10
   131                           ; Generated 31/07/2019 GMT
   132                           ; 
   133                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC18F46K40 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     
   165                           	psect	idataBANK0
   166  003BC2                     __pidataBANK0:
   167                           	opt callstack 0
   168                           
   169                           ;initializer for _ByteLo
   170  003BC2  00FF               	dw	255
   171                           
   172                           	psect	idataBANK1
   173  002F08                     __pidataBANK1:
   174                           	opt callstack 0
   175                           
   176                           ;initializer for _MB301xx
   177  002F08  4150               	dw	16720
   178  002F0A  3030               	dw	12336
   179  002F0C  3036               	dw	12342
   180  002F0E  3033               	dw	12339
   181  002F10  3033               	dw	12339
   182  002F12  2D30               	dw	11568
   183  002F14  3200               	dw	12800
   184                           
   185                           ;initializer for _MB304xx
   186  002F16  4155               	dw	16725
   187  002F18  4720               	dw	18208
   188  002F1A  3039               	dw	12345
   189  002F1C  3230               	dw	12848
   190  002F1E  3231               	dw	12849
   191                           
   192                           ;initializer for _MB303xx
   193  002F20  3231               	dw	12849
   194  002F22  3039               	dw	12345
   195  002F24  3030               	dw	12336
   196  002F26  3100               	dw	12544
   197  002F28  3039               	dw	12345
   198                           
   199                           ;initializer for stoa@F1139
   200  002F2A  28                 	db	40
   201  002F2B  6E                 	db	110
   202  002F2C  75                 	db	117
   203  002F2D  6C                 	db	108
   204  002F2E  6C                 	db	108
   205  002F2F  29                 	db	41
   206  002F30  00                 	db	0
   207                           
   208                           ;initializer for _MB307xx
   209  002F31  045A               	dw	1114
   210  002F33  00F1               	dw	241
   211  002F35  01C4               	dw	452
   212                           
   213                           ;initializer for _MB305xx
   214  002F37  3137               	dw	12599
   215  002F39  3335               	dw	13109
   216  002F3B  3439               	dw	13369
   217                           
   218                           ;initializer for _MB306xx
   219  002F3D  004D               	dw	77
   220  002F3F  3030               	dw	12336
   221                           
   222                           ;initializer for ReadRX232@F10713
   223  002F41  5A                 	db	90
   224  002F42  00                 	db	0
   225                           
   226                           ;initializer for _MBResCRC
   227  002F43  FFFF               	dw	65535
   228                           
   229                           ;initializer for _ExpectedBytes
   230  002F45  0008               	dw	8
   231                           
   232                           ;initializer for _MB302xx
   233  002F47  0004               	dw	4
   234                           
   235                           ;initializer for _MBRespon
   236  002F49  FFFF               	dw	65535
   237  002F4B  00                 	db	0
   238  002F4C  00                 	db	0
   239  002F4D  00                 	db	0
   240  002F4E  00                 	db	0
   241  002F4F  00                 	db	0
   242  002F50  00                 	db	0
   243  002F51  00                 	db	0
   244  002F52  00                 	db	0
   245  002F53  00                 	db	0
   246  002F54  00                 	db	0
   247  002F55  00                 	db	0
   248  002F56  00                 	db	0
   249  002F57  00                 	db	0
   250  002F58  00                 	db	0
   251  002F59  00                 	db	0
   252  002F5A  00                 	db	0
   253  002F5B  00                 	db	0
   254  002F5C  00                 	db	0
   255  002F5D  00                 	db	0
   256  002F5E  00                 	db	0
   257  002F5F  00                 	db	0
   258  002F60  00                 	db	0
   259  002F61  00                 	db	0
   260  002F62  00                 	db	0
   261  002F63  00                 	db	0
   262  002F64  00                 	db	0
   263  002F65  00                 	db	0
   264  002F66  00                 	db	0
   265  002F67  00                 	db	0
   266  002F68  00                 	db	0
   267  002F69  00                 	db	0
   268  002F6A  00                 	db	0
   269  002F6B  00                 	db	0
   270  002F6C  00                 	db	0
   271  002F6D  00                 	db	0
   272  002F6E  00                 	db	0
   273  002F6F  00                 	db	0
   274  002F70  00                 	db	0
   275  002F71  00                 	db	0
   276  002F72  00                 	db	0
   277  002F73  00                 	db	0
   278  002F74  00                 	db	0
   279  002F75  00                 	db	0
   280  002F76  00                 	db	0
   281  002F77  00                 	db	0
   282  002F78  00                 	db	0
   283  002F79  00                 	db	0
   284  002F7A  00                 	db	0
   285  002F7B  00                 	db	0
   286  002F7C  00                 	db	0
   287  002F7D  00                 	db	0
   288  002F7E  00                 	db	0
   289  002F7F  00                 	db	0
   290  002F80  00                 	db	0
   291  002F81  00                 	db	0
   292  002F82  00                 	db	0
   293  002F83  00                 	db	0
   294  002F84  00                 	db	0
   295  002F85  00                 	db	0
   296  002F86  00                 	db	0
   297  002F87  00                 	db	0
   298  002F88  00                 	db	0
   299                           
   300                           	psect	idataBANK2
   301  003816                     __pidataBANK2:
   302                           	opt callstack 0
   303                           
   304                           ;initializer for ValidateCmd@F10737
   305  003816  52                 	db	82
   306  003817  65                 	db	101
   307  003818  76                 	db	118
   308  003819  69                 	db	105
   309  00381A  73                 	db	115
   310  00381B  69                 	db	105
   311  00381C  6F                 	db	111
   312  00381D  6E                 	db	110
   313  00381E  00                 	db	0
   314  00381F  00                 	db	0
   315  003820  00                 	db	0
   316  003821  00                 	db	0
   317  003822  00                 	db	0
   318  003823  00                 	db	0
   319  003824  00                 	db	0
   320  003825  00                 	db	0
   321  003826  00                 	db	0
   322  003827  00                 	db	0
   323  003828  00                 	db	0
   324  003829  00                 	db	0
   325                           
   326                           ;initializer for ValidateCmd@F10734
   327  00382A  50                 	db	80
   328  00382B  61                 	db	97
   329  00382C  72                 	db	114
   330  00382D  74                 	db	116
   331  00382E  20                 	db	32
   332  00382F  4E                 	db	78
   333  003830  75                 	db	117
   334  003831  6D                 	db	109
   335  003832  62                 	db	98
   336  003833  65                 	db	101
   337  003834  72                 	db	114
   338  003835  00                 	db	0
   339  003836  00                 	db	0
   340  003837  00                 	db	0
   341  003838  00                 	db	0
   342  003839  00                 	db	0
   343  00383A  00                 	db	0
   344  00383B  00                 	db	0
   345  00383C  00                 	db	0
   346  00383D  00                 	db	0
   347                           
   348                           ;initializer for ValidateCmd@F10731
   349  00383E  53                 	db	83
   350  00383F  65                 	db	101
   351  003840  72                 	db	114
   352  003841  69                 	db	105
   353  003842  61                 	db	97
   354  003843  6C                 	db	108
   355  003844  20                 	db	32
   356  003845  4E                 	db	78
   357  003846  75                 	db	117
   358  003847  6D                 	db	109
   359  003848  62                 	db	98
   360  003849  65                 	db	101
   361  00384A  72                 	db	114
   362  00384B  00                 	db	0
   363  00384C  00                 	db	0
   364  00384D  00                 	db	0
   365  00384E  00                 	db	0
   366  00384F  00                 	db	0
   367  003850  00                 	db	0
   368  003851  00                 	db	0
   369                           
   370                           	psect	idataBANK3
   371  003756                     __pidataBANK3:
   372                           	opt callstack 0
   373                           
   374                           ;initializer for _MB300xx
   375  003756  0001               	dw	1
   376  003758  0002               	dw	2
   377  00375A  0003               	dw	3
   378  00375C  0004               	dw	4
   379  00375E  0005               	dw	5
   380  003760  0006               	dw	6
   381  003762  0007               	dw	7
   382  003764  0008               	dw	8
   383  003766  0009               	dw	9
   384  003768  000A               	dw	10
   385  00376A  000B               	dw	11
   386  00376C  000C               	dw	12
   387  00376E  000D               	dw	13
   388  003770  000E               	dw	14
   389  003772  000F               	dw	15
   390  003774  0010               	dw	16
   391  003776  0011               	dw	17
   392  003778  0012               	dw	18
   393  00377A  0013               	dw	19
   394  00377C  0014               	dw	20
   395  00377E  0015               	dw	21
   396  003780  0016               	dw	22
   397  003782  0017               	dw	23
   398  003784  0018               	dw	24
   399  003786  0019               	dw	25
   400  003788  001A               	dw	26
   401  00378A  001B               	dw	27
   402  00378C  001C               	dw	28
   403  00378E  001D               	dw	29
   404  003790  001E               	dw	30
   405  003792  001F               	dw	31
   406  003794  0020               	dw	32
   407                           
   408                           	psect	idataBANK4
   409  003796                     __pidataBANK4:
   410                           	opt callstack 0
   411                           
   412                           ;initializer for _MB400xx
   413  003796  0020               	dw	32
   414  003798  001F               	dw	31
   415  00379A  001E               	dw	30
   416  00379C  001D               	dw	29
   417  00379E  001C               	dw	28
   418  0037A0  001B               	dw	27
   419  0037A2  001A               	dw	26
   420  0037A4  0019               	dw	25
   421  0037A6  0018               	dw	24
   422  0037A8  0017               	dw	23
   423  0037AA  0016               	dw	22
   424  0037AC  0015               	dw	21
   425  0037AE  0014               	dw	20
   426  0037B0  0013               	dw	19
   427  0037B2  0012               	dw	18
   428  0037B4  0011               	dw	17
   429  0037B6  0010               	dw	16
   430  0037B8  000F               	dw	15
   431  0037BA  000E               	dw	14
   432  0037BC  000D               	dw	13
   433  0037BE  000C               	dw	12
   434  0037C0  000B               	dw	11
   435  0037C2  000A               	dw	10
   436  0037C4  0009               	dw	9
   437  0037C6  0008               	dw	8
   438  0037C8  0007               	dw	7
   439  0037CA  0006               	dw	6
   440  0037CC  0005               	dw	5
   441  0037CE  0004               	dw	4
   442  0037D0  0003               	dw	3
   443  0037D2  0002               	dw	2
   444  0037D4  0001               	dw	1
   445                           
   446                           	psect	nvBANK0
   447  0000BB                     __pnvBANK0:
   448                           	opt callstack 0
   449  0000BB                     _eusart1TxBufferRemaining:
   450                           	opt callstack 0
   451  0000BB                     	ds	1
   452  0000BC                     _eusart2TxBufferRemaining:
   453                           	opt callstack 0
   454  0000BC                     	ds	1
   455                           
   456                           	psect	nvBANK1
   457  0001DF                     __pnvBANK1:
   458                           	opt callstack 0
   459  0001DF                     _EUSART1_ErrorHandler:
   460                           	opt callstack 0
   461  0001DF                     	ds	2
   462  0001E1                     _EUSART1_OverrunErrorHandler:
   463                           	opt callstack 0
   464  0001E1                     	ds	2
   465  0001E3                     _EUSART1_FramingErrorHandler:
   466                           	opt callstack 0
   467  0001E3                     	ds	2
   468  0001E5                     _EUSART2_ErrorHandler:
   469                           	opt callstack 0
   470  0001E5                     	ds	2
   471  0001E7                     _EUSART2_OverrunErrorHandler:
   472                           	opt callstack 0
   473  0001E7                     	ds	2
   474  0001E9                     _EUSART2_FramingErrorHandler:
   475                           	opt callstack 0
   476  0001E9                     	ds	2
   477  0001EB                     _EUSART1_RxDefaultInterruptHandler:
   478                           	opt callstack 0
   479  0001EB                     	ds	2
   480  0001ED                     _EUSART1_TxDefaultInterruptHandler:
   481                           	opt callstack 0
   482  0001ED                     	ds	2
   483  0001EF                     _EUSART2_RxDefaultInterruptHandler:
   484                           	opt callstack 0
   485  0001EF                     	ds	2
   486  0001F1                     _EUSART2_TxDefaultInterruptHandler:
   487                           	opt callstack 0
   488  0001F1                     	ds	2
   489  0000                     _RC2REG	set	3737
   490  0000                     _RC2STAbits	set	3741
   491  0000                     _TX2REG	set	3738
   492  0000                     _TX2STAbits	set	3742
   493  0000                     _SP2BRGH	set	3740
   494  0000                     _SP2BRGL	set	3739
   495  0000                     _TX2STA	set	3742
   496  0000                     _RC2STA	set	3741
   497  0000                     _BAUD2CON	set	3743
   498  0000                     _PIR7bits	set	3793
   499  0000                     _PIR3bits	set	3789
   500  0000                     _PIE3bits	set	3781
   501  0000                     _PMD5	set	3814
   502  0000                     _PMD4	set	3813
   503  0000                     _PMD3	set	3812
   504  0000                     _PMD2	set	3811
   505  0000                     _PMD1	set	3810
   506  0000                     _PMD0	set	3809
   507  0000                     _OSCTUNE	set	3805
   508  0000                     _OSCFRQ	set	3806
   509  0000                     _OSCEN	set	3804
   510  0000                     _OSCCON3	set	3802
   511  0000                     _OSCCON1	set	3800
   512  0000                     _RX2PPS	set	3725
   513  0000                     _RC6PPS	set	3837
   514  0000                     _RB6PPS	set	3829
   515  0000                     _RX1PPS	set	3765
   516  0000                     _INLVLE	set	3882
   517  0000                     _INLVLD	set	3874
   518  0000                     _INLVLC	set	3869
   519  0000                     _INLVLB	set	3861
   520  0000                     _INLVLA	set	3853
   521  0000                     _SLRCONE	set	3883
   522  0000                     _SLRCOND	set	3875
   523  0000                     _SLRCONC	set	3870
   524  0000                     _SLRCONB	set	3862
   525  0000                     _SLRCONA	set	3854
   526  0000                     _ODCOND	set	3876
   527  0000                     _ODCONC	set	3871
   528  0000                     _ODCONB	set	3863
   529  0000                     _ODCONA	set	3855
   530  0000                     _ODCONE	set	3884
   531  0000                     _WPUC	set	3872
   532  0000                     _WPUA	set	3856
   533  0000                     _WPUB	set	3864
   534  0000                     _WPUE	set	3885
   535  0000                     _WPUD	set	3877
   536  0000                     _ANSELA	set	3857
   537  0000                     _ANSELE	set	3886
   538  0000                     _ANSELB	set	3865
   539  0000                     _ANSELC	set	3873
   540  0000                     _ANSELD	set	3878
   541  0000                     _LATDbits	set	3974
   542  0000                     _LATAbits	set	3971
   543  0000                     _RC1REG	set	3993
   544  0000                     _RC1STAbits	set	3997
   545  0000                     _TX1REG	set	3994
   546  0000                     _TX1STAbits	set	3998
   547  0000                     _SP1BRGH	set	3996
   548  0000                     _SP1BRGL	set	3995
   549  0000                     _TX1STA	set	3998
   550  0000                     _RC1STA	set	3997
   551  0000                     _BAUD1CON	set	3999
   552  0000                     _NVMDAT	set	3968
   553  0000                     _NVMADRL	set	3966
   554  0000                     _NVMADRH	set	3967
   555  0000                     _NVMCON2	set	3970
   556  0000                     _TABLAT	set	4085
   557  0000                     _TBLPTRL	set	4086
   558  0000                     _TBLPTRH	set	4087
   559  0000                     _TBLPTRU	set	4088
   560  0000                     _NVMCON1bits	set	3969
   561  0000                     _INTCONbits	set	4082
   562  0000                     _TRISD	set	3979
   563  0000                     _TRISC	set	3978
   564  0000                     _TRISB	set	3977
   565  0000                     _TRISA	set	3976
   566  0000                     _TRISE	set	3980
   567  0000                     _LATC	set	3973
   568  0000                     _LATB	set	3972
   569  0000                     _LATA	set	3971
   570  0000                     _LATD	set	3974
   571  0000                     _LATE	set	3975
   572                           
   573                           	psect	mediumconst
   574  00FB5A                     __pmediumconst:
   575                           	opt callstack 0
   576  00FB5A  00                 	db	0
   577  00FB5B                     STR_36:
   578                           
   579                           ; BSR set to: 0
   580  00FB5B  4E                 	db	78	;'N'
   581  00FB5C  61                 	db	97	;'a'
   582  00FB5D  6D                 	db	109	;'m'
   583  00FB5E  65                 	db	101	;'e'
   584  00FB5F  3A                 	db	58	;':'
   585  00FB60  20                 	db	32
   586  00FB61  25                 	db	37
   587  00FB62  73                 	db	115	;'s'
   588  00FB63  20                 	db	32
   589  00FB64  20                 	db	32
   590  00FB65  4D                 	db	77	;'M'
   591  00FB66  42                 	db	66	;'B'
   592  00FB67  41                 	db	65	;'A'
   593  00FB68  64                 	db	100	;'d'
   594  00FB69  64                 	db	100	;'d'
   595  00FB6A  72                 	db	114	;'r'
   596  00FB6B  65                 	db	101	;'e'
   597  00FB6C  73                 	db	115	;'s'
   598  00FB6D  73                 	db	115	;'s'
   599  00FB6E  3A                 	db	58	;':'
   600  00FB6F  20                 	db	32
   601  00FB70  30                 	db	48	;'0'
   602  00FB71  78                 	db	120	;'x'
   603  00FB72  25                 	db	37
   604  00FB73  30                 	db	48	;'0'
   605  00FB74  34                 	db	52	;'4'
   606  00FB75  78                 	db	120	;'x'
   607  00FB76  20                 	db	32
   608  00FB77  20                 	db	32
   609  00FB78  20                 	db	32
   610  00FB79  64                 	db	100	;'d'
   611  00FB7A  61                 	db	97	;'a'
   612  00FB7B  74                 	db	116	;'t'
   613  00FB7C  61                 	db	97	;'a'
   614  00FB7D  65                 	db	101	;'e'
   615  00FB7E  65                 	db	101	;'e'
   616  00FB7F  41                 	db	65	;'A'
   617  00FB80  64                 	db	100	;'d'
   618  00FB81  64                 	db	100	;'d'
   619  00FB82  72                 	db	114	;'r'
   620  00FB83  3A                 	db	58	;':'
   621  00FB84  20                 	db	32
   622  00FB85  30                 	db	48	;'0'
   623  00FB86  78                 	db	120	;'x'
   624  00FB87  25                 	db	37
   625  00FB88  30                 	db	48	;'0'
   626  00FB89  34                 	db	52	;'4'
   627  00FB8A  78                 	db	120	;'x'
   628  00FB8B  20                 	db	32
   629  00FB8C  20                 	db	32
   630  00FB8D  20                 	db	32
   631  00FB8E  4E                 	db	78	;'N'
   632  00FB8F  75                 	db	117	;'u'
   633  00FB90  6D                 	db	109	;'m'
   634  00FB91  42                 	db	66	;'B'
   635  00FB92  79                 	db	121	;'y'
   636  00FB93  74                 	db	116	;'t'
   637  00FB94  65                 	db	101	;'e'
   638  00FB95  73                 	db	115	;'s'
   639  00FB96  3A                 	db	58	;':'
   640  00FB97  20                 	db	32
   641  00FB98  25                 	db	37
   642  00FB99  69                 	db	105	;'i'
   643  00FB9A  20                 	db	32
   644  00FB9B  0D                 	db	13
   645  00FB9C  0A                 	db	10
   646  00FB9D  00                 	db	0
   647  00FB9E                     STR_21:
   648                           
   649                           ; BSR set to: 0
   650  00FB9E  0D                 	db	13
   651  00FB9F  44                 	db	68	;'D'
   652  00FBA0  61                 	db	97	;'a'
   653  00FBA1  6E                 	db	110	;'n'
   654  00FBA2  20                 	db	32
   655  00FBA3  61                 	db	97	;'a'
   656  00FBA4  6E                 	db	110	;'n'
   657  00FBA5  64                 	db	100	;'d'
   658  00FBA6  20                 	db	32
   659  00FBA7  53                 	db	83	;'S'
   660  00FBA8  61                 	db	97	;'a'
   661  00FBA9  6D                 	db	109	;'m'
   662  00FBAA  27                 	db	39
   663  00FBAB  73                 	db	115	;'s'
   664  00FBAC  20                 	db	32
   665  00FBAD  4D                 	db	77	;'M'
   666  00FBAE  6F                 	db	111	;'o'
   667  00FBAF  64                 	db	100	;'d'
   668  00FBB0  62                 	db	98	;'b'
   669  00FBB1  75                 	db	117	;'u'
   670  00FBB2  73                 	db	115	;'s'
   671  00FBB3  20                 	db	32
   672  00FBB4  47                 	db	71	;'G'
   673  00FBB5  50                 	db	80	;'P'
   674  00FBB6  49                 	db	73	;'I'
   675  00FBB7  4F                 	db	79	;'O'
   676  00FBB8  20                 	db	32
   677  00FBB9  45                 	db	69	;'E'
   678  00FBBA  78                 	db	120	;'x'
   679  00FBBB  70                 	db	112	;'p'
   680  00FBBC  61                 	db	97	;'a'
   681  00FBBD  6E                 	db	110	;'n'
   682  00FBBE  73                 	db	115	;'s'
   683  00FBBF  69                 	db	105	;'i'
   684  00FBC0  6F                 	db	111	;'o'
   685  00FBC1  6E                 	db	110	;'n'
   686  00FBC2  20                 	db	32
   687  00FBC3  2D                 	db	45
   688  00FBC4  20                 	db	32
   689  00FBC5  41                 	db	65	;'A'
   690  00FBC6  50                 	db	80	;'P'
   691  00FBC7  30                 	db	48	;'0'
   692  00FBC8  30                 	db	48	;'0'
   693  00FBC9  30                 	db	48	;'0'
   694  00FBCA  37                 	db	55	;'7'
   695  00FBCB  30                 	db	48	;'0'
   696  00FBCC  31                 	db	49	;'1'
   697  00FBCD  32                 	db	50	;'2'
   698  00FBCE  35                 	db	53	;'5'
   699  00FBCF  2D                 	db	45
   700  00FBD0  30                 	db	48	;'0'
   701  00FBD1  31                 	db	49	;'1'
   702  00FBD2  20                 	db	32
   703  00FBD3  52                 	db	82	;'R'
   704  00FBD4  65                 	db	101	;'e'
   705  00FBD5  76                 	db	118	;'v'
   706  00FBD6  20                 	db	32
   707  00FBD7  2D                 	db	45
   708  00FBD8  0D                 	db	13
   709  00FBD9  0A                 	db	10
   710  00FBDA  00                 	db	0
   711  00FBDB                     STR_34:
   712                           
   713                           ; BSR set to: 0
   714  00FBDB  43                 	db	67	;'C'
   715  00FBDC  6C                 	db	108	;'l'
   716  00FBDD  65                 	db	101	;'e'
   717  00FBDE  61                 	db	97	;'a'
   718  00FBDF  72                 	db	114	;'r'
   719  00FBE0  69                 	db	105	;'i'
   720  00FBE1  6E                 	db	110	;'n'
   721  00FBE2  67                 	db	103	;'g'
   722  00FBE3  20                 	db	32
   723  00FBE4  45                 	db	69	;'E'
   724  00FBE5  45                 	db	69	;'E'
   725  00FBE6  50                 	db	80	;'P'
   726  00FBE7  52                 	db	82	;'R'
   727  00FBE8  4F                 	db	79	;'O'
   728  00FBE9  4D                 	db	77	;'M'
   729  00FBEA  20                 	db	32
   730  00FBEB  66                 	db	102	;'f'
   731  00FBEC  72                 	db	114	;'r'
   732  00FBED  6F                 	db	111	;'o'
   733  00FBEE  6D                 	db	109	;'m'
   734  00FBEF  20                 	db	32
   735  00FBF0  41                 	db	65	;'A'
   736  00FBF1  64                 	db	100	;'d'
   737  00FBF2  64                 	db	100	;'d'
   738  00FBF3  72                 	db	114	;'r'
   739  00FBF4  65                 	db	101	;'e'
   740  00FBF5  73                 	db	115	;'s'
   741  00FBF6  73                 	db	115	;'s'
   742  00FBF7  3A                 	db	58	;':'
   743  00FBF8  20                 	db	32
   744  00FBF9  30                 	db	48	;'0'
   745  00FBFA  78                 	db	120	;'x'
   746  00FBFB  25                 	db	37
   747  00FBFC  30                 	db	48	;'0'
   748  00FBFD  34                 	db	52	;'4'
   749  00FBFE  78                 	db	120	;'x'
   750  00FBFF  2C                 	db	44
   751  00FC00  20                 	db	32
   752  00FC01  4E                 	db	78	;'N'
   753  00FC02  75                 	db	117	;'u'
   754  00FC03  6D                 	db	109	;'m'
   755  00FC04  20                 	db	32
   756  00FC05  42                 	db	66	;'B'
   757  00FC06  79                 	db	121	;'y'
   758  00FC07  74                 	db	116	;'t'
   759  00FC08  65                 	db	101	;'e'
   760  00FC09  73                 	db	115	;'s'
   761  00FC0A  3A                 	db	58	;':'
   762  00FC0B  20                 	db	32
   763  00FC0C  25                 	db	37
   764  00FC0D  69                 	db	105	;'i'
   765  00FC0E  20                 	db	32
   766  00FC0F  0D                 	db	13
   767  00FC10  0A                 	db	10
   768  00FC11  00                 	db	0
   769  00FC12                     STR_29:
   770                           
   771                           ; BSR set to: 0
   772  00FC12  20                 	db	32
   773  00FC13  20                 	db	32
   774  00FC14  20                 	db	32
   775  00FC15  30                 	db	48	;'0'
   776  00FC16  78                 	db	120	;'x'
   777  00FC17  31                 	db	49	;'1'
   778  00FC18  30                 	db	48	;'0'
   779  00FC19  20                 	db	32
   780  00FC1A  2D                 	db	45
   781  00FC1B  20                 	db	32
   782  00FC1C  57                 	db	87	;'W'
   783  00FC1D  72                 	db	114	;'r'
   784  00FC1E  69                 	db	105	;'i'
   785  00FC1F  74                 	db	116	;'t'
   786  00FC20  65                 	db	101	;'e'
   787  00FC21  20                 	db	32
   788  00FC22  4D                 	db	77	;'M'
   789  00FC23  75                 	db	117	;'u'
   790  00FC24  6C                 	db	108	;'l'
   791  00FC25  74                 	db	116	;'t'
   792  00FC26  69                 	db	105	;'i'
   793  00FC27  70                 	db	112	;'p'
   794  00FC28  6C                 	db	108	;'l'
   795  00FC29  65                 	db	101	;'e'
   796  00FC2A  20                 	db	32
   797  00FC2B  52                 	db	82	;'R'
   798  00FC2C  65                 	db	101	;'e'
   799  00FC2D  67                 	db	103	;'g'
   800  00FC2E  69                 	db	105	;'i'
   801  00FC2F  73                 	db	115	;'s'
   802  00FC30  74                 	db	116	;'t'
   803  00FC31  65                 	db	101	;'e'
   804  00FC32  72                 	db	114	;'r'
   805  00FC33  73                 	db	115	;'s'
   806  00FC34  20                 	db	32
   807  00FC35  28                 	db	40
   808  00FC36  4D                 	db	77	;'M'
   809  00FC37  61                 	db	97	;'a'
   810  00FC38  78                 	db	120	;'x'
   811  00FC39  20                 	db	32
   812  00FC3A  33                 	db	51	;'3'
   813  00FC3B  32                 	db	50	;'2'
   814  00FC3C  78                 	db	120	;'x'
   815  00FC3D  20                 	db	32
   816  00FC3E  31                 	db	49	;'1'
   817  00FC3F  36                 	db	54	;'6'
   818  00FC40  62                 	db	98	;'b'
   819  00FC41  69                 	db	105	;'i'
   820  00FC42  74                 	db	116	;'t'
   821  00FC43  29                 	db	41
   822  00FC44  0D                 	db	13
   823  00FC45  0A                 	db	10
   824  00FC46  0A                 	db	10
   825  00FC47  00                 	db	0
   826  00FC48                     STR_6:
   827                           
   828                           ; BSR set to: 0
   829  00FC48  43                 	db	67	;'C'
   830  00FC49  6F                 	db	111	;'o'
   831  00FC4A  6D                 	db	109	;'m'
   832  00FC4B  70                 	db	112	;'p'
   833  00FC4C  6C                 	db	108	;'l'
   834  00FC4D  65                 	db	101	;'e'
   835  00FC4E  74                 	db	116	;'t'
   836  00FC4F  65                 	db	101	;'e'
   837  00FC50  64                 	db	100	;'d'
   838  00FC51  20                 	db	32
   839  00FC52  41                 	db	65	;'A'
   840  00FC53  64                 	db	100	;'d'
   841  00FC54  64                 	db	100	;'d'
   842  00FC55  69                 	db	105	;'i'
   843  00FC56  6E                 	db	110	;'n'
   844  00FC57  67                 	db	103	;'g'
   845  00FC58  20                 	db	32
   846  00FC59  72                 	db	114	;'r'
   847  00FC5A  78                 	db	120	;'x'
   848  00FC5B  44                 	db	68	;'D'
   849  00FC5C  61                 	db	97	;'a'
   850  00FC5D  74                 	db	116	;'t'
   851  00FC5E  61                 	db	97	;'a'
   852  00FC5F  20                 	db	32
   853  00FC60  42                 	db	66	;'B'
   854  00FC61  75                 	db	117	;'u'
   855  00FC62  66                 	db	102	;'f'
   856  00FC63  66                 	db	102	;'f'
   857  00FC64  65                 	db	101	;'e'
   858  00FC65  72                 	db	114	;'r'
   859  00FC66  20                 	db	32
   860  00FC67  74                 	db	116	;'t'
   861  00FC68  6F                 	db	111	;'o'
   862  00FC69  20                 	db	32
   863  00FC6A  4D                 	db	77	;'M'
   864  00FC6B  6F                 	db	111	;'o'
   865  00FC6C  64                 	db	100	;'d'
   866  00FC6D  62                 	db	98	;'b'
   867  00FC6E  75                 	db	117	;'u'
   868  00FC6F  73                 	db	115	;'s'
   869  00FC70  44                 	db	68	;'D'
   870  00FC71  61                 	db	97	;'a'
   871  00FC72  74                 	db	116	;'t'
   872  00FC73  61                 	db	97	;'a'
   873  00FC74  20                 	db	32
   874  00FC75  41                 	db	65	;'A'
   875  00FC76  72                 	db	114	;'r'
   876  00FC77  72                 	db	114	;'r'
   877  00FC78  61                 	db	97	;'a'
   878  00FC79  79                 	db	121	;'y'
   879  00FC7A  0D                 	db	13
   880  00FC7B  0A                 	db	10
   881  00FC7C  0A                 	db	10
   882  00FC7D  00                 	db	0
   883  00FC7E                     STR_28:
   884                           
   885                           ; BSR set to: 0
   886  00FC7E  20                 	db	32
   887  00FC7F  20                 	db	32
   888  00FC80  20                 	db	32
   889  00FC81  30                 	db	48	;'0'
   890  00FC82  78                 	db	120	;'x'
   891  00FC83  30                 	db	48	;'0'
   892  00FC84  33                 	db	51	;'3'
   893  00FC85  20                 	db	32
   894  00FC86  2D                 	db	45
   895  00FC87  20                 	db	32
   896  00FC88  52                 	db	82	;'R'
   897  00FC89  65                 	db	101	;'e'
   898  00FC8A  61                 	db	97	;'a'
   899  00FC8B  64                 	db	100	;'d'
   900  00FC8C  20                 	db	32
   901  00FC8D  4D                 	db	77	;'M'
   902  00FC8E  75                 	db	117	;'u'
   903  00FC8F  6C                 	db	108	;'l'
   904  00FC90  74                 	db	116	;'t'
   905  00FC91  69                 	db	105	;'i'
   906  00FC92  70                 	db	112	;'p'
   907  00FC93  6C                 	db	108	;'l'
   908  00FC94  65                 	db	101	;'e'
   909  00FC95  20                 	db	32
   910  00FC96  52                 	db	82	;'R'
   911  00FC97  65                 	db	101	;'e'
   912  00FC98  67                 	db	103	;'g'
   913  00FC99  69                 	db	105	;'i'
   914  00FC9A  73                 	db	115	;'s'
   915  00FC9B  74                 	db	116	;'t'
   916  00FC9C  65                 	db	101	;'e'
   917  00FC9D  72                 	db	114	;'r'
   918  00FC9E  73                 	db	115	;'s'
   919  00FC9F  20                 	db	32
   920  00FCA0  28                 	db	40
   921  00FCA1  4D                 	db	77	;'M'
   922  00FCA2  61                 	db	97	;'a'
   923  00FCA3  78                 	db	120	;'x'
   924  00FCA4  20                 	db	32
   925  00FCA5  33                 	db	51	;'3'
   926  00FCA6  32                 	db	50	;'2'
   927  00FCA7  78                 	db	120	;'x'
   928  00FCA8  20                 	db	32
   929  00FCA9  31                 	db	49	;'1'
   930  00FCAA  36                 	db	54	;'6'
   931  00FCAB  62                 	db	98	;'b'
   932  00FCAC  69                 	db	105	;'i'
   933  00FCAD  74                 	db	116	;'t'
   934  00FCAE  29                 	db	41
   935  00FCAF  0D                 	db	13
   936  00FCB0  0A                 	db	10
   937  00FCB1  00                 	db	0
   938  00FCB2                     STR_24:
   939                           
   940                           ; BSR set to: 0
   941  00FCB2  43                 	db	67	;'C'
   942  00FCB3  6F                 	db	111	;'o'
   943  00FCB4  6D                 	db	109	;'m'
   944  00FCB5  70                 	db	112	;'p'
   945  00FCB6  69                 	db	105	;'i'
   946  00FCB7  6C                 	db	108	;'l'
   947  00FCB8  65                 	db	101	;'e'
   948  00FCB9  64                 	db	100	;'d'
   949  00FCBA  20                 	db	32
   950  00FCBB  6F                 	db	111	;'o'
   951  00FCBC  6E                 	db	110	;'n'
   952  00FCBD  20                 	db	32
   953  00FCBE  25                 	db	37
   954  00FCBF  73                 	db	115	;'s'
   955  00FCC0  20                 	db	32
   956  00FCC1  61                 	db	97	;'a'
   957  00FCC2  74                 	db	116	;'t'
   958  00FCC3  20                 	db	32
   959  00FCC4  25                 	db	37
   960  00FCC5  73                 	db	115	;'s'
   961  00FCC6  20                 	db	32
   962  00FCC7  62                 	db	98	;'b'
   963  00FCC8  79                 	db	121	;'y'
   964  00FCC9  20                 	db	32
   965  00FCCA  58                 	db	88	;'X'
   966  00FCCB  43                 	db	67	;'C'
   967  00FCCC  38                 	db	56	;'8'
   968  00FCCD  20                 	db	32
   969  00FCCE  76                 	db	118	;'v'
   970  00FCCF  65                 	db	101	;'e'
   971  00FCD0  72                 	db	114	;'r'
   972  00FCD1  73                 	db	115	;'s'
   973  00FCD2  69                 	db	105	;'i'
   974  00FCD3  6F                 	db	111	;'o'
   975  00FCD4  6E                 	db	110	;'n'
   976  00FCD5  20                 	db	32
   977  00FCD6  25                 	db	37
   978  00FCD7  75                 	db	117	;'u'
   979  00FCD8  0D                 	db	13
   980  00FCD9  0A                 	db	10
   981  00FCDA  0A                 	db	10
   982  00FCDB  00                 	db	0
   983  00FCDC                     STR_37:
   984                           
   985                           ; BSR set to: 0
   986  00FCDC  45                 	db	69	;'E'
   987  00FCDD  6E                 	db	110	;'n'
   988  00FCDE  74                 	db	116	;'t'
   989  00FCDF  65                 	db	101	;'e'
   990  00FCE0  72                 	db	114	;'r'
   991  00FCE1  20                 	db	32
   992  00FCE2  63                 	db	99	;'c'
   993  00FCE3  61                 	db	97	;'a'
   994  00FCE4  72                 	db	114	;'r'
   995  00FCE5  64                 	db	100	;'d'
   996  00FCE6  20                 	db	32
   997  00FCE7  25                 	db	37
   998  00FCE8  73                 	db	115	;'s'
   999  00FCE9  20                 	db	32
  1000  00FCEA  28                 	db	40
  1001  00FCEB  6D                 	db	109	;'m'
  1002  00FCEC  61                 	db	97	;'a'
  1003  00FCED  78                 	db	120	;'x'
  1004  00FCEE  20                 	db	32
  1005  00FCEF  25                 	db	37
  1006  00FCF0  69                 	db	105	;'i'
  1007  00FCF1  20                 	db	32
  1008  00FCF2  63                 	db	99	;'c'
  1009  00FCF3  68                 	db	104	;'h'
  1010  00FCF4  61                 	db	97	;'a'
  1011  00FCF5  72                 	db	114	;'r'
  1012  00FCF6  61                 	db	97	;'a'
  1013  00FCF7  63                 	db	99	;'c'
  1014  00FCF8  74                 	db	116	;'t'
  1015  00FCF9  65                 	db	101	;'e'
  1016  00FCFA  72                 	db	114	;'r'
  1017  00FCFB  73                 	db	115	;'s'
  1018  00FCFC  29                 	db	41
  1019  00FCFD  3A                 	db	58	;':'
  1020  00FCFE  20                 	db	32
  1021  00FCFF  00                 	db	0
  1022  00FD00                     STR_11:
  1023                           
  1024                           ; BSR set to: 0
  1025  00FD00  63                 	db	99	;'c'
  1026  00FD01  72                 	db	114	;'r'
  1027  00FD02  63                 	db	99	;'c'
  1028  00FD03  48                 	db	72	;'H'
  1029  00FD04  69                 	db	105	;'i'
  1030  00FD05  67                 	db	103	;'g'
  1031  00FD06  68                 	db	104	;'h'
  1032  00FD07  3A                 	db	58	;':'
  1033  00FD08  20                 	db	32
  1034  00FD09  30                 	db	48	;'0'
  1035  00FD0A  78                 	db	120	;'x'
  1036  00FD0B  25                 	db	37
  1037  00FD0C  30                 	db	48	;'0'
  1038  00FD0D  32                 	db	50	;'2'
  1039  00FD0E  78                 	db	120	;'x'
  1040  00FD0F  20                 	db	32
  1041  00FD10  20                 	db	32
  1042  00FD11  63                 	db	99	;'c'
  1043  00FD12  72                 	db	114	;'r'
  1044  00FD13  63                 	db	99	;'c'
  1045  00FD14  4C                 	db	76	;'L'
  1046  00FD15  6F                 	db	111	;'o'
  1047  00FD16  77                 	db	119	;'w'
  1048  00FD17  3A                 	db	58	;':'
  1049  00FD18  20                 	db	32
  1050  00FD19  30                 	db	48	;'0'
  1051  00FD1A  78                 	db	120	;'x'
  1052  00FD1B  25                 	db	37
  1053  00FD1C  30                 	db	48	;'0'
  1054  00FD1D  32                 	db	50	;'2'
  1055  00FD1E  78                 	db	120	;'x'
  1056  00FD1F  20                 	db	32
  1057  00FD20  20                 	db	32
  1058  00FD21  0D                 	db	13
  1059  00FD22  0A                 	db	10
  1060  00FD23  00                 	db	0
  1061  00FD24                     STR_30:
  1062                           
  1063                           ; BSR set to: 0
  1064  00FD24  49                 	db	73	;'I'
  1065  00FD25  6E                 	db	110	;'n'
  1066  00FD26  69                 	db	105	;'i'
  1067  00FD27  74                 	db	116	;'t'
  1068  00FD28  61                 	db	97	;'a'
  1069  00FD29  6C                 	db	108	;'l'
  1070  00FD2A  69                 	db	105	;'i'
  1071  00FD2B  73                 	db	115	;'s'
  1072  00FD2C  61                 	db	97	;'a'
  1073  00FD2D  74                 	db	116	;'t'
  1074  00FD2E  69                 	db	105	;'i'
  1075  00FD2F  6F                 	db	111	;'o'
  1076  00FD30  6E                 	db	110	;'n'
  1077  00FD31  20                 	db	32
  1078  00FD32  43                 	db	67	;'C'
  1079  00FD33  6F                 	db	111	;'o'
  1080  00FD34  6D                 	db	109	;'m'
  1081  00FD35  70                 	db	112	;'p'
  1082  00FD36  6C                 	db	108	;'l'
  1083  00FD37  65                 	db	101	;'e'
  1084  00FD38  74                 	db	116	;'t'
  1085  00FD39  65                 	db	101	;'e'
  1086  00FD3A  20                 	db	32
  1087  00FD3B  2D                 	db	45
  1088  00FD3C  20                 	db	32
  1089  00FD3D  52                 	db	82	;'R'
  1090  00FD3E  65                 	db	101	;'e'
  1091  00FD3F  61                 	db	97	;'a'
  1092  00FD40  64                 	db	100	;'d'
  1093  00FD41  79                 	db	121	;'y'
  1094  00FD42  0D                 	db	13
  1095  00FD43  0A                 	db	10
  1096  00FD44  0A                 	db	10
  1097  00FD45  00                 	db	0
  1098  00FD46                     STR_39:
  1099                           
  1100                           ; BSR set to: 0
  1101  00FD46  0D                 	db	13
  1102  00FD47  0A                 	db	10
  1103  00FD48  45                 	db	69	;'E'
  1104  00FD49  6E                 	db	110	;'n'
  1105  00FD4A  74                 	db	116	;'t'
  1106  00FD4B  65                 	db	101	;'e'
  1107  00FD4C  72                 	db	114	;'r'
  1108  00FD4D  65                 	db	101	;'e'
  1109  00FD4E  64                 	db	100	;'d'
  1110  00FD4F  3A                 	db	58	;':'
  1111  00FD50  20                 	db	32
  1112  00FD51  25                 	db	37
  1113  00FD52  73                 	db	115	;'s'
  1114  00FD53  20                 	db	32
  1115  00FD54  0D                 	db	13
  1116  00FD55  0A                 	db	10
  1117  00FD56  20                 	db	32
  1118  00FD57  43                 	db	67	;'C'
  1119  00FD58  6F                 	db	111	;'o'
  1120  00FD59  6E                 	db	110	;'n'
  1121  00FD5A  66                 	db	102	;'f'
  1122  00FD5B  69                 	db	105	;'i'
  1123  00FD5C  72                 	db	114	;'r'
  1124  00FD5D  6D                 	db	109	;'m'
  1125  00FD5E  20                 	db	32
  1126  00FD5F  20                 	db	32
  1127  00FD60  59                 	db	89	;'Y'
  1128  00FD61  7C                 	db	124
  1129  00FD62  4E                 	db	78	;'N'
  1130  00FD63  3F                 	db	63	;'?'
  1131  00FD64  3A                 	db	58	;':'
  1132  00FD65  20                 	db	32
  1133  00FD66  00                 	db	0
  1134  00FD67                     STR_18:
  1135                           
  1136                           ; BSR set to: 0
  1137  00FD67  4D                 	db	77	;'M'
  1138  00FD68  6F                 	db	111	;'o'
  1139  00FD69  64                 	db	100	;'d'
  1140  00FD6A  44                 	db	68	;'D'
  1141  00FD6B  61                 	db	97	;'a'
  1142  00FD6C  74                 	db	116	;'t'
  1143  00FD6D  43                 	db	67	;'C'
  1144  00FD6E  6E                 	db	110	;'n'
  1145  00FD6F  74                 	db	116	;'t'
  1146  00FD70  3A                 	db	58	;':'
  1147  00FD71  20                 	db	32
  1148  00FD72  25                 	db	37
  1149  00FD73  69                 	db	105	;'i'
  1150  00FD74  20                 	db	32
  1151  00FD75  45                 	db	69	;'E'
  1152  00FD76  78                 	db	120	;'x'
  1153  00FD77  70                 	db	112	;'p'
  1154  00FD78  65                 	db	101	;'e'
  1155  00FD79  74                 	db	116	;'t'
  1156  00FD7A  65                 	db	101	;'e'
  1157  00FD7B  64                 	db	100	;'d'
  1158  00FD7C  42                 	db	66	;'B'
  1159  00FD7D  79                 	db	121	;'y'
  1160  00FD7E  74                 	db	116	;'t'
  1161  00FD7F  65                 	db	101	;'e'
  1162  00FD80  73                 	db	115	;'s'
  1163  00FD81  20                 	db	32
  1164  00FD82  25                 	db	37
  1165  00FD83  69                 	db	105	;'i'
  1166  00FD84  20                 	db	32
  1167  00FD85  0D                 	db	13
  1168  00FD86  0A                 	db	10
  1169  00FD87  00                 	db	0
  1170  00FD88                     STR_8:
  1171                           
  1172                           ; BSR set to: 0
  1173  00FD88  4D                 	db	77	;'M'
  1174  00FD89  6F                 	db	111	;'o'
  1175  00FD8A  64                 	db	100	;'d'
  1176  00FD8B  62                 	db	98	;'b'
  1177  00FD8C  75                 	db	117	;'u'
  1178  00FD8D  73                 	db	115	;'s'
  1179  00FD8E  20                 	db	32
  1180  00FD8F  44                 	db	68	;'D'
  1181  00FD90  61                 	db	97	;'a'
  1182  00FD91  74                 	db	116	;'t'
  1183  00FD92  61                 	db	97	;'a'
  1184  00FD93  20                 	db	32
  1185  00FD94  43                 	db	67	;'C'
  1186  00FD95  61                 	db	97	;'a'
  1187  00FD96  70                 	db	112	;'p'
  1188  00FD97  74                 	db	116	;'t'
  1189  00FD98  75                 	db	117	;'u'
  1190  00FD99  72                 	db	114	;'r'
  1191  00FD9A  65                 	db	101	;'e'
  1192  00FD9B  20                 	db	32
  1193  00FD9C  43                 	db	67	;'C'
  1194  00FD9D  6F                 	db	111	;'o'
  1195  00FD9E  6D                 	db	109	;'m'
  1196  00FD9F  70                 	db	112	;'p'
  1197  00FDA0  6C                 	db	108	;'l'
  1198  00FDA1  65                 	db	101	;'e'
  1199  00FDA2  74                 	db	116	;'t'
  1200  00FDA3  65                 	db	101	;'e'
  1201  00FDA4  3A                 	db	58	;':'
  1202  00FDA5  0D                 	db	13
  1203  00FDA6  0A                 	db	10
  1204  00FDA7  00                 	db	0
  1205  00FDA8                     STR_44:
  1206                           
  1207                           ; BSR set to: 0
  1208  00FDA8  45                 	db	69	;'E'
  1209  00FDA9  45                 	db	69	;'E'
  1210  00FDAA  50                 	db	80	;'P'
  1211  00FDAB  52                 	db	82	;'R'
  1212  00FDAC  4F                 	db	79	;'O'
  1213  00FDAD  4D                 	db	77	;'M'
  1214  00FDAE  3A                 	db	58	;':'
  1215  00FDAF  20                 	db	32
  1216  00FDB0  30                 	db	48	;'0'
  1217  00FDB1  78                 	db	120	;'x'
  1218  00FDB2  25                 	db	37
  1219  00FDB3  30                 	db	48	;'0'
  1220  00FDB4  32                 	db	50	;'2'
  1221  00FDB5  78                 	db	120	;'x'
  1222  00FDB6  20                 	db	32
  1223  00FDB7  41                 	db	65	;'A'
  1224  00FDB8  64                 	db	100	;'d'
  1225  00FDB9  64                 	db	100	;'d'
  1226  00FDBA  3A                 	db	58	;':'
  1227  00FDBB  20                 	db	32
  1228  00FDBC  30                 	db	48	;'0'
  1229  00FDBD  78                 	db	120	;'x'
  1230  00FDBE  25                 	db	37
  1231  00FDBF  30                 	db	48	;'0'
  1232  00FDC0  32                 	db	50	;'2'
  1233  00FDC1  78                 	db	120	;'x'
  1234  00FDC2  20                 	db	32
  1235  00FDC3  0D                 	db	13
  1236  00FDC4  0A                 	db	10
  1237  00FDC5  00                 	db	0
  1238  00FDC6                     STR_46:
  1239                           
  1240                           ; BSR set to: 0
  1241  00FDC6  0D                 	db	13
  1242  00FDC7  0A                 	db	10
  1243  00FDC8  20                 	db	32
  1244  00FDC9  56                 	db	86	;'V'
  1245  00FDCA  61                 	db	97	;'a'
  1246  00FDCB  6C                 	db	108	;'l'
  1247  00FDCC  69                 	db	105	;'i'
  1248  00FDCD  64                 	db	100	;'d'
  1249  00FDCE  61                 	db	97	;'a'
  1250  00FDCF  74                 	db	116	;'t'
  1251  00FDD0  69                 	db	105	;'i'
  1252  00FDD1  6E                 	db	110	;'n'
  1253  00FDD2  67                 	db	103	;'g'
  1254  00FDD3  20                 	db	32
  1255  00FDD4  43                 	db	67	;'C'
  1256  00FDD5  6F                 	db	111	;'o'
  1257  00FDD6  6D                 	db	109	;'m'
  1258  00FDD7  6D                 	db	109	;'m'
  1259  00FDD8  61                 	db	97	;'a'
  1260  00FDD9  6E                 	db	110	;'n'
  1261  00FDDA  64                 	db	100	;'d'
  1262  00FDDB  3A                 	db	58	;':'
  1263  00FDDC  20                 	db	32
  1264  00FDDD  25                 	db	37
  1265  00FDDE  73                 	db	115	;'s'
  1266  00FDDF  20                 	db	32
  1267  00FDE0  0D                 	db	13
  1268  00FDE1  0A                 	db	10
  1269  00FDE2  00                 	db	0
  1270  00FDE3                     STR_27:
  1271                           
  1272                           ; BSR set to: 0
  1273  00FDE3  46                 	db	70	;'F'
  1274  00FDE4  75                 	db	117	;'u'
  1275  00FDE5  6E                 	db	110	;'n'
  1276  00FDE6  63                 	db	99	;'c'
  1277  00FDE7  74                 	db	116	;'t'
  1278  00FDE8  69                 	db	105	;'i'
  1279  00FDE9  6F                 	db	111	;'o'
  1280  00FDEA  6E                 	db	110	;'n'
  1281  00FDEB  20                 	db	32
  1282  00FDEC  43                 	db	67	;'C'
  1283  00FDED  6F                 	db	111	;'o'
  1284  00FDEE  64                 	db	100	;'d'
  1285  00FDEF  65                 	db	101	;'e'
  1286  00FDF0  73                 	db	115	;'s'
  1287  00FDF1  20                 	db	32
  1288  00FDF2  53                 	db	83	;'S'
  1289  00FDF3  75                 	db	117	;'u'
  1290  00FDF4  70                 	db	112	;'p'
  1291  00FDF5  70                 	db	112	;'p'
  1292  00FDF6  6F                 	db	111	;'o'
  1293  00FDF7  72                 	db	114	;'r'
  1294  00FDF8  74                 	db	116	;'t'
  1295  00FDF9  65                 	db	101	;'e'
  1296  00FDFA  64                 	db	100	;'d'
  1297  00FDFB  3A                 	db	58	;':'
  1298  00FDFC  0D                 	db	13
  1299  00FDFD  0A                 	db	10
  1300  00FDFE  00                 	db	0
  1301  00FDFF                     STR_7:
  1302                           
  1303                           ; BSR set to: 0
  1304  00FDFF  4D                 	db	77	;'M'
  1305  00FE00  6F                 	db	111	;'o'
  1306  00FE01  64                 	db	100	;'d'
  1307  00FE02  44                 	db	68	;'D'
  1308  00FE03  61                 	db	97	;'a'
  1309  00FE04  74                 	db	116	;'t'
  1310  00FE05  61                 	db	97	;'a'
  1311  00FE06  43                 	db	67	;'C'
  1312  00FE07  6E                 	db	110	;'n'
  1313  00FE08  74                 	db	116	;'t'
  1314  00FE09  20                 	db	32
  1315  00FE0A  73                 	db	115	;'s'
  1316  00FE0B  69                 	db	105	;'i'
  1317  00FE0C  74                 	db	116	;'t'
  1318  00FE0D  74                 	db	116	;'t'
  1319  00FE0E  69                 	db	105	;'i'
  1320  00FE0F  6E                 	db	110	;'n'
  1321  00FE10  67                 	db	103	;'g'
  1322  00FE11  20                 	db	32
  1323  00FE12  61                 	db	97	;'a'
  1324  00FE13  74                 	db	116	;'t'
  1325  00FE14  20                 	db	32
  1326  00FE15  25                 	db	37
  1327  00FE16  69                 	db	105	;'i'
  1328  00FE17  0D                 	db	13
  1329  00FE18  0A                 	db	10
  1330  00FE19  0A                 	db	10
  1331  00FE1A  00                 	db	0
  1332  00FE1B                     STR_12:
  1333                           
  1334                           ; BSR set to: 0
  1335  00FE1B  4D                 	db	77	;'M'
  1336  00FE1C  6F                 	db	111	;'o'
  1337  00FE1D  64                 	db	100	;'d'
  1338  00FE1E  62                 	db	98	;'b'
  1339  00FE1F  75                 	db	117	;'u'
  1340  00FE20  73                 	db	115	;'s'
  1341  00FE21  20                 	db	32
  1342  00FE22  52                 	db	82	;'R'
  1343  00FE23  65                 	db	101	;'e'
  1344  00FE24  73                 	db	115	;'s'
  1345  00FE25  70                 	db	112	;'p'
  1346  00FE26  6F                 	db	111	;'o'
  1347  00FE27  6E                 	db	110	;'n'
  1348  00FE28  73                 	db	115	;'s'
  1349  00FE29  65                 	db	101	;'e'
  1350  00FE2A  20                 	db	32
  1351  00FE2B  43                 	db	67	;'C'
  1352  00FE2C  6F                 	db	111	;'o'
  1353  00FE2D  75                 	db	117	;'u'
  1354  00FE2E  6E                 	db	110	;'n'
  1355  00FE2F  74                 	db	116	;'t'
  1356  00FE30  20                 	db	32
  1357  00FE31  25                 	db	37
  1358  00FE32  69                 	db	105	;'i'
  1359  00FE33  3A                 	db	58	;':'
  1360  00FE34  0D                 	db	13
  1361  00FE35  0A                 	db	10
  1362  00FE36  00                 	db	0
  1363  00FE37                     STR_2:
  1364                           
  1365                           ; BSR set to: 0
  1366  00FE37  55                 	db	85	;'U'
  1367  00FE38  6E                 	db	110	;'n'
  1368  00FE39  73                 	db	115	;'s'
  1369  00FE3A  75                 	db	117	;'u'
  1370  00FE3B  70                 	db	112	;'p'
  1371  00FE3C  70                 	db	112	;'p'
  1372  00FE3D  6F                 	db	111	;'o'
  1373  00FE3E  72                 	db	114	;'r'
  1374  00FE3F  74                 	db	116	;'t'
  1375  00FE40  65                 	db	101	;'e'
  1376  00FE41  64                 	db	100	;'d'
  1377  00FE42  20                 	db	32
  1378  00FE43  46                 	db	70	;'F'
  1379  00FE44  75                 	db	117	;'u'
  1380  00FE45  6E                 	db	110	;'n'
  1381  00FE46  63                 	db	99	;'c'
  1382  00FE47  74                 	db	116	;'t'
  1383  00FE48  69                 	db	105	;'i'
  1384  00FE49  6F                 	db	111	;'o'
  1385  00FE4A  6E                 	db	110	;'n'
  1386  00FE4B  20                 	db	32
  1387  00FE4C  43                 	db	67	;'C'
  1388  00FE4D  6F                 	db	111	;'o'
  1389  00FE4E  64                 	db	100	;'d'
  1390  00FE4F  65                 	db	101	;'e'
  1391  00FE50  0D                 	db	13
  1392  00FE51  0A                 	db	10
  1393  00FE52  00                 	db	0
  1394  00FE53                     STR_40:
  1395                           
  1396                           ; BSR set to: 0
  1397  00FE53  59                 	db	89	;'Y'
  1398  00FE54  0D                 	db	13
  1399  00FE55  0A                 	db	10
  1400  00FE56  53                 	db	83	;'S'
  1401  00FE57  61                 	db	97	;'a'
  1402  00FE58  76                 	db	118	;'v'
  1403  00FE59  69                 	db	105	;'i'
  1404  00FE5A  6E                 	db	110	;'n'
  1405  00FE5B  67                 	db	103	;'g'
  1406  00FE5C  20                 	db	32
  1407  00FE5D  53                 	db	83	;'S'
  1408  00FE5E  65                 	db	101	;'e'
  1409  00FE5F  72                 	db	114	;'r'
  1410  00FE60  69                 	db	105	;'i'
  1411  00FE61  61                 	db	97	;'a'
  1412  00FE62  6C                 	db	108	;'l'
  1413  00FE63  20                 	db	32
  1414  00FE64  4E                 	db	78	;'N'
  1415  00FE65  75                 	db	117	;'u'
  1416  00FE66  6D                 	db	109	;'m'
  1417  00FE67  62                 	db	98	;'b'
  1418  00FE68  65                 	db	101	;'e'
  1419  00FE69  72                 	db	114	;'r'
  1420  00FE6A  20                 	db	32
  1421  00FE6B  0D                 	db	13
  1422  00FE6C  0A                 	db	10
  1423  00FE6D  00                 	db	0
  1424  00FE6E                     STR_20:
  1425                           
  1426                           ; BSR set to: 0
  1427  00FE6E  43                 	db	67	;'C'
  1428  00FE6F  52                 	db	82	;'R'
  1429  00FE70  43                 	db	67	;'C'
  1430  00FE71  20                 	db	32
  1431  00FE72  64                 	db	100	;'d'
  1432  00FE73  69                 	db	105	;'i'
  1433  00FE74  64                 	db	100	;'d'
  1434  00FE75  20                 	db	32
  1435  00FE76  4E                 	db	78	;'N'
  1436  00FE77  4F                 	db	79	;'O'
  1437  00FE78  54                 	db	84	;'T'
  1438  00FE79  20                 	db	32
  1439  00FE7A  63                 	db	99	;'c'
  1440  00FE7B  68                 	db	104	;'h'
  1441  00FE7C  65                 	db	101	;'e'
  1442  00FE7D  63                 	db	99	;'c'
  1443  00FE7E  6B                 	db	107	;'k'
  1444  00FE7F  20                 	db	32
  1445  00FE80  6F                 	db	111	;'o'
  1446  00FE81  75                 	db	117	;'u'
  1447  00FE82  74                 	db	116	;'t'
  1448  00FE83  2E                 	db	46
  1449  00FE84  20                 	db	32
  1450  00FE85  0D                 	db	13
  1451  00FE86  0A                 	db	10
  1452  00FE87  0A                 	db	10
  1453  00FE88  00                 	db	0
  1454  00FE89                     STR_42:
  1455                           
  1456                           ; BSR set to: 0
  1457  00FE89  43                 	db	67	;'C'
  1458  00FE8A  68                 	db	104	;'h'
  1459  00FE8B  61                 	db	97	;'a'
  1460  00FE8C  72                 	db	114	;'r'
  1461  00FE8D  20                 	db	32
  1462  00FE8E  30                 	db	48	;'0'
  1463  00FE8F  78                 	db	120	;'x'
  1464  00FE90  25                 	db	37
  1465  00FE91  30                 	db	48	;'0'
  1466  00FE92  32                 	db	50	;'2'
  1467  00FE93  78                 	db	120	;'x'
  1468  00FE94  20                 	db	32
  1469  00FE95  69                 	db	105	;'i'
  1470  00FE96  6E                 	db	110	;'n'
  1471  00FE97  20                 	db	32
  1472  00FE98  30                 	db	48	;'0'
  1473  00FE99  78                 	db	120	;'x'
  1474  00FE9A  25                 	db	37
  1475  00FE9B  30                 	db	48	;'0'
  1476  00FE9C  32                 	db	50	;'2'
  1477  00FE9D  78                 	db	120	;'x'
  1478  00FE9E  20                 	db	32
  1479  00FE9F  0D                 	db	13
  1480  00FEA0  0A                 	db	10
  1481  00FEA1  00                 	db	0
  1482  00FEA2                     STR_14:
  1483                           
  1484                           ; BSR set to: 0
  1485  00FEA2  20                 	db	32
  1486  00FEA3  20                 	db	32
  1487  00FEA4  20                 	db	32
  1488  00FEA5  42                 	db	66	;'B'
  1489  00FEA6  79                 	db	121	;'y'
  1490  00FEA7  74                 	db	116	;'t'
  1491  00FEA8  65                 	db	101	;'e'
  1492  00FEA9  20                 	db	32
  1493  00FEAA  25                 	db	37
  1494  00FEAB  30                 	db	48	;'0'
  1495  00FEAC  32                 	db	50	;'2'
  1496  00FEAD  69                 	db	105	;'i'
  1497  00FEAE  20                 	db	32
  1498  00FEAF  3A                 	db	58	;':'
  1499  00FEB0  20                 	db	32
  1500  00FEB1  30                 	db	48	;'0'
  1501  00FEB2  78                 	db	120	;'x'
  1502  00FEB3  25                 	db	37
  1503  00FEB4  30                 	db	48	;'0'
  1504  00FEB5  32                 	db	50	;'2'
  1505  00FEB6  78                 	db	120	;'x'
  1506  00FEB7  20                 	db	32
  1507  00FEB8  0D                 	db	13
  1508  00FEB9  0A                 	db	10
  1509  00FEBA  00                 	db	0
  1510  00FEBB                     STR_43:
  1511                           
  1512                           ; BSR set to: 0
  1513  00FEBB  53                 	db	83	;'S'
  1514  00FEBC  65                 	db	101	;'e'
  1515  00FEBD  72                 	db	114	;'r'
  1516  00FEBE  69                 	db	105	;'i'
  1517  00FEBF  61                 	db	97	;'a'
  1518  00FEC0  6C                 	db	108	;'l'
  1519  00FEC1  20                 	db	32
  1520  00FEC2  4E                 	db	78	;'N'
  1521  00FEC3  75                 	db	117	;'u'
  1522  00FEC4  6D                 	db	109	;'m'
  1523  00FEC5  62                 	db	98	;'b'
  1524  00FEC6  65                 	db	101	;'e'
  1525  00FEC7  72                 	db	114	;'r'
  1526  00FEC8  20                 	db	32
  1527  00FEC9  53                 	db	83	;'S'
  1528  00FECA  61                 	db	97	;'a'
  1529  00FECB  76                 	db	118	;'v'
  1530  00FECC  65                 	db	101	;'e'
  1531  00FECD  64                 	db	100	;'d'
  1532  00FECE  2E                 	db	46
  1533  00FECF  20                 	db	32
  1534  00FED0  0D                 	db	13
  1535  00FED1  0A                 	db	10
  1536  00FED2  00                 	db	0
  1537  00FED3                     STR_16:
  1538                           
  1539                           ; BSR set to: 0
  1540  00FED3  53                 	db	83	;'S'
  1541  00FED4  6F                 	db	111	;'o'
  1542  00FED5  6D                 	db	109	;'m'
  1543  00FED6  65                 	db	101	;'e'
  1544  00FED7  74                 	db	116	;'t'
  1545  00FED8  68                 	db	104	;'h'
  1546  00FED9  69                 	db	105	;'i'
  1547  00FEDA  6E                 	db	110	;'n'
  1548  00FEDB  67                 	db	103	;'g'
  1549  00FEDC  20                 	db	32
  1550  00FEDD  69                 	db	105	;'i'
  1551  00FEDE  6E                 	db	110	;'n'
  1552  00FEDF  20                 	db	32
  1553  00FEE0  45                 	db	69	;'E'
  1554  00FEE1  53                 	db	83	;'S'
  1555  00FEE2  55                 	db	85	;'U'
  1556  00FEE3  41                 	db	65	;'A'
  1557  00FEE4  52                 	db	82	;'R'
  1558  00FEE5  54                 	db	84	;'T'
  1559  00FEE6  31                 	db	49	;'1'
  1560  00FEE7  20                 	db	32
  1561  00FEE8  0D                 	db	13
  1562  00FEE9  0A                 	db	10
  1563  00FEEA  00                 	db	0
  1564  00FEEB                     STR_5:
  1565                           
  1566                           ; BSR set to: 0
  1567  00FEEB  52                 	db	82	;'R'
  1568  00FEEC  65                 	db	101	;'e'
  1569  00FEED  67                 	db	103	;'g'
  1570  00FEEE  3A                 	db	58	;':'
  1571  00FEEF  20                 	db	32
  1572  00FEF0  25                 	db	37
  1573  00FEF1  69                 	db	105	;'i'
  1574  00FEF2  20                 	db	32
  1575  00FEF3  44                 	db	68	;'D'
  1576  00FEF4  61                 	db	97	;'a'
  1577  00FEF5  74                 	db	116	;'t'
  1578  00FEF6  61                 	db	97	;'a'
  1579  00FEF7  3A                 	db	58	;':'
  1580  00FEF8  20                 	db	32
  1581  00FEF9  30                 	db	48	;'0'
  1582  00FEFA  78                 	db	120	;'x'
  1583  00FEFB  25                 	db	37
  1584  00FEFC  30                 	db	48	;'0'
  1585  00FEFD  34                 	db	52	;'4'
  1586  00FEFE  78                 	db	120	;'x'
  1587  00FEFF  20                 	db	32
  1588  00FF00  0D                 	db	13
  1589  00FF01  0A                 	db	10
  1590  00FF02  00                 	db	0
  1591  00FF03                     STR_9:
  1592                           
  1593                           ; BSR set to: 0
  1594  00FF03  20                 	db	32
  1595  00FF04  20                 	db	32
  1596  00FF05  20                 	db	32
  1597  00FF06  42                 	db	66	;'B'
  1598  00FF07  79                 	db	121	;'y'
  1599  00FF08  74                 	db	116	;'t'
  1600  00FF09  65                 	db	101	;'e'
  1601  00FF0A  20                 	db	32
  1602  00FF0B  25                 	db	37
  1603  00FF0C  69                 	db	105	;'i'
  1604  00FF0D  20                 	db	32
  1605  00FF0E  3A                 	db	58	;':'
  1606  00FF0F  20                 	db	32
  1607  00FF10  30                 	db	48	;'0'
  1608  00FF11  78                 	db	120	;'x'
  1609  00FF12  25                 	db	37
  1610  00FF13  30                 	db	48	;'0'
  1611  00FF14  32                 	db	50	;'2'
  1612  00FF15  78                 	db	120	;'x'
  1613  00FF16  20                 	db	32
  1614  00FF17  0D                 	db	13
  1615  00FF18  0A                 	db	10
  1616  00FF19  00                 	db	0
  1617  00FF1A                     STR_23:
  1618                           
  1619                           ; BSR set to: 0
  1620  00FF1A  43                 	db	67	;'C'
  1621  00FF1B  61                 	db	97	;'a'
  1622  00FF1C  72                 	db	114	;'r'
  1623  00FF1D  64                 	db	100	;'d'
  1624  00FF1E  20                 	db	32
  1625  00FF1F  41                 	db	65	;'A'
  1626  00FF20  64                 	db	100	;'d'
  1627  00FF21  64                 	db	100	;'d'
  1628  00FF22  72                 	db	114	;'r'
  1629  00FF23  65                 	db	101	;'e'
  1630  00FF24  73                 	db	115	;'s'
  1631  00FF25  73                 	db	115	;'s'
  1632  00FF26  2E                 	db	46
  1633  00FF27  20                 	db	32
  1634  00FF28  30                 	db	48	;'0'
  1635  00FF29  78                 	db	120	;'x'
  1636  00FF2A  30                 	db	48	;'0'
  1637  00FF2B  35                 	db	53	;'5'
  1638  00FF2C  20                 	db	32
  1639  00FF2D  0D                 	db	13
  1640  00FF2E  0A                 	db	10
  1641  00FF2F  00                 	db	0
  1642  00FF30                     STR_19:
  1643                           
  1644                           ; BSR set to: 0
  1645  00FF30  43                 	db	67	;'C'
  1646  00FF31  52                 	db	82	;'R'
  1647  00FF32  43                 	db	67	;'C'
  1648  00FF33  20                 	db	32
  1649  00FF34  43                 	db	67	;'C'
  1650  00FF35  68                 	db	104	;'h'
  1651  00FF36  65                 	db	101	;'e'
  1652  00FF37  63                 	db	99	;'c'
  1653  00FF38  6B                 	db	107	;'k'
  1654  00FF39  65                 	db	101	;'e'
  1655  00FF3A  64                 	db	100	;'d'
  1656  00FF3B  20                 	db	32
  1657  00FF3C  4F                 	db	79	;'O'
  1658  00FF3D  75                 	db	117	;'u'
  1659  00FF3E  74                 	db	116	;'t'
  1660  00FF3F  2E                 	db	46
  1661  00FF40  20                 	db	32
  1662  00FF41  0D                 	db	13
  1663  00FF42  0A                 	db	10
  1664  00FF43  0A                 	db	10
  1665  00FF44  00                 	db	0
  1666  00FF45                     STR_1:
  1667                           
  1668                           ; BSR set to: 0
  1669  00FF45  46                 	db	70	;'F'
  1670  00FF46  75                 	db	117	;'u'
  1671  00FF47  6E                 	db	110	;'n'
  1672  00FF48  63                 	db	99	;'c'
  1673  00FF49  74                 	db	116	;'t'
  1674  00FF4A  69                 	db	105	;'i'
  1675  00FF4B  6F                 	db	111	;'o'
  1676  00FF4C  6E                 	db	110	;'n'
  1677  00FF4D  20                 	db	32
  1678  00FF4E  43                 	db	67	;'C'
  1679  00FF4F  6F                 	db	111	;'o'
  1680  00FF50  64                 	db	100	;'d'
  1681  00FF51  65                 	db	101	;'e'
  1682  00FF52  20                 	db	32
  1683  00FF53  30                 	db	48	;'0'
  1684  00FF54  78                 	db	120	;'x'
  1685  00FF55  31                 	db	49	;'1'
  1686  00FF56  30                 	db	48	;'0'
  1687  00FF57  0D                 	db	13
  1688  00FF58  0A                 	db	10
  1689  00FF59  00                 	db	0
  1690  00FF5A                     STR_22:
  1691                           
  1692                           ; BSR set to: 0
  1693  00FF5A  43                 	db	67	;'C'
  1694  00FF5B  61                 	db	97	;'a'
  1695  00FF5C  72                 	db	114	;'r'
  1696  00FF5D  64                 	db	100	;'d'
  1697  00FF5E  20                 	db	32
  1698  00FF5F  53                 	db	83	;'S'
  1699  00FF60  65                 	db	101	;'e'
  1700  00FF61  72                 	db	114	;'r'
  1701  00FF62  20                 	db	32
  1702  00FF63  4E                 	db	78	;'N'
  1703  00FF64  6F                 	db	111	;'o'
  1704  00FF65  2E                 	db	46
  1705  00FF66  20                 	db	32
  1706  00FF67  25                 	db	37
  1707  00FF68  73                 	db	115	;'s'
  1708  00FF69  20                 	db	32
  1709  00FF6A  0D                 	db	13
  1710  00FF6B  0A                 	db	10
  1711  00FF6C  00                 	db	0
  1712  00FF6D                     STR_35:
  1713                           
  1714                           ; BSR set to: 0
  1715  00FF6D  53                 	db	83	;'S'
  1716  00FF6E  61                 	db	97	;'a'
  1717  00FF6F  76                 	db	118	;'v'
  1718  00FF70  69                 	db	105	;'i'
  1719  00FF71  6E                 	db	110	;'n'
  1720  00FF72  67                 	db	103	;'g'
  1721  00FF73  20                 	db	32
  1722  00FF74  43                 	db	67	;'C'
  1723  00FF75  61                 	db	97	;'a'
  1724  00FF76  72                 	db	114	;'r'
  1725  00FF77  64                 	db	100	;'d'
  1726  00FF78  20                 	db	32
  1727  00FF79  44                 	db	68	;'D'
  1728  00FF7A  61                 	db	97	;'a'
  1729  00FF7B  74                 	db	116	;'t'
  1730  00FF7C  61                 	db	97	;'a'
  1731  00FF7D  0D                 	db	13
  1732  00FF7E  0A                 	db	10
  1733  00FF7F  00                 	db	0
  1734  00FF80                     STR_41:
  1735                           
  1736                           ; BSR set to: 0
  1737  00FF80  4E                 	db	78	;'N'
  1738  00FF81  75                 	db	117	;'u'
  1739  00FF82  6D                 	db	109	;'m'
  1740  00FF83  20                 	db	32
  1741  00FF84  43                 	db	67	;'C'
  1742  00FF85  68                 	db	104	;'h'
  1743  00FF86  61                 	db	97	;'a'
  1744  00FF87  72                 	db	114	;'r'
  1745  00FF88  73                 	db	115	;'s'
  1746  00FF89  3A                 	db	58	;':'
  1747  00FF8A  20                 	db	32
  1748  00FF8B  25                 	db	37
  1749  00FF8C  69                 	db	105	;'i'
  1750  00FF8D  20                 	db	32
  1751  00FF8E  0D                 	db	13
  1752  00FF8F  0A                 	db	10
  1753  00FF90  00                 	db	0
  1754  00FF91                     STR_33:
  1755                           
  1756                           ; BSR set to: 0
  1757  00FF91  44                 	db	68	;'D'
  1758  00FF92  65                 	db	101	;'e'
  1759  00FF93  62                 	db	98	;'b'
  1760  00FF94  75                 	db	117	;'u'
  1761  00FF95  67                 	db	103	;'g'
  1762  00FF96  20                 	db	32
  1763  00FF97  44                 	db	68	;'D'
  1764  00FF98  69                 	db	105	;'i'
  1765  00FF99  73                 	db	115	;'s'
  1766  00FF9A  61                 	db	97	;'a'
  1767  00FF9B  62                 	db	98	;'b'
  1768  00FF9C  6C                 	db	108	;'l'
  1769  00FF9D  65                 	db	101	;'e'
  1770  00FF9E  64                 	db	100	;'d'
  1771  00FF9F  0D                 	db	13
  1772  00FFA0  0A                 	db	10
  1773  00FFA1  00                 	db	0
  1774  00FFA2                     STR_32:
  1775                           
  1776                           ; BSR set to: 0
  1777  00FFA2  44                 	db	68	;'D'
  1778  00FFA3  65                 	db	101	;'e'
  1779  00FFA4  62                 	db	98	;'b'
  1780  00FFA5  75                 	db	117	;'u'
  1781  00FFA6  67                 	db	103	;'g'
  1782  00FFA7  20                 	db	32
  1783  00FFA8  45                 	db	69	;'E'
  1784  00FFA9  6E                 	db	110	;'n'
  1785  00FFAA  61                 	db	97	;'a'
  1786  00FFAB  62                 	db	98	;'b'
  1787  00FFAC  6C                 	db	108	;'l'
  1788  00FFAD  65                 	db	101	;'e'
  1789  00FFAE  64                 	db	100	;'d'
  1790  00FFAF  0D                 	db	13
  1791  00FFB0  0A                 	db	10
  1792  00FFB1  00                 	db	0
  1793  00FFB2                     STR_4:
  1794                           
  1795                           ; BSR set to: 0
  1796  00FFB2  55                 	db	85	;'U'
  1797  00FFB3  70                 	db	112	;'p'
  1798  00FFB4  64                 	db	100	;'d'
  1799  00FFB5  61                 	db	97	;'a'
  1800  00FFB6  74                 	db	116	;'t'
  1801  00FFB7  65                 	db	101	;'e'
  1802  00FFB8  64                 	db	100	;'d'
  1803  00FFB9  4D                 	db	77	;'M'
  1804  00FFBA  42                 	db	66	;'B'
  1805  00FFBB  34                 	db	52	;'4'
  1806  00FFBC  30                 	db	48	;'0'
  1807  00FFBD  30                 	db	48	;'0'
  1808  00FFBE  20                 	db	32
  1809  00FFBF  0D                 	db	13
  1810  00FFC0  0A                 	db	10
  1811  00FFC1  00                 	db	0
  1812  00FFC2                     STR_17:
  1813                           
  1814                           ; BSR set to: 0
  1815  00FFC2  52                 	db	82	;'R'
  1816  00FFC3  65                 	db	101	;'e'
  1817  00FFC4  61                 	db	97	;'a'
  1818  00FFC5  64                 	db	100	;'d'
  1819  00FFC6  3A                 	db	58	;':'
  1820  00FFC7  20                 	db	32
  1821  00FFC8  30                 	db	48	;'0'
  1822  00FFC9  78                 	db	120	;'x'
  1823  00FFCA  25                 	db	37
  1824  00FFCB  30                 	db	48	;'0'
  1825  00FFCC  32                 	db	50	;'2'
  1826  00FFCD  78                 	db	120	;'x'
  1827  00FFCE  20                 	db	32
  1828  00FFCF  0D                 	db	13
  1829  00FFD0  0A                 	db	10
  1830  00FFD1  00                 	db	0
  1831  00FFD2                     STR_25:
  1832                           
  1833                           ; BSR set to: 0
  1834  00FFD2  4D                 	db	77	;'M'
  1835  00FFD3  61                 	db	97	;'a'
  1836  00FFD4  72                 	db	114	;'r'
  1837  00FFD5  20                 	db	32
  1838  00FFD6  31                 	db	49	;'1'
  1839  00FFD7  38                 	db	56	;'8'
  1840  00FFD8  20                 	db	32
  1841  00FFD9  32                 	db	50	;'2'
  1842  00FFDA  30                 	db	48	;'0'
  1843  00FFDB  32                 	db	50	;'2'
  1844  00FFDC  31                 	db	49	;'1'
  1845  00FFDD  00                 	db	0
  1846  00FFDE                     STR_26:
  1847                           
  1848                           ; BSR set to: 0
  1849  00FFDE  30                 	db	48	;'0'
  1850  00FFDF  30                 	db	48	;'0'
  1851  00FFE0  3A                 	db	58	;':'
  1852  00FFE1  34                 	db	52	;'4'
  1853  00FFE2  32                 	db	50	;'2'
  1854  00FFE3  3A                 	db	58	;':'
  1855  00FFE4  35                 	db	53	;'5'
  1856  00FFE5  39                 	db	57	;'9'
  1857  00FFE6  00                 	db	0
  1858  00FFE7                     STR_51:
  1859                           
  1860                           ; BSR set to: 0
  1861  00FFE7  73                 	db	115	;'s'
  1862  00FFE8  65                 	db	101	;'e'
  1863  00FFE9  72                 	db	114	;'r'
  1864  00FFEA  69                 	db	105	;'i'
  1865  00FFEB  61                 	db	97	;'a'
  1866  00FFEC  6C                 	db	108	;'l'
  1867  00FFED  00                 	db	0
  1868  00FFEE                     STR_47:
  1869                           
  1870                           ; BSR set to: 0
  1871  00FFEE  64                 	db	100	;'d'
  1872  00FFEF  65                 	db	101	;'e'
  1873  00FFF0  62                 	db	98	;'b'
  1874  00FFF1  75                 	db	117	;'u'
  1875  00FFF2  67                 	db	103	;'g'
  1876  00FFF3  00                 	db	0
  1877  00FFF4                     STR_53:
  1878                           
  1879                           ; BSR set to: 0
  1880  00FFF4  70                 	db	112	;'p'
  1881  00FFF5  61                 	db	97	;'a'
  1882  00FFF6  72                 	db	114	;'r'
  1883  00FFF7  74                 	db	116	;'t'
  1884  00FFF8  00                 	db	0
  1885  00FFF9                     STR_55:
  1886                           
  1887                           ; BSR set to: 0
  1888  00FFF9  72                 	db	114	;'r'
  1889  00FFFA  65                 	db	101	;'e'
  1890  00FFFB  76                 	db	118	;'v'
  1891  00FFFC  00                 	db	0
  1892  00FFFD                     STR_49:
  1893                           
  1894                           ; BSR set to: 0
  1895  00FFFD  3F                 	db	63	;'?'
  1896  00FFFE  00                 	db	0
  1897  0000                     
  1898                           ; #config settings
  1899  00FFFF  00                 	db	0	; dummy byte at the end
  1900  0000                     
  1901                           	psect	cinit
  1902  00243E                     __pcinit:
  1903                           	opt callstack 0
  1904  00243E                     start_initialization:
  1905                           	opt callstack 0
  1906  00243E                     __initialization:
  1907                           	opt callstack 0
  1908                           
  1909                           ; Initialize objects allocated to BANK4 (64 bytes)
  1910                           ; load TBLPTR registers with __pidataBANK4
  1911  00243E  0E96               	movlw	low __pidataBANK4
  1912  002440  6EF6               	movwf	tblptrl,c
  1913  002442  0E37               	movlw	high __pidataBANK4
  1914  002444  6EF7               	movwf	tblptrh,c
  1915  002446  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1916  002448  6EF8               	movwf	tblptru,c
  1917  00244A  EE04  F064         	lfsr	0,__pdataBANK4
  1918  00244E  EE10 F040          	lfsr	1,64
  1919  002452                     copy_data0:
  1920  002452  0009               	tblrd		*+
  1921  002454  CFF5 FFEE          	movff	tablat,postinc0
  1922  002458  50E5               	movf	postdec1,w,c
  1923  00245A  50E1               	movf	fsr1l,w,c
  1924  00245C  E1FA               	bnz	copy_data0
  1925                           
  1926                           ; Initialize objects allocated to BANK3 (64 bytes)
  1927                           ; load TBLPTR registers with __pidataBANK3
  1928  00245E  0E56               	movlw	low __pidataBANK3
  1929  002460  6EF6               	movwf	tblptrl,c
  1930  002462  0E37               	movlw	high __pidataBANK3
  1931  002464  6EF7               	movwf	tblptrh,c
  1932  002466  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1933  002468  6EF8               	movwf	tblptru,c
  1934  00246A  EE03  F0A4         	lfsr	0,__pdataBANK3
  1935  00246E  EE10 F040          	lfsr	1,64
  1936  002472                     copy_data1:
  1937  002472  0009               	tblrd		*+
  1938  002474  CFF5 FFEE          	movff	tablat,postinc0
  1939  002478  50E5               	movf	postdec1,w,c
  1940  00247A  50E1               	movf	fsr1l,w,c
  1941  00247C  E1FA               	bnz	copy_data1
  1942                           
  1943                           ; Initialize objects allocated to BANK2 (60 bytes)
  1944                           ; load TBLPTR registers with __pidataBANK2
  1945  00247E  0E16               	movlw	low __pidataBANK2
  1946  002480  6EF6               	movwf	tblptrl,c
  1947  002482  0E38               	movlw	high __pidataBANK2
  1948  002484  6EF7               	movwf	tblptrh,c
  1949  002486  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1950  002488  6EF8               	movwf	tblptru,c
  1951  00248A  EE02  F0A4         	lfsr	0,__pdataBANK2
  1952  00248E  EE10 F03C          	lfsr	1,60
  1953  002492                     copy_data2:
  1954  002492  0009               	tblrd		*+
  1955  002494  CFF5 FFEE          	movff	tablat,postinc0
  1956  002498  50E5               	movf	postdec1,w,c
  1957  00249A  50E1               	movf	fsr1l,w,c
  1958  00249C  E1FA               	bnz	copy_data2
  1959                           
  1960                           ; Initialize objects allocated to BANK1 (129 bytes)
  1961                           ; load TBLPTR registers with __pidataBANK1
  1962  00249E  0E08               	movlw	low __pidataBANK1
  1963  0024A0  6EF6               	movwf	tblptrl,c
  1964  0024A2  0E2F               	movlw	high __pidataBANK1
  1965  0024A4  6EF7               	movwf	tblptrh,c
  1966  0024A6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1967  0024A8  6EF8               	movwf	tblptru,c
  1968  0024AA  EE01  F000         	lfsr	0,__pdataBANK1
  1969  0024AE  EE10 F081          	lfsr	1,129
  1970  0024B2                     copy_data3:
  1971  0024B2  0009               	tblrd		*+
  1972  0024B4  CFF5 FFEE          	movff	tablat,postinc0
  1973  0024B8  50E5               	movf	postdec1,w,c
  1974  0024BA  50E1               	movf	fsr1l,w,c
  1975  0024BC  E1FA               	bnz	copy_data3
  1976                           
  1977                           ; Initialize objects allocated to BANK0 (2 bytes)
  1978                           ; load TBLPTR registers with __pidataBANK0
  1979  0024BE  0EC2               	movlw	low __pidataBANK0
  1980  0024C0  6EF6               	movwf	tblptrl,c
  1981  0024C2  0E3B               	movlw	high __pidataBANK0
  1982  0024C4  6EF7               	movwf	tblptrh,c
  1983  0024C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1984  0024C8  6EF8               	movwf	tblptru,c
  1985  0024CA  0009               	tblrd		*+	;fetch initializer
  1986  0024CC  CFF5 F0BD          	movff	tablat,__pdataBANK0
  1987  0024D0  0009               	tblrd		*+	;fetch initializer
  1988  0024D2  CFF5 F0BE          	movff	tablat,__pdataBANK0+1
  1989                           
  1990                           ; Clear objects allocated to BANK5 (100 bytes)
  1991  0024D6  EE05  F000         	lfsr	0,__pbssBANK5
  1992  0024DA  0E64               	movlw	100
  1993  0024DC                     clear_0:
  1994  0024DC  6AEE               	clrf	postinc0,c
  1995  0024DE  06E8               	decf	wreg,f,c
  1996  0024E0  E1FD               	bnz	clear_0
  1997                           
  1998                           ; Clear objects allocated to BANK4 (100 bytes)
  1999  0024E2  EE04  F000         	lfsr	0,__pbssBANK4
  2000  0024E6  0E64               	movlw	100
  2001  0024E8                     clear_1:
  2002  0024E8  6AEE               	clrf	postinc0,c
  2003  0024EA  06E8               	decf	wreg,f,c
  2004  0024EC  E1FD               	bnz	clear_1
  2005                           
  2006                           ; Clear objects allocated to BANK3 (164 bytes)
  2007  0024EE  EE03  F000         	lfsr	0,__pbssBANK3
  2008  0024F2  0EA4               	movlw	164
  2009  0024F4                     clear_2:
  2010  0024F4  6AEE               	clrf	postinc0,c
  2011  0024F6  06E8               	decf	wreg,f,c
  2012  0024F8  E1FD               	bnz	clear_2
  2013                           
  2014                           ; Clear objects allocated to BANK2 (164 bytes)
  2015  0024FA  EE02  F000         	lfsr	0,__pbssBANK2
  2016  0024FE  0EA4               	movlw	164
  2017  002500                     clear_3:
  2018  002500  6AEE               	clrf	postinc0,c
  2019  002502  06E8               	decf	wreg,f,c
  2020  002504  E1FD               	bnz	clear_3
  2021                           
  2022                           ; Clear objects allocated to BANK1 (94 bytes)
  2023  002506  EE01  F081         	lfsr	0,__pbssBANK1
  2024  00250A  0E5E               	movlw	94
  2025  00250C                     clear_4:
  2026  00250C  6AEE               	clrf	postinc0,c
  2027  00250E  06E8               	decf	wreg,f,c
  2028  002510  E1FD               	bnz	clear_4
  2029                           
  2030                           ; Clear objects allocated to BANK0 (24 bytes)
  2031  002512  EE00  F0A3         	lfsr	0,__pbssBANK0
  2032  002516  0E18               	movlw	24
  2033  002518                     clear_5:
  2034  002518  6AEE               	clrf	postinc0,c
  2035  00251A  06E8               	decf	wreg,f,c
  2036  00251C  E1FD               	bnz	clear_5
  2037                           
  2038                           ; Clear objects allocated to COMRAM (4 bytes)
  2039  00251E  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2040  002520  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2041  002522  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2042  002524  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2043  002526                     end_of_initialization:
  2044                           	opt callstack 0
  2045  002526                     __end_of__initialization:
  2046                           	opt callstack 0
  2047  002526  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2048  002528  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2049  00252A  0100               	movlb	0
  2050  00252C  EF9B  F011         	goto	_main	;jump to C main() function
  2051                           
  2052                           	psect	bssCOMRAM
  2053  000057                     __pbssCOMRAM:
  2054                           	opt callstack 0
  2055  000057                     _flags:
  2056                           	opt callstack 0
  2057  000057                     	ds	2
  2058  000059                     _eusart1RxHead:
  2059                           	opt callstack 0
  2060  000059                     	ds	1
  2061  00005A                     _eusart2RxHead:
  2062                           	opt callstack 0
  2063  00005A                     	ds	1
  2064                           
  2065                           	psect	bssBANK0
  2066  0000A3                     __pbssBANK0:
  2067                           	opt callstack 0
  2068  0000A3                     _width:
  2069                           	opt callstack 0
  2070  0000A3                     	ds	2
  2071  0000A5                     _prec:
  2072                           	opt callstack 0
  2073  0000A5                     	ds	2
  2074  0000A7                     _ByteHi:
  2075                           	opt callstack 0
  2076  0000A7                     	ds	2
  2077  0000A9                     _MBResCnt:
  2078                           	opt callstack 0
  2079  0000A9                     	ds	2
  2080  0000AB                     _ByteNum:
  2081                           	opt callstack 0
  2082  0000AB                     	ds	2
  2083  0000AD                     _ModDataCnt:
  2084                           	opt callstack 0
  2085  0000AD                     	ds	2
  2086  0000AF                     _RXStat:
  2087                           	opt callstack 0
  2088  0000AF                     	ds	1
  2089  0000B0                     _Debug:
  2090                           	opt callstack 0
  2091  0000B0                     	ds	1
  2092  0000B1                     _eusart1RxLastError:
  2093                           	opt callstack 0
  2094  0000B1                     	ds	1
  2095  0000B2                     _eusart1RxCount:
  2096                           	opt callstack 0
  2097  0000B2                     	ds	1
  2098  0000B3                     _eusart1RxTail:
  2099                           	opt callstack 0
  2100  0000B3                     	ds	1
  2101  0000B4                     _eusart1TxTail:
  2102                           	opt callstack 0
  2103  0000B4                     	ds	1
  2104  0000B5                     _eusart1TxHead:
  2105                           	opt callstack 0
  2106  0000B5                     	ds	1
  2107  0000B6                     _eusart2RxLastError:
  2108                           	opt callstack 0
  2109  0000B6                     	ds	1
  2110  0000B7                     _eusart2RxCount:
  2111                           	opt callstack 0
  2112  0000B7                     	ds	1
  2113  0000B8                     _eusart2RxTail:
  2114                           	opt callstack 0
  2115  0000B8                     	ds	1
  2116  0000B9                     _eusart2TxTail:
  2117                           	opt callstack 0
  2118  0000B9                     	ds	1
  2119  0000BA                     _eusart2TxHead:
  2120                           	opt callstack 0
  2121  0000BA                     	ds	1
  2122                           
  2123                           	psect	dataBANK0
  2124  0000BD                     __pdataBANK0:
  2125                           	opt callstack 0
  2126  0000BD                     _ByteLo:
  2127                           	opt callstack 0
  2128  0000BD                     	ds	2
  2129                           
  2130                           	psect	bssBANK1
  2131  000181                     __pbssBANK1:
  2132                           	opt callstack 0
  2133  000181                     _eusart2RxStatusBuffer:
  2134                           	opt callstack 0
  2135  000181                     	ds	32
  2136  0001A1                     	ds	11
  2137  0001AC                     _nout:
  2138                           	opt callstack 0
  2139  0001AC                     	ds	2
  2140  0001AE                     _rxStatus:
  2141                           	opt callstack 0
  2142  0001AE                     	ds	1
  2143  0001AF                     _dbuf:
  2144                           	opt callstack 0
  2145  0001AF                     	ds	32
  2146  0001CF                     _Command:
  2147                           	opt callstack 0
  2148  0001CF                     	ds	16
  2149                           
  2150                           	psect	dataBANK1
  2151  000100                     __pdataBANK1:
  2152                           	opt callstack 0
  2153  000100                     _MB301xx:
  2154                           	opt callstack 0
  2155  000100                     	ds	14
  2156  00010E                     _MB304xx:
  2157                           	opt callstack 0
  2158  00010E                     	ds	10
  2159  000118                     _MB303xx:
  2160                           	opt callstack 0
  2161  000118                     	ds	10
  2162  000122                     stoa@F1139:
  2163                           	opt callstack 0
  2164  000122                     	ds	7
  2165  000129                     _MB307xx:
  2166                           	opt callstack 0
  2167  000129                     	ds	6
  2168  00012F                     _MB305xx:
  2169                           	opt callstack 0
  2170  00012F                     	ds	6
  2171  000135                     _MB306xx:
  2172                           	opt callstack 0
  2173  000135                     	ds	4
  2174  000139                     ReadRX232@F10713:
  2175                           	opt callstack 0
  2176  000139                     	ds	2
  2177  00013B                     _MBResCRC:
  2178                           	opt callstack 0
  2179  00013B                     	ds	2
  2180  00013D                     _ExpectedBytes:
  2181                           	opt callstack 0
  2182  00013D                     	ds	2
  2183  00013F                     _MB302xx:
  2184                           	opt callstack 0
  2185  00013F                     	ds	2
  2186  000141                     _MBRespon:
  2187                           	opt callstack 0
  2188  000141                     	ds	64
  2189                           
  2190                           	psect	bssBANK2
  2191  000200                     __pbssBANK2:
  2192                           	opt callstack 0
  2193  000200                     _ModbusData:
  2194                           	opt callstack 0
  2195  000200                     	ds	100
  2196  000264                     _eusart2RxBuffer:
  2197                           	opt callstack 0
  2198  000264                     	ds	32
  2199  000284                     _eusart2TxBuffer:
  2200                           	opt callstack 0
  2201  000284                     	ds	32
  2202                           
  2203                           	psect	dataBANK2
  2204  0002A4                     __pdataBANK2:
  2205                           	opt callstack 0
  2206  0002A4                     ValidateCmd@F10737:
  2207                           	opt callstack 0
  2208  0002A4                     	ds	20
  2209  0002B8                     ValidateCmd@F10734:
  2210                           	opt callstack 0
  2211  0002B8                     	ds	20
  2212  0002CC                     ValidateCmd@F10731:
  2213                           	opt callstack 0
  2214  0002CC                     	ds	20
  2215                           
  2216                           	psect	bssBANK3
  2217  000300                     __pbssBANK3:
  2218                           	opt callstack 0
  2219  000300                     _eusart1RxStatusBuffer:
  2220                           	opt callstack 0
  2221  000300                     	ds	100
  2222  000364                     _eusart1TxBuffer:
  2223                           	opt callstack 0
  2224  000364                     	ds	64
  2225                           
  2226                           	psect	dataBANK3
  2227  0003A4                     __pdataBANK3:
  2228                           	opt callstack 0
  2229  0003A4                     _MB300xx:
  2230                           	opt callstack 0
  2231  0003A4                     	ds	64
  2232                           
  2233                           	psect	bssBANK4
  2234  000400                     __pbssBANK4:
  2235                           	opt callstack 0
  2236  000400                     _eusart1RxBuffer:
  2237                           	opt callstack 0
  2238  000400                     	ds	100
  2239                           
  2240                           	psect	dataBANK4
  2241  000464                     __pdataBANK4:
  2242                           	opt callstack 0
  2243  000464                     _MB400xx:
  2244                           	opt callstack 0
  2245  000464                     	ds	64
  2246                           
  2247                           	psect	bssBANK5
  2248  000500                     __pbssBANK5:
  2249                           	opt callstack 0
  2250  000500                     _rxData:
  2251                           	opt callstack 0
  2252  000500                     	ds	100
  2253                           
  2254                           	psect	cstackBANK4
  2255  0004A4                     __pcstackBANK4:
  2256                           	opt callstack 0
  2257  0004A4                     ValidateCmd@ConfName:
  2258                           	opt callstack 0
  2259                           
  2260                           ; 20 bytes @ 0x0
  2261  0004A4                     	ds	20
  2262  0004B8                     ValidateCmd@ConfName_1439:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 20 bytes @ 0x14
  2266  0004B8                     	ds	20
  2267  0004CC                     ValidateCmd@ConfName_1443:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 20 bytes @ 0x28
  2271  0004CC                     	ds	20
  2272                           
  2273                           	psect	cstackBANK0
  2274  000060                     __pcstackBANK0:
  2275                           	opt callstack 0
  2276  000060                     vfpfcnvrt@ll:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 8 bytes @ 0x0
  2280  000060                     	ds	8
  2281  000068                     vfpfcnvrt@cp:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 2 bytes @ 0x8
  2285  000068                     	ds	2
  2286  00006A                     vfpfcnvrt@c:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 1 bytes @ 0xA
  2290  00006A                     	ds	1
  2291  00006B                     vfpfcnvrt@done:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 2 bytes @ 0xB
  2295  00006B                     	ds	2
  2296  00006D                     _vfpfcnvrt$1562:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 2 bytes @ 0xD
  2300  00006D                     	ds	2
  2301  00006F                     vfpfcnvrt@llu:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 8 bytes @ 0xF
  2305  00006F                     	ds	8
  2306  000077                     ?_vfprintf:
  2307                           	opt callstack 0
  2308  000077                     vfprintf@fp:
  2309                           	opt callstack 0
  2310                           
  2311                           ; 2 bytes @ 0x17
  2312  000077                     	ds	2
  2313  000079                     vfprintf@fmt:
  2314                           	opt callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x19
  2317  000079                     	ds	2
  2318  00007B                     vfprintf@ap:
  2319                           	opt callstack 0
  2320                           
  2321                           ; 2 bytes @ 0x1B
  2322  00007B                     	ds	2
  2323  00007D                     ?_printf:
  2324                           	opt callstack 0
  2325  00007D                     printf@fmt:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x1D
  2329  00007D                     	ds	12
  2330  000089                     printf@ap:
  2331                           	opt callstack 0
  2332                           
  2333                           ; 2 bytes @ 0x29
  2334  000089                     	ds	2
  2335  00008B                     ??_checkCRC:
  2336  00008B                     ?_ReadRX232:
  2337                           	opt callstack 0
  2338  00008B                     AddRxBuffToModBus@i:
  2339                           	opt callstack 0
  2340  00008B                     PrintModbus@i:
  2341                           	opt callstack 0
  2342  00008B                     PrintModRespon@i:
  2343                           	opt callstack 0
  2344  00008B                     ReadRX232@NumChars:
  2345                           	opt callstack 0
  2346  00008B                     ClearEEAddRange@StartAdd:
  2347                           	opt callstack 0
  2348  00008B                     InitialiseString@SerialNum:
  2349                           	opt callstack 0
  2350                           
  2351                           ; 11 bytes @ 0x2B
  2352  00008B                     	ds	2
  2353  00008D                     ??_ModbusFC03:
  2354  00008D                     ??_ModbusFC10:
  2355  00008D                     ModbusError@ErrorCode:
  2356                           	opt callstack 0
  2357  00008D                     ClearEEAddRange@NumBytes:
  2358                           	opt callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x2D
  2361  00008D                     	ds	2
  2362  00008F                     ??_ModbusError:
  2363  00008F                     SaveCardDat@Name:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 2 bytes @ 0x2F
  2367  00008F                     	ds	1
  2368  000090                     checkCRC@crcHigh:
  2369                           	opt callstack 0
  2370                           
  2371                           ; 2 bytes @ 0x30
  2372  000090                     	ds	1
  2373  000091                     ModbusFC03@i:
  2374                           	opt callstack 0
  2375  000091                     ModbusFC10@TempData:
  2376                           	opt callstack 0
  2377  000091                     SaveCardDat@MBAddress:
  2378                           	opt callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x31
  2381  000091                     	ds	1
  2382  000092                     checkCRC@crcLow:
  2383                           	opt callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x32
  2386  000092                     	ds	1
  2387  000093                     ModbusFC10@i:
  2388                           	opt callstack 0
  2389  000093                     SaveCardDat@dataeeAddr:
  2390                           	opt callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x33
  2393  000093                     	ds	1
  2394  000094                     checkCRC@j:
  2395                           	opt callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x34
  2398  000094                     	ds	1
  2399  000095                     ModbusFC10@j:
  2400                           	opt callstack 0
  2401  000095                     SaveCardDat@NumBytes:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x35
  2405  000095                     	ds	1
  2406  000096                     checkCRC@crc:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x36
  2410  000096                     	ds	1
  2411  000097                     ??_SaveCardDat:
  2412                           
  2413                           ; 1 bytes @ 0x37
  2414  000097                     	ds	1
  2415  000098                     checkCRC@i:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x38
  2419  000098                     	ds	1
  2420  000099                     _SaveCardDat$2426:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x39
  2424  000099                     	ds	2
  2425  00009B                     SaveCardDat@readData:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 1 bytes @ 0x3B
  2429  00009B                     	ds	1
  2430  00009C                     SaveCardDat@Conf:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 1 bytes @ 0x3C
  2434  00009C                     	ds	1
  2435  00009D                     SaveCardDat@dataeeAddrWrk:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 2 bytes @ 0x3D
  2439  00009D                     	ds	2
  2440  00009F                     SaveCardDat@i:
  2441                           	opt callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x3F
  2444  00009F                     	ds	2
  2445  0000A1                     ??_main:
  2446                           
  2447                           ; 1 bytes @ 0x41
  2448  0000A1                     	ds	2
  2449                           
  2450                           	psect	cstackCOMRAM
  2451  000001                     __pcstackCOMRAM:
  2452                           	opt callstack 0
  2453  000001                     ??_INTERRUPT_InterruptManager:
  2454  000001                     
  2455                           ; 1 bytes @ 0x0
  2456  000001                     	ds	4
  2457  000005                     ??_ClearRxBuff:
  2458  000005                     ?_generateCRC:
  2459                           	opt callstack 0
  2460  000005                     ?_strlen:
  2461                           	opt callstack 0
  2462  000005                     ?_strcmp:
  2463                           	opt callstack 0
  2464  000005                     ?_isupper:
  2465                           	opt callstack 0
  2466  000005                     ?_isalpha:
  2467                           	opt callstack 0
  2468  000005                     ?_isdigit:
  2469                           	opt callstack 0
  2470  000005                     ?_isspace:
  2471                           	opt callstack 0
  2472  000005                     ?_islower:
  2473                           	opt callstack 0
  2474  000005                     ?___wmul:
  2475                           	opt callstack 0
  2476  000005                     ?___aodiv:
  2477                           	opt callstack 0
  2478  000005                     ?___aomod:
  2479                           	opt callstack 0
  2480  000005                     ?___lodiv:
  2481                           	opt callstack 0
  2482  000005                     ?___lomod:
  2483                           	opt callstack 0
  2484  000005                     EUSART2_Read@readValue:
  2485                           	opt callstack 0
  2486  000005                     EUSART2_Write@txData:
  2487                           	opt callstack 0
  2488  000005                     EUSART1_Read@readValue:
  2489                           	opt callstack 0
  2490  000005                     EUSART1_Write@txData:
  2491                           	opt callstack 0
  2492  000005                     DATAEE_WriteByte@bAdd:
  2493                           	opt callstack 0
  2494  000005                     DATAEE_ReadByte@bAdd:
  2495                           	opt callstack 0
  2496  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  2497                           	opt callstack 0
  2498  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  2499                           	opt callstack 0
  2500  000005                     EUSART2_SetErrorHandler@interruptHandler:
  2501                           	opt callstack 0
  2502  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2503                           	opt callstack 0
  2504  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2505                           	opt callstack 0
  2506  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2507                           	opt callstack 0
  2508  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2509                           	opt callstack 0
  2510  000005                     EUSART1_SetErrorHandler@interruptHandler:
  2511                           	opt callstack 0
  2512  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  2513                           	opt callstack 0
  2514  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  2515                           	opt callstack 0
  2516  000005                     ClearModbusData@i:
  2517                           	opt callstack 0
  2518  000005                     generateCRC@MessCnt:
  2519                           	opt callstack 0
  2520  000005                     ClearModbusRespon@i:
  2521                           	opt callstack 0
  2522  000005                     ___wmul@multiplier:
  2523                           	opt callstack 0
  2524  000005                     isalpha@c:
  2525                           	opt callstack 0
  2526  000005                     isdigit@c:
  2527                           	opt callstack 0
  2528  000005                     isspace@c:
  2529                           	opt callstack 0
  2530  000005                     isupper@c:
  2531                           	opt callstack 0
  2532  000005                     strcmp@l:
  2533                           	opt callstack 0
  2534  000005                     strlen@s:
  2535                           	opt callstack 0
  2536  000005                     islower@c:
  2537                           	opt callstack 0
  2538  000005                     ___aodiv@dividend:
  2539                           	opt callstack 0
  2540  000005                     ___aomod@dividend:
  2541                           	opt callstack 0
  2542  000005                     ___lodiv@dividend:
  2543                           	opt callstack 0
  2544  000005                     ___lomod@dividend:
  2545                           	opt callstack 0
  2546                           
  2547                           ; 8 bytes @ 0x4
  2548  000005                     	ds	1
  2549  000006                     putch@txData:
  2550                           	opt callstack 0
  2551  000006                     ClearRxBuff@i:
  2552                           	opt callstack 0
  2553  000006                     UART1_Write_string@data:
  2554                           	opt callstack 0
  2555                           
  2556                           ; 2 bytes @ 0x5
  2557  000006                     	ds	1
  2558  000007                     ??_isupper:
  2559  000007                     ??_isalpha:
  2560  000007                     ??_isdigit:
  2561  000007                     ??_isspace:
  2562  000007                     ??_islower:
  2563  000007                     DATAEE_WriteByte@bData:
  2564                           	opt callstack 0
  2565  000007                     generateCRC@HiOrLo:
  2566                           	opt callstack 0
  2567  000007                     SerIni@SerialNum:
  2568                           	opt callstack 0
  2569  000007                     ___wmul@multiplicand:
  2570                           	opt callstack 0
  2571  000007                     fputc@c:
  2572                           	opt callstack 0
  2573  000007                     strcmp@r:
  2574                           	opt callstack 0
  2575  000007                     strlen@a:
  2576                           	opt callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x6
  2579  000007                     	ds	1
  2580  000008                     ??_generateCRC:
  2581  000008                     DATAEE_WriteByte@GIEBitValue:
  2582                           	opt callstack 0
  2583  000008                     UART1_Write_string@data_len:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 2 bytes @ 0x7
  2587  000008                     	ds	1
  2588  000009                     ??_strcmp:
  2589  000009                     ??_SerIni:
  2590  000009                     ___wmul@product:
  2591                           	opt callstack 0
  2592  000009                     memmove@d1:
  2593                           	opt callstack 0
  2594  000009                     fputc@fp:
  2595                           	opt callstack 0
  2596  000009                     strcpy@dest:
  2597                           	opt callstack 0
  2598                           
  2599                           ; 2 bytes @ 0x8
  2600  000009                     	ds	1
  2601  00000A                     ??_UART1_Write_string:
  2602  00000A                     generateCRC@crcHigh:
  2603                           	opt callstack 0
  2604                           
  2605                           ; 2 bytes @ 0x9
  2606  00000A                     	ds	1
  2607  00000B                     ??_fputc:
  2608  00000B                     ?_toupper:
  2609                           	opt callstack 0
  2610  00000B                     _isspace$2049:
  2611                           	opt callstack 0
  2612  00000B                     UART1_Write_string@i:
  2613                           	opt callstack 0
  2614  00000B                     SerIni@dataeeAddrWrk:
  2615                           	opt callstack 0
  2616  00000B                     memmove@s1:
  2617                           	opt callstack 0
  2618  00000B                     strcpy@src:
  2619                           	opt callstack 0
  2620  00000B                     toupper@c:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0xA
  2624  00000B                     	ds	1
  2625  00000C                     ?_atoi:
  2626                           	opt callstack 0
  2627  00000C                     generateCRC@crcLow:
  2628                           	opt callstack 0
  2629  00000C                     atoi@s:
  2630                           	opt callstack 0
  2631                           
  2632                           ; 2 bytes @ 0xB
  2633  00000C                     	ds	1
  2634  00000D                     ??_strcpy:
  2635  00000D                     ??_toupper:
  2636  00000D                     SerIni@readDataOdd:
  2637                           	opt callstack 0
  2638  00000D                     memmove@n:
  2639                           	opt callstack 0
  2640  00000D                     ___aodiv@divisor:
  2641                           	opt callstack 0
  2642  00000D                     ___aomod@divisor:
  2643                           	opt callstack 0
  2644  00000D                     ___lodiv@divisor:
  2645                           	opt callstack 0
  2646  00000D                     ___lomod@divisor:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 8 bytes @ 0xC
  2650  00000D                     	ds	1
  2651  00000E                     ??_atoi:
  2652  00000E                     SerIni@readDataEven:
  2653                           	opt callstack 0
  2654  00000E                     generateCRC@i:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 2 bytes @ 0xD
  2658  00000E                     	ds	1
  2659  00000F                     ??_memmove:
  2660  00000F                     SerIni@i:
  2661                           	opt callstack 0
  2662  00000F                     strcpy@s:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0xE
  2666  00000F                     	ds	1
  2667  000010                     ?_stoa:
  2668                           	opt callstack 0
  2669  000010                     generateCRC@j:
  2670                           	opt callstack 0
  2671  000010                     stoa@fp:
  2672                           	opt callstack 0
  2673  000010                     fputs@s:
  2674                           	opt callstack 0
  2675                           
  2676                           ; 2 bytes @ 0xF
  2677  000010                     	ds	1
  2678  000011                     SerIni@j:
  2679                           	opt callstack 0
  2680  000011                     memmove@d:
  2681                           	opt callstack 0
  2682  000011                     strcpy@d:
  2683                           	opt callstack 0
  2684  000011                     _toupper$2136:
  2685                           	opt callstack 0
  2686                           
  2687                           ; 2 bytes @ 0x10
  2688  000011                     	ds	1
  2689  000012                     generateCRC@crc:
  2690                           	opt callstack 0
  2691  000012                     stoa@s:
  2692                           	opt callstack 0
  2693  000012                     atoi@neg:
  2694                           	opt callstack 0
  2695  000012                     fputs@fp:
  2696                           	opt callstack 0
  2697                           
  2698                           ; 2 bytes @ 0x11
  2699  000012                     	ds	1
  2700  000013                     memmove@s:
  2701                           	opt callstack 0
  2702  000013                     strcat@dest:
  2703                           	opt callstack 0
  2704                           
  2705                           ; 2 bytes @ 0x12
  2706  000013                     	ds	1
  2707  000014                     ??_stoa:
  2708  000014                     fputs@c:
  2709                           	opt callstack 0
  2710  000014                     _atoi$2022:
  2711                           	opt callstack 0
  2712                           
  2713                           ; 2 bytes @ 0x13
  2714  000014                     	ds	1
  2715  000015                     ___aodiv@counter:
  2716                           	opt callstack 0
  2717  000015                     ___aomod@counter:
  2718                           	opt callstack 0
  2719  000015                     ___lomod@counter:
  2720                           	opt callstack 0
  2721  000015                     fputs@i:
  2722                           	opt callstack 0
  2723  000015                     strcat@src:
  2724                           	opt callstack 0
  2725  000015                     stoa@nuls:
  2726                           	opt callstack 0
  2727  000015                     ___lodiv@quotient:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 8 bytes @ 0x14
  2731  000015                     	ds	1
  2732  000016                     ___aodiv@sign:
  2733                           	opt callstack 0
  2734  000016                     ___aomod@sign:
  2735                           	opt callstack 0
  2736  000016                     _atoi$2024:
  2737                           	opt callstack 0
  2738                           
  2739                           ; 2 bytes @ 0x15
  2740  000016                     	ds	1
  2741  000017                     ?_abs:
  2742                           	opt callstack 0
  2743  000017                     ?_pad:
  2744                           	opt callstack 0
  2745  000017                     pad@fp:
  2746                           	opt callstack 0
  2747  000017                     abs@a:
  2748                           	opt callstack 0
  2749  000017                     ___aodiv@quotient:
  2750                           	opt callstack 0
  2751                           
  2752                           ; 8 bytes @ 0x16
  2753  000017                     	ds	1
  2754  000018                     _atoi$2023:
  2755                           	opt callstack 0
  2756                           
  2757                           ; 1 bytes @ 0x17
  2758  000018                     	ds	1
  2759  000019                     ??_abs:
  2760  000019                     pad@buf:
  2761                           	opt callstack 0
  2762  000019                     atoi@n:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 2 bytes @ 0x18
  2766  000019                     	ds	2
  2767  00001B                     pad@p:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x1A
  2771  00001B                     	ds	1
  2772  00001C                     stoa@i:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 2 bytes @ 0x1B
  2776  00001C                     	ds	1
  2777  00001D                     ??_pad:
  2778  00001D                     ___lodiv@counter:
  2779                           	opt callstack 0
  2780                           
  2781                           ; 1 bytes @ 0x1C
  2782  00001D                     	ds	1
  2783  00001E                     pad@i:
  2784                           	opt callstack 0
  2785  00001E                     stoa@w:
  2786                           	opt callstack 0
  2787                           
  2788                           ; 2 bytes @ 0x1D
  2789  00001E                     	ds	2
  2790  000020                     pad@w:
  2791                           	opt callstack 0
  2792  000020                     stoa@cp:
  2793                           	opt callstack 0
  2794                           
  2795                           ; 2 bytes @ 0x1F
  2796  000020                     	ds	2
  2797  000022                     ?_dtoa:
  2798                           	opt callstack 0
  2799  000022                     ?_utoa:
  2800                           	opt callstack 0
  2801  000022                     ?_xtoa:
  2802                           	opt callstack 0
  2803  000022                     dtoa@fp:
  2804                           	opt callstack 0
  2805  000022                     stoa@p:
  2806                           	opt callstack 0
  2807  000022                     utoa@fp:
  2808                           	opt callstack 0
  2809  000022                     xtoa@fp:
  2810                           	opt callstack 0
  2811                           
  2812                           ; 2 bytes @ 0x21
  2813  000022                     	ds	2
  2814  000024                     stoa@l:
  2815                           	opt callstack 0
  2816  000024                     dtoa@d:
  2817                           	opt callstack 0
  2818  000024                     utoa@d:
  2819                           	opt callstack 0
  2820  000024                     xtoa@d:
  2821                           	opt callstack 0
  2822                           
  2823                           ; 8 bytes @ 0x23
  2824  000024                     	ds	8
  2825  00002C                     ??_dtoa:
  2826  00002C                     ??_utoa:
  2827  00002C                     xtoa@x:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 1 bytes @ 0x2B
  2831  00002C                     	ds	1
  2832  00002D                     ??_xtoa:
  2833                           
  2834                           ; 1 bytes @ 0x2C
  2835  00002D                     	ds	7
  2836  000034                     _dtoa$1518:
  2837                           	opt callstack 0
  2838  000034                     utoa@p:
  2839                           	opt callstack 0
  2840                           
  2841                           ; 2 bytes @ 0x33
  2842  000034                     	ds	1
  2843  000035                     _xtoa$1547:
  2844                           	opt callstack 0
  2845                           
  2846                           ; 2 bytes @ 0x34
  2847  000035                     	ds	1
  2848  000036                     dtoa@p:
  2849                           	opt callstack 0
  2850  000036                     utoa@w:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x35
  2854  000036                     	ds	1
  2855  000037                     _xtoa$1548:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 2 bytes @ 0x36
  2859  000037                     	ds	1
  2860  000038                     dtoa@w:
  2861                           	opt callstack 0
  2862  000038                     utoa@n:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 8 bytes @ 0x37
  2866  000038                     	ds	1
  2867  000039                     xtoa@p:
  2868                           	opt callstack 0
  2869                           
  2870                           ; 2 bytes @ 0x38
  2871  000039                     	ds	1
  2872  00003A                     dtoa@s:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 2 bytes @ 0x39
  2876  00003A                     	ds	1
  2877  00003B                     xtoa@w:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 2 bytes @ 0x3A
  2881  00003B                     	ds	1
  2882  00003C                     dtoa@n:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 8 bytes @ 0x3B
  2886  00003C                     	ds	1
  2887  00003D                     xtoa@n:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 8 bytes @ 0x3C
  2891  00003D                     	ds	3
  2892  000040                     utoa@i:
  2893                           	opt callstack 0
  2894                           
  2895                           ; 2 bytes @ 0x3F
  2896  000040                     	ds	4
  2897  000044                     dtoa@i:
  2898                           	opt callstack 0
  2899                           
  2900                           ; 2 bytes @ 0x43
  2901  000044                     	ds	1
  2902  000045                     xtoa@i:
  2903                           	opt callstack 0
  2904                           
  2905                           ; 2 bytes @ 0x44
  2906  000045                     	ds	2
  2907  000047                     xtoa@c:
  2908                           	opt callstack 0
  2909                           
  2910                           ; 2 bytes @ 0x46
  2911  000047                     	ds	2
  2912  000049                     ?_vfpfcnvrt:
  2913                           	opt callstack 0
  2914  000049                     vfpfcnvrt@fp:
  2915                           	opt callstack 0
  2916                           
  2917                           ; 2 bytes @ 0x48
  2918  000049                     	ds	2
  2919  00004B                     vfpfcnvrt@fmt:
  2920                           	opt callstack 0
  2921                           
  2922                           ; 2 bytes @ 0x4A
  2923  00004B                     	ds	2
  2924  00004D                     vfpfcnvrt@ap:
  2925                           	opt callstack 0
  2926                           
  2927                           ; 2 bytes @ 0x4C
  2928  00004D                     	ds	2
  2929  00004F                     ??_vfpfcnvrt:
  2930                           
  2931                           ; 1 bytes @ 0x4E
  2932  00004F                     	ds	4
  2933  000053                     vfprintf@cfmt:
  2934                           	opt callstack 0
  2935                           
  2936                           ; 2 bytes @ 0x52
  2937  000053                     	ds	2
  2938  000055                     ??_PrintModbus:
  2939  000055                     ??_PrintModRespon:
  2940  000055                     ??_AddRxBuffToModBus:
  2941  000055                     PrintMB400@i:
  2942                           	opt callstack 0
  2943  000055                     ReadRX232@temp:
  2944                           	opt callstack 0
  2945  000055                     ClearEEAddRange@i:
  2946                           	opt callstack 0
  2947                           
  2948                           ; 2 bytes @ 0x54
  2949  000055                     	ds	1
  2950  000056                     ??_ModbusRx:
  2951                           
  2952                           ; 1 bytes @ 0x55
  2953  000056                     	ds	1
  2954  000057                     
  2955                           ; 1 bytes @ 0x56
  2956 ;;
  2957 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2958 ;;
  2959 ;; *************** function _main *****************
  2960 ;; Defined at:
  2961 ;;		line 29 in file "main.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  RXStat          1    0        _Bool 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2977 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2979 ;;Total ram usage:        3 bytes
  2980 ;; Hardware stack levels required when called:   16
  2981 ;; This function calls:
  2982 ;;		_ClearModbusData
  2983 ;;		_ClearModbusRespon
  2984 ;;		_ClearRxBuff
  2985 ;;		_InitialiseString
  2986 ;;		_ModbusError
  2987 ;;		_ModbusFC03
  2988 ;;		_ModbusFC10
  2989 ;;		_ModbusRx
  2990 ;;		_PrintMB400
  2991 ;;		_PrintModbus
  2992 ;;		_RXMode
  2993 ;;		_ReadRX232
  2994 ;;		_SYSTEM_Initialize
  2995 ;;		_ValidateCmd
  2996 ;;		_printf
  2997 ;;		_strcpy
  2998 ;; This function is called by:
  2999 ;;		Startup code after reset
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text0
  3004  002336                     __ptext0:
  3005                           	opt callstack 0
  3006  002336                     _main:
  3007                           	opt callstack 15
  3008  002336                     
  3009                           ;main.c: 32:     SYSTEM_Initialize();
  3010  002336  EC2B  F01D         	call	_SYSTEM_Initialize	;wreg free
  3011  00233A                     
  3012                           ;main.c: 39:     (INTCONbits.GIE = 1);
  3013  00233A  8EF2               	bsf	242,7,c	;volatile
  3014  00233C                     
  3015                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  3016  00233C  8CF2               	bsf	242,6,c	;volatile
  3017  00233E  9883               	bcf	131,4,c	;volatile
  3018  002340  9A83               	bcf	131,5,c	;volatile
  3019  002342  9C83               	bcf	131,6,c	;volatile
  3020  002344  9E83               	bcf	131,7,c	;volatile
  3021  002346                     
  3022                           ;main.c: 55:     InitialiseString();
  3023  002346  EC57  F016         	call	_InitialiseString	;wreg free
  3024  00234A                     
  3025                           ;main.c: 58:     RXMode();
  3026  00234A  ECD0  F01D         	call	_RXMode	;wreg free
  3027  00234E                     
  3028                           ;main.c: 59:     ClearRxBuff();
  3029  00234E  ECFC  F01A         	call	_ClearRxBuff	;wreg free
  3030  002352                     
  3031                           ;main.c: 60:     ClearModbusRespon();
  3032  002352  ECB0  F01A         	call	_ClearModbusRespon	;wreg free
  3033  002356                     l6949:
  3034                           
  3035                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  3036  002356  ECD5  F00D         	call	_ModbusRx	;wreg free
  3037  00235A  06E8               	decf	wreg,f,c
  3038  00235C  A4D8               	btfss	status,2,c
  3039  00235E  EFB3  F011         	goto	u6971
  3040  002362  EFB5  F011         	goto	u6970
  3041  002366                     u6971:
  3042  002366  EFFC  F011         	goto	l6977
  3043  00236A                     u6970:
  3044  00236A                     
  3045                           ;main.c: 70:             if(Debug == 1){
  3046  00236A  0100               	movlb	0	; () banked
  3047  00236C  05B0               	decf	_Debug& (0+255),w,b
  3048  00236E  A4D8               	btfss	status,2,c
  3049  002370  EFBC  F011         	goto	u6981
  3050  002374  EFBE  F011         	goto	u6980
  3051  002378                     u6981:
  3052  002378  EFE5  F011         	goto	l6975
  3053  00237C                     u6980:
  3054  00237C                     
  3055                           ; BSR set to: 0
  3056                           ;main.c: 71:                 PrintModbus();
  3057  00237C  EC40  F017         	call	_PrintModbus	;wreg free
  3058  002380  EFE5  F011         	goto	l6975
  3059  002384                     l6955:
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;main.c: 77:                 {;main.c: 81:                     ModbusFC03();
  3063  002384  ECA4  F008         	call	_ModbusFC03	;wreg free
  3064  002388                     l6957:
  3065                           
  3066                           ;main.c: 82:                     ClearModbusData();
  3067  002388  ECD6  F01A         	call	_ClearModbusData	;wreg free
  3068  00238C                     
  3069                           ;main.c: 83:                     ClearModbusRespon();
  3070  00238C  ECB0  F01A         	call	_ClearModbusRespon	;wreg free
  3071                           
  3072                           ;main.c: 84:                     break;
  3073  002390  EFAB  F011         	goto	l6949
  3074  002394                     l6961:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;main.c: 87:                 {;main.c: 88:                     printf("Function Code 0x1
      +                          0\r\n");
  3078  002394  0E45               	movlw	low STR_1
  3079  002396  6F7D               	movwf	printf@fmt& (0+255),b
  3080  002398  0EFF               	movlw	high STR_1
  3081  00239A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3082  00239C  ECE3  F01C         	call	_printf	;wreg free
  3083                           
  3084                           ;main.c: 90:                     PrintMB400();
  3085  0023A0  ECB6  F018         	call	_PrintMB400	;wreg free
  3086                           
  3087                           ;main.c: 91:                     ModbusFC10();
  3088  0023A4  EC7F  F007         	call	_ModbusFC10	;wreg free
  3089  0023A8  EFC4  F011         	goto	l6957
  3090  0023AC                     l6967:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;main.c: 98:                 {;main.c: 99:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  3094  0023AC  0E37               	movlw	low STR_2
  3095  0023AE  6F7D               	movwf	printf@fmt& (0+255),b
  3096  0023B0  0EFE               	movlw	high STR_2
  3097  0023B2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3098  0023B4  ECE3  F01C         	call	_printf	;wreg free
  3099                           
  3100                           ;main.c: 101:                     ModbusError(0x01);
  3101  0023B8  0E00               	movlw	0
  3102  0023BA  0100               	movlb	0	; () banked
  3103  0023BC  6F8E               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  3104  0023BE  0E01               	movlw	1
  3105  0023C0  6F8D               	movwf	ModbusError@ErrorCode& (0+255),b
  3106  0023C2  EC15  F011         	call	_ModbusError	;wreg free
  3107  0023C6  EFC4  F011         	goto	l6957
  3108  0023CA                     l6975:
  3109  0023CA  0102               	movlb	2	; () banked
  3110  0023CC  5101               	movf	(_ModbusData+1)& (0+255),w,b
  3111  0023CE  0100               	movlb	0	; () banked
  3112  0023D0  6FA1               	movwf	??_main& (0+255),b
  3113  0023D2  6BA2               	clrf	(??_main+1)& (0+255),b
  3114                           
  3115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3116                           ; Switch size 1, requested type "simple"
  3117                           ; Number of cases is 1, Range of values is 0 to 0
  3118                           ; switch strategies available:
  3119                           ; Name         Instructions Cycles
  3120                           ; simple_byte            4     3 (average)
  3121                           ;	Chosen strategy is simple_byte
  3122  0023D4  51A2               	movf	(??_main+1)& (0+255),w,b
  3123  0023D6  0A00               	xorlw	0	; case 0
  3124  0023D8  B4D8               	btfsc	status,2,c
  3125  0023DA  EFF1  F011         	goto	l7079
  3126  0023DE  EFD6  F011         	goto	l6967
  3127  0023E2                     l7079:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ; Switch size 1, requested type "simple"
  3131                           ; Number of cases is 2, Range of values is 3 to 16
  3132                           ; switch strategies available:
  3133                           ; Name         Instructions Cycles
  3134                           ; simple_byte            7     4 (average)
  3135                           ;	Chosen strategy is simple_byte
  3136  0023E2  51A1               	movf	??_main& (0+255),w,b
  3137  0023E4  0A03               	xorlw	3	; case 3
  3138  0023E6  B4D8               	btfsc	status,2,c
  3139  0023E8  EFC2  F011         	goto	l6955
  3140  0023EC  0A13               	xorlw	19	; case 16
  3141  0023EE  B4D8               	btfsc	status,2,c
  3142  0023F0  EFCA  F011         	goto	l6961
  3143  0023F4  EFD6  F011         	goto	l6967
  3144  0023F8                     l6977:
  3145  0023F8  0E00               	movlw	0
  3146  0023FA  0100               	movlb	0	; () banked
  3147  0023FC  6F8C               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  3148  0023FE  0E10               	movlw	16
  3149  002400  6F8B               	movwf	ReadRX232@NumChars& (0+255),b
  3150  002402  ECF5  F00F         	call	_ReadRX232	;wreg free
  3151  002406  0100               	movlb	0	; () banked
  3152  002408  518B               	movf	?_ReadRX232& (0+255),w,b
  3153  00240A  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3154  00240C  B4D8               	btfsc	status,2,c
  3155  00240E  EF0B  F012         	goto	u6991
  3156  002412  EF0D  F012         	goto	u6990
  3157  002416                     u6991:
  3158  002416  EF1B  F012         	goto	l594
  3159  00241A                     u6990:
  3160  00241A                     
  3161                           ; BSR set to: 0
  3162                           ;main.c: 109:             if(ValidateCmd() ==1){
  3163  00241A  ECA8  F00A         	call	_ValidateCmd	;wreg free
  3164  00241E                     
  3165                           ;main.c: 117:              strcpy(Command, "");
  3166  00241E  0ECF               	movlw	low _Command
  3167  002420  6E09               	movwf	strcpy@dest^0,c
  3168  002422  0E01               	movlw	high _Command
  3169  002424  6E0A               	movwf	(strcpy@dest+1)^0,c
  3170  002426  0E44               	movlw	low (STR_19+20)
  3171  002428  6E0B               	movwf	strcpy@src^0,c
  3172  00242A  0EFF               	movlw	high (STR_19+20)
  3173  00242C  6E0C               	movwf	(strcpy@src+1)^0,c
  3174  00242E  EC1C  F019         	call	_strcpy	;wreg free
  3175                           
  3176                           ;main.c: 119:         }else{
  3177  002432  EFAB  F011         	goto	l6949
  3178  002436                     l594:
  3179                           
  3180                           ; BSR set to: 0
  3181  002436  EFAB  F011         	goto	l6949
  3182  00243A  EF93  F000         	goto	start
  3183  00243E                     __end_of_main:
  3184                           	opt callstack 0
  3185                           
  3186 ;; *************** function _ValidateCmd *****************
  3187 ;; Defined at:
  3188 ;;		line 244 in file "RS232.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  ConfName       20   40[BANK4 ] unsigned char [20]
  3193 ;;  MaxChars        2    0        int 
  3194 ;;  ConfName       20   20[BANK4 ] unsigned char [20]
  3195 ;;  MaxChars        2    0        int 
  3196 ;;  ConfName       20    0[BANK4 ] unsigned char [20]
  3197 ;;  MaxChars        2    0        int 
  3198 ;;  i               2    0        int 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      _Bool 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0      68       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0      68       0       0       0       0       0       0       
      +0       0       0       0
  3212 ;;Total ram usage:       68 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:   15
  3215 ;; This function calls:
  3216 ;;		_InitialiseString
  3217 ;;		_SaveCardDat
  3218 ;;		_TogDebug
  3219 ;;		_printf
  3220 ;;		_strcmp
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text1
  3227  001550                     __ptext1:
  3228                           	opt callstack 0
  3229  001550                     _ValidateCmd:
  3230                           	opt callstack 15
  3231  001550                     
  3232                           ;RS232.c: 249:     printf("\r\n Validating Command: %s \r\n" , Command);
  3233  001550  0EC6               	movlw	low STR_46
  3234  001552  0100               	movlb	0	; () banked
  3235  001554  6F7D               	movwf	printf@fmt& (0+255),b
  3236  001556  0EFD               	movlw	high STR_46
  3237  001558  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3238  00155A  0ECF               	movlw	low _Command
  3239  00155C  6F7F               	movwf	(?_printf+2)& (0+255),b
  3240  00155E  0E01               	movlw	high _Command
  3241  001560  6F80               	movwf	(?_printf+3)& (0+255),b
  3242  001562  ECE3  F01C         	call	_printf	;wreg free
  3243  001566                     
  3244                           ;RS232.c: 251:     if(!strcmp(Command,"debug")){
  3245  001566  0ECF               	movlw	low _Command
  3246  001568  6E05               	movwf	strcmp@l^0,c
  3247  00156A  0E01               	movlw	high _Command
  3248  00156C  6E06               	movwf	(strcmp@l+1)^0,c
  3249  00156E  0EEE               	movlw	low STR_47
  3250  001570  6E07               	movwf	strcmp@r^0,c
  3251  001572  0EFF               	movlw	high STR_47
  3252  001574  6E08               	movwf	(strcmp@r+1)^0,c
  3253  001576  EC42  F018         	call	_strcmp	;wreg free
  3254  00157A  5005               	movf	?_strcmp^0,w,c
  3255  00157C  1006               	iorwf	(?_strcmp+1)^0,w,c
  3256  00157E  A4D8               	btfss	status,2,c
  3257  001580  EFC4  F00A         	goto	u6891
  3258  001584  EFC6  F00A         	goto	u6890
  3259  001588                     u6891:
  3260  001588  EFCB  F00A         	goto	l6861
  3261  00158C                     u6890:
  3262  00158C                     
  3263                           ;RS232.c: 252:         TogDebug();
  3264  00158C  EC47  F01C         	call	_TogDebug	;wreg free
  3265  001590                     l6855:
  3266                           
  3267                           ;RS232.c: 253:         return 1;
  3268  001590  0E01               	movlw	1
  3269  001592  EF76  F00B         	goto	l922
  3270  001596                     l6861:
  3271  001596  0ECF               	movlw	low _Command
  3272  001598  6E05               	movwf	strcmp@l^0,c
  3273  00159A  0E01               	movlw	high _Command
  3274  00159C  6E06               	movwf	(strcmp@l+1)^0,c
  3275  00159E  0EFD               	movlw	low STR_49
  3276  0015A0  6E07               	movwf	strcmp@r^0,c
  3277  0015A2  0EFF               	movlw	high STR_49
  3278  0015A4  6E08               	movwf	(strcmp@r+1)^0,c
  3279  0015A6  EC42  F018         	call	_strcmp	;wreg free
  3280  0015AA  5005               	movf	?_strcmp^0,w,c
  3281  0015AC  1006               	iorwf	(?_strcmp+1)^0,w,c
  3282  0015AE  A4D8               	btfss	status,2,c
  3283  0015B0  EFDC  F00A         	goto	u6901
  3284  0015B4  EFDE  F00A         	goto	u6900
  3285  0015B8                     u6901:
  3286  0015B8  EFE2  F00A         	goto	l6871
  3287  0015BC                     u6900:
  3288  0015BC                     
  3289                           ;RS232.c: 255:         InitialiseString();
  3290  0015BC  EC57  F016         	call	_InitialiseString	;wreg free
  3291  0015C0  EFC8  F00A         	goto	l6855
  3292  0015C4                     l6871:
  3293  0015C4  0ECF               	movlw	low _Command
  3294  0015C6  6E05               	movwf	strcmp@l^0,c
  3295  0015C8  0E01               	movlw	high _Command
  3296  0015CA  6E06               	movwf	(strcmp@l+1)^0,c
  3297  0015CC  0EE7               	movlw	low STR_51
  3298  0015CE  6E07               	movwf	strcmp@r^0,c
  3299  0015D0  0EFF               	movlw	high STR_51
  3300  0015D2  6E08               	movwf	(strcmp@r+1)^0,c
  3301  0015D4  EC42  F018         	call	_strcmp	;wreg free
  3302  0015D8  5005               	movf	?_strcmp^0,w,c
  3303  0015DA  1006               	iorwf	(?_strcmp+1)^0,w,c
  3304  0015DC  A4D8               	btfss	status,2,c
  3305  0015DE  EFF3  F00A         	goto	u6911
  3306  0015E2  EFF5  F00A         	goto	u6910
  3307  0015E6                     u6911:
  3308  0015E6  EF13  F00B         	goto	l6885
  3309  0015EA                     u6910:
  3310  0015EA                     
  3311                           ;RS232.c: 259:         char ConfName[20] = "Serial Number";
  3312  0015EA  EE22  F0CC         	lfsr	2,ValidateCmd@F10731
  3313  0015EE  EE14  F0A4         	lfsr	1,ValidateCmd@ConfName
  3314  0015F2  0E13               	movlw	19
  3315  0015F4                     u6921:
  3316  0015F4  CFDB FFE3          	movff	plusw2,plusw1
  3317  0015F8  06E8               	decf	wreg,f,c
  3318  0015FA  E2FC               	bc	u6921
  3319  0015FC                     
  3320                           ;RS232.c: 265:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  3321  0015FC  0EA4               	movlw	low ValidateCmd@ConfName
  3322  0015FE  0100               	movlb	0	; () banked
  3323  001600  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3324  001602  0E04               	movlw	high ValidateCmd@ConfName
  3325  001604  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3326  001606  0E03               	movlw	3
  3327  001608  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3328  00160A  0E00               	movlw	0
  3329  00160C  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3330  00160E  0E03               	movlw	3
  3331  001610  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3332  001612  0E00               	movlw	0
  3333  001614  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3334  001616  0E00               	movlw	0
  3335  001618  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3336  00161A  0E0A               	movlw	10
  3337  00161C  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3338  00161E  EC35  F006         	call	_SaveCardDat	;wreg free
  3339  001622  EFC8  F00A         	goto	l6855
  3340  001626                     l6885:
  3341  001626  0ECF               	movlw	low _Command
  3342  001628  6E05               	movwf	strcmp@l^0,c
  3343  00162A  0E01               	movlw	high _Command
  3344  00162C  6E06               	movwf	(strcmp@l+1)^0,c
  3345  00162E  0EF4               	movlw	low STR_53
  3346  001630  6E07               	movwf	strcmp@r^0,c
  3347  001632  0EFF               	movlw	high STR_53
  3348  001634  6E08               	movwf	(strcmp@r+1)^0,c
  3349  001636  EC42  F018         	call	_strcmp	;wreg free
  3350  00163A  5005               	movf	?_strcmp^0,w,c
  3351  00163C  1006               	iorwf	(?_strcmp+1)^0,w,c
  3352  00163E  A4D8               	btfss	status,2,c
  3353  001640  EF24  F00B         	goto	u6931
  3354  001644  EF26  F00B         	goto	u6930
  3355  001648                     u6931:
  3356  001648  EF44  F00B         	goto	l6899
  3357  00164C                     u6930:
  3358  00164C                     
  3359                           ;RS232.c: 271:         char ConfName[20] = "Part Number";
  3360  00164C  EE22  F0B8         	lfsr	2,ValidateCmd@F10734
  3361  001650  EE14  F0B8         	lfsr	1,ValidateCmd@ConfName_1439
  3362  001654  0E13               	movlw	19
  3363  001656                     u6941:
  3364  001656  CFDB FFE3          	movff	plusw2,plusw1
  3365  00165A  06E8               	decf	wreg,f,c
  3366  00165C  E2FC               	bc	u6941
  3367  00165E                     
  3368                           ;RS232.c: 273:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  3369  00165E  0EB8               	movlw	low ValidateCmd@ConfName_1439
  3370  001660  0100               	movlb	0	; () banked
  3371  001662  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3372  001664  0E04               	movlw	high ValidateCmd@ConfName_1439
  3373  001666  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3374  001668  0E01               	movlw	1
  3375  00166A  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3376  00166C  0E00               	movlw	0
  3377  00166E  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3378  001670  0E01               	movlw	1
  3379  001672  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3380  001674  0E00               	movlw	0
  3381  001676  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3382  001678  0E00               	movlw	0
  3383  00167A  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3384  00167C  0E10               	movlw	16
  3385  00167E  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3386  001680  EC35  F006         	call	_SaveCardDat	;wreg free
  3387  001684  EFC8  F00A         	goto	l6855
  3388  001688                     l6899:
  3389  001688  0ECF               	movlw	low _Command
  3390  00168A  6E05               	movwf	strcmp@l^0,c
  3391  00168C  0E01               	movlw	high _Command
  3392  00168E  6E06               	movwf	(strcmp@l+1)^0,c
  3393  001690  0EF9               	movlw	low STR_55
  3394  001692  6E07               	movwf	strcmp@r^0,c
  3395  001694  0EFF               	movlw	high STR_55
  3396  001696  6E08               	movwf	(strcmp@r+1)^0,c
  3397  001698  EC42  F018         	call	_strcmp	;wreg free
  3398  00169C  5005               	movf	?_strcmp^0,w,c
  3399  00169E  1006               	iorwf	(?_strcmp+1)^0,w,c
  3400  0016A0  A4D8               	btfss	status,2,c
  3401  0016A2  EF55  F00B         	goto	u6951
  3402  0016A6  EF57  F00B         	goto	u6950
  3403  0016AA                     u6951:
  3404  0016AA  EF75  F00B         	goto	l6913
  3405  0016AE                     u6950:
  3406  0016AE                     
  3407                           ;RS232.c: 281:         char ConfName[20] = "Revision";
  3408  0016AE  EE22  F0A4         	lfsr	2,ValidateCmd@F10737
  3409  0016B2  EE14  F0CC         	lfsr	1,ValidateCmd@ConfName_1443
  3410  0016B6  0E13               	movlw	19
  3411  0016B8                     u6961:
  3412  0016B8  CFDB FFE3          	movff	plusw2,plusw1
  3413  0016BC  06E8               	decf	wreg,f,c
  3414  0016BE  E2FC               	bc	u6961
  3415  0016C0                     
  3416                           ;RS232.c: 285:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  3417  0016C0  0ECC               	movlw	low ValidateCmd@ConfName_1443
  3418  0016C2  0100               	movlb	0	; () banked
  3419  0016C4  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3420  0016C6  0E04               	movlw	high ValidateCmd@ConfName_1443
  3421  0016C8  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3422  0016CA  0E02               	movlw	2
  3423  0016CC  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3424  0016CE  0E00               	movlw	0
  3425  0016D0  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3426  0016D2  0E02               	movlw	2
  3427  0016D4  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3428  0016D6  0E00               	movlw	0
  3429  0016D8  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3430  0016DA  0E00               	movlw	0
  3431  0016DC  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3432  0016DE  0E02               	movlw	2
  3433  0016E0  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3434  0016E2  EC35  F006         	call	_SaveCardDat	;wreg free
  3435  0016E6  EFC8  F00A         	goto	l6855
  3436  0016EA                     l6913:
  3437                           
  3438                           ;RS232.c: 290:         return 0;
  3439  0016EA  0E00               	movlw	0
  3440  0016EC                     l922:
  3441  0016EC  0012               	return		;funcret
  3442  0016EE                     __end_of_ValidateCmd:
  3443                           	opt callstack 0
  3444                           
  3445 ;; *************** function _strcmp *****************
  3446 ;; Defined at:
  3447 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  l               2    4[COMRAM] PTR const unsigned char 
  3450 ;;		 -> Command(16), 
  3451 ;;  r               2    6[COMRAM] PTR const unsigned char 
  3452 ;;		 -> STR_56(4), STR_54(5), STR_52(7), STR_50(2), 
  3453 ;;		 -> STR_48(6), 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2    4[COMRAM] int 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;Total ram usage:        5 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    4
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_ValidateCmd
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text2
  3480  003084                     __ptext2:
  3481                           	opt callstack 0
  3482  003084                     _strcmp:
  3483                           	opt callstack 25
  3484  003084  EF48  F018         	goto	l6653
  3485  003088                     l6651:
  3486  003088  4A05               	infsnz	strcmp@l^0,f,c
  3487  00308A  2A06               	incf	(strcmp@l+1)^0,f,c
  3488  00308C  4A07               	infsnz	strcmp@r^0,f,c
  3489  00308E  2A08               	incf	(strcmp@r+1)^0,f,c
  3490  003090                     l6653:
  3491  003090  C005  FFD9         	movff	strcmp@l,fsr2l
  3492  003094  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3493  003098  50DF               	movf	indf2,w,c
  3494  00309A  6E09               	movwf	??_strcmp^0,c
  3495  00309C  C007  FFF6         	movff	strcmp@r,tblptrl
  3496  0030A0  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3497  0030A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3498  0030A4  6AF8               	clrf	tblptru,c
  3499  0030A6                     	endif
  3500  0030A6                     	if	0	;tblptru may be non-zero
  3501  0030A6                     	endif
  3502  0030A6  0008               	tblrd		*
  3503  0030A8  50F5               	movf	tablat,w,c
  3504  0030AA  1809               	xorwf	??_strcmp^0,w,c
  3505  0030AC  A4D8               	btfss	status,2,c
  3506  0030AE  EF5B  F018         	goto	u6731
  3507  0030B2  EF5D  F018         	goto	u6730
  3508  0030B6                     u6731:
  3509  0030B6  EF69  F018         	goto	l6657
  3510  0030BA                     u6730:
  3511  0030BA  C005  FFD9         	movff	strcmp@l,fsr2l
  3512  0030BE  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3513  0030C2  50DF               	movf	indf2,w,c
  3514  0030C4  A4D8               	btfss	status,2,c
  3515  0030C6  EF67  F018         	goto	u6741
  3516  0030CA  EF69  F018         	goto	u6740
  3517  0030CE                     u6741:
  3518  0030CE  EF44  F018         	goto	l6651
  3519  0030D2                     u6740:
  3520  0030D2                     l6657:
  3521  0030D2  C005  FFD9         	movff	strcmp@l,fsr2l
  3522  0030D6  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3523  0030DA  50DF               	movf	indf2,w,c
  3524  0030DC  6E09               	movwf	??_strcmp^0,c
  3525  0030DE  C007  FFF6         	movff	strcmp@r,tblptrl
  3526  0030E2  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3527  0030E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3528  0030E6  6AF8               	clrf	tblptru,c
  3529  0030E8                     	endif
  3530  0030E8                     	if	0	;tblptru may be non-zero
  3531  0030E8                     	endif
  3532  0030E8  0008               	tblrd		*
  3533  0030EA  50F5               	movf	tablat,w,c
  3534  0030EC  5C09               	subwf	??_strcmp^0,w,c
  3535  0030EE  6E05               	movwf	?_strcmp^0,c
  3536  0030F0  6A06               	clrf	(?_strcmp+1)^0,c
  3537  0030F2  A0D8               	btfss	status,0,c
  3538  0030F4  0606               	decf	(?_strcmp+1)^0,f,c
  3539  0030F6  0012               	return		;funcret
  3540  0030F8                     __end_of_strcmp:
  3541                           	opt callstack 0
  3542                           
  3543 ;; *************** function _TogDebug *****************
  3544 ;; Defined at:
  3545 ;;		line 148 in file "RS232.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;Total ram usage:        0 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:   13
  3566 ;; This function calls:
  3567 ;;		_printf
  3568 ;; This function is called by:
  3569 ;;		_ValidateCmd
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text3
  3574  00388E                     __ptext3:
  3575                           	opt callstack 0
  3576  00388E                     _TogDebug:
  3577                           	opt callstack 16
  3578  00388E                     
  3579                           ;RS232.c: 150:     if(Debug==0){
  3580  00388E  0100               	movlb	0	; () banked
  3581  003890  51B0               	movf	_Debug& (0+255),w,b
  3582  003892  A4D8               	btfss	status,2,c
  3583  003894  EF4E  F01C         	goto	u6661
  3584  003898  EF50  F01C         	goto	u6660
  3585  00389C                     u6661:
  3586  00389C  EF5A  F01C         	goto	l6577
  3587  0038A0                     u6660:
  3588  0038A0                     
  3589                           ; BSR set to: 0
  3590                           ;RS232.c: 151:         Debug =1;
  3591  0038A0  0E01               	movlw	1
  3592  0038A2  6FB0               	movwf	_Debug& (0+255),b
  3593  0038A4                     
  3594                           ; BSR set to: 0
  3595                           ;RS232.c: 152:         printf("Debug Enabled\r\n");
  3596  0038A4  0EA2               	movlw	low STR_32
  3597  0038A6  6F7D               	movwf	printf@fmt& (0+255),b
  3598  0038A8  0EFF               	movlw	high STR_32
  3599  0038AA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3600  0038AC  ECE3  F01C         	call	_printf	;wreg free
  3601                           
  3602                           ;RS232.c: 153:     }else{
  3603  0038B0  EF62  F01C         	goto	l894
  3604  0038B4                     l6577:
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;RS232.c: 154:         Debug =0;
  3608  0038B4  0E00               	movlw	0
  3609  0038B6  6FB0               	movwf	_Debug& (0+255),b
  3610  0038B8                     
  3611                           ; BSR set to: 0
  3612                           ;RS232.c: 155:         printf("Debug Disabled\r\n");
  3613  0038B8  0E91               	movlw	low STR_33
  3614  0038BA  6F7D               	movwf	printf@fmt& (0+255),b
  3615  0038BC  0EFF               	movlw	high STR_33
  3616  0038BE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3617  0038C0  ECE3  F01C         	call	_printf	;wreg free
  3618  0038C4                     l894:
  3619  0038C4  0012               	return		;funcret
  3620  0038C6                     __end_of_TogDebug:
  3621                           	opt callstack 0
  3622                           
  3623 ;; *************** function _SaveCardDat *****************
  3624 ;; Defined at:
  3625 ;;		line 176 in file "RS232.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  Name            2   47[BANK0 ] PTR unsigned char 
  3628 ;;		 -> ValidateCmd@ConfName_1443(20), ValidateCmd@ConfName_1439(20), ValidateCmd@ConfName(20), 
  3629 ;;  MBAddress       2   49[BANK0 ] unsigned int 
  3630 ;;  dataeeAddr      2   51[BANK0 ] unsigned short 
  3631 ;;  NumBytes        2   53[BANK0 ] int 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  i               2   63[BANK0 ] int 
  3634 ;;  dataeeAddrWr    2   61[BANK0 ] unsigned short 
  3635 ;;  Conf            1   60[BANK0 ] unsigned char 
  3636 ;;  readData        1   59[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3646 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;Total ram usage:       18 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:   14
  3653 ;; This function calls:
  3654 ;;		_ClearEEAddRange
  3655 ;;		_DATAEE_ReadByte
  3656 ;;		_DATAEE_WriteByte
  3657 ;;		_EUSART2_Read
  3658 ;;		_EUSART2_is_rx_ready
  3659 ;;		_ReadRX232
  3660 ;;		_printf
  3661 ;;		_strcpy
  3662 ;;		_strlen
  3663 ;; This function is called by:
  3664 ;;		_ValidateCmd
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text4
  3669  000C6A                     __ptext4:
  3670                           	opt callstack 0
  3671  000C6A                     _SaveCardDat:
  3672                           	opt callstack 15
  3673  000C6A                     
  3674                           ;RS232.c: 179:     unsigned char Conf, readData;;RS232.c: 180:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  3675  000C6A  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  3676  000C6E  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  3677  000C72                     
  3678                           ;RS232.c: 182:     printf("Saving Card Data\r\n");
  3679  000C72  0E6D               	movlw	low STR_35
  3680  000C74  0100               	movlb	0	; () banked
  3681  000C76  6F7D               	movwf	printf@fmt& (0+255),b
  3682  000C78  0EFF               	movlw	high STR_35
  3683  000C7A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3684  000C7C  ECE3  F01C         	call	_printf	;wreg free
  3685  000C80                     
  3686                           ;RS232.c: 183:     printf("Name: %s  MBAddress: 0x%04x   dataeeAddr: 0x%04x   NumBytes: 
      +                          %i \r\n", Name, MBAddress, dataeeAddr, NumBytes);
  3687  000C80  0E5B               	movlw	low STR_36
  3688  000C82  0100               	movlb	0	; () banked
  3689  000C84  6F7D               	movwf	printf@fmt& (0+255),b
  3690  000C86  0EFB               	movlw	high STR_36
  3691  000C88  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3692  000C8A  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3693  000C8E  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3694  000C92  C091  F081         	movff	SaveCardDat@MBAddress,?_printf+4
  3695  000C96  C092  F082         	movff	SaveCardDat@MBAddress+1,?_printf+5
  3696  000C9A  C093  F083         	movff	SaveCardDat@dataeeAddr,?_printf+6
  3697  000C9E  C094  F084         	movff	SaveCardDat@dataeeAddr+1,?_printf+7
  3698  000CA2  C095  F085         	movff	SaveCardDat@NumBytes,?_printf+8
  3699  000CA6  C096  F086         	movff	SaveCardDat@NumBytes+1,?_printf+9
  3700  000CAA  ECE3  F01C         	call	_printf	;wreg free
  3701  000CAE                     
  3702                           ;RS232.c: 185:     printf("Enter card %s (max %i characters): ", Name, NumBytes);
  3703  000CAE  0EDC               	movlw	low STR_37
  3704  000CB0  0100               	movlb	0	; () banked
  3705  000CB2  6F7D               	movwf	printf@fmt& (0+255),b
  3706  000CB4  0EFC               	movlw	high STR_37
  3707  000CB6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3708  000CB8  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3709  000CBC  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3710  000CC0  C095  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  3711  000CC4  C096  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  3712  000CC8  ECE3  F01C         	call	_printf	;wreg free
  3713  000CCC                     
  3714                           ;RS232.c: 187:     strcpy(Command, "");
  3715  000CCC  0ECF               	movlw	low _Command
  3716  000CCE  6E09               	movwf	strcpy@dest^0,c
  3717  000CD0  0E01               	movlw	high _Command
  3718  000CD2  6E0A               	movwf	(strcpy@dest+1)^0,c
  3719  000CD4  0E44               	movlw	low (STR_19+20)
  3720  000CD6  6E0B               	movwf	strcpy@src^0,c
  3721  000CD8  0EFF               	movlw	high (STR_19+20)
  3722  000CDA  6E0C               	movwf	(strcpy@src+1)^0,c
  3723  000CDC  EC1C  F019         	call	_strcpy	;wreg free
  3724  000CE0                     l6593:
  3725  000CE0  C095  F08B         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  3726  000CE4  C096  F08C         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  3727  000CE8  ECF5  F00F         	call	_ReadRX232	;wreg free
  3728  000CEC  0100               	movlb	0	; () banked
  3729  000CEE  518B               	movf	?_ReadRX232& (0+255),w,b
  3730  000CF0  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3731  000CF2  B4D8               	btfsc	status,2,c
  3732  000CF4  EF7E  F006         	goto	u6671
  3733  000CF8  EF80  F006         	goto	u6670
  3734  000CFC                     u6671:
  3735  000CFC  EF70  F006         	goto	l6593
  3736  000D00                     u6670:
  3737  000D00                     
  3738                           ; BSR set to: 0
  3739                           ;RS232.c: 190:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  3740  000D00  0E46               	movlw	low STR_39
  3741  000D02  6F7D               	movwf	printf@fmt& (0+255),b
  3742  000D04  0EFD               	movlw	high STR_39
  3743  000D06  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3744  000D08  0ECF               	movlw	low _Command
  3745  000D0A  6F7F               	movwf	(?_printf+2)& (0+255),b
  3746  000D0C  0E01               	movlw	high _Command
  3747  000D0E  6F80               	movwf	(?_printf+3)& (0+255),b
  3748  000D10  ECE3  F01C         	call	_printf	;wreg free
  3749  000D14                     l6597:
  3750  000D14  EC38  F01D         	call	_EUSART2_is_rx_ready	;wreg free
  3751  000D18  0900               	iorlw	0
  3752  000D1A  B4D8               	btfsc	status,2,c
  3753  000D1C  EF92  F006         	goto	u6681
  3754  000D20  EF94  F006         	goto	u6680
  3755  000D24                     u6681:
  3756  000D24  EF8A  F006         	goto	l6597
  3757  000D28                     u6680:
  3758  000D28                     
  3759                           ;RS232.c: 195:     Conf = EUSART2_Read();
  3760  000D28  EC07  F01A         	call	_EUSART2_Read	;wreg free
  3761  000D2C  0100               	movlb	0	; () banked
  3762  000D2E  6F9C               	movwf	SaveCardDat@Conf& (0+255),b
  3763  000D30                     
  3764                           ; BSR set to: 0
  3765                           ;RS232.c: 198:     if(Conf == 0x79 || Conf == 0x59){
  3766  000D30  0E79               	movlw	121
  3767  000D32  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3768  000D34  B4D8               	btfsc	status,2,c
  3769  000D36  EF9F  F006         	goto	u6691
  3770  000D3A  EFA1  F006         	goto	u6690
  3771  000D3E                     u6691:
  3772  000D3E  EFAA  F006         	goto	l911
  3773  000D42                     u6690:
  3774  000D42                     
  3775                           ; BSR set to: 0
  3776  000D42  0E59               	movlw	89
  3777  000D44  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3778  000D46  A4D8               	btfss	status,2,c
  3779  000D48  EFA8  F006         	goto	u6701
  3780  000D4C  EFAA  F006         	goto	u6700
  3781  000D50                     u6701:
  3782  000D50  EF7E  F007         	goto	l918
  3783  000D54                     u6700:
  3784  000D54                     l911:
  3785  000D54                     
  3786                           ; BSR set to: 0
  3787                           ;RS232.c: 200:         printf("Y\r\nSaving Serial Number \r\n");
  3788  000D54  0E53               	movlw	low STR_40
  3789  000D56  6F7D               	movwf	printf@fmt& (0+255),b
  3790  000D58  0EFE               	movlw	high STR_40
  3791  000D5A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3792  000D5C  ECE3  F01C         	call	_printf	;wreg free
  3793  000D60                     
  3794                           ;RS232.c: 201:         printf("Num Chars: %i \r\n", strlen(Command));
  3795  000D60  0ECF               	movlw	low _Command
  3796  000D62  6E05               	movwf	strlen@s^0,c
  3797  000D64  0E01               	movlw	high _Command
  3798  000D66  6E06               	movwf	(strlen@s+1)^0,c
  3799  000D68  EC88  F01A         	call	_strlen	;wreg free
  3800  000D6C  C005  F099         	movff	?_strlen,_SaveCardDat$2426
  3801  000D70  C006  F09A         	movff	?_strlen+1,_SaveCardDat$2426+1
  3802  000D74                     
  3803                           ;RS232.c: 201:         printf("Num Chars: %i \r\n", strlen(Command));
  3804  000D74  0E80               	movlw	low STR_41
  3805  000D76  0100               	movlb	0	; () banked
  3806  000D78  6F7D               	movwf	printf@fmt& (0+255),b
  3807  000D7A  0EFF               	movlw	high STR_41
  3808  000D7C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3809  000D7E  C099  F07F         	movff	_SaveCardDat$2426,?_printf+2
  3810  000D82  C09A  F080         	movff	_SaveCardDat$2426+1,?_printf+3
  3811  000D86  ECE3  F01C         	call	_printf	;wreg free
  3812  000D8A                     
  3813                           ;RS232.c: 205:         ClearEEAddRange(dataeeAddr,NumBytes);
  3814  000D8A  C093  F08B         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  3815  000D8E  C094  F08C         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  3816  000D92  C095  F08D         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  3817  000D96  C096  F08E         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  3818  000D9A  EC4B  F019         	call	_ClearEEAddRange	;wreg free
  3819  000D9E                     
  3820                           ;RS232.c: 208:         for (i = 0; i < strlen(Command); i++){
  3821  000D9E  0E00               	movlw	0
  3822  000DA0  0100               	movlb	0	; () banked
  3823  000DA2  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  3824  000DA4  0E00               	movlw	0
  3825  000DA6  6F9F               	movwf	SaveCardDat@i& (0+255),b
  3826  000DA8  EF0C  F007         	goto	l6625
  3827  000DAC                     l6615:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;RS232.c: 209:             printf("Char 0x%02x in 0x%02x \r\n", Command[i], dataeeAddrWr
      +                          k);
  3831  000DAC  0E89               	movlw	low STR_42
  3832  000DAE  6F7D               	movwf	printf@fmt& (0+255),b
  3833  000DB0  0EFE               	movlw	high STR_42
  3834  000DB2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3835  000DB4  0ECF               	movlw	low _Command
  3836  000DB6  259F               	addwf	SaveCardDat@i& (0+255),w,b
  3837  000DB8  6ED9               	movwf	fsr2l,c
  3838  000DBA  0E01               	movlw	high _Command
  3839  000DBC  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  3840  000DBE  6EDA               	movwf	fsr2h,c
  3841  000DC0  50DF               	movf	indf2,w,c
  3842  000DC2  6F97               	movwf	??_SaveCardDat& (0+255),b
  3843  000DC4  5197               	movf	??_SaveCardDat& (0+255),w,b
  3844  000DC6  6F7F               	movwf	(?_printf+2)& (0+255),b
  3845  000DC8  6B80               	clrf	(?_printf+3)& (0+255),b
  3846  000DCA  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  3847  000DCE  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  3848  000DD2  ECE3  F01C         	call	_printf	;wreg free
  3849  000DD6                     
  3850                           ;RS232.c: 210:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  3851  000DD6  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  3852  000DDA  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  3853  000DDE  0ECF               	movlw	low _Command
  3854  000DE0  0100               	movlb	0	; () banked
  3855  000DE2  259F               	addwf	SaveCardDat@i& (0+255),w,b
  3856  000DE4  6ED9               	movwf	fsr2l,c
  3857  000DE6  0E01               	movlw	high _Command
  3858  000DE8  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  3859  000DEA  6EDA               	movwf	fsr2h,c
  3860  000DEC  50DF               	movf	indf2,w,c
  3861  000DEE  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  3862  000DF0  EC45  F01B         	call	_DATAEE_WriteByte	;wreg free
  3863  000DF4                     
  3864                           ;RS232.c: 211:             dataeeAddrWrk++;
  3865  000DF4  0100               	movlb	0	; () banked
  3866  000DF6  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  3867  000DF8  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  3868  000DFA                     
  3869                           ; BSR set to: 0
  3870                           ;RS232.c: 212:             _delay((unsigned long)((50)*(32000000/4000.0)));
  3871  000DFA  0E03               	movlw	3
  3872  000DFC  0100               	movlb	0	; () banked
  3873  000DFE  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  3874  000E00  0E08               	movlw	8
  3875  000E02  6F97               	movwf	??_SaveCardDat& (0+255),b
  3876  000E04  0E77               	movlw	119
  3877  000E06                     u7007:
  3878  000E06  2EE8               	decfsz	wreg,f,c
  3879  000E08  D7FE               	bra	u7007
  3880  000E0A  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  3881  000E0C  D7FC               	bra	u7007
  3882  000E0E  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  3883  000E10  D7FA               	bra	u7007
  3884  000E12                     
  3885                           ;RS232.c: 213:         }
  3886  000E12  0100               	movlb	0	; () banked
  3887  000E14  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  3888  000E16  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  3889  000E18                     l6625:
  3890                           
  3891                           ; BSR set to: 0
  3892  000E18  0ECF               	movlw	low _Command
  3893  000E1A  6E05               	movwf	strlen@s^0,c
  3894  000E1C  0E01               	movlw	high _Command
  3895  000E1E  6E06               	movwf	(strlen@s+1)^0,c
  3896  000E20  EC88  F01A         	call	_strlen	;wreg free
  3897  000E24  5005               	movf	?_strlen^0,w,c
  3898  000E26  0100               	movlb	0	; () banked
  3899  000E28  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  3900  000E2A  5006               	movf	(?_strlen+1)^0,w,c
  3901  000E2C  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  3902  000E2E  A0D8               	btfss	status,0,c
  3903  000E30  EF1C  F007         	goto	u6711
  3904  000E34  EF1E  F007         	goto	u6710
  3905  000E38                     u6711:
  3906  000E38  EFD6  F006         	goto	l6615
  3907  000E3C                     u6710:
  3908  000E3C                     
  3909                           ; BSR set to: 0
  3910                           ;RS232.c: 215:         printf("Serial Number Saved. \r\n");
  3911  000E3C  0EBB               	movlw	low STR_43
  3912  000E3E  6F7D               	movwf	printf@fmt& (0+255),b
  3913  000E40  0EFE               	movlw	high STR_43
  3914  000E42  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3915  000E44  ECE3  F01C         	call	_printf	;wreg free
  3916  000E48                     
  3917                           ;RS232.c: 218:         dataeeAddrWrk = dataeeAddr;
  3918  000E48  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  3919  000E4C  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  3920  000E50                     
  3921                           ;RS232.c: 219:          _delay((unsigned long)((50)*(32000000/4000.0)));
  3922  000E50  0E03               	movlw	3
  3923  000E52  0100               	movlb	0	; () banked
  3924  000E54  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  3925  000E56  0E08               	movlw	8
  3926  000E58  6F97               	movwf	??_SaveCardDat& (0+255),b
  3927  000E5A  0E77               	movlw	119
  3928  000E5C                     u7017:
  3929  000E5C  2EE8               	decfsz	wreg,f,c
  3930  000E5E  D7FE               	bra	u7017
  3931  000E60  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  3932  000E62  D7FC               	bra	u7017
  3933  000E64  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  3934  000E66  D7FA               	bra	u7017
  3935  000E68                     
  3936                           ;RS232.c: 222:         for(i = 0; i < strlen(Command); i++){
  3937  000E68  0E00               	movlw	0
  3938  000E6A  0100               	movlb	0	; () banked
  3939  000E6C  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  3940  000E6E  0E00               	movlw	0
  3941  000E70  6F9F               	movwf	SaveCardDat@i& (0+255),b
  3942  000E72  EF62  F007         	goto	l6645
  3943  000E76                     l6635:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;RS232.c: 223:             readData = DATAEE_ReadByte(dataeeAddrWrk);
  3947  000E76  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  3948  000E7A  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  3949  000E7E  EC44  F01D         	call	_DATAEE_ReadByte	;wreg free
  3950  000E82  0100               	movlb	0	; () banked
  3951  000E84  6F9B               	movwf	SaveCardDat@readData& (0+255),b
  3952  000E86                     
  3953                           ; BSR set to: 0
  3954                           ;RS232.c: 224:             printf("EEPROM: 0x%02x Add: 0x%02x \r\n", readData,dataeeAddr
      +                          Wrk);
  3955  000E86  0EA8               	movlw	low STR_44
  3956  000E88  6F7D               	movwf	printf@fmt& (0+255),b
  3957  000E8A  0EFD               	movlw	high STR_44
  3958  000E8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3959  000E8E  C09B  F07F         	movff	SaveCardDat@readData,?_printf+2
  3960  000E92  6B80               	clrf	(?_printf+3)& (0+255),b
  3961  000E94  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  3962  000E98  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  3963  000E9C  ECE3  F01C         	call	_printf	;wreg free
  3964  000EA0                     
  3965                           ;RS232.c: 225:             dataeeAddrWrk++;
  3966  000EA0  0100               	movlb	0	; () banked
  3967  000EA2  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  3968  000EA4  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  3969  000EA6                     
  3970                           ; BSR set to: 0
  3971                           ;RS232.c: 226:             _delay((unsigned long)((50)*(32000000/4000.0)));
  3972  000EA6  0E03               	movlw	3
  3973  000EA8  0100               	movlb	0	; () banked
  3974  000EAA  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  3975  000EAC  0E08               	movlw	8
  3976  000EAE  6F97               	movwf	??_SaveCardDat& (0+255),b
  3977  000EB0  0E77               	movlw	119
  3978  000EB2                     u7027:
  3979  000EB2  2EE8               	decfsz	wreg,f,c
  3980  000EB4  D7FE               	bra	u7027
  3981  000EB6  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  3982  000EB8  D7FC               	bra	u7027
  3983  000EBA  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  3984  000EBC  D7FA               	bra	u7027
  3985  000EBE                     
  3986                           ;RS232.c: 227:         }
  3987  000EBE  0100               	movlb	0	; () banked
  3988  000EC0  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  3989  000EC2  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  3990  000EC4                     l6645:
  3991                           
  3992                           ; BSR set to: 0
  3993  000EC4  0ECF               	movlw	low _Command
  3994  000EC6  6E05               	movwf	strlen@s^0,c
  3995  000EC8  0E01               	movlw	high _Command
  3996  000ECA  6E06               	movwf	(strlen@s+1)^0,c
  3997  000ECC  EC88  F01A         	call	_strlen	;wreg free
  3998  000ED0  5005               	movf	?_strlen^0,w,c
  3999  000ED2  0100               	movlb	0	; () banked
  4000  000ED4  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  4001  000ED6  5006               	movf	(?_strlen+1)^0,w,c
  4002  000ED8  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4003  000EDA  A0D8               	btfss	status,0,c
  4004  000EDC  EF72  F007         	goto	u6721
  4005  000EE0  EF74  F007         	goto	u6720
  4006  000EE4                     u6721:
  4007  000EE4  EF3B  F007         	goto	l6635
  4008  000EE8                     u6720:
  4009  000EE8                     
  4010                           ; BSR set to: 0
  4011                           ;RS232.c: 230:         strcpy(Command, "");
  4012  000EE8  0ECF               	movlw	low _Command
  4013  000EEA  6E09               	movwf	strcpy@dest^0,c
  4014  000EEC  0E01               	movlw	high _Command
  4015  000EEE  6E0A               	movwf	(strcpy@dest+1)^0,c
  4016  000EF0  0E44               	movlw	low (STR_19+20)
  4017  000EF2  6E0B               	movwf	strcpy@src^0,c
  4018  000EF4  0EFF               	movlw	high (STR_19+20)
  4019  000EF6  6E0C               	movwf	(strcpy@src+1)^0,c
  4020  000EF8  EC1C  F019         	call	_strcpy	;wreg free
  4021  000EFC                     l918:
  4022  000EFC  0012               	return		;funcret
  4023  000EFE                     __end_of_SaveCardDat:
  4024                           	opt callstack 0
  4025                           
  4026 ;; *************** function _ReadRX232 *****************
  4027 ;; Defined at:
  4028 ;;		line 93 in file "RS232.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  NumChars        2   43[BANK0 ] int 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  temp            2   84[COMRAM] unsigned char [2]
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  2   43[BANK0 ] int 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;Total ram usage:        4 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:   13
  4049 ;; This function calls:
  4050 ;;		_EUSART2_Read
  4051 ;;		_EUSART2_Write
  4052 ;;		_EUSART2_is_rx_ready
  4053 ;;		_memmove
  4054 ;;		_printf
  4055 ;;		_strcat
  4056 ;;		_strlen
  4057 ;; This function is called by:
  4058 ;;		_main
  4059 ;;		_SaveCardDat
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text5
  4064  001FEA                     __ptext5:
  4065                           	opt callstack 0
  4066  001FEA                     _ReadRX232:
  4067                           	opt callstack 15
  4068  001FEA                     
  4069                           ;RS232.c: 93: int ReadRX232(int NumChars);RS232.c: 94: {;RS232.c: 99:     char temp[2] =
      +                           {'Z','\0'};
  4070  001FEA  C139  F055         	movff	ReadRX232@F10713,ReadRX232@temp
  4071  001FEE  C13A  F056         	movff	ReadRX232@F10713+1,ReadRX232@temp+1
  4072  001FF2                     
  4073                           ;RS232.c: 102:     if(EUSART2_is_rx_ready())
  4074  001FF2  EC38  F01D         	call	_EUSART2_is_rx_ready	;wreg free
  4075  001FF6  0900               	iorlw	0
  4076  001FF8  B4D8               	btfsc	status,2,c
  4077  001FFA  EF01  F010         	goto	u6381
  4078  001FFE  EF03  F010         	goto	u6380
  4079  002002                     u6381:
  4080  002002  EF81  F010         	goto	l6385
  4081  002006                     u6380:
  4082  002006                     l6357:
  4083                           
  4084                           ;RS232.c: 108:              if(EUSART2_is_rx_ready())
  4085  002006  EC38  F01D         	call	_EUSART2_is_rx_ready	;wreg free
  4086  00200A  0900               	iorlw	0
  4087  00200C  B4D8               	btfsc	status,2,c
  4088  00200E  EF0B  F010         	goto	u6391
  4089  002012  EF0D  F010         	goto	u6390
  4090  002016                     u6391:
  4091  002016  EF5D  F010         	goto	l6377
  4092  00201A                     u6390:
  4093  00201A                     
  4094                           ;RS232.c: 109:              {;RS232.c: 111:                 temp[0]=EUSART2_Read();
  4095  00201A  EC07  F01A         	call	_EUSART2_Read	;wreg free
  4096  00201E  6E55               	movwf	ReadRX232@temp^0,c
  4097                           
  4098                           ;RS232.c: 114:                 EUSART2_Write(temp[0]);
  4099  002020  5055               	movf	ReadRX232@temp^0,w,c
  4100  002022  ECD8  F019         	call	_EUSART2_Write
  4101  002026                     
  4102                           ;RS232.c: 116:                 if(temp[0]!='\r'){
  4103  002026  0E0D               	movlw	13
  4104  002028  1855               	xorwf	ReadRX232@temp^0,w,c
  4105  00202A  B4D8               	btfsc	status,2,c
  4106  00202C  EF1A  F010         	goto	u6401
  4107  002030  EF1C  F010         	goto	u6400
  4108  002034                     u6401:
  4109  002034  EF26  F010         	goto	l6365
  4110  002038                     u6400:
  4111  002038                     
  4112                           ;RS232.c: 117:                     strcat(Command, temp);
  4113  002038  0ECF               	movlw	low _Command
  4114  00203A  6E13               	movwf	strcat@dest^0,c
  4115  00203C  0E01               	movlw	high _Command
  4116  00203E  6E14               	movwf	(strcat@dest+1)^0,c
  4117  002040  0E55               	movlw	low ReadRX232@temp
  4118  002042  6E15               	movwf	strcat@src^0,c
  4119  002044  0E00               	movlw	high ReadRX232@temp
  4120  002046  6E16               	movwf	(strcat@src+1)^0,c
  4121  002048  ECF7  F01C         	call	_strcat	;wreg free
  4122  00204C                     l6365:
  4123                           
  4124                           ;RS232.c: 120:                 if(strlen(Command)>NumChars)
  4125  00204C  0ECF               	movlw	low _Command
  4126  00204E  6E05               	movwf	strlen@s^0,c
  4127  002050  0E01               	movlw	high _Command
  4128  002052  6E06               	movwf	(strlen@s+1)^0,c
  4129  002054  EC88  F01A         	call	_strlen	;wreg free
  4130  002058  5005               	movf	?_strlen^0,w,c
  4131  00205A  0100               	movlb	0	; () banked
  4132  00205C  5D8B               	subwf	ReadRX232@NumChars& (0+255),w,b
  4133  00205E  5006               	movf	(?_strlen+1)^0,w,c
  4134  002060  598C               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4135  002062  B0D8               	btfsc	status,0,c
  4136  002064  EF36  F010         	goto	u6411
  4137  002068  EF38  F010         	goto	u6410
  4138  00206C                     u6411:
  4139  00206C  EF4C  F010         	goto	l6369
  4140  002070                     u6410:
  4141  002070                     
  4142                           ; BSR set to: 0
  4143                           ;RS232.c: 121:                 {;RS232.c: 123:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  4144  002070  0ECF               	movlw	low _Command
  4145  002072  6E09               	movwf	memmove@d1^0,c
  4146  002074  0E01               	movlw	high _Command
  4147  002076  6E0A               	movwf	(memmove@d1+1)^0,c
  4148  002078  0ED0               	movlw	low (_Command+1)
  4149  00207A  6E0B               	movwf	memmove@s1^0,c
  4150  00207C  0E01               	movlw	high (_Command+1)
  4151  00207E  6E0C               	movwf	(memmove@s1+1)^0,c
  4152  002080  0ECF               	movlw	low _Command
  4153  002082  6E05               	movwf	strlen@s^0,c
  4154  002084  0E01               	movlw	high _Command
  4155  002086  6E06               	movwf	(strlen@s+1)^0,c
  4156  002088  EC88  F01A         	call	_strlen	;wreg free
  4157  00208C  C005  F00D         	movff	?_strlen,memmove@n
  4158  002090  C006  F00E         	movff	?_strlen+1,memmove@n+1
  4159  002094  ECF7  F013         	call	_memmove	;wreg free
  4160  002098                     l6369:
  4161                           
  4162                           ;RS232.c: 127:                 if(temp[0]=='\r'){
  4163  002098  0E0D               	movlw	13
  4164  00209A  1855               	xorwf	ReadRX232@temp^0,w,c
  4165  00209C  A4D8               	btfss	status,2,c
  4166  00209E  EF53  F010         	goto	u6421
  4167  0020A2  EF55  F010         	goto	u6420
  4168  0020A6                     u6421:
  4169  0020A6  EF5D  F010         	goto	l6377
  4170  0020AA                     u6420:
  4171  0020AA                     
  4172                           ;RS232.c: 129:                     temp[0]='z';
  4173  0020AA  0E7A               	movlw	122
  4174  0020AC  6E55               	movwf	ReadRX232@temp^0,c
  4175  0020AE                     
  4176                           ;RS232.c: 130:                     return NumChars;
  4177  0020AE  C08B  F08B         	movff	ReadRX232@NumChars,?_ReadRX232
  4178  0020B2  C08C  F08C         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  4179  0020B6  EF86  F010         	goto	l888
  4180  0020BA                     l6377:
  4181                           
  4182                           ;RS232.c: 133:         }while( temp[0] !='\r' );
  4183  0020BA  0E0D               	movlw	13
  4184  0020BC  1855               	xorwf	ReadRX232@temp^0,w,c
  4185  0020BE  A4D8               	btfss	status,2,c
  4186  0020C0  EF64  F010         	goto	u6431
  4187  0020C4  EF66  F010         	goto	u6430
  4188  0020C8                     u6431:
  4189  0020C8  EF03  F010         	goto	l6357
  4190  0020CC                     u6430:
  4191  0020CC                     
  4192                           ;RS232.c: 135:         Command[strlen(Command)-1] = '\0';
  4193  0020CC  0ECF               	movlw	low _Command
  4194  0020CE  6E05               	movwf	strlen@s^0,c
  4195  0020D0  0E01               	movlw	high _Command
  4196  0020D2  6E06               	movwf	(strlen@s+1)^0,c
  4197  0020D4  EC88  F01A         	call	_strlen	;wreg free
  4198  0020D8  0ECE               	movlw	low (_Command+65535)
  4199  0020DA  2405               	addwf	?_strlen^0,w,c
  4200  0020DC  6ED9               	movwf	fsr2l,c
  4201  0020DE  0E01               	movlw	high (_Command+65535)
  4202  0020E0  2006               	addwfc	(?_strlen+1)^0,w,c
  4203  0020E2  6EDA               	movwf	fsr2h,c
  4204  0020E4  0E00               	movlw	0
  4205  0020E6  6EDF               	movwf	indf2,c
  4206  0020E8                     
  4207                           ;RS232.c: 137:         printf("\r\n\n");
  4208  0020E8  0E41               	movlw	low (STR_19+17)
  4209  0020EA  0100               	movlb	0	; () banked
  4210  0020EC  6F7D               	movwf	printf@fmt& (0+255),b
  4211  0020EE  0EFF               	movlw	high (STR_19+17)
  4212  0020F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4213  0020F2  ECE3  F01C         	call	_printf	;wreg free
  4214  0020F6                     
  4215                           ;RS232.c: 139:         strlen(Command);
  4216  0020F6  0ECF               	movlw	low _Command
  4217  0020F8  6E05               	movwf	strlen@s^0,c
  4218  0020FA  0E01               	movlw	high _Command
  4219  0020FC  6E06               	movwf	(strlen@s+1)^0,c
  4220  0020FE  EC88  F01A         	call	_strlen	;wreg free
  4221  002102                     l6385:
  4222                           
  4223                           ;RS232.c: 142:     return 0;
  4224  002102  0E00               	movlw	0
  4225  002104  0100               	movlb	0	; () banked
  4226  002106  6F8C               	movwf	(?_ReadRX232+1)& (0+255),b
  4227  002108  0E00               	movlw	0
  4228  00210A  6F8B               	movwf	?_ReadRX232& (0+255),b
  4229  00210C                     l888:
  4230  00210C  0012               	return		;funcret
  4231  00210E                     __end_of_ReadRX232:
  4232                           	opt callstack 0
  4233                           
  4234 ;; *************** function _strcat *****************
  4235 ;; Defined at:
  4236 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  dest            2   18[COMRAM] PTR unsigned char 
  4239 ;;		 -> Command(16), 
  4240 ;;  src             2   20[COMRAM] PTR const unsigned char 
  4241 ;;		 -> ReadRX232@temp(2), 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2   18[COMRAM] PTR unsigned char 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;Total ram usage:        4 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    5
  4260 ;; This function calls:
  4261 ;;		_strcpy
  4262 ;;		_strlen
  4263 ;; This function is called by:
  4264 ;;		_ReadRX232
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text6
  4269  0039EE                     __ptext6:
  4270                           	opt callstack 0
  4271  0039EE                     _strcat:
  4272                           	opt callstack 22
  4273  0039EE  C013  F005         	movff	strcat@dest,strlen@s
  4274  0039F2  C014  F006         	movff	strcat@dest+1,strlen@s+1
  4275  0039F6  EC88  F01A         	call	_strlen	;wreg free
  4276  0039FA  5005               	movf	?_strlen^0,w,c
  4277  0039FC  2413               	addwf	strcat@dest^0,w,c
  4278  0039FE  6E09               	movwf	strcpy@dest^0,c
  4279  003A00  5006               	movf	(?_strlen+1)^0,w,c
  4280  003A02  2014               	addwfc	(strcat@dest+1)^0,w,c
  4281  003A04  6E0A               	movwf	(strcpy@dest+1)^0,c
  4282  003A06  C015  F00B         	movff	strcat@src,strcpy@src
  4283  003A0A  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  4284  003A0E  EC1C  F019         	call	_strcpy	;wreg free
  4285  003A12  0012               	return		;funcret
  4286  003A14                     __end_of_strcat:
  4287                           	opt callstack 0
  4288                           
  4289 ;; *************** function _strcpy *****************
  4290 ;; Defined at:
  4291 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  dest            2    8[COMRAM] PTR unsigned char 
  4294 ;;		 -> Command(16), 
  4295 ;;  src             2   10[COMRAM] PTR const unsigned char 
  4296 ;;		 -> STR_45(1), STR_38(1), ReadRX232@temp(2), STR_3(1), 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  d               2   16[COMRAM] PTR unsigned char 
  4299 ;;		 -> Command(16), 
  4300 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4301 ;;		 -> STR_45(1), STR_38(1), ReadRX232@temp(2), STR_3(1), 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  2    8[COMRAM] PTR unsigned char 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4312 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4314 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;Total ram usage:       10 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    4
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;;		_SaveCardDat
  4323 ;;		_strcat
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text7
  4328  003238                     __ptext7:
  4329                           	opt callstack 0
  4330  003238                     _strcpy:
  4331                           	opt callstack 26
  4332  003238  C00B  F00F         	movff	strcpy@src,strcpy@s
  4333  00323C  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  4334  003240  C009  F011         	movff	strcpy@dest,strcpy@d
  4335  003244  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  4336  003248                     l6251:
  4337  003248  500F               	movf	strcpy@s^0,w,c
  4338  00324A  6E0D               	movwf	??_strcpy^0,c
  4339  00324C  5010               	movf	(strcpy@s+1)^0,w,c
  4340  00324E  6E0E               	movwf	(??_strcpy+1)^0,c
  4341  003250  4A0F               	infsnz	strcpy@s^0,f,c
  4342  003252  2A10               	incf	(strcpy@s+1)^0,f,c
  4343  003254  C00D  FFF6         	movff	??_strcpy,tblptrl
  4344  003258  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  4345  00325C  0E00               	movlw	low (__mediumconst shr (0+16))
  4346  00325E  6EF8               	movwf	tblptru,c
  4347  003260  C011  FFD9         	movff	strcpy@d,fsr2l
  4348  003264  C012  FFDA         	movff	strcpy@d+1,fsr2h
  4349  003268  4A11               	infsnz	strcpy@d^0,f,c
  4350  00326A  2A12               	incf	(strcpy@d+1)^0,f,c
  4351  00326C  0E0E               	movlw	(high __ramtop+-1)
  4352  00326E  64F7               	cpfsgt	tblptrh,c
  4353  003270  D003               	bra	u6247
  4354  003272  0008               	tblrd		*
  4355  003274  50F5               	movf	tablat,w,c
  4356  003276  D005               	bra	u6240
  4357  003278                     u6247:
  4358  003278  CFF6 FFE9          	movff	tblptrl,fsr0l
  4359  00327C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4360  003280  50EF               	movf	indf0,w,c
  4361  003282                     u6240:
  4362  003282  6EDF               	movwf	indf2,c
  4363  003284  50DF               	movf	indf2,w,c
  4364  003286  A4D8               	btfss	status,2,c
  4365  003288  EF48  F019         	goto	u6251
  4366  00328C  EF4A  F019         	goto	u6250
  4367  003290                     u6251:
  4368  003290  EF24  F019         	goto	l6251
  4369  003294                     u6250:
  4370  003294  0012               	return		;funcret
  4371  003296                     __end_of_strcpy:
  4372                           	opt callstack 0
  4373                           
  4374 ;; *************** function _memmove *****************
  4375 ;; Defined at:
  4376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  d1              2    8[COMRAM] PTR void 
  4379 ;;		 -> Command(16), 
  4380 ;;  s1              2   10[COMRAM] PTR const void 
  4381 ;;		 -> Command(16), 
  4382 ;;  n               2   12[COMRAM] unsigned int 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  s               2   18[COMRAM] PTR const unsigned char 
  4385 ;;		 -> Command(16), 
  4386 ;;  d               2   16[COMRAM] PTR unsigned char 
  4387 ;;		 -> Command(16), 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  2    8[COMRAM] PTR void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4397 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4400 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4401 ;;Total ram usage:       12 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    4
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_ReadRX232
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text8
  4412  0027EE                     __ptext8:
  4413                           	opt callstack 0
  4414  0027EE                     _memmove:
  4415                           	opt callstack 23
  4416  0027EE  C00B  F013         	movff	memmove@s1,memmove@s
  4417  0027F2  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  4418  0027F6  C009  F011         	movff	memmove@d1,memmove@d
  4419  0027FA  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  4420  0027FE  5011               	movf	memmove@d^0,w,c
  4421  002800  5C13               	subwf	memmove@s^0,w,c
  4422  002802  5012               	movf	(memmove@d+1)^0,w,c
  4423  002804  5814               	subwfb	(memmove@s+1)^0,w,c
  4424  002806  B0D8               	btfsc	status,0,c
  4425  002808  EF08  F014         	goto	u6331
  4426  00280C  EF0A  F014         	goto	u6330
  4427  002810                     u6331:
  4428  002810  EF41  F014         	goto	l6343
  4429  002814                     u6330:
  4430  002814  500D               	movf	memmove@n^0,w,c
  4431  002816  2413               	addwf	memmove@s^0,w,c
  4432  002818  6E0F               	movwf	??_memmove^0,c
  4433  00281A  500E               	movf	(memmove@n+1)^0,w,c
  4434  00281C  2014               	addwfc	(memmove@s+1)^0,w,c
  4435  00281E  6E10               	movwf	(??_memmove+1)^0,c
  4436  002820  500F               	movf	??_memmove^0,w,c
  4437  002822  5C11               	subwf	memmove@d^0,w,c
  4438  002824  5010               	movf	(??_memmove+1)^0,w,c
  4439  002826  5812               	subwfb	(memmove@d+1)^0,w,c
  4440  002828  B0D8               	btfsc	status,0,c
  4441  00282A  EF19  F014         	goto	u6341
  4442  00282E  EF1B  F014         	goto	u6340
  4443  002832                     u6341:
  4444  002832  EF41  F014         	goto	l6343
  4445  002836                     u6340:
  4446  002836  500D               	movf	memmove@n^0,w,c
  4447  002838  2613               	addwf	memmove@s^0,f,c
  4448  00283A  500E               	movf	(memmove@n+1)^0,w,c
  4449  00283C  2214               	addwfc	(memmove@s+1)^0,f,c
  4450  00283E  500D               	movf	memmove@n^0,w,c
  4451  002840  2611               	addwf	memmove@d^0,f,c
  4452  002842  500E               	movf	(memmove@n+1)^0,w,c
  4453  002844  2212               	addwfc	(memmove@d+1)^0,f,c
  4454  002846                     l6339:
  4455  002846  0613               	decf	memmove@s^0,f,c
  4456  002848  A0D8               	btfss	status,0,c
  4457  00284A  0614               	decf	(memmove@s+1)^0,f,c
  4458  00284C  C013  FFD9         	movff	memmove@s,fsr2l
  4459  002850  C014  FFDA         	movff	memmove@s+1,fsr2h
  4460  002854  0611               	decf	memmove@d^0,f,c
  4461  002856  A0D8               	btfss	status,0,c
  4462  002858  0612               	decf	(memmove@d+1)^0,f,c
  4463  00285A  C011  FFE1         	movff	memmove@d,fsr1l
  4464  00285E  C012  FFE2         	movff	memmove@d+1,fsr1h
  4465  002862  CFDF FFE7          	movff	indf2,indf1
  4466  002866  060D               	decf	memmove@n^0,f,c
  4467  002868  A0D8               	btfss	status,0,c
  4468  00286A  060E               	decf	(memmove@n+1)^0,f,c
  4469  00286C  500D               	movf	memmove@n^0,w,c
  4470  00286E  100E               	iorwf	(memmove@n+1)^0,w,c
  4471  002870  A4D8               	btfss	status,2,c
  4472  002872  EF3D  F014         	goto	u6351
  4473  002876  EF3F  F014         	goto	u6350
  4474  00287A                     u6351:
  4475  00287A  EF23  F014         	goto	l6339
  4476  00287E                     u6350:
  4477  00287E  EF64  F014         	goto	l1862
  4478  002882                     l6343:
  4479  002882  500D               	movf	memmove@n^0,w,c
  4480  002884  100E               	iorwf	(memmove@n+1)^0,w,c
  4481  002886  B4D8               	btfsc	status,2,c
  4482  002888  EF48  F014         	goto	u6361
  4483  00288C  EF4A  F014         	goto	u6360
  4484  002890                     u6361:
  4485  002890  EF64  F014         	goto	l1862
  4486  002894                     u6360:
  4487  002894                     l6345:
  4488  002894  C013  FFD9         	movff	memmove@s,fsr2l
  4489  002898  C014  FFDA         	movff	memmove@s+1,fsr2h
  4490  00289C  C011  FFE1         	movff	memmove@d,fsr1l
  4491  0028A0  C012  FFE2         	movff	memmove@d+1,fsr1h
  4492  0028A4  CFDF FFE7          	movff	indf2,indf1
  4493  0028A8  4A13               	infsnz	memmove@s^0,f,c
  4494  0028AA  2A14               	incf	(memmove@s+1)^0,f,c
  4495  0028AC  4A11               	infsnz	memmove@d^0,f,c
  4496  0028AE  2A12               	incf	(memmove@d+1)^0,f,c
  4497  0028B0  060D               	decf	memmove@n^0,f,c
  4498  0028B2  A0D8               	btfss	status,0,c
  4499  0028B4  060E               	decf	(memmove@n+1)^0,f,c
  4500  0028B6  500D               	movf	memmove@n^0,w,c
  4501  0028B8  100E               	iorwf	(memmove@n+1)^0,w,c
  4502  0028BA  A4D8               	btfss	status,2,c
  4503  0028BC  EF62  F014         	goto	u6371
  4504  0028C0  EF64  F014         	goto	u6370
  4505  0028C4                     u6371:
  4506  0028C4  EF4A  F014         	goto	l6345
  4507  0028C8                     u6370:
  4508  0028C8                     l1862:
  4509  0028C8  0012               	return		;funcret
  4510  0028CA                     __end_of_memmove:
  4511                           	opt callstack 0
  4512                           
  4513 ;; *************** function _EUSART2_is_rx_ready *****************
  4514 ;; Defined at:
  4515 ;;		line 137 in file "mcc_generated_files/eusart2.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;		None
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      _Bool 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;Total ram usage:        0 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_ReadRX232
  4540 ;;		_SaveCardDat
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text9
  4545  003A70                     __ptext9:
  4546                           	opt callstack 0
  4547  003A70                     _EUSART2_is_rx_ready:
  4548                           	opt callstack 23
  4549  003A70                     
  4550                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
  4551  003A70  0100               	movlb	0	; () banked
  4552  003A72  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4553  003A74  A4D8               	btfss	status,2,c
  4554  003A76  EF3F  F01D         	goto	u6291
  4555  003A7A  EF42  F01D         	goto	u6290
  4556  003A7E                     u6291:
  4557  003A7E  0E01               	movlw	1
  4558  003A80  EF43  F01D         	goto	u6300
  4559  003A84                     u6290:
  4560  003A84  0E00               	movlw	0
  4561  003A86                     u6300:
  4562  003A86                     
  4563                           ; BSR set to: 0
  4564  003A86  0012               	return		;funcret
  4565  003A88                     __end_of_EUSART2_is_rx_ready:
  4566                           	opt callstack 0
  4567                           
  4568 ;; *************** function _EUSART2_Read *****************
  4569 ;; Defined at:
  4570 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  readValue       1    4[COMRAM] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      unsigned char 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4588 ;;Total ram usage:        1 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    4
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_ReadRX232
  4595 ;;		_SaveCardDat
  4596 ;;		_getch
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text10
  4601  00340E                     __ptext10:
  4602                           	opt callstack 0
  4603  00340E                     _EUSART2_Read:
  4604                           	opt callstack 23
  4605  00340E                     l6303:
  4606                           
  4607                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
  4608  00340E  0100               	movlb	0	; () banked
  4609  003410  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4610  003412  B4D8               	btfsc	status,2,c
  4611  003414  EF0E  F01A         	goto	u6311
  4612  003418  EF10  F01A         	goto	u6310
  4613  00341C                     u6311:
  4614  00341C  EF07  F01A         	goto	l6303
  4615  003420                     u6310:
  4616  003420                     
  4617                           ; BSR set to: 0
  4618                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  4619  003420  0E81               	movlw	low _eusart2RxStatusBuffer
  4620  003422  25B8               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4621  003424  6ED9               	movwf	fsr2l,c
  4622  003426  6ADA               	clrf	fsr2h,c
  4623  003428  0E01               	movlw	high _eusart2RxStatusBuffer
  4624  00342A  22DA               	addwfc	fsr2h,f,c
  4625  00342C  50DF               	movf	indf2,w,c
  4626  00342E  6FB6               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  4627                           
  4628                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
  4629  003430  0E64               	movlw	low _eusart2RxBuffer
  4630  003432  25B8               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4631  003434  6ED9               	movwf	fsr2l,c
  4632  003436  6ADA               	clrf	fsr2h,c
  4633  003438  0E02               	movlw	high _eusart2RxBuffer
  4634  00343A  22DA               	addwfc	fsr2h,f,c
  4635  00343C  50DF               	movf	indf2,w,c
  4636  00343E  6E05               	movwf	EUSART2_Read@readValue^0,c
  4637  003440                     
  4638                           ; BSR set to: 0
  4639  003440  2BB8               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  4640  003442                     
  4641                           ; BSR set to: 0
  4642                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  4643  003442  0E1F               	movlw	31
  4644  003444  65B8               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  4645  003446  EF27  F01A         	goto	u6321
  4646  00344A  EF29  F01A         	goto	u6320
  4647  00344E                     u6321:
  4648  00344E  EF2B  F01A         	goto	l6313
  4649  003452                     u6320:
  4650  003452                     
  4651                           ; BSR set to: 0
  4652                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
  4653  003452  0E00               	movlw	0
  4654  003454  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  4655  003456                     l6313:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
  4659  003456  010E               	movlb	14	; () banked
  4660  003458  9FC5               	bcf	197,7,b	;volatile
  4661  00345A                     
  4662                           ; BSR set to: 14
  4663                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
  4664  00345A  0100               	movlb	0	; () banked
  4665  00345C  07B7               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  4666  00345E                     
  4667                           ; BSR set to: 0
  4668                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
  4669  00345E  010E               	movlb	14	; () banked
  4670  003460  8FC5               	bsf	197,7,b	;volatile
  4671  003462                     
  4672                           ; BSR set to: 14
  4673                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
  4674  003462  5005               	movf	EUSART2_Read@readValue^0,w,c
  4675  003464                     
  4676                           ; BSR set to: 14
  4677  003464  0012               	return		;funcret
  4678  003466                     __end_of_EUSART2_Read:
  4679                           	opt callstack 0
  4680                           
  4681 ;; *************** function _ClearEEAddRange *****************
  4682 ;; Defined at:
  4683 ;;		line 161 in file "RS232.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  StartAdd        2   43[BANK0 ] unsigned int 
  4686 ;;  NumBytes        2   45[BANK0 ] unsigned int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  i               2   84[COMRAM] int 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4702 ;;Total ram usage:        6 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:   13
  4705 ;; This function calls:
  4706 ;;		_DATAEE_WriteByte
  4707 ;;		_printf
  4708 ;; This function is called by:
  4709 ;;		_SaveCardDat
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text11
  4714  003296                     __ptext11:
  4715                           	opt callstack 0
  4716  003296                     _ClearEEAddRange:
  4717                           	opt callstack 15
  4718  003296                     
  4719                           ;RS232.c: 164:     printf("Clearing EEPROM from Address: 0x%04x, Num Bytes: %i \r\n", St
      +                          artAdd, NumBytes);
  4720  003296  0EDB               	movlw	low STR_34
  4721  003298  0100               	movlb	0	; () banked
  4722  00329A  6F7D               	movwf	printf@fmt& (0+255),b
  4723  00329C  0EFB               	movlw	high STR_34
  4724  00329E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4725  0032A0  C08B  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  4726  0032A4  C08C  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  4727  0032A8  C08D  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  4728  0032AC  C08E  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  4729  0032B0  ECE3  F01C         	call	_printf	;wreg free
  4730  0032B4                     
  4731                           ;RS232.c: 168:     for(i=0; i<NumBytes; i++){
  4732  0032B4  0E00               	movlw	0
  4733  0032B6  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  4734  0032B8  0E00               	movlw	0
  4735  0032BA  6E55               	movwf	ClearEEAddRange@i^0,c
  4736  0032BC  EF6D  F019         	goto	l6437
  4737  0032C0                     l6431:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;RS232.c: 169:         DATAEE_WriteByte(StartAdd, 0xFF);
  4741  0032C0  C08B  F005         	movff	ClearEEAddRange@StartAdd,DATAEE_WriteByte@bAdd
  4742  0032C4  C08C  F006         	movff	ClearEEAddRange@StartAdd+1,DATAEE_WriteByte@bAdd+1
  4743  0032C8  0EFF               	movlw	255
  4744  0032CA  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4745  0032CC  EC45  F01B         	call	_DATAEE_WriteByte	;wreg free
  4746  0032D0                     
  4747                           ;RS232.c: 170:         StartAdd++;
  4748  0032D0  0100               	movlb	0	; () banked
  4749  0032D2  4B8B               	infsnz	ClearEEAddRange@StartAdd& (0+255),f,b
  4750  0032D4  2B8C               	incf	(ClearEEAddRange@StartAdd+1)& (0+255),f,b
  4751  0032D6                     
  4752                           ; BSR set to: 0
  4753                           ;RS232.c: 171:     }
  4754  0032D6  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  4755  0032D8  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  4756  0032DA                     l6437:
  4757  0032DA  0100               	movlb	0	; () banked
  4758  0032DC  518D               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  4759  0032DE  5C55               	subwf	ClearEEAddRange@i^0,w,c
  4760  0032E0  518E               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  4761  0032E2  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  4762  0032E4  A0D8               	btfss	status,0,c
  4763  0032E6  EF77  F019         	goto	u6471
  4764  0032EA  EF79  F019         	goto	u6470
  4765  0032EE                     u6471:
  4766  0032EE  EF60  F019         	goto	l6431
  4767  0032F2                     u6470:
  4768  0032F2                     
  4769                           ; BSR set to: 0
  4770  0032F2  0012               	return		;funcret
  4771  0032F4                     __end_of_ClearEEAddRange:
  4772                           	opt callstack 0
  4773                           
  4774 ;; *************** function _DATAEE_WriteByte *****************
  4775 ;; Defined at:
  4776 ;;		line 165 in file "mcc_generated_files/memory.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  bAdd            2    4[COMRAM] unsigned short 
  4779 ;;  bData           1    6[COMRAM] unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4791 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4795 ;;Total ram usage:        4 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    4
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_ClearEEAddRange
  4802 ;;		_SaveCardDat
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text12
  4807  00368A                     __ptext12:
  4808                           	opt callstack 0
  4809  00368A                     _DATAEE_WriteByte:
  4810                           	opt callstack 24
  4811  00368A                     
  4812                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  4813  00368A  0E00               	movlw	0
  4814  00368C  BEF2               	btfsc	242,7,c	;volatile
  4815  00368E  0E01               	movlw	1
  4816  003690  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  4817  003692                     
  4818                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  4819  003692  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  4820  003694  0B03               	andlw	3
  4821  003696  6E7F               	movwf	127,c	;volatile
  4822  003698                     
  4823                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  4824  003698  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  4825  00369C                     
  4826                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  4827  00369C  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  4828  0036A0                     
  4829                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  4830  0036A0  0E3F               	movlw	-193
  4831  0036A2  1681               	andwf	129,f,c	;volsfr
  4832  0036A4                     
  4833                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  4834  0036A4  8481               	bsf	129,2,c	;volsfr
  4835  0036A6                     
  4836                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  4837  0036A6  9EF2               	bcf	242,7,c	;volatile
  4838  0036A8                     
  4839                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  4840  0036A8  0E55               	movlw	85
  4841  0036AA  6E82               	movwf	130,c	;volsfr
  4842  0036AC                     
  4843                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  4844  0036AC  0EAA               	movlw	170
  4845  0036AE  6E82               	movwf	130,c	;volsfr
  4846  0036B0                     
  4847                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  4848  0036B0  8281               	bsf	129,1,c	;volsfr
  4849  0036B2                     l212:
  4850                           
  4851                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  4852  0036B2  B281               	btfsc	129,1,c	;volsfr
  4853  0036B4  EF5E  F01B         	goto	u6271
  4854  0036B8  EF60  F01B         	goto	u6270
  4855  0036BC                     u6271:
  4856  0036BC  EF59  F01B         	goto	l212
  4857  0036C0                     u6270:
  4858  0036C0                     
  4859                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  4860  0036C0  9481               	bcf	129,2,c	;volsfr
  4861                           
  4862                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  4863  0036C2  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  4864  0036C4  D002               	bra	u6285
  4865  0036C6  9EF2               	bcf	242,7,c	;volatile
  4866  0036C8  D001               	bra	u6286
  4867  0036CA                     u6285:
  4868  0036CA  8EF2               	bsf	242,7,c	;volatile
  4869  0036CC                     u6286:
  4870  0036CC  0012               	return		;funcret
  4871  0036CE                     __end_of_DATAEE_WriteByte:
  4872                           	opt callstack 0
  4873                           
  4874 ;; *************** function _InitialiseString *****************
  4875 ;; Defined at:
  4876 ;;		line 66 in file "RS232.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  SerialNum      11   43[BANK0 ] unsigned char [11]
  4881 ;;  i               2    0        int 
  4882 ;;  dataeeAddrWr    2    0        unsigned short 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;Total ram usage:       13 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   13
  4899 ;; This function calls:
  4900 ;;		_Initalisation
  4901 ;;		_SerIni
  4902 ;;		_printf
  4903 ;; This function is called by:
  4904 ;;		_main
  4905 ;;		_ValidateCmd
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text13
  4910  002CAE                     __ptext13:
  4911                           	opt callstack 0
  4912  002CAE                     _InitialiseString:
  4913                           	opt callstack 16
  4914  002CAE                     
  4915                           ;RS232.c: 69:     uint16_t dataeeAddrWrk;;RS232.c: 71:     char SerialNum[11] = { '\0' }
      +                          ;
  4916  002CAE  EE20  F08B         	lfsr	2,InitialiseString@SerialNum
  4917  002CB2  0E0A               	movlw	10
  4918  002CB4                     u6481:
  4919  002CB4  6ADE               	clrf	postinc2,c
  4920  002CB6  06E8               	decf	wreg,f,c
  4921  002CB8  E2FD               	bc	u6481
  4922  002CBA                     
  4923                           ;RS232.c: 72:     SerIni(SerialNum);
  4924  002CBA  0E8B               	movlw	low InitialiseString@SerialNum
  4925  002CBC  6E07               	movwf	SerIni@SerialNum^0,c
  4926  002CBE  0E00               	movlw	high InitialiseString@SerialNum
  4927  002CC0  6E08               	movwf	(SerIni@SerialNum+1)^0,c
  4928  002CC2  EC87  F010         	call	_SerIni	;wreg free
  4929  002CC6                     
  4930                           ;RS232.c: 76:     printf("\rDan and Sam's Modbus GPIO Expansion - AP00070125-01 Rev -\r\
      +                          n");
  4931  002CC6  0E9E               	movlw	low STR_21
  4932  002CC8  0100               	movlb	0	; () banked
  4933  002CCA  6F7D               	movwf	printf@fmt& (0+255),b
  4934  002CCC  0EFB               	movlw	high STR_21
  4935  002CCE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4936  002CD0  ECE3  F01C         	call	_printf	;wreg free
  4937  002CD4                     
  4938                           ;RS232.c: 78:     Initalisation();
  4939  002CD4  ECE2  F01D         	call	_Initalisation	;wreg free
  4940  002CD8                     
  4941                           ;RS232.c: 82:     printf("Card Ser No. %s \r\n",SerialNum);
  4942  002CD8  0E5A               	movlw	low STR_22
  4943  002CDA  0100               	movlb	0	; () banked
  4944  002CDC  6F7D               	movwf	printf@fmt& (0+255),b
  4945  002CDE  0EFF               	movlw	high STR_22
  4946  002CE0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4947  002CE2  0E8B               	movlw	low InitialiseString@SerialNum
  4948  002CE4  6F7F               	movwf	(?_printf+2)& (0+255),b
  4949  002CE6  0E00               	movlw	high InitialiseString@SerialNum
  4950  002CE8  6F80               	movwf	(?_printf+3)& (0+255),b
  4951  002CEA  ECE3  F01C         	call	_printf	;wreg free
  4952  002CEE                     
  4953                           ;RS232.c: 83:     printf("Card Address. 0x05 \r\n");
  4954  002CEE  0E1A               	movlw	low STR_23
  4955  002CF0  0100               	movlb	0	; () banked
  4956  002CF2  6F7D               	movwf	printf@fmt& (0+255),b
  4957  002CF4  0EFF               	movlw	high STR_23
  4958  002CF6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4959  002CF8  ECE3  F01C         	call	_printf	;wreg free
  4960  002CFC                     
  4961                           ;RS232.c: 84:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  4962  002CFC  0EB2               	movlw	low STR_24
  4963  002CFE  0100               	movlb	0	; () banked
  4964  002D00  6F7D               	movwf	printf@fmt& (0+255),b
  4965  002D02  0EFC               	movlw	high STR_24
  4966  002D04  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4967  002D06  0ED2               	movlw	low STR_25
  4968  002D08  6F7F               	movwf	(?_printf+2)& (0+255),b
  4969  002D0A  0EFF               	movlw	high STR_25
  4970  002D0C  6F80               	movwf	(?_printf+3)& (0+255),b
  4971  002D0E  0EDE               	movlw	low STR_26
  4972  002D10  6F81               	movwf	(?_printf+4)& (0+255),b
  4973  002D12  0EFF               	movlw	high STR_26
  4974  002D14  6F82               	movwf	(?_printf+5)& (0+255),b
  4975  002D16  0E08               	movlw	8
  4976  002D18  6F84               	movwf	(?_printf+7)& (0+255),b
  4977  002D1A  0E34               	movlw	52
  4978  002D1C  6F83               	movwf	(?_printf+6)& (0+255),b
  4979  002D1E  ECE3  F01C         	call	_printf	;wreg free
  4980  002D22                     
  4981                           ;RS232.c: 86:     printf("Function Codes Supported:\r\n");
  4982  002D22  0EE3               	movlw	low STR_27
  4983  002D24  0100               	movlb	0	; () banked
  4984  002D26  6F7D               	movwf	printf@fmt& (0+255),b
  4985  002D28  0EFD               	movlw	high STR_27
  4986  002D2A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4987  002D2C  ECE3  F01C         	call	_printf	;wreg free
  4988  002D30                     
  4989                           ;RS232.c: 87:     printf("   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  4990  002D30  0E7E               	movlw	low STR_28
  4991  002D32  0100               	movlb	0	; () banked
  4992  002D34  6F7D               	movwf	printf@fmt& (0+255),b
  4993  002D36  0EFC               	movlw	high STR_28
  4994  002D38  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4995  002D3A  ECE3  F01C         	call	_printf	;wreg free
  4996  002D3E                     
  4997                           ;RS232.c: 88:     printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  4998  002D3E  0E12               	movlw	low STR_29
  4999  002D40  0100               	movlb	0	; () banked
  5000  002D42  6F7D               	movwf	printf@fmt& (0+255),b
  5001  002D44  0EFC               	movlw	high STR_29
  5002  002D46  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5003  002D48  ECE3  F01C         	call	_printf	;wreg free
  5004  002D4C                     
  5005                           ;RS232.c: 89:     printf("Initalisation Complete - Ready\r\n\n");
  5006  002D4C  0E24               	movlw	low STR_30
  5007  002D4E  0100               	movlb	0	; () banked
  5008  002D50  6F7D               	movwf	printf@fmt& (0+255),b
  5009  002D52  0EFD               	movlw	high STR_30
  5010  002D54  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5011  002D56  ECE3  F01C         	call	_printf	;wreg free
  5012  002D5A  0012               	return		;funcret
  5013  002D5C                     __end_of_InitialiseString:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function _SerIni *****************
  5017 ;; Defined at:
  5018 ;;		line 18 in file "RS232.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  SerialNum       2    6[COMRAM] PTR unsigned char 
  5021 ;;		 -> InitialiseString@SerialNum(11), 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  j               2   16[COMRAM] int 
  5024 ;;  i               2   14[COMRAM] int 
  5025 ;;  dataeeAddrWr    2   10[COMRAM] unsigned short 
  5026 ;;  readDataEven    1   13[COMRAM] unsigned char 
  5027 ;;  readDataOdd     1   12[COMRAM] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;Total ram usage:       12 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    5
  5044 ;; This function calls:
  5045 ;;		_DATAEE_ReadByte
  5046 ;; This function is called by:
  5047 ;;		_InitialiseString
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text14
  5052  00210E                     __ptext14:
  5053                           	opt callstack 0
  5054  00210E                     _SerIni:
  5055                           	opt callstack 23
  5056  00210E                     
  5057                           ;RS232.c: 22:     char readDataOdd, readDataEven;;RS232.c: 23:     int i=0, j=0;
  5058  00210E  0E00               	movlw	0
  5059  002110  6E10               	movwf	(SerIni@i+1)^0,c
  5060  002112  0E00               	movlw	0
  5061  002114  6E0F               	movwf	SerIni@i^0,c
  5062  002116  0E00               	movlw	0
  5063  002118  6E12               	movwf	(SerIni@j+1)^0,c
  5064  00211A  0E00               	movlw	0
  5065  00211C  6E11               	movwf	SerIni@j^0,c
  5066                           
  5067                           ;RS232.c: 24:     uint16_t dataeeAddrWrk;;RS232.c: 28:     dataeeAddrWrk = 0x0300;
  5068  00211E  0E03               	movlw	3
  5069  002120  6E0C               	movwf	(SerIni@dataeeAddrWrk+1)^0,c
  5070  002122  0E00               	movlw	0
  5071  002124  6E0B               	movwf	SerIni@dataeeAddrWrk^0,c
  5072                           
  5073                           ;RS232.c: 29:     for(i = 0; i < 4; i++){
  5074  002126  0E00               	movlw	0
  5075  002128  6E10               	movwf	(SerIni@i+1)^0,c
  5076  00212A  0E00               	movlw	0
  5077  00212C  6E0F               	movwf	SerIni@i^0,c
  5078  00212E                     l6395:
  5079                           
  5080                           ;RS232.c: 30:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  5081  00212E  C00B  F005         	movff	SerIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5082  002132  C00C  F006         	movff	SerIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5083  002136  EC44  F01D         	call	_DATAEE_ReadByte	;wreg free
  5084  00213A  6E0D               	movwf	SerIni@readDataOdd^0,c
  5085  00213C                     
  5086                           ;RS232.c: 32:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5087  00213C  0E03               	movlw	3
  5088  00213E  6E0A               	movwf	(??_SerIni+1)^0,c
  5089  002140  0E08               	movlw	8
  5090  002142  6E09               	movwf	??_SerIni^0,c
  5091  002144  0E77               	movlw	119
  5092  002146                     u7037:
  5093  002146  2EE8               	decfsz	wreg,f,c
  5094  002148  D7FE               	bra	u7037
  5095  00214A  2E09               	decfsz	??_SerIni^0,f,c
  5096  00214C  D7FC               	bra	u7037
  5097  00214E  2E0A               	decfsz	(??_SerIni+1)^0,f,c
  5098  002150  D7FA               	bra	u7037
  5099  002152  F000               	nop	
  5100  002154                     
  5101                           ;RS232.c: 35:         if(readDataOdd != 0xFF){
  5102  002154  280D               	incf	SerIni@readDataOdd^0,w,c
  5103  002156  B4D8               	btfsc	status,2,c
  5104  002158  EFB0  F010         	goto	u6441
  5105  00215C  EFB2  F010         	goto	u6440
  5106  002160                     u6441:
  5107  002160  EFBC  F010         	goto	l6405
  5108  002164                     u6440:
  5109  002164                     
  5110                           ;RS232.c: 36:             SerialNum[j] = readDataOdd;
  5111  002164  5011               	movf	SerIni@j^0,w,c
  5112  002166  2407               	addwf	SerIni@SerialNum^0,w,c
  5113  002168  6ED9               	movwf	fsr2l,c
  5114  00216A  5012               	movf	(SerIni@j+1)^0,w,c
  5115  00216C  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5116  00216E  6EDA               	movwf	fsr2h,c
  5117  002170  C00D  FFDF         	movff	SerIni@readDataOdd,indf2
  5118  002174                     
  5119                           ;RS232.c: 37:             j++;
  5120  002174  4A11               	infsnz	SerIni@j^0,f,c
  5121  002176  2A12               	incf	(SerIni@j+1)^0,f,c
  5122  002178                     l6405:
  5123                           
  5124                           ;RS232.c: 40:         dataeeAddrWrk++;
  5125  002178  4A0B               	infsnz	SerIni@dataeeAddrWrk^0,f,c
  5126  00217A  2A0C               	incf	(SerIni@dataeeAddrWrk+1)^0,f,c
  5127  00217C                     
  5128                           ;RS232.c: 41:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  5129  00217C  C00B  F005         	movff	SerIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5130  002180  C00C  F006         	movff	SerIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5131  002184  EC44  F01D         	call	_DATAEE_ReadByte	;wreg free
  5132  002188  6E0E               	movwf	SerIni@readDataEven^0,c
  5133  00218A                     
  5134                           ;RS232.c: 43:         dataeeAddrWrk++;
  5135  00218A  4A0B               	infsnz	SerIni@dataeeAddrWrk^0,f,c
  5136  00218C  2A0C               	incf	(SerIni@dataeeAddrWrk+1)^0,f,c
  5137  00218E                     
  5138                           ;RS232.c: 44:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5139  00218E  0E03               	movlw	3
  5140  002190  6E0A               	movwf	(??_SerIni+1)^0,c
  5141  002192  0E08               	movlw	8
  5142  002194  6E09               	movwf	??_SerIni^0,c
  5143  002196  0E77               	movlw	119
  5144  002198                     u7047:
  5145  002198  2EE8               	decfsz	wreg,f,c
  5146  00219A  D7FE               	bra	u7047
  5147  00219C  2E09               	decfsz	??_SerIni^0,f,c
  5148  00219E  D7FC               	bra	u7047
  5149  0021A0  2E0A               	decfsz	(??_SerIni+1)^0,f,c
  5150  0021A2  D7FA               	bra	u7047
  5151  0021A4  F000               	nop	
  5152  0021A6                     
  5153                           ;RS232.c: 47:         if(readDataEven != 0xFF){
  5154  0021A6  280E               	incf	SerIni@readDataEven^0,w,c
  5155  0021A8  B4D8               	btfsc	status,2,c
  5156  0021AA  EFD9  F010         	goto	u6451
  5157  0021AE  EFDB  F010         	goto	u6450
  5158  0021B2                     u6451:
  5159  0021B2  EFE5  F010         	goto	l6419
  5160  0021B6                     u6450:
  5161  0021B6                     
  5162                           ;RS232.c: 48:             SerialNum[j] = readDataEven;
  5163  0021B6  5011               	movf	SerIni@j^0,w,c
  5164  0021B8  2407               	addwf	SerIni@SerialNum^0,w,c
  5165  0021BA  6ED9               	movwf	fsr2l,c
  5166  0021BC  5012               	movf	(SerIni@j+1)^0,w,c
  5167  0021BE  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5168  0021C0  6EDA               	movwf	fsr2h,c
  5169  0021C2  C00E  FFDF         	movff	SerIni@readDataEven,indf2
  5170  0021C6                     
  5171                           ;RS232.c: 49:             j++;
  5172  0021C6  4A11               	infsnz	SerIni@j^0,f,c
  5173  0021C8  2A12               	incf	(SerIni@j+1)^0,f,c
  5174  0021CA                     l6419:
  5175                           
  5176                           ;RS232.c: 52:         MB303xx[i] = readDataOdd *256 + readDataEven;
  5177  0021CA  500E               	movf	SerIni@readDataEven^0,w,c
  5178  0021CC  C00D  F009         	movff	SerIni@readDataOdd,??_SerIni
  5179  0021D0  6A0A               	clrf	(??_SerIni+1)^0,c
  5180  0021D2  C009  F00A         	movff	??_SerIni,??_SerIni+1
  5181  0021D6  6A09               	clrf	??_SerIni^0,c
  5182  0021D8  2609               	addwf	??_SerIni^0,f,c
  5183  0021DA  0E00               	movlw	0
  5184  0021DC  220A               	addwfc	(??_SerIni+1)^0,f,c
  5185  0021DE  90D8               	bcf	status,0,c
  5186  0021E0  340F               	rlcf	SerIni@i^0,w,c
  5187  0021E2  6ED9               	movwf	fsr2l,c
  5188  0021E4  3410               	rlcf	(SerIni@i+1)^0,w,c
  5189  0021E6  6EDA               	movwf	fsr2h,c
  5190  0021E8  0E18               	movlw	low _MB303xx
  5191  0021EA  26D9               	addwf	fsr2l,f,c
  5192  0021EC  0E01               	movlw	high _MB303xx
  5193  0021EE  22DA               	addwfc	fsr2h,f,c
  5194  0021F0  C009  FFDE         	movff	??_SerIni,postinc2
  5195  0021F4  C00A  FFDD         	movff	??_SerIni+1,postdec2
  5196                           
  5197                           ;RS232.c: 56:     }
  5198  0021F8  4A0F               	infsnz	SerIni@i^0,f,c
  5199  0021FA  2A10               	incf	(SerIni@i+1)^0,f,c
  5200  0021FC  BE10               	btfsc	(SerIni@i+1)^0,7,c
  5201  0021FE  EF0A  F011         	goto	u6461
  5202  002202  5010               	movf	(SerIni@i+1)^0,w,c
  5203  002204  E109               	bnz	u6460
  5204  002206  0E04               	movlw	4
  5205  002208  5C0F               	subwf	SerIni@i^0,w,c
  5206  00220A  A0D8               	btfss	status,0,c
  5207  00220C  EF0A  F011         	goto	u6461
  5208  002210  EF0C  F011         	goto	u6460
  5209  002214                     u6461:
  5210  002214  EF97  F010         	goto	l6395
  5211  002218                     u6460:
  5212  002218                     
  5213                           ;RS232.c: 58:     SerialNum[j] = '\0';
  5214  002218  5011               	movf	SerIni@j^0,w,c
  5215  00221A  2407               	addwf	SerIni@SerialNum^0,w,c
  5216  00221C  6ED9               	movwf	fsr2l,c
  5217  00221E  5012               	movf	(SerIni@j+1)^0,w,c
  5218  002220  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5219  002222  6EDA               	movwf	fsr2h,c
  5220  002224  0E00               	movlw	0
  5221  002226  6EDF               	movwf	indf2,c
  5222  002228  0012               	return		;funcret
  5223  00222A                     __end_of_SerIni:
  5224                           	opt callstack 0
  5225                           
  5226 ;; *************** function _DATAEE_ReadByte *****************
  5227 ;; Defined at:
  5228 ;;		line 187 in file "mcc_generated_files/memory.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  bAdd            2    4[COMRAM] unsigned short 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      unsigned char 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;Total ram usage:        2 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    4
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_SerIni
  5253 ;;		_SaveCardDat
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text15
  5258  003A88                     __ptext15:
  5259                           	opt callstack 0
  5260  003A88                     _DATAEE_ReadByte:
  5261                           	opt callstack 24
  5262  003A88                     
  5263                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  5264  003A88  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  5265  003A8A  0B03               	andlw	3
  5266  003A8C  6E7F               	movwf	127,c	;volatile
  5267  003A8E                     
  5268                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  5269  003A8E  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  5270  003A92                     
  5271                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  5272  003A92  0E3F               	movlw	-193
  5273  003A94  1681               	andwf	129,f,c	;volsfr
  5274  003A96                     
  5275                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  5276  003A96  8081               	bsf	129,0,c	;volsfr
  5277  003A98                     
  5278                           ;mcc_generated_files/memory.c: 193:     __nop();
  5279  003A98  F000               	nop	
  5280  003A9A                     
  5281                           ;mcc_generated_files/memory.c: 194:     __nop();
  5282  003A9A  F000               	nop	
  5283  003A9C                     
  5284                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  5285  003A9C  5080               	movf	128,w,c	;volatile
  5286  003A9E  0012               	return		;funcret
  5287  003AA0                     __end_of_DATAEE_ReadByte:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _Initalisation *****************
  5291 ;; Defined at:
  5292 ;;		line 11 in file "RS232.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		None
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    4
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_InitialiseString
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text16
  5321  003BC4                     __ptext16:
  5322                           	opt callstack 0
  5323  003BC4                     _Initalisation:
  5324                           	opt callstack 24
  5325  003BC4  0012               	return		;funcret
  5326  003BC6                     __end_of_Initalisation:
  5327                           	opt callstack 0
  5328                           
  5329 ;; *************** function _SYSTEM_Initialize *****************
  5330 ;; Defined at:
  5331 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;Total ram usage:        0 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    6
  5352 ;; This function calls:
  5353 ;;		_EUSART1_Initialize
  5354 ;;		_EUSART2_Initialize
  5355 ;;		_INTERRUPT_Initialize
  5356 ;;		_OSCILLATOR_Initialize
  5357 ;;		_PIN_MANAGER_Initialize
  5358 ;;		_PMD_Initialize
  5359 ;; This function is called by:
  5360 ;;		_main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text17
  5365  003A56                     __ptext17:
  5366                           	opt callstack 0
  5367  003A56                     _SYSTEM_Initialize:
  5368                           	opt callstack 24
  5369  003A56                     
  5370                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5371  003A56  ECDF  F01D         	call	_INTERRUPT_Initialize	;wreg free
  5372  003A5A                     
  5373                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5374  003A5A  EC1D  F01D         	call	_PMD_Initialize	;wreg free
  5375  003A5E                     
  5376                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5377  003A5E  ECF9  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  5378  003A62                     
  5379                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5380  003A62  EC50  F01D         	call	_OSCILLATOR_Initialize	;wreg free
  5381  003A66                     
  5382                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5383  003A66  EC04  F018         	call	_EUSART1_Initialize	;wreg free
  5384  003A6A                     
  5385                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  5386  003A6A  ECC5  F017         	call	_EUSART2_Initialize	;wreg free
  5387  003A6E  0012               	return		;funcret
  5388  003A70                     __end_of_SYSTEM_Initialize:
  5389                           	opt callstack 0
  5390                           
  5391 ;; *************** function _PMD_Initialize *****************
  5392 ;; Defined at:
  5393 ;;		line 74 in file "mcc_generated_files/mcc.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5411 ;;Total ram usage:        0 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    4
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_SYSTEM_Initialize
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text18
  5422  003A3A                     __ptext18:
  5423                           	opt callstack 0
  5424  003A3A                     _PMD_Initialize:
  5425                           	opt callstack 25
  5426  003A3A                     
  5427                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  5428  003A3A  0E00               	movlw	0
  5429  003A3C  010E               	movlb	14	; () banked
  5430  003A3E  6FE1               	movwf	225,b	;volatile
  5431                           
  5432                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  5433  003A40  0E00               	movlw	0
  5434  003A42  6FE2               	movwf	226,b	;volatile
  5435                           
  5436                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  5437  003A44  0E00               	movlw	0
  5438  003A46  6FE3               	movwf	227,b	;volatile
  5439                           
  5440                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  5441  003A48  0E00               	movlw	0
  5442  003A4A  6FE4               	movwf	228,b	;volatile
  5443                           
  5444                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  5445  003A4C  0E00               	movlw	0
  5446  003A4E  6FE5               	movwf	229,b	;volatile
  5447                           
  5448                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  5449  003A50  0E00               	movlw	0
  5450  003A52  6FE6               	movwf	230,b	;volatile
  5451  003A54                     
  5452                           ; BSR set to: 14
  5453  003A54  0012               	return		;funcret
  5454  003A56                     __end_of_PMD_Initialize:
  5455                           	opt callstack 0
  5456                           
  5457 ;; *************** function _PIN_MANAGER_Initialize *****************
  5458 ;; Defined at:
  5459 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      void 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5477 ;;Total ram usage:        0 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    4
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_SYSTEM_Initialize
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text19
  5488  002DF2                     __ptext19:
  5489                           	opt callstack 0
  5490  002DF2                     _PIN_MANAGER_Initialize:
  5491                           	opt callstack 25
  5492  002DF2                     
  5493                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5494  002DF2  0E00               	movlw	0
  5495  002DF4  6E87               	movwf	135,c	;volatile
  5496                           
  5497                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5498  002DF6  0E00               	movlw	0
  5499  002DF8  6E86               	movwf	134,c	;volatile
  5500                           
  5501                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5502  002DFA  0E00               	movlw	0
  5503  002DFC  6E83               	movwf	131,c	;volatile
  5504                           
  5505                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5506  002DFE  0E00               	movlw	0
  5507  002E00  6E84               	movwf	132,c	;volatile
  5508                           
  5509                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5510  002E02  0E00               	movlw	0
  5511  002E04  6E85               	movwf	133,c	;volatile
  5512                           
  5513                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5514  002E06  0E07               	movlw	7
  5515  002E08  6E8C               	movwf	140,c	;volatile
  5516                           
  5517                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  5518  002E0A  0E07               	movlw	7
  5519  002E0C  6E88               	movwf	136,c	;volatile
  5520                           
  5521                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5522  002E0E  0EBF               	movlw	191
  5523  002E10  6E89               	movwf	137,c	;volatile
  5524                           
  5525                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5526  002E12  0EBF               	movlw	191
  5527  002E14  6E8A               	movwf	138,c	;volatile
  5528                           
  5529                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  5530  002E16  0EFE               	movlw	254
  5531  002E18  6E8B               	movwf	139,c	;volatile
  5532  002E1A                     
  5533                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5534  002E1A  010F               	movlb	15	; () banked
  5535  002E1C  6926               	setf	38,b	;volatile
  5536                           
  5537                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  5538  002E1E  0E3B               	movlw	59
  5539  002E20  6F21               	movwf	33,b	;volatile
  5540                           
  5541                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  5542  002E22  0E37               	movlw	55
  5543  002E24  6F19               	movwf	25,b	;volatile
  5544                           
  5545                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5546  002E26  0E07               	movlw	7
  5547  002E28  6F2E               	movwf	46,b	;volatile
  5548  002E2A                     
  5549                           ; BSR set to: 15
  5550                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5551  002E2A  6911               	setf	17,b	;volatile
  5552                           
  5553                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5554  002E2C  0E00               	movlw	0
  5555  002E2E  6F25               	movwf	37,b	;volatile
  5556                           
  5557                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5558  002E30  0E00               	movlw	0
  5559  002E32  6F2D               	movwf	45,b	;volatile
  5560                           
  5561                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5562  002E34  0E00               	movlw	0
  5563  002E36  6F18               	movwf	24,b	;volatile
  5564                           
  5565                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5566  002E38  0E00               	movlw	0
  5567  002E3A  6F10               	movwf	16,b	;volatile
  5568                           
  5569                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5570  002E3C  0E00               	movlw	0
  5571  002E3E  6F20               	movwf	32,b	;volatile
  5572                           
  5573                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  5574  002E40  0E00               	movlw	0
  5575  002E42  6F2C               	movwf	44,b	;volatile
  5576                           
  5577                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  5578  002E44  0E00               	movlw	0
  5579  002E46  6F0F               	movwf	15,b	;volatile
  5580                           
  5581                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  5582  002E48  0E00               	movlw	0
  5583  002E4A  6F17               	movwf	23,b	;volatile
  5584                           
  5585                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  5586  002E4C  0E00               	movlw	0
  5587  002E4E  6F1F               	movwf	31,b	;volatile
  5588                           
  5589                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  5590  002E50  0E00               	movlw	0
  5591  002E52  6F24               	movwf	36,b	;volatile
  5592  002E54                     
  5593                           ; BSR set to: 15
  5594                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  5595  002E54  690E               	setf	14,b	;volatile
  5596  002E56                     
  5597                           ; BSR set to: 15
  5598                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  5599  002E56  6916               	setf	22,b	;volatile
  5600  002E58                     
  5601                           ; BSR set to: 15
  5602                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  5603  002E58  691E               	setf	30,b	;volatile
  5604  002E5A                     
  5605                           ; BSR set to: 15
  5606                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  5607  002E5A  6923               	setf	35,b	;volatile
  5608                           
  5609                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  5610  002E5C  0E07               	movlw	7
  5611  002E5E  6F2B               	movwf	43,b	;volatile
  5612  002E60                     
  5613                           ; BSR set to: 15
  5614                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  5615  002E60  690D               	setf	13,b	;volatile
  5616  002E62                     
  5617                           ; BSR set to: 15
  5618                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  5619  002E62  6915               	setf	21,b	;volatile
  5620  002E64                     
  5621                           ; BSR set to: 15
  5622                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  5623  002E64  691D               	setf	29,b	;volatile
  5624  002E66                     
  5625                           ; BSR set to: 15
  5626                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  5627  002E66  6922               	setf	34,b	;volatile
  5628                           
  5629                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  5630  002E68  0E0F               	movlw	15
  5631  002E6A  6F2A               	movwf	42,b	;volatile
  5632                           
  5633                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  5634  002E6C  0E17               	movlw	23
  5635  002E6E  010E               	movlb	14	; () banked
  5636  002E70  6FB5               	movwf	181,b	;volatile
  5637                           
  5638                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  5639  002E72  0E0B               	movlw	11
  5640  002E74  6FF5               	movwf	245,b	;volatile
  5641                           
  5642                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  5643  002E76  0E09               	movlw	9
  5644  002E78  6FFD               	movwf	253,b	;volatile
  5645                           
  5646                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  5647  002E7A  0E0F               	movlw	15
  5648  002E7C  6F8D               	movwf	141,b	;volatile
  5649  002E7E                     
  5650                           ; BSR set to: 14
  5651  002E7E  0012               	return		;funcret
  5652  002E80                     __end_of_PIN_MANAGER_Initialize:
  5653                           	opt callstack 0
  5654                           
  5655 ;; *************** function _OSCILLATOR_Initialize *****************
  5656 ;; Defined at:
  5657 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    4
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_SYSTEM_Initialize
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text20
  5686  003AA0                     __ptext20:
  5687                           	opt callstack 0
  5688  003AA0                     _OSCILLATOR_Initialize:
  5689                           	opt callstack 25
  5690  003AA0                     
  5691                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  5692  003AA0  0E60               	movlw	96
  5693  003AA2  010E               	movlb	14	; () banked
  5694  003AA4  6FD8               	movwf	216,b	;volatile
  5695                           
  5696                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  5697  003AA6  0E00               	movlw	0
  5698  003AA8  6FDA               	movwf	218,b	;volatile
  5699                           
  5700                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5701  003AAA  0E00               	movlw	0
  5702  003AAC  6FDC               	movwf	220,b	;volatile
  5703                           
  5704                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  5705  003AAE  0E06               	movlw	6
  5706  003AB0  6FDE               	movwf	222,b	;volatile
  5707                           
  5708                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5709  003AB2  0E00               	movlw	0
  5710  003AB4  6FDD               	movwf	221,b	;volatile
  5711  003AB6                     
  5712                           ; BSR set to: 14
  5713  003AB6  0012               	return		;funcret
  5714  003AB8                     __end_of_OSCILLATOR_Initialize:
  5715                           	opt callstack 0
  5716                           
  5717 ;; *************** function _INTERRUPT_Initialize *****************
  5718 ;; Defined at:
  5719 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		None
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    4
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_SYSTEM_Initialize
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text21
  5748  003BBE                     __ptext21:
  5749                           	opt callstack 0
  5750  003BBE                     _INTERRUPT_Initialize:
  5751                           	opt callstack 25
  5752  003BBE                     
  5753                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  5754  003BBE  9AF2               	bcf	242,5,c	;volatile
  5755  003BC0  0012               	return		;funcret
  5756  003BC2                     __end_of_INTERRUPT_Initialize:
  5757                           	opt callstack 0
  5758                           
  5759 ;; *************** function _EUSART2_Initialize *****************
  5760 ;; Defined at:
  5761 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    5
  5782 ;; This function calls:
  5783 ;;		_EUSART2_SetErrorHandler
  5784 ;;		_EUSART2_SetFramingErrorHandler
  5785 ;;		_EUSART2_SetOverrunErrorHandler
  5786 ;;		_EUSART2_SetRxInterruptHandler
  5787 ;;		_EUSART2_SetTxInterruptHandler
  5788 ;; This function is called by:
  5789 ;;		_SYSTEM_Initialize
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text22
  5794  002F8A                     __ptext22:
  5795                           	opt callstack 0
  5796  002F8A                     _EUSART2_Initialize:
  5797                           	opt callstack 24
  5798  002F8A                     
  5799                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  5800  002F8A  010E               	movlb	14	; () banked
  5801  002F8C  9FC5               	bcf	197,7,b	;volatile
  5802  002F8E                     
  5803                           ; BSR set to: 14
  5804                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  5805  002F8E  0E2E               	movlw	low _EUSART2_Receive_ISR
  5806  002F90  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  5807  002F92  0E2B               	movlw	high _EUSART2_Receive_ISR
  5808  002F94  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  5809  002F96  EC9A  F01D         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  5810  002F9A                     
  5811                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  5812  002F9A  010E               	movlb	14	; () banked
  5813  002F9C  9DC5               	bcf	197,6,b	;volatile
  5814                           
  5815                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  5816  002F9E  0E42               	movlw	low _EUSART2_Transmit_ISR
  5817  002FA0  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  5818  002FA2  0E36               	movlw	high _EUSART2_Transmit_ISR
  5819  002FA4  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  5820  002FA6  EC95  F01D         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  5821  002FAA                     
  5822                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  5823  002FAA  0E08               	movlw	8
  5824  002FAC  010E               	movlb	14	; () banked
  5825  002FAE  6F9F               	movwf	159,b	;volatile
  5826  002FB0                     
  5827                           ; BSR set to: 14
  5828                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  5829  002FB0  0E90               	movlw	144
  5830  002FB2  6F9D               	movwf	157,b	;volatile
  5831  002FB4                     
  5832                           ; BSR set to: 14
  5833                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  5834  002FB4  0E24               	movlw	36
  5835  002FB6  6F9E               	movwf	158,b	;volatile
  5836  002FB8                     
  5837                           ; BSR set to: 14
  5838                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0xA0;
  5839  002FB8  0EA0               	movlw	160
  5840  002FBA  6F9B               	movwf	155,b	;volatile
  5841  002FBC                     
  5842                           ; BSR set to: 14
  5843                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x01;
  5844  002FBC  0E01               	movlw	1
  5845  002FBE  6F9C               	movwf	156,b	;volatile
  5846  002FC0                     
  5847                           ; BSR set to: 14
  5848                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  5849  002FC0  0EC6               	movlw	low _EUSART2_DefaultFramingErrorHandler
  5850  002FC2  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  5851  002FC4  0E3B               	movlw	high _EUSART2_DefaultFramingErrorHandler
  5852  002FC6  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  5853  002FC8  ECA4  F01D         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  5854  002FCC                     
  5855                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  5856  002FCC  0E98               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  5857  002FCE  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  5858  002FD0  0E3B               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  5859  002FD2  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5860  002FD4  EC9F  F01D         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  5861  002FD8                     
  5862                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  5863  002FD8  0EAC               	movlw	low _EUSART2_DefaultErrorHandler
  5864  002FDA  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  5865  002FDC  0E3B               	movlw	high _EUSART2_DefaultErrorHandler
  5866  002FDE  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  5867  002FE0  ECA9  F01D         	call	_EUSART2_SetErrorHandler	;wreg free
  5868                           
  5869                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  5870  002FE4  0E00               	movlw	0
  5871  002FE6  0100               	movlb	0	; () banked
  5872  002FE8  6FB6               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5873                           
  5874                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  5875  002FEA  0E00               	movlw	0
  5876  002FEC  6FBA               	movwf	_eusart2TxHead& (0+255),b	;volatile
  5877                           
  5878                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  5879  002FEE  0E00               	movlw	0
  5880  002FF0  6FB9               	movwf	_eusart2TxTail& (0+255),b	;volatile
  5881                           
  5882                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  5883  002FF2  0E20               	movlw	32
  5884  002FF4  6FBC               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  5885                           
  5886                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  5887  002FF6  0E00               	movlw	0
  5888  002FF8  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  5889                           
  5890                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  5891  002FFA  0E00               	movlw	0
  5892  002FFC  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5893                           
  5894                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  5895  002FFE  0E00               	movlw	0
  5896  003000  6FB7               	movwf	_eusart2RxCount& (0+255),b	;volatile
  5897  003002                     
  5898                           ; BSR set to: 0
  5899                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  5900  003002  010E               	movlb	14	; () banked
  5901  003004  8FC5               	bsf	197,7,b	;volatile
  5902  003006                     
  5903                           ; BSR set to: 14
  5904  003006  0012               	return		;funcret
  5905  003008                     __end_of_EUSART2_Initialize:
  5906                           	opt callstack 0
  5907                           
  5908 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  5909 ;; Defined at:
  5910 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5913 ;;		 -> EUSART2_Transmit_ISR(1), 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;Total ram usage:        2 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    4
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_EUSART2_Initialize
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text23
  5940  003B2A                     __ptext23:
  5941                           	opt callstack 0
  5942  003B2A                     _EUSART2_SetTxInterruptHandler:
  5943                           	opt callstack 24
  5944  003B2A                     
  5945                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5946  003B2A  C005  F1F1         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  5947  003B2E  C006  F1F2         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  5948  003B32  0012               	return		;funcret
  5949  003B34                     __end_of_EUSART2_SetTxInterruptHandler:
  5950                           	opt callstack 0
  5951                           
  5952 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  5953 ;; Defined at:
  5954 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5957 ;;		 -> EUSART2_Receive_ISR(1), 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5973 ;;Total ram usage:        2 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    4
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_EUSART2_Initialize
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text24
  5984  003B34                     __ptext24:
  5985                           	opt callstack 0
  5986  003B34                     _EUSART2_SetRxInterruptHandler:
  5987                           	opt callstack 24
  5988  003B34                     
  5989                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5990  003B34  C005  F1EF         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  5991  003B38  C006  F1F0         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  5992  003B3C  0012               	return		;funcret
  5993  003B3E                     __end_of_EUSART2_SetRxInterruptHandler:
  5994                           	opt callstack 0
  5995                           
  5996 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  5997 ;; Defined at:
  5998 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6001 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      void 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6017 ;;Total ram usage:        2 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    4
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_EUSART2_Initialize
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text25
  6028  003B3E                     __ptext25:
  6029                           	opt callstack 0
  6030  003B3E                     _EUSART2_SetOverrunErrorHandler:
  6031                           	opt callstack 24
  6032  003B3E                     
  6033                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  6034  003B3E  C005  F1E7         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  6035  003B42  C006  F1E8         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  6036  003B46  0012               	return		;funcret
  6037  003B48                     __end_of_EUSART2_SetOverrunErrorHandler:
  6038                           	opt callstack 0
  6039                           
  6040 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6041 ;; Defined at:
  6042 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6045 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;Total ram usage:        2 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    4
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_EUSART2_Initialize
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text26
  6072  003B48                     __ptext26:
  6073                           	opt callstack 0
  6074  003B48                     _EUSART2_SetFramingErrorHandler:
  6075                           	opt callstack 24
  6076  003B48                     
  6077                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  6078  003B48  C005  F1E9         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  6079  003B4C  C006  F1EA         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  6080  003B50  0012               	return		;funcret
  6081  003B52                     __end_of_EUSART2_SetFramingErrorHandler:
  6082                           	opt callstack 0
  6083                           
  6084 ;; *************** function _EUSART2_SetErrorHandler *****************
  6085 ;; Defined at:
  6086 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6089 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;Total ram usage:        2 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    4
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_EUSART2_Initialize
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text27
  6116  003B52                     __ptext27:
  6117                           	opt callstack 0
  6118  003B52                     _EUSART2_SetErrorHandler:
  6119                           	opt callstack 24
  6120  003B52                     
  6121                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  6122  003B52  C005  F1E5         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  6123  003B56  C006  F1E6         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  6124  003B5A  0012               	return		;funcret
  6125  003B5C                     __end_of_EUSART2_SetErrorHandler:
  6126                           	opt callstack 0
  6127                           
  6128 ;; *************** function _EUSART1_Initialize *****************
  6129 ;; Defined at:
  6130 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    5
  6151 ;; This function calls:
  6152 ;;		_EUSART1_SetErrorHandler
  6153 ;;		_EUSART1_SetFramingErrorHandler
  6154 ;;		_EUSART1_SetOverrunErrorHandler
  6155 ;;		_EUSART1_SetRxInterruptHandler
  6156 ;;		_EUSART1_SetTxInterruptHandler
  6157 ;; This function is called by:
  6158 ;;		_SYSTEM_Initialize
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text28
  6163  003008                     __ptext28:
  6164                           	opt callstack 0
  6165  003008                     _EUSART1_Initialize:
  6166                           	opt callstack 24
  6167  003008                     
  6168                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  6169  003008  010E               	movlb	14	; () banked
  6170  00300A  9BC5               	bcf	197,5,b	;volatile
  6171  00300C                     
  6172                           ; BSR set to: 14
  6173                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6174  00300C  0EEE               	movlw	low _EUSART1_Receive_ISR
  6175  00300E  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  6176  003010  0E2B               	movlw	high _EUSART1_Receive_ISR
  6177  003012  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  6178  003014  ECB3  F01D         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  6179  003018                     
  6180                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  6181  003018  010E               	movlb	14	; () banked
  6182  00301A  99C5               	bcf	197,4,b	;volatile
  6183                           
  6184                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  6185  00301C  0E12               	movlw	low _EUSART1_Transmit_ISR
  6186  00301E  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  6187  003020  0E37               	movlw	high _EUSART1_Transmit_ISR
  6188  003022  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  6189  003024  ECAE  F01D         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  6190  003028                     
  6191                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  6192  003028  0E08               	movlw	8
  6193  00302A  6E9F               	movwf	159,c	;volatile
  6194  00302C                     
  6195                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  6196  00302C  0E90               	movlw	144
  6197  00302E  6E9D               	movwf	157,c	;volatile
  6198  003030                     
  6199                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  6200  003030  0E24               	movlw	36
  6201  003032  6E9E               	movwf	158,c	;volatile
  6202  003034                     
  6203                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  6204  003034  0E40               	movlw	64
  6205  003036  6E9B               	movwf	155,c	;volatile
  6206  003038                     
  6207                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  6208  003038  0E03               	movlw	3
  6209  00303A  6E9C               	movwf	156,c	;volatile
  6210  00303C                     
  6211                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6212  00303C  0EC8               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6213  00303E  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6214  003040  0E3B               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6215  003042  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6216  003044  ECBD  F01D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6217  003048                     
  6218                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6219  003048  0EB2               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6220  00304A  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6221  00304C  0E3B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6222  00304E  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6223  003050  ECB8  F01D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6224  003054                     
  6225                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6226  003054  0EB8               	movlw	low _EUSART1_DefaultErrorHandler
  6227  003056  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6228  003058  0E3B               	movlw	high _EUSART1_DefaultErrorHandler
  6229  00305A  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6230  00305C  ECC2  F01D         	call	_EUSART1_SetErrorHandler	;wreg free
  6231                           
  6232                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  6233  003060  0E00               	movlw	0
  6234  003062  0100               	movlb	0	; () banked
  6235  003064  6FB1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6236                           
  6237                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  6238  003066  0E00               	movlw	0
  6239  003068  6FB5               	movwf	_eusart1TxHead& (0+255),b	;volatile
  6240                           
  6241                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  6242  00306A  0E00               	movlw	0
  6243  00306C  6FB4               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6244                           
  6245                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  6246  00306E  0E40               	movlw	64
  6247  003070  6FBB               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6248                           
  6249                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  6250  003072  0E00               	movlw	0
  6251  003074  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  6252                           
  6253                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  6254  003076  0E00               	movlw	0
  6255  003078  6FB3               	movwf	_eusart1RxTail& (0+255),b	;volatile
  6256                           
  6257                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  6258  00307A  0E00               	movlw	0
  6259  00307C  6FB2               	movwf	_eusart1RxCount& (0+255),b	;volatile
  6260  00307E                     
  6261                           ; BSR set to: 0
  6262                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  6263  00307E  010E               	movlb	14	; () banked
  6264  003080  8BC5               	bsf	197,5,b	;volatile
  6265  003082                     
  6266                           ; BSR set to: 14
  6267  003082  0012               	return		;funcret
  6268  003084                     __end_of_EUSART1_Initialize:
  6269                           	opt callstack 0
  6270                           
  6271 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6272 ;; Defined at:
  6273 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6276 ;;		 -> EUSART1_Transmit_ISR(1), 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;Total ram usage:        2 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    4
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_EUSART1_Initialize
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text29
  6303  003B5C                     __ptext29:
  6304                           	opt callstack 0
  6305  003B5C                     _EUSART1_SetTxInterruptHandler:
  6306                           	opt callstack 24
  6307  003B5C                     
  6308                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6309  003B5C  C005  F1ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6310  003B60  C006  F1EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6311  003B64  0012               	return		;funcret
  6312  003B66                     __end_of_EUSART1_SetTxInterruptHandler:
  6313                           	opt callstack 0
  6314                           
  6315 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6316 ;; Defined at:
  6317 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6320 ;;		 -> EUSART1_Receive_ISR(1), 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;Total ram usage:        2 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    4
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_EUSART1_Initialize
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text30
  6347  003B66                     __ptext30:
  6348                           	opt callstack 0
  6349  003B66                     _EUSART1_SetRxInterruptHandler:
  6350                           	opt callstack 24
  6351  003B66                     
  6352                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6353  003B66  C005  F1EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6354  003B6A  C006  F1EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6355  003B6E  0012               	return		;funcret
  6356  003B70                     __end_of_EUSART1_SetRxInterruptHandler:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6360 ;; Defined at:
  6361 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6364 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6380 ;;Total ram usage:        2 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    4
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_EUSART1_Initialize
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text31
  6391  003B70                     __ptext31:
  6392                           	opt callstack 0
  6393  003B70                     _EUSART1_SetOverrunErrorHandler:
  6394                           	opt callstack 24
  6395  003B70                     
  6396                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  6397  003B70  C005  F1E1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6398  003B74  C006  F1E2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6399  003B78  0012               	return		;funcret
  6400  003B7A                     __end_of_EUSART1_SetOverrunErrorHandler:
  6401                           	opt callstack 0
  6402                           
  6403 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6404 ;; Defined at:
  6405 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6408 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;Total ram usage:        2 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    4
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_EUSART1_Initialize
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text32
  6435  003B7A                     __ptext32:
  6436                           	opt callstack 0
  6437  003B7A                     _EUSART1_SetFramingErrorHandler:
  6438                           	opt callstack 24
  6439  003B7A                     
  6440                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  6441  003B7A  C005  F1E3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6442  003B7E  C006  F1E4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6443  003B82  0012               	return		;funcret
  6444  003B84                     __end_of_EUSART1_SetFramingErrorHandler:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function _EUSART1_SetErrorHandler *****************
  6448 ;; Defined at:
  6449 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6452 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6468 ;;Total ram usage:        2 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    4
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_EUSART1_Initialize
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text33
  6479  003B84                     __ptext33:
  6480                           	opt callstack 0
  6481  003B84                     _EUSART1_SetErrorHandler:
  6482                           	opt callstack 24
  6483  003B84                     
  6484                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  6485  003B84  C005  F1DF         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6486  003B88  C006  F1E0         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6487  003B8C  0012               	return		;funcret
  6488  003B8E                     __end_of_EUSART1_SetErrorHandler:
  6489                           	opt callstack 0
  6490                           
  6491 ;; *************** function _PrintModbus *****************
  6492 ;; Defined at:
  6493 ;;		line 101 in file "Modbus.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  i               2   43[BANK0 ] int 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;Total ram usage:        3 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:   13
  6514 ;; This function calls:
  6515 ;;		_printf
  6516 ;; This function is called by:
  6517 ;;		_main
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text34
  6522  002E80                     __ptext34:
  6523                           	opt callstack 0
  6524  002E80                     _PrintModbus:
  6525                           	opt callstack 17
  6526  002E80                     
  6527                           ;Modbus.c: 106:     printf("Modbus Data Capture Complete:\r\n");
  6528  002E80  0E88               	movlw	low STR_8
  6529  002E82  0100               	movlb	0	; () banked
  6530  002E84  6F7D               	movwf	printf@fmt& (0+255),b
  6531  002E86  0EFD               	movlw	high STR_8
  6532  002E88  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6533  002E8A  ECE3  F01C         	call	_printf	;wreg free
  6534  002E8E                     
  6535                           ;Modbus.c: 108:     if(Debug ==1){
  6536  002E8E  0100               	movlb	0	; () banked
  6537  002E90  05B0               	decf	_Debug& (0+255),w,b
  6538  002E92  A4D8               	btfss	status,2,c
  6539  002E94  EF4E  F017         	goto	u6831
  6540  002E98  EF50  F017         	goto	u6830
  6541  002E9C                     u6831:
  6542  002E9C  EF83  F017         	goto	l719
  6543  002EA0                     u6830:
  6544  002EA0                     
  6545                           ; BSR set to: 0
  6546                           ;Modbus.c: 109:         for(i=0; i< ModDataCnt ; i++ ){
  6547  002EA0  0E00               	movlw	0
  6548  002EA2  6F8C               	movwf	(PrintModbus@i+1)& (0+255),b
  6549  002EA4  0E00               	movlw	0
  6550  002EA6  6F8B               	movwf	PrintModbus@i& (0+255),b
  6551  002EA8  EF6E  F017         	goto	l6725
  6552  002EAC                     l6721:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;Modbus.c: 110:             printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  6556  002EAC  0E03               	movlw	low STR_9
  6557  002EAE  6F7D               	movwf	printf@fmt& (0+255),b
  6558  002EB0  0EFF               	movlw	high STR_9
  6559  002EB2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6560  002EB4  C08B  F07F         	movff	PrintModbus@i,?_printf+2
  6561  002EB8  C08C  F080         	movff	PrintModbus@i+1,?_printf+3
  6562  002EBC  0E00               	movlw	low _ModbusData
  6563  002EBE  258B               	addwf	PrintModbus@i& (0+255),w,b
  6564  002EC0  6ED9               	movwf	fsr2l,c
  6565  002EC2  0E02               	movlw	high _ModbusData
  6566  002EC4  218C               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  6567  002EC6  6EDA               	movwf	fsr2h,c
  6568  002EC8  50DF               	movf	indf2,w,c
  6569  002ECA  6E55               	movwf	??_PrintModbus^0,c
  6570  002ECC  5055               	movf	??_PrintModbus^0,w,c
  6571  002ECE  6F81               	movwf	(?_printf+4)& (0+255),b
  6572  002ED0  6B82               	clrf	(?_printf+5)& (0+255),b
  6573  002ED2  ECE3  F01C         	call	_printf	;wreg free
  6574  002ED6                     
  6575                           ;Modbus.c: 111:         }
  6576  002ED6  0100               	movlb	0	; () banked
  6577  002ED8  4B8B               	infsnz	PrintModbus@i& (0+255),f,b
  6578  002EDA  2B8C               	incf	(PrintModbus@i+1)& (0+255),f,b
  6579  002EDC                     l6725:
  6580                           
  6581                           ; BSR set to: 0
  6582  002EDC  51AD               	movf	_ModDataCnt& (0+255),w,b
  6583  002EDE  5D8B               	subwf	PrintModbus@i& (0+255),w,b
  6584  002EE0  518C               	movf	(PrintModbus@i+1)& (0+255),w,b
  6585  002EE2  0A80               	xorlw	128
  6586  002EE4  6E55               	movwf	??_PrintModbus^0,c
  6587  002EE6  51AE               	movf	(_ModDataCnt+1)& (0+255),w,b
  6588  002EE8  0A80               	xorlw	128
  6589  002EEA  5855               	subwfb	??_PrintModbus^0,w,c
  6590  002EEC  A0D8               	btfss	status,0,c
  6591  002EEE  EF7B  F017         	goto	u6841
  6592  002EF2  EF7D  F017         	goto	u6840
  6593  002EF6                     u6841:
  6594  002EF6  EF56  F017         	goto	l6721
  6595  002EFA                     u6840:
  6596  002EFA                     
  6597                           ; BSR set to: 0
  6598                           ;Modbus.c: 112:         printf("\r\n\n");
  6599  002EFA  0E41               	movlw	low (STR_19+17)
  6600  002EFC  6F7D               	movwf	printf@fmt& (0+255),b
  6601  002EFE  0EFF               	movlw	high (STR_19+17)
  6602  002F00  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6603  002F02  ECE3  F01C         	call	_printf	;wreg free
  6604  002F06                     l719:
  6605  002F06  0012               	return		;funcret
  6606  002F08                     __end_of_PrintModbus:
  6607                           	opt callstack 0
  6608                           
  6609 ;; *************** function _ModbusRx *****************
  6610 ;; Defined at:
  6611 ;;		line 391 in file "Modbus.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      _Bool 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6629 ;;Total ram usage:        1 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:   14
  6632 ;; This function calls:
  6633 ;;		_AddRxBuffToModBus
  6634 ;;		_ClearRxBuff
  6635 ;;		_EUSART1_Read
  6636 ;;		_EUSART1_is_rx_ready
  6637 ;;		_RXMode
  6638 ;;		_checkCRC
  6639 ;;		_printf
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text35
  6646  001BAA                     __ptext35:
  6647                           	opt callstack 0
  6648  001BAA                     _ModbusRx:
  6649                           	opt callstack 16
  6650  001BAA                     
  6651                           ;Modbus.c: 392:     RXMode();
  6652  001BAA  ECD0  F01D         	call	_RXMode	;wreg free
  6653  001BAE                     
  6654                           ;Modbus.c: 393:     if(EUSART1_is_rx_ready()){
  6655  001BAE  EC5C  F01D         	call	_EUSART1_is_rx_ready	;wreg free
  6656  001BB2  0900               	iorlw	0
  6657  001BB4  B4D8               	btfsc	status,2,c
  6658  001BB6  EFDF  F00D         	goto	u6751
  6659  001BBA  EFE1  F00D         	goto	u6750
  6660  001BBE                     u6751:
  6661  001BBE  EF93  F00E         	goto	l6709
  6662  001BC2                     u6750:
  6663  001BC2                     
  6664                           ;Modbus.c: 394:         printf("Something in ESUART1 \r\n");
  6665  001BC2  0ED3               	movlw	low STR_16
  6666  001BC4  0100               	movlb	0	; () banked
  6667  001BC6  6F7D               	movwf	printf@fmt& (0+255),b
  6668  001BC8  0EFE               	movlw	high STR_16
  6669  001BCA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6670  001BCC  ECE3  F01C         	call	_printf	;wreg free
  6671  001BD0                     l6667:
  6672                           
  6673                           ;Modbus.c: 396:             if(EUSART1_is_rx_ready()){
  6674  001BD0  EC5C  F01D         	call	_EUSART1_is_rx_ready	;wreg free
  6675  001BD4  0900               	iorlw	0
  6676  001BD6  B4D8               	btfsc	status,2,c
  6677  001BD8  EFF0  F00D         	goto	u6761
  6678  001BDC  EFF2  F00D         	goto	u6760
  6679  001BE0                     u6761:
  6680  001BE0  EF21  F00E         	goto	l6681
  6681  001BE4                     u6760:
  6682  001BE4  EF14  F00E         	goto	l6677
  6683  001BE8                     l6671:
  6684                           
  6685                           ;Modbus.c: 400:                     rxData[ByteNum] = EUSART1_Read();
  6686  001BE8  EC33  F01A         	call	_EUSART1_Read	;wreg free
  6687  001BEC  6E56               	movwf	??_ModbusRx^0,c
  6688  001BEE  0E00               	movlw	low _rxData
  6689  001BF0  0100               	movlb	0	; () banked
  6690  001BF2  25AB               	addwf	_ByteNum& (0+255),w,b
  6691  001BF4  6ED9               	movwf	fsr2l,c
  6692  001BF6  0E05               	movlw	high _rxData
  6693  001BF8  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6694  001BFA  6EDA               	movwf	fsr2h,c
  6695  001BFC  C056  FFDF         	movff	??_ModbusRx,indf2
  6696  001C00                     
  6697                           ; BSR set to: 0
  6698                           ;Modbus.c: 401:                     printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  6699  001C00  0EC2               	movlw	low STR_17
  6700  001C02  6F7D               	movwf	printf@fmt& (0+255),b
  6701  001C04  0EFF               	movlw	high STR_17
  6702  001C06  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6703  001C08  0E00               	movlw	low _rxData
  6704  001C0A  25AB               	addwf	_ByteNum& (0+255),w,b
  6705  001C0C  6ED9               	movwf	fsr2l,c
  6706  001C0E  0E05               	movlw	high _rxData
  6707  001C10  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6708  001C12  6EDA               	movwf	fsr2h,c
  6709  001C14  50DF               	movf	indf2,w,c
  6710  001C16  6E56               	movwf	??_ModbusRx^0,c
  6711  001C18  5056               	movf	??_ModbusRx^0,w,c
  6712  001C1A  6F7F               	movwf	(?_printf+2)& (0+255),b
  6713  001C1C  6B80               	clrf	(?_printf+3)& (0+255),b
  6714  001C1E  ECE3  F01C         	call	_printf	;wreg free
  6715  001C22                     
  6716                           ;Modbus.c: 402:                     ByteNum++;
  6717  001C22  0100               	movlb	0	; () banked
  6718  001C24  4BAB               	infsnz	_ByteNum& (0+255),f,b
  6719  001C26  2BAC               	incf	(_ByteNum+1)& (0+255),f,b
  6720  001C28                     l6677:
  6721                           
  6722                           ;Modbus.c: 398:                 while(EUSART1_is_rx_ready()){
  6723  001C28  EC5C  F01D         	call	_EUSART1_is_rx_ready	;wreg free
  6724  001C2C  0900               	iorlw	0
  6725  001C2E  A4D8               	btfss	status,2,c
  6726  001C30  EF1C  F00E         	goto	u6771
  6727  001C34  EF1E  F00E         	goto	u6770
  6728  001C38                     u6771:
  6729  001C38  EFF4  F00D         	goto	l6671
  6730  001C3C                     u6770:
  6731  001C3C                     
  6732                           ;Modbus.c: 405:                 RXStat = 1;
  6733  001C3C  0E01               	movlw	1
  6734  001C3E  0100               	movlb	0	; () banked
  6735  001C40  6FAF               	movwf	_RXStat& (0+255),b
  6736  001C42                     l6681:
  6737                           
  6738                           ;Modbus.c: 408:             if(RXStat ==1){
  6739  001C42  0100               	movlb	0	; () banked
  6740  001C44  05AF               	decf	_RXStat& (0+255),w,b
  6741  001C46  A4D8               	btfss	status,2,c
  6742  001C48  EF28  F00E         	goto	u6781
  6743  001C4C  EF2A  F00E         	goto	u6780
  6744  001C50                     u6781:
  6745  001C50  EF46  F00E         	goto	l6693
  6746  001C54                     u6780:
  6747  001C54                     
  6748                           ; BSR set to: 0
  6749                           ;Modbus.c: 411:                 AddRxBuffToModBus();
  6750  001C54  EC65  F014         	call	_AddRxBuffToModBus	;wreg free
  6751  001C58                     
  6752                           ;Modbus.c: 412:                 ClearRxBuff();
  6753  001C58  ECFC  F01A         	call	_ClearRxBuff	;wreg free
  6754  001C5C                     
  6755                           ;Modbus.c: 413:                 RXStat = 0;
  6756  001C5C  0E00               	movlw	0
  6757  001C5E  0100               	movlb	0	; () banked
  6758  001C60  6FAF               	movwf	_RXStat& (0+255),b
  6759  001C62                     
  6760                           ; BSR set to: 0
  6761                           ;Modbus.c: 414:                 ByteNum = 0;
  6762  001C62  0E00               	movlw	0
  6763  001C64  6FAC               	movwf	(_ByteNum+1)& (0+255),b
  6764  001C66  0E00               	movlw	0
  6765  001C68  6FAB               	movwf	_ByteNum& (0+255),b
  6766  001C6A                     
  6767                           ; BSR set to: 0
  6768  001C6A  B883               	btfsc	131,4,c	;volatile
  6769  001C6C  EF3A  F00E         	goto	u6791
  6770  001C70  EF3D  F00E         	goto	u6790
  6771  001C74                     u6791:
  6772  001C74  0E01               	movlw	1
  6773  001C76  EF3E  F00E         	goto	u6796
  6774  001C7A                     u6790:
  6775  001C7A  0E00               	movlw	0
  6776  001C7C                     u6796:
  6777  001C7C  0AFF               	xorlw	255
  6778  001C7E  6E56               	movwf	??_ModbusRx^0,c
  6779  001C80  3A56               	swapf	??_ModbusRx^0,f,c
  6780  001C82  5083               	movf	131,w,c	;volatile
  6781  001C84  1856               	xorwf	??_ModbusRx^0,w,c
  6782  001C86  0BEF               	andlw	-17
  6783  001C88  1856               	xorwf	??_ModbusRx^0,w,c
  6784  001C8A  6E83               	movwf	131,c	;volatile
  6785  001C8C                     l6693:
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;Modbus.c: 418:             printf("ModDatCnt: %i ExpetedBytes %i \r\n", ModDataCnt,Expe
      +                          ctedBytes);
  6789  001C8C  0E67               	movlw	low STR_18
  6790  001C8E  6F7D               	movwf	printf@fmt& (0+255),b
  6791  001C90  0EFD               	movlw	high STR_18
  6792  001C92  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6793  001C94  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  6794  001C98  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  6795  001C9C  C13D  F081         	movff	_ExpectedBytes,?_printf+4
  6796  001CA0  C13E  F082         	movff	_ExpectedBytes+1,?_printf+5
  6797  001CA4  ECE3  F01C         	call	_printf	;wreg free
  6798  001CA8                     
  6799                           ;Modbus.c: 420:         }while(ModDataCnt != ExpectedBytes);
  6800  001CA8  0101               	movlb	1	; () banked
  6801  001CAA  513D               	movf	_ExpectedBytes& (0+255),w,b
  6802  001CAC  0100               	movlb	0	; () banked
  6803  001CAE  19AD               	xorwf	_ModDataCnt& (0+255),w,b
  6804  001CB0  E109               	bnz	u6801
  6805  001CB2  0101               	movlb	1	; () banked
  6806  001CB4  513E               	movf	(_ExpectedBytes+1)& (0+255),w,b
  6807  001CB6  0100               	movlb	0	; () banked
  6808  001CB8  19AE               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  6809  001CBA  A4D8               	btfss	status,2,c
  6810  001CBC  EF62  F00E         	goto	u6801
  6811  001CC0  EF64  F00E         	goto	u6800
  6812  001CC4                     u6801:
  6813  001CC4  EFE8  F00D         	goto	l6667
  6814  001CC8                     u6800:
  6815  001CC8                     
  6816                           ; BSR set to: 0
  6817  001CC8  BA83               	btfsc	131,5,c	;volatile
  6818  001CCA  EF69  F00E         	goto	u6811
  6819  001CCE  EF6C  F00E         	goto	u6810
  6820  001CD2                     u6811:
  6821  001CD2  0E01               	movlw	1
  6822  001CD4  EF6D  F00E         	goto	u6816
  6823  001CD8                     u6810:
  6824  001CD8  0E00               	movlw	0
  6825  001CDA                     u6816:
  6826  001CDA  0AFF               	xorlw	255
  6827  001CDC  6E56               	movwf	??_ModbusRx^0,c
  6828  001CDE  3A56               	swapf	??_ModbusRx^0,f,c
  6829  001CE0  4656               	rlncf	??_ModbusRx^0,f,c
  6830  001CE2  5083               	movf	131,w,c	;volatile
  6831  001CE4  1856               	xorwf	??_ModbusRx^0,w,c
  6832  001CE6  0BDF               	andlw	-33
  6833  001CE8  1856               	xorwf	??_ModbusRx^0,w,c
  6834  001CEA  6E83               	movwf	131,c	;volatile
  6835  001CEC                     
  6836                           ; BSR set to: 0
  6837                           ;Modbus.c: 425:         if(checkCRC() == 1)
  6838  001CEC  EC47  F00F         	call	_checkCRC	;wreg free
  6839  001CF0  06E8               	decf	wreg,f,c
  6840  001CF2  A4D8               	btfss	status,2,c
  6841  001CF4  EF7E  F00E         	goto	u6821
  6842  001CF8  EF80  F00E         	goto	u6820
  6843  001CFC                     u6821:
  6844  001CFC  EF89  F00E         	goto	l6703
  6845  001D00                     u6820:
  6846  001D00                     
  6847                           ;Modbus.c: 426:         {;Modbus.c: 427:             printf("CRC Checked Out. \r\n\n");
  6848  001D00  0E30               	movlw	low STR_19
  6849  001D02  0100               	movlb	0	; () banked
  6850  001D04  6F7D               	movwf	printf@fmt& (0+255),b
  6851  001D06  0EFF               	movlw	high STR_19
  6852  001D08  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6853  001D0A  ECE3  F01C         	call	_printf	;wreg free
  6854                           
  6855                           ;Modbus.c: 428:         }else{
  6856  001D0E  EF90  F00E         	goto	l6705
  6857  001D12                     l6703:
  6858                           
  6859                           ;Modbus.c: 429:             printf("CRC did NOT check out. \r\n\n");
  6860  001D12  0E6E               	movlw	low STR_20
  6861  001D14  0100               	movlb	0	; () banked
  6862  001D16  6F7D               	movwf	printf@fmt& (0+255),b
  6863  001D18  0EFE               	movlw	high STR_20
  6864  001D1A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6865  001D1C  ECE3  F01C         	call	_printf	;wreg free
  6866  001D20                     l6705:
  6867                           
  6868                           ;Modbus.c: 433:         return 1;
  6869  001D20  0E01               	movlw	1
  6870  001D22  EF94  F00E         	goto	l816
  6871  001D26                     l6709:
  6872                           
  6873                           ;Modbus.c: 435:     return 0;
  6874  001D26  0E00               	movlw	0
  6875  001D28                     l816:
  6876  001D28  0012               	return		;funcret
  6877  001D2A                     __end_of_ModbusRx:
  6878                           	opt callstack 0
  6879                           
  6880 ;; *************** function _checkCRC *****************
  6881 ;; Defined at:
  6882 ;;		line 118 in file "Modbus.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  i               2   56[BANK0 ] int 
  6887 ;;  crc             2   54[BANK0 ] unsigned int 
  6888 ;;  j               2   52[BANK0 ] int 
  6889 ;;  crcLow          2   50[BANK0 ] unsigned int 
  6890 ;;  crcHigh         2   48[BANK0 ] unsigned int 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      _Bool 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6901 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6902 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6903 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6904 ;;Total ram usage:       15 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:   13
  6907 ;; This function calls:
  6908 ;;		_printf
  6909 ;; This function is called by:
  6910 ;;		_ModbusRx
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text36
  6915  001E8E                     __ptext36:
  6916                           	opt callstack 0
  6917  001E8E                     _checkCRC:
  6918                           	opt callstack 16
  6919  001E8E                     
  6920                           ;Modbus.c: 119:   unsigned int crc = 0xFFFF;
  6921  001E8E  0100               	movlb	0	; () banked
  6922  001E90  6996               	setf	checkCRC@crc& (0+255),b
  6923  001E92  6997               	setf	(checkCRC@crc+1)& (0+255),b
  6924  001E94                     
  6925                           ; BSR set to: 0
  6926                           ;Modbus.c: 121:   unsigned int crcLow = 0;
  6927  001E94  0E00               	movlw	0
  6928  001E96  6F93               	movwf	(checkCRC@crcLow+1)& (0+255),b
  6929  001E98  0E00               	movlw	0
  6930  001E9A  6F92               	movwf	checkCRC@crcLow& (0+255),b
  6931                           
  6932                           ;Modbus.c: 122:   int i,j = 0;
  6933  001E9C  0E00               	movlw	0
  6934  001E9E  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  6935  001EA0  0E00               	movlw	0
  6936  001EA2  6F94               	movwf	checkCRC@j& (0+255),b
  6937                           
  6938                           ;Modbus.c: 124:     for(i=0;i<ModDataCnt-2;i++){
  6939  001EA4  0E00               	movlw	0
  6940  001EA6  6F99               	movwf	(checkCRC@i+1)& (0+255),b
  6941  001EA8  0E00               	movlw	0
  6942  001EAA  6F98               	movwf	checkCRC@i& (0+255),b
  6943  001EAC  EF87  F00F         	goto	l6525
  6944  001EB0                     l6507:
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;Modbus.c: 125:       crc ^= ModbusData[i];
  6948  001EB0  0E00               	movlw	low _ModbusData
  6949  001EB2  2598               	addwf	checkCRC@i& (0+255),w,b
  6950  001EB4  6ED9               	movwf	fsr2l,c
  6951  001EB6  0E02               	movlw	high _ModbusData
  6952  001EB8  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  6953  001EBA  6EDA               	movwf	fsr2h,c
  6954  001EBC  50DF               	movf	indf2,w,c
  6955  001EBE  6F8B               	movwf	??_checkCRC& (0+255),b
  6956  001EC0  518B               	movf	??_checkCRC& (0+255),w,b
  6957  001EC2  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  6958  001EC4                     
  6959                           ; BSR set to: 0
  6960                           ;Modbus.c: 126:       for(j=8; j!=0; j--){
  6961  001EC4  0E00               	movlw	0
  6962  001EC6  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  6963  001EC8  0E08               	movlw	8
  6964  001ECA  6F94               	movwf	checkCRC@j& (0+255),b
  6965  001ECC                     l724:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;Modbus.c: 127:         if((crc & 0x0001) != 0){
  6969  001ECC  A196               	btfss	checkCRC@crc& (0+255),0,b
  6970  001ECE  EF6B  F00F         	goto	u6541
  6971  001ED2  EF6D  F00F         	goto	u6540
  6972  001ED6                     u6541:
  6973  001ED6  EF76  F00F         	goto	l6519
  6974  001EDA                     u6540:
  6975  001EDA                     
  6976                           ; BSR set to: 0
  6977                           ;Modbus.c: 128:           crc >>= 1;
  6978  001EDA  90D8               	bcf	status,0,c
  6979  001EDC  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  6980  001EDE  3396               	rrcf	checkCRC@crc& (0+255),f,b
  6981  001EE0                     
  6982                           ; BSR set to: 0
  6983                           ;Modbus.c: 129:           crc ^= 0xA001;
  6984  001EE0  0E01               	movlw	1
  6985  001EE2  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  6986  001EE4  0EA0               	movlw	160
  6987  001EE6  1B97               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  6988                           
  6989                           ;Modbus.c: 130:         }
  6990  001EE8  EF79  F00F         	goto	l727
  6991  001EEC                     l6519:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;Modbus.c: 132:           crc >>= 1;
  6995  001EEC  90D8               	bcf	status,0,c
  6996  001EEE  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  6997  001EF0  3396               	rrcf	checkCRC@crc& (0+255),f,b
  6998  001EF2                     l727:
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;Modbus.c: 134:       }
  7002  001EF2  0794               	decf	checkCRC@j& (0+255),f,b
  7003  001EF4  A0D8               	btfss	status,0,c
  7004  001EF6  0795               	decf	(checkCRC@j+1)& (0+255),f,b
  7005  001EF8                     
  7006                           ; BSR set to: 0
  7007  001EF8  5194               	movf	checkCRC@j& (0+255),w,b
  7008  001EFA  1195               	iorwf	(checkCRC@j+1)& (0+255),w,b
  7009  001EFC  A4D8               	btfss	status,2,c
  7010  001EFE  EF83  F00F         	goto	u6551
  7011  001F02  EF85  F00F         	goto	u6550
  7012  001F06                     u6551:
  7013  001F06  EF66  F00F         	goto	l724
  7014  001F0A                     u6550:
  7015  001F0A                     
  7016                           ; BSR set to: 0
  7017                           ;Modbus.c: 135:     }
  7018  001F0A  4B98               	infsnz	checkCRC@i& (0+255),f,b
  7019  001F0C  2B99               	incf	(checkCRC@i+1)& (0+255),f,b
  7020  001F0E                     l6525:
  7021                           
  7022                           ; BSR set to: 0
  7023  001F0E  0EFE               	movlw	254
  7024  001F10  6F8B               	movwf	??_checkCRC& (0+255),b
  7025  001F12  0EFF               	movlw	255
  7026  001F14  6F8C               	movwf	(??_checkCRC+1)& (0+255),b
  7027  001F16  C0AD  F08D         	movff	_ModDataCnt,??_checkCRC+2
  7028  001F1A  C0AE  F08E         	movff	_ModDataCnt+1,??_checkCRC+3
  7029  001F1E  518B               	movf	??_checkCRC& (0+255),w,b
  7030  001F20  278D               	addwf	(??_checkCRC+2)& (0+255),f,b
  7031  001F22  518C               	movf	(??_checkCRC+1)& (0+255),w,b
  7032  001F24  238E               	addwfc	(??_checkCRC+3)& (0+255),f,b
  7033  001F26  518D               	movf	(??_checkCRC+2)& (0+255),w,b
  7034  001F28  5D98               	subwf	checkCRC@i& (0+255),w,b
  7035  001F2A  5199               	movf	(checkCRC@i+1)& (0+255),w,b
  7036  001F2C  0A80               	xorlw	128
  7037  001F2E  6F8F               	movwf	(??_checkCRC+4)& (0+255),b
  7038  001F30  518E               	movf	(??_checkCRC+3)& (0+255),w,b
  7039  001F32  0A80               	xorlw	128
  7040  001F34  598F               	subwfb	(??_checkCRC+4)& (0+255),w,b
  7041  001F36  A0D8               	btfss	status,0,c
  7042  001F38  EFA0  F00F         	goto	u6561
  7043  001F3C  EFA2  F00F         	goto	u6560
  7044  001F40                     u6561:
  7045  001F40  EF58  F00F         	goto	l6507
  7046  001F44                     u6560:
  7047  001F44                     
  7048                           ; BSR set to: 0
  7049                           ;Modbus.c: 137:   crcHigh = (crc & 0x00FF);
  7050  001F44  5196               	movf	checkCRC@crc& (0+255),w,b
  7051  001F46  6F90               	movwf	checkCRC@crcHigh& (0+255),b
  7052  001F48  6B91               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  7053                           
  7054                           ;Modbus.c: 138:   crcLow = (crc & 0xFF00) >>8;
  7055  001F4A  C096  F08B         	movff	checkCRC@crc,??_checkCRC
  7056  001F4E  C097  F08C         	movff	checkCRC@crc+1,??_checkCRC+1
  7057  001F52  C08C  F08B         	movff	??_checkCRC+1,??_checkCRC
  7058  001F56  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7059  001F58  518B               	movf	??_checkCRC& (0+255),w,b
  7060  001F5A  6F92               	movwf	checkCRC@crcLow& (0+255),b
  7061  001F5C  6B93               	clrf	(checkCRC@crcLow+1)& (0+255),b
  7062  001F5E                     
  7063                           ; BSR set to: 0
  7064                           ;Modbus.c: 140:   if(Debug == 1){
  7065  001F5E  05B0               	decf	_Debug& (0+255),w,b
  7066  001F60  A4D8               	btfss	status,2,c
  7067  001F62  EFB5  F00F         	goto	u6571
  7068  001F66  EFB7  F00F         	goto	u6570
  7069  001F6A                     u6571:
  7070  001F6A  EFC5  F00F         	goto	l6533
  7071  001F6E                     u6570:
  7072  001F6E                     
  7073                           ; BSR set to: 0
  7074                           ;Modbus.c: 141:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  7075  001F6E  0E00               	movlw	low STR_11
  7076  001F70  6F7D               	movwf	printf@fmt& (0+255),b
  7077  001F72  0EFD               	movlw	high STR_11
  7078  001F74  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7079  001F76  C090  F07F         	movff	checkCRC@crcHigh,?_printf+2
  7080  001F7A  C091  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  7081  001F7E  C092  F081         	movff	checkCRC@crcLow,?_printf+4
  7082  001F82  C093  F082         	movff	checkCRC@crcLow+1,?_printf+5
  7083  001F86  ECE3  F01C         	call	_printf	;wreg free
  7084  001F8A                     l6533:
  7085                           
  7086                           ;Modbus.c: 145:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  7087  001F8A  0E00               	movlw	low _ModbusData
  7088  001F8C  0100               	movlb	0	; () banked
  7089  001F8E  2598               	addwf	checkCRC@i& (0+255),w,b
  7090  001F90  6ED9               	movwf	fsr2l,c
  7091  001F92  0E02               	movlw	high _ModbusData
  7092  001F94  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7093  001F96  6EDA               	movwf	fsr2h,c
  7094  001F98  50DF               	movf	indf2,w,c
  7095  001F9A  6F8B               	movwf	??_checkCRC& (0+255),b
  7096  001F9C  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7097  001F9E  5190               	movf	checkCRC@crcHigh& (0+255),w,b
  7098  001FA0  198B               	xorwf	??_checkCRC& (0+255),w,b
  7099  001FA2  E107               	bnz	u6581
  7100  001FA4  5191               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  7101  001FA6  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  7102  001FA8  A4D8               	btfss	status,2,c
  7103  001FAA  EFD9  F00F         	goto	u6581
  7104  001FAE  EFDB  F00F         	goto	u6580
  7105  001FB2                     u6581:
  7106  001FB2  EFF3  F00F         	goto	l6543
  7107  001FB6                     u6580:
  7108  001FB6                     
  7109                           ; BSR set to: 0
  7110  001FB6  0E01               	movlw	low (_ModbusData+1)
  7111  001FB8  2598               	addwf	checkCRC@i& (0+255),w,b
  7112  001FBA  6ED9               	movwf	fsr2l,c
  7113  001FBC  0E02               	movlw	high (_ModbusData+1)
  7114  001FBE  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7115  001FC0  6EDA               	movwf	fsr2h,c
  7116  001FC2  50DF               	movf	indf2,w,c
  7117  001FC4  6F8B               	movwf	??_checkCRC& (0+255),b
  7118  001FC6  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7119  001FC8  5192               	movf	checkCRC@crcLow& (0+255),w,b
  7120  001FCA  198B               	xorwf	??_checkCRC& (0+255),w,b
  7121  001FCC  E107               	bnz	u6591
  7122  001FCE  5193               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  7123  001FD0  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  7124  001FD2  A4D8               	btfss	status,2,c
  7125  001FD4  EFEE  F00F         	goto	u6591
  7126  001FD8  EFF0  F00F         	goto	u6590
  7127  001FDC                     u6591:
  7128  001FDC  EFF3  F00F         	goto	l6543
  7129  001FE0                     u6590:
  7130  001FE0                     
  7131                           ; BSR set to: 0
  7132                           ;Modbus.c: 146:   {;Modbus.c: 147:     return 1;
  7133  001FE0  0E01               	movlw	1
  7134  001FE2  EFF4  F00F         	goto	l731
  7135  001FE6                     l6543:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;Modbus.c: 150:     return 0;
  7139  001FE6  0E00               	movlw	0
  7140  001FE8                     l731:
  7141                           
  7142                           ; BSR set to: 0
  7143  001FE8  0012               	return		;funcret
  7144  001FEA                     __end_of_checkCRC:
  7145                           	opt callstack 0
  7146                           
  7147 ;; *************** function _RXMode *****************
  7148 ;; Defined at:
  7149 ;;		line 53 in file "Modbus.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		None
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    4
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;;		_ModbusRx
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text37
  7179  003BA0                     __ptext37:
  7180                           	opt callstack 0
  7181  003BA0                     _RXMode:
  7182                           	opt callstack 26
  7183  003BA0  9086               	bcf	134,0,c	;volatile
  7184  003BA2  9683               	bcf	131,3,c	;volatile
  7185  003BA4  0012               	return		;funcret
  7186  003BA6                     __end_of_RXMode:
  7187                           	opt callstack 0
  7188                           
  7189 ;; *************** function _EUSART1_is_rx_ready *****************
  7190 ;; Defined at:
  7191 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;		None
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;		None
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  1    wreg      _Bool 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7209 ;;Total ram usage:        0 bytes
  7210 ;; Hardware stack levels used:    1
  7211 ;; Hardware stack levels required when called:    4
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_ModbusRx
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           	psect	text38
  7220  003AB8                     __ptext38:
  7221                           	opt callstack 0
  7222  003AB8                     _EUSART1_is_rx_ready:
  7223                           	opt callstack 25
  7224  003AB8                     
  7225                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  7226  003AB8  0100               	movlb	0	; () banked
  7227  003ABA  51B2               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7228  003ABC  A4D8               	btfss	status,2,c
  7229  003ABE  EF63  F01D         	goto	u4101
  7230  003AC2  EF66  F01D         	goto	u4100
  7231  003AC6                     u4101:
  7232  003AC6  0E01               	movlw	1
  7233  003AC8  EF67  F01D         	goto	u4110
  7234  003ACC                     u4100:
  7235  003ACC  0E00               	movlw	0
  7236  003ACE                     u4110:
  7237  003ACE                     
  7238                           ; BSR set to: 0
  7239  003ACE  0012               	return		;funcret
  7240  003AD0                     __end_of_EUSART1_is_rx_ready:
  7241                           	opt callstack 0
  7242                           
  7243 ;; *************** function _EUSART1_Read *****************
  7244 ;; Defined at:
  7245 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  readValue       1    4[COMRAM] unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      unsigned char 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7263 ;;Total ram usage:        1 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    4
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		_ModbusRx
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text39
  7274  003466                     __ptext39:
  7275                           	opt callstack 0
  7276  003466                     _EUSART1_Read:
  7277                           	opt callstack 25
  7278  003466                     l4789:
  7279                           
  7280                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  7281  003466  0100               	movlb	0	; () banked
  7282  003468  51B2               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7283  00346A  B4D8               	btfsc	status,2,c
  7284  00346C  EF3A  F01A         	goto	u4121
  7285  003470  EF3C  F01A         	goto	u4120
  7286  003474                     u4121:
  7287  003474  EF33  F01A         	goto	l4789
  7288  003478                     u4120:
  7289  003478                     
  7290                           ; BSR set to: 0
  7291                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7292  003478  0E00               	movlw	low _eusart1RxStatusBuffer
  7293  00347A  25B3               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7294  00347C  6ED9               	movwf	fsr2l,c
  7295  00347E  6ADA               	clrf	fsr2h,c
  7296  003480  0E03               	movlw	high _eusart1RxStatusBuffer
  7297  003482  22DA               	addwfc	fsr2h,f,c
  7298  003484  50DF               	movf	indf2,w,c
  7299  003486  6FB1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7300                           
  7301                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7302  003488  0E00               	movlw	low _eusart1RxBuffer
  7303  00348A  25B3               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7304  00348C  6ED9               	movwf	fsr2l,c
  7305  00348E  6ADA               	clrf	fsr2h,c
  7306  003490  0E04               	movlw	high _eusart1RxBuffer
  7307  003492  22DA               	addwfc	fsr2h,f,c
  7308  003494  50DF               	movf	indf2,w,c
  7309  003496  6E05               	movwf	EUSART1_Read@readValue^0,c
  7310  003498                     
  7311                           ; BSR set to: 0
  7312  003498  2BB3               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  7313  00349A                     
  7314                           ; BSR set to: 0
  7315                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7316  00349A  0E63               	movlw	99
  7317  00349C  65B3               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  7318  00349E  EF53  F01A         	goto	u4131
  7319  0034A2  EF55  F01A         	goto	u4130
  7320  0034A6                     u4131:
  7321  0034A6  EF57  F01A         	goto	l4799
  7322  0034AA                     u4130:
  7323  0034AA                     
  7324                           ; BSR set to: 0
  7325                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  7326  0034AA  0E00               	movlw	0
  7327  0034AC  6FB3               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7328  0034AE                     l4799:
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  7332  0034AE  010E               	movlb	14	; () banked
  7333  0034B0  9BC5               	bcf	197,5,b	;volatile
  7334  0034B2                     
  7335                           ; BSR set to: 14
  7336                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  7337  0034B2  0100               	movlb	0	; () banked
  7338  0034B4  07B2               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7339  0034B6                     
  7340                           ; BSR set to: 0
  7341                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  7342  0034B6  010E               	movlb	14	; () banked
  7343  0034B8  8BC5               	bsf	197,5,b	;volatile
  7344  0034BA                     
  7345                           ; BSR set to: 14
  7346                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  7347  0034BA  5005               	movf	EUSART1_Read@readValue^0,w,c
  7348  0034BC                     
  7349                           ; BSR set to: 14
  7350  0034BC  0012               	return		;funcret
  7351  0034BE                     __end_of_EUSART1_Read:
  7352                           	opt callstack 0
  7353                           
  7354 ;; *************** function _ClearRxBuff *****************
  7355 ;; Defined at:
  7356 ;;		line 69 in file "Modbus.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  i               2    5[COMRAM] int 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7374 ;;Total ram usage:        3 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:    4
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_main
  7381 ;;		_ModbusRx
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text40
  7386  0035F8                     __ptext40:
  7387                           	opt callstack 0
  7388  0035F8                     _ClearRxBuff:
  7389                           	opt callstack 25
  7390  0035F8                     
  7391                           ;Modbus.c: 71:     int i = 0;
  7392  0035F8  0E00               	movlw	0
  7393  0035FA  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7394  0035FC  0E00               	movlw	0
  7395  0035FE  6E06               	movwf	ClearRxBuff@i^0,c
  7396                           
  7397                           ;Modbus.c: 72:     for(i=0; i<ByteNum; i++ ){
  7398  003600  0E00               	movlw	0
  7399  003602  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7400  003604  0E00               	movlw	0
  7401  003606  6E06               	movwf	ClearRxBuff@i^0,c
  7402  003608  EF10  F01B         	goto	l4843
  7403  00360C                     l4839:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;Modbus.c: 73:         rxData[i] = 0xFF;
  7407  00360C  0E00               	movlw	low _rxData
  7408  00360E  2406               	addwf	ClearRxBuff@i^0,w,c
  7409  003610  6ED9               	movwf	fsr2l,c
  7410  003612  0E05               	movlw	high _rxData
  7411  003614  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  7412  003616  6EDA               	movwf	fsr2h,c
  7413  003618  0EFF               	movlw	255
  7414  00361A  6EDF               	movwf	indf2,c
  7415  00361C                     
  7416                           ; BSR set to: 0
  7417                           ;Modbus.c: 74:     }
  7418  00361C  4A06               	infsnz	ClearRxBuff@i^0,f,c
  7419  00361E  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  7420  003620                     l4843:
  7421  003620  0100               	movlb	0	; () banked
  7422  003622  51AB               	movf	_ByteNum& (0+255),w,b
  7423  003624  5C06               	subwf	ClearRxBuff@i^0,w,c
  7424  003626  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  7425  003628  0A80               	xorlw	128
  7426  00362A  6E05               	movwf	??_ClearRxBuff^0,c
  7427  00362C  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7428  00362E  0A80               	xorlw	128
  7429  003630  5805               	subwfb	??_ClearRxBuff^0,w,c
  7430  003632  A0D8               	btfss	status,0,c
  7431  003634  EF1E  F01B         	goto	u4151
  7432  003638  EF20  F01B         	goto	u4150
  7433  00363C                     u4151:
  7434  00363C  EF06  F01B         	goto	l4839
  7435  003640                     u4150:
  7436  003640                     
  7437                           ; BSR set to: 0
  7438  003640  0012               	return		;funcret
  7439  003642                     __end_of_ClearRxBuff:
  7440                           	opt callstack 0
  7441                           
  7442 ;; *************** function _AddRxBuffToModBus *****************
  7443 ;; Defined at:
  7444 ;;		line 78 in file "Modbus.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  i               2   43[BANK0 ] int 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7461 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7462 ;;Total ram usage:        3 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:   13
  7465 ;; This function calls:
  7466 ;;		_printf
  7467 ;; This function is called by:
  7468 ;;		_ModbusRx
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text41
  7473  0028CA                     __ptext41:
  7474                           	opt callstack 0
  7475  0028CA                     _AddRxBuffToModBus:
  7476                           	opt callstack 16
  7477  0028CA                     
  7478                           ;Modbus.c: 79:     int i = 0;
  7479  0028CA  0E00               	movlw	0
  7480  0028CC  0100               	movlb	0	; () banked
  7481  0028CE  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7482  0028D0  0E00               	movlw	0
  7483  0028D2  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7484                           
  7485                           ;Modbus.c: 81:     for(i=0l; i<ByteNum; i++){
  7486  0028D4  0E00               	movlw	0
  7487  0028D6  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7488  0028D8  0E00               	movlw	0
  7489  0028DA  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7490  0028DC  EF82  F014         	goto	l6487
  7491  0028E0                     l6481:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;Modbus.c: 82:         ModbusData[ModDataCnt] = rxData[i];
  7495  0028E0  0E00               	movlw	low _rxData
  7496  0028E2  258B               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  7497  0028E4  6ED9               	movwf	fsr2l,c
  7498  0028E6  0E05               	movlw	high _rxData
  7499  0028E8  218C               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7500  0028EA  6EDA               	movwf	fsr2h,c
  7501  0028EC  0E00               	movlw	low _ModbusData
  7502  0028EE  25AD               	addwf	_ModDataCnt& (0+255),w,b
  7503  0028F0  6EE1               	movwf	fsr1l,c
  7504  0028F2  0E02               	movlw	high _ModbusData
  7505  0028F4  21AE               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  7506  0028F6  6EE2               	movwf	fsr1h,c
  7507  0028F8  CFDF FFE7          	movff	indf2,indf1
  7508  0028FC                     
  7509                           ; BSR set to: 0
  7510                           ;Modbus.c: 83:         ModDataCnt++;
  7511  0028FC  4BAD               	infsnz	_ModDataCnt& (0+255),f,b
  7512  0028FE  2BAE               	incf	(_ModDataCnt+1)& (0+255),f,b
  7513  002900                     
  7514                           ; BSR set to: 0
  7515                           ;Modbus.c: 84:     }
  7516  002900  4B8B               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  7517  002902  2B8C               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  7518  002904                     l6487:
  7519                           
  7520                           ; BSR set to: 0
  7521  002904  51AB               	movf	_ByteNum& (0+255),w,b
  7522  002906  5D8B               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  7523  002908  518C               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7524  00290A  0A80               	xorlw	128
  7525  00290C  6E55               	movwf	??_AddRxBuffToModBus^0,c
  7526  00290E  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7527  002910  0A80               	xorlw	128
  7528  002912  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  7529  002914  A0D8               	btfss	status,0,c
  7530  002916  EF8F  F014         	goto	u6501
  7531  00291A  EF91  F014         	goto	u6500
  7532  00291E                     u6501:
  7533  00291E  EF70  F014         	goto	l6481
  7534  002922                     u6500:
  7535  002922                     
  7536                           ; BSR set to: 0
  7537                           ;Modbus.c: 86:     if(Debug ==1){
  7538  002922  05B0               	decf	_Debug& (0+255),w,b
  7539  002924  A4D8               	btfss	status,2,c
  7540  002926  EF97  F014         	goto	u6511
  7541  00292A  EF99  F014         	goto	u6510
  7542  00292E                     u6511:
  7543  00292E  EFAA  F014         	goto	l6493
  7544  002932                     u6510:
  7545  002932                     
  7546                           ; BSR set to: 0
  7547                           ;Modbus.c: 87:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
  7548  002932  0E48               	movlw	low STR_6
  7549  002934  6F7D               	movwf	printf@fmt& (0+255),b
  7550  002936  0EFC               	movlw	high STR_6
  7551  002938  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7552  00293A  ECE3  F01C         	call	_printf	;wreg free
  7553                           
  7554                           ;Modbus.c: 88:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  7555  00293E  0EFF               	movlw	low STR_7
  7556  002940  0100               	movlb	0	; () banked
  7557  002942  6F7D               	movwf	printf@fmt& (0+255),b
  7558  002944  0EFD               	movlw	high STR_7
  7559  002946  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7560  002948  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  7561  00294C  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  7562  002950  ECE3  F01C         	call	_printf	;wreg free
  7563  002954                     l6493:
  7564                           
  7565                           ;Modbus.c: 91:     if(ModbusData[1] == 0x0F){
  7566  002954  0E0F               	movlw	15
  7567  002956  0102               	movlb	2	; () banked
  7568  002958  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7569  00295A  A4D8               	btfss	status,2,c
  7570  00295C  EFB2  F014         	goto	u6521
  7571  002960  EFB4  F014         	goto	u6520
  7572  002964                     u6521:
  7573  002964  EFBD  F014         	goto	l6497
  7574  002968                     u6520:
  7575  002968                     l6495:
  7576                           
  7577                           ; BSR set to: 2
  7578                           ;Modbus.c: 92:         ExpectedBytes = ModbusData[6] + 9;
  7579  002968  0E09               	movlw	9
  7580  00296A  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  7581  00296C  0101               	movlb	1	; () banked
  7582  00296E  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7583  002970  6B3E               	clrf	(_ExpectedBytes+1)& (0+255),b
  7584  002972  0E00               	movlw	0
  7585  002974  233E               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  7586                           
  7587                           ;Modbus.c: 93:     }else if (ModbusData[1] == 0x10){
  7588  002976  EFCD  F014         	goto	l712
  7589  00297A                     l6497:
  7590                           
  7591                           ; BSR set to: 2
  7592  00297A  0E10               	movlw	16
  7593  00297C  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7594  00297E  A4D8               	btfss	status,2,c
  7595  002980  EFC4  F014         	goto	u6531
  7596  002984  EFC6  F014         	goto	u6530
  7597  002988                     u6531:
  7598  002988  EFC8  F014         	goto	l6501
  7599  00298C                     u6530:
  7600  00298C  EFB4  F014         	goto	l6495
  7601  002990                     l6501:
  7602                           
  7603                           ; BSR set to: 2
  7604                           ;Modbus.c: 96:         ExpectedBytes = 8;
  7605  002990  0E00               	movlw	0
  7606  002992  0101               	movlb	1	; () banked
  7607  002994  6F3E               	movwf	(_ExpectedBytes+1)& (0+255),b
  7608  002996  0E08               	movlw	8
  7609  002998  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7610  00299A                     l712:
  7611                           
  7612                           ; BSR set to: 1
  7613  00299A  0012               	return		;funcret
  7614  00299C                     __end_of_AddRxBuffToModBus:
  7615                           	opt callstack 0
  7616                           
  7617 ;; *************** function _ModbusFC10 *****************
  7618 ;; Defined at:
  7619 ;;		line 239 in file "Modbus.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;		None
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  j               2   53[BANK0 ] int 
  7624 ;;  i               2   51[BANK0 ] int 
  7625 ;;  TempData        2   49[BANK0 ] unsigned int 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7636 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7639 ;;Total ram usage:       10 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:   14
  7642 ;; This function calls:
  7643 ;;		_PrintMB400
  7644 ;;		_PrintModRespon
  7645 ;;		_UART1_Write_string
  7646 ;;		_generateCRC
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text42
  7653  000EFE                     __ptext42:
  7654                           	opt callstack 0
  7655  000EFE                     _ModbusFC10:
  7656                           	opt callstack 16
  7657  000EFE                     
  7658                           ;Modbus.c: 244:     int j = 0;
  7659  000EFE  0E00               	movlw	0
  7660  000F00  0100               	movlb	0	; () banked
  7661  000F02  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  7662  000F04  0E00               	movlw	0
  7663  000F06  6F95               	movwf	ModbusFC10@j& (0+255),b
  7664                           
  7665                           ;Modbus.c: 245:     unsigned int TempData = 0x0000;
  7666  000F08  0E00               	movlw	0
  7667  000F0A  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  7668  000F0C  0E00               	movlw	0
  7669  000F0E  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  7670                           
  7671                           ;Modbus.c: 247:     MBResCnt = 0;
  7672  000F10  0E00               	movlw	0
  7673  000F12  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7674  000F14  0E00               	movlw	0
  7675  000F16  6FA9               	movwf	_MBResCnt& (0+255),b
  7676  000F18                     
  7677                           ; BSR set to: 0
  7678                           ;Modbus.c: 248:     MBRespon[MBResCnt] = ModbusData[0];
  7679  000F18  0102               	movlb	2	; () banked
  7680  000F1A  5100               	movf	_ModbusData& (0+255),w,b
  7681  000F1C  0100               	movlb	0	; () banked
  7682  000F1E  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7683  000F20  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7684  000F22  90D8               	bcf	status,0,c
  7685  000F24  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7686  000F26  6ED9               	movwf	fsr2l,c
  7687  000F28  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7688  000F2A  6EDA               	movwf	fsr2h,c
  7689  000F2C  0E41               	movlw	low _MBRespon
  7690  000F2E  26D9               	addwf	fsr2l,f,c
  7691  000F30  0E01               	movlw	high _MBRespon
  7692  000F32  22DA               	addwfc	fsr2h,f,c
  7693  000F34  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7694  000F38  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7695  000F3C                     
  7696                           ; BSR set to: 0
  7697                           ;Modbus.c: 249:     MBResCnt++;
  7698  000F3C  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7699  000F3E  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7700  000F40                     
  7701                           ; BSR set to: 0
  7702                           ;Modbus.c: 250:     MBRespon[MBResCnt] = ModbusData[1];
  7703  000F40  0102               	movlb	2	; () banked
  7704  000F42  5101               	movf	(_ModbusData+1)& (0+255),w,b
  7705  000F44  0100               	movlb	0	; () banked
  7706  000F46  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7707  000F48  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7708  000F4A  90D8               	bcf	status,0,c
  7709  000F4C  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7710  000F4E  6ED9               	movwf	fsr2l,c
  7711  000F50  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7712  000F52  6EDA               	movwf	fsr2h,c
  7713  000F54  0E41               	movlw	low _MBRespon
  7714  000F56  26D9               	addwf	fsr2l,f,c
  7715  000F58  0E01               	movlw	high _MBRespon
  7716  000F5A  22DA               	addwfc	fsr2h,f,c
  7717  000F5C  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7718  000F60  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7719  000F64                     
  7720                           ; BSR set to: 0
  7721                           ;Modbus.c: 251:     MBResCnt++;
  7722  000F64  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7723  000F66  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7724  000F68                     
  7725                           ; BSR set to: 0
  7726                           ;Modbus.c: 252:     MBRespon[MBResCnt] = ModbusData[2];
  7727  000F68  0102               	movlb	2	; () banked
  7728  000F6A  5102               	movf	(_ModbusData+2)& (0+255),w,b
  7729  000F6C  0100               	movlb	0	; () banked
  7730  000F6E  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7731  000F70  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7732  000F72  90D8               	bcf	status,0,c
  7733  000F74  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7734  000F76  6ED9               	movwf	fsr2l,c
  7735  000F78  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7736  000F7A  6EDA               	movwf	fsr2h,c
  7737  000F7C  0E41               	movlw	low _MBRespon
  7738  000F7E  26D9               	addwf	fsr2l,f,c
  7739  000F80  0E01               	movlw	high _MBRespon
  7740  000F82  22DA               	addwfc	fsr2h,f,c
  7741  000F84  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7742  000F88  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7743  000F8C                     
  7744                           ; BSR set to: 0
  7745                           ;Modbus.c: 253:     MBResCnt++;
  7746  000F8C  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7747  000F8E  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7748  000F90                     
  7749                           ; BSR set to: 0
  7750                           ;Modbus.c: 254:     MBRespon[MBResCnt] = ModbusData[3];
  7751  000F90  0102               	movlb	2	; () banked
  7752  000F92  5103               	movf	(_ModbusData+3)& (0+255),w,b
  7753  000F94  0100               	movlb	0	; () banked
  7754  000F96  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7755  000F98  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7756  000F9A  90D8               	bcf	status,0,c
  7757  000F9C  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7758  000F9E  6ED9               	movwf	fsr2l,c
  7759  000FA0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7760  000FA2  6EDA               	movwf	fsr2h,c
  7761  000FA4  0E41               	movlw	low _MBRespon
  7762  000FA6  26D9               	addwf	fsr2l,f,c
  7763  000FA8  0E01               	movlw	high _MBRespon
  7764  000FAA  22DA               	addwfc	fsr2h,f,c
  7765  000FAC  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7766  000FB0  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7767  000FB4                     
  7768                           ; BSR set to: 0
  7769                           ;Modbus.c: 255:     MBResCnt++;
  7770  000FB4  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7771  000FB6  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7772  000FB8                     
  7773                           ; BSR set to: 0
  7774                           ;Modbus.c: 256:     MBRespon[MBResCnt] = ModbusData[4];
  7775  000FB8  0102               	movlb	2	; () banked
  7776  000FBA  5104               	movf	(_ModbusData+4)& (0+255),w,b
  7777  000FBC  0100               	movlb	0	; () banked
  7778  000FBE  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7779  000FC0  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7780  000FC2  90D8               	bcf	status,0,c
  7781  000FC4  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7782  000FC6  6ED9               	movwf	fsr2l,c
  7783  000FC8  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7784  000FCA  6EDA               	movwf	fsr2h,c
  7785  000FCC  0E41               	movlw	low _MBRespon
  7786  000FCE  26D9               	addwf	fsr2l,f,c
  7787  000FD0  0E01               	movlw	high _MBRespon
  7788  000FD2  22DA               	addwfc	fsr2h,f,c
  7789  000FD4  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7790  000FD8  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7791  000FDC                     
  7792                           ; BSR set to: 0
  7793                           ;Modbus.c: 257:     MBResCnt++;
  7794  000FDC  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7795  000FDE  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7796  000FE0                     
  7797                           ; BSR set to: 0
  7798                           ;Modbus.c: 258:     MBRespon[MBResCnt] = ModbusData[5];
  7799  000FE0  0102               	movlb	2	; () banked
  7800  000FE2  5105               	movf	(_ModbusData+5)& (0+255),w,b
  7801  000FE4  0100               	movlb	0	; () banked
  7802  000FE6  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7803  000FE8  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7804  000FEA  90D8               	bcf	status,0,c
  7805  000FEC  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7806  000FEE  6ED9               	movwf	fsr2l,c
  7807  000FF0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7808  000FF2  6EDA               	movwf	fsr2h,c
  7809  000FF4  0E41               	movlw	low _MBRespon
  7810  000FF6  26D9               	addwf	fsr2l,f,c
  7811  000FF8  0E01               	movlw	high _MBRespon
  7812  000FFA  22DA               	addwfc	fsr2h,f,c
  7813  000FFC  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7814  001000  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7815  001004                     
  7816                           ; BSR set to: 0
  7817                           ;Modbus.c: 259:     MBResCnt++;
  7818  001004  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7819  001006  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7820                           
  7821                           ;Modbus.c: 261:     for(i=0; i< (ModbusData[5]) ; i++ ){
  7822  001008  0E00               	movlw	0
  7823  00100A  6F94               	movwf	(ModbusFC10@i+1)& (0+255),b
  7824  00100C  0E00               	movlw	0
  7825  00100E  6F93               	movwf	ModbusFC10@i& (0+255),b
  7826  001010  EF40  F008         	goto	l6803
  7827  001014                     l6795:
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;Modbus.c: 268:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  7831  001014  0E08               	movlw	low (_ModbusData+8)
  7832  001016  2595               	addwf	ModbusFC10@j& (0+255),w,b
  7833  001018  6ED9               	movwf	fsr2l,c
  7834  00101A  0E02               	movlw	high (_ModbusData+8)
  7835  00101C  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  7836  00101E  6EDA               	movwf	fsr2h,c
  7837  001020  50DF               	movf	indf2,w,c
  7838  001022  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7839  001024  0E07               	movlw	low (_ModbusData+7)
  7840  001026  2595               	addwf	ModbusFC10@j& (0+255),w,b
  7841  001028  6ED9               	movwf	fsr2l,c
  7842  00102A  0E02               	movlw	high (_ModbusData+7)
  7843  00102C  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  7844  00102E  6EDA               	movwf	fsr2h,c
  7845  001030  50DF               	movf	indf2,w,c
  7846  001032  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  7847  001034  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  7848  001036  6F90               	movwf	(??_ModbusFC10+3)& (0+255),b
  7849  001038  6B8F               	clrf	(??_ModbusFC10+2)& (0+255),b
  7850  00103A  518D               	movf	??_ModbusFC10& (0+255),w,b
  7851  00103C  258F               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  7852  00103E  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  7853  001040  0E00               	movlw	0
  7854  001042  2190               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  7855  001044  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  7856  001046                     
  7857                           ; BSR set to: 0
  7858                           ;Modbus.c: 269:         j = j+2;
  7859  001046  0E02               	movlw	2
  7860  001048  2595               	addwf	ModbusFC10@j& (0+255),w,b
  7861  00104A  6F95               	movwf	ModbusFC10@j& (0+255),b
  7862  00104C  0E00               	movlw	0
  7863  00104E  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  7864  001050  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  7865  001052                     
  7866                           ; BSR set to: 0
  7867                           ;Modbus.c: 270:         MB400xx[ModbusData[3] +i] = TempData;
  7868  001052  0102               	movlb	2	; () banked
  7869  001054  5103               	movf	(_ModbusData+3)& (0+255),w,b
  7870  001056  0100               	movlb	0	; () banked
  7871  001058  2593               	addwf	ModbusFC10@i& (0+255),w,b
  7872  00105A  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7873  00105C  0E00               	movlw	0
  7874  00105E  2194               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  7875  001060  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  7876  001062  90D8               	bcf	status,0,c
  7877  001064  378D               	rlcf	??_ModbusFC10& (0+255),f,b
  7878  001066  378E               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  7879  001068  0E64               	movlw	low _MB400xx
  7880  00106A  258D               	addwf	??_ModbusFC10& (0+255),w,b
  7881  00106C  6ED9               	movwf	fsr2l,c
  7882  00106E  0E04               	movlw	high _MB400xx
  7883  001070  218E               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  7884  001072  6EDA               	movwf	fsr2h,c
  7885  001074  C091  FFDE         	movff	ModbusFC10@TempData,postinc2
  7886  001078  C092  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  7887  00107C                     
  7888                           ; BSR set to: 0
  7889                           ;Modbus.c: 271:     }
  7890  00107C  4B93               	infsnz	ModbusFC10@i& (0+255),f,b
  7891  00107E  2B94               	incf	(ModbusFC10@i+1)& (0+255),f,b
  7892  001080                     l6803:
  7893                           
  7894                           ; BSR set to: 0
  7895  001080  0102               	movlb	2	; () banked
  7896  001082  5105               	movf	(_ModbusData+5)& (0+255),w,b
  7897  001084  0100               	movlb	0	; () banked
  7898  001086  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7899  001088  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7900  00108A  518D               	movf	??_ModbusFC10& (0+255),w,b
  7901  00108C  5D93               	subwf	ModbusFC10@i& (0+255),w,b
  7902  00108E  5194               	movf	(ModbusFC10@i+1)& (0+255),w,b
  7903  001090  0A80               	xorlw	128
  7904  001092  6F8F               	movwf	(??_ModbusFC10+2)& (0+255),b
  7905  001094  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  7906  001096  0A80               	xorlw	128
  7907  001098  598F               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  7908  00109A  A0D8               	btfss	status,0,c
  7909  00109C  EF52  F008         	goto	u6871
  7910  0010A0  EF54  F008         	goto	u6870
  7911  0010A4                     u6871:
  7912  0010A4  EF0A  F008         	goto	l6795
  7913  0010A8                     u6870:
  7914  0010A8                     
  7915                           ; BSR set to: 0
  7916                           ;Modbus.c: 273:     ByteHi = generateCRC(MBResCnt, 1);
  7917  0010A8  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  7918  0010AC  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  7919  0010B0  0E01               	movlw	1
  7920  0010B2  6E07               	movwf	generateCRC@HiOrLo^0,c
  7921  0010B4  EC86  F013         	call	_generateCRC	;wreg free
  7922  0010B8  C005  F0A7         	movff	?_generateCRC,_ByteHi
  7923  0010BC  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  7924                           
  7925                           ;Modbus.c: 274:     ByteLo = generateCRC(MBResCnt, 0);
  7926  0010C0  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  7927  0010C4  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  7928  0010C8  0E00               	movlw	0
  7929  0010CA  6E07               	movwf	generateCRC@HiOrLo^0,c
  7930  0010CC  EC86  F013         	call	_generateCRC	;wreg free
  7931  0010D0  C005  F0BD         	movff	?_generateCRC,_ByteLo
  7932  0010D4  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  7933  0010D8                     
  7934                           ;Modbus.c: 276:     MBRespon[MBResCnt] = ByteHi;
  7935  0010D8  90D8               	bcf	status,0,c
  7936  0010DA  0100               	movlb	0	; () banked
  7937  0010DC  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7938  0010DE  6ED9               	movwf	fsr2l,c
  7939  0010E0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7940  0010E2  6EDA               	movwf	fsr2h,c
  7941  0010E4  0E41               	movlw	low _MBRespon
  7942  0010E6  26D9               	addwf	fsr2l,f,c
  7943  0010E8  0E01               	movlw	high _MBRespon
  7944  0010EA  22DA               	addwfc	fsr2h,f,c
  7945  0010EC  C0A7  FFDE         	movff	_ByteHi,postinc2
  7946  0010F0  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  7947  0010F4                     
  7948                           ; BSR set to: 0
  7949                           ;Modbus.c: 277:     MBRespon[MBResCnt +1] = ByteLo;
  7950  0010F4  90D8               	bcf	status,0,c
  7951  0010F6  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7952  0010F8  6ED9               	movwf	fsr2l,c
  7953  0010FA  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7954  0010FC  6EDA               	movwf	fsr2h,c
  7955  0010FE  0E43               	movlw	low (_MBRespon+2)
  7956  001100  26D9               	addwf	fsr2l,f,c
  7957  001102  0E01               	movlw	high (_MBRespon+2)
  7958  001104  22DA               	addwfc	fsr2h,f,c
  7959  001106  C0BD  FFDE         	movff	_ByteLo,postinc2
  7960  00110A  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  7961  00110E                     
  7962                           ; BSR set to: 0
  7963                           ;Modbus.c: 278:     MBResCnt = MBResCnt +2;
  7964  00110E  0E02               	movlw	2
  7965  001110  25A9               	addwf	_MBResCnt& (0+255),w,b
  7966  001112  6FA9               	movwf	_MBResCnt& (0+255),b
  7967  001114  0E00               	movlw	0
  7968  001116  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  7969  001118  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7970  00111A                     
  7971                           ; BSR set to: 0
  7972                           ;Modbus.c: 280:     if(Debug==1){
  7973  00111A  05B0               	decf	_Debug& (0+255),w,b
  7974  00111C  A4D8               	btfss	status,2,c
  7975  00111E  EF93  F008         	goto	u6881
  7976  001122  EF95  F008         	goto	u6880
  7977  001126                     u6881:
  7978  001126  EF99  F008         	goto	l6817
  7979  00112A                     u6880:
  7980  00112A                     
  7981                           ; BSR set to: 0
  7982                           ;Modbus.c: 281:         PrintMB400();
  7983  00112A  ECB6  F018         	call	_PrintMB400	;wreg free
  7984                           
  7985                           ;Modbus.c: 282:         PrintModRespon();
  7986  00112E  EC10  F013         	call	_PrintModRespon	;wreg free
  7987  001132                     l6817:
  7988                           
  7989                           ;Modbus.c: 285:     UART1_Write_string(MBRespon,MBResCnt);
  7990  001132  0E41               	movlw	low _MBRespon
  7991  001134  6E06               	movwf	UART1_Write_string@data^0,c
  7992  001136  0E01               	movlw	high _MBRespon
  7993  001138  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  7994  00113A  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  7995  00113E  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  7996  001142  EC7C  F018         	call	_UART1_Write_string	;wreg free
  7997  001146  0012               	return		;funcret
  7998  001148                     __end_of_ModbusFC10:
  7999                           	opt callstack 0
  8000                           
  8001 ;; *************** function _PrintMB400 *****************
  8002 ;; Defined at:
  8003 ;;		line 34 in file "Modbus.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  i               2   84[COMRAM] int 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8021 ;;Total ram usage:        2 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:   13
  8024 ;; This function calls:
  8025 ;;		_printf
  8026 ;; This function is called by:
  8027 ;;		_main
  8028 ;;		_ModbusFC10
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text43
  8033  00316C                     __ptext43:
  8034                           	opt callstack 0
  8035  00316C                     _PrintMB400:
  8036                           	opt callstack 17
  8037  00316C                     
  8038                           ;Modbus.c: 36:     printf("UpdatedMB400 \r\n");
  8039  00316C  0EB2               	movlw	low STR_4
  8040  00316E  0100               	movlb	0	; () banked
  8041  003170  6F7D               	movwf	printf@fmt& (0+255),b
  8042  003172  0EFF               	movlw	high STR_4
  8043  003174  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8044  003176  ECE3  F01C         	call	_printf	;wreg free
  8045  00317A                     
  8046                           ;Modbus.c: 39:     for(i=0; i<32; i++ ){
  8047  00317A  0E00               	movlw	0
  8048  00317C  6E56               	movwf	(PrintMB400@i+1)^0,c
  8049  00317E  0E00               	movlw	0
  8050  003180  6E55               	movwf	PrintMB400@i^0,c
  8051  003182                     l6473:
  8052                           
  8053                           ;Modbus.c: 40:         printf("Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  8054  003182  0EEB               	movlw	low STR_5
  8055  003184  0100               	movlb	0	; () banked
  8056  003186  6F7D               	movwf	printf@fmt& (0+255),b
  8057  003188  0EFE               	movlw	high STR_5
  8058  00318A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8059  00318C  C055  F07F         	movff	PrintMB400@i,?_printf+2
  8060  003190  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  8061  003194  90D8               	bcf	status,0,c
  8062  003196  3455               	rlcf	PrintMB400@i^0,w,c
  8063  003198  6ED9               	movwf	fsr2l,c
  8064  00319A  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  8065  00319C  6EDA               	movwf	fsr2h,c
  8066  00319E  0E64               	movlw	low _MB400xx
  8067  0031A0  26D9               	addwf	fsr2l,f,c
  8068  0031A2  0E04               	movlw	high _MB400xx
  8069  0031A4  22DA               	addwfc	fsr2h,f,c
  8070  0031A6  CFDE F081          	movff	postinc2,?_printf+4
  8071  0031AA  CFDD F082          	movff	postdec2,?_printf+5
  8072  0031AE  ECE3  F01C         	call	_printf	;wreg free
  8073  0031B2                     
  8074                           ;Modbus.c: 41:     }
  8075  0031B2  4A55               	infsnz	PrintMB400@i^0,f,c
  8076  0031B4  2A56               	incf	(PrintMB400@i+1)^0,f,c
  8077  0031B6  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  8078  0031B8  EFE7  F018         	goto	u6491
  8079  0031BC  5056               	movf	(PrintMB400@i+1)^0,w,c
  8080  0031BE  E109               	bnz	u6490
  8081  0031C0  0E20               	movlw	32
  8082  0031C2  5C55               	subwf	PrintMB400@i^0,w,c
  8083  0031C4  A0D8               	btfss	status,0,c
  8084  0031C6  EFE7  F018         	goto	u6491
  8085  0031CA  EFE9  F018         	goto	u6490
  8086  0031CE                     u6491:
  8087  0031CE  EFC1  F018         	goto	l6473
  8088  0031D2                     u6490:
  8089  0031D2  0012               	return		;funcret
  8090  0031D4                     __end_of_PrintMB400:
  8091                           	opt callstack 0
  8092                           
  8093 ;; *************** function _ModbusFC03 *****************
  8094 ;; Defined at:
  8095 ;;		line 155 in file "Modbus.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  i               2   49[BANK0 ] int 
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;Total ram usage:        6 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:   14
  8116 ;; This function calls:
  8117 ;;		_PrintModRespon
  8118 ;;		_UART1_Write_string
  8119 ;;		_generateCRC
  8120 ;;		_printf
  8121 ;; This function is called by:
  8122 ;;		_main
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text44
  8127  001148                     __ptext44:
  8128                           	opt callstack 0
  8129  001148                     _ModbusFC03:
  8130                           	opt callstack 16
  8131  001148                     
  8132                           ;Modbus.c: 160:     MBResCnt = 0;
  8133  001148  0E00               	movlw	0
  8134  00114A  0100               	movlb	0	; () banked
  8135  00114C  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8136  00114E  0E00               	movlw	0
  8137  001150  6FA9               	movwf	_MBResCnt& (0+255),b
  8138  001152                     
  8139                           ; BSR set to: 0
  8140                           ;Modbus.c: 161:     MBRespon[MBResCnt] = ModbusData[0];
  8141  001152  0102               	movlb	2	; () banked
  8142  001154  5100               	movf	_ModbusData& (0+255),w,b
  8143  001156  0100               	movlb	0	; () banked
  8144  001158  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8145  00115A  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8146  00115C  90D8               	bcf	status,0,c
  8147  00115E  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8148  001160  6ED9               	movwf	fsr2l,c
  8149  001162  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8150  001164  6EDA               	movwf	fsr2h,c
  8151  001166  0E41               	movlw	low _MBRespon
  8152  001168  26D9               	addwf	fsr2l,f,c
  8153  00116A  0E01               	movlw	high _MBRespon
  8154  00116C  22DA               	addwfc	fsr2h,f,c
  8155  00116E  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  8156  001172  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  8157  001176                     
  8158                           ; BSR set to: 0
  8159                           ;Modbus.c: 162:     MBResCnt++;
  8160  001176  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8161  001178  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8162  00117A                     
  8163                           ; BSR set to: 0
  8164                           ;Modbus.c: 163:     MBRespon[MBResCnt] = ModbusData[1];
  8165  00117A  0102               	movlb	2	; () banked
  8166  00117C  5101               	movf	(_ModbusData+1)& (0+255),w,b
  8167  00117E  0100               	movlb	0	; () banked
  8168  001180  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8169  001182  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8170  001184  90D8               	bcf	status,0,c
  8171  001186  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8172  001188  6ED9               	movwf	fsr2l,c
  8173  00118A  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8174  00118C  6EDA               	movwf	fsr2h,c
  8175  00118E  0E41               	movlw	low _MBRespon
  8176  001190  26D9               	addwf	fsr2l,f,c
  8177  001192  0E01               	movlw	high _MBRespon
  8178  001194  22DA               	addwfc	fsr2h,f,c
  8179  001196  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  8180  00119A  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  8181  00119E                     
  8182                           ; BSR set to: 0
  8183                           ;Modbus.c: 164:     MBResCnt++;
  8184  00119E  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8185  0011A0  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8186  0011A2                     
  8187                           ; BSR set to: 0
  8188                           ;Modbus.c: 165:     MBRespon[MBResCnt] = ModbusData[5] *2;
  8189  0011A2  0102               	movlb	2	; () banked
  8190  0011A4  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8191  0011A6  0D02               	mullw	2
  8192  0011A8  90D8               	bcf	status,0,c
  8193  0011AA  0100               	movlb	0	; () banked
  8194  0011AC  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8195  0011AE  6ED9               	movwf	fsr2l,c
  8196  0011B0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8197  0011B2  6EDA               	movwf	fsr2h,c
  8198  0011B4  0E41               	movlw	low _MBRespon
  8199  0011B6  26D9               	addwf	fsr2l,f,c
  8200  0011B8  0E01               	movlw	high _MBRespon
  8201  0011BA  22DA               	addwfc	fsr2h,f,c
  8202  0011BC  CFF3 FFDE          	movff	prodl,postinc2
  8203  0011C0  CFF4 FFDD          	movff	prodh,postdec2
  8204  0011C4                     
  8205                           ; BSR set to: 0
  8206                           ;Modbus.c: 166:     MBResCnt++;
  8207  0011C4  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8208  0011C6  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8209  0011C8                     
  8210                           ; BSR set to: 0
  8211                           ;Modbus.c: 167:     for(i=0; i< (ModbusData[5]) ; i++ ){
  8212  0011C8  0E00               	movlw	0
  8213  0011CA  6F92               	movwf	(ModbusFC03@i+1)& (0+255),b
  8214  0011CC  0E00               	movlw	0
  8215  0011CE  6F91               	movwf	ModbusFC03@i& (0+255),b
  8216  0011D0  EF3A  F009         	goto	l6751
  8217  0011D4                     l6745:
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;Modbus.c: 205:             ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  8221  0011D4  0102               	movlb	2	; () banked
  8222  0011D6  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8223  0011D8  0100               	movlb	0	; () banked
  8224  0011DA  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8225  0011DC  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8226  0011DE  0E00               	movlw	0
  8227  0011E0  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8228  0011E2  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8229  0011E4  90D8               	bcf	status,0,c
  8230  0011E6  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8231  0011E8  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8232  0011EA  0EA4               	movlw	low _MB300xx
  8233  0011EC  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8234  0011EE  6ED9               	movwf	fsr2l,c
  8235  0011F0  0E03               	movlw	high _MB300xx
  8236  0011F2  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8237  0011F4  6EDA               	movwf	fsr2h,c
  8238  0011F6  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8239  0011FA  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8240  0011FE  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8241  001200  6FBD               	movwf	_ByteLo& (0+255),b
  8242  001202  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8243                           
  8244                           ;Modbus.c: 206:             ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  8245  001204  0102               	movlb	2	; () banked
  8246  001206  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8247  001208  0100               	movlb	0	; () banked
  8248  00120A  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8249  00120C  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8250  00120E  0E00               	movlw	0
  8251  001210  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8252  001212  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8253  001214  90D8               	bcf	status,0,c
  8254  001216  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8255  001218  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8256  00121A  0EA4               	movlw	low _MB300xx
  8257  00121C  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8258  00121E  6ED9               	movwf	fsr2l,c
  8259  001220  0E03               	movlw	high _MB300xx
  8260  001222  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8261  001224  6EDA               	movwf	fsr2h,c
  8262  001226  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8263  00122A  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8264  00122E  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8265  001230  6FA7               	movwf	_ByteHi& (0+255),b
  8266  001232  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8267                           
  8268                           ;Modbus.c: 213:             MBRespon[MBResCnt] = ByteHi;
  8269  001234  90D8               	bcf	status,0,c
  8270  001236  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8271  001238  6ED9               	movwf	fsr2l,c
  8272  00123A  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8273  00123C  6EDA               	movwf	fsr2h,c
  8274  00123E  0E41               	movlw	low _MBRespon
  8275  001240  26D9               	addwf	fsr2l,f,c
  8276  001242  0E01               	movlw	high _MBRespon
  8277  001244  22DA               	addwfc	fsr2h,f,c
  8278  001246  C0A7  FFDE         	movff	_ByteHi,postinc2
  8279  00124A  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8280  00124E                     
  8281                           ; BSR set to: 0
  8282                           ;Modbus.c: 214:             MBResCnt++;
  8283  00124E  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8284  001250  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8285  001252                     
  8286                           ; BSR set to: 0
  8287                           ;Modbus.c: 215:             MBRespon[MBResCnt] = ByteLo;
  8288  001252  90D8               	bcf	status,0,c
  8289  001254  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8290  001256  6ED9               	movwf	fsr2l,c
  8291  001258  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8292  00125A  6EDA               	movwf	fsr2h,c
  8293  00125C  0E41               	movlw	low _MBRespon
  8294  00125E  26D9               	addwf	fsr2l,f,c
  8295  001260  0E01               	movlw	high _MBRespon
  8296  001262  22DA               	addwfc	fsr2h,f,c
  8297  001264  C0BD  FFDE         	movff	_ByteLo,postinc2
  8298  001268  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8299                           
  8300                           ;Modbus.c: 216:             MBResCnt++;
  8301  00126C  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8302  00126E  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8303                           
  8304                           ;Modbus.c: 218:     }
  8305  001270  4B91               	infsnz	ModbusFC03@i& (0+255),f,b
  8306  001272  2B92               	incf	(ModbusFC03@i+1)& (0+255),f,b
  8307  001274                     l6751:
  8308                           
  8309                           ; BSR set to: 0
  8310  001274  0102               	movlb	2	; () banked
  8311  001276  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8312  001278  0100               	movlb	0	; () banked
  8313  00127A  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8314  00127C  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8315  00127E  518D               	movf	??_ModbusFC03& (0+255),w,b
  8316  001280  5D91               	subwf	ModbusFC03@i& (0+255),w,b
  8317  001282  5192               	movf	(ModbusFC03@i+1)& (0+255),w,b
  8318  001284  0A80               	xorlw	128
  8319  001286  6F8F               	movwf	(??_ModbusFC03+2)& (0+255),b
  8320  001288  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
  8321  00128A  0A80               	xorlw	128
  8322  00128C  598F               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
  8323  00128E  A0D8               	btfss	status,0,c
  8324  001290  EF4C  F009         	goto	u6851
  8325  001294  EF4E  F009         	goto	u6850
  8326  001298                     u6851:
  8327  001298  EFEA  F008         	goto	l6745
  8328  00129C                     u6850:
  8329  00129C                     
  8330                           ; BSR set to: 0
  8331                           ;Modbus.c: 220:     ByteHi = generateCRC(MBResCnt, 1);
  8332  00129C  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8333  0012A0  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8334  0012A4  0E01               	movlw	1
  8335  0012A6  6E07               	movwf	generateCRC@HiOrLo^0,c
  8336  0012A8  EC86  F013         	call	_generateCRC	;wreg free
  8337  0012AC  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8338  0012B0  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8339                           
  8340                           ;Modbus.c: 221:     ByteLo = generateCRC(MBResCnt, 0);
  8341  0012B4  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8342  0012B8  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8343  0012BC  0E00               	movlw	0
  8344  0012BE  6E07               	movwf	generateCRC@HiOrLo^0,c
  8345  0012C0  EC86  F013         	call	_generateCRC	;wreg free
  8346  0012C4  C005  F0BD         	movff	?_generateCRC,_ByteLo
  8347  0012C8  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  8348  0012CC                     
  8349                           ;Modbus.c: 223:     MBRespon[MBResCnt] = ByteHi;
  8350  0012CC  90D8               	bcf	status,0,c
  8351  0012CE  0100               	movlb	0	; () banked
  8352  0012D0  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8353  0012D2  6ED9               	movwf	fsr2l,c
  8354  0012D4  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8355  0012D6  6EDA               	movwf	fsr2h,c
  8356  0012D8  0E41               	movlw	low _MBRespon
  8357  0012DA  26D9               	addwf	fsr2l,f,c
  8358  0012DC  0E01               	movlw	high _MBRespon
  8359  0012DE  22DA               	addwfc	fsr2h,f,c
  8360  0012E0  C0A7  FFDE         	movff	_ByteHi,postinc2
  8361  0012E4  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8362  0012E8                     
  8363                           ; BSR set to: 0
  8364                           ;Modbus.c: 224:     MBRespon[MBResCnt +1] = ByteLo;
  8365  0012E8  90D8               	bcf	status,0,c
  8366  0012EA  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8367  0012EC  6ED9               	movwf	fsr2l,c
  8368  0012EE  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8369  0012F0  6EDA               	movwf	fsr2h,c
  8370  0012F2  0E43               	movlw	low (_MBRespon+2)
  8371  0012F4  26D9               	addwf	fsr2l,f,c
  8372  0012F6  0E01               	movlw	high (_MBRespon+2)
  8373  0012F8  22DA               	addwfc	fsr2h,f,c
  8374  0012FA  C0BD  FFDE         	movff	_ByteLo,postinc2
  8375  0012FE  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8376  001302                     
  8377                           ; BSR set to: 0
  8378                           ;Modbus.c: 225:     MBResCnt = MBResCnt +2;
  8379  001302  0E02               	movlw	2
  8380  001304  25A9               	addwf	_MBResCnt& (0+255),w,b
  8381  001306  6FA9               	movwf	_MBResCnt& (0+255),b
  8382  001308  0E00               	movlw	0
  8383  00130A  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8384  00130C  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8385  00130E                     
  8386                           ; BSR set to: 0
  8387                           ;Modbus.c: 227:     printf("Modbus Response Count %i:\r\n",MBResCnt);
  8388  00130E  0E1B               	movlw	low STR_12
  8389  001310  6F7D               	movwf	printf@fmt& (0+255),b
  8390  001312  0EFE               	movlw	high STR_12
  8391  001314  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8392  001316  C0A9  F07F         	movff	_MBResCnt,?_printf+2
  8393  00131A  C0AA  F080         	movff	_MBResCnt+1,?_printf+3
  8394  00131E  ECE3  F01C         	call	_printf	;wreg free
  8395  001322                     
  8396                           ;Modbus.c: 229:     if(Debug ==1){
  8397  001322  0100               	movlb	0	; () banked
  8398  001324  05B0               	decf	_Debug& (0+255),w,b
  8399  001326  A4D8               	btfss	status,2,c
  8400  001328  EF98  F009         	goto	u6861
  8401  00132C  EF9A  F009         	goto	u6860
  8402  001330                     u6861:
  8403  001330  EF9C  F009         	goto	l6767
  8404  001334                     u6860:
  8405  001334                     
  8406                           ; BSR set to: 0
  8407                           ;Modbus.c: 230:         PrintModRespon();
  8408  001334  EC10  F013         	call	_PrintModRespon	;wreg free
  8409  001338                     l6767:
  8410                           
  8411                           ;Modbus.c: 234:     UART1_Write_string(MBRespon,MBResCnt);
  8412  001338  0E41               	movlw	low _MBRespon
  8413  00133A  6E06               	movwf	UART1_Write_string@data^0,c
  8414  00133C  0E01               	movlw	high _MBRespon
  8415  00133E  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8416  001340  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8417  001344  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8418  001348  EC7C  F018         	call	_UART1_Write_string	;wreg free
  8419  00134C  0012               	return		;funcret
  8420  00134E                     __end_of_ModbusFC03:
  8421                           	opt callstack 0
  8422                           
  8423 ;; *************** function _ModbusError *****************
  8424 ;; Defined at:
  8425 ;;		line 364 in file "Modbus.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  ErrorCode       2   45[BANK0 ] int 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  i               2    0        int 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8442 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8443 ;;Total ram usage:        6 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:   14
  8446 ;; This function calls:
  8447 ;;		_PrintModRespon
  8448 ;;		_UART1_Write_string
  8449 ;;		_generateCRC
  8450 ;; This function is called by:
  8451 ;;		_main
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           	psect	text45
  8456  00222A                     __ptext45:
  8457                           	opt callstack 0
  8458  00222A                     _ModbusError:
  8459                           	opt callstack 16
  8460  00222A                     
  8461                           ;Modbus.c: 369:     MBResCnt = 0;
  8462  00222A  0E00               	movlw	0
  8463  00222C  0100               	movlb	0	; () banked
  8464  00222E  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8465  002230  0E00               	movlw	0
  8466  002232  6FA9               	movwf	_MBResCnt& (0+255),b
  8467  002234                     
  8468                           ; BSR set to: 0
  8469                           ;Modbus.c: 370:     MBRespon[MBResCnt] = ModbusData[0];
  8470  002234  0102               	movlb	2	; () banked
  8471  002236  5100               	movf	_ModbusData& (0+255),w,b
  8472  002238  0100               	movlb	0	; () banked
  8473  00223A  6F8F               	movwf	??_ModbusError& (0+255),b
  8474  00223C  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  8475  00223E  90D8               	bcf	status,0,c
  8476  002240  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8477  002242  6ED9               	movwf	fsr2l,c
  8478  002244  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8479  002246  6EDA               	movwf	fsr2h,c
  8480  002248  0E41               	movlw	low _MBRespon
  8481  00224A  26D9               	addwf	fsr2l,f,c
  8482  00224C  0E01               	movlw	high _MBRespon
  8483  00224E  22DA               	addwfc	fsr2h,f,c
  8484  002250  C08F  FFDE         	movff	??_ModbusError,postinc2
  8485  002254  C090  FFDD         	movff	??_ModbusError+1,postdec2
  8486  002258                     
  8487                           ; BSR set to: 0
  8488                           ;Modbus.c: 371:     MBResCnt++;
  8489  002258  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8490  00225A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8491  00225C                     
  8492                           ; BSR set to: 0
  8493                           ;Modbus.c: 372:     MBRespon[MBResCnt] = ModbusData[1] + 128;
  8494  00225C  0102               	movlb	2	; () banked
  8495  00225E  5101               	movf	(_ModbusData+1)& (0+255),w,b
  8496  002260  0100               	movlb	0	; () banked
  8497  002262  6F8F               	movwf	??_ModbusError& (0+255),b
  8498  002264  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  8499  002266  0E80               	movlw	128
  8500  002268  278F               	addwf	??_ModbusError& (0+255),f,b
  8501  00226A  0E00               	movlw	0
  8502  00226C  2390               	addwfc	(??_ModbusError+1)& (0+255),f,b
  8503  00226E  90D8               	bcf	status,0,c
  8504  002270  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8505  002272  6ED9               	movwf	fsr2l,c
  8506  002274  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8507  002276  6EDA               	movwf	fsr2h,c
  8508  002278  0E41               	movlw	low _MBRespon
  8509  00227A  26D9               	addwf	fsr2l,f,c
  8510  00227C  0E01               	movlw	high _MBRespon
  8511  00227E  22DA               	addwfc	fsr2h,f,c
  8512  002280  C08F  FFDE         	movff	??_ModbusError,postinc2
  8513  002284  C090  FFDD         	movff	??_ModbusError+1,postdec2
  8514  002288                     
  8515                           ; BSR set to: 0
  8516                           ;Modbus.c: 373:     MBResCnt++;
  8517  002288  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8518  00228A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8519  00228C                     
  8520                           ; BSR set to: 0
  8521                           ;Modbus.c: 374:     MBRespon[MBResCnt] = ErrorCode;
  8522  00228C  90D8               	bcf	status,0,c
  8523  00228E  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8524  002290  6ED9               	movwf	fsr2l,c
  8525  002292  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8526  002294  6EDA               	movwf	fsr2h,c
  8527  002296  0E41               	movlw	low _MBRespon
  8528  002298  26D9               	addwf	fsr2l,f,c
  8529  00229A  0E01               	movlw	high _MBRespon
  8530  00229C  22DA               	addwfc	fsr2h,f,c
  8531  00229E  C08D  FFDE         	movff	ModbusError@ErrorCode,postinc2
  8532  0022A2  C08E  FFDD         	movff	ModbusError@ErrorCode+1,postdec2
  8533  0022A6                     
  8534                           ; BSR set to: 0
  8535                           ;Modbus.c: 375:     MBResCnt++;
  8536  0022A6  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8537  0022A8  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8538  0022AA                     
  8539                           ; BSR set to: 0
  8540                           ;Modbus.c: 377:     ByteHi = generateCRC(MBResCnt, 1);
  8541  0022AA  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8542  0022AE  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8543  0022B2  0E01               	movlw	1
  8544  0022B4  6E07               	movwf	generateCRC@HiOrLo^0,c
  8545  0022B6  EC86  F013         	call	_generateCRC	;wreg free
  8546  0022BA  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8547  0022BE  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8548  0022C2                     
  8549                           ;Modbus.c: 378:     ByteLo = generateCRC(MBResCnt, 0);
  8550  0022C2  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8551  0022C6  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8552  0022CA  0E00               	movlw	0
  8553  0022CC  6E07               	movwf	generateCRC@HiOrLo^0,c
  8554  0022CE  EC86  F013         	call	_generateCRC	;wreg free
  8555  0022D2  C005  F0BD         	movff	?_generateCRC,_ByteLo
  8556  0022D6  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  8557  0022DA                     
  8558                           ;Modbus.c: 380:     MBRespon[MBResCnt] = ByteHi;
  8559  0022DA  90D8               	bcf	status,0,c
  8560  0022DC  0100               	movlb	0	; () banked
  8561  0022DE  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8562  0022E0  6ED9               	movwf	fsr2l,c
  8563  0022E2  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8564  0022E4  6EDA               	movwf	fsr2h,c
  8565  0022E6  0E41               	movlw	low _MBRespon
  8566  0022E8  26D9               	addwf	fsr2l,f,c
  8567  0022EA  0E01               	movlw	high _MBRespon
  8568  0022EC  22DA               	addwfc	fsr2h,f,c
  8569  0022EE  C0A7  FFDE         	movff	_ByteHi,postinc2
  8570  0022F2  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8571  0022F6                     
  8572                           ; BSR set to: 0
  8573                           ;Modbus.c: 381:     MBRespon[MBResCnt +1] = ByteLo;
  8574  0022F6  90D8               	bcf	status,0,c
  8575  0022F8  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8576  0022FA  6ED9               	movwf	fsr2l,c
  8577  0022FC  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8578  0022FE  6EDA               	movwf	fsr2h,c
  8579  002300  0E43               	movlw	low (_MBRespon+2)
  8580  002302  26D9               	addwf	fsr2l,f,c
  8581  002304  0E01               	movlw	high (_MBRespon+2)
  8582  002306  22DA               	addwfc	fsr2h,f,c
  8583  002308  C0BD  FFDE         	movff	_ByteLo,postinc2
  8584  00230C  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8585  002310                     
  8586                           ; BSR set to: 0
  8587                           ;Modbus.c: 382:     MBResCnt = MBResCnt +2;
  8588  002310  0E02               	movlw	2
  8589  002312  25A9               	addwf	_MBResCnt& (0+255),w,b
  8590  002314  6FA9               	movwf	_MBResCnt& (0+255),b
  8591  002316  0E00               	movlw	0
  8592  002318  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8593  00231A  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8594  00231C                     
  8595                           ; BSR set to: 0
  8596                           ;Modbus.c: 384:     PrintModRespon();
  8597  00231C  EC10  F013         	call	_PrintModRespon	;wreg free
  8598  002320                     
  8599                           ;Modbus.c: 385:     UART1_Write_string(MBRespon,MBResCnt);
  8600  002320  0E41               	movlw	low _MBRespon
  8601  002322  6E06               	movwf	UART1_Write_string@data^0,c
  8602  002324  0E01               	movlw	high _MBRespon
  8603  002326  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8604  002328  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8605  00232C  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8606  002330  EC7C  F018         	call	_UART1_Write_string	;wreg free
  8607  002334  0012               	return		;funcret
  8608  002336                     __end_of_ModbusError:
  8609                           	opt callstack 0
  8610                           
  8611 ;; *************** function _generateCRC *****************
  8612 ;; Defined at:
  8613 ;;		line 291 in file "Modbus.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;  MessCnt         2    4[COMRAM] int 
  8616 ;;  HiOrLo          1    6[COMRAM] _Bool 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;  crc             2   17[COMRAM] unsigned int 
  8619 ;;  j               2   15[COMRAM] int 
  8620 ;;  i               2   13[COMRAM] int 
  8621 ;;  crcLow          2   11[COMRAM] unsigned int 
  8622 ;;  crcHigh         2    9[COMRAM] unsigned int 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  2    4[COMRAM] unsigned int 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8632 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8633 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8635 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8636 ;;Total ram usage:       15 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:    4
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_ModbusFC03
  8643 ;;		_ModbusFC10
  8644 ;;		_ModbusError
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           	psect	text46
  8649  00270C                     __ptext46:
  8650                           	opt callstack 0
  8651  00270C                     _generateCRC:
  8652                           	opt callstack 25
  8653  00270C                     
  8654                           ;Modbus.c: 292:   unsigned int crc = 0xFFFF;
  8655  00270C  6812               	setf	generateCRC@crc^0,c
  8656  00270E  6813               	setf	(generateCRC@crc+1)^0,c
  8657  002710                     
  8658                           ;Modbus.c: 294:   unsigned int crcLow = 0;
  8659  002710  0E00               	movlw	0
  8660  002712  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  8661  002714  0E00               	movlw	0
  8662  002716  6E0C               	movwf	generateCRC@crcLow^0,c
  8663                           
  8664                           ;Modbus.c: 295:   int i,j = 0;
  8665  002718  0E00               	movlw	0
  8666  00271A  6E11               	movwf	(generateCRC@j+1)^0,c
  8667  00271C  0E00               	movlw	0
  8668  00271E  6E10               	movwf	generateCRC@j^0,c
  8669                           
  8670                           ;Modbus.c: 297:     for(i=0;i<MessCnt;i++){
  8671  002720  0E00               	movlw	0
  8672  002722  6E0F               	movwf	(generateCRC@i+1)^0,c
  8673  002724  0E00               	movlw	0
  8674  002726  6E0E               	movwf	generateCRC@i^0,c
  8675  002728  EFC8  F013         	goto	l4951
  8676  00272C                     l4933:
  8677                           
  8678                           ;Modbus.c: 298:       crc ^= MBRespon[i];
  8679  00272C  90D8               	bcf	status,0,c
  8680  00272E  340E               	rlcf	generateCRC@i^0,w,c
  8681  002730  6ED9               	movwf	fsr2l,c
  8682  002732  340F               	rlcf	(generateCRC@i+1)^0,w,c
  8683  002734  6EDA               	movwf	fsr2h,c
  8684  002736  0E41               	movlw	low _MBRespon
  8685  002738  26D9               	addwf	fsr2l,f,c
  8686  00273A  0E01               	movlw	high _MBRespon
  8687  00273C  22DA               	addwfc	fsr2h,f,c
  8688  00273E  50DE               	movf	postinc2,w,c
  8689  002740  1A12               	xorwf	generateCRC@crc^0,f,c
  8690  002742  50DD               	movf	postdec2,w,c
  8691  002744  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  8692  002746                     
  8693                           ;Modbus.c: 299:       for(j=8; j!=0; j--){
  8694  002746  0E00               	movlw	0
  8695  002748  6E11               	movwf	(generateCRC@j+1)^0,c
  8696  00274A  0E08               	movlw	8
  8697  00274C  6E10               	movwf	generateCRC@j^0,c
  8698  00274E                     l751:
  8699                           
  8700                           ;Modbus.c: 300:         if((crc & 0x0001) != 0){
  8701  00274E  A012               	btfss	generateCRC@crc^0,0,c
  8702  002750  EFAC  F013         	goto	u4271
  8703  002754  EFAE  F013         	goto	u4270
  8704  002758                     u4271:
  8705  002758  EFB7  F013         	goto	l4945
  8706  00275C                     u4270:
  8707  00275C                     
  8708                           ;Modbus.c: 301:           crc >>= 1;
  8709  00275C  90D8               	bcf	status,0,c
  8710  00275E  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  8711  002760  3212               	rrcf	generateCRC@crc^0,f,c
  8712  002762                     
  8713                           ;Modbus.c: 302:           crc ^= 0xA001;
  8714  002762  0E01               	movlw	1
  8715  002764  1A12               	xorwf	generateCRC@crc^0,f,c
  8716  002766  0EA0               	movlw	160
  8717  002768  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  8718                           
  8719                           ;Modbus.c: 303:         }
  8720  00276A  EFBA  F013         	goto	l754
  8721  00276E                     l4945:
  8722                           
  8723                           ;Modbus.c: 305:           crc >>= 1;
  8724  00276E  90D8               	bcf	status,0,c
  8725  002770  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  8726  002772  3212               	rrcf	generateCRC@crc^0,f,c
  8727  002774                     l754:
  8728                           
  8729                           ;Modbus.c: 307:       }
  8730  002774  0610               	decf	generateCRC@j^0,f,c
  8731  002776  A0D8               	btfss	status,0,c
  8732  002778  0611               	decf	(generateCRC@j+1)^0,f,c
  8733  00277A  5010               	movf	generateCRC@j^0,w,c
  8734  00277C  1011               	iorwf	(generateCRC@j+1)^0,w,c
  8735  00277E  A4D8               	btfss	status,2,c
  8736  002780  EFC4  F013         	goto	u4281
  8737  002784  EFC6  F013         	goto	u4280
  8738  002788                     u4281:
  8739  002788  EFA7  F013         	goto	l751
  8740  00278C                     u4280:
  8741  00278C                     
  8742                           ;Modbus.c: 308:     }
  8743  00278C  4A0E               	infsnz	generateCRC@i^0,f,c
  8744  00278E  2A0F               	incf	(generateCRC@i+1)^0,f,c
  8745  002790                     l4951:
  8746  002790  5005               	movf	generateCRC@MessCnt^0,w,c
  8747  002792  5C0E               	subwf	generateCRC@i^0,w,c
  8748  002794  500F               	movf	(generateCRC@i+1)^0,w,c
  8749  002796  0A80               	xorlw	128
  8750  002798  6E08               	movwf	??_generateCRC^0,c
  8751  00279A  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
  8752  00279C  0A80               	xorlw	128
  8753  00279E  5808               	subwfb	??_generateCRC^0,w,c
  8754  0027A0  A0D8               	btfss	status,0,c
  8755  0027A2  EFD5  F013         	goto	u4291
  8756  0027A6  EFD7  F013         	goto	u4290
  8757  0027AA                     u4291:
  8758  0027AA  EF96  F013         	goto	l4933
  8759  0027AE                     u4290:
  8760  0027AE                     
  8761                           ;Modbus.c: 310:     crcHigh = (crc & 0x00FF);
  8762  0027AE  5012               	movf	generateCRC@crc^0,w,c
  8763  0027B0  6E0A               	movwf	generateCRC@crcHigh^0,c
  8764  0027B2  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
  8765                           
  8766                           ;Modbus.c: 311:     crcLow = (crc & 0xFF00) >>8;
  8767  0027B4  C012  F008         	movff	generateCRC@crc,??_generateCRC
  8768  0027B8  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
  8769  0027BC  C009  F008         	movff	??_generateCRC+1,??_generateCRC
  8770  0027C0  6A09               	clrf	(??_generateCRC+1)^0,c
  8771  0027C2  5008               	movf	??_generateCRC^0,w,c
  8772  0027C4  6E0C               	movwf	generateCRC@crcLow^0,c
  8773  0027C6  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
  8774  0027C8                     
  8775                           ;Modbus.c: 313:     if(HiOrLo == 1){
  8776  0027C8  0407               	decf	generateCRC@HiOrLo^0,w,c
  8777  0027CA  A4D8               	btfss	status,2,c
  8778  0027CC  EFEA  F013         	goto	u4301
  8779  0027D0  EFEC  F013         	goto	u4300
  8780  0027D4                     u4301:
  8781  0027D4  EFF2  F013         	goto	l756
  8782  0027D8                     u4300:
  8783  0027D8                     
  8784                           ;Modbus.c: 314:         return crcHigh;
  8785  0027D8  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
  8786  0027DC  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
  8787  0027E0  EFF6  F013         	goto	l757
  8788  0027E4                     l756:
  8789                           
  8790                           ;Modbus.c: 316:         return crcLow;
  8791  0027E4  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
  8792  0027E8  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
  8793  0027EC                     l757:
  8794  0027EC  0012               	return		;funcret
  8795  0027EE                     __end_of_generateCRC:
  8796                           	opt callstack 0
  8797                           
  8798 ;; *************** function _UART1_Write_string *****************
  8799 ;; Defined at:
  8800 ;;		line 321 in file "Modbus.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  data            2    5[COMRAM] PTR unsigned int 
  8803 ;;		 -> MBRespon(64), 
  8804 ;;  data_len        2    7[COMRAM] int 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  i               2   10[COMRAM] int 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8819 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8820 ;;Total ram usage:        7 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    5
  8823 ;; This function calls:
  8824 ;;		_EUSART1_Write
  8825 ;;		_EUSART1_is_tx_done
  8826 ;;		_EUSART1_is_tx_ready
  8827 ;;		_TXMode
  8828 ;; This function is called by:
  8829 ;;		_ModbusFC03
  8830 ;;		_ModbusFC10
  8831 ;;		_ModbusError
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text47
  8836  0030F8                     __ptext47:
  8837                           	opt callstack 0
  8838  0030F8                     _UART1_Write_string:
  8839                           	opt callstack 24
  8840  0030F8                     
  8841                           ;Modbus.c: 321: void UART1_Write_string(unsigned int * data, int data_len);Modbus.c: 322
      +                          : {;Modbus.c: 323:     TXMode();
  8842  0030F8  ECD3  F01D         	call	_TXMode	;wreg free
  8843  0030FC                     l4987:
  8844  0030FC  EC68  F01D         	call	_EUSART1_is_tx_ready	;wreg free
  8845  003100  0900               	iorlw	0
  8846  003102  B4D8               	btfsc	status,2,c
  8847  003104  EF86  F018         	goto	u4371
  8848  003108  EF88  F018         	goto	u4370
  8849  00310C                     u4371:
  8850  00310C  EF7E  F018         	goto	l4987
  8851  003110                     u4370:
  8852  003110                     
  8853                           ;Modbus.c: 325:     for (int i = 0; i < data_len; i++) {
  8854  003110  0E00               	movlw	0
  8855  003112  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  8856  003114  0E00               	movlw	0
  8857  003116  6E0B               	movwf	UART1_Write_string@i^0,c
  8858  003118  EFA6  F018         	goto	l4997
  8859  00311C                     l4991:
  8860                           
  8861                           ;Modbus.c: 326:         EUSART1_Write(data[i]);
  8862  00311C  90D8               	bcf	status,0,c
  8863  00311E  340B               	rlcf	UART1_Write_string@i^0,w,c
  8864  003120  6ED9               	movwf	fsr2l,c
  8865  003122  340C               	rlcf	(UART1_Write_string@i+1)^0,w,c
  8866  003124  6EDA               	movwf	fsr2h,c
  8867  003126  5006               	movf	UART1_Write_string@data^0,w,c
  8868  003128  26D9               	addwf	fsr2l,f,c
  8869  00312A  5007               	movf	(UART1_Write_string@data+1)^0,w,c
  8870  00312C  22DA               	addwfc	fsr2h,f,c
  8871  00312E  50DF               	movf	indf2,w,c
  8872  003130  EC7A  F019         	call	_EUSART1_Write
  8873  003134                     l4993:
  8874  003134  EC8B  F01D         	call	_EUSART1_is_tx_done	;wreg free
  8875  003138  0900               	iorlw	0
  8876  00313A  B4D8               	btfsc	status,2,c
  8877  00313C  EFA2  F018         	goto	u4381
  8878  003140  EFA4  F018         	goto	u4380
  8879  003144                     u4381:
  8880  003144  EF9A  F018         	goto	l4993
  8881  003148                     u4380:
  8882  003148                     
  8883                           ;Modbus.c: 328:     }
  8884  003148  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  8885  00314A  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  8886  00314C                     l4997:
  8887  00314C  5008               	movf	UART1_Write_string@data_len^0,w,c
  8888  00314E  5C0B               	subwf	UART1_Write_string@i^0,w,c
  8889  003150  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  8890  003152  0A80               	xorlw	128
  8891  003154  6E0A               	movwf	??_UART1_Write_string^0,c
  8892  003156  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  8893  003158  0A80               	xorlw	128
  8894  00315A  580A               	subwfb	??_UART1_Write_string^0,w,c
  8895  00315C  A0D8               	btfss	status,0,c
  8896  00315E  EFB3  F018         	goto	u4391
  8897  003162  EFB5  F018         	goto	u4390
  8898  003166                     u4391:
  8899  003166  EF8E  F018         	goto	l4991
  8900  00316A                     u4390:
  8901  00316A  0012               	return		;funcret
  8902  00316C                     __end_of_UART1_Write_string:
  8903                           	opt callstack 0
  8904                           
  8905 ;; *************** function _TXMode *****************
  8906 ;; Defined at:
  8907 ;;		line 47 in file "Modbus.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		None
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    4
  8928 ;; This function calls:
  8929 ;;		Nothing
  8930 ;; This function is called by:
  8931 ;;		_UART1_Write_string
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text48
  8936  003BA6                     __ptext48:
  8937                           	opt callstack 0
  8938  003BA6                     _TXMode:
  8939                           	opt callstack 24
  8940  003BA6  8086               	bsf	134,0,c	;volatile
  8941  003BA8  8683               	bsf	131,3,c	;volatile
  8942  003BAA  0012               	return		;funcret
  8943  003BAC                     __end_of_TXMode:
  8944                           	opt callstack 0
  8945                           
  8946 ;; *************** function _EUSART1_is_tx_ready *****************
  8947 ;; Defined at:
  8948 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;		None
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      _Bool 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8966 ;;Total ram usage:        0 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    4
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_UART1_Write_string
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text49
  8977  003AD0                     __ptext49:
  8978                           	opt callstack 0
  8979  003AD0                     _EUSART1_is_tx_ready:
  8980                           	opt callstack 24
  8981  003AD0                     
  8982                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  8983  003AD0  0100               	movlb	0	; () banked
  8984  003AD2  51BB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  8985  003AD4  A4D8               	btfss	status,2,c
  8986  003AD6  EF6F  F01D         	goto	u3931
  8987  003ADA  EF72  F01D         	goto	u3930
  8988  003ADE                     u3931:
  8989  003ADE  0E01               	movlw	1
  8990  003AE0  EF73  F01D         	goto	u3940
  8991  003AE4                     u3930:
  8992  003AE4  0E00               	movlw	0
  8993  003AE6                     u3940:
  8994  003AE6                     
  8995                           ; BSR set to: 0
  8996  003AE6  0012               	return		;funcret
  8997  003AE8                     __end_of_EUSART1_is_tx_ready:
  8998                           	opt callstack 0
  8999                           
  9000 ;; *************** function _EUSART1_is_tx_done *****************
  9001 ;; Defined at:
  9002 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      _Bool 
  9009 ;; Registers used:
  9010 ;;		wreg
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    4
  9023 ;; This function calls:
  9024 ;;		Nothing
  9025 ;; This function is called by:
  9026 ;;		_UART1_Write_string
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text50
  9031  003B16                     __ptext50:
  9032                           	opt callstack 0
  9033  003B16                     _EUSART1_is_tx_done:
  9034                           	opt callstack 24
  9035  003B16                     
  9036                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
  9037  003B16  B29E               	btfsc	158,1,c	;volatile
  9038  003B18  EF90  F01D         	goto	u3951
  9039  003B1C  EF93  F01D         	goto	u3950
  9040  003B20                     u3951:
  9041  003B20  0E01               	movlw	1
  9042  003B22  EF94  F01D         	goto	u3956
  9043  003B26                     u3950:
  9044  003B26  0E00               	movlw	0
  9045  003B28                     u3956:
  9046  003B28  0012               	return		;funcret
  9047  003B2A                     __end_of_EUSART1_is_tx_done:
  9048                           	opt callstack 0
  9049                           
  9050 ;; *************** function _EUSART1_Write *****************
  9051 ;; Defined at:
  9052 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  txData          1    wreg     unsigned char 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  txData          1    4[COMRAM] unsigned char 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9070 ;;Total ram usage:        1 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    4
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_UART1_Write_string
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text51
  9081  0032F4                     __ptext51:
  9082                           	opt callstack 0
  9083  0032F4                     _EUSART1_Write:
  9084                           	opt callstack 24
  9085                           
  9086                           ;incstack = 0
  9087                           ;EUSART1_Write@txData stored from wreg
  9088  0032F4  6E05               	movwf	EUSART1_Write@txData^0,c
  9089  0032F6                     l4591:
  9090                           
  9091                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  9092  0032F6  0100               	movlb	0	; () banked
  9093  0032F8  51BB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  9094  0032FA  B4D8               	btfsc	status,2,c
  9095  0032FC  EF82  F019         	goto	u3961
  9096  003300  EF84  F019         	goto	u3960
  9097  003304                     u3961:
  9098  003304  EF7B  F019         	goto	l4591
  9099  003308                     u3960:
  9100  003308                     
  9101                           ; BSR set to: 0
  9102                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  9103  003308  010E               	movlb	14	; () banked
  9104  00330A  B9C5               	btfsc	197,4,b	;volatile
  9105  00330C  EF8A  F019         	goto	u3971
  9106  003310  EF8C  F019         	goto	u3970
  9107  003314                     u3971:
  9108  003314  EF90  F019         	goto	l471
  9109  003318                     u3970:
  9110  003318                     
  9111                           ; BSR set to: 14
  9112                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  9113  003318  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  9114                           
  9115                           ;mcc_generated_files/eusart1.c: 182:     }
  9116  00331C  EFA6  F019         	goto	l4605
  9117  003320                     l471:
  9118                           
  9119                           ; BSR set to: 14
  9120                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  9121  003320  99C5               	bcf	197,4,b	;volatile
  9122  003322                     
  9123                           ; BSR set to: 14
  9124                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  9125  003322  0E64               	movlw	low _eusart1TxBuffer
  9126  003324  0100               	movlb	0	; () banked
  9127  003326  25B5               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  9128  003328  6ED9               	movwf	fsr2l,c
  9129  00332A  6ADA               	clrf	fsr2h,c
  9130  00332C  0E03               	movlw	high _eusart1TxBuffer
  9131  00332E  22DA               	addwfc	fsr2h,f,c
  9132  003330  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  9133  003334                     
  9134                           ; BSR set to: 0
  9135  003334  2BB5               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  9136  003336                     
  9137                           ; BSR set to: 0
  9138                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  9139  003336  0E3F               	movlw	63
  9140  003338  65B5               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  9141  00333A  EFA1  F019         	goto	u3981
  9142  00333E  EFA3  F019         	goto	u3980
  9143  003342                     u3981:
  9144  003342  EFA5  F019         	goto	l4603
  9145  003346                     u3980:
  9146  003346                     
  9147                           ; BSR set to: 0
  9148                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  9149  003346  0E00               	movlw	0
  9150  003348  6FB5               	movwf	_eusart1TxHead& (0+255),b	;volatile
  9151  00334A                     l4603:
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  9155  00334A  07BB               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  9156  00334C                     l4605:
  9157                           
  9158                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  9159  00334C  010E               	movlb	14	; () banked
  9160  00334E  89C5               	bsf	197,4,b	;volatile
  9161  003350                     
  9162                           ; BSR set to: 14
  9163  003350  0012               	return		;funcret
  9164  003352                     __end_of_EUSART1_Write:
  9165                           	opt callstack 0
  9166                           
  9167 ;; *************** function _PrintModRespon *****************
  9168 ;; Defined at:
  9169 ;;		line 333 in file "Modbus.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  i               2   43[BANK0 ] int 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9186 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9187 ;;Total ram usage:        3 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:   13
  9190 ;; This function calls:
  9191 ;;		_EUSART2_is_tx_done
  9192 ;;		_EUSART2_is_tx_ready
  9193 ;;		_printf
  9194 ;; This function is called by:
  9195 ;;		_ModbusFC03
  9196 ;;		_ModbusFC10
  9197 ;;		_ModbusError
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text52
  9202  002620                     __ptext52:
  9203                           	opt callstack 0
  9204  002620                     _PrintModRespon:
  9205                           	opt callstack 16
  9206  002620                     
  9207                           ;Modbus.c: 338:     printf("Modbus Response Count %i:\r\n",MBResCnt);
  9208  002620  0E1B               	movlw	low STR_12
  9209  002622  0100               	movlb	0	; () banked
  9210  002624  6F7D               	movwf	printf@fmt& (0+255),b
  9211  002626  0EFE               	movlw	high STR_12
  9212  002628  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9213  00262A  C0A9  F07F         	movff	_MBResCnt,?_printf+2
  9214  00262E  C0AA  F080         	movff	_MBResCnt+1,?_printf+3
  9215  002632  ECE3  F01C         	call	_printf	;wreg free
  9216  002636                     l6551:
  9217  002636  EC74  F01D         	call	_EUSART2_is_tx_ready	;wreg free
  9218  00263A  0900               	iorlw	0
  9219  00263C  B4D8               	btfsc	status,2,c
  9220  00263E  EF23  F013         	goto	u6601
  9221  002642  EF25  F013         	goto	u6600
  9222  002646                     u6601:
  9223  002646  EF1B  F013         	goto	l6551
  9224  00264A                     u6600:
  9225  00264A                     
  9226                           ;Modbus.c: 340:     for(i=0; i< MBResCnt ; i++ ){
  9227  00264A  0E00               	movlw	0
  9228  00264C  0100               	movlb	0	; () banked
  9229  00264E  6F8C               	movwf	(PrintModRespon@i+1)& (0+255),b
  9230  002650  0E00               	movlw	0
  9231  002652  6F8B               	movwf	PrintModRespon@i& (0+255),b
  9232  002654  EF5B  F013         	goto	l6563
  9233  002658                     l6555:
  9234  002658  EC74  F01D         	call	_EUSART2_is_tx_ready	;wreg free
  9235  00265C  0900               	iorlw	0
  9236  00265E  B4D8               	btfsc	status,2,c
  9237  002660  EF34  F013         	goto	u6611
  9238  002664  EF36  F013         	goto	u6610
  9239  002668                     u6611:
  9240  002668  EF2C  F013         	goto	l6555
  9241  00266C                     u6610:
  9242  00266C                     
  9243                           ;Modbus.c: 342:         printf("   Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
  9244  00266C  0EA2               	movlw	low STR_14
  9245  00266E  0100               	movlb	0	; () banked
  9246  002670  6F7D               	movwf	printf@fmt& (0+255),b
  9247  002672  0EFE               	movlw	high STR_14
  9248  002674  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9249  002676  C08B  F07F         	movff	PrintModRespon@i,?_printf+2
  9250  00267A  C08C  F080         	movff	PrintModRespon@i+1,?_printf+3
  9251  00267E  90D8               	bcf	status,0,c
  9252  002680  358B               	rlcf	PrintModRespon@i& (0+255),w,b
  9253  002682  6ED9               	movwf	fsr2l,c
  9254  002684  358C               	rlcf	(PrintModRespon@i+1)& (0+255),w,b
  9255  002686  6EDA               	movwf	fsr2h,c
  9256  002688  0E41               	movlw	low _MBRespon
  9257  00268A  26D9               	addwf	fsr2l,f,c
  9258  00268C  0E01               	movlw	high _MBRespon
  9259  00268E  22DA               	addwfc	fsr2h,f,c
  9260  002690  CFDE F081          	movff	postinc2,?_printf+4
  9261  002694  CFDD F082          	movff	postdec2,?_printf+5
  9262  002698  ECE3  F01C         	call	_printf	;wreg free
  9263  00269C                     l6559:
  9264  00269C  EC80  F01D         	call	_EUSART2_is_tx_done	;wreg free
  9265  0026A0  0900               	iorlw	0
  9266  0026A2  B4D8               	btfsc	status,2,c
  9267  0026A4  EF56  F013         	goto	u6621
  9268  0026A8  EF58  F013         	goto	u6620
  9269  0026AC                     u6621:
  9270  0026AC  EF4E  F013         	goto	l6559
  9271  0026B0                     u6620:
  9272  0026B0                     
  9273                           ;Modbus.c: 345:     }
  9274  0026B0  0100               	movlb	0	; () banked
  9275  0026B2  4B8B               	infsnz	PrintModRespon@i& (0+255),f,b
  9276  0026B4  2B8C               	incf	(PrintModRespon@i+1)& (0+255),f,b
  9277  0026B6                     l6563:
  9278                           
  9279                           ; BSR set to: 0
  9280  0026B6  51A9               	movf	_MBResCnt& (0+255),w,b
  9281  0026B8  5D8B               	subwf	PrintModRespon@i& (0+255),w,b
  9282  0026BA  518C               	movf	(PrintModRespon@i+1)& (0+255),w,b
  9283  0026BC  0A80               	xorlw	128
  9284  0026BE  6E55               	movwf	??_PrintModRespon^0,c
  9285  0026C0  51AA               	movf	(_MBResCnt+1)& (0+255),w,b
  9286  0026C2  0A80               	xorlw	128
  9287  0026C4  5855               	subwfb	??_PrintModRespon^0,w,c
  9288  0026C6  A0D8               	btfss	status,0,c
  9289  0026C8  EF68  F013         	goto	u6631
  9290  0026CC  EF6A  F013         	goto	u6630
  9291  0026D0                     u6631:
  9292  0026D0  EF2C  F013         	goto	l6555
  9293  0026D4                     u6630:
  9294  0026D4                     l6565:
  9295  0026D4  EC74  F01D         	call	_EUSART2_is_tx_ready	;wreg free
  9296  0026D8  0900               	iorlw	0
  9297  0026DA  B4D8               	btfsc	status,2,c
  9298  0026DC  EF72  F013         	goto	u6641
  9299  0026E0  EF74  F013         	goto	u6640
  9300  0026E4                     u6641:
  9301  0026E4  EF6A  F013         	goto	l6565
  9302  0026E8                     u6640:
  9303  0026E8                     
  9304                           ;Modbus.c: 347:     printf("\r\n\n");
  9305  0026E8  0E41               	movlw	low (STR_19+17)
  9306  0026EA  0100               	movlb	0	; () banked
  9307  0026EC  6F7D               	movwf	printf@fmt& (0+255),b
  9308  0026EE  0EFF               	movlw	high (STR_19+17)
  9309  0026F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9310  0026F2  ECE3  F01C         	call	_printf	;wreg free
  9311  0026F6                     l6569:
  9312  0026F6  EC80  F01D         	call	_EUSART2_is_tx_done	;wreg free
  9313  0026FA  0900               	iorlw	0
  9314  0026FC  B4D8               	btfsc	status,2,c
  9315  0026FE  EF83  F013         	goto	u6651
  9316  002702  EF85  F013         	goto	u6650
  9317  002706                     u6651:
  9318  002706  EF7B  F013         	goto	l6569
  9319  00270A                     u6650:
  9320  00270A  0012               	return		;funcret
  9321  00270C                     __end_of_PrintModRespon:
  9322                           	opt callstack 0
  9323                           
  9324 ;; *************** function _printf *****************
  9325 ;; Defined at:
  9326 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  9329 ;;		 -> STR_46(29), STR_44(30), STR_43(24), STR_42(25), 
  9330 ;;		 -> STR_41(17), STR_40(27), STR_39(33), STR_37(36), 
  9331 ;;		 -> STR_36(67), STR_35(19), STR_34(55), STR_33(17), 
  9332 ;;		 -> STR_32(16), STR_31(4), STR_30(34), STR_29(54), 
  9333 ;;		 -> STR_28(52), STR_27(28), STR_24(42), STR_23(22), 
  9334 ;;		 -> STR_22(19), STR_21(61), STR_20(27), STR_19(21), 
  9335 ;;		 -> STR_18(33), STR_17(16), STR_16(24), STR_15(4), 
  9336 ;;		 -> STR_14(25), STR_13(28), STR_12(28), STR_11(36), 
  9337 ;;		 -> STR_10(4), STR_9(23), STR_8(32), STR_7(28), 
  9338 ;;		 -> STR_6(54), STR_5(24), STR_4(16), STR_2(28), 
  9339 ;;		 -> STR_1(21), 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  ap              2   41[BANK0 ] PTR void [1]
  9342 ;;		 -> ?_printf(2), 
  9343 ;;  ret             2    0        int 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  2   29[BANK0 ] int 
  9346 ;; Registers used:
  9347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9353 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9356 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9357 ;;Total ram usage:       14 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:   12
  9360 ;; This function calls:
  9361 ;;		_vfprintf
  9362 ;; This function is called by:
  9363 ;;		_main
  9364 ;;		_PrintMB400
  9365 ;;		_AddRxBuffToModBus
  9366 ;;		_PrintModbus
  9367 ;;		_checkCRC
  9368 ;;		_ModbusFC03
  9369 ;;		_PrintModRespon
  9370 ;;		_ModbusRx
  9371 ;;		_InitialiseString
  9372 ;;		_ReadRX232
  9373 ;;		_TogDebug
  9374 ;;		_ClearEEAddRange
  9375 ;;		_SaveCardDat
  9376 ;;		_ValidateCmd
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text53
  9381  0039C6                     __ptext53:
  9382                           	opt callstack 0
  9383  0039C6                     _printf:
  9384                           	opt callstack 18
  9385  0039C6  0E7F               	movlw	low (?_printf+2)
  9386  0039C8  0100               	movlb	0	; () banked
  9387  0039CA  6F89               	movwf	printf@ap& (0+255),b
  9388  0039CC  0E00               	movlw	high (?_printf+2)
  9389  0039CE  6F8A               	movwf	(printf@ap+1)& (0+255),b
  9390  0039D0                     
  9391                           ; BSR set to: 0
  9392  0039D0  0E00               	movlw	0
  9393  0039D2  6F77               	movwf	vfprintf@fp& (0+255),b
  9394  0039D4  0E00               	movlw	0
  9395  0039D6  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
  9396  0039D8  C07D  F079         	movff	printf@fmt,vfprintf@fmt
  9397  0039DC  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
  9398  0039E0  0E89               	movlw	low printf@ap
  9399  0039E2  6F7B               	movwf	vfprintf@ap& (0+255),b
  9400  0039E4  0E00               	movlw	high printf@ap
  9401  0039E6  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
  9402  0039E8  ECEA  F018         	call	_vfprintf	;wreg free
  9403  0039EC  0012               	return		;funcret
  9404  0039EE                     __end_of_printf:
  9405                           	opt callstack 0
  9406                           
  9407 ;; *************** function _vfprintf *****************
  9408 ;; Defined at:
  9409 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  9412 ;;		 -> NULL(0), 
  9413 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  9414 ;;		 -> STR_46(29), STR_44(30), STR_43(24), STR_42(25), 
  9415 ;;		 -> STR_41(17), STR_40(27), STR_39(33), STR_37(36), 
  9416 ;;		 -> STR_36(67), STR_35(19), STR_34(55), STR_33(17), 
  9417 ;;		 -> STR_32(16), STR_31(4), STR_30(34), STR_29(54), 
  9418 ;;		 -> STR_28(52), STR_27(28), STR_24(42), STR_23(22), 
  9419 ;;		 -> STR_22(19), STR_21(61), STR_20(27), STR_19(21), 
  9420 ;;		 -> STR_18(33), STR_17(16), STR_16(24), STR_15(4), 
  9421 ;;		 -> STR_14(25), STR_13(28), STR_12(28), STR_11(36), 
  9422 ;;		 -> STR_10(4), STR_9(23), STR_8(32), STR_7(28), 
  9423 ;;		 -> STR_6(54), STR_5(24), STR_4(16), STR_2(28), 
  9424 ;;		 -> STR_1(21), 
  9425 ;;  ap              2   27[BANK0 ] PTR PTR void 
  9426 ;;		 -> printf@ap(2), 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  9429 ;;		 -> STR_46(29), STR_44(30), STR_43(24), STR_42(25), 
  9430 ;;		 -> STR_41(17), STR_40(27), STR_39(33), STR_37(36), 
  9431 ;;		 -> STR_36(67), STR_35(19), STR_34(55), STR_33(17), 
  9432 ;;		 -> STR_32(16), STR_31(4), STR_30(34), STR_29(54), 
  9433 ;;		 -> STR_28(52), STR_27(28), STR_24(42), STR_23(22), 
  9434 ;;		 -> STR_22(19), STR_21(61), STR_20(27), STR_19(21), 
  9435 ;;		 -> STR_18(33), STR_17(16), STR_16(24), STR_15(4), 
  9436 ;;		 -> STR_14(25), STR_13(28), STR_12(28), STR_11(36), 
  9437 ;;		 -> STR_10(4), STR_9(23), STR_8(32), STR_7(28), 
  9438 ;;		 -> STR_6(54), STR_5(24), STR_4(16), STR_2(28), 
  9439 ;;		 -> STR_1(21), 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  2   23[BANK0 ] int 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9449 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;Total ram usage:        8 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:   11
  9456 ;; This function calls:
  9457 ;;		_vfpfcnvrt
  9458 ;; This function is called by:
  9459 ;;		_printf
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text54
  9464  0031D4                     __ptext54:
  9465                           	opt callstack 0
  9466  0031D4                     _vfprintf:
  9467                           	opt callstack 18
  9468  0031D4                     
  9469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9470  0031D4  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  9471  0031D8  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9472  0031DC                     
  9473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9474  0031DC  0E00               	movlw	0
  9475  0031DE  0101               	movlb	1	; () banked
  9476  0031E0  6FAD               	movwf	(_nout+1)& (0+255),b
  9477  0031E2  0E00               	movlw	0
  9478  0031E4  6FAC               	movwf	_nout& (0+255),b
  9479                           
  9480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9481  0031E6  EF08  F019         	goto	l6259
  9482  0031EA                     l6257:
  9483                           
  9484                           ; BSR set to: 1
  9485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9486  0031EA  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  9487  0031EE  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9488  0031F2  0E53               	movlw	low vfprintf@cfmt
  9489  0031F4  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  9490  0031F6  0E00               	movlw	high vfprintf@cfmt
  9491  0031F8  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9492  0031FA  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  9493  0031FE  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9494  003202  EC95  F000         	call	_vfpfcnvrt	;wreg free
  9495  003206  5049               	movf	?_vfpfcnvrt^0,w,c
  9496  003208  0101               	movlb	1	; () banked
  9497  00320A  27AC               	addwf	_nout& (0+255),f,b
  9498  00320C  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  9499  00320E  23AD               	addwfc	(_nout+1)& (0+255),f,b
  9500  003210                     l6259:
  9501                           
  9502                           ; BSR set to: 1
  9503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9504  003210  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  9505  003214  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9506  003218                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9507  003218  6AF8               	clrf	tblptru,c
  9508  00321A                     	endif
  9509  00321A                     	if	0	;tblptru may be non-zero
  9510  00321A                     	endif
  9511  00321A  0008               	tblrd		*
  9512  00321C  50F5               	movf	tablat,w,c
  9513  00321E  0900               	iorlw	0
  9514  003220  A4D8               	btfss	status,2,c
  9515  003222  EF15  F019         	goto	u6261
  9516  003226  EF17  F019         	goto	u6260
  9517  00322A                     u6261:
  9518  00322A  EFF5  F018         	goto	l6257
  9519  00322E                     u6260:
  9520  00322E                     
  9521                           ; BSR set to: 1
  9522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9523  00322E  C1AC  F077         	movff	_nout,?_vfprintf
  9524  003232  C1AD  F078         	movff	_nout+1,?_vfprintf+1
  9525  003236                     
  9526                           ; BSR set to: 1
  9527  003236  0012               	return		;funcret
  9528  003238                     __end_of_vfprintf:
  9529                           	opt callstack 0
  9530                           
  9531 ;; *************** function _vfpfcnvrt *****************
  9532 ;; Defined at:
  9533 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  9536 ;;		 -> NULL(0), 
  9537 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  9538 ;;		 -> vfprintf@cfmt(2), 
  9539 ;;  ap              2   76[COMRAM] PTR PTR void 
  9540 ;;		 -> printf@ap(2), 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  llu             8   15[BANK0 ] unsigned long long 
  9543 ;;  ll              8    0[BANK0 ] long long 
  9544 ;;  f               4    0        long long 
  9545 ;;  vp              3    0        PTR void 
  9546 ;;  ct              3    0        unsigned char [3]
  9547 ;;  done            2   11[BANK0 ] int 
  9548 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  9549 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1443(20), ValidateCmd@ConfName_1439(20), ValidateCmd@ConfName(20), 
  9550 ;;		 -> STR_26(9), STR_25(12), InitialiseString@SerialNum(11), Command(16), 
  9551 ;;  i               2    0        int 
  9552 ;;  c               1   10[BANK0 ] unsigned char 
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  2   72[COMRAM] int 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9562 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9563 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;Total ram usage:       33 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:   10
  9569 ;; This function calls:
  9570 ;;		_atoi
  9571 ;;		_dtoa
  9572 ;;		_fputc
  9573 ;;		_isdigit
  9574 ;;		_stoa
  9575 ;;		_utoa
  9576 ;;		_xtoa
  9577 ;; This function is called by:
  9578 ;;		_vfprintf
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text55
  9583  00012A                     __ptext55:
  9584                           	opt callstack 0
  9585  00012A                     _vfpfcnvrt:
  9586                           	opt callstack 18
  9587  00012A                     
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9589  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9590  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9591  000132  CFDE FFF6          	movff	postinc2,tblptrl
  9592  000136  CFDD FFF7          	movff	postdec2,tblptrh
  9593  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9594  00013A  6AF8               	clrf	tblptru,c
  9595  00013C                     	endif
  9596  00013C                     	if	0	;tblptru may be non-zero
  9597  00013C                     	endif
  9598  00013C  0008               	tblrd		*
  9599  00013E  50F5               	movf	tablat,w,c
  9600  000140  0A25               	xorlw	37
  9601  000142  A4D8               	btfss	status,2,c
  9602  000144  EFA6  F000         	goto	u6091
  9603  000148  EFA8  F000         	goto	u6090
  9604  00014C                     u6091:
  9605  00014C  EF3D  F003         	goto	l6231
  9606  000150                     u6090:
  9607  000150                     
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9609  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9610  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9611  000158  2ADE               	incf	postinc2,f,c
  9612  00015A  0E00               	movlw	0
  9613  00015C  22DD               	addwfc	postdec2,f,c
  9614  00015E                     
  9615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9616  00015E  0E00               	movlw	0
  9617  000160  0100               	movlb	0	; () banked
  9618  000162  6FA4               	movwf	(_width+1)& (0+255),b
  9619  000164  0E00               	movlw	0
  9620  000166  6FA3               	movwf	_width& (0+255),b
  9621  000168  C0A3  F057         	movff	_width,_flags
  9622  00016C  C0A4  F058         	movff	_width+1,_flags+1
  9623  000170                     
  9624                           ; BSR set to: 0
  9625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9626  000170  69A5               	setf	_prec& (0+255),b
  9627  000172  69A6               	setf	(_prec+1)& (0+255),b
  9628  000174                     
  9629                           ; BSR set to: 0
  9630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9631  000174  0E00               	movlw	0
  9632  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9633  000178  0E00               	movlw	0
  9634  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
  9635                           
  9636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9637  00017C  EF07  F001         	goto	l6153
  9638  000180                     l6127:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9642  000180  8057               	bsf	_flags^0,0,c
  9643  000182                     l6129:
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9647  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9648  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9649  00018A  2ADE               	incf	postinc2,f,c
  9650  00018C  0E00               	movlw	0
  9651  00018E  22DD               	addwfc	postdec2,f,c
  9652                           
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9654  000190  EF07  F001         	goto	l6153
  9655  000194                     l6131:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9659  000194  8257               	bsf	_flags^0,1,c
  9660  000196  EFC1  F000         	goto	l6129
  9661  00019A                     l6135:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9665  00019A  8457               	bsf	_flags^0,2,c
  9666  00019C  EFC1  F000         	goto	l6129
  9667  0001A0                     l6139:
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9671  0001A0  8657               	bsf	_flags^0,3,c
  9672  0001A2  EFC1  F000         	goto	l6129
  9673  0001A6                     l6143:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9677  0001A6  8857               	bsf	_flags^0,4,c
  9678  0001A8  EFC1  F000         	goto	l6129
  9679  0001AC                     l6147:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9683  0001AC  0E00               	movlw	0
  9684  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9685  0001B0  0E01               	movlw	1
  9686  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
  9687                           
  9688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9689  0001B4  EF07  F001         	goto	l6153
  9690  0001B8                     l6151:
  9691                           
  9692                           ; BSR set to: 0
  9693  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9694  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9695  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  9696  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  9697  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9698  0001C8  6AF8               	clrf	tblptru,c
  9699  0001CA                     	endif
  9700  0001CA                     	if	0	;tblptru may be non-zero
  9701  0001CA                     	endif
  9702  0001CA  0008               	tblrd		*
  9703  0001CC  50F5               	movf	tablat,w,c
  9704  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  9705  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  9706                           
  9707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9708                           ; Switch size 1, requested type "simple"
  9709                           ; Number of cases is 1, Range of values is 0 to 0
  9710                           ; switch strategies available:
  9711                           ; Name         Instructions Cycles
  9712                           ; simple_byte            4     3 (average)
  9713                           ;	Chosen strategy is simple_byte
  9714  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  9715  0001D4  0A00               	xorlw	0	; case 0
  9716  0001D6  B4D8               	btfsc	status,2,c
  9717  0001D8  EFF0  F000         	goto	l7081
  9718  0001DC  EFD6  F000         	goto	l6147
  9719  0001E0                     l7081:
  9720                           
  9721                           ; BSR set to: 0
  9722                           ; Switch size 1, requested type "simple"
  9723                           ; Number of cases is 5, Range of values is 32 to 48
  9724                           ; switch strategies available:
  9725                           ; Name         Instructions Cycles
  9726                           ; simple_byte           16     9 (average)
  9727                           ;	Chosen strategy is simple_byte
  9728  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  9729  0001E2  0A20               	xorlw	32	; case 32
  9730  0001E4  B4D8               	btfsc	status,2,c
  9731  0001E6  EFD0  F000         	goto	l6139
  9732  0001EA  0A03               	xorlw	3	; case 35
  9733  0001EC  B4D8               	btfsc	status,2,c
  9734  0001EE  EFD3  F000         	goto	l6143
  9735  0001F2  0A08               	xorlw	8	; case 43
  9736  0001F4  B4D8               	btfsc	status,2,c
  9737  0001F6  EFCD  F000         	goto	l6135
  9738  0001FA  0A06               	xorlw	6	; case 45
  9739  0001FC  B4D8               	btfsc	status,2,c
  9740  0001FE  EFC0  F000         	goto	l6127
  9741  000202  0A1D               	xorlw	29	; case 48
  9742  000204  B4D8               	btfsc	status,2,c
  9743  000206  EFCA  F000         	goto	l6131
  9744  00020A  EFD6  F000         	goto	l6147
  9745  00020E                     l6153:
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9749  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
  9750  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9751  000212  B4D8               	btfsc	status,2,c
  9752  000214  EF0E  F001         	goto	u6101
  9753  000218  EF10  F001         	goto	u6100
  9754  00021C                     u6101:
  9755  00021C  EFDC  F000         	goto	l6151
  9756  000220                     u6100:
  9757  000220                     
  9758                           ; BSR set to: 0
  9759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9760  000220  A057               	btfss	_flags^0,0,c
  9761  000222  EF15  F001         	goto	u6111
  9762  000226  EF17  F001         	goto	u6110
  9763  00022A                     u6111:
  9764  00022A  EF18  F001         	goto	l6157
  9765  00022E                     u6110:
  9766  00022E                     
  9767                           ; BSR set to: 0
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9769  00022E  9257               	bcf	_flags^0,1,c
  9770  000230                     l6157:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9774  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9775  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9776  000238  CFDE FFF6          	movff	postinc2,tblptrl
  9777  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  9778  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9779  000240  6AF8               	clrf	tblptru,c
  9780  000242                     	endif
  9781  000242                     	if	0	;tblptru may be non-zero
  9782  000242                     	endif
  9783  000242  0008               	tblrd		*
  9784  000244  50F5               	movf	tablat,w,c
  9785  000246  0A2A               	xorlw	42
  9786  000248  A4D8               	btfss	status,2,c
  9787  00024A  EF29  F001         	goto	u6121
  9788  00024E  EF2B  F001         	goto	u6120
  9789  000252                     u6121:
  9790  000252  EF54  F001         	goto	l6165
  9791  000256                     u6120:
  9792  000256                     
  9793                           ; BSR set to: 0
  9794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9795  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9796  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9797  00025E  2ADE               	incf	postinc2,f,c
  9798  000260  0E00               	movlw	0
  9799  000262  22DD               	addwfc	postdec2,f,c
  9800                           
  9801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9802  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9803  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9804  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9805  000270  0E02               	movlw	2
  9806  000272  26DE               	addwf	postinc2,f,c
  9807  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9808  000278  0E00               	movlw	0
  9809  00027A  22DD               	addwfc	postdec2,f,c
  9810  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9811  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9812  000284  CFDE F0A3          	movff	postinc2,_width
  9813  000288  CFDD F0A4          	movff	postdec2,_width+1
  9814  00028C                     
  9815                           ; BSR set to: 0
  9816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9817  00028C  BFA4               	btfsc	(_width+1)& (0+255),7,b
  9818  00028E  EF4D  F001         	goto	u6130
  9819  000292  EF4B  F001         	goto	u6131
  9820  000296                     u6131:
  9821  000296  EF99  F001         	goto	l6175
  9822  00029A                     u6130:
  9823  00029A                     
  9824                           ; BSR set to: 0
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9826  00029A  8057               	bsf	_flags^0,0,c
  9827                           
  9828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9829  00029C  6DA3               	negf	_width& (0+255),b
  9830  00029E  1FA4               	comf	(_width+1)& (0+255),f,b
  9831  0002A0  B0D8               	btfsc	status,0,c
  9832  0002A2  2BA4               	incf	(_width+1)& (0+255),f,b
  9833  0002A4  EF99  F001         	goto	l6175
  9834  0002A8                     l6165:
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9838  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9839  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9840  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  9841  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  9842  0002B8  EC44  F00C         	call	_atoi	;wreg free
  9843  0002BC  C00C  F0A3         	movff	?_atoi,_width
  9844  0002C0  C00D  F0A4         	movff	?_atoi+1,_width+1
  9845                           
  9846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9847  0002C4  EF6B  F001         	goto	l6169
  9848  0002C8                     l6167:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9852  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9853  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9854  0002D0  2ADE               	incf	postinc2,f,c
  9855  0002D2  0E00               	movlw	0
  9856  0002D4  22DD               	addwfc	postdec2,f,c
  9857  0002D6                     l6169:
  9858  0002D6  0ED0               	movlw	208
  9859  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  9860  0002DA  0EFF               	movlw	255
  9861  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  9862  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9863  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9864  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  9865  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  9866  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9867  0002EE  6AF8               	clrf	tblptru,c
  9868  0002F0                     	endif
  9869  0002F0                     	if	0	;tblptru may be non-zero
  9870  0002F0                     	endif
  9871  0002F0  0008               	tblrd		*
  9872  0002F2  50F5               	movf	tablat,w,c
  9873  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  9874  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  9875  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  9876  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  9877  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  9878  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  9879  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  9880  000302  E10A               	bnz	u6140
  9881  000304  0E0A               	movlw	10
  9882  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  9883  000308  A0D8               	btfss	status,0,c
  9884  00030A  EF89  F001         	goto	u6141
  9885  00030E  EF8C  F001         	goto	u6140
  9886  000312                     u6141:
  9887  000312  0E01               	movlw	1
  9888  000314  EF8D  F001         	goto	u6150
  9889  000318                     u6140:
  9890  000318  0E00               	movlw	0
  9891  00031A                     u6150:
  9892  00031A  0100               	movlb	0	; () banked
  9893  00031C  6F6D               	movwf	_vfpfcnvrt$1562& (0+255),b
  9894  00031E  6B6E               	clrf	(_vfpfcnvrt$1562+1)& (0+255),b
  9895  000320                     
  9896                           ; BSR set to: 0
  9897  000320  516D               	movf	_vfpfcnvrt$1562& (0+255),w,b
  9898  000322  116E               	iorwf	(_vfpfcnvrt$1562+1)& (0+255),w,b
  9899  000324  A4D8               	btfss	status,2,c
  9900  000326  EF97  F001         	goto	u6161
  9901  00032A  EF99  F001         	goto	u6160
  9902  00032E                     u6161:
  9903  00032E  EF64  F001         	goto	l6167
  9904  000332                     u6160:
  9905  000332                     l6175:
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9909  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9910  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9911  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  9912  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  9913  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9914  000342  6AF8               	clrf	tblptru,c
  9915  000344                     	endif
  9916  000344                     	if	0	;tblptru may be non-zero
  9917  000344                     	endif
  9918  000344  0008               	tblrd		*
  9919  000346  50F5               	movf	tablat,w,c
  9920  000348  0A64               	xorlw	100
  9921  00034A  B4D8               	btfsc	status,2,c
  9922  00034C  EFAA  F001         	goto	u6171
  9923  000350  EFAC  F001         	goto	u6170
  9924  000354                     u6171:
  9925  000354  EFBF  F001         	goto	l6179
  9926  000358                     u6170:
  9927  000358                     
  9928                           ; BSR set to: 0
  9929  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9930  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9931  000360  CFDE FFF6          	movff	postinc2,tblptrl
  9932  000364  CFDD FFF7          	movff	postdec2,tblptrh
  9933  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9934  000368  6AF8               	clrf	tblptru,c
  9935  00036A                     	endif
  9936  00036A                     	if	0	;tblptru may be non-zero
  9937  00036A                     	endif
  9938  00036A  0008               	tblrd		*
  9939  00036C  50F5               	movf	tablat,w,c
  9940  00036E  0A69               	xorlw	105
  9941  000370  A4D8               	btfss	status,2,c
  9942  000372  EFBD  F001         	goto	u6181
  9943  000376  EFBF  F001         	goto	u6180
  9944  00037A                     u6181:
  9945  00037A  EFFF  F001         	goto	l6185
  9946  00037E                     u6180:
  9947  00037E                     l6179:
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9951  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9952  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9953  000386  2ADE               	incf	postinc2,f,c
  9954  000388  0E00               	movlw	0
  9955  00038A  22DD               	addwfc	postdec2,f,c
  9956                           
  9957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9958  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9959  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9960  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9961  000398  0E02               	movlw	2
  9962  00039A  26DE               	addwf	postinc2,f,c
  9963  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9964  0003A0  0E00               	movlw	0
  9965  0003A2  22DD               	addwfc	postdec2,f,c
  9966  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9967  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9968  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  9969  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  9970  0003B4  0E00               	movlw	0
  9971  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9972  0003B8  0EFF               	movlw	-1
  9973  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9974  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9975  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9976  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9977  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9978  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9979  0003C6                     
  9980                           ; BSR set to: 0
  9981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9982  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  9983  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9984  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
  9985  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9986  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9987  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9988  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9989  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9990  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9991  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9992  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  9993  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  9994  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9995  0003FA  EF59  F003         	goto	l1102
  9996  0003FE                     l6185:
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 10000  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10001  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10002  000406  CFDE FFF6          	movff	postinc2,tblptrl
 10003  00040A  CFDD FFF7          	movff	postdec2,tblptrh
 10004  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10005  00040E  6AF8               	clrf	tblptru,c
 10006  000410                     	endif
 10007  000410                     	if	0	;tblptru may be non-zero
 10008  000410                     	endif
 10009  000410  0008               	tblrd		*
 10010  000412  50F5               	movf	tablat,w,c
 10011  000414  0A73               	xorlw	115
 10012  000416  A4D8               	btfss	status,2,c
 10013  000418  EF10  F002         	goto	u6191
 10014  00041C  EF12  F002         	goto	u6190
 10015  000420                     u6191:
 10016  000420  EF3D  F002         	goto	l6193
 10017  000424                     u6190:
 10018  000424                     
 10019                           ; BSR set to: 0
 10020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 10021  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10022  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10023  00042C  2ADE               	incf	postinc2,f,c
 10024  00042E  0E00               	movlw	0
 10025  000430  22DD               	addwfc	postdec2,f,c
 10026                           
 10027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 10028  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10029  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10030  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10031  00043E  0E02               	movlw	2
 10032  000440  26DE               	addwf	postinc2,f,c
 10033  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10034  000446  0E00               	movlw	0
 10035  000448  22DD               	addwfc	postdec2,f,c
 10036  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10037  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10038  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 10039  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 10040  00045A                     
 10041                           ; BSR set to: 0
 10042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 10043  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 10044  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 10045  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 10046  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 10047  00046A  EC77  F00B         	call	_stoa	;wreg free
 10048  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 10049  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 10050  000476  EF59  F003         	goto	l1102
 10051  00047A                     l6193:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 10055  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10056  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10057  000482  CFDE FFF6          	movff	postinc2,tblptrl
 10058  000486  CFDD FFF7          	movff	postdec2,tblptrh
 10059  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10060  00048A  6AF8               	clrf	tblptru,c
 10061  00048C                     	endif
 10062  00048C                     	if	0	;tblptru may be non-zero
 10063  00048C                     	endif
 10064  00048C  0008               	tblrd		*
 10065  00048E  50F5               	movf	tablat,w,c
 10066  000490  0A75               	xorlw	117
 10067  000492  A4D8               	btfss	status,2,c
 10068  000494  EF4E  F002         	goto	u6201
 10069  000498  EF50  F002         	goto	u6200
 10070  00049C                     u6201:
 10071  00049C  EF91  F002         	goto	l6201
 10072  0004A0                     u6200:
 10073  0004A0                     
 10074                           ; BSR set to: 0
 10075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 10076  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10077  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10078  0004A8  2ADE               	incf	postinc2,f,c
 10079  0004AA  0E00               	movlw	0
 10080  0004AC  22DD               	addwfc	postdec2,f,c
 10081                           
 10082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10083  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10084  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10085  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10086  0004BA  0E02               	movlw	2
 10087  0004BC  26DE               	addwf	postinc2,f,c
 10088  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10089  0004C2  0E00               	movlw	0
 10090  0004C4  22DD               	addwfc	postdec2,f,c
 10091  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10092  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10093  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 10094  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 10095  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10096  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10097  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10098  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10099  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10100  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10101  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10102  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10103  0004EA                     
 10104                           ; BSR set to: 0
 10105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 10106  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 10107  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10108  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 10109  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10110  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10111  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10112  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10113  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10114  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10115  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10116  000512  ECA7  F009         	call	_utoa	;wreg free
 10117  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 10118  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 10119  00051E  EF59  F003         	goto	l1102
 10120  000522                     l6201:
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10124  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10125  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10126  00052A  CFDE FFF6          	movff	postinc2,tblptrl
 10127  00052E  CFDD FFF7          	movff	postdec2,tblptrh
 10128  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10129  000532  6AF8               	clrf	tblptru,c
 10130  000534                     	endif
 10131  000534                     	if	0	;tblptru may be non-zero
 10132  000534                     	endif
 10133  000534  0008               	tblrd		*
 10134  000536  50F5               	movf	tablat,w,c
 10135  000538  0A78               	xorlw	120
 10136  00053A  B4D8               	btfsc	status,2,c
 10137  00053C  EFA2  F002         	goto	u6211
 10138  000540  EFA4  F002         	goto	u6210
 10139  000544                     u6211:
 10140  000544  EFB7  F002         	goto	l6205
 10141  000548                     u6210:
 10142  000548                     
 10143                           ; BSR set to: 0
 10144  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10145  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10146  000550  CFDE FFF6          	movff	postinc2,tblptrl
 10147  000554  CFDD FFF7          	movff	postdec2,tblptrh
 10148  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10149  000558  6AF8               	clrf	tblptru,c
 10150  00055A                     	endif
 10151  00055A                     	if	0	;tblptru may be non-zero
 10152  00055A                     	endif
 10153  00055A  0008               	tblrd		*
 10154  00055C  50F5               	movf	tablat,w,c
 10155  00055E  0A58               	xorlw	88
 10156  000560  A4D8               	btfss	status,2,c
 10157  000562  EFB5  F002         	goto	u6221
 10158  000566  EFB7  F002         	goto	u6220
 10159  00056A                     u6221:
 10160  00056A  EF06  F003         	goto	l6215
 10161  00056E                     u6220:
 10162  00056E                     l6205:
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 10166  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10167  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10168  000576  CFDE FFF6          	movff	postinc2,tblptrl
 10169  00057A  CFDD FFF7          	movff	postdec2,tblptrh
 10170  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10171  00057E  6AF8               	clrf	tblptru,c
 10172  000580                     	endif
 10173  000580                     	if	0	;tblptru may be non-zero
 10174  000580                     	endif
 10175  000580  0008               	tblrd		*
 10176  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 10177  000586                     
 10178                           ; BSR set to: 0
 10179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 10180  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10181  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10182  00058E  2ADE               	incf	postinc2,f,c
 10183  000590  0E00               	movlw	0
 10184  000592  22DD               	addwfc	postdec2,f,c
 10185  000594                     
 10186                           ; BSR set to: 0
 10187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10188  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10189  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10190  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10191  0005A0  0E02               	movlw	2
 10192  0005A2  26DE               	addwf	postinc2,f,c
 10193  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10194  0005A8  0E00               	movlw	0
 10195  0005AA  22DD               	addwfc	postdec2,f,c
 10196  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10197  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10198  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 10199  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 10200  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10201  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10202  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10203  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10204  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10205  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10206  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10207  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10208  0005D0                     
 10209                           ; BSR set to: 0
 10210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 10211  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 10212  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10213  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 10214  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10215  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10216  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10217  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10218  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10219  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10220  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10221  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 10222  0005FC  ECCA  F004         	call	_xtoa	;wreg free
 10223  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 10224  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10225  000608  EF59  F003         	goto	l1102
 10226  00060C                     l6215:
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10230  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10231  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10232  000614  CFDE FFF6          	movff	postinc2,tblptrl
 10233  000618  CFDD FFF7          	movff	postdec2,tblptrh
 10234  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10235  00061C  6AF8               	clrf	tblptru,c
 10236  00061E                     	endif
 10237  00061E                     	if	0	;tblptru may be non-zero
 10238  00061E                     	endif
 10239  00061E  0008               	tblrd		*
 10240  000620  50F5               	movf	tablat,w,c
 10241  000622  0A25               	xorlw	37
 10242  000624  A4D8               	btfss	status,2,c
 10243  000626  EF17  F003         	goto	u6231
 10244  00062A  EF19  F003         	goto	u6230
 10245  00062E                     u6231:
 10246  00062E  EF30  F003         	goto	l6225
 10247  000632                     u6230:
 10248  000632                     
 10249                           ; BSR set to: 0
 10250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10251  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10252  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10253  00063A  2ADE               	incf	postinc2,f,c
 10254  00063C  0E00               	movlw	0
 10255  00063E  22DD               	addwfc	postdec2,f,c
 10256  000640                     
 10257                           ; BSR set to: 0
 10258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10259  000640  0E00               	movlw	0
 10260  000642  6E08               	movwf	(fputc@c+1)^0,c
 10261  000644  0E25               	movlw	37
 10262  000646  6E07               	movwf	fputc@c^0,c
 10263  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 10264  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10265  000650  ECAE  F016         	call	_fputc	;wreg free
 10266  000654                     l6221:
 10267                           
 10268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10269  000654  0E00               	movlw	0
 10270  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 10271  000658  0E01               	movlw	1
 10272  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
 10273  00065C  EF59  F003         	goto	l1102
 10274  000660                     l6225:
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10278  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10279  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10280  000668  2ADE               	incf	postinc2,f,c
 10281  00066A  0E00               	movlw	0
 10282  00066C  22DD               	addwfc	postdec2,f,c
 10283  00066E                     
 10284                           ; BSR set to: 0
 10285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10286  00066E  0E00               	movlw	0
 10287  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 10288  000672  0E00               	movlw	0
 10289  000674  6E49               	movwf	?_vfpfcnvrt^0,c
 10290  000676  EF59  F003         	goto	l1102
 10291  00067A                     l6231:
 10292                           
 10293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10294  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10295  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10296  000682  CFDE FFF6          	movff	postinc2,tblptrl
 10297  000686  CFDD FFF7          	movff	postdec2,tblptrh
 10298  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10299  00068A  6AF8               	clrf	tblptru,c
 10300  00068C                     	endif
 10301  00068C                     	if	0	;tblptru may be non-zero
 10302  00068C                     	endif
 10303  00068C  0008               	tblrd		*
 10304  00068E  50F5               	movf	tablat,w,c
 10305  000690  6E07               	movwf	fputc@c^0,c
 10306  000692  6A08               	clrf	(fputc@c+1)^0,c
 10307  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 10308  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10309  00069C  ECAE  F016         	call	_fputc	;wreg free
 10310  0006A0                     
 10311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10312  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10313  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10314  0006A8  2ADE               	incf	postinc2,f,c
 10315  0006AA  0E00               	movlw	0
 10316  0006AC  22DD               	addwfc	postdec2,f,c
 10317  0006AE  EF2A  F003         	goto	l6221
 10318  0006B2                     l1102:
 10319  0006B2  0012               	return		;funcret
 10320  0006B4                     __end_of_vfpfcnvrt:
 10321                           	opt callstack 0
 10322                           
 10323 ;; *************** function _xtoa *****************
 10324 ;; Defined at:
 10325 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 10328 ;;		 -> NULL(0), 
 10329 ;;  d               8   35[COMRAM] unsigned long long 
 10330 ;;  x               1   43[COMRAM] unsigned char 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  n               8   60[COMRAM] unsigned long long 
 10333 ;;  c               2   70[COMRAM] int 
 10334 ;;  i               2   68[COMRAM] int 
 10335 ;;  w               2   58[COMRAM] int 
 10336 ;;  p               2   56[COMRAM] int 
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  2   33[COMRAM] int 
 10339 ;; Registers used:
 10340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10346 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10347 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10348 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10349 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10350 ;;Total ram usage:       39 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; Hardware stack levels required when called:    9
 10353 ;; This function calls:
 10354 ;;		_isalpha
 10355 ;;		_isupper
 10356 ;;		_pad
 10357 ;;		_toupper
 10358 ;; This function is called by:
 10359 ;;		_vfpfcnvrt
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           	psect	text56
 10364  000994                     __ptext56:
 10365                           	opt callstack 0
 10366  000994                     _xtoa:
 10367                           	opt callstack 18
 10368  000994                     
 10369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10370  000994  0100               	movlb	0	; () banked
 10371  000996  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10372  000998  EFD0  F004         	goto	u5851
 10373  00099C  EFD2  F004         	goto	u5850
 10374  0009A0                     u5851:
 10375  0009A0  EFD3  F004         	goto	l6013
 10376  0009A4                     u5850:
 10377  0009A4                     
 10378                           ; BSR set to: 0
 10379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10380  0009A4  9257               	bcf	_flags^0,1,c
 10381  0009A6                     l6013:
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10385  0009A6  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10386  0009A8  EFE0  F004         	goto	u5860
 10387  0009AC  51A6               	movf	(_prec+1)& (0+255),w,b
 10388  0009AE  E106               	bnz	u5861
 10389  0009B0  05A5               	decf	_prec& (0+255),w,b
 10390  0009B2  B0D8               	btfsc	status,0,c
 10391  0009B4  EFDE  F004         	goto	u5861
 10392  0009B8  EFE0  F004         	goto	u5860
 10393  0009BC                     u5861:
 10394  0009BC  EFE6  F004         	goto	l1048
 10395  0009C0                     u5860:
 10396  0009C0                     
 10397                           ; BSR set to: 0
 10398  0009C0  0E00               	movlw	0
 10399  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
 10400  0009C4  0E01               	movlw	1
 10401  0009C6  6E39               	movwf	xtoa@p^0,c
 10402  0009C8  EFEA  F004         	goto	l1050
 10403  0009CC                     l1048:
 10404                           
 10405                           ; BSR set to: 0
 10406  0009CC  C0A5  F039         	movff	_prec,xtoa@p
 10407  0009D0  C0A6  F03A         	movff	_prec+1,xtoa@p+1
 10408  0009D4                     l1050:
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 10412  0009D4  C0A3  F03B         	movff	_width,xtoa@w
 10413  0009D8  C0A4  F03C         	movff	_width+1,xtoa@w+1
 10414                           
 10415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 10416  0009DC  A857               	btfss	_flags^0,4,c
 10417  0009DE  EFF3  F004         	goto	u5871
 10418  0009E2  EFF5  F004         	goto	u5870
 10419  0009E6                     u5871:
 10420  0009E6  EFF9  F004         	goto	l6019
 10421  0009EA                     u5870:
 10422  0009EA                     
 10423                           ; BSR set to: 0
 10424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 10425  0009EA  0EFE               	movlw	254
 10426  0009EC  263B               	addwf	xtoa@w^0,f,c
 10427  0009EE  0EFF               	movlw	255
 10428  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
 10429  0009F2                     l6019:
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 10433  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
 10434  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 10435  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 10436  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 10437  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 10438  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 10439  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 10440  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 10441  000A12                     
 10442                           ; BSR set to: 0
 10443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 10444  000A12  0E00               	movlw	0
 10445  000A14  6E46               	movwf	(xtoa@i+1)^0,c
 10446  000A16  0E1F               	movlw	31
 10447  000A18  6E45               	movwf	xtoa@i^0,c
 10448  000A1A                     
 10449                           ; BSR set to: 0
 10450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 10451  000A1A  0E00               	movlw	0
 10452  000A1C  0101               	movlb	1	; () banked
 10453  000A1E  6FCE               	movwf	(_dbuf+31)& (0+255),b
 10454                           
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10456  000A20  EFC5  F005         	goto	l6055
 10457  000A24                     l6025:
 10458                           
 10459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 10460  000A24  0645               	decf	xtoa@i^0,f,c
 10461  000A26  A0D8               	btfss	status,0,c
 10462  000A28  0646               	decf	(xtoa@i+1)^0,f,c
 10463  000A2A                     
 10464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 10465  000A2A  0E0F               	movlw	15
 10466  000A2C  143D               	andwf	xtoa@n^0,w,c
 10467  000A2E  6E47               	movwf	xtoa@c^0,c
 10468  000A30  6A48               	clrf	(xtoa@c+1)^0,c
 10469  000A32                     
 10470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10471  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
 10472  000A34  EF25  F005         	goto	u5881
 10473  000A38  5048               	movf	(xtoa@c+1)^0,w,c
 10474  000A3A  E109               	bnz	u5880
 10475  000A3C  0E0A               	movlw	10
 10476  000A3E  5C47               	subwf	xtoa@c^0,w,c
 10477  000A40  A0D8               	btfss	status,0,c
 10478  000A42  EF25  F005         	goto	u5881
 10479  000A46  EF27  F005         	goto	u5880
 10480  000A4A                     u5881:
 10481  000A4A  EF2F  F005         	goto	l6033
 10482  000A4E                     u5880:
 10483  000A4E  0E57               	movlw	87
 10484  000A50  2447               	addwf	xtoa@c^0,w,c
 10485  000A52  6E47               	movwf	xtoa@c^0,c
 10486  000A54  0E00               	movlw	0
 10487  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
 10488  000A58  6E48               	movwf	(xtoa@c+1)^0,c
 10489  000A5A  EF35  F005         	goto	l1057
 10490  000A5E                     l6033:
 10491  000A5E  0E30               	movlw	48
 10492  000A60  2447               	addwf	xtoa@c^0,w,c
 10493  000A62  6E47               	movwf	xtoa@c^0,c
 10494  000A64  0E00               	movlw	0
 10495  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
 10496  000A68  6E48               	movwf	(xtoa@c+1)^0,c
 10497  000A6A                     l1057:
 10498  000A6A  0EBF               	movlw	191
 10499  000A6C  6E2D               	movwf	??_xtoa^0,c
 10500  000A6E  0EFF               	movlw	255
 10501  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
 10502  000A72  502C               	movf	xtoa@x^0,w,c
 10503  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
 10504  000A76  6A30               	clrf	(??_xtoa+3)^0,c
 10505  000A78  502D               	movf	??_xtoa^0,w,c
 10506  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
 10507  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
 10508  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
 10509  000A80  5030               	movf	(??_xtoa+3)^0,w,c
 10510  000A82  E10A               	bnz	u5890
 10511  000A84  0E1A               	movlw	26
 10512  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
 10513  000A88  A0D8               	btfss	status,0,c
 10514  000A8A  EF49  F005         	goto	u5891
 10515  000A8E  EF4C  F005         	goto	u5890
 10516  000A92                     u5891:
 10517  000A92  0E01               	movlw	1
 10518  000A94  EF4D  F005         	goto	u5900
 10519  000A98                     u5890:
 10520  000A98  0E00               	movlw	0
 10521  000A9A                     u5900:
 10522  000A9A  6E35               	movwf	_xtoa$1547^0,c
 10523  000A9C  6A36               	clrf	(_xtoa$1547+1)^0,c
 10524  000A9E  5035               	movf	_xtoa$1547^0,w,c
 10525  000AA0  1036               	iorwf	(_xtoa$1547+1)^0,w,c
 10526  000AA2  B4D8               	btfsc	status,2,c
 10527  000AA4  EF56  F005         	goto	u5911
 10528  000AA8  EF58  F005         	goto	u5910
 10529  000AAC                     u5911:
 10530  000AAC  EF88  F005         	goto	l6047
 10531  000AB0                     u5910:
 10532  000AB0  0E9F               	movlw	159
 10533  000AB2  6E2D               	movwf	??_xtoa^0,c
 10534  000AB4  0EFF               	movlw	255
 10535  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
 10536  000AB8  0E20               	movlw	32
 10537  000ABA  1047               	iorwf	xtoa@c^0,w,c
 10538  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
 10539  000ABE  0E00               	movlw	0
 10540  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
 10541  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
 10542  000AC4  502D               	movf	??_xtoa^0,w,c
 10543  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
 10544  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
 10545  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
 10546  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
 10547  000ACE  E10A               	bnz	u5920
 10548  000AD0  0E1A               	movlw	26
 10549  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
 10550  000AD4  A0D8               	btfss	status,0,c
 10551  000AD6  EF6F  F005         	goto	u5921
 10552  000ADA  EF72  F005         	goto	u5920
 10553  000ADE                     u5921:
 10554  000ADE  0E01               	movlw	1
 10555  000AE0  EF73  F005         	goto	u5930
 10556  000AE4                     u5920:
 10557  000AE4  0E00               	movlw	0
 10558  000AE6                     u5930:
 10559  000AE6  6E37               	movwf	_xtoa$1548^0,c
 10560  000AE8  6A38               	clrf	(_xtoa$1548+1)^0,c
 10561  000AEA  5037               	movf	_xtoa$1548^0,w,c
 10562  000AEC  1038               	iorwf	(_xtoa$1548+1)^0,w,c
 10563  000AEE  B4D8               	btfsc	status,2,c
 10564  000AF0  EF7C  F005         	goto	u5941
 10565  000AF4  EF7E  F005         	goto	u5940
 10566  000AF8                     u5941:
 10567  000AF8  EF88  F005         	goto	l6047
 10568  000AFC                     u5940:
 10569  000AFC                     
 10570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10571  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
 10572  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 10573  000B04  ECA9  F019         	call	_toupper	;wreg free
 10574  000B08  C00B  F047         	movff	?_toupper,xtoa@c
 10575  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 10576  000B10                     l6047:
 10577                           
 10578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10579  000B10  0EAF               	movlw	low _dbuf
 10580  000B12  2445               	addwf	xtoa@i^0,w,c
 10581  000B14  6ED9               	movwf	fsr2l,c
 10582  000B16  0E01               	movlw	high _dbuf
 10583  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
 10584  000B1A  6EDA               	movwf	fsr2h,c
 10585  000B1C  C047  FFDF         	movff	xtoa@c,indf2
 10586  000B20                     
 10587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10588  000B20  0639               	decf	xtoa@p^0,f,c
 10589  000B22  A0D8               	btfss	status,0,c
 10590  000B24  063A               	decf	(xtoa@p+1)^0,f,c
 10591  000B26                     
 10592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10593  000B26  063B               	decf	xtoa@w^0,f,c
 10594  000B28  A0D8               	btfss	status,0,c
 10595  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
 10596  000B2C                     
 10597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10598  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
 10599  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 10600  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 10601  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 10602  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 10603  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 10604  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 10605  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 10606  000B4C  0E05               	movlw	5
 10607  000B4E  EFB2  F005         	goto	u5950
 10608  000B52                     u5955:
 10609  000B52  90D8               	bcf	status,0,c
 10610  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
 10611  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
 10612  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
 10613  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
 10614  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
 10615  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
 10616  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
 10617  000B62  322D               	rrcf	??_xtoa^0,f,c
 10618  000B64                     u5950:
 10619  000B64  2EE8               	decfsz	wreg,f,c
 10620  000B66  EFA9  F005         	goto	u5955
 10621  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
 10622  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 10623  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 10624  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 10625  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 10626  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 10627  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 10628  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 10629  000B8A                     l6055:
 10630                           
 10631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10632  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
 10633  000B8C  EFD1  F005         	goto	u5961
 10634  000B90  5046               	movf	(xtoa@i+1)^0,w,c
 10635  000B92  E109               	bnz	u5960
 10636  000B94  0E02               	movlw	2
 10637  000B96  5C45               	subwf	xtoa@i^0,w,c
 10638  000B98  A0D8               	btfss	status,0,c
 10639  000B9A  EFD1  F005         	goto	u5961
 10640  000B9E  EFD3  F005         	goto	u5960
 10641  000BA2                     u5961:
 10642  000BA2  EF03  F006         	goto	l1071
 10643  000BA6                     u5960:
 10644  000BA6  503D               	movf	xtoa@n^0,w,c
 10645  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
 10646  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
 10647  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
 10648  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
 10649  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
 10650  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
 10651  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
 10652  000BB6  A4D8               	btfss	status,2,c
 10653  000BB8  EFE0  F005         	goto	u5971
 10654  000BBC  EFE2  F005         	goto	u5970
 10655  000BC0                     u5971:
 10656  000BC0  EF12  F005         	goto	l6025
 10657  000BC4                     u5970:
 10658  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 10659  000BC6  EFEF  F005         	goto	u5980
 10660  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
 10661  000BCC  E106               	bnz	u5981
 10662  000BCE  0439               	decf	xtoa@p^0,w,c
 10663  000BD0  B0D8               	btfsc	status,0,c
 10664  000BD2  EFED  F005         	goto	u5981
 10665  000BD6  EFEF  F005         	goto	u5980
 10666  000BDA                     u5981:
 10667  000BDA  EF12  F005         	goto	l6025
 10668  000BDE                     u5980:
 10669  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 10670  000BE0  EFFA  F005         	goto	u5991
 10671  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
 10672  000BE6  E108               	bnz	u5990
 10673  000BE8  043B               	decf	xtoa@w^0,w,c
 10674  000BEA  A0D8               	btfss	status,0,c
 10675  000BEC  EFFA  F005         	goto	u5991
 10676  000BF0  EFFC  F005         	goto	u5990
 10677  000BF4                     u5991:
 10678  000BF4  EF03  F006         	goto	l1071
 10679  000BF8                     u5990:
 10680  000BF8  B257               	btfsc	_flags^0,1,c
 10681  000BFA  EF01  F006         	goto	u6001
 10682  000BFE  EF03  F006         	goto	u6000
 10683  000C02                     u6001:
 10684  000C02  EF12  F005         	goto	l6025
 10685  000C06                     u6000:
 10686  000C06                     l1071:
 10687                           
 10688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10689  000C06  A857               	btfss	_flags^0,4,c
 10690  000C08  EF08  F006         	goto	u6011
 10691  000C0C  EF0A  F006         	goto	u6010
 10692  000C10                     u6011:
 10693  000C10  EF20  F006         	goto	l6071
 10694  000C14                     u6010:
 10695  000C14                     
 10696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10697  000C14  0645               	decf	xtoa@i^0,f,c
 10698  000C16  A0D8               	btfss	status,0,c
 10699  000C18  0646               	decf	(xtoa@i+1)^0,f,c
 10700  000C1A                     
 10701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10702  000C1A  0EAF               	movlw	low _dbuf
 10703  000C1C  2445               	addwf	xtoa@i^0,w,c
 10704  000C1E  6ED9               	movwf	fsr2l,c
 10705  000C20  0E01               	movlw	high _dbuf
 10706  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
 10707  000C24  6EDA               	movwf	fsr2h,c
 10708  000C26  C02C  FFDF         	movff	xtoa@x,indf2
 10709  000C2A                     
 10710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10711  000C2A  0645               	decf	xtoa@i^0,f,c
 10712  000C2C  A0D8               	btfss	status,0,c
 10713  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
 10714                           
 10715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10716  000C30  0EAF               	movlw	low _dbuf
 10717  000C32  2445               	addwf	xtoa@i^0,w,c
 10718  000C34  6ED9               	movwf	fsr2l,c
 10719  000C36  0E01               	movlw	high _dbuf
 10720  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
 10721  000C3A  6EDA               	movwf	fsr2h,c
 10722  000C3C  0E30               	movlw	48
 10723  000C3E  6EDF               	movwf	indf2,c
 10724  000C40                     l6071:
 10725                           
 10726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10727  000C40  C022  F017         	movff	xtoa@fp,pad@fp
 10728  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 10729  000C48  0EAF               	movlw	low _dbuf
 10730  000C4A  2445               	addwf	xtoa@i^0,w,c
 10731  000C4C  6E19               	movwf	pad@buf^0,c
 10732  000C4E  0E01               	movlw	high _dbuf
 10733  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
 10734  000C52  6E1A               	movwf	(pad@buf+1)^0,c
 10735  000C54  C03B  F01B         	movff	xtoa@w,pad@p
 10736  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 10737  000C5C  EC36  F015         	call	_pad	;wreg free
 10738  000C60  C017  F022         	movff	?_pad,?_xtoa
 10739  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
 10740  000C68  0012               	return		;funcret
 10741  000C6A                     __end_of_xtoa:
 10742                           	opt callstack 0
 10743                           
 10744 ;; *************** function _toupper *****************
 10745 ;; Defined at:
 10746 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  c               2   10[COMRAM] int 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  2   10[COMRAM] int 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;Total ram usage:        8 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    5
 10767 ;; This function calls:
 10768 ;;		_islower
 10769 ;; This function is called by:
 10770 ;;		_xtoa
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text57
 10775  003352                     __ptext57:
 10776                           	opt callstack 0
 10777  003352                     _toupper:
 10778                           	opt callstack 21
 10779  003352  0E9F               	movlw	159
 10780  003354  6E0D               	movwf	??_toupper^0,c
 10781  003356  0EFF               	movlw	255
 10782  003358  6E0E               	movwf	(??_toupper+1)^0,c
 10783  00335A  C00B  F00F         	movff	toupper@c,??_toupper+2
 10784  00335E  C00C  F010         	movff	toupper@c+1,??_toupper+3
 10785  003362  500D               	movf	??_toupper^0,w,c
 10786  003364  260F               	addwf	(??_toupper+2)^0,f,c
 10787  003366  500E               	movf	(??_toupper+1)^0,w,c
 10788  003368  2210               	addwfc	(??_toupper+3)^0,f,c
 10789  00336A  5010               	movf	(??_toupper+3)^0,w,c
 10790  00336C  E10A               	bnz	u5260
 10791  00336E  0E1A               	movlw	26
 10792  003370  5C0F               	subwf	(??_toupper+2)^0,w,c
 10793  003372  A0D8               	btfss	status,0,c
 10794  003374  EFBE  F019         	goto	u5261
 10795  003378  EFC1  F019         	goto	u5260
 10796  00337C                     u5261:
 10797  00337C  0E01               	movlw	1
 10798  00337E  EFC2  F019         	goto	u5270
 10799  003382                     u5260:
 10800  003382  0E00               	movlw	0
 10801  003384                     u5270:
 10802  003384  6E11               	movwf	_toupper$2136^0,c
 10803  003386  6A12               	clrf	(_toupper$2136+1)^0,c
 10804  003388  5011               	movf	_toupper$2136^0,w,c
 10805  00338A  1012               	iorwf	(_toupper$2136+1)^0,w,c
 10806  00338C  B4D8               	btfsc	status,2,c
 10807  00338E  EFCB  F019         	goto	u5281
 10808  003392  EFCD  F019         	goto	u5280
 10809  003396                     u5281:
 10810  003396  EFD3  F019         	goto	l1921
 10811  00339A                     u5280:
 10812  00339A  0E5F               	movlw	95
 10813  00339C  140B               	andwf	toupper@c^0,w,c
 10814  00339E  6E0B               	movwf	?_toupper^0,c
 10815  0033A0  6A0C               	clrf	(?_toupper+1)^0,c
 10816  0033A2  EFD7  F019         	goto	l1926
 10817  0033A6                     l1921:
 10818  0033A6  C00B  F00B         	movff	toupper@c,?_toupper
 10819  0033AA  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 10820  0033AE                     l1926:
 10821  0033AE  0012               	return		;funcret
 10822  0033B0                     __end_of_toupper:
 10823                           	opt callstack 0
 10824                           
 10825 ;; *************** function _islower *****************
 10826 ;; Defined at:
 10827 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  c               2    4[COMRAM] int 
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;		None
 10832 ;; Return value:  Size  Location     Type
 10833 ;;                  2    4[COMRAM] int 
 10834 ;; Registers used:
 10835 ;;		wreg, status,2, status,0
 10836 ;; Tracked objects:
 10837 ;;		On entry : 0/0
 10838 ;;		On exit  : 0/0
 10839 ;;		Unchanged: 0/0
 10840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10845 ;;Total ram usage:        6 bytes
 10846 ;; Hardware stack levels used:    1
 10847 ;; Hardware stack levels required when called:    4
 10848 ;; This function calls:
 10849 ;;		Nothing
 10850 ;; This function is called by:
 10851 ;;		_toupper
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text58
 10856  0038C6                     __ptext58:
 10857                           	opt callstack 0
 10858  0038C6                     _islower:
 10859                           	opt callstack 21
 10860  0038C6  0E9F               	movlw	159
 10861  0038C8  6E07               	movwf	??_islower^0,c
 10862  0038CA  0EFF               	movlw	255
 10863  0038CC  6E08               	movwf	(??_islower+1)^0,c
 10864  0038CE  C005  F009         	movff	islower@c,??_islower+2
 10865  0038D2  C006  F00A         	movff	islower@c+1,??_islower+3
 10866  0038D6  5007               	movf	??_islower^0,w,c
 10867  0038D8  2609               	addwf	(??_islower+2)^0,f,c
 10868  0038DA  5008               	movf	(??_islower+1)^0,w,c
 10869  0038DC  220A               	addwfc	(??_islower+3)^0,f,c
 10870  0038DE  500A               	movf	(??_islower+3)^0,w,c
 10871  0038E0  E10A               	bnz	u5150
 10872  0038E2  0E1A               	movlw	26
 10873  0038E4  5C09               	subwf	(??_islower+2)^0,w,c
 10874  0038E6  A0D8               	btfss	status,0,c
 10875  0038E8  EF78  F01C         	goto	u5151
 10876  0038EC  EF7B  F01C         	goto	u5150
 10877  0038F0                     u5151:
 10878  0038F0  0E01               	movlw	1
 10879  0038F2  EF7C  F01C         	goto	u5160
 10880  0038F6                     u5150:
 10881  0038F6  0E00               	movlw	0
 10882  0038F8                     u5160:
 10883  0038F8  6E05               	movwf	?_islower^0,c
 10884  0038FA  6A06               	clrf	(?_islower+1)^0,c
 10885  0038FC  0012               	return		;funcret
 10886  0038FE                     __end_of_islower:
 10887                           	opt callstack 0
 10888                           
 10889 ;; *************** function _isupper *****************
 10890 ;; Defined at:
 10891 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  c               2    4[COMRAM] int 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  2    4[COMRAM] int 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;Total ram usage:        6 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    4
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_xtoa
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text59
 10920  0038FE                     __ptext59:
 10921                           	opt callstack 0
 10922  0038FE                     _isupper:
 10923                           	opt callstack 22
 10924  0038FE  0EBF               	movlw	191
 10925  003900  6E07               	movwf	??_isupper^0,c
 10926  003902  0EFF               	movlw	255
 10927  003904  6E08               	movwf	(??_isupper+1)^0,c
 10928  003906  C005  F009         	movff	isupper@c,??_isupper+2
 10929  00390A  C006  F00A         	movff	isupper@c+1,??_isupper+3
 10930  00390E  5007               	movf	??_isupper^0,w,c
 10931  003910  2609               	addwf	(??_isupper+2)^0,f,c
 10932  003912  5008               	movf	(??_isupper+1)^0,w,c
 10933  003914  220A               	addwfc	(??_isupper+3)^0,f,c
 10934  003916  500A               	movf	(??_isupper+3)^0,w,c
 10935  003918  E10A               	bnz	u5220
 10936  00391A  0E1A               	movlw	26
 10937  00391C  5C09               	subwf	(??_isupper+2)^0,w,c
 10938  00391E  A0D8               	btfss	status,0,c
 10939  003920  EF94  F01C         	goto	u5221
 10940  003924  EF97  F01C         	goto	u5220
 10941  003928                     u5221:
 10942  003928  0E01               	movlw	1
 10943  00392A  EF98  F01C         	goto	u5230
 10944  00392E                     u5220:
 10945  00392E  0E00               	movlw	0
 10946  003930                     u5230:
 10947  003930  6E05               	movwf	?_isupper^0,c
 10948  003932  6A06               	clrf	(?_isupper+1)^0,c
 10949  003934  0012               	return		;funcret
 10950  003936                     __end_of_isupper:
 10951                           	opt callstack 0
 10952                           
 10953 ;; *************** function _isalpha *****************
 10954 ;; Defined at:
 10955 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  c               2    4[COMRAM] int 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;		None
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  2    4[COMRAM] int 
 10962 ;; Registers used:
 10963 ;;		wreg, status,2, status,0
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10973 ;;Total ram usage:        6 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    4
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_xtoa
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text60
 10984  003852                     __ptext60:
 10985                           	opt callstack 0
 10986  003852                     _isalpha:
 10987                           	opt callstack 22
 10988  003852  0E9F               	movlw	159
 10989  003854  6E07               	movwf	??_isalpha^0,c
 10990  003856  0EFF               	movlw	255
 10991  003858  6E08               	movwf	(??_isalpha+1)^0,c
 10992  00385A  0E20               	movlw	32
 10993  00385C  1005               	iorwf	isalpha@c^0,w,c
 10994  00385E  6E09               	movwf	(??_isalpha+2)^0,c
 10995  003860  0E00               	movlw	0
 10996  003862  1006               	iorwf	(isalpha@c+1)^0,w,c
 10997  003864  6E0A               	movwf	(??_isalpha+3)^0,c
 10998  003866  5007               	movf	??_isalpha^0,w,c
 10999  003868  2609               	addwf	(??_isalpha+2)^0,f,c
 11000  00386A  5008               	movf	(??_isalpha+1)^0,w,c
 11001  00386C  220A               	addwfc	(??_isalpha+3)^0,f,c
 11002  00386E  500A               	movf	(??_isalpha+3)^0,w,c
 11003  003870  E10A               	bnz	u5240
 11004  003872  0E1A               	movlw	26
 11005  003874  5C09               	subwf	(??_isalpha+2)^0,w,c
 11006  003876  A0D8               	btfss	status,0,c
 11007  003878  EF40  F01C         	goto	u5241
 11008  00387C  EF43  F01C         	goto	u5240
 11009  003880                     u5241:
 11010  003880  0E01               	movlw	1
 11011  003882  EF44  F01C         	goto	u5250
 11012  003886                     u5240:
 11013  003886  0E00               	movlw	0
 11014  003888                     u5250:
 11015  003888  6E05               	movwf	?_isalpha^0,c
 11016  00388A  6A06               	clrf	(?_isalpha+1)^0,c
 11017  00388C  0012               	return		;funcret
 11018  00388E                     __end_of_isalpha:
 11019                           	opt callstack 0
 11020                           
 11021 ;; *************** function _utoa *****************
 11022 ;; Defined at:
 11023 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11026 ;;		 -> NULL(0), 
 11027 ;;  d               8   35[COMRAM] unsigned long long 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  n               8   55[COMRAM] unsigned long long 
 11030 ;;  i               2   63[COMRAM] int 
 11031 ;;  w               2   53[COMRAM] int 
 11032 ;;  p               2   51[COMRAM] int 
 11033 ;; Return value:  Size  Location     Type
 11034 ;;                  2   33[COMRAM] int 
 11035 ;; Registers used:
 11036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11037 ;; Tracked objects:
 11038 ;;		On entry : 0/0
 11039 ;;		On exit  : 0/0
 11040 ;;		Unchanged: 0/0
 11041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11042 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11044 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11045 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11046 ;;Total ram usage:       32 bytes
 11047 ;; Hardware stack levels used:    1
 11048 ;; Hardware stack levels required when called:    9
 11049 ;; This function calls:
 11050 ;;		___lodiv
 11051 ;;		___lomod
 11052 ;;		_pad
 11053 ;; This function is called by:
 11054 ;;		_vfpfcnvrt
 11055 ;; This function uses a non-reentrant model
 11056 ;;
 11057                           
 11058                           	psect	text61
 11059  00134E                     __ptext61:
 11060                           	opt callstack 0
 11061  00134E                     _utoa:
 11062                           	opt callstack 18
 11063  00134E                     
 11064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11065  00134E  0100               	movlb	0	; () banked
 11066  001350  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11067  001352  EFAD  F009         	goto	u5781
 11068  001356  EFAF  F009         	goto	u5780
 11069  00135A                     u5781:
 11070  00135A  EFB0  F009         	goto	l5977
 11071  00135E                     u5780:
 11072  00135E                     
 11073                           ; BSR set to: 0
 11074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 11075  00135E  9257               	bcf	_flags^0,1,c
 11076  001360                     l5977:
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 11080  001360  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11081  001362  EFBD  F009         	goto	u5790
 11082  001366  51A6               	movf	(_prec+1)& (0+255),w,b
 11083  001368  E106               	bnz	u5791
 11084  00136A  05A5               	decf	_prec& (0+255),w,b
 11085  00136C  B0D8               	btfsc	status,0,c
 11086  00136E  EFBB  F009         	goto	u5791
 11087  001372  EFBD  F009         	goto	u5790
 11088  001376                     u5791:
 11089  001376  EFC3  F009         	goto	l1033
 11090  00137A                     u5790:
 11091  00137A                     
 11092                           ; BSR set to: 0
 11093  00137A  0E00               	movlw	0
 11094  00137C  6E35               	movwf	(utoa@p+1)^0,c
 11095  00137E  0E01               	movlw	1
 11096  001380  6E34               	movwf	utoa@p^0,c
 11097  001382  EFC7  F009         	goto	l1035
 11098  001386                     l1033:
 11099                           
 11100                           ; BSR set to: 0
 11101  001386  C0A5  F034         	movff	_prec,utoa@p
 11102  00138A  C0A6  F035         	movff	_prec+1,utoa@p+1
 11103  00138E                     l1035:
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 11107  00138E  C0A3  F036         	movff	_width,utoa@w
 11108  001392  C0A4  F037         	movff	_width+1,utoa@w+1
 11109                           
 11110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 11111  001396  C024  F038         	movff	utoa@d,utoa@n
 11112  00139A  C025  F039         	movff	utoa@d+1,utoa@n+1
 11113  00139E  C026  F03A         	movff	utoa@d+2,utoa@n+2
 11114  0013A2  C027  F03B         	movff	utoa@d+3,utoa@n+3
 11115  0013A6  C028  F03C         	movff	utoa@d+4,utoa@n+4
 11116  0013AA  C029  F03D         	movff	utoa@d+5,utoa@n+5
 11117  0013AE  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 11118  0013B2  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 11119  0013B6                     
 11120                           ; BSR set to: 0
 11121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 11122  0013B6  0E00               	movlw	0
 11123  0013B8  6E41               	movwf	(utoa@i+1)^0,c
 11124  0013BA  0E1F               	movlw	31
 11125  0013BC  6E40               	movwf	utoa@i^0,c
 11126  0013BE                     
 11127                           ; BSR set to: 0
 11128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 11129  0013BE  0E00               	movlw	0
 11130  0013C0  0101               	movlb	1	; () banked
 11131  0013C2  6FCE               	movwf	(_dbuf+31)& (0+255),b
 11132                           
 11133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11134  0013C4  EF5A  F00A         	goto	l5995
 11135  0013C8                     l5985:
 11136                           
 11137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 11138  0013C8  0640               	decf	utoa@i^0,f,c
 11139  0013CA  A0D8               	btfss	status,0,c
 11140  0013CC  0641               	decf	(utoa@i+1)^0,f,c
 11141  0013CE                     
 11142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 11143  0013CE  0EAF               	movlw	low _dbuf
 11144  0013D0  2440               	addwf	utoa@i^0,w,c
 11145  0013D2  6ED9               	movwf	fsr2l,c
 11146  0013D4  0E01               	movlw	high _dbuf
 11147  0013D6  2041               	addwfc	(utoa@i+1)^0,w,c
 11148  0013D8  6EDA               	movwf	fsr2h,c
 11149  0013DA  C038  F005         	movff	utoa@n,___lomod@dividend
 11150  0013DE  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 11151  0013E2  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 11152  0013E6  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 11153  0013EA  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 11154  0013EE  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 11155  0013F2  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 11156  0013F6  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 11157  0013FA  0E0A               	movlw	10
 11158  0013FC  6E0D               	movwf	___lomod@divisor^0,c
 11159  0013FE  0E00               	movlw	0
 11160  001400  6E0E               	movwf	(___lomod@divisor+1)^0,c
 11161  001402  0E00               	movlw	0
 11162  001404  6E0F               	movwf	(___lomod@divisor+2)^0,c
 11163  001406  0E00               	movlw	0
 11164  001408  6E10               	movwf	(___lomod@divisor+3)^0,c
 11165  00140A  0E00               	movlw	0
 11166  00140C  6E11               	movwf	(___lomod@divisor+4)^0,c
 11167  00140E  0E00               	movlw	0
 11168  001410  6E12               	movwf	(___lomod@divisor+5)^0,c
 11169  001412  0E00               	movlw	0
 11170  001414  6E13               	movwf	(___lomod@divisor+6)^0,c
 11171  001416  0E00               	movlw	0
 11172  001418  6E14               	movwf	(___lomod@divisor+7)^0,c
 11173  00141A  ECCE  F014         	call	___lomod	;wreg free
 11174  00141E  C005  F02C         	movff	?___lomod,??_utoa
 11175  001422  C006  F02D         	movff	?___lomod+1,??_utoa+1
 11176  001426  C007  F02E         	movff	?___lomod+2,??_utoa+2
 11177  00142A  C008  F02F         	movff	?___lomod+3,??_utoa+3
 11178  00142E  C009  F030         	movff	?___lomod+4,??_utoa+4
 11179  001432  C00A  F031         	movff	?___lomod+5,??_utoa+5
 11180  001436  C00B  F032         	movff	?___lomod+6,??_utoa+6
 11181  00143A  C00C  F033         	movff	?___lomod+7,??_utoa+7
 11182  00143E  502C               	movf	??_utoa^0,w,c
 11183  001440  0F30               	addlw	48
 11184  001442  6EDF               	movwf	indf2,c
 11185  001444                     
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 11187  001444  0634               	decf	utoa@p^0,f,c
 11188  001446  A0D8               	btfss	status,0,c
 11189  001448  0635               	decf	(utoa@p+1)^0,f,c
 11190  00144A                     
 11191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 11192  00144A  0636               	decf	utoa@w^0,f,c
 11193  00144C  A0D8               	btfss	status,0,c
 11194  00144E  0637               	decf	(utoa@w+1)^0,f,c
 11195  001450                     
 11196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 11197  001450  C038  F005         	movff	utoa@n,___lodiv@dividend
 11198  001454  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 11199  001458  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 11200  00145C  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 11201  001460  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 11202  001464  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 11203  001468  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 11204  00146C  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 11205  001470  0E0A               	movlw	10
 11206  001472  6E0D               	movwf	___lodiv@divisor^0,c
 11207  001474  0E00               	movlw	0
 11208  001476  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 11209  001478  0E00               	movlw	0
 11210  00147A  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 11211  00147C  0E00               	movlw	0
 11212  00147E  6E10               	movwf	(___lodiv@divisor+3)^0,c
 11213  001480  0E00               	movlw	0
 11214  001482  6E11               	movwf	(___lodiv@divisor+4)^0,c
 11215  001484  0E00               	movlw	0
 11216  001486  6E12               	movwf	(___lodiv@divisor+5)^0,c
 11217  001488  0E00               	movlw	0
 11218  00148A  6E13               	movwf	(___lodiv@divisor+6)^0,c
 11219  00148C  0E00               	movlw	0
 11220  00148E  6E14               	movwf	(___lodiv@divisor+7)^0,c
 11221  001490  EC98  F012         	call	___lodiv	;wreg free
 11222  001494  C005  F038         	movff	?___lodiv,utoa@n
 11223  001498  C006  F039         	movff	?___lodiv+1,utoa@n+1
 11224  00149C  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 11225  0014A0  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 11226  0014A4  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 11227  0014A8  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 11228  0014AC  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 11229  0014B0  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 11230  0014B4                     l5995:
 11231                           
 11232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11233  0014B4  5040               	movf	utoa@i^0,w,c
 11234  0014B6  1041               	iorwf	(utoa@i+1)^0,w,c
 11235  0014B8  B4D8               	btfsc	status,2,c
 11236  0014BA  EF61  F00A         	goto	u5801
 11237  0014BE  EF63  F00A         	goto	u5800
 11238  0014C2                     u5801:
 11239  0014C2  EF93  F00A         	goto	l6005
 11240  0014C6                     u5800:
 11241  0014C6  5038               	movf	utoa@n^0,w,c
 11242  0014C8  1039               	iorwf	(utoa@n+1)^0,w,c
 11243  0014CA  103A               	iorwf	(utoa@n+2)^0,w,c
 11244  0014CC  103B               	iorwf	(utoa@n+3)^0,w,c
 11245  0014CE  103C               	iorwf	(utoa@n+4)^0,w,c
 11246  0014D0  103D               	iorwf	(utoa@n+5)^0,w,c
 11247  0014D2  103E               	iorwf	(utoa@n+6)^0,w,c
 11248  0014D4  103F               	iorwf	(utoa@n+7)^0,w,c
 11249  0014D6  A4D8               	btfss	status,2,c
 11250  0014D8  EF70  F00A         	goto	u5811
 11251  0014DC  EF72  F00A         	goto	u5810
 11252  0014E0                     u5811:
 11253  0014E0  EFE4  F009         	goto	l5985
 11254  0014E4                     u5810:
 11255  0014E4  BE35               	btfsc	(utoa@p+1)^0,7,c
 11256  0014E6  EF7F  F00A         	goto	u5820
 11257  0014EA  5035               	movf	(utoa@p+1)^0,w,c
 11258  0014EC  E106               	bnz	u5821
 11259  0014EE  0434               	decf	utoa@p^0,w,c
 11260  0014F0  B0D8               	btfsc	status,0,c
 11261  0014F2  EF7D  F00A         	goto	u5821
 11262  0014F6  EF7F  F00A         	goto	u5820
 11263  0014FA                     u5821:
 11264  0014FA  EFE4  F009         	goto	l5985
 11265  0014FE                     u5820:
 11266  0014FE  BE37               	btfsc	(utoa@w+1)^0,7,c
 11267  001500  EF8A  F00A         	goto	u5831
 11268  001504  5037               	movf	(utoa@w+1)^0,w,c
 11269  001506  E108               	bnz	u5830
 11270  001508  0436               	decf	utoa@w^0,w,c
 11271  00150A  A0D8               	btfss	status,0,c
 11272  00150C  EF8A  F00A         	goto	u5831
 11273  001510  EF8C  F00A         	goto	u5830
 11274  001514                     u5831:
 11275  001514  EF93  F00A         	goto	l6005
 11276  001518                     u5830:
 11277  001518  B257               	btfsc	_flags^0,1,c
 11278  00151A  EF91  F00A         	goto	u5841
 11279  00151E  EF93  F00A         	goto	u5840
 11280  001522                     u5841:
 11281  001522  EFE4  F009         	goto	l5985
 11282  001526                     u5840:
 11283  001526                     l6005:
 11284                           
 11285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 11286  001526  C022  F017         	movff	utoa@fp,pad@fp
 11287  00152A  C023  F018         	movff	utoa@fp+1,pad@fp+1
 11288  00152E  0EAF               	movlw	low _dbuf
 11289  001530  2440               	addwf	utoa@i^0,w,c
 11290  001532  6E19               	movwf	pad@buf^0,c
 11291  001534  0E01               	movlw	high _dbuf
 11292  001536  2041               	addwfc	(utoa@i+1)^0,w,c
 11293  001538  6E1A               	movwf	(pad@buf+1)^0,c
 11294  00153A  C036  F01B         	movff	utoa@w,pad@p
 11295  00153E  C037  F01C         	movff	utoa@w+1,pad@p+1
 11296  001542  EC36  F015         	call	_pad	;wreg free
 11297  001546  C017  F022         	movff	?_pad,?_utoa
 11298  00154A  C018  F023         	movff	?_pad+1,?_utoa+1
 11299  00154E  0012               	return		;funcret
 11300  001550                     __end_of_utoa:
 11301                           	opt callstack 0
 11302                           
 11303 ;; *************** function ___lomod *****************
 11304 ;; Defined at:
 11305 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  dividend        8    4[COMRAM] unsigned long long 
 11308 ;;  divisor         8   12[COMRAM] unsigned long long 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  counter         1   20[COMRAM] unsigned char 
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  8    4[COMRAM] unsigned long long 
 11313 ;; Registers used:
 11314 ;;		wreg, status,2, status,0
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11320 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11323 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11324 ;;Total ram usage:       17 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    4
 11327 ;; This function calls:
 11328 ;;		Nothing
 11329 ;; This function is called by:
 11330 ;;		_utoa
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text62
 11335  00299C                     __ptext62:
 11336                           	opt callstack 0
 11337  00299C                     ___lomod:
 11338                           	opt callstack 22
 11339  00299C  500D               	movf	___lomod@divisor^0,w,c
 11340  00299E  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 11341  0029A0  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 11342  0029A2  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 11343  0029A4  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 11344  0029A6  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 11345  0029A8  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 11346  0029AA  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 11347  0029AC  B4D8               	btfsc	status,2,c
 11348  0029AE  EFDB  F014         	goto	u5481
 11349  0029B2  EFDD  F014         	goto	u5480
 11350  0029B6                     u5481:
 11351  0029B6  EF25  F015         	goto	l1565
 11352  0029BA                     u5480:
 11353  0029BA  0E01               	movlw	1
 11354  0029BC  6E15               	movwf	___lomod@counter^0,c
 11355  0029BE  EFEB  F014         	goto	l5847
 11356  0029C2                     l5845:
 11357  0029C2  90D8               	bcf	status,0,c
 11358  0029C4  360D               	rlcf	___lomod@divisor^0,f,c
 11359  0029C6  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 11360  0029C8  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 11361  0029CA  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 11362  0029CC  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 11363  0029CE  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 11364  0029D0  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 11365  0029D2  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 11366  0029D4  2A15               	incf	___lomod@counter^0,f,c
 11367  0029D6                     l5847:
 11368  0029D6  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 11369  0029D8  EFF0  F014         	goto	u5491
 11370  0029DC  EFF2  F014         	goto	u5490
 11371  0029E0                     u5491:
 11372  0029E0  EFE1  F014         	goto	l5845
 11373  0029E4                     u5490:
 11374  0029E4                     l5849:
 11375  0029E4  500D               	movf	___lomod@divisor^0,w,c
 11376  0029E6  5C05               	subwf	___lomod@dividend^0,w,c
 11377  0029E8  500E               	movf	(___lomod@divisor+1)^0,w,c
 11378  0029EA  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 11379  0029EC  500F               	movf	(___lomod@divisor+2)^0,w,c
 11380  0029EE  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 11381  0029F0  5010               	movf	(___lomod@divisor+3)^0,w,c
 11382  0029F2  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 11383  0029F4  5011               	movf	(___lomod@divisor+4)^0,w,c
 11384  0029F6  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 11385  0029F8  5012               	movf	(___lomod@divisor+5)^0,w,c
 11386  0029FA  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 11387  0029FC  5013               	movf	(___lomod@divisor+6)^0,w,c
 11388  0029FE  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 11389  002A00  5014               	movf	(___lomod@divisor+7)^0,w,c
 11390  002A02  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 11391  002A04  A0D8               	btfss	status,0,c
 11392  002A06  EF07  F015         	goto	u5501
 11393  002A0A  EF09  F015         	goto	u5500
 11394  002A0E                     u5501:
 11395  002A0E  EF19  F015         	goto	l5853
 11396  002A12                     u5500:
 11397  002A12  500D               	movf	___lomod@divisor^0,w,c
 11398  002A14  5E05               	subwf	___lomod@dividend^0,f,c
 11399  002A16  500E               	movf	(___lomod@divisor+1)^0,w,c
 11400  002A18  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 11401  002A1A  500F               	movf	(___lomod@divisor+2)^0,w,c
 11402  002A1C  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 11403  002A1E  5010               	movf	(___lomod@divisor+3)^0,w,c
 11404  002A20  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 11405  002A22  5011               	movf	(___lomod@divisor+4)^0,w,c
 11406  002A24  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 11407  002A26  5012               	movf	(___lomod@divisor+5)^0,w,c
 11408  002A28  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 11409  002A2A  5013               	movf	(___lomod@divisor+6)^0,w,c
 11410  002A2C  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 11411  002A2E  5014               	movf	(___lomod@divisor+7)^0,w,c
 11412  002A30  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 11413  002A32                     l5853:
 11414  002A32  90D8               	bcf	status,0,c
 11415  002A34  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 11416  002A36  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 11417  002A38  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 11418  002A3A  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 11419  002A3C  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 11420  002A3E  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 11421  002A40  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 11422  002A42  320D               	rrcf	___lomod@divisor^0,f,c
 11423  002A44  2E15               	decfsz	___lomod@counter^0,f,c
 11424  002A46  EFF2  F014         	goto	l5849
 11425  002A4A                     l1565:
 11426  002A4A  C005  F005         	movff	___lomod@dividend,?___lomod
 11427  002A4E  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 11428  002A52  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 11429  002A56  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 11430  002A5A  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 11431  002A5E  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 11432  002A62  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 11433  002A66  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 11434  002A6A  0012               	return		;funcret
 11435  002A6C                     __end_of___lomod:
 11436                           	opt callstack 0
 11437                           
 11438 ;; *************** function ___lodiv *****************
 11439 ;; Defined at:
 11440 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  dividend        8    4[COMRAM] unsigned long long 
 11443 ;;  divisor         8   12[COMRAM] unsigned long long 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;  quotient        8   20[COMRAM] unsigned long long 
 11446 ;;  counter         1   28[COMRAM] unsigned char 
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  8    4[COMRAM] unsigned long long 
 11449 ;; Registers used:
 11450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11456 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11457 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11459 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11460 ;;Total ram usage:       25 bytes
 11461 ;; Hardware stack levels used:    1
 11462 ;; Hardware stack levels required when called:    4
 11463 ;; This function calls:
 11464 ;;		Nothing
 11465 ;; This function is called by:
 11466 ;;		_utoa
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text63
 11471  002530                     __ptext63:
 11472                           	opt callstack 0
 11473  002530                     ___lodiv:
 11474                           	opt callstack 22
 11475  002530  EE20  F015         	lfsr	2,___lodiv@quotient
 11476  002534  0E07               	movlw	7
 11477  002536                     u5441:
 11478  002536  6ADE               	clrf	postinc2,c
 11479  002538  06E8               	decf	wreg,f,c
 11480  00253A  E2FD               	bc	u5441
 11481  00253C  500D               	movf	___lodiv@divisor^0,w,c
 11482  00253E  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 11483  002540  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 11484  002542  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 11485  002544  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 11486  002546  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 11487  002548  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 11488  00254A  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 11489  00254C  B4D8               	btfsc	status,2,c
 11490  00254E  EFAB  F012         	goto	u5451
 11491  002552  EFAD  F012         	goto	u5450
 11492  002556                     u5451:
 11493  002556  EFFF  F012         	goto	l1555
 11494  00255A                     u5450:
 11495  00255A  0E01               	movlw	1
 11496  00255C  6E1D               	movwf	___lodiv@counter^0,c
 11497  00255E  EFBB  F012         	goto	l5827
 11498  002562                     l5825:
 11499  002562  90D8               	bcf	status,0,c
 11500  002564  360D               	rlcf	___lodiv@divisor^0,f,c
 11501  002566  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 11502  002568  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 11503  00256A  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 11504  00256C  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 11505  00256E  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 11506  002570  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 11507  002572  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 11508  002574  2A1D               	incf	___lodiv@counter^0,f,c
 11509  002576                     l5827:
 11510  002576  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 11511  002578  EFC0  F012         	goto	u5461
 11512  00257C  EFC2  F012         	goto	u5460
 11513  002580                     u5461:
 11514  002580  EFB1  F012         	goto	l5825
 11515  002584                     u5460:
 11516  002584                     l5829:
 11517  002584  90D8               	bcf	status,0,c
 11518  002586  3615               	rlcf	___lodiv@quotient^0,f,c
 11519  002588  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 11520  00258A  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 11521  00258C  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 11522  00258E  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 11523  002590  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 11524  002592  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 11525  002594  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 11526  002596  500D               	movf	___lodiv@divisor^0,w,c
 11527  002598  5C05               	subwf	___lodiv@dividend^0,w,c
 11528  00259A  500E               	movf	(___lodiv@divisor+1)^0,w,c
 11529  00259C  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 11530  00259E  500F               	movf	(___lodiv@divisor+2)^0,w,c
 11531  0025A0  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 11532  0025A2  5010               	movf	(___lodiv@divisor+3)^0,w,c
 11533  0025A4  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 11534  0025A6  5011               	movf	(___lodiv@divisor+4)^0,w,c
 11535  0025A8  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 11536  0025AA  5012               	movf	(___lodiv@divisor+5)^0,w,c
 11537  0025AC  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 11538  0025AE  5013               	movf	(___lodiv@divisor+6)^0,w,c
 11539  0025B0  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 11540  0025B2  5014               	movf	(___lodiv@divisor+7)^0,w,c
 11541  0025B4  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 11542  0025B6  A0D8               	btfss	status,0,c
 11543  0025B8  EFE0  F012         	goto	u5471
 11544  0025BC  EFE2  F012         	goto	u5470
 11545  0025C0                     u5471:
 11546  0025C0  EFF3  F012         	goto	l5837
 11547  0025C4                     u5470:
 11548  0025C4  500D               	movf	___lodiv@divisor^0,w,c
 11549  0025C6  5E05               	subwf	___lodiv@dividend^0,f,c
 11550  0025C8  500E               	movf	(___lodiv@divisor+1)^0,w,c
 11551  0025CA  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 11552  0025CC  500F               	movf	(___lodiv@divisor+2)^0,w,c
 11553  0025CE  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 11554  0025D0  5010               	movf	(___lodiv@divisor+3)^0,w,c
 11555  0025D2  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 11556  0025D4  5011               	movf	(___lodiv@divisor+4)^0,w,c
 11557  0025D6  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 11558  0025D8  5012               	movf	(___lodiv@divisor+5)^0,w,c
 11559  0025DA  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 11560  0025DC  5013               	movf	(___lodiv@divisor+6)^0,w,c
 11561  0025DE  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 11562  0025E0  5014               	movf	(___lodiv@divisor+7)^0,w,c
 11563  0025E2  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 11564  0025E4  8015               	bsf	___lodiv@quotient^0,0,c
 11565  0025E6                     l5837:
 11566  0025E6  90D8               	bcf	status,0,c
 11567  0025E8  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 11568  0025EA  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 11569  0025EC  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 11570  0025EE  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 11571  0025F0  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 11572  0025F2  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 11573  0025F4  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 11574  0025F6  320D               	rrcf	___lodiv@divisor^0,f,c
 11575  0025F8  2E1D               	decfsz	___lodiv@counter^0,f,c
 11576  0025FA  EFC2  F012         	goto	l5829
 11577  0025FE                     l1555:
 11578  0025FE  C015  F005         	movff	___lodiv@quotient,?___lodiv
 11579  002602  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 11580  002606  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 11581  00260A  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 11582  00260E  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 11583  002612  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 11584  002616  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 11585  00261A  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 11586  00261E  0012               	return		;funcret
 11587  002620                     __end_of___lodiv:
 11588                           	opt callstack 0
 11589                           
 11590 ;; *************** function _stoa *****************
 11591 ;; Defined at:
 11592 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 11595 ;;		 -> NULL(0), 
 11596 ;;  s               2   17[COMRAM] PTR unsigned char 
 11597 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1443(20), ValidateCmd@ConfName_1439(20), ValidateCmd@ConfName(20), 
 11598 ;;		 -> STR_26(9), STR_25(12), InitialiseString@SerialNum(11), Command(16), 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  nuls            7   20[COMRAM] unsigned char [7]
 11601 ;;  l               2   35[COMRAM] int 
 11602 ;;  p               2   33[COMRAM] int 
 11603 ;;  cp              2   31[COMRAM] PTR unsigned char 
 11604 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1443(20), ValidateCmd@ConfName_1439(20), 
 11605 ;;		 -> ValidateCmd@ConfName(20), STR_26(9), STR_25(12), InitialiseString@SerialNum(11), 
 11606 ;;		 -> Command(16), 
 11607 ;;  w               2   29[COMRAM] int 
 11608 ;;  i               2   27[COMRAM] int 
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  2   15[COMRAM] int 
 11611 ;; Registers used:
 11612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11619 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11621 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11622 ;;Total ram usage:       22 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    7
 11625 ;; This function calls:
 11626 ;;		_fputc
 11627 ;;		_strlen
 11628 ;; This function is called by:
 11629 ;;		_vfpfcnvrt
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text64
 11634  0016EE                     __ptext64:
 11635                           	opt callstack 0
 11636  0016EE                     _stoa:
 11637                           	opt callstack 20
 11638  0016EE                     
 11639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11640  0016EE  EE21  F022         	lfsr	2,stoa@F1139
 11641  0016F2  EE10  F015         	lfsr	1,stoa@nuls
 11642  0016F6  0E06               	movlw	6
 11643  0016F8                     u5681:
 11644  0016F8  CFDB FFE3          	movff	plusw2,plusw1
 11645  0016FC  06E8               	decf	wreg,f,c
 11646  0016FE  E2FC               	bc	u5681
 11647  001700                     
 11648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11649  001700  C012  F020         	movff	stoa@s,stoa@cp
 11650  001704  C013  F021         	movff	stoa@s+1,stoa@cp+1
 11651  001708                     
 11652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11653  001708  5020               	movf	stoa@cp^0,w,c
 11654  00170A  1021               	iorwf	(stoa@cp+1)^0,w,c
 11655  00170C  A4D8               	btfss	status,2,c
 11656  00170E  EF8B  F00B         	goto	u5691
 11657  001712  EF8D  F00B         	goto	u5690
 11658  001716                     u5691:
 11659  001716  EF91  F00B         	goto	l5939
 11660  00171A                     u5690:
 11661  00171A                     
 11662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11663  00171A  0E15               	movlw	low stoa@nuls
 11664  00171C  6E20               	movwf	stoa@cp^0,c
 11665  00171E  0E00               	movlw	high stoa@nuls
 11666  001720  6E21               	movwf	(stoa@cp+1)^0,c
 11667  001722                     l5939:
 11668                           
 11669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11670  001722  C020  F005         	movff	stoa@cp,strlen@s
 11671  001726  C021  F006         	movff	stoa@cp+1,strlen@s+1
 11672  00172A  EC88  F01A         	call	_strlen	;wreg free
 11673  00172E  C005  F024         	movff	?_strlen,stoa@l
 11674  001732  C006  F025         	movff	?_strlen+1,stoa@l+1
 11675  001736                     
 11676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 11677  001736  C0A5  F022         	movff	_prec,stoa@p
 11678  00173A  C0A6  F023         	movff	_prec+1,stoa@p+1
 11679  00173E                     
 11680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 11681  00173E  BE23               	btfsc	(stoa@p+1)^0,7,c
 11682  001740  EFA4  F00B         	goto	u5701
 11683  001744  EFA6  F00B         	goto	u5700
 11684  001748                     u5701:
 11685  001748  EFBB  F00B         	goto	l1014
 11686  00174C                     u5700:
 11687  00174C  5024               	movf	stoa@l^0,w,c
 11688  00174E  5C22               	subwf	stoa@p^0,w,c
 11689  001750  5023               	movf	(stoa@p+1)^0,w,c
 11690  001752  0A80               	xorlw	128
 11691  001754  6E14               	movwf	??_stoa^0,c
 11692  001756  5025               	movf	(stoa@l+1)^0,w,c
 11693  001758  0A80               	xorlw	128
 11694  00175A  5814               	subwfb	??_stoa^0,w,c
 11695  00175C  A0D8               	btfss	status,0,c
 11696  00175E  EFB3  F00B         	goto	u5711
 11697  001762  EFB5  F00B         	goto	u5710
 11698  001766                     u5711:
 11699  001766  EFB7  F00B         	goto	l1012
 11700  00176A                     u5710:
 11701  00176A  EFBB  F00B         	goto	l1014
 11702  00176E                     l1012:
 11703  00176E  C022  F024         	movff	stoa@p,stoa@l
 11704  001772  C023  F025         	movff	stoa@p+1,stoa@l+1
 11705  001776                     l1014:
 11706                           
 11707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 11708  001776  C024  F022         	movff	stoa@l,stoa@p
 11709  00177A  C025  F023         	movff	stoa@l+1,stoa@p+1
 11710                           
 11711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 11712  00177E  C0A3  F01E         	movff	_width,stoa@w
 11713  001782  C0A4  F01F         	movff	_width+1,stoa@w+1
 11714                           
 11715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 11716  001786  B057               	btfsc	_flags^0,0,c
 11717  001788  EFC8  F00B         	goto	u5721
 11718  00178C  EFCA  F00B         	goto	u5720
 11719  001790                     u5721:
 11720  001790  EFE7  F00B         	goto	l5955
 11721  001794                     u5720:
 11722  001794  EFD8  F00B         	goto	l5953
 11723  001798                     l5949:
 11724                           
 11725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 11726  001798  0E00               	movlw	0
 11727  00179A  6E08               	movwf	(fputc@c+1)^0,c
 11728  00179C  0E20               	movlw	32
 11729  00179E  6E07               	movwf	fputc@c^0,c
 11730  0017A0  C010  F009         	movff	stoa@fp,fputc@fp
 11731  0017A4  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 11732  0017A8  ECAE  F016         	call	_fputc	;wreg free
 11733  0017AC                     
 11734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 11735  0017AC  4A24               	infsnz	stoa@l^0,f,c
 11736  0017AE  2A25               	incf	(stoa@l+1)^0,f,c
 11737  0017B0                     l5953:
 11738                           
 11739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 11740  0017B0  501E               	movf	stoa@w^0,w,c
 11741  0017B2  5C24               	subwf	stoa@l^0,w,c
 11742  0017B4  5025               	movf	(stoa@l+1)^0,w,c
 11743  0017B6  0A80               	xorlw	128
 11744  0017B8  6E14               	movwf	??_stoa^0,c
 11745  0017BA  501F               	movf	(stoa@w+1)^0,w,c
 11746  0017BC  0A80               	xorlw	128
 11747  0017BE  5814               	subwfb	??_stoa^0,w,c
 11748  0017C0  A0D8               	btfss	status,0,c
 11749  0017C2  EFE5  F00B         	goto	u5731
 11750  0017C6  EFE7  F00B         	goto	u5730
 11751  0017CA                     u5731:
 11752  0017CA  EFCC  F00B         	goto	l5949
 11753  0017CE                     u5730:
 11754  0017CE                     l5955:
 11755                           
 11756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 11757  0017CE  0E00               	movlw	0
 11758  0017D0  6E1D               	movwf	(stoa@i+1)^0,c
 11759  0017D2  0E00               	movlw	0
 11760  0017D4  6E1C               	movwf	stoa@i^0,c
 11761                           
 11762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11763  0017D6  EF0C  F00C         	goto	l5963
 11764  0017DA                     l5957:
 11765                           
 11766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 11767  0017DA  C020  FFF6         	movff	stoa@cp,tblptrl
 11768  0017DE  C021  FFF7         	movff	stoa@cp+1,tblptrh
 11769  0017E2  0E00               	movlw	low (__mediumconst shr (0+16))
 11770  0017E4  6EF8               	movwf	tblptru,c
 11771  0017E6  0E0E               	movlw	(high __ramtop+-1)
 11772  0017E8  64F7               	cpfsgt	tblptrh,c
 11773  0017EA  D003               	bra	u5747
 11774  0017EC  0008               	tblrd		*
 11775  0017EE  50F5               	movf	tablat,w,c
 11776  0017F0  D005               	bra	u5740
 11777  0017F2                     u5747:
 11778  0017F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 11779  0017F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 11780  0017FA  50EF               	movf	indf0,w,c
 11781  0017FC                     u5740:
 11782  0017FC  6E14               	movwf	??_stoa^0,c
 11783  0017FE  5014               	movf	??_stoa^0,w,c
 11784  001800  6E07               	movwf	fputc@c^0,c
 11785  001802  6A08               	clrf	(fputc@c+1)^0,c
 11786  001804  C010  F009         	movff	stoa@fp,fputc@fp
 11787  001808  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 11788  00180C  ECAE  F016         	call	_fputc	;wreg free
 11789  001810                     
 11790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 11791  001810  4A20               	infsnz	stoa@cp^0,f,c
 11792  001812  2A21               	incf	(stoa@cp+1)^0,f,c
 11793  001814                     
 11794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 11795  001814  4A1C               	infsnz	stoa@i^0,f,c
 11796  001816  2A1D               	incf	(stoa@i+1)^0,f,c
 11797  001818                     l5963:
 11798                           
 11799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11800  001818  5022               	movf	stoa@p^0,w,c
 11801  00181A  5C1C               	subwf	stoa@i^0,w,c
 11802  00181C  501D               	movf	(stoa@i+1)^0,w,c
 11803  00181E  0A80               	xorlw	128
 11804  001820  6E14               	movwf	??_stoa^0,c
 11805  001822  5023               	movf	(stoa@p+1)^0,w,c
 11806  001824  0A80               	xorlw	128
 11807  001826  5814               	subwfb	??_stoa^0,w,c
 11808  001828  A0D8               	btfss	status,0,c
 11809  00182A  EF19  F00C         	goto	u5751
 11810  00182E  EF1B  F00C         	goto	u5750
 11811  001832                     u5751:
 11812  001832  EFED  F00B         	goto	l5957
 11813  001836                     u5750:
 11814  001836                     
 11815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 11816  001836  A057               	btfss	_flags^0,0,c
 11817  001838  EF20  F00C         	goto	u5761
 11818  00183C  EF22  F00C         	goto	u5760
 11819  001840                     u5761:
 11820  001840  EF3F  F00C         	goto	l1024
 11821  001844                     u5760:
 11822  001844  EF30  F00C         	goto	l5971
 11823  001848                     l5967:
 11824                           
 11825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 11826  001848  0E00               	movlw	0
 11827  00184A  6E08               	movwf	(fputc@c+1)^0,c
 11828  00184C  0E20               	movlw	32
 11829  00184E  6E07               	movwf	fputc@c^0,c
 11830  001850  C010  F009         	movff	stoa@fp,fputc@fp
 11831  001854  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 11832  001858  ECAE  F016         	call	_fputc	;wreg free
 11833  00185C                     
 11834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 11835  00185C  4A24               	infsnz	stoa@l^0,f,c
 11836  00185E  2A25               	incf	(stoa@l+1)^0,f,c
 11837  001860                     l5971:
 11838                           
 11839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11840  001860  501E               	movf	stoa@w^0,w,c
 11841  001862  5C24               	subwf	stoa@l^0,w,c
 11842  001864  5025               	movf	(stoa@l+1)^0,w,c
 11843  001866  0A80               	xorlw	128
 11844  001868  6E14               	movwf	??_stoa^0,c
 11845  00186A  501F               	movf	(stoa@w+1)^0,w,c
 11846  00186C  0A80               	xorlw	128
 11847  00186E  5814               	subwfb	??_stoa^0,w,c
 11848  001870  A0D8               	btfss	status,0,c
 11849  001872  EF3D  F00C         	goto	u5771
 11850  001876  EF3F  F00C         	goto	u5770
 11851  00187A                     u5771:
 11852  00187A  EF24  F00C         	goto	l5967
 11853  00187E                     u5770:
 11854  00187E                     l1024:
 11855                           
 11856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11857  00187E  C024  F010         	movff	stoa@l,?_stoa
 11858  001882  C025  F011         	movff	stoa@l+1,?_stoa+1
 11859  001886  0012               	return		;funcret
 11860  001888                     __end_of_stoa:
 11861                           	opt callstack 0
 11862                           
 11863 ;; *************** function _dtoa *****************
 11864 ;; Defined at:
 11865 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11868 ;;		 -> NULL(0), 
 11869 ;;  d               8   35[COMRAM] long long 
 11870 ;; Auto vars:     Size  Location     Type
 11871 ;;  n               8   59[COMRAM] long long 
 11872 ;;  i               2   67[COMRAM] int 
 11873 ;;  s               2   57[COMRAM] int 
 11874 ;;  w               2   55[COMRAM] int 
 11875 ;;  p               2   53[COMRAM] int 
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  2   33[COMRAM] int 
 11878 ;; Registers used:
 11879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11880 ;; Tracked objects:
 11881 ;;		On entry : 0/0
 11882 ;;		On exit  : 0/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11885 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11886 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11887 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11888 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11889 ;;Total ram usage:       36 bytes
 11890 ;; Hardware stack levels used:    1
 11891 ;; Hardware stack levels required when called:    9
 11892 ;; This function calls:
 11893 ;;		___aodiv
 11894 ;;		___aomod
 11895 ;;		_abs
 11896 ;;		_pad
 11897 ;; This function is called by:
 11898 ;;		_vfpfcnvrt
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text65
 11903  0006B4                     __ptext65:
 11904                           	opt callstack 0
 11905  0006B4                     _dtoa:
 11906                           	opt callstack 18
 11907  0006B4                     
 11908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11909  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
 11910  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 11911  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 11912  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 11913  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 11914  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 11915  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 11916  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 11917  0006D4                     
 11918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11919  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
 11920  0006D6  EF6F  F003         	goto	u5531
 11921  0006DA  EF72  F003         	goto	u5530
 11922  0006DE                     u5531:
 11923  0006DE  0E01               	movlw	1
 11924  0006E0  EF73  F003         	goto	u5540
 11925  0006E4                     u5530:
 11926  0006E4  0E00               	movlw	0
 11927  0006E6                     u5540:
 11928  0006E6  6E3A               	movwf	dtoa@s^0,c
 11929  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
 11930                           
 11931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11932  0006EA  503A               	movf	dtoa@s^0,w,c
 11933  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
 11934  0006EE  B4D8               	btfsc	status,2,c
 11935  0006F0  EF7C  F003         	goto	u5551
 11936  0006F4  EF7E  F003         	goto	u5550
 11937  0006F8                     u5551:
 11938  0006F8  EF8E  F003         	goto	l5875
 11939  0006FC                     u5550:
 11940  0006FC                     
 11941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11942  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
 11943  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
 11944  000700  1E41               	comf	(dtoa@n+5)^0,f,c
 11945  000702  1E40               	comf	(dtoa@n+4)^0,f,c
 11946  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
 11947  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
 11948  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
 11949  00070A  6C3C               	negf	dtoa@n^0,c
 11950  00070C  0E00               	movlw	0
 11951  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
 11952  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
 11953  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
 11954  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
 11955  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
 11956  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
 11957  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
 11958  00071C                     l5875:
 11959                           
 11960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11961  00071C  0100               	movlb	0	; () banked
 11962  00071E  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11963  000720  EF94  F003         	goto	u5561
 11964  000724  EF96  F003         	goto	u5560
 11965  000728                     u5561:
 11966  000728  EF97  F003         	goto	l5879
 11967  00072C                     u5560:
 11968  00072C                     
 11969                           ; BSR set to: 0
 11970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11971  00072C  9257               	bcf	_flags^0,1,c
 11972  00072E                     l5879:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11976  00072E  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11977  000730  EFA4  F003         	goto	u5570
 11978  000734  51A6               	movf	(_prec+1)& (0+255),w,b
 11979  000736  E106               	bnz	u5571
 11980  000738  05A5               	decf	_prec& (0+255),w,b
 11981  00073A  B0D8               	btfsc	status,0,c
 11982  00073C  EFA2  F003         	goto	u5571
 11983  000740  EFA4  F003         	goto	u5570
 11984  000744                     u5571:
 11985  000744  EFAA  F003         	goto	l985
 11986  000748                     u5570:
 11987  000748                     
 11988                           ; BSR set to: 0
 11989  000748  0E00               	movlw	0
 11990  00074A  6E37               	movwf	(dtoa@p+1)^0,c
 11991  00074C  0E01               	movlw	1
 11992  00074E  6E36               	movwf	dtoa@p^0,c
 11993  000750  EFAE  F003         	goto	l987
 11994  000754                     l985:
 11995                           
 11996                           ; BSR set to: 0
 11997  000754  C0A5  F036         	movff	_prec,dtoa@p
 11998  000758  C0A6  F037         	movff	_prec+1,dtoa@p+1
 11999  00075C                     l987:
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12003  00075C  C0A3  F038         	movff	_width,dtoa@w
 12004  000760  C0A4  F039         	movff	_width+1,dtoa@w+1
 12005  000764                     
 12006                           ; BSR set to: 0
 12007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12008  000764  503A               	movf	dtoa@s^0,w,c
 12009  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
 12010  000768  A4D8               	btfss	status,2,c
 12011  00076A  EFB9  F003         	goto	u5581
 12012  00076E  EFBB  F003         	goto	u5580
 12013  000772                     u5581:
 12014  000772  EFC2  F003         	goto	l5887
 12015  000776                     u5580:
 12016  000776                     
 12017                           ; BSR set to: 0
 12018  000776  A457               	btfss	_flags^0,2,c
 12019  000778  EFC0  F003         	goto	u5591
 12020  00077C  EFC2  F003         	goto	u5590
 12021  000780                     u5591:
 12022  000780  EFC5  F003         	goto	l5889
 12023  000784                     u5590:
 12024  000784                     l5887:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12028  000784  0638               	decf	dtoa@w^0,f,c
 12029  000786  A0D8               	btfss	status,0,c
 12030  000788  0639               	decf	(dtoa@w+1)^0,f,c
 12031  00078A                     l5889:
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12035  00078A  0E00               	movlw	0
 12036  00078C  6E45               	movwf	(dtoa@i+1)^0,c
 12037  00078E  0E1F               	movlw	31
 12038  000790  6E44               	movwf	dtoa@i^0,c
 12039  000792                     
 12040                           ; BSR set to: 0
 12041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12042  000792  0E00               	movlw	0
 12043  000794  0101               	movlb	1	; () banked
 12044  000796  6FCE               	movwf	(_dbuf+31)& (0+255),b
 12045                           
 12046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12047  000798  EF4A  F004         	goto	l5903
 12048  00079C                     l5893:
 12049                           
 12050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12051  00079C  0644               	decf	dtoa@i^0,f,c
 12052  00079E  A0D8               	btfss	status,0,c
 12053  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
 12054  0007A2                     
 12055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12056  0007A2  0EAF               	movlw	low _dbuf
 12057  0007A4  2444               	addwf	dtoa@i^0,w,c
 12058  0007A6  6ED9               	movwf	fsr2l,c
 12059  0007A8  0E01               	movlw	high _dbuf
 12060  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
 12061  0007AC  6EDA               	movwf	fsr2h,c
 12062  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
 12063  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 12064  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 12065  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 12066  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 12067  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 12068  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 12069  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 12070  0007CE  0E0A               	movlw	10
 12071  0007D0  6E0D               	movwf	___aomod@divisor^0,c
 12072  0007D2  0E00               	movlw	0
 12073  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
 12074  0007D6  0E00               	movlw	0
 12075  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
 12076  0007DA  0E00               	movlw	0
 12077  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
 12078  0007DE  0E00               	movlw	0
 12079  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
 12080  0007E2  0E00               	movlw	0
 12081  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
 12082  0007E6  0E00               	movlw	0
 12083  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
 12084  0007EA  0E00               	movlw	0
 12085  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
 12086  0007EE  EC95  F00E         	call	___aomod	;wreg free
 12087  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
 12088  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 12089  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 12090  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 12091  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
 12092  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 12093  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 12094  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 12095  000812  C02C  F017         	movff	??_dtoa,abs@a
 12096  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
 12097  00081A  ECEB  F01B         	call	_abs	;wreg free
 12098  00081E  5017               	movf	?_abs^0,w,c
 12099  000820  0F30               	addlw	48
 12100  000822  6EDF               	movwf	indf2,c
 12101  000824                     
 12102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12103  000824  0636               	decf	dtoa@p^0,f,c
 12104  000826  A0D8               	btfss	status,0,c
 12105  000828  0637               	decf	(dtoa@p+1)^0,f,c
 12106  00082A                     
 12107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12108  00082A  0638               	decf	dtoa@w^0,f,c
 12109  00082C  A0D8               	btfss	status,0,c
 12110  00082E  0639               	decf	(dtoa@w+1)^0,f,c
 12111  000830                     
 12112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12113  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 12114  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 12115  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 12116  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 12117  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 12118  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 12119  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 12120  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 12121  000850  0E0A               	movlw	10
 12122  000852  6E0D               	movwf	___aodiv@divisor^0,c
 12123  000854  0E00               	movlw	0
 12124  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 12125  000858  0E00               	movlw	0
 12126  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 12127  00085C  0E00               	movlw	0
 12128  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
 12129  000860  0E00               	movlw	0
 12130  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
 12131  000864  0E00               	movlw	0
 12132  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
 12133  000868  0E00               	movlw	0
 12134  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
 12135  00086C  0E00               	movlw	0
 12136  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
 12137  000870  EC11  F00D         	call	___aodiv	;wreg free
 12138  000874  C005  F03C         	movff	?___aodiv,dtoa@n
 12139  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 12140  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 12141  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 12142  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 12143  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 12144  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 12145  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 12146  000894                     l5903:
 12147                           
 12148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12149  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
 12150  000896  EF55  F004         	goto	u5601
 12151  00089A  5045               	movf	(dtoa@i+1)^0,w,c
 12152  00089C  E108               	bnz	u5600
 12153  00089E  0444               	decf	dtoa@i^0,w,c
 12154  0008A0  A0D8               	btfss	status,0,c
 12155  0008A2  EF55  F004         	goto	u5601
 12156  0008A6  EF57  F004         	goto	u5600
 12157  0008AA                     u5601:
 12158  0008AA  EF87  F004         	goto	l5913
 12159  0008AE                     u5600:
 12160  0008AE  503C               	movf	dtoa@n^0,w,c
 12161  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
 12162  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
 12163  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
 12164  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
 12165  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
 12166  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
 12167  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
 12168  0008BE  A4D8               	btfss	status,2,c
 12169  0008C0  EF64  F004         	goto	u5611
 12170  0008C4  EF66  F004         	goto	u5610
 12171  0008C8                     u5611:
 12172  0008C8  EFCE  F003         	goto	l5893
 12173  0008CC                     u5610:
 12174  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
 12175  0008CE  EF73  F004         	goto	u5620
 12176  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
 12177  0008D4  E106               	bnz	u5621
 12178  0008D6  0436               	decf	dtoa@p^0,w,c
 12179  0008D8  B0D8               	btfsc	status,0,c
 12180  0008DA  EF71  F004         	goto	u5621
 12181  0008DE  EF73  F004         	goto	u5620
 12182  0008E2                     u5621:
 12183  0008E2  EFCE  F003         	goto	l5893
 12184  0008E6                     u5620:
 12185  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
 12186  0008E8  EF7E  F004         	goto	u5631
 12187  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
 12188  0008EE  E108               	bnz	u5630
 12189  0008F0  0438               	decf	dtoa@w^0,w,c
 12190  0008F2  A0D8               	btfss	status,0,c
 12191  0008F4  EF7E  F004         	goto	u5631
 12192  0008F8  EF80  F004         	goto	u5630
 12193  0008FC                     u5631:
 12194  0008FC  EF87  F004         	goto	l5913
 12195  000900                     u5630:
 12196  000900  B257               	btfsc	_flags^0,1,c
 12197  000902  EF85  F004         	goto	u5641
 12198  000906  EF87  F004         	goto	u5640
 12199  00090A                     u5641:
 12200  00090A  EFCE  F003         	goto	l5893
 12201  00090E                     u5640:
 12202  00090E                     l5913:
 12203                           
 12204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12205  00090E  503A               	movf	dtoa@s^0,w,c
 12206  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
 12207  000912  A4D8               	btfss	status,2,c
 12208  000914  EF8E  F004         	goto	u5651
 12209  000918  EF90  F004         	goto	u5650
 12210  00091C                     u5651:
 12211  00091C  EF97  F004         	goto	l5917
 12212  000920                     u5650:
 12213  000920  A457               	btfss	_flags^0,2,c
 12214  000922  EF95  F004         	goto	u5661
 12215  000926  EF97  F004         	goto	u5660
 12216  00092A                     u5661:
 12217  00092A  EFB5  F004         	goto	l5927
 12218  00092E                     u5660:
 12219  00092E                     l5917:
 12220                           
 12221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12222  00092E  0644               	decf	dtoa@i^0,f,c
 12223  000930  A0D8               	btfss	status,0,c
 12224  000932  0645               	decf	(dtoa@i+1)^0,f,c
 12225  000934                     
 12226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12227  000934  503A               	movf	dtoa@s^0,w,c
 12228  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
 12229  000938  A4D8               	btfss	status,2,c
 12230  00093A  EFA1  F004         	goto	u5671
 12231  00093E  EFA3  F004         	goto	u5670
 12232  000942                     u5671:
 12233  000942  EFA9  F004         	goto	l5923
 12234  000946                     u5670:
 12235  000946  0E00               	movlw	0
 12236  000948  6E35               	movwf	(_dtoa$1518+1)^0,c
 12237  00094A  0E2B               	movlw	43
 12238  00094C  6E34               	movwf	_dtoa$1518^0,c
 12239  00094E  EFAD  F004         	goto	l5925
 12240  000952                     l5923:
 12241  000952  0E00               	movlw	0
 12242  000954  6E35               	movwf	(_dtoa$1518+1)^0,c
 12243  000956  0E2D               	movlw	45
 12244  000958  6E34               	movwf	_dtoa$1518^0,c
 12245  00095A                     l5925:
 12246  00095A  0EAF               	movlw	low _dbuf
 12247  00095C  2444               	addwf	dtoa@i^0,w,c
 12248  00095E  6ED9               	movwf	fsr2l,c
 12249  000960  0E01               	movlw	high _dbuf
 12250  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
 12251  000964  6EDA               	movwf	fsr2h,c
 12252  000966  C034  FFDF         	movff	_dtoa$1518,indf2
 12253  00096A                     l5927:
 12254                           
 12255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12256  00096A  C022  F017         	movff	dtoa@fp,pad@fp
 12257  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 12258  000972  0EAF               	movlw	low _dbuf
 12259  000974  2444               	addwf	dtoa@i^0,w,c
 12260  000976  6E19               	movwf	pad@buf^0,c
 12261  000978  0E01               	movlw	high _dbuf
 12262  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
 12263  00097C  6E1A               	movwf	(pad@buf+1)^0,c
 12264  00097E  C038  F01B         	movff	dtoa@w,pad@p
 12265  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
 12266  000986  EC36  F015         	call	_pad	;wreg free
 12267  00098A  C017  F022         	movff	?_pad,?_dtoa
 12268  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
 12269  000992  0012               	return		;funcret
 12270  000994                     __end_of_dtoa:
 12271                           	opt callstack 0
 12272                           
 12273 ;; *************** function _pad *****************
 12274 ;; Defined at:
 12275 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12278 ;;		 -> NULL(0), 
 12279 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12280 ;;		 -> dbuf(32), 
 12281 ;;  p               2   26[COMRAM] int 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  w               2   31[COMRAM] int 
 12284 ;;  i               2   29[COMRAM] int 
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  2   22[COMRAM] int 
 12287 ;; Registers used:
 12288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12294 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12297 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12298 ;;Total ram usage:       11 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:    8
 12301 ;; This function calls:
 12302 ;;		_fputc
 12303 ;;		_fputs
 12304 ;;		_strlen
 12305 ;; This function is called by:
 12306 ;;		_dtoa
 12307 ;;		_utoa
 12308 ;;		_xtoa
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312                           	psect	text66
 12313  002A6C                     __ptext66:
 12314                           	opt callstack 0
 12315  002A6C                     _pad:
 12316                           	opt callstack 18
 12317  002A6C                     
 12318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12319  002A6C  A057               	btfss	_flags^0,0,c
 12320  002A6E  EF3B  F015         	goto	u5171
 12321  002A72  EF3D  F015         	goto	u5170
 12322  002A76                     u5171:
 12323  002A76  EF47  F015         	goto	l5689
 12324  002A7A                     u5170:
 12325  002A7A                     
 12326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12327  002A7A  C019  F010         	movff	pad@buf,fputs@s
 12328  002A7E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12329  002A82  C017  F012         	movff	pad@fp,fputs@fp
 12330  002A86  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12331  002A8A  EC67  F01B         	call	_fputs	;wreg free
 12332  002A8E                     l5689:
 12333                           
 12334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 12335  002A8E  BE1C               	btfsc	(pad@p+1)^0,7,c
 12336  002A90  EF4C  F015         	goto	u5181
 12337  002A94  EF4E  F015         	goto	u5180
 12338  002A98                     u5181:
 12339  002A98  EF54  F015         	goto	l5693
 12340  002A9C                     u5180:
 12341  002A9C  C01B  F020         	movff	pad@p,pad@w
 12342  002AA0  C01C  F021         	movff	pad@p+1,pad@w+1
 12343  002AA4  EF58  F015         	goto	l974
 12344  002AA8                     l5693:
 12345  002AA8  0E00               	movlw	0
 12346  002AAA  6E21               	movwf	(pad@w+1)^0,c
 12347  002AAC  0E00               	movlw	0
 12348  002AAE  6E20               	movwf	pad@w^0,c
 12349  002AB0                     l974:
 12350                           
 12351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12352  002AB0  0E00               	movlw	0
 12353  002AB2  6E1F               	movwf	(pad@i+1)^0,c
 12354  002AB4  0E00               	movlw	0
 12355  002AB6  6E1E               	movwf	pad@i^0,c
 12356                           
 12357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12358  002AB8  EF6A  F015         	goto	l5699
 12359  002ABC                     l5695:
 12360                           
 12361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12362  002ABC  0E00               	movlw	0
 12363  002ABE  6E08               	movwf	(fputc@c+1)^0,c
 12364  002AC0  0E20               	movlw	32
 12365  002AC2  6E07               	movwf	fputc@c^0,c
 12366  002AC4  C017  F009         	movff	pad@fp,fputc@fp
 12367  002AC8  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12368  002ACC  ECAE  F016         	call	_fputc	;wreg free
 12369  002AD0                     
 12370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12371  002AD0  4A1E               	infsnz	pad@i^0,f,c
 12372  002AD2  2A1F               	incf	(pad@i+1)^0,f,c
 12373  002AD4                     l5699:
 12374                           
 12375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12376  002AD4  5020               	movf	pad@w^0,w,c
 12377  002AD6  5C1E               	subwf	pad@i^0,w,c
 12378  002AD8  501F               	movf	(pad@i+1)^0,w,c
 12379  002ADA  0A80               	xorlw	128
 12380  002ADC  6E1D               	movwf	??_pad^0,c
 12381  002ADE  5021               	movf	(pad@w+1)^0,w,c
 12382  002AE0  0A80               	xorlw	128
 12383  002AE2  581D               	subwfb	??_pad^0,w,c
 12384  002AE4  A0D8               	btfss	status,0,c
 12385  002AE6  EF77  F015         	goto	u5191
 12386  002AEA  EF79  F015         	goto	u5190
 12387  002AEE                     u5191:
 12388  002AEE  EF5E  F015         	goto	l5695
 12389  002AF2                     u5190:
 12390  002AF2                     
 12391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12392  002AF2  B057               	btfsc	_flags^0,0,c
 12393  002AF4  EF7E  F015         	goto	u5201
 12394  002AF8  EF80  F015         	goto	u5200
 12395  002AFC                     u5201:
 12396  002AFC  EF8A  F015         	goto	l5703
 12397  002B00                     u5200:
 12398  002B00                     
 12399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12400  002B00  C019  F010         	movff	pad@buf,fputs@s
 12401  002B04  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12402  002B08  C017  F012         	movff	pad@fp,fputs@fp
 12403  002B0C  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12404  002B10  EC67  F01B         	call	_fputs	;wreg free
 12405  002B14                     l5703:
 12406                           
 12407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12408  002B14  C019  F005         	movff	pad@buf,strlen@s
 12409  002B18  C01A  F006         	movff	pad@buf+1,strlen@s+1
 12410  002B1C  EC88  F01A         	call	_strlen	;wreg free
 12411  002B20  5020               	movf	pad@w^0,w,c
 12412  002B22  2405               	addwf	?_strlen^0,w,c
 12413  002B24  6E17               	movwf	?_pad^0,c
 12414  002B26  5021               	movf	(pad@w+1)^0,w,c
 12415  002B28  2006               	addwfc	(?_strlen+1)^0,w,c
 12416  002B2A  6E18               	movwf	(?_pad+1)^0,c
 12417  002B2C  0012               	return		;funcret
 12418  002B2E                     __end_of_pad:
 12419                           	opt callstack 0
 12420                           
 12421 ;; *************** function _strlen *****************
 12422 ;; Defined at:
 12423 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  s               2    4[COMRAM] PTR const unsigned char 
 12426 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1443(20), 
 12427 ;;		 -> ValidateCmd@ConfName_1439(20), ValidateCmd@ConfName(20), STR_26(9), STR_25(12), 
 12428 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 12429 ;; Auto vars:     Size  Location     Type
 12430 ;;  a               2    6[COMRAM] PTR const unsigned char 
 12431 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1443(20), 
 12432 ;;		 -> ValidateCmd@ConfName_1439(20), ValidateCmd@ConfName(20), STR_26(9), STR_25(12), 
 12433 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  2    4[COMRAM] unsigned int 
 12436 ;; Registers used:
 12437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;Total ram usage:        4 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    4
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_ReadRX232
 12454 ;;		_SaveCardDat
 12455 ;;		_pad
 12456 ;;		_stoa
 12457 ;;		_strcat
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text67
 12462  003510                     __ptext67:
 12463                           	opt callstack 0
 12464  003510                     _strlen:
 12465                           	opt callstack 21
 12466  003510  C005  F007         	movff	strlen@s,strlen@a
 12467  003514  C006  F008         	movff	strlen@s+1,strlen@a+1
 12468  003518  EF90  F01A         	goto	l5667
 12469  00351C                     l5665:
 12470  00351C  4A05               	infsnz	strlen@s^0,f,c
 12471  00351E  2A06               	incf	(strlen@s+1)^0,f,c
 12472  003520                     l5667:
 12473  003520  C005  FFF6         	movff	strlen@s,tblptrl
 12474  003524  C006  FFF7         	movff	strlen@s+1,tblptrh
 12475  003528  0E00               	movlw	low (__mediumconst shr (0+16))
 12476  00352A  6EF8               	movwf	tblptru,c
 12477  00352C  0E0E               	movlw	(high __ramtop+-1)
 12478  00352E  64F7               	cpfsgt	tblptrh,c
 12479  003530  D003               	bra	u5127
 12480  003532  0008               	tblrd		*
 12481  003534  50F5               	movf	tablat,w,c
 12482  003536  D005               	bra	u5120
 12483  003538                     u5127:
 12484  003538  CFF6 FFE9          	movff	tblptrl,fsr0l
 12485  00353C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12486  003540  50EF               	movf	indf0,w,c
 12487  003542                     u5120:
 12488  003542  0900               	iorlw	0
 12489  003544  A4D8               	btfss	status,2,c
 12490  003546  EFA7  F01A         	goto	u5131
 12491  00354A  EFA9  F01A         	goto	u5130
 12492  00354E                     u5131:
 12493  00354E  EF8E  F01A         	goto	l5665
 12494  003552                     u5130:
 12495  003552  5007               	movf	strlen@a^0,w,c
 12496  003554  5C05               	subwf	strlen@s^0,w,c
 12497  003556  6E05               	movwf	?_strlen^0,c
 12498  003558  5008               	movf	(strlen@a+1)^0,w,c
 12499  00355A  5806               	subwfb	(strlen@s+1)^0,w,c
 12500  00355C  6E06               	movwf	(?_strlen+1)^0,c
 12501  00355E  0012               	return		;funcret
 12502  003560                     __end_of_strlen:
 12503                           	opt callstack 0
 12504                           
 12505 ;; *************** function _fputs *****************
 12506 ;; Defined at:
 12507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12510 ;;		 -> dbuf(32), 
 12511 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12512 ;;		 -> NULL(0), 
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;  i               2   20[COMRAM] int 
 12515 ;;  c               1   19[COMRAM] unsigned char 
 12516 ;; Return value:  Size  Location     Type
 12517 ;;                  2   15[COMRAM] int 
 12518 ;; Registers used:
 12519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12520 ;; Tracked objects:
 12521 ;;		On entry : 0/0
 12522 ;;		On exit  : 0/0
 12523 ;;		Unchanged: 0/0
 12524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12526 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12528 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12529 ;;Total ram usage:        7 bytes
 12530 ;; Hardware stack levels used:    1
 12531 ;; Hardware stack levels required when called:    7
 12532 ;; This function calls:
 12533 ;;		_fputc
 12534 ;; This function is called by:
 12535 ;;		_pad
 12536 ;; This function uses a non-reentrant model
 12537 ;;
 12538                           
 12539                           	psect	text68
 12540  0036CE                     __ptext68:
 12541                           	opt callstack 0
 12542  0036CE                     _fputs:
 12543                           	opt callstack 18
 12544  0036CE  0E00               	movlw	0
 12545  0036D0  6E16               	movwf	(fputs@i+1)^0,c
 12546  0036D2  0E00               	movlw	0
 12547  0036D4  6E15               	movwf	fputs@i^0,c
 12548  0036D6  EF78  F01B         	goto	l5679
 12549  0036DA                     l5675:
 12550  0036DA  C014  F007         	movff	fputs@c,fputc@c
 12551  0036DE  6A08               	clrf	(fputc@c+1)^0,c
 12552  0036E0  C012  F009         	movff	fputs@fp,fputc@fp
 12553  0036E4  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12554  0036E8  ECAE  F016         	call	_fputc	;wreg free
 12555  0036EC  4A15               	infsnz	fputs@i^0,f,c
 12556  0036EE  2A16               	incf	(fputs@i+1)^0,f,c
 12557  0036F0                     l5679:
 12558  0036F0  5015               	movf	fputs@i^0,w,c
 12559  0036F2  2410               	addwf	fputs@s^0,w,c
 12560  0036F4  6ED9               	movwf	fsr2l,c
 12561  0036F6  5016               	movf	(fputs@i+1)^0,w,c
 12562  0036F8  2011               	addwfc	(fputs@s+1)^0,w,c
 12563  0036FA  6EDA               	movwf	fsr2h,c
 12564  0036FC  50DF               	movf	indf2,w,c
 12565  0036FE  6E14               	movwf	fputs@c^0,c
 12566  003700  5014               	movf	fputs@c^0,w,c
 12567  003702  A4D8               	btfss	status,2,c
 12568  003704  EF86  F01B         	goto	u5141
 12569  003708  EF88  F01B         	goto	u5140
 12570  00370C                     u5141:
 12571  00370C  EF6D  F01B         	goto	l5675
 12572  003710                     u5140:
 12573  003710  0012               	return		;funcret
 12574  003712                     __end_of_fputs:
 12575                           	opt callstack 0
 12576                           
 12577 ;; *************** function _fputc *****************
 12578 ;; Defined at:
 12579 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;  c               2    6[COMRAM] int 
 12582 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12583 ;;		 -> NULL(0), 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  2    6[COMRAM] int 
 12588 ;; Registers used:
 12589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12590 ;; Tracked objects:
 12591 ;;		On entry : 0/0
 12592 ;;		On exit  : 0/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12597 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12598 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12599 ;;Total ram usage:        9 bytes
 12600 ;; Hardware stack levels used:    1
 12601 ;; Hardware stack levels required when called:    6
 12602 ;; This function calls:
 12603 ;;		_putch
 12604 ;; This function is called by:
 12605 ;;		_pad
 12606 ;;		_stoa
 12607 ;;		_vfpfcnvrt
 12608 ;;		_fputs
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text69
 12613  002D5C                     __ptext69:
 12614                           	opt callstack 0
 12615  002D5C                     _fputc:
 12616                           	opt callstack 18
 12617  002D5C  5009               	movf	fputc@fp^0,w,c
 12618  002D5E  100A               	iorwf	(fputc@fp+1)^0,w,c
 12619  002D60  B4D8               	btfsc	status,2,c
 12620  002D62  EFB5  F016         	goto	u5081
 12621  002D66  EFB7  F016         	goto	u5080
 12622  002D6A                     u5081:
 12623  002D6A  EFC0  F016         	goto	l5653
 12624  002D6E                     u5080:
 12625  002D6E  5009               	movf	fputc@fp^0,w,c
 12626  002D70  100A               	iorwf	(fputc@fp+1)^0,w,c
 12627  002D72  A4D8               	btfss	status,2,c
 12628  002D74  EFBE  F016         	goto	u5091
 12629  002D78  EFC0  F016         	goto	u5090
 12630  002D7C                     u5091:
 12631  002D7C  EFC5  F016         	goto	l5655
 12632  002D80                     u5090:
 12633  002D80                     l5653:
 12634  002D80  5007               	movf	fputc@c^0,w,c
 12635  002D82  ECC7  F01D         	call	_putch
 12636  002D86  EFF8  F016         	goto	l1874
 12637  002D8A                     l5655:
 12638  002D8A  EE20 F004          	lfsr	2,4
 12639  002D8E  5009               	movf	fputc@fp^0,w,c
 12640  002D90  26D9               	addwf	fsr2l,f,c
 12641  002D92  500A               	movf	(fputc@fp+1)^0,w,c
 12642  002D94  22DA               	addwfc	fsr2h,f,c
 12643  002D96  50DE               	movf	postinc2,w,c
 12644  002D98  10DE               	iorwf	postinc2,w,c
 12645  002D9A  B4D8               	btfsc	status,2,c
 12646  002D9C  EFD2  F016         	goto	u5101
 12647  002DA0  EFD4  F016         	goto	u5100
 12648  002DA4                     u5101:
 12649  002DA4  EFEF  F016         	goto	l5659
 12650  002DA8                     u5100:
 12651  002DA8  EE20 F004          	lfsr	2,4
 12652  002DAC  5009               	movf	fputc@fp^0,w,c
 12653  002DAE  26D9               	addwf	fsr2l,f,c
 12654  002DB0  500A               	movf	(fputc@fp+1)^0,w,c
 12655  002DB2  22DA               	addwfc	fsr2h,f,c
 12656  002DB4  EE10 F002          	lfsr	1,2
 12657  002DB8  5009               	movf	fputc@fp^0,w,c
 12658  002DBA  26E1               	addwf	fsr1l,f,c
 12659  002DBC  500A               	movf	(fputc@fp+1)^0,w,c
 12660  002DBE  22E2               	addwfc	fsr1h,f,c
 12661  002DC0  50DE               	movf	postinc2,w,c
 12662  002DC2  5CE6               	subwf	postinc1,w,c
 12663  002DC4  50E6               	movf	postinc1,w,c
 12664  002DC6  0A80               	xorlw	128
 12665  002DC8  6E0F               	movwf	(??_fputc+4)^0,c
 12666  002DCA  50DE               	movf	postinc2,w,c
 12667  002DCC  0A80               	xorlw	128
 12668  002DCE  580F               	subwfb	(??_fputc+4)^0,w,c
 12669  002DD0  B0D8               	btfsc	status,0,c
 12670  002DD2  EFED  F016         	goto	u5111
 12671  002DD6  EFEF  F016         	goto	u5110
 12672  002DDA                     u5111:
 12673  002DDA  EFF8  F016         	goto	l1874
 12674  002DDE                     u5110:
 12675  002DDE                     l5659:
 12676  002DDE  EE20 F002          	lfsr	2,2
 12677  002DE2  5009               	movf	fputc@fp^0,w,c
 12678  002DE4  26D9               	addwf	fsr2l,f,c
 12679  002DE6  500A               	movf	(fputc@fp+1)^0,w,c
 12680  002DE8  22DA               	addwfc	fsr2h,f,c
 12681  002DEA  2ADE               	incf	postinc2,f,c
 12682  002DEC  0E00               	movlw	0
 12683  002DEE  22DD               	addwfc	postdec2,f,c
 12684  002DF0                     l1874:
 12685  002DF0  0012               	return		;funcret
 12686  002DF2                     __end_of_fputc:
 12687                           	opt callstack 0
 12688                           
 12689 ;; *************** function _putch *****************
 12690 ;; Defined at:
 12691 ;;		line 201 in file "mcc_generated_files/eusart2.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  txData          1    wreg     unsigned char 
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;  txData          1    5[COMRAM] unsigned char 
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  1    wreg      void 
 12698 ;; Registers used:
 12699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;Total ram usage:        1 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:    5
 12712 ;; This function calls:
 12713 ;;		_EUSART2_Write
 12714 ;; This function is called by:
 12715 ;;		_fputc
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text70
 12720  003B8E                     __ptext70:
 12721                           	opt callstack 0
 12722  003B8E                     _putch:
 12723                           	opt callstack 18
 12724                           
 12725                           ;incstack = 0
 12726                           ;putch@txData stored from wreg
 12727  003B8E  6E06               	movwf	putch@txData^0,c
 12728  003B90                     
 12729                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
 12730  003B90  5006               	movf	putch@txData^0,w,c
 12731  003B92  ECD8  F019         	call	_EUSART2_Write
 12732  003B96  0012               	return		;funcret
 12733  003B98                     __end_of_putch:
 12734                           	opt callstack 0
 12735                           
 12736 ;; *************** function _EUSART2_Write *****************
 12737 ;; Defined at:
 12738 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;  txData          1    wreg     unsigned char 
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;  txData          1    4[COMRAM] unsigned char 
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  1    wreg      void 
 12745 ;; Registers used:
 12746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12756 ;;Total ram usage:        1 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    4
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_putch
 12763 ;;		_ReadRX232
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text71
 12768  0033B0                     __ptext71:
 12769                           	opt callstack 0
 12770  0033B0                     _EUSART2_Write:
 12771                           	opt callstack 18
 12772                           
 12773                           ;incstack = 0
 12774                           ;EUSART2_Write@txData stored from wreg
 12775  0033B0  6E05               	movwf	EUSART2_Write@txData^0,c
 12776  0033B2                     l5631:
 12777                           
 12778                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 12779  0033B2  0100               	movlb	0	; () banked
 12780  0033B4  51BC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 12781  0033B6  B4D8               	btfsc	status,2,c
 12782  0033B8  EFE0  F019         	goto	u5051
 12783  0033BC  EFE2  F019         	goto	u5050
 12784  0033C0                     u5051:
 12785  0033C0  EFD9  F019         	goto	l5631
 12786  0033C4                     u5050:
 12787  0033C4                     
 12788                           ; BSR set to: 0
 12789                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 12790  0033C4  010E               	movlb	14	; () banked
 12791  0033C6  BDC5               	btfsc	197,6,b	;volatile
 12792  0033C8  EFE8  F019         	goto	u5061
 12793  0033CC  EFEA  F019         	goto	u5060
 12794  0033D0                     u5061:
 12795  0033D0  EFEE  F019         	goto	l321
 12796  0033D4                     u5060:
 12797  0033D4                     
 12798                           ; BSR set to: 14
 12799                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 12800  0033D4  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 12801                           
 12802                           ;mcc_generated_files/eusart2.c: 182:     }
 12803  0033D8  EF04  F01A         	goto	l5645
 12804  0033DC                     l321:
 12805                           
 12806                           ; BSR set to: 14
 12807                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 12808  0033DC  9DC5               	bcf	197,6,b	;volatile
 12809  0033DE                     
 12810                           ; BSR set to: 14
 12811                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 12812  0033DE  0E84               	movlw	low _eusart2TxBuffer
 12813  0033E0  0100               	movlb	0	; () banked
 12814  0033E2  25BA               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 12815  0033E4  6ED9               	movwf	fsr2l,c
 12816  0033E6  6ADA               	clrf	fsr2h,c
 12817  0033E8  0E02               	movlw	high _eusart2TxBuffer
 12818  0033EA  22DA               	addwfc	fsr2h,f,c
 12819  0033EC  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 12820  0033F0                     
 12821                           ; BSR set to: 0
 12822  0033F0  2BBA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 12823  0033F2                     
 12824                           ; BSR set to: 0
 12825                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 12826  0033F2  0E1F               	movlw	31
 12827  0033F4  65BA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 12828  0033F6  EFFF  F019         	goto	u5071
 12829  0033FA  EF01  F01A         	goto	u5070
 12830  0033FE                     u5071:
 12831  0033FE  EF03  F01A         	goto	l5643
 12832  003402                     u5070:
 12833  003402                     
 12834                           ; BSR set to: 0
 12835                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 12836  003402  0E00               	movlw	0
 12837  003404  6FBA               	movwf	_eusart2TxHead& (0+255),b	;volatile
 12838  003406                     l5643:
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 12842  003406  07BC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 12843  003408                     l5645:
 12844                           
 12845                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 12846  003408  010E               	movlb	14	; () banked
 12847  00340A  8DC5               	bsf	197,6,b	;volatile
 12848  00340C                     
 12849                           ; BSR set to: 14
 12850  00340C  0012               	return		;funcret
 12851  00340E                     __end_of_EUSART2_Write:
 12852                           	opt callstack 0
 12853                           
 12854 ;; *************** function _abs *****************
 12855 ;; Defined at:
 12856 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  a               2   22[COMRAM] int 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  2   22[COMRAM] int 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;Total ram usage:        4 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    4
 12877 ;; This function calls:
 12878 ;;		Nothing
 12879 ;; This function is called by:
 12880 ;;		_dtoa
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884                           	psect	text72
 12885  0037D6                     __ptext72:
 12886                           	opt callstack 0
 12887  0037D6                     _abs:
 12888                           	opt callstack 22
 12889  0037D6  BE18               	btfsc	(abs@a+1)^0,7,c
 12890  0037D8  EFF8  F01B         	goto	u5210
 12891  0037DC  5018               	movf	(abs@a+1)^0,w,c
 12892  0037DE  E106               	bnz	u5211
 12893  0037E0  0417               	decf	abs@a^0,w,c
 12894  0037E2  B0D8               	btfsc	status,0,c
 12895  0037E4  EFF6  F01B         	goto	u5211
 12896  0037E8  EFF8  F01B         	goto	u5210
 12897  0037EC                     u5211:
 12898  0037EC  EF06  F01C         	goto	l1792
 12899  0037F0                     u5210:
 12900  0037F0  C017  F019         	movff	abs@a,??_abs
 12901  0037F4  C018  F01A         	movff	abs@a+1,??_abs+1
 12902  0037F8  1E19               	comf	??_abs^0,f,c
 12903  0037FA  1E1A               	comf	(??_abs+1)^0,f,c
 12904  0037FC  4A19               	infsnz	??_abs^0,f,c
 12905  0037FE  2A1A               	incf	(??_abs+1)^0,f,c
 12906  003800  C019  F017         	movff	??_abs,?_abs
 12907  003804  C01A  F018         	movff	??_abs+1,?_abs+1
 12908  003808  EF0A  F01C         	goto	l1795
 12909  00380C                     l1792:
 12910  00380C  C017  F017         	movff	abs@a,?_abs
 12911  003810  C018  F018         	movff	abs@a+1,?_abs+1
 12912  003814                     l1795:
 12913  003814  0012               	return		;funcret
 12914  003816                     __end_of_abs:
 12915                           	opt callstack 0
 12916                           
 12917 ;; *************** function ___aomod *****************
 12918 ;; Defined at:
 12919 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;  dividend        8    4[COMRAM] long long 
 12922 ;;  divisor         8   12[COMRAM] long long 
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;  sign            1   21[COMRAM] unsigned char 
 12925 ;;  counter         1   20[COMRAM] unsigned char 
 12926 ;; Return value:  Size  Location     Type
 12927 ;;                  8    4[COMRAM] long long 
 12928 ;; Registers used:
 12929 ;;		wreg, status,2, status,0
 12930 ;; Tracked objects:
 12931 ;;		On entry : 0/0
 12932 ;;		On exit  : 0/0
 12933 ;;		Unchanged: 0/0
 12934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12935 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12936 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12938 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12939 ;;Total ram usage:       18 bytes
 12940 ;; Hardware stack levels used:    1
 12941 ;; Hardware stack levels required when called:    4
 12942 ;; This function calls:
 12943 ;;		Nothing
 12944 ;; This function is called by:
 12945 ;;		_dtoa
 12946 ;; This function uses a non-reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text73
 12950  001D2A                     __ptext73:
 12951                           	opt callstack 0
 12952  001D2A                     ___aomod:
 12953                           	opt callstack 22
 12954  001D2A  0E00               	movlw	0
 12955  001D2C  6E16               	movwf	___aomod@sign^0,c
 12956  001D2E  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 12957  001D30  EF9E  F00E         	goto	u5380
 12958  001D34  EF9C  F00E         	goto	u5381
 12959  001D38                     u5381:
 12960  001D38  EFB0  F00E         	goto	l5791
 12961  001D3C                     u5380:
 12962  001D3C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 12963  001D3E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 12964  001D40  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 12965  001D42  1E09               	comf	(___aomod@dividend+4)^0,f,c
 12966  001D44  1E08               	comf	(___aomod@dividend+3)^0,f,c
 12967  001D46  1E07               	comf	(___aomod@dividend+2)^0,f,c
 12968  001D48  1E06               	comf	(___aomod@dividend+1)^0,f,c
 12969  001D4A  6C05               	negf	___aomod@dividend^0,c
 12970  001D4C  0E00               	movlw	0
 12971  001D4E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 12972  001D50  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 12973  001D52  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 12974  001D54  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 12975  001D56  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 12976  001D58  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 12977  001D5A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 12978  001D5C  0E01               	movlw	1
 12979  001D5E  6E16               	movwf	___aomod@sign^0,c
 12980  001D60                     l5791:
 12981  001D60  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 12982  001D62  EFB7  F00E         	goto	u5390
 12983  001D66  EFB5  F00E         	goto	u5391
 12984  001D6A                     u5391:
 12985  001D6A  EFC7  F00E         	goto	l5795
 12986  001D6E                     u5390:
 12987  001D6E  1E14               	comf	(___aomod@divisor+7)^0,f,c
 12988  001D70  1E13               	comf	(___aomod@divisor+6)^0,f,c
 12989  001D72  1E12               	comf	(___aomod@divisor+5)^0,f,c
 12990  001D74  1E11               	comf	(___aomod@divisor+4)^0,f,c
 12991  001D76  1E10               	comf	(___aomod@divisor+3)^0,f,c
 12992  001D78  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 12993  001D7A  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 12994  001D7C  6C0D               	negf	___aomod@divisor^0,c
 12995  001D7E  0E00               	movlw	0
 12996  001D80  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 12997  001D82  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 12998  001D84  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 12999  001D86  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 13000  001D88  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 13001  001D8A  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 13002  001D8C  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 13003  001D8E                     l5795:
 13004  001D8E  500D               	movf	___aomod@divisor^0,w,c
 13005  001D90  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 13006  001D92  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 13007  001D94  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 13008  001D96  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 13009  001D98  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 13010  001D9A  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 13011  001D9C  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 13012  001D9E  B4D8               	btfsc	status,2,c
 13013  001DA0  EFD4  F00E         	goto	u5401
 13014  001DA4  EFD6  F00E         	goto	u5400
 13015  001DA8                     u5401:
 13016  001DA8  EF1E  F00F         	goto	l5811
 13017  001DAC                     u5400:
 13018  001DAC  0E01               	movlw	1
 13019  001DAE  6E15               	movwf	___aomod@counter^0,c
 13020  001DB0  EFE4  F00E         	goto	l5801
 13021  001DB4                     l5799:
 13022  001DB4  90D8               	bcf	status,0,c
 13023  001DB6  360D               	rlcf	___aomod@divisor^0,f,c
 13024  001DB8  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 13025  001DBA  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 13026  001DBC  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 13027  001DBE  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 13028  001DC0  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 13029  001DC2  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 13030  001DC4  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 13031  001DC6  2A15               	incf	___aomod@counter^0,f,c
 13032  001DC8                     l5801:
 13033  001DC8  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 13034  001DCA  EFE9  F00E         	goto	u5411
 13035  001DCE  EFEB  F00E         	goto	u5410
 13036  001DD2                     u5411:
 13037  001DD2  EFDA  F00E         	goto	l5799
 13038  001DD6                     u5410:
 13039  001DD6                     l5803:
 13040  001DD6  500D               	movf	___aomod@divisor^0,w,c
 13041  001DD8  5C05               	subwf	___aomod@dividend^0,w,c
 13042  001DDA  500E               	movf	(___aomod@divisor+1)^0,w,c
 13043  001DDC  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 13044  001DDE  500F               	movf	(___aomod@divisor+2)^0,w,c
 13045  001DE0  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 13046  001DE2  5010               	movf	(___aomod@divisor+3)^0,w,c
 13047  001DE4  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 13048  001DE6  5011               	movf	(___aomod@divisor+4)^0,w,c
 13049  001DE8  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 13050  001DEA  5012               	movf	(___aomod@divisor+5)^0,w,c
 13051  001DEC  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 13052  001DEE  5013               	movf	(___aomod@divisor+6)^0,w,c
 13053  001DF0  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 13054  001DF2  5014               	movf	(___aomod@divisor+7)^0,w,c
 13055  001DF4  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 13056  001DF6  A0D8               	btfss	status,0,c
 13057  001DF8  EF00  F00F         	goto	u5421
 13058  001DFC  EF02  F00F         	goto	u5420
 13059  001E00                     u5421:
 13060  001E00  EF12  F00F         	goto	l5807
 13061  001E04                     u5420:
 13062  001E04  500D               	movf	___aomod@divisor^0,w,c
 13063  001E06  5E05               	subwf	___aomod@dividend^0,f,c
 13064  001E08  500E               	movf	(___aomod@divisor+1)^0,w,c
 13065  001E0A  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 13066  001E0C  500F               	movf	(___aomod@divisor+2)^0,w,c
 13067  001E0E  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 13068  001E10  5010               	movf	(___aomod@divisor+3)^0,w,c
 13069  001E12  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 13070  001E14  5011               	movf	(___aomod@divisor+4)^0,w,c
 13071  001E16  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 13072  001E18  5012               	movf	(___aomod@divisor+5)^0,w,c
 13073  001E1A  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 13074  001E1C  5013               	movf	(___aomod@divisor+6)^0,w,c
 13075  001E1E  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 13076  001E20  5014               	movf	(___aomod@divisor+7)^0,w,c
 13077  001E22  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 13078  001E24                     l5807:
 13079  001E24  90D8               	bcf	status,0,c
 13080  001E26  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 13081  001E28  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 13082  001E2A  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 13083  001E2C  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 13084  001E2E  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 13085  001E30  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 13086  001E32  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 13087  001E34  320D               	rrcf	___aomod@divisor^0,f,c
 13088  001E36  2E15               	decfsz	___aomod@counter^0,f,c
 13089  001E38  EFEB  F00E         	goto	l5803
 13090  001E3C                     l5811:
 13091  001E3C  5016               	movf	___aomod@sign^0,w,c
 13092  001E3E  B4D8               	btfsc	status,2,c
 13093  001E40  EF24  F00F         	goto	u5431
 13094  001E44  EF26  F00F         	goto	u5430
 13095  001E48                     u5431:
 13096  001E48  EF36  F00F         	goto	l5815
 13097  001E4C                     u5430:
 13098  001E4C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 13099  001E4E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 13100  001E50  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 13101  001E52  1E09               	comf	(___aomod@dividend+4)^0,f,c
 13102  001E54  1E08               	comf	(___aomod@dividend+3)^0,f,c
 13103  001E56  1E07               	comf	(___aomod@dividend+2)^0,f,c
 13104  001E58  1E06               	comf	(___aomod@dividend+1)^0,f,c
 13105  001E5A  6C05               	negf	___aomod@dividend^0,c
 13106  001E5C  0E00               	movlw	0
 13107  001E5E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 13108  001E60  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 13109  001E62  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 13110  001E64  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 13111  001E66  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 13112  001E68  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 13113  001E6A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 13114  001E6C                     l5815:
 13115  001E6C  C005  F005         	movff	___aomod@dividend,?___aomod
 13116  001E70  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 13117  001E74  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 13118  001E78  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 13119  001E7C  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 13120  001E80  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 13121  001E84  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 13122  001E88  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 13123  001E8C  0012               	return		;funcret
 13124  001E8E                     __end_of___aomod:
 13125                           	opt callstack 0
 13126                           
 13127 ;; *************** function ___aodiv *****************
 13128 ;; Defined at:
 13129 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;  dividend        8    4[COMRAM] long long 
 13132 ;;  divisor         8   12[COMRAM] long long 
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;  quotient        8   22[COMRAM] long long 
 13135 ;;  sign            1   21[COMRAM] unsigned char 
 13136 ;;  counter         1   20[COMRAM] unsigned char 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  8    4[COMRAM] long long 
 13139 ;; Registers used:
 13140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13146 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13149 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13150 ;;Total ram usage:       26 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:    4
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_dtoa
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text74
 13161  001A22                     __ptext74:
 13162                           	opt callstack 0
 13163  001A22                     ___aodiv:
 13164                           	opt callstack 22
 13165  001A22  0E00               	movlw	0
 13166  001A24  6E16               	movwf	___aodiv@sign^0,c
 13167  001A26  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 13168  001A28  EF1A  F00D         	goto	u5310
 13169  001A2C  EF18  F00D         	goto	u5311
 13170  001A30                     u5311:
 13171  001A30  EF2C  F00D         	goto	l5747
 13172  001A34                     u5310:
 13173  001A34  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 13174  001A36  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 13175  001A38  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 13176  001A3A  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 13177  001A3C  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 13178  001A3E  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 13179  001A40  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 13180  001A42  6C0D               	negf	___aodiv@divisor^0,c
 13181  001A44  0E00               	movlw	0
 13182  001A46  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 13183  001A48  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 13184  001A4A  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 13185  001A4C  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 13186  001A4E  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 13187  001A50  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 13188  001A52  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 13189  001A54  0E01               	movlw	1
 13190  001A56  6E16               	movwf	___aodiv@sign^0,c
 13191  001A58                     l5747:
 13192  001A58  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 13193  001A5A  EF33  F00D         	goto	u5320
 13194  001A5E  EF31  F00D         	goto	u5321
 13195  001A62                     u5321:
 13196  001A62  EF45  F00D         	goto	l5753
 13197  001A66                     u5320:
 13198  001A66  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 13199  001A68  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 13200  001A6A  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 13201  001A6C  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 13202  001A6E  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 13203  001A70  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 13204  001A72  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 13205  001A74  6C05               	negf	___aodiv@dividend^0,c
 13206  001A76  0E00               	movlw	0
 13207  001A78  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 13208  001A7A  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 13209  001A7C  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 13210  001A7E  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 13211  001A80  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 13212  001A82  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 13213  001A84  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 13214  001A86  0E01               	movlw	1
 13215  001A88  1A16               	xorwf	___aodiv@sign^0,f,c
 13216  001A8A                     l5753:
 13217  001A8A  EE20  F017         	lfsr	2,___aodiv@quotient
 13218  001A8E  0E07               	movlw	7
 13219  001A90                     u5331:
 13220  001A90  6ADE               	clrf	postinc2,c
 13221  001A92  06E8               	decf	wreg,f,c
 13222  001A94  E2FD               	bc	u5331
 13223  001A96  500D               	movf	___aodiv@divisor^0,w,c
 13224  001A98  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 13225  001A9A  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 13226  001A9C  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 13227  001A9E  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 13228  001AA0  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 13229  001AA2  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 13230  001AA4  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 13231  001AA6  B4D8               	btfsc	status,2,c
 13232  001AA8  EF58  F00D         	goto	u5341
 13233  001AAC  EF5A  F00D         	goto	u5340
 13234  001AB0                     u5341:
 13235  001AB0  EFAC  F00D         	goto	l5775
 13236  001AB4                     u5340:
 13237  001AB4  0E01               	movlw	1
 13238  001AB6  6E15               	movwf	___aodiv@counter^0,c
 13239  001AB8  EF68  F00D         	goto	l5761
 13240  001ABC                     l5759:
 13241  001ABC  90D8               	bcf	status,0,c
 13242  001ABE  360D               	rlcf	___aodiv@divisor^0,f,c
 13243  001AC0  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 13244  001AC2  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 13245  001AC4  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 13246  001AC6  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 13247  001AC8  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 13248  001ACA  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 13249  001ACC  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 13250  001ACE  2A15               	incf	___aodiv@counter^0,f,c
 13251  001AD0                     l5761:
 13252  001AD0  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 13253  001AD2  EF6D  F00D         	goto	u5351
 13254  001AD6  EF6F  F00D         	goto	u5350
 13255  001ADA                     u5351:
 13256  001ADA  EF5E  F00D         	goto	l5759
 13257  001ADE                     u5350:
 13258  001ADE                     l5763:
 13259  001ADE  90D8               	bcf	status,0,c
 13260  001AE0  3617               	rlcf	___aodiv@quotient^0,f,c
 13261  001AE2  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 13262  001AE4  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 13263  001AE6  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 13264  001AE8  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 13265  001AEA  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 13266  001AEC  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 13267  001AEE  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 13268  001AF0  500D               	movf	___aodiv@divisor^0,w,c
 13269  001AF2  5C05               	subwf	___aodiv@dividend^0,w,c
 13270  001AF4  500E               	movf	(___aodiv@divisor+1)^0,w,c
 13271  001AF6  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 13272  001AF8  500F               	movf	(___aodiv@divisor+2)^0,w,c
 13273  001AFA  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 13274  001AFC  5010               	movf	(___aodiv@divisor+3)^0,w,c
 13275  001AFE  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 13276  001B00  5011               	movf	(___aodiv@divisor+4)^0,w,c
 13277  001B02  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 13278  001B04  5012               	movf	(___aodiv@divisor+5)^0,w,c
 13279  001B06  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 13280  001B08  5013               	movf	(___aodiv@divisor+6)^0,w,c
 13281  001B0A  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 13282  001B0C  5014               	movf	(___aodiv@divisor+7)^0,w,c
 13283  001B0E  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 13284  001B10  A0D8               	btfss	status,0,c
 13285  001B12  EF8D  F00D         	goto	u5361
 13286  001B16  EF8F  F00D         	goto	u5360
 13287  001B1A                     u5361:
 13288  001B1A  EFA0  F00D         	goto	l5771
 13289  001B1E                     u5360:
 13290  001B1E  500D               	movf	___aodiv@divisor^0,w,c
 13291  001B20  5E05               	subwf	___aodiv@dividend^0,f,c
 13292  001B22  500E               	movf	(___aodiv@divisor+1)^0,w,c
 13293  001B24  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 13294  001B26  500F               	movf	(___aodiv@divisor+2)^0,w,c
 13295  001B28  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 13296  001B2A  5010               	movf	(___aodiv@divisor+3)^0,w,c
 13297  001B2C  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 13298  001B2E  5011               	movf	(___aodiv@divisor+4)^0,w,c
 13299  001B30  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 13300  001B32  5012               	movf	(___aodiv@divisor+5)^0,w,c
 13301  001B34  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 13302  001B36  5013               	movf	(___aodiv@divisor+6)^0,w,c
 13303  001B38  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 13304  001B3A  5014               	movf	(___aodiv@divisor+7)^0,w,c
 13305  001B3C  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 13306  001B3E  8017               	bsf	___aodiv@quotient^0,0,c
 13307  001B40                     l5771:
 13308  001B40  90D8               	bcf	status,0,c
 13309  001B42  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 13310  001B44  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 13311  001B46  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 13312  001B48  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 13313  001B4A  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 13314  001B4C  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 13315  001B4E  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 13316  001B50  320D               	rrcf	___aodiv@divisor^0,f,c
 13317  001B52  2E15               	decfsz	___aodiv@counter^0,f,c
 13318  001B54  EF6F  F00D         	goto	l5763
 13319  001B58                     l5775:
 13320  001B58  5016               	movf	___aodiv@sign^0,w,c
 13321  001B5A  B4D8               	btfsc	status,2,c
 13322  001B5C  EFB2  F00D         	goto	u5371
 13323  001B60  EFB4  F00D         	goto	u5370
 13324  001B64                     u5371:
 13325  001B64  EFC4  F00D         	goto	l5779
 13326  001B68                     u5370:
 13327  001B68  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 13328  001B6A  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 13329  001B6C  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 13330  001B6E  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 13331  001B70  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 13332  001B72  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 13333  001B74  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 13334  001B76  6C17               	negf	___aodiv@quotient^0,c
 13335  001B78  0E00               	movlw	0
 13336  001B7A  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 13337  001B7C  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 13338  001B7E  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 13339  001B80  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 13340  001B82  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 13341  001B84  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 13342  001B86  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 13343  001B88                     l5779:
 13344  001B88  C017  F005         	movff	___aodiv@quotient,?___aodiv
 13345  001B8C  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 13346  001B90  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 13347  001B94  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 13348  001B98  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 13349  001B9C  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 13350  001BA0  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 13351  001BA4  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 13352  001BA8  0012               	return		;funcret
 13353  001BAA                     __end_of___aodiv:
 13354                           	opt callstack 0
 13355                           
 13356 ;; *************** function _atoi *****************
 13357 ;; Defined at:
 13358 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;  s               2   11[COMRAM] PTR const unsigned char 
 13361 ;;		 -> STR_46(29), STR_44(30), STR_43(24), STR_42(25), 
 13362 ;;		 -> STR_41(17), STR_40(27), STR_39(33), STR_37(36), 
 13363 ;;		 -> STR_36(67), STR_35(19), STR_34(55), STR_33(17), 
 13364 ;;		 -> STR_32(16), STR_31(4), STR_30(34), STR_29(54), 
 13365 ;;		 -> STR_28(52), STR_27(28), STR_24(42), STR_23(22), 
 13366 ;;		 -> STR_22(19), STR_21(61), STR_20(27), STR_19(21), 
 13367 ;;		 -> STR_18(33), STR_17(16), STR_16(24), STR_15(4), 
 13368 ;;		 -> STR_14(25), STR_13(28), STR_12(28), STR_11(36), 
 13369 ;;		 -> STR_10(4), STR_9(23), STR_8(32), STR_7(28), 
 13370 ;;		 -> STR_6(54), STR_5(24), STR_4(16), STR_2(28), 
 13371 ;;		 -> STR_1(21), 
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;  n               2   24[COMRAM] int 
 13374 ;;  neg             2   17[COMRAM] int 
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  2   11[COMRAM] int 
 13377 ;; Registers used:
 13378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13387 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13388 ;;Total ram usage:       15 bytes
 13389 ;; Hardware stack levels used:    1
 13390 ;; Hardware stack levels required when called:    5
 13391 ;; This function calls:
 13392 ;;		___wmul
 13393 ;;		_isdigit
 13394 ;;		_isspace
 13395 ;; This function is called by:
 13396 ;;		_vfpfcnvrt
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           	psect	text75
 13401  001888                     __ptext75:
 13402                           	opt callstack 0
 13403  001888                     _atoi:
 13404                           	opt callstack 22
 13405  001888  0E00               	movlw	0
 13406  00188A  6E1A               	movwf	(atoi@n+1)^0,c
 13407  00188C  0E00               	movlw	0
 13408  00188E  6E19               	movwf	atoi@n^0,c
 13409  001890  0E00               	movlw	0
 13410  001892  6E13               	movwf	(atoi@neg+1)^0,c
 13411  001894  0E00               	movlw	0
 13412  001896  6E12               	movwf	atoi@neg^0,c
 13413  001898  EF50  F00C         	goto	l6079
 13414  00189C                     l6077:
 13415  00189C  4A0C               	infsnz	atoi@s^0,f,c
 13416  00189E  2A0D               	incf	(atoi@s+1)^0,f,c
 13417  0018A0                     l6079:
 13418  0018A0  0E01               	movlw	1
 13419  0018A2  6E18               	movwf	_atoi$2023^0,c
 13420  0018A4  C00C  FFF6         	movff	atoi@s,tblptrl
 13421  0018A8  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13422  0018AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13423  0018AC  6AF8               	clrf	tblptru,c
 13424  0018AE                     	endif
 13425  0018AE                     	if	0	;tblptru may be non-zero
 13426  0018AE                     	endif
 13427  0018AE  0008               	tblrd		*
 13428  0018B0  50F5               	movf	tablat,w,c
 13429  0018B2  0A20               	xorlw	32
 13430  0018B4  B4D8               	btfsc	status,2,c
 13431  0018B6  EF5F  F00C         	goto	u6021
 13432  0018BA  EF61  F00C         	goto	u6020
 13433  0018BE                     u6021:
 13434  0018BE  EF7F  F00C         	goto	l6087
 13435  0018C2                     u6020:
 13436  0018C2  0EF7               	movlw	247
 13437  0018C4  6E0E               	movwf	??_atoi^0,c
 13438  0018C6  0EFF               	movlw	255
 13439  0018C8  6E0F               	movwf	(??_atoi+1)^0,c
 13440  0018CA  C00C  FFF6         	movff	atoi@s,tblptrl
 13441  0018CE  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13442  0018D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13443  0018D2  6AF8               	clrf	tblptru,c
 13444  0018D4                     	endif
 13445  0018D4                     	if	0	;tblptru may be non-zero
 13446  0018D4                     	endif
 13447  0018D4  0008               	tblrd		*
 13448  0018D6  50F5               	movf	tablat,w,c
 13449  0018D8  6E10               	movwf	(??_atoi+2)^0,c
 13450  0018DA  6A11               	clrf	(??_atoi+3)^0,c
 13451  0018DC  500E               	movf	??_atoi^0,w,c
 13452  0018DE  2610               	addwf	(??_atoi+2)^0,f,c
 13453  0018E0  500F               	movf	(??_atoi+1)^0,w,c
 13454  0018E2  2211               	addwfc	(??_atoi+3)^0,f,c
 13455  0018E4  5011               	movf	(??_atoi+3)^0,w,c
 13456  0018E6  E109               	bnz	u6030
 13457  0018E8  0E05               	movlw	5
 13458  0018EA  5C10               	subwf	(??_atoi+2)^0,w,c
 13459  0018EC  A0D8               	btfss	status,0,c
 13460  0018EE  EF7B  F00C         	goto	u6031
 13461  0018F2  EF7D  F00C         	goto	u6030
 13462  0018F6                     u6031:
 13463  0018F6  EF7F  F00C         	goto	l6087
 13464  0018FA                     u6030:
 13465  0018FA  0E00               	movlw	0
 13466  0018FC  6E18               	movwf	_atoi$2023^0,c
 13467  0018FE                     l6087:
 13468  0018FE  C018  F014         	movff	_atoi$2023,_atoi$2022
 13469  001902  6A15               	clrf	(_atoi$2022+1)^0,c
 13470  001904  5014               	movf	_atoi$2022^0,w,c
 13471  001906  1015               	iorwf	(_atoi$2022+1)^0,w,c
 13472  001908  A4D8               	btfss	status,2,c
 13473  00190A  EF89  F00C         	goto	u6041
 13474  00190E  EF8B  F00C         	goto	u6040
 13475  001912                     u6041:
 13476  001912  EF4E  F00C         	goto	l6077
 13477  001916                     u6040:
 13478  001916  EF95  F00C         	goto	l6097
 13479  00191A                     l6093:
 13480  00191A  0E00               	movlw	0
 13481  00191C  6E13               	movwf	(atoi@neg+1)^0,c
 13482  00191E  0E01               	movlw	1
 13483  001920  6E12               	movwf	atoi@neg^0,c
 13484  001922                     l6095:
 13485  001922  4A0C               	infsnz	atoi@s^0,f,c
 13486  001924  2A0D               	incf	(atoi@s+1)^0,f,c
 13487  001926  EFCC  F00C         	goto	l6103
 13488  00192A                     l6097:
 13489  00192A  C00C  FFF6         	movff	atoi@s,tblptrl
 13490  00192E  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13491  001932                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13492  001932  6AF8               	clrf	tblptru,c
 13493  001934                     	endif
 13494  001934                     	if	0	;tblptru may be non-zero
 13495  001934                     	endif
 13496  001934  0008               	tblrd		*
 13497  001936  50F5               	movf	tablat,w,c
 13498  001938  6E0E               	movwf	??_atoi^0,c
 13499  00193A  6A0F               	clrf	(??_atoi+1)^0,c
 13500                           
 13501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13502                           ; Switch size 1, requested type "simple"
 13503                           ; Number of cases is 1, Range of values is 0 to 0
 13504                           ; switch strategies available:
 13505                           ; Name         Instructions Cycles
 13506                           ; simple_byte            4     3 (average)
 13507                           ;	Chosen strategy is simple_byte
 13508  00193C  500F               	movf	(??_atoi+1)^0,w,c
 13509  00193E  0A00               	xorlw	0	; case 0
 13510  001940  B4D8               	btfsc	status,2,c
 13511  001942  EFA5  F00C         	goto	l7083
 13512  001946  EFCC  F00C         	goto	l6103
 13513  00194A                     l7083:
 13514                           
 13515                           ; Switch size 1, requested type "simple"
 13516                           ; Number of cases is 2, Range of values is 43 to 45
 13517                           ; switch strategies available:
 13518                           ; Name         Instructions Cycles
 13519                           ; simple_byte            7     4 (average)
 13520                           ;	Chosen strategy is simple_byte
 13521  00194A  500E               	movf	??_atoi^0,w,c
 13522  00194C  0A2B               	xorlw	43	; case 43
 13523  00194E  B4D8               	btfsc	status,2,c
 13524  001950  EF91  F00C         	goto	l6095
 13525  001954  0A06               	xorlw	6	; case 45
 13526  001956  B4D8               	btfsc	status,2,c
 13527  001958  EF8D  F00C         	goto	l6093
 13528  00195C  EFCC  F00C         	goto	l6103
 13529  001960                     l6099:
 13530  001960  C019  F005         	movff	atoi@n,___wmul@multiplier
 13531  001964  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 13532  001968  0E00               	movlw	0
 13533  00196A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 13534  00196C  0E0A               	movlw	10
 13535  00196E  6E07               	movwf	___wmul@multiplicand^0,c
 13536  001970  EC0A  F01D         	call	___wmul	;wreg free
 13537  001974  C00C  FFF6         	movff	atoi@s,tblptrl
 13538  001978  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13539  00197C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13540  00197C  6AF8               	clrf	tblptru,c
 13541  00197E                     	endif
 13542  00197E                     	if	0	;tblptru may be non-zero
 13543  00197E                     	endif
 13544  00197E  0008               	tblrd		*
 13545  001980  50F5               	movf	tablat,w,c
 13546  001982  5E05               	subwf	?___wmul^0,f,c
 13547  001984  0E00               	movlw	0
 13548  001986  5A06               	subwfb	(?___wmul+1)^0,f,c
 13549  001988  0E30               	movlw	48
 13550  00198A  2405               	addwf	?___wmul^0,w,c
 13551  00198C  6E19               	movwf	atoi@n^0,c
 13552  00198E  0E00               	movlw	0
 13553  001990  2006               	addwfc	(?___wmul+1)^0,w,c
 13554  001992  6E1A               	movwf	(atoi@n+1)^0,c
 13555  001994  EF91  F00C         	goto	l6095
 13556  001998                     l6103:
 13557  001998  0ED0               	movlw	208
 13558  00199A  6E0E               	movwf	??_atoi^0,c
 13559  00199C  0EFF               	movlw	255
 13560  00199E  6E0F               	movwf	(??_atoi+1)^0,c
 13561  0019A0  C00C  FFF6         	movff	atoi@s,tblptrl
 13562  0019A4  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13563  0019A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13564  0019A8  6AF8               	clrf	tblptru,c
 13565  0019AA                     	endif
 13566  0019AA                     	if	0	;tblptru may be non-zero
 13567  0019AA                     	endif
 13568  0019AA  0008               	tblrd		*
 13569  0019AC  50F5               	movf	tablat,w,c
 13570  0019AE  6E10               	movwf	(??_atoi+2)^0,c
 13571  0019B0  6A11               	clrf	(??_atoi+3)^0,c
 13572  0019B2  500E               	movf	??_atoi^0,w,c
 13573  0019B4  2610               	addwf	(??_atoi+2)^0,f,c
 13574  0019B6  500F               	movf	(??_atoi+1)^0,w,c
 13575  0019B8  2211               	addwfc	(??_atoi+3)^0,f,c
 13576  0019BA  5011               	movf	(??_atoi+3)^0,w,c
 13577  0019BC  E10A               	bnz	u6050
 13578  0019BE  0E0A               	movlw	10
 13579  0019C0  5C10               	subwf	(??_atoi+2)^0,w,c
 13580  0019C2  A0D8               	btfss	status,0,c
 13581  0019C4  EFE6  F00C         	goto	u6051
 13582  0019C8  EFE9  F00C         	goto	u6050
 13583  0019CC                     u6051:
 13584  0019CC  0E01               	movlw	1
 13585  0019CE  EFEA  F00C         	goto	u6060
 13586  0019D2                     u6050:
 13587  0019D2  0E00               	movlw	0
 13588  0019D4                     u6060:
 13589  0019D4  6E16               	movwf	_atoi$2024^0,c
 13590  0019D6  6A17               	clrf	(_atoi$2024+1)^0,c
 13591  0019D8  5016               	movf	_atoi$2024^0,w,c
 13592  0019DA  1017               	iorwf	(_atoi$2024+1)^0,w,c
 13593  0019DC  A4D8               	btfss	status,2,c
 13594  0019DE  EFF3  F00C         	goto	u6071
 13595  0019E2  EFF5  F00C         	goto	u6070
 13596  0019E6                     u6071:
 13597  0019E6  EFB0  F00C         	goto	l6099
 13598  0019EA                     u6070:
 13599  0019EA  5012               	movf	atoi@neg^0,w,c
 13600  0019EC  1013               	iorwf	(atoi@neg+1)^0,w,c
 13601  0019EE  A4D8               	btfss	status,2,c
 13602  0019F0  EFFC  F00C         	goto	u6081
 13603  0019F4  EFFE  F00C         	goto	u6080
 13604  0019F8                     u6081:
 13605  0019F8  EF0C  F00D         	goto	l1823
 13606  0019FC                     u6080:
 13607  0019FC  C019  F00E         	movff	atoi@n,??_atoi
 13608  001A00  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 13609  001A04  1E0E               	comf	??_atoi^0,f,c
 13610  001A06  1E0F               	comf	(??_atoi+1)^0,f,c
 13611  001A08  4A0E               	infsnz	??_atoi^0,f,c
 13612  001A0A  2A0F               	incf	(??_atoi+1)^0,f,c
 13613  001A0C  C00E  F00C         	movff	??_atoi,?_atoi
 13614  001A10  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 13615  001A14  EF10  F00D         	goto	l1826
 13616  001A18                     l1823:
 13617  001A18  C019  F00C         	movff	atoi@n,?_atoi
 13618  001A1C  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 13619  001A20                     l1826:
 13620  001A20  0012               	return		;funcret
 13621  001A22                     __end_of_atoi:
 13622                           	opt callstack 0
 13623                           
 13624 ;; *************** function _isspace *****************
 13625 ;; Defined at:
 13626 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  c               2    4[COMRAM] int 
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;		None
 13631 ;; Return value:  Size  Location     Type
 13632 ;;                  2    4[COMRAM] int 
 13633 ;; Registers used:
 13634 ;;		wreg, status,2, status,0
 13635 ;; Tracked objects:
 13636 ;;		On entry : 0/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13644 ;;Total ram usage:        7 bytes
 13645 ;; Hardware stack levels used:    1
 13646 ;; Hardware stack levels required when called:    4
 13647 ;; This function calls:
 13648 ;;		Nothing
 13649 ;; This function is called by:
 13650 ;;		_atoi
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text76
 13655  0034BE                     __ptext76:
 13656                           	opt callstack 0
 13657  0034BE                     _isspace:
 13658                           	opt callstack 22
 13659  0034BE  0E01               	movlw	1
 13660  0034C0  6E0B               	movwf	_isspace$2049^0,c
 13661  0034C2  0E20               	movlw	32
 13662  0034C4  1805               	xorwf	isspace@c^0,w,c
 13663  0034C6  1006               	iorwf	(isspace@c+1)^0,w,c
 13664  0034C8  B4D8               	btfsc	status,2,c
 13665  0034CA  EF69  F01A         	goto	u5511
 13666  0034CE  EF6B  F01A         	goto	u5510
 13667  0034D2                     u5511:
 13668  0034D2  EF84  F01A         	goto	l5865
 13669  0034D6                     u5510:
 13670  0034D6  0EF7               	movlw	247
 13671  0034D8  6E07               	movwf	??_isspace^0,c
 13672  0034DA  0EFF               	movlw	255
 13673  0034DC  6E08               	movwf	(??_isspace+1)^0,c
 13674  0034DE  C005  F009         	movff	isspace@c,??_isspace+2
 13675  0034E2  C006  F00A         	movff	isspace@c+1,??_isspace+3
 13676  0034E6  5007               	movf	??_isspace^0,w,c
 13677  0034E8  2609               	addwf	(??_isspace+2)^0,f,c
 13678  0034EA  5008               	movf	(??_isspace+1)^0,w,c
 13679  0034EC  220A               	addwfc	(??_isspace+3)^0,f,c
 13680  0034EE  500A               	movf	(??_isspace+3)^0,w,c
 13681  0034F0  E109               	bnz	u5520
 13682  0034F2  0E05               	movlw	5
 13683  0034F4  5C09               	subwf	(??_isspace+2)^0,w,c
 13684  0034F6  A0D8               	btfss	status,0,c
 13685  0034F8  EF80  F01A         	goto	u5521
 13686  0034FC  EF82  F01A         	goto	u5520
 13687  003500                     u5521:
 13688  003500  EF84  F01A         	goto	l5865
 13689  003504                     u5520:
 13690  003504  0E00               	movlw	0
 13691  003506  6E0B               	movwf	_isspace$2049^0,c
 13692  003508                     l5865:
 13693  003508  C00B  F005         	movff	_isspace$2049,?_isspace
 13694  00350C  6A06               	clrf	(?_isspace+1)^0,c
 13695  00350E  0012               	return		;funcret
 13696  003510                     __end_of_isspace:
 13697                           	opt callstack 0
 13698                           
 13699 ;; *************** function _isdigit *****************
 13700 ;; Defined at:
 13701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  c               2    4[COMRAM] int 
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;		None
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  2    4[COMRAM] int 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, status,0
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13717 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13719 ;;Total ram usage:        6 bytes
 13720 ;; Hardware stack levels used:    1
 13721 ;; Hardware stack levels required when called:    4
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_vfpfcnvrt
 13726 ;;		_atoi
 13727 ;; This function uses a non-reentrant model
 13728 ;;
 13729                           
 13730                           	psect	text77
 13731  003936                     __ptext77:
 13732                           	opt callstack 0
 13733  003936                     _isdigit:
 13734                           	opt callstack 23
 13735  003936  0ED0               	movlw	208
 13736  003938  6E07               	movwf	??_isdigit^0,c
 13737  00393A  0EFF               	movlw	255
 13738  00393C  6E08               	movwf	(??_isdigit+1)^0,c
 13739  00393E  C005  F009         	movff	isdigit@c,??_isdigit+2
 13740  003942  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 13741  003946  5007               	movf	??_isdigit^0,w,c
 13742  003948  2609               	addwf	(??_isdigit+2)^0,f,c
 13743  00394A  5008               	movf	(??_isdigit+1)^0,w,c
 13744  00394C  220A               	addwfc	(??_isdigit+3)^0,f,c
 13745  00394E  500A               	movf	(??_isdigit+3)^0,w,c
 13746  003950  E10A               	bnz	u5290
 13747  003952  0E0A               	movlw	10
 13748  003954  5C09               	subwf	(??_isdigit+2)^0,w,c
 13749  003956  A0D8               	btfss	status,0,c
 13750  003958  EFB0  F01C         	goto	u5291
 13751  00395C  EFB3  F01C         	goto	u5290
 13752  003960                     u5291:
 13753  003960  0E01               	movlw	1
 13754  003962  EFB4  F01C         	goto	u5300
 13755  003966                     u5290:
 13756  003966  0E00               	movlw	0
 13757  003968                     u5300:
 13758  003968  6E05               	movwf	?_isdigit^0,c
 13759  00396A  6A06               	clrf	(?_isdigit+1)^0,c
 13760  00396C  0012               	return		;funcret
 13761  00396E                     __end_of_isdigit:
 13762                           	opt callstack 0
 13763                           
 13764 ;; *************** function ___wmul *****************
 13765 ;; Defined at:
 13766 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;  multiplier      2    4[COMRAM] unsigned int 
 13769 ;;  multiplicand    2    6[COMRAM] unsigned int 
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;  product         2    8[COMRAM] unsigned int 
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  2    4[COMRAM] unsigned int 
 13774 ;; Registers used:
 13775 ;;		wreg, status,2, status,0, prodl, prodh
 13776 ;; Tracked objects:
 13777 ;;		On entry : 0/0
 13778 ;;		On exit  : 0/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13784 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13785 ;;Total ram usage:        6 bytes
 13786 ;; Hardware stack levels used:    1
 13787 ;; Hardware stack levels required when called:    4
 13788 ;; This function calls:
 13789 ;;		Nothing
 13790 ;; This function is called by:
 13791 ;;		_atoi
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795                           	psect	text78
 13796  003A14                     __ptext78:
 13797                           	opt callstack 0
 13798  003A14                     ___wmul:
 13799                           	opt callstack 22
 13800  003A14  5005               	movf	___wmul@multiplier^0,w,c
 13801  003A16  0207               	mulwf	___wmul@multiplicand^0,c
 13802  003A18  CFF3 F009          	movff	prodl,___wmul@product
 13803  003A1C  CFF4 F00A          	movff	prodh,___wmul@product+1
 13804  003A20  5005               	movf	___wmul@multiplier^0,w,c
 13805  003A22  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 13806  003A24  50F3               	movf	243,w,c
 13807  003A26  260A               	addwf	(___wmul@product+1)^0,f,c
 13808  003A28  5006               	movf	(___wmul@multiplier+1)^0,w,c
 13809  003A2A  0207               	mulwf	___wmul@multiplicand^0,c
 13810  003A2C  50F3               	movf	243,w,c
 13811  003A2E  260A               	addwf	(___wmul@product+1)^0,f,c
 13812  003A30  C009  F005         	movff	___wmul@product,?___wmul
 13813  003A34  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 13814  003A38  0012               	return		;funcret
 13815  003A3A                     __end_of___wmul:
 13816                           	opt callstack 0
 13817                           
 13818 ;; *************** function _EUSART2_is_tx_ready *****************
 13819 ;; Defined at:
 13820 ;;		line 132 in file "mcc_generated_files/eusart2.c"
 13821 ;; Parameters:    Size  Location     Type
 13822 ;;		None
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;		None
 13825 ;; Return value:  Size  Location     Type
 13826 ;;                  1    wreg      _Bool 
 13827 ;; Registers used:
 13828 ;;		wreg, status,2
 13829 ;; Tracked objects:
 13830 ;;		On entry : 0/0
 13831 ;;		On exit  : 0/0
 13832 ;;		Unchanged: 0/0
 13833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13838 ;;Total ram usage:        0 bytes
 13839 ;; Hardware stack levels used:    1
 13840 ;; Hardware stack levels required when called:    4
 13841 ;; This function calls:
 13842 ;;		Nothing
 13843 ;; This function is called by:
 13844 ;;		_PrintModRespon
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text79
 13849  003AE8                     __ptext79:
 13850                           	opt callstack 0
 13851  003AE8                     _EUSART2_is_tx_ready:
 13852                           	opt callstack 24
 13853  003AE8                     
 13854                           ;mcc_generated_files/eusart2.c: 134:     return (eusart2TxBufferRemaining ? 1 : 0);
 13855  003AE8  0100               	movlb	0	; () banked
 13856  003AEA  51BC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 13857  003AEC  A4D8               	btfss	status,2,c
 13858  003AEE  EF7B  F01D         	goto	u3891
 13859  003AF2  EF7E  F01D         	goto	u3890
 13860  003AF6                     u3891:
 13861  003AF6  0E01               	movlw	1
 13862  003AF8  EF7F  F01D         	goto	u3900
 13863  003AFC                     u3890:
 13864  003AFC  0E00               	movlw	0
 13865  003AFE                     u3900:
 13866  003AFE                     
 13867                           ; BSR set to: 0
 13868  003AFE  0012               	return		;funcret
 13869  003B00                     __end_of_EUSART2_is_tx_ready:
 13870                           	opt callstack 0
 13871                           
 13872 ;; *************** function _EUSART2_is_tx_done *****************
 13873 ;; Defined at:
 13874 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;		None
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;		None
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  1    wreg      _Bool 
 13881 ;; Registers used:
 13882 ;;		wreg
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13892 ;;Total ram usage:        0 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    4
 13895 ;; This function calls:
 13896 ;;		Nothing
 13897 ;; This function is called by:
 13898 ;;		_PrintModRespon
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text80
 13903  003B00                     __ptext80:
 13904                           	opt callstack 0
 13905  003B00                     _EUSART2_is_tx_done:
 13906                           	opt callstack 24
 13907  003B00                     
 13908                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 13909  003B00  010E               	movlb	14	; () banked
 13910  003B02  B39E               	btfsc	158,1,b	;volatile
 13911  003B04  EF86  F01D         	goto	u3911
 13912  003B08  EF89  F01D         	goto	u3910
 13913  003B0C                     u3911:
 13914  003B0C  0E01               	movlw	1
 13915  003B0E  EF8A  F01D         	goto	u3916
 13916  003B12                     u3910:
 13917  003B12  0E00               	movlw	0
 13918  003B14                     u3916:
 13919  003B14                     
 13920                           ; BSR set to: 14
 13921  003B14  0012               	return		;funcret
 13922  003B16                     __end_of_EUSART2_is_tx_done:
 13923                           	opt callstack 0
 13924                           
 13925 ;; *************** function _ClearModbusRespon *****************
 13926 ;; Defined at:
 13927 ;;		line 354 in file "Modbus.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;		None
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;  i               2    4[COMRAM] int 
 13932 ;; Return value:  Size  Location     Type
 13933 ;;                  1    wreg      void 
 13934 ;; Registers used:
 13935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13936 ;; Tracked objects:
 13937 ;;		On entry : 0/0
 13938 ;;		On exit  : 0/0
 13939 ;;		Unchanged: 0/0
 13940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;Total ram usage:        2 bytes
 13946 ;; Hardware stack levels used:    1
 13947 ;; Hardware stack levels required when called:    4
 13948 ;; This function calls:
 13949 ;;		Nothing
 13950 ;; This function is called by:
 13951 ;;		_main
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           	psect	text81
 13956  003560                     __ptext81:
 13957                           	opt callstack 0
 13958  003560                     _ClearModbusRespon:
 13959                           	opt callstack 26
 13960  003560                     
 13961                           ;Modbus.c: 355:     int i = 0;
 13962  003560  0E00               	movlw	0
 13963  003562  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 13964  003564  0E00               	movlw	0
 13965  003566  6E05               	movwf	ClearModbusRespon@i^0,c
 13966                           
 13967                           ;Modbus.c: 356:     for(i=0; i<32; i++ ){
 13968  003568  0E00               	movlw	0
 13969  00356A  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 13970  00356C  0E00               	movlw	0
 13971  00356E  6E05               	movwf	ClearModbusRespon@i^0,c
 13972  003570                     l5171:
 13973                           
 13974                           ;Modbus.c: 357:         MBRespon[i] = 0xFFFF;
 13975  003570  90D8               	bcf	status,0,c
 13976  003572  3405               	rlcf	ClearModbusRespon@i^0,w,c
 13977  003574  6ED9               	movwf	fsr2l,c
 13978  003576  3406               	rlcf	(ClearModbusRespon@i+1)^0,w,c
 13979  003578  6EDA               	movwf	fsr2h,c
 13980  00357A  0E41               	movlw	low _MBRespon
 13981  00357C  26D9               	addwf	fsr2l,f,c
 13982  00357E  0E01               	movlw	high _MBRespon
 13983  003580  22DA               	addwfc	fsr2h,f,c
 13984  003582  0EFF               	movlw	255
 13985  003584  6EDE               	movwf	postinc2,c
 13986  003586  0EFF               	movlw	255
 13987  003588  6EDD               	movwf	postdec2,c
 13988  00358A                     
 13989                           ;Modbus.c: 358:     }
 13990  00358A  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 13991  00358C  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 13992  00358E  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 13993  003590  EFD3  F01A         	goto	u4651
 13994  003594  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 13995  003596  E109               	bnz	u4650
 13996  003598  0E20               	movlw	32
 13997  00359A  5C05               	subwf	ClearModbusRespon@i^0,w,c
 13998  00359C  A0D8               	btfss	status,0,c
 13999  00359E  EFD3  F01A         	goto	u4651
 14000  0035A2  EFD5  F01A         	goto	u4650
 14001  0035A6                     u4651:
 14002  0035A6  EFB8  F01A         	goto	l5171
 14003  0035AA                     u4650:
 14004  0035AA  0012               	return		;funcret
 14005  0035AC                     __end_of_ClearModbusRespon:
 14006                           	opt callstack 0
 14007                           
 14008 ;; *************** function _ClearModbusData *****************
 14009 ;; Defined at:
 14010 ;;		line 59 in file "Modbus.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;		None
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;  i               2    4[COMRAM] int 
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  1    wreg      void 
 14017 ;; Registers used:
 14018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14028 ;;Total ram usage:        2 bytes
 14029 ;; Hardware stack levels used:    1
 14030 ;; Hardware stack levels required when called:    4
 14031 ;; This function calls:
 14032 ;;		Nothing
 14033 ;; This function is called by:
 14034 ;;		_main
 14035 ;; This function uses a non-reentrant model
 14036 ;;
 14037                           
 14038                           	psect	text82
 14039  0035AC                     __ptext82:
 14040                           	opt callstack 0
 14041  0035AC                     _ClearModbusData:
 14042                           	opt callstack 26
 14043  0035AC                     
 14044                           ;Modbus.c: 60:     int i = 0;
 14045  0035AC  0E00               	movlw	0
 14046  0035AE  6E06               	movwf	(ClearModbusData@i+1)^0,c
 14047  0035B0  0E00               	movlw	0
 14048  0035B2  6E05               	movwf	ClearModbusData@i^0,c
 14049                           
 14050                           ;Modbus.c: 61:     for(i=0; i<99; i++ ){
 14051  0035B4  0E00               	movlw	0
 14052  0035B6  6E06               	movwf	(ClearModbusData@i+1)^0,c
 14053  0035B8  0E00               	movlw	0
 14054  0035BA  6E05               	movwf	ClearModbusData@i^0,c
 14055  0035BC                     l5291:
 14056                           
 14057                           ;Modbus.c: 62:         ModbusData[i] = 0xFF;
 14058  0035BC  0E00               	movlw	low _ModbusData
 14059  0035BE  2405               	addwf	ClearModbusData@i^0,w,c
 14060  0035C0  6ED9               	movwf	fsr2l,c
 14061  0035C2  0E02               	movlw	high _ModbusData
 14062  0035C4  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 14063  0035C6  6EDA               	movwf	fsr2h,c
 14064  0035C8  0EFF               	movlw	255
 14065  0035CA  6EDF               	movwf	indf2,c
 14066  0035CC                     
 14067                           ;Modbus.c: 63:     }
 14068  0035CC  4A05               	infsnz	ClearModbusData@i^0,f,c
 14069  0035CE  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 14070  0035D0  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 14071  0035D2  EFF4  F01A         	goto	u4781
 14072  0035D6  5006               	movf	(ClearModbusData@i+1)^0,w,c
 14073  0035D8  E109               	bnz	u4780
 14074  0035DA  0E63               	movlw	99
 14075  0035DC  5C05               	subwf	ClearModbusData@i^0,w,c
 14076  0035DE  A0D8               	btfss	status,0,c
 14077  0035E0  EFF4  F01A         	goto	u4781
 14078  0035E4  EFF6  F01A         	goto	u4780
 14079  0035E8                     u4781:
 14080  0035E8  EFDE  F01A         	goto	l5291
 14081  0035EC                     u4780:
 14082  0035EC                     
 14083                           ;Modbus.c: 65:     ModDataCnt = 0;
 14084  0035EC  0E00               	movlw	0
 14085  0035EE  0100               	movlb	0	; () banked
 14086  0035F0  6FAE               	movwf	(_ModDataCnt+1)& (0+255),b
 14087  0035F2  0E00               	movlw	0
 14088  0035F4  6FAD               	movwf	_ModDataCnt& (0+255),b
 14089  0035F6                     
 14090                           ; BSR set to: 0
 14091  0035F6  0012               	return		;funcret
 14092  0035F8                     __end_of_ClearModbusData:
 14093                           	opt callstack 0
 14094                           
 14095 ;; *************** function _INTERRUPT_InterruptManager *****************
 14096 ;; Defined at:
 14097 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;		None
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;		None
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      void 
 14104 ;; Registers used:
 14105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14115 ;;Total ram usage:        4 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    3
 14118 ;; This function calls:
 14119 ;;		Absolute function
 14120 ;;		_EUSART1_Receive_ISR
 14121 ;;		_EUSART1_Transmit_ISR
 14122 ;;		_EUSART2_Receive_ISR
 14123 ;;		_EUSART2_Transmit_ISR
 14124 ;; This function is called by:
 14125 ;;		Interrupt level 2
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	intcode
 14130  000008                     __pintcode:
 14131                           	opt callstack 0
 14132  000008                     _INTERRUPT_InterruptManager:
 14133                           	opt callstack 15
 14134                           
 14135                           ; BSR set to: 0
 14136                           ;incstack = 0
 14137  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14138  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 14139  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14140  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14141  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14142  00001A                     
 14143                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 14144  00001A  ACF2               	btfss	242,6,c	;volatile
 14145  00001C  EF12  F000         	goto	i2u489_41
 14146  000020  EF14  F000         	goto	i2u489_40
 14147  000024                     i2u489_41:
 14148  000024  EF89  F000         	goto	i2l159
 14149  000028                     i2u489_40:
 14150  000028                     
 14151                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 14152  000028  010E               	movlb	14	; () banked
 14153  00002A  ADC5               	btfss	197,6,b	;volatile
 14154  00002C  EF1A  F000         	goto	i2u490_41
 14155  000030  EF1C  F000         	goto	i2u490_40
 14156  000034                     i2u490_41:
 14157  000034  EF32  F000         	goto	i2l150
 14158  000038                     i2u490_40:
 14159  000038                     
 14160                           ; BSR set to: 14
 14161  000038  ADCD               	btfss	205,6,b	;volatile
 14162  00003A  EF21  F000         	goto	i2u491_41
 14163  00003E  EF23  F000         	goto	i2u491_40
 14164  000042                     i2u491_41:
 14165  000042  EF32  F000         	goto	i2l150
 14166  000046                     i2u491_40:
 14167  000046                     
 14168                           ; BSR set to: 14
 14169                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 14170  000046  D802               	call	i2u492_48
 14171  000048  EF30  F000         	goto	i2u492_49
 14172  00004C                     i2u492_48:
 14173  00004C  0005               	push	
 14174  00004E  6EFA               	movwf	pclath,c
 14175  000050  0101               	movlb	1	; () banked
 14176  000052  51F1               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 14177  000054  6EFD               	movwf	tosl,c
 14178  000056  51F2               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 14179  000058  6EFE               	movwf	tosh,c
 14180  00005A  6AFF               	clrf	tosu,c
 14181  00005C  50FA               	movf	pclath,w,c
 14182  00005E  0012               	return		;indir
 14183  000060                     i2u492_49:
 14184                           
 14185                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 14186  000060  EF89  F000         	goto	i2l159
 14187  000064                     i2l150:
 14188                           
 14189                           ; BSR set to: 14
 14190  000064  AFC5               	btfss	197,7,b	;volatile
 14191  000066  EF37  F000         	goto	i2u493_41
 14192  00006A  EF39  F000         	goto	i2u493_40
 14193  00006E                     i2u493_41:
 14194  00006E  EF4F  F000         	goto	i2l152
 14195  000072                     i2u493_40:
 14196  000072                     
 14197                           ; BSR set to: 14
 14198  000072  AFCD               	btfss	205,7,b	;volatile
 14199  000074  EF3E  F000         	goto	i2u494_41
 14200  000078  EF40  F000         	goto	i2u494_40
 14201  00007C                     i2u494_41:
 14202  00007C  EF4F  F000         	goto	i2l152
 14203  000080                     i2u494_40:
 14204  000080                     
 14205                           ; BSR set to: 14
 14206                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 14207  000080  D802               	call	i2u495_48
 14208  000082  EF4D  F000         	goto	i2u495_49
 14209  000086                     i2u495_48:
 14210  000086  0005               	push	
 14211  000088  6EFA               	movwf	pclath,c
 14212  00008A  0101               	movlb	1	; () banked
 14213  00008C  51EF               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 14214  00008E  6EFD               	movwf	tosl,c
 14215  000090  51F0               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 14216  000092  6EFE               	movwf	tosh,c
 14217  000094  6AFF               	clrf	tosu,c
 14218  000096  50FA               	movf	pclath,w,c
 14219  000098  0012               	return		;indir
 14220  00009A                     i2u495_49:
 14221                           
 14222                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 14223  00009A  EF89  F000         	goto	i2l159
 14224  00009E                     i2l152:
 14225                           
 14226                           ; BSR set to: 14
 14227  00009E  A9C5               	btfss	197,4,b	;volatile
 14228  0000A0  EF54  F000         	goto	i2u496_41
 14229  0000A4  EF56  F000         	goto	i2u496_40
 14230  0000A8                     i2u496_41:
 14231  0000A8  EF6C  F000         	goto	i2l154
 14232  0000AC                     i2u496_40:
 14233  0000AC                     
 14234                           ; BSR set to: 14
 14235  0000AC  A9CD               	btfss	205,4,b	;volatile
 14236  0000AE  EF5B  F000         	goto	i2u497_41
 14237  0000B2  EF5D  F000         	goto	i2u497_40
 14238  0000B6                     i2u497_41:
 14239  0000B6  EF6C  F000         	goto	i2l154
 14240  0000BA                     i2u497_40:
 14241  0000BA                     
 14242                           ; BSR set to: 14
 14243                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 14244  0000BA  D802               	call	i2u498_48
 14245  0000BC  EF6A  F000         	goto	i2u498_49
 14246  0000C0                     i2u498_48:
 14247  0000C0  0005               	push	
 14248  0000C2  6EFA               	movwf	pclath,c
 14249  0000C4  0101               	movlb	1	; () banked
 14250  0000C6  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 14251  0000C8  6EFD               	movwf	tosl,c
 14252  0000CA  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 14253  0000CC  6EFE               	movwf	tosh,c
 14254  0000CE  6AFF               	clrf	tosu,c
 14255  0000D0  50FA               	movf	pclath,w,c
 14256  0000D2  0012               	return		;indir
 14257  0000D4                     i2u498_49:
 14258                           
 14259                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 14260  0000D4  EF89  F000         	goto	i2l159
 14261  0000D8                     i2l154:
 14262                           
 14263                           ; BSR set to: 14
 14264  0000D8  ABC5               	btfss	197,5,b	;volatile
 14265  0000DA  EF71  F000         	goto	i2u499_41
 14266  0000DE  EF73  F000         	goto	i2u499_40
 14267  0000E2                     i2u499_41:
 14268  0000E2  EF89  F000         	goto	i2l153
 14269  0000E6                     i2u499_40:
 14270  0000E6                     
 14271                           ; BSR set to: 14
 14272  0000E6  ABCD               	btfss	205,5,b	;volatile
 14273  0000E8  EF78  F000         	goto	i2u500_41
 14274  0000EC  EF7A  F000         	goto	i2u500_40
 14275  0000F0                     i2u500_41:
 14276  0000F0  EF89  F000         	goto	i2l153
 14277  0000F4                     i2u500_40:
 14278  0000F4                     
 14279                           ; BSR set to: 14
 14280                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 14281  0000F4  D802               	call	i2u501_48
 14282  0000F6  EF87  F000         	goto	i2u501_49
 14283  0000FA                     i2u501_48:
 14284  0000FA  0005               	push	
 14285  0000FC  6EFA               	movwf	pclath,c
 14286  0000FE  0101               	movlb	1	; () banked
 14287  000100  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 14288  000102  6EFD               	movwf	tosl,c
 14289  000104  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 14290  000106  6EFE               	movwf	tosh,c
 14291  000108  6AFF               	clrf	tosu,c
 14292  00010A  50FA               	movf	pclath,w,c
 14293  00010C  0012               	return		;indir
 14294  00010E                     i2u501_49:
 14295                           
 14296                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 14297  00010E  EF89  F000         	goto	i2l159
 14298  000112                     i2l153:
 14299  000112                     i2l159:
 14300  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14301  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14302  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14303  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14304  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14305  000124  0011               	retfie		f
 14306  000126                     __end_of_INTERRUPT_InterruptManager:
 14307                           	opt callstack 0
 14308                           
 14309 ;; *************** function _EUSART2_Transmit_ISR *****************
 14310 ;; Defined at:
 14311 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;		None
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;		None
 14316 ;; Return value:  Size  Location     Type
 14317 ;;                  1    wreg      void 
 14318 ;; Registers used:
 14319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14320 ;; Tracked objects:
 14321 ;;		On entry : 0/0
 14322 ;;		On exit  : 0/0
 14323 ;;		Unchanged: 0/0
 14324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14329 ;;Total ram usage:        0 bytes
 14330 ;; Hardware stack levels used:    1
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_EUSART2_Initialize
 14335 ;;		_INTERRUPT_InterruptManager
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           	psect	text84
 14340  003642                     __ptext84:
 14341                           	opt callstack 0
 14342  003642                     _EUSART2_Transmit_ISR:
 14343                           	opt callstack 17
 14344  003642                     
 14345                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 14346  003642  0E20               	movlw	32
 14347  003644  0100               	movlb	0	; () banked
 14348  003646  61BC               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 14349  003648  EF28  F01B         	goto	i2u449_41
 14350  00364C  EF2A  F01B         	goto	i2u449_40
 14351  003650                     i2u449_41:
 14352  003650  EF42  F01B         	goto	i2l333
 14353  003654                     i2u449_40:
 14354  003654                     
 14355                           ; BSR set to: 0
 14356                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 14357  003654  0E84               	movlw	low _eusart2TxBuffer
 14358  003656  25B9               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 14359  003658  6ED9               	movwf	fsr2l,c
 14360  00365A  6ADA               	clrf	fsr2h,c
 14361  00365C  0E02               	movlw	high _eusart2TxBuffer
 14362  00365E  22DA               	addwfc	fsr2h,f,c
 14363  003660  50DF               	movf	indf2,w,c
 14364  003662  010E               	movlb	14	; () banked
 14365  003664  6F9A               	movwf	154,b	;volatile
 14366  003666                     
 14367                           ; BSR set to: 14
 14368  003666  0100               	movlb	0	; () banked
 14369  003668  2BB9               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 14370  00366A                     
 14371                           ; BSR set to: 0
 14372                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 14373  00366A  0E1F               	movlw	31
 14374  00366C  65B9               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 14375  00366E  EF3B  F01B         	goto	i2u450_41
 14376  003672  EF3D  F01B         	goto	i2u450_40
 14377  003676                     i2u450_41:
 14378  003676  EF3F  F01B         	goto	i2l5111
 14379  00367A                     i2u450_40:
 14380  00367A                     
 14381                           ; BSR set to: 0
 14382                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
 14383  00367A  0E00               	movlw	0
 14384  00367C  6FB9               	movwf	_eusart2TxTail& (0+255),b	;volatile
 14385  00367E                     i2l5111:
 14386                           
 14387                           ; BSR set to: 0
 14388                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
 14389  00367E  2BBC               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14390                           
 14391                           ;mcc_generated_files/eusart2.c: 218:     }
 14392  003680  EF44  F01B         	goto	i2l336
 14393  003684                     i2l333:
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
 14397  003684  010E               	movlb	14	; () banked
 14398  003686  9DC5               	bcf	197,6,b	;volatile
 14399  003688                     i2l336:
 14400  003688  0012               	return		;funcret
 14401  00368A                     __end_of_EUSART2_Transmit_ISR:
 14402                           	opt callstack 0
 14403                           
 14404 ;; *************** function _EUSART2_Receive_ISR *****************
 14405 ;; Defined at:
 14406 ;;		line 225 in file "mcc_generated_files/eusart2.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;		None
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;		None
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  1    wreg      void 
 14413 ;; Registers used:
 14414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;Total ram usage:        0 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:    2
 14427 ;; This function calls:
 14428 ;;		Absolute function
 14429 ;;		_EUSART2_DefaultErrorHandler
 14430 ;;		_EUSART2_DefaultFramingErrorHandler
 14431 ;;		_EUSART2_DefaultOverrunErrorHandler
 14432 ;;		_EUSART2_RxDataHandler
 14433 ;; This function is called by:
 14434 ;;		_EUSART2_Initialize
 14435 ;;		_INTERRUPT_InterruptManager
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text85
 14440  002B2E                     __ptext85:
 14441                           	opt callstack 0
 14442  002B2E                     _EUSART2_Receive_ISR:
 14443                           	opt callstack 15
 14444  002B2E                     
 14445                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 14446  002B2E  0E81               	movlw	low _eusart2RxStatusBuffer
 14447  002B30  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14448  002B32  6ED9               	movwf	fsr2l,c
 14449  002B34  6ADA               	clrf	fsr2h,c
 14450  002B36  0E01               	movlw	high _eusart2RxStatusBuffer
 14451  002B38  22DA               	addwfc	fsr2h,f,c
 14452  002B3A  0E00               	movlw	0
 14453  002B3C  6EDF               	movwf	indf2,c
 14454  002B3E                     
 14455                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
 14456  002B3E  010E               	movlb	14	; () banked
 14457  002B40  A59D               	btfss	157,2,b	;volatile
 14458  002B42  EFA5  F015         	goto	i2u451_41
 14459  002B46  EFA7  F015         	goto	i2u451_40
 14460  002B4A                     i2u451_41:
 14461  002B4A  EFBB  F015         	goto	i2l5121
 14462  002B4E                     i2u451_40:
 14463  002B4E                     
 14464                           ; BSR set to: 14
 14465                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 14466  002B4E  0E81               	movlw	low _eusart2RxStatusBuffer
 14467  002B50  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14468  002B52  6ED9               	movwf	fsr2l,c
 14469  002B54  6ADA               	clrf	fsr2h,c
 14470  002B56  0E01               	movlw	high _eusart2RxStatusBuffer
 14471  002B58  22DA               	addwfc	fsr2h,f,c
 14472  002B5A  0101               	movlb	1	; () banked
 14473  002B5C  82DF               	bsf	indf2,1,c
 14474  002B5E                     
 14475                           ; BSR set to: 1
 14476                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
 14477  002B5E  D802               	call	i2u452_48
 14478  002B60  EFBB  F015         	goto	i2u452_49
 14479  002B64                     i2u452_48:
 14480  002B64  0005               	push	
 14481  002B66  6EFA               	movwf	pclath,c
 14482  002B68  51E9               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 14483  002B6A  6EFD               	movwf	tosl,c
 14484  002B6C  51EA               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 14485  002B6E  6EFE               	movwf	tosh,c
 14486  002B70  6AFF               	clrf	tosu,c
 14487  002B72  50FA               	movf	pclath,w,c
 14488  002B74  0012               	return		;indir
 14489  002B76                     i2u452_49:
 14490  002B76                     i2l5121:
 14491                           
 14492                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
 14493  002B76  010E               	movlb	14	; () banked
 14494  002B78  A39D               	btfss	157,1,b	;volatile
 14495  002B7A  EFC1  F015         	goto	i2u453_41
 14496  002B7E  EFC3  F015         	goto	i2u453_40
 14497  002B82                     i2u453_41:
 14498  002B82  EFD7  F015         	goto	i2l5127
 14499  002B86                     i2u453_40:
 14500  002B86                     
 14501                           ; BSR set to: 14
 14502                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 14503  002B86  0E81               	movlw	low _eusart2RxStatusBuffer
 14504  002B88  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14505  002B8A  6ED9               	movwf	fsr2l,c
 14506  002B8C  6ADA               	clrf	fsr2h,c
 14507  002B8E  0E01               	movlw	high _eusart2RxStatusBuffer
 14508  002B90  22DA               	addwfc	fsr2h,f,c
 14509  002B92  0101               	movlb	1	; () banked
 14510  002B94  84DF               	bsf	indf2,2,c
 14511  002B96                     
 14512                           ; BSR set to: 1
 14513                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
 14514  002B96  D802               	call	i2u454_48
 14515  002B98  EFD7  F015         	goto	i2u454_49
 14516  002B9C                     i2u454_48:
 14517  002B9C  0005               	push	
 14518  002B9E  6EFA               	movwf	pclath,c
 14519  002BA0  51E7               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 14520  002BA2  6EFD               	movwf	tosl,c
 14521  002BA4  51E8               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 14522  002BA6  6EFE               	movwf	tosh,c
 14523  002BA8  6AFF               	clrf	tosu,c
 14524  002BAA  50FA               	movf	pclath,w,c
 14525  002BAC  0012               	return		;indir
 14526  002BAE                     i2u454_49:
 14527  002BAE                     i2l5127:
 14528                           
 14529                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 14530  002BAE  0E81               	movlw	low _eusart2RxStatusBuffer
 14531  002BB0  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14532  002BB2  6ED9               	movwf	fsr2l,c
 14533  002BB4  6ADA               	clrf	fsr2h,c
 14534  002BB6  0E01               	movlw	high _eusart2RxStatusBuffer
 14535  002BB8  22DA               	addwfc	fsr2h,f,c
 14536  002BBA  50DF               	movf	indf2,w,c
 14537  002BBC  B4D8               	btfsc	status,2,c
 14538  002BBE  EFE3  F015         	goto	i2u455_41
 14539  002BC2  EFE5  F015         	goto	i2u455_40
 14540  002BC6                     i2u455_41:
 14541  002BC6  EFF4  F015         	goto	i2l5131
 14542  002BCA                     i2u455_40:
 14543  002BCA                     
 14544                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
 14545  002BCA  D802               	call	i2u456_48
 14546  002BCC  EFF2  F015         	goto	i2u456_49
 14547  002BD0                     i2u456_48:
 14548  002BD0  0005               	push	
 14549  002BD2  6EFA               	movwf	pclath,c
 14550  002BD4  0101               	movlb	1	; () banked
 14551  002BD6  51E5               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 14552  002BD8  6EFD               	movwf	tosl,c
 14553  002BDA  51E6               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 14554  002BDC  6EFE               	movwf	tosh,c
 14555  002BDE  6AFF               	clrf	tosu,c
 14556  002BE0  50FA               	movf	pclath,w,c
 14557  002BE2  0012               	return		;indir
 14558  002BE4                     i2u456_49:
 14559                           
 14560                           ;mcc_generated_files/eusart2.c: 242:     } else {
 14561  002BE4  EFF6  F015         	goto	i2l343
 14562  002BE8                     i2l5131:
 14563                           
 14564                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
 14565  002BE8  ECB7  F01C         	call	_EUSART2_RxDataHandler	;wreg free
 14566  002BEC                     i2l343:
 14567  002BEC  0012               	return		;funcret
 14568  002BEE                     __end_of_EUSART2_Receive_ISR:
 14569                           	opt callstack 0
 14570                           
 14571 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 14572 ;; Defined at:
 14573 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 14574 ;; Parameters:    Size  Location     Type
 14575 ;;		None
 14576 ;; Auto vars:     Size  Location     Type
 14577 ;;		None
 14578 ;; Return value:  Size  Location     Type
 14579 ;;                  1    wreg      void 
 14580 ;; Registers used:
 14581 ;;		None
 14582 ;; Tracked objects:
 14583 ;;		On entry : 0/0
 14584 ;;		On exit  : 0/0
 14585 ;;		Unchanged: 0/0
 14586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14591 ;;Total ram usage:        0 bytes
 14592 ;; Hardware stack levels used:    1
 14593 ;; This function calls:
 14594 ;;		Nothing
 14595 ;; This function is called by:
 14596 ;;		_EUSART2_Initialize
 14597 ;;		_EUSART2_Receive_ISR
 14598 ;; This function uses a non-reentrant model
 14599 ;;
 14600                           
 14601                           	psect	text86
 14602  003B98                     __ptext86:
 14603                           	opt callstack 0
 14604  003B98                     _EUSART2_DefaultOverrunErrorHandler:
 14605                           	opt callstack 16
 14606  003B98                     
 14607                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
 14608  003B98  010E               	movlb	14	; () banked
 14609  003B9A  999D               	bcf	157,4,b	;volatile
 14610                           
 14611                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
 14612  003B9C  899D               	bsf	157,4,b	;volatile
 14613  003B9E                     
 14614                           ; BSR set to: 14
 14615  003B9E  0012               	return		;funcret
 14616  003BA0                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 14617                           	opt callstack 0
 14618                           
 14619 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 14620 ;; Defined at:
 14621 ;;		line 259 in file "mcc_generated_files/eusart2.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;		None
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;		None
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  1    wreg      void 
 14628 ;; Registers used:
 14629 ;;		None
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14639 ;;Total ram usage:        0 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; This function calls:
 14642 ;;		Nothing
 14643 ;; This function is called by:
 14644 ;;		_EUSART2_Initialize
 14645 ;;		_EUSART2_Receive_ISR
 14646 ;; This function uses a non-reentrant model
 14647 ;;
 14648                           
 14649                           	psect	text87
 14650  003BC6                     __ptext87:
 14651                           	opt callstack 0
 14652  003BC6                     _EUSART2_DefaultFramingErrorHandler:
 14653                           	opt callstack 16
 14654  003BC6  0012               	return		;funcret
 14655  003BC8                     __end_of_EUSART2_DefaultFramingErrorHandler:
 14656                           	opt callstack 0
 14657                           
 14658 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 14659 ;; Defined at:
 14660 ;;		line 269 in file "mcc_generated_files/eusart2.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;		None
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;		None
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  1    wreg      void 
 14667 ;; Registers used:
 14668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14678 ;;Total ram usage:        0 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:    1
 14681 ;; This function calls:
 14682 ;;		_EUSART2_RxDataHandler
 14683 ;; This function is called by:
 14684 ;;		_EUSART2_Initialize
 14685 ;;		_EUSART2_Receive_ISR
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text88
 14690  003BAC                     __ptext88:
 14691                           	opt callstack 0
 14692  003BAC                     _EUSART2_DefaultErrorHandler:
 14693                           	opt callstack 15
 14694  003BAC                     
 14695                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
 14696  003BAC  ECB7  F01C         	call	_EUSART2_RxDataHandler	;wreg free
 14697  003BB0  0012               	return		;funcret
 14698  003BB2                     __end_of_EUSART2_DefaultErrorHandler:
 14699                           	opt callstack 0
 14700                           
 14701 ;; *************** function _EUSART2_RxDataHandler *****************
 14702 ;; Defined at:
 14703 ;;		line 249 in file "mcc_generated_files/eusart2.c"
 14704 ;; Parameters:    Size  Location     Type
 14705 ;;		None
 14706 ;; Auto vars:     Size  Location     Type
 14707 ;;		None
 14708 ;; Return value:  Size  Location     Type
 14709 ;;                  1    wreg      void 
 14710 ;; Registers used:
 14711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14712 ;; Tracked objects:
 14713 ;;		On entry : 0/0
 14714 ;;		On exit  : 0/0
 14715 ;;		Unchanged: 0/0
 14716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;Total ram usage:        0 bytes
 14722 ;; Hardware stack levels used:    1
 14723 ;; This function calls:
 14724 ;;		Nothing
 14725 ;; This function is called by:
 14726 ;;		_EUSART2_Receive_ISR
 14727 ;;		_EUSART2_DefaultErrorHandler
 14728 ;; This function uses a non-reentrant model
 14729 ;;
 14730                           
 14731                           	psect	text89
 14732  00396E                     __ptext89:
 14733                           	opt callstack 0
 14734  00396E                     _EUSART2_RxDataHandler:
 14735                           	opt callstack 16
 14736  00396E                     
 14737                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 14738  00396E  0E64               	movlw	low _eusart2RxBuffer
 14739  003970  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14740  003972  6ED9               	movwf	fsr2l,c
 14741  003974  6ADA               	clrf	fsr2h,c
 14742  003976  0E02               	movlw	high _eusart2RxBuffer
 14743  003978  22DA               	addwfc	fsr2h,f,c
 14744  00397A  CE99 FFDF          	movff	3737,indf2	;volatile
 14745  00397E  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 14746  003980                     
 14747                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 14748  003980  0E1F               	movlw	31
 14749  003982  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 14750  003984  EFC6  F01C         	goto	i2u392_41
 14751  003988  EFC8  F01C         	goto	i2u392_40
 14752  00398C                     i2u392_41:
 14753  00398C  EFCA  F01C         	goto	i2l4569
 14754  003990                     i2u392_40:
 14755  003990                     
 14756                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
 14757  003990  0E00               	movlw	0
 14758  003992  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 14759  003994                     i2l4569:
 14760                           
 14761                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
 14762  003994  0100               	movlb	0	; () banked
 14763  003996  2BB7               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 14764  003998                     
 14765                           ; BSR set to: 0
 14766  003998  0012               	return		;funcret
 14767  00399A                     __end_of_EUSART2_RxDataHandler:
 14768                           	opt callstack 0
 14769                           
 14770 ;; *************** function _EUSART1_Transmit_ISR *****************
 14771 ;; Defined at:
 14772 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;		None
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1    wreg      void 
 14779 ;; Registers used:
 14780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		_EUSART1_Initialize
 14796 ;;		_INTERRUPT_InterruptManager
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           	psect	text90
 14801  003712                     __ptext90:
 14802                           	opt callstack 0
 14803  003712                     _EUSART1_Transmit_ISR:
 14804                           	opt callstack 17
 14805  003712                     
 14806                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 14807  003712  0E40               	movlw	64
 14808  003714  0100               	movlb	0	; () banked
 14809  003716  61BB               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 14810  003718  EF90  F01B         	goto	i2u457_41
 14811  00371C  EF92  F01B         	goto	i2u457_40
 14812  003720                     i2u457_41:
 14813  003720  EFA8  F01B         	goto	i2l477
 14814  003724                     i2u457_40:
 14815  003724                     
 14816                           ; BSR set to: 0
 14817                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 14818  003724  0E64               	movlw	low _eusart1TxBuffer
 14819  003726  25B4               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 14820  003728  6ED9               	movwf	fsr2l,c
 14821  00372A  6ADA               	clrf	fsr2h,c
 14822  00372C  0E03               	movlw	high _eusart1TxBuffer
 14823  00372E  22DA               	addwfc	fsr2h,f,c
 14824  003730  50DF               	movf	indf2,w,c
 14825  003732  6E9A               	movwf	154,c	;volatile
 14826  003734                     
 14827                           ; BSR set to: 0
 14828  003734  2BB4               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 14829  003736                     
 14830                           ; BSR set to: 0
 14831                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 14832  003736  0E3F               	movlw	63
 14833  003738  65B4               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 14834  00373A  EFA1  F01B         	goto	i2u458_41
 14835  00373E  EFA3  F01B         	goto	i2u458_40
 14836  003742                     i2u458_41:
 14837  003742  EFA5  F01B         	goto	i2l5143
 14838  003746                     i2u458_40:
 14839  003746                     
 14840                           ; BSR set to: 0
 14841                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 14842  003746  0E00               	movlw	0
 14843  003748  6FB4               	movwf	_eusart1TxTail& (0+255),b	;volatile
 14844  00374A                     i2l5143:
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 14848  00374A  2BBB               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 14849                           
 14850                           ;mcc_generated_files/eusart1.c: 209:     }
 14851  00374C  EFAA  F01B         	goto	i2l480
 14852  003750                     i2l477:
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 14856  003750  010E               	movlb	14	; () banked
 14857  003752  99C5               	bcf	197,4,b	;volatile
 14858  003754                     i2l480:
 14859  003754  0012               	return		;funcret
 14860  003756                     __end_of_EUSART1_Transmit_ISR:
 14861                           	opt callstack 0
 14862                           
 14863 ;; *************** function _EUSART1_Receive_ISR *****************
 14864 ;; Defined at:
 14865 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;		None
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;		None
 14870 ;; Return value:  Size  Location     Type
 14871 ;;                  1    wreg      void 
 14872 ;; Registers used:
 14873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/0
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14883 ;;Total ram usage:        0 bytes
 14884 ;; Hardware stack levels used:    1
 14885 ;; Hardware stack levels required when called:    2
 14886 ;; This function calls:
 14887 ;;		Absolute function
 14888 ;;		_EUSART1_DefaultErrorHandler
 14889 ;;		_EUSART1_DefaultFramingErrorHandler
 14890 ;;		_EUSART1_DefaultOverrunErrorHandler
 14891 ;;		_EUSART1_RxDataHandler
 14892 ;; This function is called by:
 14893 ;;		_EUSART1_Initialize
 14894 ;;		_INTERRUPT_InterruptManager
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           	psect	text91
 14899  002BEE                     __ptext91:
 14900                           	opt callstack 0
 14901  002BEE                     _EUSART1_Receive_ISR:
 14902                           	opt callstack 15
 14903  002BEE                     
 14904                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 14905  002BEE  0E00               	movlw	low _eusart1RxStatusBuffer
 14906  002BF0  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14907  002BF2  6ED9               	movwf	fsr2l,c
 14908  002BF4  6ADA               	clrf	fsr2h,c
 14909  002BF6  0E03               	movlw	high _eusart1RxStatusBuffer
 14910  002BF8  22DA               	addwfc	fsr2h,f,c
 14911  002BFA  0E00               	movlw	0
 14912  002BFC  6EDF               	movwf	indf2,c
 14913  002BFE                     
 14914                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 14915  002BFE  A49D               	btfss	157,2,c	;volatile
 14916  002C00  EF04  F016         	goto	i2u459_41
 14917  002C04  EF06  F016         	goto	i2u459_40
 14918  002C08                     i2u459_41:
 14919  002C08  EF1B  F016         	goto	i2l5153
 14920  002C0C                     i2u459_40:
 14921  002C0C                     
 14922                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 14923  002C0C  0E00               	movlw	low _eusart1RxStatusBuffer
 14924  002C0E  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14925  002C10  6ED9               	movwf	fsr2l,c
 14926  002C12  6ADA               	clrf	fsr2h,c
 14927  002C14  0E03               	movlw	high _eusart1RxStatusBuffer
 14928  002C16  22DA               	addwfc	fsr2h,f,c
 14929  002C18  0103               	movlb	3	; () banked
 14930  002C1A  82DF               	bsf	indf2,1,c
 14931  002C1C                     
 14932                           ; BSR set to: 3
 14933                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 14934  002C1C  D802               	call	i2u460_48
 14935  002C1E  EF1B  F016         	goto	i2u460_49
 14936  002C22                     i2u460_48:
 14937  002C22  0005               	push	
 14938  002C24  6EFA               	movwf	pclath,c
 14939  002C26  0101               	movlb	1	; () banked
 14940  002C28  51E3               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 14941  002C2A  6EFD               	movwf	tosl,c
 14942  002C2C  51E4               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 14943  002C2E  6EFE               	movwf	tosh,c
 14944  002C30  6AFF               	clrf	tosu,c
 14945  002C32  50FA               	movf	pclath,w,c
 14946  002C34  0012               	return		;indir
 14947  002C36                     i2u460_49:
 14948  002C36                     i2l5153:
 14949                           
 14950                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 14951  002C36  A29D               	btfss	157,1,c	;volatile
 14952  002C38  EF20  F016         	goto	i2u461_41
 14953  002C3C  EF22  F016         	goto	i2u461_40
 14954  002C40                     i2u461_41:
 14955  002C40  EF37  F016         	goto	i2l5159
 14956  002C44                     i2u461_40:
 14957  002C44                     
 14958                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 14959  002C44  0E00               	movlw	low _eusart1RxStatusBuffer
 14960  002C46  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14961  002C48  6ED9               	movwf	fsr2l,c
 14962  002C4A  6ADA               	clrf	fsr2h,c
 14963  002C4C  0E03               	movlw	high _eusart1RxStatusBuffer
 14964  002C4E  22DA               	addwfc	fsr2h,f,c
 14965  002C50  0103               	movlb	3	; () banked
 14966  002C52  84DF               	bsf	indf2,2,c
 14967  002C54                     
 14968                           ; BSR set to: 3
 14969                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 14970  002C54  D802               	call	i2u462_48
 14971  002C56  EF37  F016         	goto	i2u462_49
 14972  002C5A                     i2u462_48:
 14973  002C5A  0005               	push	
 14974  002C5C  6EFA               	movwf	pclath,c
 14975  002C5E  0101               	movlb	1	; () banked
 14976  002C60  51E1               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 14977  002C62  6EFD               	movwf	tosl,c
 14978  002C64  51E2               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 14979  002C66  6EFE               	movwf	tosh,c
 14980  002C68  6AFF               	clrf	tosu,c
 14981  002C6A  50FA               	movf	pclath,w,c
 14982  002C6C  0012               	return		;indir
 14983  002C6E                     i2u462_49:
 14984  002C6E                     i2l5159:
 14985                           
 14986                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 14987  002C6E  0E00               	movlw	low _eusart1RxStatusBuffer
 14988  002C70  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14989  002C72  6ED9               	movwf	fsr2l,c
 14990  002C74  6ADA               	clrf	fsr2h,c
 14991  002C76  0E03               	movlw	high _eusart1RxStatusBuffer
 14992  002C78  22DA               	addwfc	fsr2h,f,c
 14993  002C7A  50DF               	movf	indf2,w,c
 14994  002C7C  B4D8               	btfsc	status,2,c
 14995  002C7E  EF43  F016         	goto	i2u463_41
 14996  002C82  EF45  F016         	goto	i2u463_40
 14997  002C86                     i2u463_41:
 14998  002C86  EF54  F016         	goto	i2l5163
 14999  002C8A                     i2u463_40:
 15000  002C8A                     
 15001                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 15002  002C8A  D802               	call	i2u464_48
 15003  002C8C  EF52  F016         	goto	i2u464_49
 15004  002C90                     i2u464_48:
 15005  002C90  0005               	push	
 15006  002C92  6EFA               	movwf	pclath,c
 15007  002C94  0101               	movlb	1	; () banked
 15008  002C96  51DF               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 15009  002C98  6EFD               	movwf	tosl,c
 15010  002C9A  51E0               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 15011  002C9C  6EFE               	movwf	tosh,c
 15012  002C9E  6AFF               	clrf	tosu,c
 15013  002CA0  50FA               	movf	pclath,w,c
 15014  002CA2  0012               	return		;indir
 15015  002CA4                     i2u464_49:
 15016                           
 15017                           ;mcc_generated_files/eusart1.c: 233:     } else {
 15018  002CA4  EF56  F016         	goto	i2l487
 15019  002CA8                     i2l5163:
 15020                           
 15021                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 15022  002CA8  ECCD  F01C         	call	_EUSART1_RxDataHandler	;wreg free
 15023  002CAC                     i2l487:
 15024  002CAC  0012               	return		;funcret
 15025  002CAE                     __end_of_EUSART1_Receive_ISR:
 15026                           	opt callstack 0
 15027                           
 15028 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 15029 ;; Defined at:
 15030 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;		None
 15033 ;; Auto vars:     Size  Location     Type
 15034 ;;		None
 15035 ;; Return value:  Size  Location     Type
 15036 ;;                  1    wreg      void 
 15037 ;; Registers used:
 15038 ;;		None
 15039 ;; Tracked objects:
 15040 ;;		On entry : 0/0
 15041 ;;		On exit  : 0/0
 15042 ;;		Unchanged: 0/0
 15043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15048 ;;Total ram usage:        0 bytes
 15049 ;; Hardware stack levels used:    1
 15050 ;; This function calls:
 15051 ;;		Nothing
 15052 ;; This function is called by:
 15053 ;;		_EUSART1_Initialize
 15054 ;;		_EUSART1_Receive_ISR
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           	psect	text92
 15059  003BB2                     __ptext92:
 15060                           	opt callstack 0
 15061  003BB2                     _EUSART1_DefaultOverrunErrorHandler:
 15062                           	opt callstack 16
 15063  003BB2                     
 15064                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 15065  003BB2  989D               	bcf	157,4,c	;volatile
 15066                           
 15067                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 15068  003BB4  889D               	bsf	157,4,c	;volatile
 15069  003BB6  0012               	return		;funcret
 15070  003BB8                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 15071                           	opt callstack 0
 15072                           
 15073 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 15074 ;; Defined at:
 15075 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;		None
 15078 ;; Auto vars:     Size  Location     Type
 15079 ;;		None
 15080 ;; Return value:  Size  Location     Type
 15081 ;;                  1    wreg      void 
 15082 ;; Registers used:
 15083 ;;		None
 15084 ;; Tracked objects:
 15085 ;;		On entry : 0/0
 15086 ;;		On exit  : 0/0
 15087 ;;		Unchanged: 0/0
 15088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15093 ;;Total ram usage:        0 bytes
 15094 ;; Hardware stack levels used:    1
 15095 ;; This function calls:
 15096 ;;		Nothing
 15097 ;; This function is called by:
 15098 ;;		_EUSART1_Initialize
 15099 ;;		_EUSART1_Receive_ISR
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           
 15103                           	psect	text93
 15104  003BC8                     __ptext93:
 15105                           	opt callstack 0
 15106  003BC8                     _EUSART1_DefaultFramingErrorHandler:
 15107                           	opt callstack 16
 15108  003BC8  0012               	return		;funcret
 15109  003BCA                     __end_of_EUSART1_DefaultFramingErrorHandler:
 15110                           	opt callstack 0
 15111                           
 15112 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 15113 ;; Defined at:
 15114 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used:    1
 15134 ;; Hardware stack levels required when called:    1
 15135 ;; This function calls:
 15136 ;;		_EUSART1_RxDataHandler
 15137 ;; This function is called by:
 15138 ;;		_EUSART1_Initialize
 15139 ;;		_EUSART1_Receive_ISR
 15140 ;; This function uses a non-reentrant model
 15141 ;;
 15142                           
 15143                           	psect	text94
 15144  003BB8                     __ptext94:
 15145                           	opt callstack 0
 15146  003BB8                     _EUSART1_DefaultErrorHandler:
 15147                           	opt callstack 15
 15148  003BB8                     
 15149                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 15150  003BB8  ECCD  F01C         	call	_EUSART1_RxDataHandler	;wreg free
 15151  003BBC  0012               	return		;funcret
 15152  003BBE                     __end_of_EUSART1_DefaultErrorHandler:
 15153                           	opt callstack 0
 15154                           
 15155 ;; *************** function _EUSART1_RxDataHandler *****************
 15156 ;; Defined at:
 15157 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 15158 ;; Parameters:    Size  Location     Type
 15159 ;;		None
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;		None
 15162 ;; Return value:  Size  Location     Type
 15163 ;;                  1    wreg      void 
 15164 ;; Registers used:
 15165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15166 ;; Tracked objects:
 15167 ;;		On entry : 0/0
 15168 ;;		On exit  : 0/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15175 ;;Total ram usage:        0 bytes
 15176 ;; Hardware stack levels used:    1
 15177 ;; This function calls:
 15178 ;;		Nothing
 15179 ;; This function is called by:
 15180 ;;		_EUSART1_Receive_ISR
 15181 ;;		_EUSART1_DefaultErrorHandler
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text95
 15186  00399A                     __ptext95:
 15187                           	opt callstack 0
 15188  00399A                     _EUSART1_RxDataHandler:
 15189                           	opt callstack 16
 15190  00399A                     
 15191                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 15192  00399A  0E00               	movlw	low _eusart1RxBuffer
 15193  00399C  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15194  00399E  6ED9               	movwf	fsr2l,c
 15195  0039A0  6ADA               	clrf	fsr2h,c
 15196  0039A2  0E04               	movlw	high _eusart1RxBuffer
 15197  0039A4  22DA               	addwfc	fsr2h,f,c
 15198  0039A6  CF99 FFDF          	movff	3993,indf2	;volatile
 15199  0039AA  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 15200  0039AC                     
 15201                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 15202  0039AC  0E63               	movlw	99
 15203  0039AE  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 15204  0039B0  EFDC  F01C         	goto	i2u399_41
 15205  0039B4  EFDE  F01C         	goto	i2u399_40
 15206  0039B8                     i2u399_41:
 15207  0039B8  EFE0  F01C         	goto	i2l4615
 15208  0039BC                     i2u399_40:
 15209  0039BC                     
 15210                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 15211  0039BC  0E00               	movlw	0
 15212  0039BE  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 15213  0039C0                     i2l4615:
 15214                           
 15215                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 15216  0039C0  0100               	movlb	0	; () banked
 15217  0039C2  2BB2               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 15218  0039C4                     
 15219                           ; BSR set to: 0
 15220  0039C4  0012               	return		;funcret
 15221  0039C6                     __end_of_EUSART1_RxDataHandler:
 15222                           	opt callstack 0
 15223                           
 15224                           	psect	text96
 15225  000000                     __ptext96:
 15226                           	opt callstack 0
 15227  000000                     
 15228                           	psect	rparam
 15229  0000                     
 15230                           	psect	temp
 15231  00005B                     btemp:
 15232                           	opt callstack 0
 15233  00005B                     	ds	1
 15234  0000                     int$flags	set	btemp
 15235  0000                     wtemp8	set	btemp+1
 15236  0000                     ttemp5	set	btemp+1
 15237  0000                     ttemp6	set	btemp+4
 15238  0000                     ttemp7	set	btemp+8
 15239                           tosu	equ	0xFFF
 15240                           tosh	equ	0xFFE
 15241                           tosl	equ	0xFFD
 15242                           stkptr	equ	0xFFC
 15243                           pclatu	equ	0xFFB
 15244                           pclath	equ	0xFFA
 15245                           pcl	equ	0xFF9
 15246                           tblptru	equ	0xFF8
 15247                           tblptrh	equ	0xFF7
 15248                           tblptrl	equ	0xFF6
 15249                           tablat	equ	0xFF5
 15250                           prodh	equ	0xFF4
 15251                           prodl	equ	0xFF3
 15252                           indf0	equ	0xFEF
 15253                           postinc0	equ	0xFEE
 15254                           postdec0	equ	0xFED
 15255                           preinc0	equ	0xFEC
 15256                           plusw0	equ	0xFEB
 15257                           fsr0h	equ	0xFEA
 15258                           fsr0l	equ	0xFE9
 15259                           wreg	equ	0xFE8
 15260                           indf1	equ	0xFE7
 15261                           postinc1	equ	0xFE6
 15262                           postdec1	equ	0xFE5
 15263                           preinc1	equ	0xFE4
 15264                           plusw1	equ	0xFE3
 15265                           fsr1h	equ	0xFE2
 15266                           fsr1l	equ	0xFE1
 15267                           bsr	equ	0xFE0
 15268                           indf2	equ	0xFDF
 15269                           postinc2	equ	0xFDE
 15270                           postdec2	equ	0xFDD
 15271                           preinc2	equ	0xFDC
 15272                           plusw2	equ	0xFDB
 15273                           fsr2h	equ	0xFDA
 15274                           fsr2l	equ	0xFD9
 15275                           status	equ	0xFD8


Data Sizes:
    Strings     1188
    Constant    0
    Data        319
    BSS         650
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     68      96
    BANK1           256      0     243
    BANK2           256      0     224
    BANK3           256      0     228
    BANK4           256     68     232
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1443(BANK4[20]), 
		 -> ValidateCmd@ConfName_1439(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), STR_26(CODE[9]), STR_25(CODE[12]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1443(BANK4[20]), 
		 -> ValidateCmd@ConfName_1439(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), STR_26(CODE[9]), STR_25(CODE[12]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_45(CODE[1]), STR_38(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_3(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_45(CODE[1]), STR_38(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_3(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_56(CODE[4]), STR_54(CODE[5]), STR_52(CODE[7]), STR_50(CODE[2]), 
		 -> STR_48(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_46(CODE[29]), STR_44(CODE[30]), STR_43(CODE[24]), STR_42(CODE[25]), 
		 -> STR_41(CODE[17]), STR_40(CODE[27]), STR_39(CODE[33]), STR_37(CODE[36]), 
		 -> STR_36(CODE[67]), STR_35(CODE[19]), STR_34(CODE[55]), STR_33(CODE[17]), 
		 -> STR_32(CODE[16]), STR_31(CODE[4]), STR_30(CODE[34]), STR_29(CODE[54]), 
		 -> STR_28(CODE[52]), STR_27(CODE[28]), STR_24(CODE[42]), STR_23(CODE[22]), 
		 -> STR_22(CODE[19]), STR_21(CODE[61]), STR_20(CODE[27]), STR_19(CODE[21]), 
		 -> STR_18(CODE[33]), STR_17(CODE[16]), STR_16(CODE[24]), STR_15(CODE[4]), 
		 -> STR_14(CODE[25]), STR_13(CODE[28]), STR_12(CODE[28]), STR_11(CODE[36]), 
		 -> STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), STR_7(CODE[28]), 
		 -> STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), STR_2(CODE[28]), 
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2068_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_46(CODE[29]), STR_44(CODE[30]), STR_43(CODE[24]), STR_42(CODE[25]), 
		 -> STR_41(CODE[17]), STR_40(CODE[27]), STR_39(CODE[33]), STR_37(CODE[36]), 
		 -> STR_36(CODE[67]), STR_35(CODE[19]), STR_34(CODE[55]), STR_33(CODE[17]), 
		 -> STR_32(CODE[16]), STR_31(CODE[4]), STR_30(CODE[34]), STR_29(CODE[54]), 
		 -> STR_28(CODE[52]), STR_27(CODE[28]), STR_24(CODE[42]), STR_23(CODE[22]), 
		 -> STR_22(CODE[19]), STR_21(CODE[61]), STR_20(CODE[27]), STR_19(CODE[21]), 
		 -> STR_18(CODE[33]), STR_17(CODE[16]), STR_16(CODE[24]), STR_15(CODE[4]), 
		 -> STR_14(CODE[25]), STR_13(CODE[28]), STR_12(CODE[28]), STR_11(CODE[36]), 
		 -> STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), STR_7(CODE[28]), 
		 -> STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), STR_2(CODE[28]), 
		 -> STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_46(CODE[29]), STR_44(CODE[30]), STR_43(CODE[24]), STR_42(CODE[25]), 
		 -> STR_41(CODE[17]), STR_40(CODE[27]), STR_39(CODE[33]), STR_37(CODE[36]), 
		 -> STR_36(CODE[67]), STR_35(CODE[19]), STR_34(CODE[55]), STR_33(CODE[17]), 
		 -> STR_32(CODE[16]), STR_31(CODE[4]), STR_30(CODE[34]), STR_29(CODE[54]), 
		 -> STR_28(CODE[52]), STR_27(CODE[28]), STR_24(CODE[42]), STR_23(CODE[22]), 
		 -> STR_22(CODE[19]), STR_21(CODE[61]), STR_20(CODE[27]), STR_19(CODE[21]), 
		 -> STR_18(CODE[33]), STR_17(CODE[16]), STR_16(CODE[24]), STR_15(CODE[4]), 
		 -> STR_14(CODE[25]), STR_13(CODE[28]), STR_12(CODE[28]), STR_11(CODE[36]), 
		 -> STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), STR_7(CODE[28]), 
		 -> STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), STR_2(CODE[28]), 
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 67
		 -> STR_46(CODE[29]), STR_44(CODE[30]), STR_43(CODE[24]), STR_42(CODE[25]), 
		 -> STR_41(CODE[17]), STR_40(CODE[27]), STR_39(CODE[33]), STR_37(CODE[36]), 
		 -> STR_36(CODE[67]), STR_35(CODE[19]), STR_34(CODE[55]), STR_33(CODE[17]), 
		 -> STR_32(CODE[16]), STR_31(CODE[4]), STR_30(CODE[34]), STR_29(CODE[54]), 
		 -> STR_28(CODE[52]), STR_27(CODE[28]), STR_24(CODE[42]), STR_23(CODE[22]), 
		 -> STR_22(CODE[19]), STR_21(CODE[61]), STR_20(CODE[27]), STR_19(CODE[21]), 
		 -> STR_18(CODE[33]), STR_17(CODE[16]), STR_16(CODE[24]), STR_15(CODE[4]), 
		 -> STR_14(CODE[25]), STR_13(CODE[28]), STR_12(CODE[28]), STR_11(CODE[36]), 
		 -> STR_10(CODE[4]), STR_9(CODE[23]), STR_8(CODE[32]), STR_7(CODE[28]), 
		 -> STR_6(CODE[54]), STR_5(CODE[24]), STR_4(CODE[16]), STR_2(CODE[28]), 
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1443(BANK4[20]), ValidateCmd@ConfName_1439(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), 
		 -> STR_26(CODE[9]), STR_25(CODE[12]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1443(BANK4[20]), ValidateCmd@ConfName_1439(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), 
		 -> STR_26(CODE[9]), STR_25(CODE[12]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1443(BANK4[20]), ValidateCmd@ConfName_1439(BANK4[20]), 
		 -> ValidateCmd@ConfName(BANK4[20]), STR_26(CODE[9]), STR_25(CODE[12]), InitialiseString@SerialNum(BANK0[11]), 
		 -> Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1443(BANK4[20]), ValidateCmd@ConfName_1439(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    SerIni@SerialNum	PTR unsigned char  size(2) Largest target is 11
		 -> InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned int  size(2) Largest target is 64
		 -> MBRespon(BANK1[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _SerIni->_DATAEE_ReadByte
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _ValidateCmd->_SaveCardDat
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  720651
                                             65 BANK0      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  231367
                                              0 BANK4     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1061
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   36517
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  119456
                                             47 BANK0     18    10      8
                    _ClearEEAddRange
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   41013
                                             84 COMRAM     2     2      0
                                             43 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2167
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   37351
                                             84 COMRAM     2     2      0
                                             43 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    15    15      0   37591
                                             43 BANK0     13    13      0
                      _Initalisation
                             _SerIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SerIni                                              12    10      2     982
                                              6 COMRAM    12    10      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     332
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Initalisation                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   36619
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  110138
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   36962
                                             43 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   36588
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   75234
                                             45 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   36650
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   74996
                                             45 BANK0      6     6      0
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          6     4      2   38501
                                             45 BANK0      6     4      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1168
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     590
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PrintModRespon                                       3     3      0   36619
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   36517
                                             29 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32722
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   32159
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7877
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7259
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3452
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8113
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5847
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2    1030
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _Initalisation
     _SerIni
       _DATAEE_ReadByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _Initalisation
       _SerIni
         _DATAEE_ReadByte
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_ReadByte
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100     44      E8      14       90.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E0      10       87.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F3       8       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      60       5       60.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4BD       6        0.0%
DATA                 0      0     4BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 18 00:43:10 2021

                      _eusart1TxBufferRemaining 00BB                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 2E7E  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 3A6E                                             l124 3AB6  
                                           l212 36B2                                             l214 36C0  
                                           l302 3A86                                             l127 3A54  
                                           l215 36CC                                             l320 33C4  
                                           l144 3BC0                                             l305 3B14  
                                           l321 33DC                                             l330 3B96  
                                           l218 3A9E                                             l315 3464  
                                           l324 340C                                             l503 3B82  
                                           l512 3B64                                             l506 3B78  
                                           l362 3B46                                             l515 3B6E  
                                           l371 3B3C                                             l452 3ACE  
                                           l701 3640                                             l509 3B8C  
                                           l365 3B5A                                             l470 3308  
                                           l446 3082                                             l471 3320  
                                           l455 3B28                                             l359 3B50  
                                           l712 299A                                             l368 3B32  
                                           l296 3006                                             l449 3AE6  
                                           l465 34BC                                             l474 3350  
                                           l299 3AFE                                             l731 1FE8  
                                           l724 1ECC                                             l900 32F2  
                                           l751 274E                                             l727 1EF2  
                                           l719 2F06                                             l911 0D54  
                                           l816 1D28                                             l681 3BA8  
                                           l770 316A                                             l754 2774  
                                           l746 1146                                             l690 3BA4  
                                           l922 16EC                                             l594 2436  
                                           l683 3BAA                                             l739 134C  
                                           l756 27E4                                             l676 31D2  
                                           l757 27EC                                             l686 3BA0  
                                           l918 0EFC                                             l695 35F6  
                                           l791 270A                                             l679 3BA6  
                                           l688 3BA2                                             l872 2228  
                                           l865 3BC4                                             l796 35AA  
                                           l877 2D5A                                             l974 2AB0  
                                           l894 38C4                                             l799 2334  
                                           l888 210C                                             l977 2AF2  
                                           l985 0754                                             l979 2B2C  
                                           l987 075C                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 3B52         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 3B48                                             _abs 37D6  
                                           _pad 2A6C                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            l1012 176E  
                                          l1005 0992                                            l1014 1776  
                                          l1102 06B2                                            l1023 1836  
                                          l1024 187E                                            l1033 1386  
                                          l1113 322E                                            l1050 09D4  
                                          l1114 3236                                            l1043 154E  
                                          l1035 138E                                            ?_abs 0017  
                                          l1028 1886                                            l1117 3A38  
                                          l1231 1BA8                                            l1071 0C06  
                                          l1048 09CC                                            l1073 0C68  
                                          l1057 0A6A                                            l1244 1E8C  
                                          l1087 0220                                            l1562 261E  
                                          l1555 25FE                                            l1572 2A6A  
                                          l1565 2A4A                                            l1910 3294  
                                          l1823 1A18                                            l1904 30F6  
                                          l6001 14FE                                            l1921 33A6  
                                          l1826 1A20                                            l1835 396C  
                                          l1843 350E                                            l6003 1518  
                                          l6011 09A4                                            l1916 355E  
                                          l1932 38FC                                            l6005 1526  
                                          l1829 388C                                            l6021 0A12  
                                          l6013 09A6                                            l1926 33AE  
                                          l1862 28C8                                            l6111 19FC  
                                          l6103 1998                                            l6031 0A4E  
                                          l6023 0A1A                                            l6015 09C0  
                                          l1792 380C                                            l1849 3934  
                                          l6033 0A5E                                            l6025 0A24  
                                          l6017 09EA                                            l6009 0994  
                                          l6201 0522                                            l6121 015E  
                                          l4601 3346                                            l1874 2DF0  
                                          l1882 3710                                            l5171 3570  
                                          l6107 19D8                                            l1795 3814  
                                          l6051 0B26                                            l6043 0AEA  
                                          l6027 0A2A                                            l6019 09F2  
                                          l6211 05D0                                            l6203 0548  
                                          l6131 0194                                            l6123 0170  
                                          l4603 334A                                            l5091 3A5A  
                                          l5173 358A                                            l5165 3560  
                                          l6109 19EA                                            l6061 0BDE  
                                          l6053 0B2C                                            l6045 0AFC  
                                          l6037 0A9E                                            l6029 0A32  
                                          l6221 0654                                            l6205 056E  
                                          l6125 0174                                            l6117 012A  
                                          l4605 334C                                            l5093 3A5E  
                                          l6301 340E                                            ?_pad 0017  
                                          l5175 358E                                            l6071 0C40  
                                          l6063 0BF8                                            l6039 0AB0  
                                          l6047 0B10                                            l6055 0B8A  
                                          l6207 0586                                            l6215 060C  
                                          l6151 01B8                                            l6143 01A6  
                                          l6135 019A                                            l6127 0180  
                                          l6119 0150                                            l6231 067A  
                                          l4551 3B52                                            l4543 3B34  
                                          l4711 2E56                                            l4703 2DF2  
                                          l5095 3A62                                            l6311 3452  
                                          l6303 340E                                            l1896 3A12  
                                          l4553 3AE8                                            l6081 18A4  
                                          l6065 0C14                                            l6057 0BA6  
                                          l6049 0B20                                            l6233 06A0  
                                          l6217 0632                                            l6225 0660  
                                          l6209 0594                                            l6161 028C  
                                          l6129 0182                                            l6153 020E  
                                          l1889 39EC                                            l4801 34B2  
                                          l4545 3B2A                                            l4721 2E64  
                                          l4713 2E58                                            l4705 2E1A  
                                          l5097 3A66                                            l5089 3A56  
                                          l6401 2164                                            l6313 3456  
                                          l6305 3420                                            l5291 35BC  
                                          l6091 1904                                            l6083 18C2  
                                          l6075 1888                                            l6067 0C1A  
                                          l6059 0BC4                                            l6227 066E  
                                          l6219 0640                                            l6163 029A  
                                          l6155 022E                                            l6147 01AC  
                                          l6139 01A0                                            l6323 39C6  
                                          l4803 34B6                                            l4571 3B66  
                                          l4731 3008                                            l4547 3B48  
                                          l4723 2E66                                            l4715 2E5A  
                                          l4707 2E2A                                            l5099 3A6A  
                                          l6411 218E                                            l6403 2174  
                                          l6315 345A                                            l6307 3440  
                                          l6251 3248                                            l5293 35CC  
                                          l5285 35AC                                            l4557 3B00  
                                          l6093 191A                                            l6085 18FA  
                                          l6077 189C                                            l5701 2B00  
                                          l6069 0C2A                                            l6181 03C6  
                                          l6173 0320                                            l6165 02A8  
                                          l6157 0230                                            l6253 31D4  
                                          l6325 39D0                                            l4581 3AD0  
                                          l6501 2990                                            l4805 34BA  
                                          l4573 3B5C                                            l4741 3030  
                                          l4733 300C                                            l4549 3B3E  
                                          l4725 3BBE                                            l4717 2E60  
                                          l4709 2E54                                            l6421 21FC  
                                          l6413 21A6                                            l6405 2178  
                                          l6261 368A                                            l6317 345E  
                                          l6309 3442                                            l6341 2866  
                                          l6333 27EE                                            l5295 35D0  
                                          l6095 1922                                            l6087 18FE  
                                          l6079 18A0                                            l5631 33B2  
                                          l5703 2B14                                            l5711 38FE  
                                          l6167 02C8                                            l6175 0332  
                                          l6159 0256                                            l6255 31DC  
                                          l4591 32F6                                            l6503 1E8E  
                                          l4575 3B7A                                            l4751 3054  
                                          l4743 3034                                            l4735 3018  
                                          l4719 2E62                                            l4727 3A3A  
                                          l6423 2218                                            l6415 21B6  
                                          l6407 217C                                            l6271 36A4  
                                          l6263 3692                                            l6431 32C0  
                                          l6319 3462                                            l6351 28B0  
                                          l6335 2814                                            l6343 2882  
                                          l5297 35EC                                            l6097 192A  
                                          l5801 1DC8                                            l5641 3402  
                                          l5633 33D4                                            l6193 047A  
                                          l6185 03FE                                            l6177 0358  
                                          l6169 02D6                                            l7081 01E0  
                                          l6257 31EA                                            l4593 3318  
                                          l4585 3B16                                            l4841 361C  
                                          l6521 1EF8                                            l6505 1E94  
                                          l4577 3B70                                            l4753 307E  
                                          l4745 3038                                            l4737 3028  
                                          l4761 2FAA                                            l4729 3AA0  
                                          l6281 3A88                                            l6417 21C6  
                                          l6409 218A                                            l6441 2CAE  
                                          l6273 36A6                                            l6265 3698  
                                          l6433 32D0                                            l6425 3296  
                                          l6345 2894                                            l6337 2836  
                                          l6249 3238                                            l6329 39EE  
                                          l6361 2026                                            l6353 1FEA  
                                          l6601 0D30                                            l6099 1960  
                                          l7083 194A                                            l5803 1DD6  
                                          l5811 1E3C                                            l5707 37D6  
                                          l5643 3406                                            l5635 33DE  
                                          l5651 2D6E                                            l5715 3852  
                                          l5723 3388                                            l6195 04A0  
                                          l6187 0424                                            l6179 037E  
                                          l6259 3210                                            l4595 3322  
                                          l4931 2710                                            l4843 3620  
                                          l6531 1F6E                                            l6523 1F0A  
                                          l6515 1EDA                                            l6507 1EB0  
                                          l4579 3B84                                            l4747 303C  
                                          l4739 302C                                            l4771 2FC0  
                                          l4763 2FB0                                            l4755 2F8A  
                                          l6291 3A9A                                            l6283 3A8E  
                                          l6419 21CA                                            l6451 2CEE  
                                          l6443 2CBA                                            l6275 36A8  
                                          l6267 369C                                            l6435 32D6  
                                          l6427 32B4                                            l6347 28A8  
                                          l6339 2846                                            l6371 20AA  
                                          l6363 2038                                            l6355 1FF2  
                                          l6611 0D8A                                            l6603 0D42  
                                          l5733 3A14                                            l5741 1A26  
                                          l5813 1E4C                                            l5805 1E04  
                                          l5709 37F0                                            l5637 33F0  
                                          l5645 3408                                            l5629 33B2  
                                          l5653 2D80                                            l5901 0830  
                                          l5821 253C                                            l5725 339A  
                                          l6197 04EA                                            l6189 045A  
                                          l4597 3334                                            l4589 32F6  
                                          l4941 275C                                            l4933 272C  
                                          l4837 35F8                                            l6533 1F8A  
                                          l6517 1EE0                                            l6509 1EC4  
                                          l6525 1F0E                                            l6701 1D00  
                                          l4749 3048                                            l4773 2FCC  
                                          l4765 2FB4                                            l4757 2F8E  
                                          l6293 3A9C                                            l6285 3A92  
                                          l6461 2D4C                                            l6453 2CFC  
                                          l6445 2CC6                                            l6277 36AC  
                                          l6269 36A0                                            l6437 32DA  
                                          l6429 32B4                                            l6349 28AC  
                                          l6381 20E8                                            l6373 20AE  
                                          l6365 204C                                            l6357 2006  
                                          l6621 0DFA                                            l6613 0D9E  
                                          l6605 0D54                                            l5735 3A30  
                                          l5751 1A86                                            l5743 1A34  
                                          l5815 1E6C                                            l5807 1E24  
                                          l5639 33F2                                            l5647 3B90  
                                          l5655 2D8A                                            l5663 3510  
                                          l5911 0900                                            l5903 0894  
                                          l5831 2596                                            l5823 255A  
                                          l5719 3352                                            l6551 2636  
                                          l4599 3336                                            l4943 2762  
                                          l4935 2746                                            l4951 2790  
                                          l6463 316C                                            l4839 360C  
                                          l4791 3478                                            l4783 3AB8  
                                          l6535 1FB6                                            l6543 1FE6  
                                          l6527 1F44                                            l6519 1EEC  
                                          l6703 1D12                                            l4775 2FD8  
                                          l4767 2FB8                                            l4759 2F9A  
                                          l6287 3A96                                            l6455 2D22  
                                          l6447 2CD4                                            l6439 2CAE  
                                          l6279 36B0                                            l6383 20F6  
                                          l6367 2070                                            l6359 201A  
                                          l6631 0E50                                            l6623 0E12  
                                          l6615 0DAC                                            l6607 0D60  
                                          l7079 23E2                                            l5729 3936  
                                          l5761 1AD0                                            l5753 1A8A  
                                          l5745 1A54                                            l5809 1E36  
                                          l5657 2DA8                                            l5649 2D5C  
                                          l5673 36CE                                            l5665 351C  
                                          l5921 0946                                            l5905 08AE  
                                          l5913 090E                                            l5833 25C4  
                                          l5825 2562                                            l5841 299C  
                                          l5681 38C6                                            l6561 26B0  
                                          l6553 264A                                            l4953 27AE  
                                          l4945 276E                                            l4929 270C  
                                          l6473 3182                                            l6465 317A  
                                          l6801 107C                                            l6481 28E0  
                                          l4793 3498                                            l6537 1FE0  
                                          l6529 1F5E                                            l6705 1D20  
                                          l6721 2EAC                                            l6713 2E80  
                                          l4777 3002                                            l4769 2FBC  
                                          l6289 3A98                                            l6457 2D30  
                                          l6449 2CD8                                            l6297 3A70  
                                          l6369 2098                                            l6377 20BA  
                                          l6385 2102                                            l6641 0EA6  
                                          l6633 0E68                                            l6617 0DD6  
                                          l6625 0E18                                            l6609 0D74  
                                          l5771 1B40                                            l5763 1ADE  
                                          l5755 1A96                                            l5747 1A58  
                                          l5739 1A22                                            l5659 2DDE  
                                          l5675 36DA                                            l5667 3520  
                                          l5691 2A9C                                            l5923 0952  
                                          l5915 0920                                            l5907 08CC  
                                          l5931 16EE                                            l5835 25E4  
                                          l5827 2576                                            l5819 2530  
                                          l5851 2A12                                            l5843 29BA  
                                          l6555 2658                                            l6563 26B6  
                                          l6547 2620                                            l4955 27C8  
                                          l4947 277A                                            l6731 1152  
                                          l6475 31B2                                            l6467 317A  
                                          l6811 110E                                            l6803 1080  
                                          l6491 2932                                            l6483 28FC  
                                          l4795 349A                                            l4787 3466  
                                          l6723 2ED6                                            l6715 2E80  
                                          l6395 212E                                            l6459 2D3E  
                                          l6379 20CC                                            l6643 0EBE  
                                          l6635 0E76                                            l6627 0E3C  
                                          l6619 0DF4                                            l6571 388E  
                                          l6651 3088                                            l5861 34D6  
                                          l5773 1B52                                            l5765 1AF0  
                                          l5757 1AB4                                            l5749 1A66  
                                          l5677 36EC                                            l5669 3552  
                                          l5693 2AA8                                            l5685 2A6C  
                                          l5925 095A                                            l5917 092E  
                                          l5909 08E6                                            l5941 1736  
                                          l5933 1700                                            l5837 25E6  
                                          l5829 2584                                            l5853 2A32  
                                          l5845 29C2                                            l6565 26D4  
                                          l6557 266C                                            l6549 2620  
                                          l4957 27D8                                            l4949 278C  
                                          l6821 2234                                            l6741 11C4  
                                          l6733 1176                                            l6477 31B6  
                                          l6813 111A                                            l6805 10A8  
                                          l6493 2954                                            l6485 2900  
                                          l4797 34AA                                            l4789 3466  
                                          l6709 1D26                                            l6661 1BAA  
                                          l6725 2EDC                                            l6717 2E8E  
                                          l6397 213C                                            l6389 210E  
                                          l6637 0E86                                            l6645 0EC4  
                                          l6629 0E48                                            l6581 0C6A  
                                          l6573 38A0                                            l6653 3090  
                                          l6901 16AE                                            l5863 3504  
                                          l5767 1B1E                                            l5759 1ABC  
                                          l5775 1B58                                            l5791 1D60  
                                          l5783 1D2A                                            l5679 36F0  
                                          l5695 2ABC                                            l5687 2A7A  
                                          l5919 0934                                            l5927 096A  
                                          l5871 06D4                                            l5951 17AC  
                                          l5943 173E                                            l5935 1708  
                                          l5839 25F8                                            l5855 2A44  
                                          l5847 29D6                                            l6567 26E8  
                                          l6559 269C                                            l4991 311C  
                                          l6831 22A6                                            l6823 2258  
                                          l6751 1274                                            l6743 11C8  
                                          l6735 117A                                            l6815 112A  
                                          l6807 10D8                                            l6495 2968  
                                          l6487 2904                                            l6479 28CA  
                                          l4799 34AE                                            l6671 1BE8  
                                          l6663 1BAE                                            l6727 2EFA  
                                          l6719 2EA0                                            l6399 2154  
                                          l6647 0EE8                                            l6639 0EA0  
                                          l6591 0CCC                                            l6583 0C6A  
                                          l6575 38A4                                            l6655 30BA  
                                          l6903 16C0                                            l5865 3508  
                                          l5857 34BE                                            l5777 1B68  
                                          l5769 1B3E                                            l5793 1D6E  
                                          l5785 1D2E                                            l5697 2AD0  
                                          l5689 2A8E                                            l5881 0748  
                                          l5873 06FC                                            l5961 1814  
                                          l5953 17B0                                            l5945 174C  
                                          l5937 171A                                            l5849 29E4  
                                          l6569 26F6                                            l4993 3134  
                                          l4985 30F8                                            l6841 2310  
                                          l6833 22AA                                            l6825 225C  
                                          l6761 130E                                            l6753 129C  
                                          l6745 11D4                                            l6737 119E  
                                          l6729 1148                                            l6817 1132  
                                          l6809 10F4                                            l6497 297A  
                                          l6489 2922                                            l6673 1C00  
                                          l6681 1C42                                            l6665 1BC2  
                                          l6593 0CE0                                            l6585 0C72  
                                          l6577 38B4                                            l6657 30D2  
                                          l6649 3084                                            l6905 16C0  
                                          l6913 16EA                                            l5859 34C2  
                                          l5779 1B88                                            l5795 1D8E  
                                          l5787 1D3C                                            l5699 2AD4  
                                          l5891 0792                                            l5883 0764  
                                          l5875 071C                                            l5971 1860  
                                          l5963 1818                                            l5955 17CE  
                                          l5939 1722                                            l4995 3148  
                                          l4987 30FC                                            l6843 231C  
                                          l6835 22C2                                            l6827 2288  
                                          l6819 222A                                            l6763 1322  
                                          l6755 12CC                                            l6747 124E  
                                          l6739 11A2                                            l6771 0F18  
                                          l6691 1C6A                                            l6683 1C54  
                                          l6675 1C22                                            l6667 1BD0  
                                          l6595 0D00                                            l6587 0C80  
                                          l6579 38B8                                            l6851 1566  
                                          l6931 233E                                            l5797 1DAC  
                                          l5789 1D5C                                            l5893 079C  
                                          l5885 0776                                            l5877 072C  
                                          l5869 06B4                                            l5957 17DA  
                                          l5949 1798                                            l5981 13B6  
                                          l5973 134E                                            l4997 314C  
                                          l4989 3110                                            l6845 2320  
                                          l6837 22DA                                            l6829 228C  
                                          l6765 1334                                            l6757 12E8  
                                          l6749 1252                                            l6781 0F8C  
                                          l6773 0F3C                                            l6685 1C58  
                                          l6693 1C8C                                            l6677 1C28  
                                          l6597 0D14                                            l6589 0CAE  
                                          l6853 158C                                            l6861 1596  
                                          l6941 234A                                            l6933 2340  
                                          l6925 2336                                            l5799 1DB4  
                                          l5895 07A2                                            l5887 0784  
                                          l5879 072E                                            l5967 1848  
                                          l5959 1810                                            l5991 144A  
                                          l5983 13BE                                            l5975 135E  
                                          l6839 22F6                                            l6767 1338  
                                          l6759 1302                                            l6791 0FE0  
                                          l6783 0F90                                            l6775 0F40  
                                          l6695 1CA8                                            l6687 1C5C  
                                          l6679 1C3C                                            l6599 0D28  
                                          l6863 15BC                                            l6871 15C4  
                                          l6855 1590                                            l6847 1550  
                                          l6951 236A                                            l6943 234E  
                                          l6935 2342                                            l6927 233A  
                                          l5897 0824                                            l5889 078A  
                                          l5969 185C                                            l5993 1450  
                                          l5985 13C8                                            l5977 1360  
                                          l6793 1004                                            l6785 0FB4  
                                          l6777 0F64                                            l6769 0EFE  
                                          l6697 1CC8                                            l6689 1C62  
                                          l6873 15EA                                            l6849 1550  
                                          l6961 2394                                            l6953 237C  
                                          l6945 2352                                            l6937 2344  
                                          l6929 233C                                            l5899 082A  
                                          l5987 13CE                                            l5995 14B4  
                                          l5979 137A                                            l6795 1014  
                                          l6787 0FB8                                            l6779 0F68  
                                          l6699 1CEC                                            l6891 165E  
                                          l6875 15FC                                            l6955 2384  
                                          l6947 2356                                            l6939 2346  
                                          l5997 14C6                                            l5989 1444  
                                          l6797 1046                                            l6789 0FDC  
                                          l6877 15FC                                            l6885 1626  
                                          l6957 2388                                            l6949 2356  
                                          l5999 14E4                                            l6799 1052  
                                          l6887 164C                                            l6983 241E  
                                          l6967 23AC                                            l6959 238C  
                                          l6975 23CA                                            l6889 165E  
                                          l6977 23F8                                            l6899 1688  
                                          l6979 241A                                            STR_1 FF45  
                                          STR_2 FE37                                            STR_3 FF44  
                                          STR_4 FFB2                                            STR_5 FEEB  
                                          STR_6 FC48                                            STR_7 FDFF  
                                          STR_8 FD88                                            STR_9 FF03  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            u4100 3ACC  
                                          u4101 3AC6                                            u4110 3ACE  
                                          u4120 3478                                            u4121 3474  
                                          u4130 34AA                                            u4131 34A6  
                                          u5100 2DA8                                            u4300 27D8  
                                          u5101 2DA4                                            u4301 27D4  
                                          u5110 2DDE                                            u4150 3640  
                                          u5111 2DDA                                            u4151 363C  
                                          u5120 3542                                            u5200 2B00  
                                          u6000 0C06                                            u5201 2AFC  
                                          u6001 0C02                                            u5210 37F0  
                                          u5050 33C4                                            u5130 3552  
                                          u6010 0C14                                            u5211 37EC  
                                          u5051 33C0                                            u5131 354E  
                                          u6011 0C10                                            u5300 3968  
                                          u6020 18C2                                            u5060 33D4  
                                          u5140 3710                                            u5220 392E  
                                          u6100 0220                                            u6021 18BE  
                                          u5061 33D0                                            u5141 370C  
                                          u5221 3928                                            u6101 021C  
                                          u6030 18FA                                            u5310 1A34  
                                          u5070 3402                                            u5230 3930  
                                          u5150 38F6                                            u6110 022E  
                                          u4270 275C                                            u6031 18F6  
                                          u5311 1A30                                            u5071 33FE  
                                          u5127 3538                                            u5151 38F0  
                                          u6111 022A                                            u4271 2758  
                                          u6040 1916                                            u5320 1A66  
                                          u5400 1DAC                                            u5080 2D6E  
                                          u5240 3886                                            u5160 38F8  
                                          u6200 04A0                                            u6120 0256  
                                          u4280 278C                                            u6041 1912  
                                          u5321 1A62                                            u5401 1DA8  
                                          u5081 2D6A                                            u5241 3880  
                                          u6201 049C                                            u6121 0252  
                                          u4281 2788                                            u6050 19D2  
                                          u5410 1DD6                                            u5090 2D80  
                                          u5170 2A7A                                            u5250 3888  
                                          u6210 0548                                            u6130 029A  
                                          u4370 3110                                            u4290 27AE  
                                          u6051 19CC                                            u5331 1A90  
                                          u5411 1DD2                                            u5091 2D7C  
                                          u5171 2A76                                            u6211 0544  
                                          u6131 0296                                            u4371 310C  
                                          u4291 27AA                                            u3900 3AFE  
                                          u6060 19D4                                            u5340 1AB4  
                                          u5420 1E04                                            u5180 2A9C  
                                          u5500 2A12                                            u5260 3382  
                                          u6220 056E                                            u6140 0318  
                                          u4380 3148                                            u6300 3A86  
                                          _PMD0 000EE1                                            u5341 1AB0  
                                          u5421 1E00                                            u5181 2A98  
                                          u5501 2A0E                                            u5261 337C  
                                          u6221 056A                                            u6141 0312  
                                          u4381 3144                                            _PMD1 000EE2  
                                          u3910 3B12                                            u5510 34D6  
                                          u6070 19EA                                            u5350 1ADE  
                                          u5430 1E4C                                            u5190 2AF2  
                                          u5270 3384                                            u6230 0632  
                                          u6150 031A                                            u4390 316A  
                                          u6310 3420                                            _PMD2 000EE3  
                                          u3911 3B0C                                            u5511 34D2  
                                          u6071 19E6                                            u5351 1ADA  
                                          u5431 1E48                                            u5191 2AEE  
                                          u6231 062E                                            u4391 3166  
                                          u6311 341C                                            u7007 0E06  
                                          _PMD3 000EE4                                            u5520 3504  
                                          u6080 19FC                                            u5360 1B1E  
                                          u5600 08AE                                            u5280 339A  
                                          u6160 0332                                            u6320 3452  
                                          u6240 3282                                            u6400 2038  
                                          _PMD4 000EE5                                            u5521 3500  
                                          u6081 19F8                                            u5361 1B1A  
                                          u5601 08AA                                            u5441 2536  
                                          u5281 3396                                            u6161 032E  
                                          u6321 344E                                            u6401 2034  
                                          u7017 0E5C                                            _PMD5 000EE6  
                                          u4650 35AA                                            u5290 3966  
                                          u5370 1B68                                            u5610 08CC  
                                          u5530 06E4                                            u5450 255A  
                                          u6170 0358                                            u6090 0150  
                                          u3930 3AE4                                            u6330 2814  
                                          u6250 3294                                            u6410 2070  
                                          u4651 35A6                                            u5291 3960  
                                          u5371 1B64                                            u5611 08C8  
                                          u5531 06DE                                            u5451 2556  
                                          u6171 0354                                            u6091 014C  
                                          u3931 3ADE                                            u6331 2810  
                                          u6251 3290                                            u6411 206C  
                                          u7027 0EB2                                            u3916 3B14  
                                          u5380 1D3C                                            u5620 08E6  
                                          u5540 06E6                                            u5700 174C  
                                          u5460 2584                                            u6180 037E  
                                          u6260 322E                                            u3940 3AE6  
                                          u6500 2922                                            u6340 2836  
                                          u6420 20AA                                            u5381 1D38  
                                          u5621 08E2                                            u5701 1748  
                                          u5461 2580                                            u6181 037A  
                                          u6261 322A                                            u6501 291E  
                                          u7037 2146                                            u6341 2832  
                                          u6421 20A6                                            u5390 1D6E  
                                          u5630 0900                                            u5550 06FC  
                                          u5710 176A                                            u5470 25C4  
                                          u6190 0424                                            u3950 3B26  
                                          u6510 2932                                            u6270 36C0  
                                          u6350 287E                                            u6430 20CC  
                                          u5391 1D6A                                            u5631 08FC  
                                          u5551 06F8                                            u5711 1766  
                                          u5471 25C0                                            u6191 0420  
                                          u3951 3B20                                            u6511 292E  
                                          u7047 2198                                            u6271 36BC  
                                          u6351 287A                                            u6247 3278  
                                          u6431 20C8                                            u5640 090E  
                                          u5560 072C                                            u5720 1794  
                                          u5480 29BA                                            u5800 14C6  
                                          u6600 264A                                            u3960 3308  
                                          u6520 2968                                            u6440 2164  
                                          u6360 2894                                            u5641 090A  
                                          u5561 0728                                            u5721 1790  
                                          u5481 29B6                                            u5801 14C2  
                                          u6601 2646                                            u3961 3304  
                                          u6521 2964                                            u6441 2160  
                                          u6361 2890                                            u3890 3AFC  
                                          u5650 0920                                            u5570 0748  
                                          u5730 17CE                                            u5490 29E4  
                                          u5810 14E4                                            u6610 266C  
                                          u3970 3318                                            u6530 298C  
                                          u6450 21B6                                            u6290 3A84  
                                          u6370 28C8                                            u3891 3AF6  
                                          u5651 091C                                            u5571 0744  
                                          u5731 17CA                                            u5491 29E0  
                                          u5811 14E0                                            u6611 2668  
                                          u3971 3314                                            u6531 2988  
                                          u6451 21B2                                            u6291 3A7E  
                                          u6371 28C4                                            u4780 35EC  
                                          u5660 092E                                            u5580 0776  
                                          u5740 17FC                                            u5820 14FE  
                                          u5900 0A9A                                            u6620 26B0  
                                          u3980 3346                                            u3956 3B28  
                                          u6540 1EDA                                            u6460 2218  
                                          u6380 2006                                            u6700 0D54  
                                          u4781 35E8                                            u5661 092A  
                                          u5581 0772                                            u5821 14FA  
                                          u6621 26AC                                            u3981 3342  
                                          u6541 1ED6                                            u6461 2214  
                                          u6285 36CA                                            u6381 2002  
                                          u6701 0D50                                            u5670 0946  
                                          u5590 0784                                            u5750 1836  
                                          u5830 1518                                            u5910 0AB0  
                                          u6630 26D4                                            u6550 1F0A  
                                          u6286 36CC                                            u6470 32F2  
                                          u6390 201A                                            u6710 0E3C  
                                          u5671 0942                                            u5591 0780  
                                          u5751 1832                                            u5831 1514  
                                          u5911 0AAC                                            u6631 26D0  
                                          u6551 1F06                                            u6471 32EE  
                                          u6391 2016                                            u6711 0E38  
                                          u5760 1844                                            u5840 1526  
                                          u5920 0AE4                                            u6640 26E8  
                                          u6560 1F44                                            u6800 1CC8  
                                          u6720 0EE8                                            u5761 1840  
                                          u5681 16F8                                            u5841 1522  
                                          u5921 0ADE                                            u6641 26E4  
                                          u6561 1F40                                            u6801 1CC4  
                                          u6481 2CB4                                            u6721 0EE4  
                                          u5770 187E                                            u5690 171A  
                                          u5930 0AE6                                            u5850 09A4  
                                          u6650 270A                                            u6490 31D2  
                                          u6570 1F6E                                            u6810 1CD8  
                                          u6730 30BA                                            u5771 187A  
                                          u5747 17F2                                            u5691 1716  
                                          u5851 09A0                                            u6651 2706  
                                          u6491 31CE                                            u6571 1F6A  
                                          u6811 1CD2                                            u6731 30B6  
                                          u5780 135E                                            u5940 0AFC  
                                          u5860 09C0                                            u6580 1FB6  
                                          u6820 1D00                                            u6660 38A0  
                                          u6740 30D2                                            u6900 15BC  
                                          u5781 135A                                            u5941 0AF8  
                                          u5861 09BC                                            u6581 1FB2  
                                          u6821 1CFC                                            u6661 389C  
                                          u6741 30CE                                            u6901 15B8  
                                          u5790 137A                                            u5950 0B64  
                                          u5870 09EA                                            u6590 1FE0  
                                          u6750 1BC2                                            u6830 2EA0  
                                          u6670 0D00                                            u6910 15EA  
                                          u5791 1376                                            u5871 09E6  
                                          u6591 1FDC                                            u6751 1BBE  
                                          u6831 2E9C                                            u6671 0CFC  
                                          u6911 15E6                                            u5960 0BA6  
                                          u5880 0A4E                                            u6816 1CDA  
                                          u6760 1BE4                                            u6840 2EFA  
                                          u6680 0D28                                            u5961 0BA2  
                                          u5881 0A4A                                            u6761 1BE0  
                                          u6841 2EF6                                            u6681 0D24  
                                          u6921 15F4                                            u5970 0BC4  
                                          u5890 0A98                                            u6850 129C  
                                          u6770 1C3C                                            u6690 0D42  
                                          u6930 164C                                            u5971 0BC0  
                                          u5955 0B52                                            u5891 0A92  
                                          u6851 1298                                            u6771 1C38  
                                          u6691 0D3E                                            u6931 1648  
                                          u5980 0BDE                                            u6860 1334  
                                          u6780 1C54                                            u5981 0BDA  
                                          u6861 1330                                            u6781 1C50  
                                          u6941 1656                                            u5990 0BF8  
                                          u6870 10A8                                            u6790 1C7A  
                                          u6950 16AE                                            u5991 0BF4  
                                          u6871 10A4                                            u6791 1C74  
                                          u6951 16AA                                            u6880 112A  
                                          u6881 1126                                            u6961 16B8  
                                          u6890 158C                                            u6970 236A  
                                          u6891 1588                                            u6971 2366  
                                          u6796 1C7C                                            u6980 237C  
                                          u6981 2378                                            u6990 241A  
                                          u6991 2416                             ValidateCmd@ConfName 04A4  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 32F4                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 33B0                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 01AF                                            _atoi 1888  
                                          _main 2336                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _prec 00A5  
                                 ?_EUSART2_Read 0001                                            _nout 01AC  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 16EE                                            btemp 005B  
                                          _utoa 134E                                            _xtoa 0994  
                        __size_of_Initalisation 0002                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 368A                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                     __size_of_DATAEE_WriteByte 0044                              SerIni@readDataEven 000E  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 3AB8  
                         _eusart1RxStatusBuffer 0300                                 __end_of___aodiv 1BAA  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1E8E  
                                         STR_10 FF41                                           STR_11 FD00  
                                         STR_20 FE6E                                           STR_12 FE1B  
                                         STR_13 FE1B                                           STR_21 FB9E  
                                         STR_22 FF5A                                           STR_14 FEA2  
                                         STR_30 FD24                                           STR_31 FF41  
                                         STR_15 FF41                                           STR_23 FF1A  
                                         STR_32 FFA2                                           STR_16 FED3  
                                         STR_40 FE53                                           STR_24 FCB2  
                                         STR_25 FFD2                                           STR_17 FFC2  
                                         STR_33 FF91                                           STR_41 FF80  
                                 __CFG_WDTE$OFF 000000                                           STR_50 FFFD  
                                         STR_26 FFDE                                           STR_42 FE89  
                                         STR_18 FD67                                           STR_34 FBDB  
                                         STR_51 FFE7                                           STR_35 FF6D  
                                         STR_19 FF30                                           STR_43 FEBB  
                                         STR_27 FDE3                                           STR_52 FFE7  
                                         STR_44 FDA8                                           STR_28 FC7E  
                                         STR_36 FB5B                                           STR_45 FF44  
                                         STR_53 FFF4                                           STR_37 FCDC  
                                         STR_29 FC12                                           STR_38 FF44  
                                         STR_54 FFF4                                           STR_46 FDC6  
                                         STR_55 FFF9                                           STR_47 FFEE  
                                         STR_39 FD46                                           STR_48 FFEE  
                                         STR_56 FFF9                                           STR_49 FFFD  
                              ?_ClearModbusData 0001                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 2620  
                                         ?_xtoa 0022                                 __end_of___lomod 2A6C  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 3BBC  
                                         i2l333 3684                                           i2l350 3BC6  
                                         i2l343 2BEC                                           i2l159 0112  
                                         i2l336 3688                                           i2l353 3B9E  
                                         i2l347 3998                                           i2l356 3BB0  
                                         i2l480 3754                                           i2l491 39C4  
                                         i2l477 3750                                           i2l494 3BC8  
                                         i2l487 2CAC                                           i2l497 3BB6  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 00B0  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 3712                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 3A88                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                                           _fputc 2D5C  
                               __end_of_isalpha 388E                                           _fputs 36CE  
                               __end_of_isdigit 396E                        SaveCardDat@dataeeAddrWrk 009D  
                               __end_of_memmove 28CA                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00A3  
                                         _putch 3B8E                        __size_of_ClearEEAddRange 005E  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 38FE                                 __end_of_isspace 3510  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 3936                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 35F8  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00AD                                   ??_ModbusError 008F  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 33B0                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 3BCA  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 3BC8  
                   __size_of_EUSART2_is_tx_done 0016                                   ??_SaveCardDat 0097  
                                checkCRC@crcLow 0092           __end_of_EUSART2_SetTxInterruptHandler 3B34  
        __size_of_EUSART2_SetTxInterruptHandler 000A                                    _toupper$2136 0011  
                 _EUSART2_SetTxInterruptHandler 3B2A                                 __initialization 243E  
                                  __end_of_atoi 1A22                      __end_of_EUSART1_Initialize 3084  
                                  __end_of_main 243E                                    __end_of_dtoa 0994  
                     __size_of_InitialiseString 00AE                                    __end_of_stoa 1888  
                                  __end_of_utoa 1550                                    __end_of_xtoa 0C6A  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 1D2A  
                                        ??_atoi 000E                                          ??_main 00A1  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 0EFE                                      _ModbusFC03 1148  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 38C6  
                                 _Initalisation 3BC4                             SaveCardDat@NumBytes 0095  
           __end_of_EUSART2_DefaultErrorHandler 3BB2                     _EUSART2_DefaultErrorHandler 3BAC  
                                    _ModbusData 0200                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                            SaveCardDat@MBAddress 0091  
                    __end_of_EUSART2_Initialize 3008                        _eusart2TxBufferRemaining 00BC  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                     InitialiseString@SerialNum 008B                                ClearEEAddRange@i 0055  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                            __size_of_ReadRX232 0124                                  __CFG_WDTCCS$SC 000000  
                                        i2l5101 3642                                          i2l5111 367E  
                                        i2l5103 3654                                          i2l5121 2B76  
                                        i2l5113 2B2E                                          i2l5105 3666  
                                        i2l5131 2BE8                                          i2l5123 2B86  
                                        i2l5115 2B3E                                          i2l5107 366A  
                                        i2l5141 3746                                          i2l5133 3712  
                                        i2l5125 2B96                                          i2l5117 2B4E  
                                        i2l5109 367A                                          i2l5151 2C1C  
                                        i2l5143 374A                                          i2l5135 3724  
                                        i2l5127 2BAE                                          i2l5119 2B5E  
                                        i2l5161 2C8A                                          i2l5153 2C36  
                                        i2l5145 2BEE                                          i2l5137 3734  
                                        i2l5129 2BCA                                          i2l4611 39AC  
                                        i2l5163 2CA8                                          i2l5155 2C44  
                                        i2l5147 2BFE                                          i2l5139 3736  
                                        i2l4613 39BC                                          i2l5157 2C54  
                                        i2l5149 2C0C                                          i2l4615 39C0  
                                        i2l4607 399A                                          i2l5159 2C6E  
                                        i2l4609 39AA                                          i2l4561 396E  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        i2l4811 3BB8                                          i2l4563 397E  
                                        i2l5451 001A                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          i2l4565 3980  
                                        i2l5461 0080                                          i2l5453 0028  
                                        _INLVLE 000F2A                                          i2l4567 3990  
                                        i2l5463 00AC                                          i2l5455 0038  
                                        i2l4809 3BB2                                          i2l4569 3994  
                                        i2l5465 00BA                                          i2l5457 0046  
                                        i2l5467 00E6                                          i2l5459 0072  
                                        i2l4781 3BAC                                          i2l5469 00F4  
                                        i2l4779 3B98                                          _TABLAT 000FF5  
                                 ??_ValidateCmd 0057                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 006B                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 1FEA  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 0093                                     ModbusFC10@j 0095  
                                   ModbusFC03@i 0091                                          _RXMode 3BA0  
                                        _TXMode 3BA6                                          _RXStat 00AF  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00E2  
                                        _ByteHi 00A7                                          _ByteLo 00BD  
                            _UART1_Write_string 30F8                                  __CFG_XINST$OFF 000000  
                                        _SerIni 210E                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 008B  
                                    _PrintMB400 316C                             __end_of_ModbusError 2336  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 3A14                                  __CFG_STVREN$ON 000000  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           SaveCardDat@readData 009B                             __end_of_SaveCardDat 0EFE  
                                        clear_0 24DC                                          clear_1 24E8  
                                        clear_2 24F4                                          clear_3 2500  
                                        clear_4 250C                                          clear_5 2518  
                                        _rxData 0500                     _EUSART2_FramingErrorHandler 01E9  
                                        _printf 39C6                                          pad@buf 0019  
                                 ReadRX232@temp 0055                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                  ?_Initalisation 0001  
                                        _strcat 39EE                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 3AA0                                          _strcmp 3084  
                                        _strcpy 3238                                          _strlen 3510  
                                 _ExpectedBytes 013D                                          fputc@c 0007  
                                _PMD_Initialize 3A3A                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_memmove 000F                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FB5A  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 3642  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 3238                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0400  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0364  
                               _eusart2RxBuffer 0264                    __size_of_EUSART2_is_rx_ready 0018  
                             _SYSTEM_Initialize 3A56                         __size_of_PrintModRespon 00EC  
                               _eusart2TxBuffer 0284                                      __accesstop 0060  
                       __end_of__initialization 2526                    __size_of_EUSART2_is_tx_ready 0018  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               checkCRC@crcHigh 0090                               ??_ClearEEAddRange 0055  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 39C6                             __end_of_ValidateCmd 16EE  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 3BC2  
                                  __pidataBANK1 2F08                                    __pidataBANK2 3816  
                                  __pidataBANK3 3756                                    __pidataBANK4 3796  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 368A  
                                 __end_of_fputc 2DF2                                   __end_of_fputs 3712  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 3B98  
                             __end_of_ReadRX232 210E                          __end_of_PMD_Initialize 3A56  
                          __end_of_EUSART1_Read 34BE                            __end_of_EUSART2_Read 3466  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 2CAE  
                          ModbusError@ErrorCode 008D                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 3A70                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 00B5                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 00B3                                   _eusart2TxHead 00BA  
                                    __pbssBANK0 00A3                                      __pbssBANK1 0181  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                    __pbssBANK4 0400                                      __pbssBANK5 0500  
                                 _eusart2RxTail 00B8                                   _eusart1TxTail 00B4  
             _EUSART1_TxDefaultInterruptHandler 01ED                                   _eusart2TxTail 00B9  
               ??_EUSART1_SetRxInterruptHandler 0007                             __end_of_PrintModbus 2F08  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                   _ModbusError 222A                                       ?_ModbusRx 0001  
                                       ?_RXMode 0001                                         ?_TXMode 0001  
                         EUSART2_Read@readValue 0005                                       ?_TogDebug 0001  
                                       ?_SerIni 0007                 __end_of_EUSART1_SetErrorHandler 3B8E  
                                   _SaveCardDat 0C6A                                     ?_PrintMB400 0001  
                              _InitialiseString 2CAE                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                 ??_Initalisation 0005  
                                       _MB300xx 03A4                                         _MB301xx 0100  
                                       _MB302xx 013F                                         _MB303xx 0118  
                                       _MB304xx 010E                                         _MB400xx 0464  
                                       _MB305xx 012F                                         _MB306xx 0135  
                                       _MB307xx 0129                                         ?_printf 007D  
                               ?_PMD_Initialize 0001                               _ClearModbusRespon 3560  
                                       ?_strcat 0013                                         ?_strcmp 0005  
                                       ?_strcpy 0009                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 3B84         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 3B7A                                ?_DATAEE_ReadByte 0005  
                         _eusart2RxStatusBuffer 0181                                       ?_checkCRC 0001  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 2BEE                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 1550  
                                       _Command 01CF                                         SerIni@i 000F  
                                       SerIni@j 0011                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00AB  
                           __size_of_ModbusFC10 024A                             __size_of_ModbusFC03 0206  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                      ??_TogDebug 0055  
                                       __Lparam 0000                                 __size_of_SerIni 011C  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 1A22  
                                       ___aomod 1D2A                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 2530  
                                       ___lomod 299C                                       ?_vfprintf 0077  
                     __end_of_ClearModbusRespon 35AC                             _EUSART1_is_rx_ready 3AB8  
                        InitialiseString@F10709 01A1                      __end_of_EUSART1_is_tx_done 3B2A  
                                       __pcinit 243E                 __end_of_EUSART2_SetErrorHandler 3B5C  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 3AD0  
                                       __ptext0 2336                                         __ptext1 1550  
                                       __ptext2 3084                                         __ptext3 388E  
                                       __ptext4 0C6A                                         __ptext5 1FEA  
                                       __ptext6 39EE                                         __ptext7 3238  
                                       __ptext8 27EE                                         __ptext9 3A70  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 0074                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 008B  
                                    ??_checkCRC 008B           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 3BA0     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 3B98                           _OSCILLATOR_Initialize 3AA0  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 3852  
                                       _isdigit 3936                                         _memmove 27EE  
                            _EUSART1_Initialize 3008                                         _islower 38C6  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 34BE  
                                   _PrintModbus 2E80                                         _isupper 38FE  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 004C  
                           __size_of_PrintMB400 0068                                         _toupper 3352  
                          end_of_initialization 2526                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 2620  
                    __end_of_EUSART2_is_tx_done 3B16                            ?_EUSART1_is_tx_ready 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 01E1  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 3B70  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 3B66  
                                  SaveCardDat@i 009F                              _EUSART2_Initialize 2F8A  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                           __size_of_EUSART2_Read 0058  
                           SerIni@dataeeAddrWrk 000B                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                                         strcmp@l 0005  
                                       strcmp@r 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0011  
                                       strlen@a 0007                             _EUSART2_is_rx_ready 3A70  
                                       strcpy@s 000F                                         strlen@s 0005  
                             ValidateCmd@F10731 02CC                               ValidateCmd@F10734 02B8  
                             ValidateCmd@F10737 02A4                             _EUSART2_is_tx_ready 3AE8  
                      ValidateCmd@ConfName_1443 04CC                        ValidateCmd@ConfName_1439 04B8  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
                               _ClearEEAddRange 3296                          __end_of_PrintModRespon 270C  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                      __end_of_DATAEE_WriteByte 36CE                            ??_EUSART2_Initialize 0007  
                          ?_EUSART2_is_rx_ready 0001                           ??_EUSART1_is_tx_ready 0005  
                                 ??_generateCRC 0008                            ?_EUSART2_is_tx_ready 0001  
                                  _EUSART1_Read 3466                                    _EUSART2_Read 340E  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 3BA6  
                               SerIni@SerialNum 0007                                  __end_of_TXMode 3BAC  
                        UART1_Write_string@data 0006                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 399A                                  __end_of_SerIni 222A  
                             SerIni@readDataOdd 000D                    __end_of_INTERRUPT_Initialize 3BC2  
                    __size_of_ClearModbusRespon 004C                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 0068                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 0060                                  __end_of___wmul 3A3A  
                        ?_OSCILLATOR_Initialize 0001                                    ??_ModbusFC10 008D  
                                  ??_ModbusFC03 008D                                  __end_of_printf 39EE  
                                __end_of_strcat 3A14                                  __end_of_strcmp 30F8  
                                __end_of_strcpy 3296                                       _ReadRX232 1FEA  
                                __end_of_strlen 3560                             start_initialization 243E  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 3816  
                                   __end_of_pad 2B2E                        __end_of_InitialiseString 2D5C  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                               ?_PrintModRespon 0001                                     putch@txData 0006  
                         ??_EUSART2_is_rx_ready 0005                           __end_of_EUSART1_Write 3352  
                   __size_of_UART1_Write_string 0074                           __end_of_EUSART2_Write 340E  
                         ??_EUSART2_is_tx_ready 0005                          fp__EUSART1_Receive_ISR 0000  
                                  ?_ModbusError 008D                __size_of_EUSART2_SetErrorHandler 000A  
                           DATAEE_ReadByte@bAdd 0005                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 3B48  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 3B3E  
                            __end_of_ModbusFC10 1148                              __end_of_ModbusFC03 134E  
                                  ?_SaveCardDat 008F                                        ??_SerIni 0009  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                              _SaveCardDat$2426 0099                               __size_of_ModbusRx 0180  
                                   vfprintf@fmt 0079                             __end_of_generateCRC 27EE  
                                  ??_PrintMB400 0055                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                               __size_of_TogDebug 0038  
                         _EUSART1_RxDataHandler 399A                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00BD                                     __pdataBANK1 0100  
                                   __pdataBANK2 02A4                                     __pdataBANK3 03A4  
                                   __pdataBANK4 0464                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00B2                         __end_of_ClearEEAddRange 32F4  
                                _eusart2RxCount 00B7                                      ?_ReadRX232 008B  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 01EB  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 0060  
                                 __pcstackBANK4 04A4                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 015C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 28CA                             EUSART2_Write@txData 0005  
                            __end_of_PrintMB400 31D4                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                                  ?_ValidateCmd 0001                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$2022 0014  
                                     _atoi$2023 0018                                       _atoi$2024 0016  
                                     __pnvBANK0 00BB                                       __pnvBANK1 01DF  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 2DF2  
                                     _dtoa$1518 0034                                       __pintcode 0008  
                                 __pmediumconst FB5A                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 01F1                    ??_INTERRUPT_InterruptManager 0001  
                         __end_of_Initalisation 3BC6                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0098  
                                     checkCRC@j 0094                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 3BB8  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3BB2  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01DF  
                               SaveCardDat@Conf 009C                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008F                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 299C                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 3B84                              _EUSART1_is_tx_done 3B16  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 3BBE  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 270C  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 013B  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u500_40 00F4  
                                      i2u500_41 00F0                                        i2u501_48 00FA  
                                      _MBResCnt 00A9                                        i2u501_49 010E  
                                      i2u450_40 367A                                        i2u450_41 3676  
                                      i2u451_40 2B4E                                        i2u451_41 2B4A  
                                      i2u461_40 2C44                                        i2u460_48 2C22  
                                      i2u453_40 2B86                                        i2u452_48 2B64  
                                      i2u461_41 2C40                                        i2u460_49 2C36  
                                      i2u453_41 2B82                                        i2u452_49 2B76  
                                      _PIR3bits 000ECD                                        i2u463_40 2C8A  
                                      i2u462_48 2C5A                                        i2u455_40 2BCA  
                                      i2u454_48 2B9C                                        i2u463_41 2C86  
                                      i2u462_49 2C6E                                        i2u455_41 2BC6  
                                      i2u454_49 2BAE                                        i2u392_40 3990  
                                      i2u392_41 398C                                        i2u464_48 2C90  
                                      i2u457_40 3724                                        i2u456_48 2BD0  
                                      i2u449_40 3654                                        i2u464_49 2CA4  
                                      i2u457_41 3720                                        i2u456_49 2BE4  
                                      i2u449_41 3650                                        i2u458_40 3746  
                                      i2u490_40 0038                                        i2u458_41 3742  
                                      i2u490_41 0034                                        i2u459_40 2C0C  
                                      i2u491_40 0046                                        i2u459_41 2C08  
                                      i2u491_41 0042                                        i2u493_40 0072  
                                      i2u492_48 004C                                        i2u493_41 006E  
                                      i2u492_49 0060                                        _PIR7bits 000ED1  
                                      i2u494_40 0080                                        i2u494_41 007C  
                                      i2u399_40 39BC                                        i2u399_41 39B8  
                                      i2u496_40 00AC                                        i2u495_48 0086  
                                      i2u496_41 00A8                                        i2u495_49 009A  
                                      i2u497_40 00BA                                        i2u489_40 0028  
                                      i2u497_41 00B6                                        i2u489_41 0024  
                                      i2u499_40 00E6                                        i2u498_48 00C0  
                                      i2u499_41 00E2                                        i2u498_49 00D4  
                                      _MBRespon 0141                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 3B00                                       _vfpfcnvrt 012A  
                                     _xtoa$1547 0035                                       _xtoa$1548 0037  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 008B                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0093  
                                   checkCRC@crc 0096                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2049 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 2452                                       copy_data1 2472  
                                     copy_data2 2492                                       copy_data3 24B2  
                            ModbusFC10@TempData 0091                           ?_INTERRUPT_Initialize 0001  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 3B52  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01E7  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 1BAA                              generateCRC@MessCnt 0005  
         __end_of_EUSART1_SetTxInterruptHandler 3B66          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 3B5C                                        __Hrparam 0000  
                                      _TogDebug 388E           __end_of_EUSART2_SetRxInterruptHandler 3B3E  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 3B34  
                          __size_of_ModbusError 010C                                      vfprintf@ap 007B  
                                      __Lrparam 0000                                      vfprintf@fp 0077  
                            __CFG_BOREN$SBORDIS 000000                            __size_of_SaveCardDat 0294  
                       ??_OSCILLATOR_Initialize 0005                                       memmove@d1 0009  
                                     memmove@s1 000B                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                               ReadRX232@F10713 0139                       ??_EUSART1_SetErrorHandler 0007  
                                      _checkCRC 1E8E             __end_of_EUSART1_DefaultErrorHandler 3BBE  
                   _EUSART1_DefaultErrorHandler 3BB8                                ??_PrintModRespon 0055  
                   __end_of_EUSART1_is_rx_ready 3AD0                                      strcat@dest 0013  
                          _EUSART2_ErrorHandler 01E5                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 3AE8  
                    __size_of_AddRxBuffToModBus 00D2                                __size_of_memmove 00DC  
                               _ClearModbusData 35AC                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 340E  
                                      __ptext11 3296                                        __ptext20 3AA0  
                                      __ptext12 368A                                        __ptext21 3BBE  
                                      __ptext13 2CAE                                        __ptext30 3B66  
                                      __ptext22 2F8A                                        __ptext14 210E  
                                      __ptext31 3B70                                        __ptext23 3B2A  
                                      __ptext15 3A88                                        __ptext40 35F8  
                                      __ptext32 3B7A                                        __ptext24 3B34  
                                      __ptext16 3BC4                                        __ptext41 28CA  
                                      __ptext33 3B84                                        __ptext25 3B3E  
                                      __ptext17 3A56                                        __ptext50 3B16  
                                      __ptext42 0EFE                                        __ptext34 2E80  
                                      __ptext26 3B48                                        __ptext18 3A3A  
                                      __ptext51 32F4                                        __ptext43 316C  
                                      __ptext35 1BAA                                        __ptext27 3B52  
                                      __ptext19 2DF2                                        __ptext60 3852  
                                      __ptext52 2620                                        __ptext44 1148  
                                      __ptext36 1E8E                                        __ptext28 3008  
                                      __ptext61 134E                                        __ptext53 39C6  
                                      __ptext45 222A                                        __ptext37 3BA0  
                                      __ptext29 3B5C                                        __ptext70 3B8E  
                                      __ptext62 299C                                        __ptext54 31D4  
                                      __ptext46 270C                                        __ptext38 3AB8  
                                      __ptext71 33B0                                        __ptext63 2530  
                                      __ptext55 012A                                        __ptext47 30F8  
                                      __ptext39 3466                                        __ptext80 3B00  
                                      __ptext72 37D6                                        __ptext64 16EE  
                                      __ptext56 0994                                        __ptext48 3BA6  
                                      __ptext81 3560                                        __ptext73 1D2A  
                                      __ptext65 06B4                                        __ptext57 3352  
                                      __ptext49 3AD0                                        __ptext90 3712  
                                      __ptext82 35AC                                        __ptext74 1A22  
                                      __ptext66 2A6C                                        __ptext58 38C6  
                                      __ptext91 2BEE                                        __ptext75 1888  
                                      __ptext67 3510                                        __ptext59 38FE  
                                      __ptext92 3BB2                                        __ptext84 3642  
                                      __ptext76 34BE                                        __ptext68 36CE  
                                      __ptext93 3BC8                                        __ptext85 2B2E  
                                      __ptext77 3936                                        __ptext69 2D5C  
                                      __ptext94 3BB8                                        __ptext86 3B98  
                                      __ptext78 3A14                                        __ptext95 399A  
                                      __ptext87 3BC6                                        __ptext79 3AE8  
                                      __ptext96 0000                                        __ptext88 3BAC  
                                      __ptext89 396E                                __size_of_isupper 0038  
                             ?_InitialiseString 0001                     DATAEE_WriteByte@GIEBitValue 0008  
                                    strcpy@dest 0009                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                         ClearEEAddRange@NumBytes 008D  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 0108                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 3BC8     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 3BC6                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                               ??_DATAEE_ReadByte 0007  
                          __size_of_ValidateCmd 019E                            __CFG_WDTCWS$WDTCWS_7 000000  
                       ClearEEAddRange@StartAdd 008B                                    PrintModbus@i 008B  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 0122                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 008B                                        _rxStatus 01AE  
                                      int$flags 005B                                        _vfprintf 31D4  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 396E                                       printf@fmt 007D  
                   _EUSART1_FramingErrorHandler 01E3                             _EUSART1_Receive_ISR 2BEE  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1562 006D  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 3A88  
                                   _NVMCON1bits 000F81                     __end_of_EUSART2_is_tx_ready 3B00  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 316C  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                                      memmove@d 0011                                        memmove@n 000D  
                                      memmove@s 0013                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 0088                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                                       strcat@src 0015  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 3B7A  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 3B70  
                                     strcpy@src 000B                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 3756                                        printf@ap 0089  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 005E                              _eusart1RxLastError 00B1  
                        __size_of_EUSART2_Write 005E                             _EUSART2_Receive_ISR 2B2E  
                       __end_of_ClearModbusData 35F8                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 2E80                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00B6  
                                  ?_generateCRC 0005                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 01EF  
                           __end_of_ClearRxBuff 3642  
