

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 02 10:42:22 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.10
    80                           ; Generated 31/07/2019 GMT
    81                           ; 
    82                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F46K40 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  002924                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _data1
   119  002924  11                 	db	17
   120  002925  03                 	db	3
   121  002926  06                 	db	6
   122  002927  AE                 	db	174
   123  002928  41                 	db	65
   124  002929  56                 	db	86
   125  00292A  52                 	db	82
   126  00292B  43                 	db	67
   127  00292C  40                 	db	64
   128  00292D  49                 	db	73
   129  00292E  AD                 	db	173
   130                           
   131                           	psect	nvBANK0
   132  0000C6                     __pnvBANK0:
   133                           	opt callstack 0
   134  0000C6                     _EUSART1_ErrorHandler:
   135                           	opt callstack 0
   136  0000C6                     	ds	2
   137  0000C8                     _EUSART1_OverrunErrorHandler:
   138                           	opt callstack 0
   139  0000C8                     	ds	2
   140  0000CA                     _EUSART1_FramingErrorHandler:
   141                           	opt callstack 0
   142  0000CA                     	ds	2
   143  0000CC                     _EUSART2_ErrorHandler:
   144                           	opt callstack 0
   145  0000CC                     	ds	2
   146  0000CE                     _EUSART2_OverrunErrorHandler:
   147                           	opt callstack 0
   148  0000CE                     	ds	2
   149  0000D0                     _EUSART2_FramingErrorHandler:
   150                           	opt callstack 0
   151  0000D0                     	ds	2
   152  0000D2                     _EUSART1_RxDefaultInterruptHandler:
   153                           	opt callstack 0
   154  0000D2                     	ds	2
   155  0000D4                     _EUSART1_TxDefaultInterruptHandler:
   156                           	opt callstack 0
   157  0000D4                     	ds	2
   158  0000D6                     _EUSART2_RxDefaultInterruptHandler:
   159                           	opt callstack 0
   160  0000D6                     	ds	2
   161  0000D8                     _EUSART2_TxDefaultInterruptHandler:
   162                           	opt callstack 0
   163  0000D8                     	ds	2
   164  0000DA                     _eusart1TxBufferRemaining:
   165                           	opt callstack 0
   166  0000DA                     	ds	1
   167  0000DB                     _eusart2TxBufferRemaining:
   168                           	opt callstack 0
   169  0000DB                     	ds	1
   170  0000                     _RC2REG	set	3737
   171  0000                     _RC2STAbits	set	3741
   172  0000                     _TX2REG	set	3738
   173  0000                     _TX2STAbits	set	3742
   174  0000                     _SP2BRGH	set	3740
   175  0000                     _SP2BRGL	set	3739
   176  0000                     _TX2STA	set	3742
   177  0000                     _RC2STA	set	3741
   178  0000                     _BAUD2CON	set	3743
   179  0000                     _PIR7bits	set	3793
   180  0000                     _PIR3bits	set	3789
   181  0000                     _PIE3bits	set	3781
   182  0000                     _PMD5	set	3814
   183  0000                     _PMD4	set	3813
   184  0000                     _PMD3	set	3812
   185  0000                     _PMD2	set	3811
   186  0000                     _PMD1	set	3810
   187  0000                     _PMD0	set	3809
   188  0000                     _OSCTUNE	set	3805
   189  0000                     _OSCFRQ	set	3806
   190  0000                     _OSCEN	set	3804
   191  0000                     _OSCCON3	set	3802
   192  0000                     _OSCCON1	set	3800
   193  0000                     _RX2PPS	set	3725
   194  0000                     _RC6PPS	set	3837
   195  0000                     _RB6PPS	set	3829
   196  0000                     _RX1PPS	set	3765
   197  0000                     _INLVLE	set	3882
   198  0000                     _INLVLD	set	3874
   199  0000                     _INLVLC	set	3869
   200  0000                     _INLVLB	set	3861
   201  0000                     _INLVLA	set	3853
   202  0000                     _SLRCONE	set	3883
   203  0000                     _SLRCOND	set	3875
   204  0000                     _SLRCONC	set	3870
   205  0000                     _SLRCONB	set	3862
   206  0000                     _SLRCONA	set	3854
   207  0000                     _ODCOND	set	3876
   208  0000                     _ODCONC	set	3871
   209  0000                     _ODCONB	set	3863
   210  0000                     _ODCONA	set	3855
   211  0000                     _ODCONE	set	3884
   212  0000                     _WPUC	set	3872
   213  0000                     _WPUA	set	3856
   214  0000                     _WPUB	set	3864
   215  0000                     _WPUE	set	3885
   216  0000                     _WPUD	set	3877
   217  0000                     _ANSELA	set	3857
   218  0000                     _ANSELE	set	3886
   219  0000                     _ANSELB	set	3865
   220  0000                     _ANSELC	set	3873
   221  0000                     _ANSELD	set	3878
   222  0000                     _LATAbits	set	3971
   223  0000                     _LATDbits	set	3974
   224  0000                     _RC1REG	set	3993
   225  0000                     _RC1STAbits	set	3997
   226  0000                     _TX1REG	set	3994
   227  0000                     _TX1STAbits	set	3998
   228  0000                     _SP1BRGH	set	3996
   229  0000                     _SP1BRGL	set	3995
   230  0000                     _TX1STA	set	3998
   231  0000                     _RC1STA	set	3997
   232  0000                     _BAUD1CON	set	3999
   233  0000                     _NVMDAT	set	3968
   234  0000                     _NVMADRL	set	3966
   235  0000                     _NVMADRH	set	3967
   236  0000                     _NVMCON2	set	3970
   237  0000                     _TABLAT	set	4085
   238  0000                     _TBLPTRL	set	4086
   239  0000                     _TBLPTRH	set	4087
   240  0000                     _TBLPTRU	set	4088
   241  0000                     _NVMCON1bits	set	3969
   242  0000                     _INTCONbits	set	4082
   243  0000                     _TRISD	set	3979
   244  0000                     _TRISC	set	3978
   245  0000                     _TRISB	set	3977
   246  0000                     _TRISA	set	3976
   247  0000                     _TRISE	set	3980
   248  0000                     _LATC	set	3973
   249  0000                     _LATB	set	3972
   250  0000                     _LATA	set	3971
   251  0000                     _LATD	set	3974
   252  0000                     _LATE	set	3975
   253                           
   254                           	psect	smallconst
   255  000F00                     __psmallconst:
   256                           	opt callstack 0
   257  000F00  00                 	db	0
   258  000F01                     STR_1:
   259                           
   260                           ; BSR set to: 0
   261  000F01  0D                 	db	13
   262  000F02  4E                 	db	78	;'N'
   263  000F03  75                 	db	117	;'u'
   264  000F04  6D                 	db	109	;'m'
   265  000F05  20                 	db	32
   266  000F06  42                 	db	66	;'B'
   267  000F07  79                 	db	121	;'y'
   268  000F08  74                 	db	116	;'t'
   269  000F09  65                 	db	101	;'e'
   270  000F0A  73                 	db	115	;'s'
   271  000F0B  20                 	db	32
   272  000F0C  52                 	db	82	;'R'
   273  000F0D  65                 	db	101	;'e'
   274  000F0E  63                 	db	99	;'c'
   275  000F0F  65                 	db	101	;'e'
   276  000F10  69                 	db	105	;'i'
   277  000F11  76                 	db	118	;'v'
   278  000F12  65                 	db	101	;'e'
   279  000F13  64                 	db	100	;'d'
   280  000F14  3A                 	db	58	;':'
   281  000F15  20                 	db	32
   282  000F16  25                 	db	37
   283  000F17  69                 	db	105	;'i'
   284  000F18  0D                 	db	13
   285  000F19  0A                 	db	10
   286  000F1A  00                 	db	0
   287  000F1B                     STR_2:
   288                           
   289                           ; BSR set to: 0
   290  000F1B  4C                 	db	76	;'L'
   291  000F1C  6F                 	db	111	;'o'
   292  000F1D  6F                 	db	111	;'o'
   293  000F1E  70                 	db	112	;'p'
   294  000F1F  3A                 	db	58	;':'
   295  000F20  20                 	db	32
   296  000F21  25                 	db	37
   297  000F22  69                 	db	105	;'i'
   298  000F23  20                 	db	32
   299  000F24  56                 	db	86	;'V'
   300  000F25  61                 	db	97	;'a'
   301  000F26  6C                 	db	108	;'l'
   302  000F27  3A                 	db	58	;':'
   303  000F28  20                 	db	32
   304  000F29  30                 	db	48	;'0'
   305  000F2A  78                 	db	120	;'x'
   306  000F2B  25                 	db	37
   307  000F2C  30                 	db	48	;'0'
   308  000F2D  32                 	db	50	;'2'
   309  000F2E  78                 	db	120	;'x'
   310  000F2F  20                 	db	32
   311  000F30  0D                 	db	13
   312  000F31  0A                 	db	10
   313  000F32  00                 	db	0
   314  000F33                     STR_3:
   315                           
   316                           ; BSR set to: 0
   317  000F33  49                 	db	73	;'I'
   318  000F34  6E                 	db	110	;'n'
   319  000F35  69                 	db	105	;'i'
   320  000F36  74                 	db	116	;'t'
   321  000F37  61                 	db	97	;'a'
   322  000F38  6C                 	db	108	;'l'
   323  000F39  69                 	db	105	;'i'
   324  000F3A  73                 	db	115	;'s'
   325  000F3B  65                 	db	101	;'e'
   326  000F3C  64                 	db	100	;'d'
   327  000F3D  0D                 	db	13
   328  000F3E  0A                 	db	10
   329  000F3F  0A                 	db	10
   330  000F40  00                 	db	0
   331                           
   332                           ; #config settings
   333  000F41  00                 	db	0	; dummy byte at the end
   334  0000                     
   335                           	psect	cinit
   336  0024FC                     __pcinit:
   337                           	opt callstack 0
   338  0024FC                     start_initialization:
   339                           	opt callstack 0
   340  0024FC                     __initialization:
   341                           	opt callstack 0
   342                           
   343                           ; Initialize objects allocated to BANK0 (11 bytes)
   344                           ; load TBLPTR registers with __pidataBANK0
   345  0024FC  0E24               	movlw	low __pidataBANK0
   346  0024FE  6EF6               	movwf	tblptrl,c
   347  002500  0E29               	movlw	high __pidataBANK0
   348  002502  6EF7               	movwf	tblptrh,c
   349  002504  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   350  002506  6EF8               	movwf	tblptru,c
   351  002508  EE00  F0DC         	lfsr	0,__pdataBANK0
   352  00250C  EE10 F00B          	lfsr	1,11
   353  002510                     copy_data0:
   354  002510  0009               	tblrd		*+
   355  002512  CFF5 FFEE          	movff	tablat,postinc0
   356  002516  50E5               	movf	postdec1,w,c
   357  002518  50E1               	movf	fsr1l,w,c
   358  00251A  E1FA               	bnz	copy_data0
   359                           
   360                           ; Clear objects allocated to BANK2 (100 bytes)
   361  00251C  EE02  F000         	lfsr	0,__pbssBANK2
   362  002520  0E64               	movlw	100
   363  002522                     clear_0:
   364  002522  6AEE               	clrf	postinc0,c
   365  002524  06E8               	decf	wreg,f,c
   366  002526  E1FD               	bnz	clear_0
   367                           
   368                           ; Clear objects allocated to BANK1 (232 bytes)
   369  002528  EE01  F000         	lfsr	0,__pbssBANK1
   370  00252C  0EE8               	movlw	232
   371  00252E                     clear_1:
   372  00252E  6AEE               	clrf	postinc0,c
   373  002530  06E8               	decf	wreg,f,c
   374  002532  E1FD               	bnz	clear_1
   375                           
   376                           ; Clear objects allocated to BANK0 (62 bytes)
   377  002534  EE00  F060         	lfsr	0,__pbssBANK0
   378  002538  0E3E               	movlw	62
   379  00253A                     clear_2:
   380  00253A  6AEE               	clrf	postinc0,c
   381  00253C  06E8               	decf	wreg,f,c
   382  00253E  E1FD               	bnz	clear_2
   383                           
   384                           ; Clear objects allocated to COMRAM (4 bytes)
   385  002540  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   386  002542  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   387  002544  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   388  002546  6A57               	clrf	__pbssCOMRAM& (0+255),c
   389  002548                     end_of_initialization:
   390                           	opt callstack 0
   391  002548                     __end_of__initialization:
   392                           	opt callstack 0
   393  002548  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394  00254A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395  00254C  0100               	movlb	0
   396  00254E  EFF2  F00E         	goto	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMRAM
   399  000057                     __pbssCOMRAM:
   400                           	opt callstack 0
   401  000057                     _flags:
   402                           	opt callstack 0
   403  000057                     	ds	2
   404  000059                     _eusart1RxHead:
   405                           	opt callstack 0
   406  000059                     	ds	1
   407  00005A                     _eusart2RxHead:
   408                           	opt callstack 0
   409  00005A                     	ds	1
   410                           
   411                           	psect	bssBANK0
   412  000060                     __pbssBANK0:
   413                           	opt callstack 0
   414  000060                     _eusart1TxBuffer:
   415                           	opt callstack 0
   416  000060                     	ds	16
   417  000070                     _eusart2RxStatusBuffer:
   418                           	opt callstack 0
   419  000070                     	ds	8
   420  000078                     _eusart2RxBuffer:
   421                           	opt callstack 0
   422  000078                     	ds	8
   423  000080                     _eusart2TxBuffer:
   424                           	opt callstack 0
   425  000080                     	ds	8
   426  000088                     _nout:
   427                           	opt callstack 0
   428  000088                     	ds	2
   429  00008A                     _width:
   430                           	opt callstack 0
   431  00008A                     	ds	2
   432  00008C                     _prec:
   433                           	opt callstack 0
   434  00008C                     	ds	2
   435  00008E                     _ByteNum:
   436                           	opt callstack 0
   437  00008E                     	ds	2
   438  000090                     _loop:
   439                           	opt callstack 0
   440  000090                     	ds	2
   441  000092                     _rxStatus:
   442                           	opt callstack 0
   443  000092                     	ds	1
   444  000093                     _Debug:
   445                           	opt callstack 0
   446  000093                     	ds	1
   447  000094                     _eusart1RxLastError:
   448                           	opt callstack 0
   449  000094                     	ds	1
   450  000095                     _eusart1RxCount:
   451                           	opt callstack 0
   452  000095                     	ds	1
   453  000096                     _eusart1RxTail:
   454                           	opt callstack 0
   455  000096                     	ds	1
   456  000097                     _eusart1TxTail:
   457                           	opt callstack 0
   458  000097                     	ds	1
   459  000098                     _eusart1TxHead:
   460                           	opt callstack 0
   461  000098                     	ds	1
   462  000099                     _eusart2RxLastError:
   463                           	opt callstack 0
   464  000099                     	ds	1
   465  00009A                     _eusart2RxCount:
   466                           	opt callstack 0
   467  00009A                     	ds	1
   468  00009B                     _eusart2RxTail:
   469                           	opt callstack 0
   470  00009B                     	ds	1
   471  00009C                     _eusart2TxTail:
   472                           	opt callstack 0
   473  00009C                     	ds	1
   474  00009D                     _eusart2TxHead:
   475                           	opt callstack 0
   476  00009D                     	ds	1
   477                           
   478                           	psect	dataBANK0
   479  0000DC                     __pdataBANK0:
   480                           	opt callstack 0
   481  0000DC                     _data1:
   482                           	opt callstack 0
   483  0000DC                     	ds	11
   484                           
   485                           	psect	bssBANK1
   486  000100                     __pbssBANK1:
   487                           	opt callstack 0
   488  000100                     _eusart1RxStatusBuffer:
   489                           	opt callstack 0
   490  000100                     	ds	100
   491  000164                     _eusart1RxBuffer:
   492                           	opt callstack 0
   493  000164                     	ds	100
   494  0001C8                     _dbuf:
   495                           	opt callstack 0
   496  0001C8                     	ds	32
   497                           
   498                           	psect	bssBANK2
   499  000200                     __pbssBANK2:
   500                           	opt callstack 0
   501  000200                     _rxData:
   502                           	opt callstack 0
   503  000200                     	ds	100
   504                           
   505                           	psect	cstackBANK0
   506  00009E                     __pcstackBANK0:
   507                           	opt callstack 0
   508  00009E                     vfpfcnvrt@ll:
   509                           	opt callstack 0
   510                           
   511                           ; 8 bytes @ 0x0
   512  00009E                     	ds	8
   513  0000A6                     vfpfcnvrt@llu:
   514                           	opt callstack 0
   515                           
   516                           ; 8 bytes @ 0x8
   517  0000A6                     	ds	8
   518  0000AE                     vfpfcnvrt@done:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522  0000AE                     	ds	2
   523  0000B0                     _vfpfcnvrt$1229:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x12
   527  0000B0                     	ds	2
   528  0000B2                     vfpfcnvrt@c:
   529                           	opt callstack 0
   530                           
   531                           ; 1 bytes @ 0x14
   532  0000B2                     	ds	1
   533  0000B3                     ?_vfprintf:
   534                           	opt callstack 0
   535  0000B3                     vfprintf@fp:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x15
   539  0000B3                     	ds	2
   540  0000B5                     vfprintf@fmt:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x17
   544  0000B5                     	ds	2
   545  0000B7                     vfprintf@ap:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x19
   549  0000B7                     	ds	2
   550  0000B9                     ?_printf:
   551                           	opt callstack 0
   552  0000B9                     printf@fmt:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x1B
   556  0000B9                     	ds	8
   557  0000C1                     printf@ap:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x23
   561  0000C1                     	ds	2
   562  0000C3                     PrintRXBuff@i:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x25
   566  0000C3                     	ds	2
   567  0000C5                     main@RXStat:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x27
   571  0000C5                     	ds	1
   572                           
   573                           	psect	cstackCOMRAM
   574  000001                     __pcstackCOMRAM:
   575                           	opt callstack 0
   576  000001                     ??_INTERRUPT_InterruptManager:
   577  000001                     
   578                           ; 1 bytes @ 0x0
   579  000001                     	ds	4
   580  000005                     ??_ClearRxBuff:
   581  000005                     ?_strlen:
   582                           	opt callstack 0
   583  000005                     ?_isupper:
   584                           	opt callstack 0
   585  000005                     ?_isalpha:
   586                           	opt callstack 0
   587  000005                     ?_isdigit:
   588                           	opt callstack 0
   589  000005                     ?_isspace:
   590                           	opt callstack 0
   591  000005                     ?_islower:
   592                           	opt callstack 0
   593  000005                     ?___wmul:
   594                           	opt callstack 0
   595  000005                     ?___aodiv:
   596                           	opt callstack 0
   597  000005                     ?___aomod:
   598                           	opt callstack 0
   599  000005                     EUSART2_Write@txData:
   600                           	opt callstack 0
   601  000005                     EUSART1_Read@readValue:
   602                           	opt callstack 0
   603  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   604                           	opt callstack 0
   605  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   606                           	opt callstack 0
   607  000005                     EUSART2_SetErrorHandler@interruptHandler:
   608                           	opt callstack 0
   609  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   610                           	opt callstack 0
   611  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   612                           	opt callstack 0
   613  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   614                           	opt callstack 0
   615  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   616                           	opt callstack 0
   617  000005                     EUSART1_SetErrorHandler@interruptHandler:
   618                           	opt callstack 0
   619  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   620                           	opt callstack 0
   621  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   622                           	opt callstack 0
   623  000005                     ___wmul@multiplier:
   624                           	opt callstack 0
   625  000005                     isalpha@c:
   626                           	opt callstack 0
   627  000005                     isdigit@c:
   628                           	opt callstack 0
   629  000005                     isspace@c:
   630                           	opt callstack 0
   631  000005                     isupper@c:
   632                           	opt callstack 0
   633  000005                     strlen@s:
   634                           	opt callstack 0
   635  000005                     islower@c:
   636                           	opt callstack 0
   637  000005                     ___aodiv@dividend:
   638                           	opt callstack 0
   639  000005                     ___aomod@dividend:
   640                           	opt callstack 0
   641                           
   642                           ; 8 bytes @ 0x4
   643  000005                     	ds	1
   644  000006                     putch@txData:
   645                           	opt callstack 0
   646  000006                     ClearRxBuff@i:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x5
   650  000006                     	ds	1
   651  000007                     ??_isupper:
   652  000007                     ??_isalpha:
   653  000007                     ??_isdigit:
   654  000007                     ??_isspace:
   655  000007                     ??_islower:
   656  000007                     ___wmul@multiplicand:
   657                           	opt callstack 0
   658  000007                     fputc@c:
   659                           	opt callstack 0
   660  000007                     strlen@a:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x6
   664  000007                     	ds	2
   665  000009                     ___wmul@product:
   666                           	opt callstack 0
   667  000009                     fputc@fp:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x8
   671  000009                     	ds	2
   672  00000B                     ??_fputc:
   673  00000B                     ?_toupper:
   674                           	opt callstack 0
   675  00000B                     _isspace$1714:
   676                           	opt callstack 0
   677  00000B                     toupper@c:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0xA
   681  00000B                     	ds	1
   682  00000C                     ?_atoi:
   683                           	opt callstack 0
   684  00000C                     atoi@s:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0xB
   688  00000C                     	ds	1
   689  00000D                     ??_toupper:
   690  00000D                     ___aodiv@divisor:
   691                           	opt callstack 0
   692  00000D                     ___aomod@divisor:
   693                           	opt callstack 0
   694                           
   695                           ; 8 bytes @ 0xC
   696  00000D                     	ds	1
   697  00000E                     ??_atoi:
   698                           
   699                           ; 1 bytes @ 0xD
   700  00000E                     	ds	2
   701  000010                     fputs@s:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0xF
   705  000010                     	ds	1
   706  000011                     _toupper$1779:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x10
   710  000011                     	ds	1
   711  000012                     atoi@neg:
   712                           	opt callstack 0
   713  000012                     fputs@fp:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x11
   717  000012                     	ds	2
   718  000014                     fputs@c:
   719                           	opt callstack 0
   720  000014                     _atoi$1687:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x13
   724  000014                     	ds	1
   725  000015                     ___aodiv@counter:
   726                           	opt callstack 0
   727  000015                     ___aomod@counter:
   728                           	opt callstack 0
   729  000015                     fputs@i:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x14
   733  000015                     	ds	1
   734  000016                     ___aodiv@sign:
   735                           	opt callstack 0
   736  000016                     ___aomod@sign:
   737                           	opt callstack 0
   738  000016                     _atoi$1689:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x15
   742  000016                     	ds	1
   743  000017                     ?_abs:
   744                           	opt callstack 0
   745  000017                     ?_pad:
   746                           	opt callstack 0
   747  000017                     pad@fp:
   748                           	opt callstack 0
   749  000017                     abs@a:
   750                           	opt callstack 0
   751  000017                     ___aodiv@quotient:
   752                           	opt callstack 0
   753                           
   754                           ; 8 bytes @ 0x16
   755  000017                     	ds	1
   756  000018                     _atoi$1688:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0x17
   760  000018                     	ds	1
   761  000019                     ??_abs:
   762  000019                     pad@buf:
   763                           	opt callstack 0
   764  000019                     atoi@n:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x18
   768  000019                     	ds	2
   769  00001B                     pad@p:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x1A
   773  00001B                     	ds	2
   774  00001D                     ??_pad:
   775                           
   776                           ; 1 bytes @ 0x1C
   777  00001D                     	ds	1
   778  00001E                     pad@i:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x1D
   782  00001E                     	ds	2
   783  000020                     pad@w:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x1F
   787  000020                     	ds	2
   788  000022                     ?_dtoa:
   789                           	opt callstack 0
   790  000022                     ?_xtoa:
   791                           	opt callstack 0
   792  000022                     dtoa@fp:
   793                           	opt callstack 0
   794  000022                     xtoa@fp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x21
   798  000022                     	ds	2
   799  000024                     dtoa@d:
   800                           	opt callstack 0
   801  000024                     xtoa@d:
   802                           	opt callstack 0
   803                           
   804                           ; 8 bytes @ 0x23
   805  000024                     	ds	8
   806  00002C                     ??_dtoa:
   807  00002C                     xtoa@x:
   808                           	opt callstack 0
   809                           
   810                           ; 1 bytes @ 0x2B
   811  00002C                     	ds	1
   812  00002D                     ??_xtoa:
   813                           
   814                           ; 1 bytes @ 0x2C
   815  00002D                     	ds	7
   816  000034                     _dtoa$1203:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x33
   820  000034                     	ds	1
   821  000035                     _xtoa$1214:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x34
   825  000035                     	ds	1
   826  000036                     dtoa@p:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x35
   830  000036                     	ds	1
   831  000037                     _xtoa$1215:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x36
   835  000037                     	ds	1
   836  000038                     dtoa@w:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x37
   840  000038                     	ds	1
   841  000039                     xtoa@p:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x38
   845  000039                     	ds	1
   846  00003A                     dtoa@s:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x39
   850  00003A                     	ds	1
   851  00003B                     xtoa@w:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x3A
   855  00003B                     	ds	1
   856  00003C                     dtoa@n:
   857                           	opt callstack 0
   858                           
   859                           ; 8 bytes @ 0x3B
   860  00003C                     	ds	1
   861  00003D                     xtoa@n:
   862                           	opt callstack 0
   863                           
   864                           ; 8 bytes @ 0x3C
   865  00003D                     	ds	7
   866  000044                     dtoa@i:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x43
   870  000044                     	ds	1
   871  000045                     xtoa@i:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x44
   875  000045                     	ds	2
   876  000047                     xtoa@c:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x46
   880  000047                     	ds	2
   881  000049                     ?_vfpfcnvrt:
   882                           	opt callstack 0
   883  000049                     vfpfcnvrt@fp:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x48
   887  000049                     	ds	2
   888  00004B                     vfpfcnvrt@fmt:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x4A
   892  00004B                     	ds	2
   893  00004D                     vfpfcnvrt@ap:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x4C
   897  00004D                     	ds	2
   898  00004F                     ??_vfpfcnvrt:
   899                           
   900                           ; 1 bytes @ 0x4E
   901  00004F                     	ds	4
   902  000053                     vfprintf@cfmt:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x52
   906  000053                     	ds	2
   907  000055                     ??_PrintRXBuff:
   908                           
   909                           ; 1 bytes @ 0x54
   910  000055                     	ds	1
   911  000056                     ??_main:
   912                           
   913                           ; 1 bytes @ 0x55
   914  000056                     	ds	1
   915                           
   916 ;;
   917 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   918 ;;
   919 ;; *************** function _main *****************
   920 ;; Defined at:
   921 ;;		line 66 in file "main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  RXStat          1   39[BANK0 ] _Bool 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;Total ram usage:        2 bytes
   940 ;; Hardware stack levels required when called:   14
   941 ;; This function calls:
   942 ;;		_ClearRxBuff
   943 ;;		_EUSART1_Read
   944 ;;		_EUSART1_is_rx_ready
   945 ;;		_PrintRXBuff
   946 ;;		_RXMode
   947 ;;		_SYSTEM_Initialize
   948 ;;		_printf
   949 ;; This function is called by:
   950 ;;		Startup code after reset
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text0
   955  001DE4                     __ptext0:
   956                           	opt callstack 0
   957  001DE4                     _main:
   958                           	opt callstack 17
   959  001DE4                     
   960                           ;main.c: 69:     SYSTEM_Initialize();
   961  001DE4  EC6D  F014         	call	_SYSTEM_Initialize	;wreg free
   962  001DE8                     
   963                           ;main.c: 76:     (INTCONbits.GIE = 1);
   964  001DE8  8EF2               	bsf	242,7,c	;volatile
   965  001DEA                     
   966                           ;main.c: 82:     (INTCONbits.PEIE = 1);
   967  001DEA  8CF2               	bsf	242,6,c	;volatile
   968  001DEC  9883               	bcf	131,4,c	;volatile
   969  001DEE  9A83               	bcf	131,5,c	;volatile
   970  001DF0  9C83               	bcf	131,6,c	;volatile
   971  001DF2  9E83               	bcf	131,7,c	;volatile
   972  001DF4                     
   973                           ;main.c: 94:     printf("Initalised\r\n\n");
   974  001DF4  0E33               	movlw	low STR_3
   975  001DF6  0100               	movlb	0	; () banked
   976  001DF8  6FB9               	movwf	printf@fmt& (0+255),b
   977  001DFA  0E0F               	movlw	high STR_3
   978  001DFC  6FBA               	movwf	(printf@fmt+1)& (0+255),b
   979  001DFE  EC38  F014         	call	_printf	;wreg free
   980  001E02                     
   981                           ;main.c: 96:     RXMode();
   982  001E02  ECD3  F014         	call	_RXMode	;wreg free
   983  001E06                     
   984                           ;main.c: 97:     ClearRxBuff();
   985  001E06  ECD2  F012         	call	_ClearRxBuff	;wreg free
   986  001E0A                     
   987                           ;main.c: 99:     _Bool RXStat = 0;
   988  001E0A  0E00               	movlw	0
   989  001E0C  0100               	movlb	0	; () banked
   990  001E0E  6FC5               	movwf	main@RXStat& (0+255),b
   991  001E10                     l3569:
   992                           
   993                           ; BSR set to: 0
   994                           ;main.c: 102:     {;main.c: 103:         if(EUSART1_is_rx_ready()){
   995  001E10  EC86  F014         	call	_EUSART1_is_rx_ready	;wreg free
   996  001E14  0900               	iorlw	0
   997  001E16  B4D8               	btfsc	status,2,c
   998  001E18  EF10  F00F         	goto	u2911
   999  001E1C  EF12  F00F         	goto	u2910
  1000  001E20                     u2911:
  1001  001E20  EF2F  F00F         	goto	l3581
  1002  001E24                     u2910:
  1003  001E24  EF22  F00F         	goto	l3577
  1004  001E28                     l3573:
  1005                           
  1006                           ;main.c: 107:                 rxData[ByteNum] = EUSART1_Read();
  1007  001E28  EC52  F012         	call	_EUSART1_Read	;wreg free
  1008  001E2C  6E56               	movwf	??_main^0,c
  1009  001E2E  0E00               	movlw	low _rxData
  1010  001E30  0100               	movlb	0	; () banked
  1011  001E32  258E               	addwf	_ByteNum& (0+255),w,b
  1012  001E34  6ED9               	movwf	fsr2l,c
  1013  001E36  0E02               	movlw	high _rxData
  1014  001E38  218F               	addwfc	(_ByteNum+1)& (0+255),w,b
  1015  001E3A  6EDA               	movwf	fsr2h,c
  1016  001E3C  C056  FFDF         	movff	??_main,indf2
  1017  001E40                     
  1018                           ; BSR set to: 0
  1019                           ;main.c: 109:                 ByteNum++;
  1020  001E40  4B8E               	infsnz	_ByteNum& (0+255),f,b
  1021  001E42  2B8F               	incf	(_ByteNum+1)& (0+255),f,b
  1022  001E44                     l3577:
  1023                           
  1024                           ;main.c: 105:             while(EUSART1_is_rx_ready()){
  1025  001E44  EC86  F014         	call	_EUSART1_is_rx_ready	;wreg free
  1026  001E48  0900               	iorlw	0
  1027  001E4A  A4D8               	btfss	status,2,c
  1028  001E4C  EF2A  F00F         	goto	u2921
  1029  001E50  EF2C  F00F         	goto	u2920
  1030  001E54                     u2921:
  1031  001E54  EF14  F00F         	goto	l3573
  1032  001E58                     u2920:
  1033  001E58                     
  1034                           ;main.c: 112:                 RXStat = 1;
  1035  001E58  0E01               	movlw	1
  1036  001E5A  0100               	movlb	0	; () banked
  1037  001E5C  6FC5               	movwf	main@RXStat& (0+255),b
  1038  001E5E                     l3581:
  1039                           
  1040                           ;main.c: 115:         if(RXStat ==1){
  1041  001E5E  0100               	movlb	0	; () banked
  1042  001E60  05C5               	decf	main@RXStat& (0+255),w,b
  1043  001E62  A4D8               	btfss	status,2,c
  1044  001E64  EF36  F00F         	goto	u2931
  1045  001E68  EF38  F00F         	goto	u2930
  1046  001E6C                     u2931:
  1047  001E6C  EF08  F00F         	goto	l3569
  1048  001E70                     u2930:
  1049  001E70                     
  1050                           ; BSR set to: 0
  1051                           ;main.c: 117:             PrintRXBuff();
  1052  001E70  EC88  F011         	call	_PrintRXBuff	;wreg free
  1053  001E74                     
  1054                           ;main.c: 118:             ClearRxBuff();
  1055  001E74  ECD2  F012         	call	_ClearRxBuff	;wreg free
  1056  001E78                     
  1057                           ;main.c: 119:             RXStat = 0;
  1058  001E78  0E00               	movlw	0
  1059  001E7A  0100               	movlb	0	; () banked
  1060  001E7C  6FC5               	movwf	main@RXStat& (0+255),b
  1061  001E7E                     
  1062                           ; BSR set to: 0
  1063                           ;main.c: 120:             ByteNum = 0;
  1064  001E7E  0E00               	movlw	0
  1065  001E80  6F8F               	movwf	(_ByteNum+1)& (0+255),b
  1066  001E82  0E00               	movlw	0
  1067  001E84  6F8E               	movwf	_ByteNum& (0+255),b
  1068  001E86                     
  1069                           ; BSR set to: 0
  1070  001E86  B883               	btfsc	131,4,c	;volatile
  1071  001E88  EF48  F00F         	goto	u2941
  1072  001E8C  EF4B  F00F         	goto	u2940
  1073  001E90                     u2941:
  1074  001E90  0E01               	movlw	1
  1075  001E92  EF4C  F00F         	goto	u2946
  1076  001E96                     u2940:
  1077  001E96  0E00               	movlw	0
  1078  001E98                     u2946:
  1079  001E98  0AFF               	xorlw	255
  1080  001E9A  6E56               	movwf	??_main^0,c
  1081  001E9C  3A56               	swapf	??_main^0,f,c
  1082  001E9E  5083               	movf	131,w,c	;volatile
  1083  001EA0  1856               	xorwf	??_main^0,w,c
  1084  001EA2  0BEF               	andlw	-17
  1085  001EA4  1856               	xorwf	??_main^0,w,c
  1086  001EA6  6E83               	movwf	131,c	;volatile
  1087  001EA8  EF08  F00F         	goto	l3569
  1088  001EAC  EF93  F000         	goto	start
  1089  001EB0                     __end_of_main:
  1090                           	opt callstack 0
  1091                           
  1092 ;; *************** function _SYSTEM_Initialize *****************
  1093 ;; Defined at:
  1094 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    6
  1115 ;; This function calls:
  1116 ;;		_EUSART1_Initialize
  1117 ;;		_EUSART2_Initialize
  1118 ;;		_INTERRUPT_Initialize
  1119 ;;		_OSCILLATOR_Initialize
  1120 ;;		_PIN_MANAGER_Initialize
  1121 ;;		_PMD_Initialize
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text1
  1128  0028DA                     __ptext1:
  1129                           	opt callstack 0
  1130  0028DA                     _SYSTEM_Initialize:
  1131                           	opt callstack 24
  1132  0028DA                     
  1133                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1134  0028DA  ECDF  F014         	call	_INTERRUPT_Initialize	;wreg free
  1135  0028DE                     
  1136                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1137  0028DE  EC5F  F014         	call	_PMD_Initialize	;wreg free
  1138  0028E2                     
  1139                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1140  0028E2  ECC4  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1141  0028E6                     
  1142                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1143  0028E6  EC7A  F014         	call	_OSCILLATOR_Initialize	;wreg free
  1144  0028EA                     
  1145                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1146  0028EA  EC4A  F011         	call	_EUSART1_Initialize	;wreg free
  1147  0028EE                     
  1148                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1149  0028EE  EC0B  F011         	call	_EUSART2_Initialize	;wreg free
  1150  0028F2  0012               	return		;funcret
  1151  0028F4                     __end_of_SYSTEM_Initialize:
  1152                           	opt callstack 0
  1153                           
  1154 ;; *************** function _PMD_Initialize *****************
  1155 ;; Defined at:
  1156 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    4
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_SYSTEM_Initialize
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text2
  1185  0028BE                     __ptext2:
  1186                           	opt callstack 0
  1187  0028BE                     _PMD_Initialize:
  1188                           	opt callstack 25
  1189  0028BE                     
  1190                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1191  0028BE  0E00               	movlw	0
  1192  0028C0  010E               	movlb	14	; () banked
  1193  0028C2  6FE1               	movwf	225,b	;volatile
  1194                           
  1195                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1196  0028C4  0E00               	movlw	0
  1197  0028C6  6FE2               	movwf	226,b	;volatile
  1198                           
  1199                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1200  0028C8  0E00               	movlw	0
  1201  0028CA  6FE3               	movwf	227,b	;volatile
  1202                           
  1203                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1204  0028CC  0E00               	movlw	0
  1205  0028CE  6FE4               	movwf	228,b	;volatile
  1206                           
  1207                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1208  0028D0  0E00               	movlw	0
  1209  0028D2  6FE5               	movwf	229,b	;volatile
  1210                           
  1211                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1212  0028D4  0E00               	movlw	0
  1213  0028D6  6FE6               	movwf	230,b	;volatile
  1214  0028D8                     
  1215                           ; BSR set to: 14
  1216  0028D8  0012               	return		;funcret
  1217  0028DA                     __end_of_PMD_Initialize:
  1218                           	opt callstack 0
  1219                           
  1220 ;; *************** function _PIN_MANAGER_Initialize *****************
  1221 ;; Defined at:
  1222 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    4
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_SYSTEM_Initialize
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text3
  1251  002188                     __ptext3:
  1252                           	opt callstack 0
  1253  002188                     _PIN_MANAGER_Initialize:
  1254                           	opt callstack 25
  1255  002188                     
  1256                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1257  002188  0E00               	movlw	0
  1258  00218A  6E87               	movwf	135,c	;volatile
  1259                           
  1260                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1261  00218C  0E00               	movlw	0
  1262  00218E  6E86               	movwf	134,c	;volatile
  1263                           
  1264                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1265  002190  0E00               	movlw	0
  1266  002192  6E83               	movwf	131,c	;volatile
  1267                           
  1268                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1269  002194  0E00               	movlw	0
  1270  002196  6E84               	movwf	132,c	;volatile
  1271                           
  1272                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1273  002198  0E00               	movlw	0
  1274  00219A  6E85               	movwf	133,c	;volatile
  1275                           
  1276                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1277  00219C  0E07               	movlw	7
  1278  00219E  6E8C               	movwf	140,c	;volatile
  1279                           
  1280                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1281  0021A0  0E07               	movlw	7
  1282  0021A2  6E88               	movwf	136,c	;volatile
  1283                           
  1284                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1285  0021A4  0EBF               	movlw	191
  1286  0021A6  6E89               	movwf	137,c	;volatile
  1287                           
  1288                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1289  0021A8  0EBF               	movlw	191
  1290  0021AA  6E8A               	movwf	138,c	;volatile
  1291                           
  1292                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1293  0021AC  0EFE               	movlw	254
  1294  0021AE  6E8B               	movwf	139,c	;volatile
  1295  0021B0                     
  1296                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1297  0021B0  010F               	movlb	15	; () banked
  1298  0021B2  6926               	setf	38,b	;volatile
  1299                           
  1300                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1301  0021B4  0E3B               	movlw	59
  1302  0021B6  6F21               	movwf	33,b	;volatile
  1303                           
  1304                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1305  0021B8  0E37               	movlw	55
  1306  0021BA  6F19               	movwf	25,b	;volatile
  1307                           
  1308                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1309  0021BC  0E07               	movlw	7
  1310  0021BE  6F2E               	movwf	46,b	;volatile
  1311  0021C0                     
  1312                           ; BSR set to: 15
  1313                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1314  0021C0  6911               	setf	17,b	;volatile
  1315                           
  1316                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1317  0021C2  0E00               	movlw	0
  1318  0021C4  6F25               	movwf	37,b	;volatile
  1319                           
  1320                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1321  0021C6  0E00               	movlw	0
  1322  0021C8  6F2D               	movwf	45,b	;volatile
  1323                           
  1324                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1325  0021CA  0E00               	movlw	0
  1326  0021CC  6F18               	movwf	24,b	;volatile
  1327                           
  1328                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1329  0021CE  0E00               	movlw	0
  1330  0021D0  6F10               	movwf	16,b	;volatile
  1331                           
  1332                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1333  0021D2  0E00               	movlw	0
  1334  0021D4  6F20               	movwf	32,b	;volatile
  1335                           
  1336                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1337  0021D6  0E00               	movlw	0
  1338  0021D8  6F2C               	movwf	44,b	;volatile
  1339                           
  1340                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1341  0021DA  0E00               	movlw	0
  1342  0021DC  6F0F               	movwf	15,b	;volatile
  1343                           
  1344                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1345  0021DE  0E00               	movlw	0
  1346  0021E0  6F17               	movwf	23,b	;volatile
  1347                           
  1348                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1349  0021E2  0E00               	movlw	0
  1350  0021E4  6F1F               	movwf	31,b	;volatile
  1351                           
  1352                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1353  0021E6  0E00               	movlw	0
  1354  0021E8  6F24               	movwf	36,b	;volatile
  1355  0021EA                     
  1356                           ; BSR set to: 15
  1357                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1358  0021EA  690E               	setf	14,b	;volatile
  1359  0021EC                     
  1360                           ; BSR set to: 15
  1361                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1362  0021EC  6916               	setf	22,b	;volatile
  1363  0021EE                     
  1364                           ; BSR set to: 15
  1365                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1366  0021EE  691E               	setf	30,b	;volatile
  1367  0021F0                     
  1368                           ; BSR set to: 15
  1369                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1370  0021F0  6923               	setf	35,b	;volatile
  1371                           
  1372                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1373  0021F2  0E07               	movlw	7
  1374  0021F4  6F2B               	movwf	43,b	;volatile
  1375  0021F6                     
  1376                           ; BSR set to: 15
  1377                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1378  0021F6  690D               	setf	13,b	;volatile
  1379  0021F8                     
  1380                           ; BSR set to: 15
  1381                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1382  0021F8  6915               	setf	21,b	;volatile
  1383  0021FA                     
  1384                           ; BSR set to: 15
  1385                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1386  0021FA  691D               	setf	29,b	;volatile
  1387  0021FC                     
  1388                           ; BSR set to: 15
  1389                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1390  0021FC  6922               	setf	34,b	;volatile
  1391                           
  1392                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1393  0021FE  0E0F               	movlw	15
  1394  002200  6F2A               	movwf	42,b	;volatile
  1395                           
  1396                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1397  002202  0E17               	movlw	23
  1398  002204  010E               	movlb	14	; () banked
  1399  002206  6FB5               	movwf	181,b	;volatile
  1400                           
  1401                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1402  002208  0E0B               	movlw	11
  1403  00220A  6FF5               	movwf	245,b	;volatile
  1404                           
  1405                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1406  00220C  0E09               	movlw	9
  1407  00220E  6FFD               	movwf	253,b	;volatile
  1408                           
  1409                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1410  002210  0E0F               	movlw	15
  1411  002212  6F8D               	movwf	141,b	;volatile
  1412  002214                     
  1413                           ; BSR set to: 14
  1414  002214  0012               	return		;funcret
  1415  002216                     __end_of_PIN_MANAGER_Initialize:
  1416                           	opt callstack 0
  1417                           
  1418 ;; *************** function _OSCILLATOR_Initialize *****************
  1419 ;; Defined at:
  1420 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    4
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_SYSTEM_Initialize
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text4
  1449  0028F4                     __ptext4:
  1450                           	opt callstack 0
  1451  0028F4                     _OSCILLATOR_Initialize:
  1452                           	opt callstack 25
  1453  0028F4                     
  1454                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1455  0028F4  0E60               	movlw	96
  1456  0028F6  010E               	movlb	14	; () banked
  1457  0028F8  6FD8               	movwf	216,b	;volatile
  1458                           
  1459                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1460  0028FA  0E00               	movlw	0
  1461  0028FC  6FDA               	movwf	218,b	;volatile
  1462                           
  1463                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1464  0028FE  0E00               	movlw	0
  1465  002900  6FDC               	movwf	220,b	;volatile
  1466                           
  1467                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1468  002902  0E06               	movlw	6
  1469  002904  6FDE               	movwf	222,b	;volatile
  1470                           
  1471                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1472  002906  0E00               	movlw	0
  1473  002908  6FDD               	movwf	221,b	;volatile
  1474  00290A                     
  1475                           ; BSR set to: 14
  1476  00290A  0012               	return		;funcret
  1477  00290C                     __end_of_OSCILLATOR_Initialize:
  1478                           	opt callstack 0
  1479                           
  1480 ;; *************** function _INTERRUPT_Initialize *****************
  1481 ;; Defined at:
  1482 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    4
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_SYSTEM_Initialize
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text5
  1511  0029BE                     __ptext5:
  1512                           	opt callstack 0
  1513  0029BE                     _INTERRUPT_Initialize:
  1514                           	opt callstack 25
  1515  0029BE                     
  1516                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1517  0029BE  9AF2               	bcf	242,5,c	;volatile
  1518  0029C0  0012               	return		;funcret
  1519  0029C2                     __end_of_INTERRUPT_Initialize:
  1520                           	opt callstack 0
  1521                           
  1522 ;; *************** function _EUSART2_Initialize *****************
  1523 ;; Defined at:
  1524 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    5
  1545 ;; This function calls:
  1546 ;;		_EUSART2_SetErrorHandler
  1547 ;;		_EUSART2_SetFramingErrorHandler
  1548 ;;		_EUSART2_SetOverrunErrorHandler
  1549 ;;		_EUSART2_SetRxInterruptHandler
  1550 ;;		_EUSART2_SetTxInterruptHandler
  1551 ;; This function is called by:
  1552 ;;		_SYSTEM_Initialize
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text6
  1557  002216                     __ptext6:
  1558                           	opt callstack 0
  1559  002216                     _EUSART2_Initialize:
  1560                           	opt callstack 24
  1561  002216                     
  1562                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  1563  002216  010E               	movlb	14	; () banked
  1564  002218  9FC5               	bcf	197,7,b	;volatile
  1565  00221A                     
  1566                           ; BSR set to: 14
  1567                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  1568  00221A  0E72               	movlw	low _EUSART2_Receive_ISR
  1569  00221C  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  1570  00221E  0E1F               	movlw	high _EUSART2_Receive_ISR
  1571  002220  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  1572  002222  EC9D  F014         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  1573  002226                     
  1574                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  1575  002226  010E               	movlb	14	; () banked
  1576  002228  9DC5               	bcf	197,6,b	;volatile
  1577                           
  1578                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  1579  00222A  0EEE               	movlw	low _EUSART2_Transmit_ISR
  1580  00222C  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  1581  00222E  0E25               	movlw	high _EUSART2_Transmit_ISR
  1582  002230  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  1583  002232  EC98  F014         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  1584  002236                     
  1585                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  1586  002236  0E08               	movlw	8
  1587  002238  010E               	movlb	14	; () banked
  1588  00223A  6F9F               	movwf	159,b	;volatile
  1589  00223C                     
  1590                           ; BSR set to: 14
  1591                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  1592  00223C  0E90               	movlw	144
  1593  00223E  6F9D               	movwf	157,b	;volatile
  1594  002240                     
  1595                           ; BSR set to: 14
  1596                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  1597  002240  0E24               	movlw	36
  1598  002242  6F9E               	movwf	158,b	;volatile
  1599  002244                     
  1600                           ; BSR set to: 14
  1601                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  1602  002244  0E40               	movlw	64
  1603  002246  6F9B               	movwf	155,b	;volatile
  1604  002248                     
  1605                           ; BSR set to: 14
  1606                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  1607  002248  0E03               	movlw	3
  1608  00224A  6F9C               	movwf	156,b	;volatile
  1609  00224C                     
  1610                           ; BSR set to: 14
  1611                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  1612  00224C  0EC2               	movlw	low _EUSART2_DefaultFramingErrorHandler
  1613  00224E  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  1614  002250  0E29               	movlw	high _EUSART2_DefaultFramingErrorHandler
  1615  002252  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  1616  002254  ECA7  F014         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  1617  002258                     
  1618                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  1619  002258  0E9E               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  1620  00225A  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  1621  00225C  0E29               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  1622  00225E  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1623  002260  ECA2  F014         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  1624  002264                     
  1625                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  1626  002264  0EAC               	movlw	low _EUSART2_DefaultErrorHandler
  1627  002266  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  1628  002268  0E29               	movlw	high _EUSART2_DefaultErrorHandler
  1629  00226A  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  1630  00226C  ECAC  F014         	call	_EUSART2_SetErrorHandler	;wreg free
  1631                           
  1632                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  1633  002270  0E00               	movlw	0
  1634  002272  0100               	movlb	0	; () banked
  1635  002274  6F99               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  1636                           
  1637                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  1638  002276  0E00               	movlw	0
  1639  002278  6F9D               	movwf	_eusart2TxHead& (0+255),b	;volatile
  1640                           
  1641                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  1642  00227A  0E00               	movlw	0
  1643  00227C  6F9C               	movwf	_eusart2TxTail& (0+255),b	;volatile
  1644                           
  1645                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  1646  00227E  0E08               	movlw	8
  1647  002280  6FDB               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  1648                           
  1649                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  1650  002282  0E00               	movlw	0
  1651  002284  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  1652                           
  1653                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  1654  002286  0E00               	movlw	0
  1655  002288  6F9B               	movwf	_eusart2RxTail& (0+255),b	;volatile
  1656                           
  1657                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  1658  00228A  0E00               	movlw	0
  1659  00228C  6F9A               	movwf	_eusart2RxCount& (0+255),b	;volatile
  1660  00228E                     
  1661                           ; BSR set to: 0
  1662                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  1663  00228E  010E               	movlb	14	; () banked
  1664  002290  8FC5               	bsf	197,7,b	;volatile
  1665  002292                     
  1666                           ; BSR set to: 14
  1667  002292  0012               	return		;funcret
  1668  002294                     __end_of_EUSART2_Initialize:
  1669                           	opt callstack 0
  1670                           
  1671 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  1672 ;; Defined at:
  1673 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1676 ;;		 -> EUSART2_Transmit_ISR(1), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;Total ram usage:        2 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    4
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_EUSART2_Initialize
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text7
  1703  002930                     __ptext7:
  1704                           	opt callstack 0
  1705  002930                     _EUSART2_SetTxInterruptHandler:
  1706                           	opt callstack 24
  1707  002930                     
  1708                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1709  002930  C005  F0D8         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  1710  002934  C006  F0D9         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  1711  002938  0012               	return		;funcret
  1712  00293A                     __end_of_EUSART2_SetTxInterruptHandler:
  1713                           	opt callstack 0
  1714                           
  1715 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  1716 ;; Defined at:
  1717 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1720 ;;		 -> EUSART2_Receive_ISR(1), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    4
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_EUSART2_Initialize
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text8
  1747  00293A                     __ptext8:
  1748                           	opt callstack 0
  1749  00293A                     _EUSART2_SetRxInterruptHandler:
  1750                           	opt callstack 24
  1751  00293A                     
  1752                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1753  00293A  C005  F0D6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  1754  00293E  C006  F0D7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  1755  002942  0012               	return		;funcret
  1756  002944                     __end_of_EUSART2_SetRxInterruptHandler:
  1757                           	opt callstack 0
  1758                           
  1759 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  1760 ;; Defined at:
  1761 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1764 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    4
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_EUSART2_Initialize
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text9
  1791  002944                     __ptext9:
  1792                           	opt callstack 0
  1793  002944                     _EUSART2_SetOverrunErrorHandler:
  1794                           	opt callstack 24
  1795  002944                     
  1796                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  1797  002944  C005  F0CE         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  1798  002948  C006  F0CF         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  1799  00294C  0012               	return		;funcret
  1800  00294E                     __end_of_EUSART2_SetOverrunErrorHandler:
  1801                           	opt callstack 0
  1802                           
  1803 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  1804 ;; Defined at:
  1805 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1808 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        2 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    4
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_EUSART2_Initialize
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text10
  1835  00294E                     __ptext10:
  1836                           	opt callstack 0
  1837  00294E                     _EUSART2_SetFramingErrorHandler:
  1838                           	opt callstack 24
  1839  00294E                     
  1840                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  1841  00294E  C005  F0D0         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  1842  002952  C006  F0D1         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  1843  002956  0012               	return		;funcret
  1844  002958                     __end_of_EUSART2_SetFramingErrorHandler:
  1845                           	opt callstack 0
  1846                           
  1847 ;; *************** function _EUSART2_SetErrorHandler *****************
  1848 ;; Defined at:
  1849 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1852 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1868 ;;Total ram usage:        2 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    4
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_EUSART2_Initialize
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text11
  1879  002958                     __ptext11:
  1880                           	opt callstack 0
  1881  002958                     _EUSART2_SetErrorHandler:
  1882                           	opt callstack 24
  1883  002958                     
  1884                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  1885  002958  C005  F0CC         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  1886  00295C  C006  F0CD         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  1887  002960  0012               	return		;funcret
  1888  002962                     __end_of_EUSART2_SetErrorHandler:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _EUSART1_Initialize *****************
  1892 ;; Defined at:
  1893 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    5
  1914 ;; This function calls:
  1915 ;;		_EUSART1_SetErrorHandler
  1916 ;;		_EUSART1_SetFramingErrorHandler
  1917 ;;		_EUSART1_SetOverrunErrorHandler
  1918 ;;		_EUSART1_SetRxInterruptHandler
  1919 ;;		_EUSART1_SetTxInterruptHandler
  1920 ;; This function is called by:
  1921 ;;		_SYSTEM_Initialize
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text12
  1926  002294                     __ptext12:
  1927                           	opt callstack 0
  1928  002294                     _EUSART1_Initialize:
  1929                           	opt callstack 24
  1930  002294                     
  1931                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  1932  002294  010E               	movlb	14	; () banked
  1933  002296  9BC5               	bcf	197,5,b	;volatile
  1934  002298                     
  1935                           ; BSR set to: 14
  1936                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1937  002298  0E32               	movlw	low _EUSART1_Receive_ISR
  1938  00229A  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1939  00229C  0E20               	movlw	high _EUSART1_Receive_ISR
  1940  00229E  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1941  0022A0  ECB6  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1942  0022A4                     
  1943                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  1944  0022A4  010E               	movlb	14	; () banked
  1945  0022A6  99C5               	bcf	197,4,b	;volatile
  1946                           
  1947                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1948  0022A8  0E7A               	movlw	low _EUSART1_Transmit_ISR
  1949  0022AA  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  1950  0022AC  0E26               	movlw	high _EUSART1_Transmit_ISR
  1951  0022AE  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  1952  0022B0  ECB1  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1953  0022B4                     
  1954                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  1955  0022B4  0E08               	movlw	8
  1956  0022B6  6E9F               	movwf	159,c	;volatile
  1957  0022B8                     
  1958                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  1959  0022B8  0E90               	movlw	144
  1960  0022BA  6E9D               	movwf	157,c	;volatile
  1961  0022BC                     
  1962                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  1963  0022BC  0E24               	movlw	36
  1964  0022BE  6E9E               	movwf	158,c	;volatile
  1965  0022C0                     
  1966                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  1967  0022C0  0E40               	movlw	64
  1968  0022C2  6E9B               	movwf	155,c	;volatile
  1969  0022C4                     
  1970                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  1971  0022C4  0E03               	movlw	3
  1972  0022C6  6E9C               	movwf	156,c	;volatile
  1973  0022C8                     
  1974                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1975  0022C8  0EC4               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1976  0022CA  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1977  0022CC  0E29               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1978  0022CE  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1979  0022D0  ECC0  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1980  0022D4                     
  1981                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1982  0022D4  0EB2               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1983  0022D6  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1984  0022D8  0E29               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1985  0022DA  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1986  0022DC  ECBB  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1987  0022E0                     
  1988                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1989  0022E0  0EB8               	movlw	low _EUSART1_DefaultErrorHandler
  1990  0022E2  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1991  0022E4  0E29               	movlw	high _EUSART1_DefaultErrorHandler
  1992  0022E6  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1993  0022E8  ECC5  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  1994                           
  1995                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  1996  0022EC  0E00               	movlw	0
  1997  0022EE  0100               	movlb	0	; () banked
  1998  0022F0  6F94               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  1999                           
  2000                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2001  0022F2  0E00               	movlw	0
  2002  0022F4  6F98               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2003                           
  2004                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2005  0022F6  0E00               	movlw	0
  2006  0022F8  6F97               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2007                           
  2008                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2009  0022FA  0E10               	movlw	16
  2010  0022FC  6FDA               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2011                           
  2012                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2013  0022FE  0E00               	movlw	0
  2014  002300  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  2015                           
  2016                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2017  002302  0E00               	movlw	0
  2018  002304  6F96               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2019                           
  2020                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2021  002306  0E00               	movlw	0
  2022  002308  6F95               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2023  00230A                     
  2024                           ; BSR set to: 0
  2025                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2026  00230A  010E               	movlb	14	; () banked
  2027  00230C  8BC5               	bsf	197,5,b	;volatile
  2028  00230E                     
  2029                           ; BSR set to: 14
  2030  00230E  0012               	return		;funcret
  2031  002310                     __end_of_EUSART1_Initialize:
  2032                           	opt callstack 0
  2033                           
  2034 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2035 ;; Defined at:
  2036 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2039 ;;		 -> EUSART1_Transmit_ISR(1), 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    4
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_EUSART1_Initialize
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text13
  2066  002962                     __ptext13:
  2067                           	opt callstack 0
  2068  002962                     _EUSART1_SetTxInterruptHandler:
  2069                           	opt callstack 24
  2070  002962                     
  2071                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2072  002962  C005  F0D4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2073  002966  C006  F0D5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2074  00296A  0012               	return		;funcret
  2075  00296C                     __end_of_EUSART1_SetTxInterruptHandler:
  2076                           	opt callstack 0
  2077                           
  2078 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2079 ;; Defined at:
  2080 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2083 ;;		 -> EUSART1_Receive_ISR(1), 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    4
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_EUSART1_Initialize
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text14
  2110  00296C                     __ptext14:
  2111                           	opt callstack 0
  2112  00296C                     _EUSART1_SetRxInterruptHandler:
  2113                           	opt callstack 24
  2114  00296C                     
  2115                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2116  00296C  C005  F0D2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2117  002970  C006  F0D3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2118  002974  0012               	return		;funcret
  2119  002976                     __end_of_EUSART1_SetRxInterruptHandler:
  2120                           	opt callstack 0
  2121                           
  2122 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2123 ;; Defined at:
  2124 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2127 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    4
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_EUSART1_Initialize
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text15
  2154  002976                     __ptext15:
  2155                           	opt callstack 0
  2156  002976                     _EUSART1_SetOverrunErrorHandler:
  2157                           	opt callstack 24
  2158  002976                     
  2159                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2160  002976  C005  F0C8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2161  00297A  C006  F0C9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2162  00297E  0012               	return		;funcret
  2163  002980                     __end_of_EUSART1_SetOverrunErrorHandler:
  2164                           	opt callstack 0
  2165                           
  2166 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2167 ;; Defined at:
  2168 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2171 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    4
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_EUSART1_Initialize
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text16
  2198  002980                     __ptext16:
  2199                           	opt callstack 0
  2200  002980                     _EUSART1_SetFramingErrorHandler:
  2201                           	opt callstack 24
  2202  002980                     
  2203                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2204  002980  C005  F0CA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2205  002984  C006  F0CB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2206  002988  0012               	return		;funcret
  2207  00298A                     __end_of_EUSART1_SetFramingErrorHandler:
  2208                           	opt callstack 0
  2209                           
  2210 ;; *************** function _EUSART1_SetErrorHandler *****************
  2211 ;; Defined at:
  2212 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2215 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    4
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_EUSART1_Initialize
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text17
  2242  00298A                     __ptext17:
  2243                           	opt callstack 0
  2244  00298A                     _EUSART1_SetErrorHandler:
  2245                           	opt callstack 24
  2246  00298A                     
  2247                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2248  00298A  C005  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2249  00298E  C006  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2250  002992  0012               	return		;funcret
  2251  002994                     __end_of_EUSART1_SetErrorHandler:
  2252                           	opt callstack 0
  2253                           
  2254 ;; *************** function _RXMode *****************
  2255 ;; Defined at:
  2256 ;;		line 40 in file "main.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		None
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    4
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text18
  2285  0029A6                     __ptext18:
  2286                           	opt callstack 0
  2287  0029A6                     _RXMode:
  2288                           	opt callstack 26
  2289  0029A6  9086               	bcf	134,0,c	;volatile
  2290  0029A8  9683               	bcf	131,3,c	;volatile
  2291  0029AA  0012               	return		;funcret
  2292  0029AC                     __end_of_RXMode:
  2293                           	opt callstack 0
  2294                           
  2295 ;; *************** function _PrintRXBuff *****************
  2296 ;; Defined at:
  2297 ;;		line 55 in file "main.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  i               2   37[BANK0 ] int 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;Total ram usage:        3 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:   13
  2318 ;; This function calls:
  2319 ;;		_printf
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text19
  2326  002310                     __ptext19:
  2327                           	opt callstack 0
  2328  002310                     _PrintRXBuff:
  2329                           	opt callstack 17
  2330  002310                     
  2331                           ;main.c: 59:     printf("\r\Num Bytes Received: %i\r\n", ByteNum);
  2332  002310  0E01               	movlw	low STR_1
  2333  002312  0100               	movlb	0	; () banked
  2334  002314  6FB9               	movwf	printf@fmt& (0+255),b
  2335  002316  0E0F               	movlw	high STR_1
  2336  002318  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  2337  00231A  C08E  F0BB         	movff	_ByteNum,?_printf+2
  2338  00231E  C08F  F0BC         	movff	_ByteNum+1,?_printf+3
  2339  002322  EC38  F014         	call	_printf	;wreg free
  2340  002326                     
  2341                           ;main.c: 60:     for(i=0; i< ByteNum ; i++ ){
  2342  002326  0E00               	movlw	0
  2343  002328  0100               	movlb	0	; () banked
  2344  00232A  6FC4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2345  00232C  0E00               	movlw	0
  2346  00232E  6FC3               	movwf	PrintRXBuff@i& (0+255),b
  2347  002330  EFB2  F011         	goto	l3545
  2348  002334                     l3541:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 61:         printf("Loop: %i Val: 0x%02x \r\n", i, rxData[i]);
  2352  002334  0E1B               	movlw	low STR_2
  2353  002336  6FB9               	movwf	printf@fmt& (0+255),b
  2354  002338  0E0F               	movlw	high STR_2
  2355  00233A  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  2356  00233C  C0C3  F0BB         	movff	PrintRXBuff@i,?_printf+2
  2357  002340  C0C4  F0BC         	movff	PrintRXBuff@i+1,?_printf+3
  2358  002344  0E00               	movlw	low _rxData
  2359  002346  25C3               	addwf	PrintRXBuff@i& (0+255),w,b
  2360  002348  6ED9               	movwf	fsr2l,c
  2361  00234A  0E02               	movlw	high _rxData
  2362  00234C  21C4               	addwfc	(PrintRXBuff@i+1)& (0+255),w,b
  2363  00234E  6EDA               	movwf	fsr2h,c
  2364  002350  50DF               	movf	indf2,w,c
  2365  002352  6E55               	movwf	??_PrintRXBuff^0,c
  2366  002354  5055               	movf	??_PrintRXBuff^0,w,c
  2367  002356  6FBD               	movwf	(?_printf+4)& (0+255),b
  2368  002358  6BBE               	clrf	(?_printf+5)& (0+255),b
  2369  00235A  EC38  F014         	call	_printf	;wreg free
  2370  00235E                     
  2371                           ;main.c: 62:     }
  2372  00235E  0100               	movlb	0	; () banked
  2373  002360  4BC3               	infsnz	PrintRXBuff@i& (0+255),f,b
  2374  002362  2BC4               	incf	(PrintRXBuff@i+1)& (0+255),f,b
  2375  002364                     l3545:
  2376                           
  2377                           ; BSR set to: 0
  2378  002364  518E               	movf	_ByteNum& (0+255),w,b
  2379  002366  5DC3               	subwf	PrintRXBuff@i& (0+255),w,b
  2380  002368  51C4               	movf	(PrintRXBuff@i+1)& (0+255),w,b
  2381  00236A  0A80               	xorlw	128
  2382  00236C  6E55               	movwf	??_PrintRXBuff^0,c
  2383  00236E  518F               	movf	(_ByteNum+1)& (0+255),w,b
  2384  002370  0A80               	xorlw	128
  2385  002372  5855               	subwfb	??_PrintRXBuff^0,w,c
  2386  002374  A0D8               	btfss	status,0,c
  2387  002376  EFBF  F011         	goto	u2901
  2388  00237A  EFC1  F011         	goto	u2900
  2389  00237E                     u2901:
  2390  00237E  EF9A  F011         	goto	l3541
  2391  002382                     u2900:
  2392  002382                     
  2393                           ; BSR set to: 0
  2394  002382  0012               	return		;funcret
  2395  002384                     __end_of_PrintRXBuff:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function _printf *****************
  2399 ;; Defined at:
  2400 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  2403 ;;		 -> STR_3(14), STR_2(24), STR_1(26), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  ap              2   35[BANK0 ] PTR void [1]
  2406 ;;		 -> ?_printf(2), 
  2407 ;;  ret             2    0        int 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  2   27[BANK0 ] int 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2417 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2421 ;;Total ram usage:       10 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:   12
  2424 ;; This function calls:
  2425 ;;		_vfprintf
  2426 ;; This function is called by:
  2427 ;;		_PrintRXBuff
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text20
  2433  002870                     __ptext20:
  2434                           	opt callstack 0
  2435  002870                     _printf:
  2436                           	opt callstack 18
  2437  002870  0EBB               	movlw	low (?_printf+2)
  2438  002872  0100               	movlb	0	; () banked
  2439  002874  6FC1               	movwf	printf@ap& (0+255),b
  2440  002876  0E00               	movlw	high (?_printf+2)
  2441  002878  6FC2               	movwf	(printf@ap+1)& (0+255),b
  2442  00287A                     
  2443                           ; BSR set to: 0
  2444  00287A  0E00               	movlw	0
  2445  00287C  6FB3               	movwf	vfprintf@fp& (0+255),b
  2446  00287E  0E00               	movlw	0
  2447  002880  6FB4               	movwf	(vfprintf@fp+1)& (0+255),b
  2448  002882  C0B9  F0B5         	movff	printf@fmt,vfprintf@fmt
  2449  002886  C0BA  F0B6         	movff	printf@fmt+1,vfprintf@fmt+1
  2450  00288A  0EC1               	movlw	low printf@ap
  2451  00288C  6FB7               	movwf	vfprintf@ap& (0+255),b
  2452  00288E  0E00               	movlw	high printf@ap
  2453  002890  6FB8               	movwf	(vfprintf@ap+1)& (0+255),b
  2454  002892  ECC2  F011         	call	_vfprintf	;wreg free
  2455  002896  0012               	return		;funcret
  2456  002898                     __end_of_printf:
  2457                           	opt callstack 0
  2458                           
  2459 ;; *************** function _vfprintf *****************
  2460 ;; Defined at:
  2461 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2464 ;;		 -> NULL(0), 
  2465 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2466 ;;		 -> STR_3(14), STR_2(24), STR_1(26), 
  2467 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2468 ;;		 -> printf@ap(2), 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2471 ;;		 -> STR_3(14), STR_2(24), STR_1(26), 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  2   21[BANK0 ] int 
  2474 ;; Registers used:
  2475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2481 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;Total ram usage:        8 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:   11
  2488 ;; This function calls:
  2489 ;;		_vfpfcnvrt
  2490 ;; This function is called by:
  2491 ;;		_printf
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text21
  2496  002384                     __ptext21:
  2497                           	opt callstack 0
  2498  002384                     _vfprintf:
  2499                           	opt callstack 18
  2500  002384                     
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2502  002384  C0B5  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2503  002388  C0B6  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2504  00238C                     
  2505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2506  00238C  0E00               	movlw	0
  2507  00238E  0100               	movlb	0	; () banked
  2508  002390  6F89               	movwf	(_nout+1)& (0+255),b
  2509  002392  0E00               	movlw	0
  2510  002394  6F88               	movwf	_nout& (0+255),b
  2511                           
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2513  002396  EFE0  F011         	goto	l3527
  2514  00239A                     l3525:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2518  00239A  C0B3  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2519  00239E  C0B4  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2520  0023A2  0E53               	movlw	low vfprintf@cfmt
  2521  0023A4  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2522  0023A6  0E00               	movlw	high vfprintf@cfmt
  2523  0023A8  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2524  0023AA  C0B7  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2525  0023AE  C0B8  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2526  0023B2  ECA1  F007         	call	_vfpfcnvrt	;wreg free
  2527  0023B6  5049               	movf	?_vfpfcnvrt^0,w,c
  2528  0023B8  0100               	movlb	0	; () banked
  2529  0023BA  2788               	addwf	_nout& (0+255),f,b
  2530  0023BC  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2531  0023BE  2389               	addwfc	(_nout+1)& (0+255),f,b
  2532  0023C0                     l3527:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2536  0023C0  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2537  0023C4  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2538  0023C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2539  0023C8  6AF8               	clrf	tblptru,c
  2540  0023CA                     	endif
  2541  0023CA                     	if	0	;tblptru may be non-zero
  2542  0023CA                     	endif
  2543  0023CA  0008               	tblrd		*
  2544  0023CC  50F5               	movf	tablat,w,c
  2545  0023CE  0900               	iorlw	0
  2546  0023D0  A4D8               	btfss	status,2,c
  2547  0023D2  EFED  F011         	goto	u2891
  2548  0023D6  EFEF  F011         	goto	u2890
  2549  0023DA                     u2891:
  2550  0023DA  EFCD  F011         	goto	l3525
  2551  0023DE                     u2890:
  2552  0023DE                     
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2555  0023DE  C088  F0B3         	movff	_nout,?_vfprintf
  2556  0023E2  C089  F0B4         	movff	_nout+1,?_vfprintf+1
  2557  0023E6                     
  2558                           ; BSR set to: 0
  2559  0023E6  0012               	return		;funcret
  2560  0023E8                     __end_of_vfprintf:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _vfpfcnvrt *****************
  2564 ;; Defined at:
  2565 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2568 ;;		 -> NULL(0), 
  2569 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2570 ;;		 -> vfprintf@cfmt(2), 
  2571 ;;  ap              2   76[COMRAM] PTR PTR void 
  2572 ;;		 -> printf@ap(2), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  llu             8    8[BANK0 ] unsigned long long 
  2575 ;;  ll              8    0[BANK0 ] long long 
  2576 ;;  f               4    0        long long 
  2577 ;;  vp              3    0        PTR void 
  2578 ;;  ct              3    0        unsigned char [3]
  2579 ;;  cp              3    0        PTR unsigned char 
  2580 ;;  done            2   16[BANK0 ] int 
  2581 ;;  i               2    0        int 
  2582 ;;  c               1   20[BANK0 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2   72[COMRAM] int 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2595 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2596 ;;Total ram usage:       31 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:   10
  2599 ;; This function calls:
  2600 ;;		_atoi
  2601 ;;		_dtoa
  2602 ;;		_fputc
  2603 ;;		_isdigit
  2604 ;;		_xtoa
  2605 ;; This function is called by:
  2606 ;;		_vfprintf
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text22
  2611  000F42                     __ptext22:
  2612                           	opt callstack 0
  2613  000F42                     _vfpfcnvrt:
  2614                           	opt callstack 18
  2615  000F42                     
  2616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2617  000F42  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2618  000F46  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2619  000F4A  CFDE FFF6          	movff	postinc2,tblptrl
  2620  000F4E  CFDD FFF7          	movff	postdec2,tblptrh
  2621  000F52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2622  000F52  6AF8               	clrf	tblptru,c
  2623  000F54                     	endif
  2624  000F54                     	if	0	;tblptru may be non-zero
  2625  000F54                     	endif
  2626  000F54  0008               	tblrd		*
  2627  000F56  50F5               	movf	tablat,w,c
  2628  000F58  0A25               	xorlw	37
  2629  000F5A  A4D8               	btfss	status,2,c
  2630  000F5C  EFB2  F007         	goto	u2281
  2631  000F60  EFB4  F007         	goto	u2280
  2632  000F64                     u2281:
  2633  000F64  EFB7  F009         	goto	l3055
  2634  000F68                     u2280:
  2635  000F68                     
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2637  000F68  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2638  000F6C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2639  000F70  2ADE               	incf	postinc2,f,c
  2640  000F72  0E00               	movlw	0
  2641  000F74  22DD               	addwfc	postdec2,f,c
  2642  000F76                     
  2643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2644  000F76  0E00               	movlw	0
  2645  000F78  0100               	movlb	0	; () banked
  2646  000F7A  6F8B               	movwf	(_width+1)& (0+255),b
  2647  000F7C  0E00               	movlw	0
  2648  000F7E  6F8A               	movwf	_width& (0+255),b
  2649  000F80  C08A  F057         	movff	_width,_flags
  2650  000F84  C08B  F058         	movff	_width+1,_flags+1
  2651  000F88                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2654  000F88  698C               	setf	_prec& (0+255),b
  2655  000F8A  698D               	setf	(_prec+1)& (0+255),b
  2656  000F8C                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2659  000F8C  0E00               	movlw	0
  2660  000F8E  6FAF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2661  000F90  0E00               	movlw	0
  2662  000F92  6FAE               	movwf	vfpfcnvrt@done& (0+255),b
  2663                           
  2664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2665  000F94  EF13  F008         	goto	l2993
  2666  000F98                     l2967:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2670  000F98  8057               	bsf	_flags^0,0,c
  2671  000F9A                     l2969:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2675  000F9A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  000F9E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  000FA2  2ADE               	incf	postinc2,f,c
  2678  000FA4  0E00               	movlw	0
  2679  000FA6  22DD               	addwfc	postdec2,f,c
  2680                           
  2681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2682  000FA8  EF13  F008         	goto	l2993
  2683  000FAC                     l2971:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2687  000FAC  8257               	bsf	_flags^0,1,c
  2688  000FAE  EFCD  F007         	goto	l2969
  2689  000FB2                     l2975:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2693  000FB2  8457               	bsf	_flags^0,2,c
  2694  000FB4  EFCD  F007         	goto	l2969
  2695  000FB8                     l2979:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2699  000FB8  8657               	bsf	_flags^0,3,c
  2700  000FBA  EFCD  F007         	goto	l2969
  2701  000FBE                     l2983:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2705  000FBE  8857               	bsf	_flags^0,4,c
  2706  000FC0  EFCD  F007         	goto	l2969
  2707  000FC4                     l2987:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2711  000FC4  0E00               	movlw	0
  2712  000FC6  6FAF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2713  000FC8  0E01               	movlw	1
  2714  000FCA  6FAE               	movwf	vfpfcnvrt@done& (0+255),b
  2715                           
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2717  000FCC  EF13  F008         	goto	l2993
  2718  000FD0                     l2991:
  2719                           
  2720                           ; BSR set to: 0
  2721  000FD0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722  000FD4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723  000FD8  CFDE FFF6          	movff	postinc2,tblptrl
  2724  000FDC  CFDD FFF7          	movff	postdec2,tblptrh
  2725  000FE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2726  000FE0  6AF8               	clrf	tblptru,c
  2727  000FE2                     	endif
  2728  000FE2                     	if	0	;tblptru may be non-zero
  2729  000FE2                     	endif
  2730  000FE2  0008               	tblrd		*
  2731  000FE4  50F5               	movf	tablat,w,c
  2732  000FE6  6E4F               	movwf	??_vfpfcnvrt^0,c
  2733  000FE8  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  2734                           
  2735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2736                           ; Switch size 1, requested type "simple"
  2737                           ; Number of cases is 1, Range of values is 0 to 0
  2738                           ; switch strategies available:
  2739                           ; Name         Instructions Cycles
  2740                           ; simple_byte            4     3 (average)
  2741                           ;	Chosen strategy is simple_byte
  2742  000FEA  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2743  000FEC  0A00               	xorlw	0	; case 0
  2744  000FEE  B4D8               	btfsc	status,2,c
  2745  000FF0  EFFC  F007         	goto	l3663
  2746  000FF4  EFE2  F007         	goto	l2987
  2747  000FF8                     l3663:
  2748                           
  2749                           ; BSR set to: 0
  2750                           ; Switch size 1, requested type "simple"
  2751                           ; Number of cases is 5, Range of values is 32 to 48
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte           16     9 (average)
  2755                           ;	Chosen strategy is simple_byte
  2756  000FF8  504F               	movf	??_vfpfcnvrt^0,w,c
  2757  000FFA  0A20               	xorlw	32	; case 32
  2758  000FFC  B4D8               	btfsc	status,2,c
  2759  000FFE  EFDC  F007         	goto	l2979
  2760  001002  0A03               	xorlw	3	; case 35
  2761  001004  B4D8               	btfsc	status,2,c
  2762  001006  EFDF  F007         	goto	l2983
  2763  00100A  0A08               	xorlw	8	; case 43
  2764  00100C  B4D8               	btfsc	status,2,c
  2765  00100E  EFD9  F007         	goto	l2975
  2766  001012  0A06               	xorlw	6	; case 45
  2767  001014  B4D8               	btfsc	status,2,c
  2768  001016  EFCC  F007         	goto	l2967
  2769  00101A  0A1D               	xorlw	29	; case 48
  2770  00101C  B4D8               	btfsc	status,2,c
  2771  00101E  EFD6  F007         	goto	l2971
  2772  001022  EFE2  F007         	goto	l2987
  2773  001026                     l2993:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2777  001026  51AE               	movf	vfpfcnvrt@done& (0+255),w,b
  2778  001028  11AF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2779  00102A  B4D8               	btfsc	status,2,c
  2780  00102C  EF1A  F008         	goto	u2291
  2781  001030  EF1C  F008         	goto	u2290
  2782  001034                     u2291:
  2783  001034  EFE8  F007         	goto	l2991
  2784  001038                     u2290:
  2785  001038                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2788  001038  A057               	btfss	_flags^0,0,c
  2789  00103A  EF21  F008         	goto	u2301
  2790  00103E  EF23  F008         	goto	u2300
  2791  001042                     u2301:
  2792  001042  EF24  F008         	goto	l2997
  2793  001046                     u2300:
  2794  001046                     
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2797  001046  9257               	bcf	_flags^0,1,c
  2798  001048                     l2997:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2802  001048  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2803  00104C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2804  001050  CFDE FFF6          	movff	postinc2,tblptrl
  2805  001054  CFDD FFF7          	movff	postdec2,tblptrh
  2806  001058                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2807  001058  6AF8               	clrf	tblptru,c
  2808  00105A                     	endif
  2809  00105A                     	if	0	;tblptru may be non-zero
  2810  00105A                     	endif
  2811  00105A  0008               	tblrd		*
  2812  00105C  50F5               	movf	tablat,w,c
  2813  00105E  0A2A               	xorlw	42
  2814  001060  A4D8               	btfss	status,2,c
  2815  001062  EF35  F008         	goto	u2311
  2816  001066  EF37  F008         	goto	u2310
  2817  00106A                     u2311:
  2818  00106A  EF60  F008         	goto	l3005
  2819  00106E                     u2310:
  2820  00106E                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2823  00106E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  001072  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  001076  2ADE               	incf	postinc2,f,c
  2826  001078  0E00               	movlw	0
  2827  00107A  22DD               	addwfc	postdec2,f,c
  2828                           
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2830  00107C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2831  001080  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2832  001084  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2833  001088  0E02               	movlw	2
  2834  00108A  26DE               	addwf	postinc2,f,c
  2835  00108C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2836  001090  0E00               	movlw	0
  2837  001092  22DD               	addwfc	postdec2,f,c
  2838  001094  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2839  001098  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2840  00109C  CFDE F08A          	movff	postinc2,_width
  2841  0010A0  CFDD F08B          	movff	postdec2,_width+1
  2842  0010A4                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2845  0010A4  BF8B               	btfsc	(_width+1)& (0+255),7,b
  2846  0010A6  EF59  F008         	goto	u2320
  2847  0010AA  EF57  F008         	goto	u2321
  2848  0010AE                     u2321:
  2849  0010AE  EFA5  F008         	goto	l3015
  2850  0010B2                     u2320:
  2851  0010B2                     
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2854  0010B2  8057               	bsf	_flags^0,0,c
  2855                           
  2856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2857  0010B4  6D8A               	negf	_width& (0+255),b
  2858  0010B6  1F8B               	comf	(_width+1)& (0+255),f,b
  2859  0010B8  B0D8               	btfsc	status,0,c
  2860  0010BA  2B8B               	incf	(_width+1)& (0+255),f,b
  2861  0010BC  EFA5  F008         	goto	l3015
  2862  0010C0                     l3005:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2866  0010C0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2867  0010C4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2868  0010C8  CFDE F00C          	movff	postinc2,atoi@s
  2869  0010CC  CFDD F00D          	movff	postdec2,atoi@s+1
  2870  0010D0  ECAF  F00C         	call	_atoi	;wreg free
  2871  0010D4  C00C  F08A         	movff	?_atoi,_width
  2872  0010D8  C00D  F08B         	movff	?_atoi+1,_width+1
  2873                           
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2875  0010DC  EF77  F008         	goto	l3009
  2876  0010E0                     l3007:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2880  0010E0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2881  0010E4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2882  0010E8  2ADE               	incf	postinc2,f,c
  2883  0010EA  0E00               	movlw	0
  2884  0010EC  22DD               	addwfc	postdec2,f,c
  2885  0010EE                     l3009:
  2886  0010EE  0ED0               	movlw	208
  2887  0010F0  6E4F               	movwf	??_vfpfcnvrt^0,c
  2888  0010F2  0EFF               	movlw	255
  2889  0010F4  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2890  0010F6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2891  0010FA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2892  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  2893  001102  CFDD FFF7          	movff	postdec2,tblptrh
  2894  001106                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2895  001106  6AF8               	clrf	tblptru,c
  2896  001108                     	endif
  2897  001108                     	if	0	;tblptru may be non-zero
  2898  001108                     	endif
  2899  001108  0008               	tblrd		*
  2900  00110A  50F5               	movf	tablat,w,c
  2901  00110C  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2902  00110E  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2903  001110  504F               	movf	??_vfpfcnvrt^0,w,c
  2904  001112  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2905  001114  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2906  001116  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2907  001118  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2908  00111A  E10A               	bnz	u2330
  2909  00111C  0E0A               	movlw	10
  2910  00111E  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2911  001120  A0D8               	btfss	status,0,c
  2912  001122  EF95  F008         	goto	u2331
  2913  001126  EF98  F008         	goto	u2330
  2914  00112A                     u2331:
  2915  00112A  0E01               	movlw	1
  2916  00112C  EF99  F008         	goto	u2340
  2917  001130                     u2330:
  2918  001130  0E00               	movlw	0
  2919  001132                     u2340:
  2920  001132  0100               	movlb	0	; () banked
  2921  001134  6FB0               	movwf	_vfpfcnvrt$1229& (0+255),b
  2922  001136  6BB1               	clrf	(_vfpfcnvrt$1229+1)& (0+255),b
  2923  001138                     
  2924                           ; BSR set to: 0
  2925  001138  51B0               	movf	_vfpfcnvrt$1229& (0+255),w,b
  2926  00113A  11B1               	iorwf	(_vfpfcnvrt$1229+1)& (0+255),w,b
  2927  00113C  A4D8               	btfss	status,2,c
  2928  00113E  EFA3  F008         	goto	u2351
  2929  001142  EFA5  F008         	goto	u2350
  2930  001146                     u2351:
  2931  001146  EF70  F008         	goto	l3007
  2932  00114A                     u2350:
  2933  00114A                     l3015:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2937  00114A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2938  00114E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2939  001152  CFDE FFF6          	movff	postinc2,tblptrl
  2940  001156  CFDD FFF7          	movff	postdec2,tblptrh
  2941  00115A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2942  00115A  6AF8               	clrf	tblptru,c
  2943  00115C                     	endif
  2944  00115C                     	if	0	;tblptru may be non-zero
  2945  00115C                     	endif
  2946  00115C  0008               	tblrd		*
  2947  00115E  50F5               	movf	tablat,w,c
  2948  001160  0A64               	xorlw	100
  2949  001162  B4D8               	btfsc	status,2,c
  2950  001164  EFB6  F008         	goto	u2361
  2951  001168  EFB8  F008         	goto	u2360
  2952  00116C                     u2361:
  2953  00116C  EFCB  F008         	goto	l3019
  2954  001170                     u2360:
  2955  001170                     
  2956                           ; BSR set to: 0
  2957  001170  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2958  001174  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2959  001178  CFDE FFF6          	movff	postinc2,tblptrl
  2960  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  2961  001180                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2962  001180  6AF8               	clrf	tblptru,c
  2963  001182                     	endif
  2964  001182                     	if	0	;tblptru may be non-zero
  2965  001182                     	endif
  2966  001182  0008               	tblrd		*
  2967  001184  50F5               	movf	tablat,w,c
  2968  001186  0A69               	xorlw	105
  2969  001188  A4D8               	btfss	status,2,c
  2970  00118A  EFC9  F008         	goto	u2371
  2971  00118E  EFCB  F008         	goto	u2370
  2972  001192                     u2371:
  2973  001192  EF0B  F009         	goto	l3025
  2974  001196                     u2370:
  2975  001196                     l3019:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2979  001196  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2980  00119A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2981  00119E  2ADE               	incf	postinc2,f,c
  2982  0011A0  0E00               	movlw	0
  2983  0011A2  22DD               	addwfc	postdec2,f,c
  2984                           
  2985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2986  0011A4  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2987  0011A8  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2988  0011AC  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2989  0011B0  0E02               	movlw	2
  2990  0011B2  26DE               	addwf	postinc2,f,c
  2991  0011B4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2992  0011B8  0E00               	movlw	0
  2993  0011BA  22DD               	addwfc	postdec2,f,c
  2994  0011BC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2995  0011C0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2996  0011C4  CFDE F09E          	movff	postinc2,vfpfcnvrt@ll
  2997  0011C8  CFDD F09F          	movff	postdec2,vfpfcnvrt@ll+1
  2998  0011CC  0E00               	movlw	0
  2999  0011CE  BF9F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3000  0011D0  0EFF               	movlw	-1
  3001  0011D2  6FA0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3002  0011D4  6FA1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3003  0011D6  6FA2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3004  0011D8  6FA3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3005  0011DA  6FA4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3006  0011DC  6FA5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3007  0011DE                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3010  0011DE  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  3011  0011E2  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3012  0011E6  C09E  F024         	movff	vfpfcnvrt@ll,dtoa@d
  3013  0011EA  C09F  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3014  0011EE  C0A0  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3015  0011F2  C0A1  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3016  0011F6  C0A2  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3017  0011FA  C0A3  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3018  0011FE  C0A4  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3019  001202  C0A5  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3020  001206  ECD4  F009         	call	_dtoa	;wreg free
  3021  00120A  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  3022  00120E  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3023  001212  EFD3  F009         	goto	l725
  3024  001216                     l3025:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3028  001216  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3029  00121A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3030  00121E  CFDE FFF6          	movff	postinc2,tblptrl
  3031  001222  CFDD FFF7          	movff	postdec2,tblptrh
  3032  001226                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3033  001226  6AF8               	clrf	tblptru,c
  3034  001228                     	endif
  3035  001228                     	if	0	;tblptru may be non-zero
  3036  001228                     	endif
  3037  001228  0008               	tblrd		*
  3038  00122A  50F5               	movf	tablat,w,c
  3039  00122C  0A78               	xorlw	120
  3040  00122E  B4D8               	btfsc	status,2,c
  3041  001230  EF1C  F009         	goto	u2381
  3042  001234  EF1E  F009         	goto	u2380
  3043  001238                     u2381:
  3044  001238  EF31  F009         	goto	l3029
  3045  00123C                     u2380:
  3046  00123C                     
  3047                           ; BSR set to: 0
  3048  00123C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3049  001240  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3050  001244  CFDE FFF6          	movff	postinc2,tblptrl
  3051  001248  CFDD FFF7          	movff	postdec2,tblptrh
  3052  00124C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3053  00124C  6AF8               	clrf	tblptru,c
  3054  00124E                     	endif
  3055  00124E                     	if	0	;tblptru may be non-zero
  3056  00124E                     	endif
  3057  00124E  0008               	tblrd		*
  3058  001250  50F5               	movf	tablat,w,c
  3059  001252  0A58               	xorlw	88
  3060  001254  A4D8               	btfss	status,2,c
  3061  001256  EF2F  F009         	goto	u2391
  3062  00125A  EF31  F009         	goto	u2390
  3063  00125E                     u2391:
  3064  00125E  EF80  F009         	goto	l3039
  3065  001262                     u2390:
  3066  001262                     l3029:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3070  001262  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3071  001266  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3072  00126A  CFDE FFF6          	movff	postinc2,tblptrl
  3073  00126E  CFDD FFF7          	movff	postdec2,tblptrh
  3074  001272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3075  001272  6AF8               	clrf	tblptru,c
  3076  001274                     	endif
  3077  001274                     	if	0	;tblptru may be non-zero
  3078  001274                     	endif
  3079  001274  0008               	tblrd		*
  3080  001276  CFF5 F0B2          	movff	tablat,vfpfcnvrt@c
  3081  00127A                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3084  00127A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3085  00127E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3086  001282  2ADE               	incf	postinc2,f,c
  3087  001284  0E00               	movlw	0
  3088  001286  22DD               	addwfc	postdec2,f,c
  3089  001288                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3092  001288  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3093  00128C  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3094  001290  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3095  001294  0E02               	movlw	2
  3096  001296  26DE               	addwf	postinc2,f,c
  3097  001298  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3098  00129C  0E00               	movlw	0
  3099  00129E  22DD               	addwfc	postdec2,f,c
  3100  0012A0  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3101  0012A4  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3102  0012A8  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3103  0012AC  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3104  0012B0  C051  F0A6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3105  0012B4  C052  F0A7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3106  0012B8  6BA8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3107  0012BA  6BA9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3108  0012BC  6BAA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3109  0012BE  6BAB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3110  0012C0  6BAC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3111  0012C2  6BAD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3112  0012C4                     
  3113                           ; BSR set to: 0
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3115  0012C4  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3116  0012C8  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3117  0012CC  C0A6  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3118  0012D0  C0A7  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3119  0012D4  C0A8  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3120  0012D8  C0A9  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3121  0012DC  C0AA  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3122  0012E0  C0AB  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3123  0012E4  C0AC  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3124  0012E8  C0AD  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3125  0012EC  C0B2  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3126  0012F0  EC44  F00B         	call	_xtoa	;wreg free
  3127  0012F4  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3128  0012F8  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3129  0012FC  EFD3  F009         	goto	l725
  3130  001300                     l3039:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3134  001300  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3135  001304  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3136  001308  CFDE FFF6          	movff	postinc2,tblptrl
  3137  00130C  CFDD FFF7          	movff	postdec2,tblptrh
  3138  001310                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3139  001310  6AF8               	clrf	tblptru,c
  3140  001312                     	endif
  3141  001312                     	if	0	;tblptru may be non-zero
  3142  001312                     	endif
  3143  001312  0008               	tblrd		*
  3144  001314  50F5               	movf	tablat,w,c
  3145  001316  0A25               	xorlw	37
  3146  001318  A4D8               	btfss	status,2,c
  3147  00131A  EF91  F009         	goto	u2401
  3148  00131E  EF93  F009         	goto	u2400
  3149  001322                     u2401:
  3150  001322  EFAA  F009         	goto	l3049
  3151  001326                     u2400:
  3152  001326                     
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3155  001326  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  00132A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  00132E  2ADE               	incf	postinc2,f,c
  3158  001330  0E00               	movlw	0
  3159  001332  22DD               	addwfc	postdec2,f,c
  3160  001334                     
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3163  001334  0E00               	movlw	0
  3164  001336  6E08               	movwf	(fputc@c+1)^0,c
  3165  001338  0E25               	movlw	37
  3166  00133A  6E07               	movwf	fputc@c^0,c
  3167  00133C  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3168  001340  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3169  001344  EC79  F010         	call	_fputc	;wreg free
  3170  001348                     l3045:
  3171                           
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3173  001348  0E00               	movlw	0
  3174  00134A  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3175  00134C  0E01               	movlw	1
  3176  00134E  6E49               	movwf	?_vfpfcnvrt^0,c
  3177  001350  EFD3  F009         	goto	l725
  3178  001354                     l3049:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3182  001354  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3183  001358  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3184  00135C  2ADE               	incf	postinc2,f,c
  3185  00135E  0E00               	movlw	0
  3186  001360  22DD               	addwfc	postdec2,f,c
  3187  001362                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3190  001362  0E00               	movlw	0
  3191  001364  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3192  001366  0E00               	movlw	0
  3193  001368  6E49               	movwf	?_vfpfcnvrt^0,c
  3194  00136A  EFD3  F009         	goto	l725
  3195  00136E                     l3055:
  3196                           
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3198  00136E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3199  001372  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3200  001376  CFDE FFF6          	movff	postinc2,tblptrl
  3201  00137A  CFDD FFF7          	movff	postdec2,tblptrh
  3202  00137E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3203  00137E  6AF8               	clrf	tblptru,c
  3204  001380                     	endif
  3205  001380                     	if	0	;tblptru may be non-zero
  3206  001380                     	endif
  3207  001380  0008               	tblrd		*
  3208  001382  50F5               	movf	tablat,w,c
  3209  001384  6E07               	movwf	fputc@c^0,c
  3210  001386  6A08               	clrf	(fputc@c+1)^0,c
  3211  001388  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3212  00138C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3213  001390  EC79  F010         	call	_fputc	;wreg free
  3214  001394                     
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3216  001394  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3217  001398  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3218  00139C  2ADE               	incf	postinc2,f,c
  3219  00139E  0E00               	movlw	0
  3220  0013A0  22DD               	addwfc	postdec2,f,c
  3221  0013A2  EFA4  F009         	goto	l3045
  3222  0013A6                     l725:
  3223  0013A6  0012               	return		;funcret
  3224  0013A8                     __end_of_vfpfcnvrt:
  3225                           	opt callstack 0
  3226                           
  3227 ;; *************** function _xtoa *****************
  3228 ;; Defined at:
  3229 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3232 ;;		 -> NULL(0), 
  3233 ;;  d               8   35[COMRAM] unsigned long long 
  3234 ;;  x               1   43[COMRAM] unsigned char 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  n               8   60[COMRAM] unsigned long long 
  3237 ;;  c               2   70[COMRAM] int 
  3238 ;;  i               2   68[COMRAM] int 
  3239 ;;  w               2   58[COMRAM] int 
  3240 ;;  p               2   56[COMRAM] int 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  2   33[COMRAM] int 
  3243 ;; Registers used:
  3244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3250 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;Total ram usage:       39 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    9
  3257 ;; This function calls:
  3258 ;;		_isalpha
  3259 ;;		_isupper
  3260 ;;		_pad
  3261 ;;		_toupper
  3262 ;; This function is called by:
  3263 ;;		_vfpfcnvrt
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text23
  3268  001688                     __ptext23:
  3269                           	opt callstack 0
  3270  001688                     _xtoa:
  3271                           	opt callstack 18
  3272  001688                     
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3274  001688  0100               	movlb	0	; () banked
  3275  00168A  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  3276  00168C  EF4A  F00B         	goto	u2041
  3277  001690  EF4C  F00B         	goto	u2040
  3278  001694                     u2041:
  3279  001694  EF4D  F00B         	goto	l2853
  3280  001698                     u2040:
  3281  001698                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3284  001698  9257               	bcf	_flags^0,1,c
  3285  00169A                     l2853:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3289  00169A  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  3290  00169C  EF5A  F00B         	goto	u2050
  3291  0016A0  518D               	movf	(_prec+1)& (0+255),w,b
  3292  0016A2  E106               	bnz	u2051
  3293  0016A4  058C               	decf	_prec& (0+255),w,b
  3294  0016A6  B0D8               	btfsc	status,0,c
  3295  0016A8  EF58  F00B         	goto	u2051
  3296  0016AC  EF5A  F00B         	goto	u2050
  3297  0016B0                     u2051:
  3298  0016B0  EF60  F00B         	goto	l671
  3299  0016B4                     u2050:
  3300  0016B4                     
  3301                           ; BSR set to: 0
  3302  0016B4  0E00               	movlw	0
  3303  0016B6  6E3A               	movwf	(xtoa@p+1)^0,c
  3304  0016B8  0E01               	movlw	1
  3305  0016BA  6E39               	movwf	xtoa@p^0,c
  3306  0016BC  EF64  F00B         	goto	l673
  3307  0016C0                     l671:
  3308                           
  3309                           ; BSR set to: 0
  3310  0016C0  C08C  F039         	movff	_prec,xtoa@p
  3311  0016C4  C08D  F03A         	movff	_prec+1,xtoa@p+1
  3312  0016C8                     l673:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3316  0016C8  C08A  F03B         	movff	_width,xtoa@w
  3317  0016CC  C08B  F03C         	movff	_width+1,xtoa@w+1
  3318                           
  3319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3320  0016D0  A857               	btfss	_flags^0,4,c
  3321  0016D2  EF6D  F00B         	goto	u2061
  3322  0016D6  EF6F  F00B         	goto	u2060
  3323  0016DA                     u2061:
  3324  0016DA  EF73  F00B         	goto	l2859
  3325  0016DE                     u2060:
  3326  0016DE                     
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3329  0016DE  0EFE               	movlw	254
  3330  0016E0  263B               	addwf	xtoa@w^0,f,c
  3331  0016E2  0EFF               	movlw	255
  3332  0016E4  223C               	addwfc	(xtoa@w+1)^0,f,c
  3333  0016E6                     l2859:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3337  0016E6  C024  F03D         	movff	xtoa@d,xtoa@n
  3338  0016EA  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3339  0016EE  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3340  0016F2  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3341  0016F6  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3342  0016FA  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3343  0016FE  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3344  001702  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3345  001706                     
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3348  001706  0E00               	movlw	0
  3349  001708  6E46               	movwf	(xtoa@i+1)^0,c
  3350  00170A  0E1F               	movlw	31
  3351  00170C  6E45               	movwf	xtoa@i^0,c
  3352  00170E                     
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3355  00170E  0E00               	movlw	0
  3356  001710  0101               	movlb	1	; () banked
  3357  001712  6FE7               	movwf	(_dbuf+31)& (0+255),b
  3358                           
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3360  001714  EF3F  F00C         	goto	l2895
  3361  001718                     l2865:
  3362                           
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3364  001718  0645               	decf	xtoa@i^0,f,c
  3365  00171A  A0D8               	btfss	status,0,c
  3366  00171C  0646               	decf	(xtoa@i+1)^0,f,c
  3367  00171E                     
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3369  00171E  0E0F               	movlw	15
  3370  001720  143D               	andwf	xtoa@n^0,w,c
  3371  001722  6E47               	movwf	xtoa@c^0,c
  3372  001724  6A48               	clrf	(xtoa@c+1)^0,c
  3373  001726                     
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3375  001726  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3376  001728  EF9F  F00B         	goto	u2071
  3377  00172C  5048               	movf	(xtoa@c+1)^0,w,c
  3378  00172E  E109               	bnz	u2070
  3379  001730  0E0A               	movlw	10
  3380  001732  5C47               	subwf	xtoa@c^0,w,c
  3381  001734  A0D8               	btfss	status,0,c
  3382  001736  EF9F  F00B         	goto	u2071
  3383  00173A  EFA1  F00B         	goto	u2070
  3384  00173E                     u2071:
  3385  00173E  EFA9  F00B         	goto	l2873
  3386  001742                     u2070:
  3387  001742  0E57               	movlw	87
  3388  001744  2447               	addwf	xtoa@c^0,w,c
  3389  001746  6E47               	movwf	xtoa@c^0,c
  3390  001748  0E00               	movlw	0
  3391  00174A  2048               	addwfc	(xtoa@c+1)^0,w,c
  3392  00174C  6E48               	movwf	(xtoa@c+1)^0,c
  3393  00174E  EFAF  F00B         	goto	l680
  3394  001752                     l2873:
  3395  001752  0E30               	movlw	48
  3396  001754  2447               	addwf	xtoa@c^0,w,c
  3397  001756  6E47               	movwf	xtoa@c^0,c
  3398  001758  0E00               	movlw	0
  3399  00175A  2048               	addwfc	(xtoa@c+1)^0,w,c
  3400  00175C  6E48               	movwf	(xtoa@c+1)^0,c
  3401  00175E                     l680:
  3402  00175E  0EBF               	movlw	191
  3403  001760  6E2D               	movwf	??_xtoa^0,c
  3404  001762  0EFF               	movlw	255
  3405  001764  6E2E               	movwf	(??_xtoa+1)^0,c
  3406  001766  502C               	movf	xtoa@x^0,w,c
  3407  001768  6E2F               	movwf	(??_xtoa+2)^0,c
  3408  00176A  6A30               	clrf	(??_xtoa+3)^0,c
  3409  00176C  502D               	movf	??_xtoa^0,w,c
  3410  00176E  262F               	addwf	(??_xtoa+2)^0,f,c
  3411  001770  502E               	movf	(??_xtoa+1)^0,w,c
  3412  001772  2230               	addwfc	(??_xtoa+3)^0,f,c
  3413  001774  5030               	movf	(??_xtoa+3)^0,w,c
  3414  001776  E10A               	bnz	u2080
  3415  001778  0E1A               	movlw	26
  3416  00177A  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3417  00177C  A0D8               	btfss	status,0,c
  3418  00177E  EFC3  F00B         	goto	u2081
  3419  001782  EFC6  F00B         	goto	u2080
  3420  001786                     u2081:
  3421  001786  0E01               	movlw	1
  3422  001788  EFC7  F00B         	goto	u2090
  3423  00178C                     u2080:
  3424  00178C  0E00               	movlw	0
  3425  00178E                     u2090:
  3426  00178E  6E35               	movwf	_xtoa$1214^0,c
  3427  001790  6A36               	clrf	(_xtoa$1214+1)^0,c
  3428  001792  5035               	movf	_xtoa$1214^0,w,c
  3429  001794  1036               	iorwf	(_xtoa$1214+1)^0,w,c
  3430  001796  B4D8               	btfsc	status,2,c
  3431  001798  EFD0  F00B         	goto	u2101
  3432  00179C  EFD2  F00B         	goto	u2100
  3433  0017A0                     u2101:
  3434  0017A0  EF02  F00C         	goto	l2887
  3435  0017A4                     u2100:
  3436  0017A4  0E9F               	movlw	159
  3437  0017A6  6E2D               	movwf	??_xtoa^0,c
  3438  0017A8  0EFF               	movlw	255
  3439  0017AA  6E2E               	movwf	(??_xtoa+1)^0,c
  3440  0017AC  0E20               	movlw	32
  3441  0017AE  1047               	iorwf	xtoa@c^0,w,c
  3442  0017B0  6E2F               	movwf	(??_xtoa+2)^0,c
  3443  0017B2  0E00               	movlw	0
  3444  0017B4  1048               	iorwf	(xtoa@c+1)^0,w,c
  3445  0017B6  6E30               	movwf	(??_xtoa+3)^0,c
  3446  0017B8  502D               	movf	??_xtoa^0,w,c
  3447  0017BA  262F               	addwf	(??_xtoa+2)^0,f,c
  3448  0017BC  502E               	movf	(??_xtoa+1)^0,w,c
  3449  0017BE  2230               	addwfc	(??_xtoa+3)^0,f,c
  3450  0017C0  5030               	movf	(??_xtoa+3)^0,w,c
  3451  0017C2  E10A               	bnz	u2110
  3452  0017C4  0E1A               	movlw	26
  3453  0017C6  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3454  0017C8  A0D8               	btfss	status,0,c
  3455  0017CA  EFE9  F00B         	goto	u2111
  3456  0017CE  EFEC  F00B         	goto	u2110
  3457  0017D2                     u2111:
  3458  0017D2  0E01               	movlw	1
  3459  0017D4  EFED  F00B         	goto	u2120
  3460  0017D8                     u2110:
  3461  0017D8  0E00               	movlw	0
  3462  0017DA                     u2120:
  3463  0017DA  6E37               	movwf	_xtoa$1215^0,c
  3464  0017DC  6A38               	clrf	(_xtoa$1215+1)^0,c
  3465  0017DE  5037               	movf	_xtoa$1215^0,w,c
  3466  0017E0  1038               	iorwf	(_xtoa$1215+1)^0,w,c
  3467  0017E2  B4D8               	btfsc	status,2,c
  3468  0017E4  EFF6  F00B         	goto	u2131
  3469  0017E8  EFF8  F00B         	goto	u2130
  3470  0017EC                     u2131:
  3471  0017EC  EF02  F00C         	goto	l2887
  3472  0017F0                     u2130:
  3473  0017F0                     
  3474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3475  0017F0  C047  F00B         	movff	xtoa@c,toupper@c
  3476  0017F4  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3477  0017F8  ECF4  F011         	call	_toupper	;wreg free
  3478  0017FC  C00B  F047         	movff	?_toupper,xtoa@c
  3479  001800  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3480  001804                     l2887:
  3481                           
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3483  001804  0EC8               	movlw	low _dbuf
  3484  001806  2445               	addwf	xtoa@i^0,w,c
  3485  001808  6ED9               	movwf	fsr2l,c
  3486  00180A  0E01               	movlw	high _dbuf
  3487  00180C  2046               	addwfc	(xtoa@i+1)^0,w,c
  3488  00180E  6EDA               	movwf	fsr2h,c
  3489  001810  C047  FFDF         	movff	xtoa@c,indf2
  3490  001814                     
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3492  001814  0639               	decf	xtoa@p^0,f,c
  3493  001816  A0D8               	btfss	status,0,c
  3494  001818  063A               	decf	(xtoa@p+1)^0,f,c
  3495  00181A                     
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3497  00181A  063B               	decf	xtoa@w^0,f,c
  3498  00181C  A0D8               	btfss	status,0,c
  3499  00181E  063C               	decf	(xtoa@w+1)^0,f,c
  3500  001820                     
  3501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3502  001820  C03D  F02D         	movff	xtoa@n,??_xtoa
  3503  001824  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3504  001828  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3505  00182C  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3506  001830  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3507  001834  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3508  001838  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3509  00183C  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3510  001840  0E05               	movlw	5
  3511  001842  EF2C  F00C         	goto	u2140
  3512  001846                     u2145:
  3513  001846  90D8               	bcf	status,0,c
  3514  001848  3234               	rrcf	(??_xtoa+7)^0,f,c
  3515  00184A  3233               	rrcf	(??_xtoa+6)^0,f,c
  3516  00184C  3232               	rrcf	(??_xtoa+5)^0,f,c
  3517  00184E  3231               	rrcf	(??_xtoa+4)^0,f,c
  3518  001850  3230               	rrcf	(??_xtoa+3)^0,f,c
  3519  001852  322F               	rrcf	(??_xtoa+2)^0,f,c
  3520  001854  322E               	rrcf	(??_xtoa+1)^0,f,c
  3521  001856  322D               	rrcf	??_xtoa^0,f,c
  3522  001858                     u2140:
  3523  001858  2EE8               	decfsz	wreg,f,c
  3524  00185A  EF23  F00C         	goto	u2145
  3525  00185E  C02D  F03D         	movff	??_xtoa,xtoa@n
  3526  001862  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3527  001866  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3528  00186A  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3529  00186E  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3530  001872  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3531  001876  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3532  00187A  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3533  00187E                     l2895:
  3534                           
  3535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3536  00187E  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3537  001880  EF4B  F00C         	goto	u2151
  3538  001884  5046               	movf	(xtoa@i+1)^0,w,c
  3539  001886  E109               	bnz	u2150
  3540  001888  0E02               	movlw	2
  3541  00188A  5C45               	subwf	xtoa@i^0,w,c
  3542  00188C  A0D8               	btfss	status,0,c
  3543  00188E  EF4B  F00C         	goto	u2151
  3544  001892  EF4D  F00C         	goto	u2150
  3545  001896                     u2151:
  3546  001896  EF7D  F00C         	goto	l694
  3547  00189A                     u2150:
  3548  00189A  503D               	movf	xtoa@n^0,w,c
  3549  00189C  103E               	iorwf	(xtoa@n+1)^0,w,c
  3550  00189E  103F               	iorwf	(xtoa@n+2)^0,w,c
  3551  0018A0  1040               	iorwf	(xtoa@n+3)^0,w,c
  3552  0018A2  1041               	iorwf	(xtoa@n+4)^0,w,c
  3553  0018A4  1042               	iorwf	(xtoa@n+5)^0,w,c
  3554  0018A6  1043               	iorwf	(xtoa@n+6)^0,w,c
  3555  0018A8  1044               	iorwf	(xtoa@n+7)^0,w,c
  3556  0018AA  A4D8               	btfss	status,2,c
  3557  0018AC  EF5A  F00C         	goto	u2161
  3558  0018B0  EF5C  F00C         	goto	u2160
  3559  0018B4                     u2161:
  3560  0018B4  EF8C  F00B         	goto	l2865
  3561  0018B8                     u2160:
  3562  0018B8  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3563  0018BA  EF69  F00C         	goto	u2170
  3564  0018BE  503A               	movf	(xtoa@p+1)^0,w,c
  3565  0018C0  E106               	bnz	u2171
  3566  0018C2  0439               	decf	xtoa@p^0,w,c
  3567  0018C4  B0D8               	btfsc	status,0,c
  3568  0018C6  EF67  F00C         	goto	u2171
  3569  0018CA  EF69  F00C         	goto	u2170
  3570  0018CE                     u2171:
  3571  0018CE  EF8C  F00B         	goto	l2865
  3572  0018D2                     u2170:
  3573  0018D2  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3574  0018D4  EF74  F00C         	goto	u2181
  3575  0018D8  503C               	movf	(xtoa@w+1)^0,w,c
  3576  0018DA  E108               	bnz	u2180
  3577  0018DC  043B               	decf	xtoa@w^0,w,c
  3578  0018DE  A0D8               	btfss	status,0,c
  3579  0018E0  EF74  F00C         	goto	u2181
  3580  0018E4  EF76  F00C         	goto	u2180
  3581  0018E8                     u2181:
  3582  0018E8  EF7D  F00C         	goto	l694
  3583  0018EC                     u2180:
  3584  0018EC  B257               	btfsc	_flags^0,1,c
  3585  0018EE  EF7B  F00C         	goto	u2191
  3586  0018F2  EF7D  F00C         	goto	u2190
  3587  0018F6                     u2191:
  3588  0018F6  EF8C  F00B         	goto	l2865
  3589  0018FA                     u2190:
  3590  0018FA                     l694:
  3591                           
  3592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3593  0018FA  A857               	btfss	_flags^0,4,c
  3594  0018FC  EF82  F00C         	goto	u2201
  3595  001900  EF84  F00C         	goto	u2200
  3596  001904                     u2201:
  3597  001904  EF9A  F00C         	goto	l2911
  3598  001908                     u2200:
  3599  001908                     
  3600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3601  001908  0645               	decf	xtoa@i^0,f,c
  3602  00190A  A0D8               	btfss	status,0,c
  3603  00190C  0646               	decf	(xtoa@i+1)^0,f,c
  3604  00190E                     
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3606  00190E  0EC8               	movlw	low _dbuf
  3607  001910  2445               	addwf	xtoa@i^0,w,c
  3608  001912  6ED9               	movwf	fsr2l,c
  3609  001914  0E01               	movlw	high _dbuf
  3610  001916  2046               	addwfc	(xtoa@i+1)^0,w,c
  3611  001918  6EDA               	movwf	fsr2h,c
  3612  00191A  C02C  FFDF         	movff	xtoa@x,indf2
  3613  00191E                     
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3615  00191E  0645               	decf	xtoa@i^0,f,c
  3616  001920  A0D8               	btfss	status,0,c
  3617  001922  0646               	decf	(xtoa@i+1)^0,f,c
  3618                           
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3620  001924  0EC8               	movlw	low _dbuf
  3621  001926  2445               	addwf	xtoa@i^0,w,c
  3622  001928  6ED9               	movwf	fsr2l,c
  3623  00192A  0E01               	movlw	high _dbuf
  3624  00192C  2046               	addwfc	(xtoa@i+1)^0,w,c
  3625  00192E  6EDA               	movwf	fsr2h,c
  3626  001930  0E30               	movlw	48
  3627  001932  6EDF               	movwf	indf2,c
  3628  001934                     l2911:
  3629                           
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3631  001934  C022  F017         	movff	xtoa@fp,pad@fp
  3632  001938  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3633  00193C  0EC8               	movlw	low _dbuf
  3634  00193E  2445               	addwf	xtoa@i^0,w,c
  3635  001940  6E19               	movwf	pad@buf^0,c
  3636  001942  0E01               	movlw	high _dbuf
  3637  001944  2046               	addwfc	(xtoa@i+1)^0,w,c
  3638  001946  6E1A               	movwf	(pad@buf+1)^0,c
  3639  001948  C03B  F01B         	movff	xtoa@w,pad@p
  3640  00194C  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3641  001950  EC58  F00F         	call	_pad	;wreg free
  3642  001954  C017  F022         	movff	?_pad,?_xtoa
  3643  001958  C018  F023         	movff	?_pad+1,?_xtoa+1
  3644  00195C  0012               	return		;funcret
  3645  00195E                     __end_of_xtoa:
  3646                           	opt callstack 0
  3647                           
  3648 ;; *************** function _toupper *****************
  3649 ;; Defined at:
  3650 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  c               2   10[COMRAM] int 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2   10[COMRAM] int 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;Total ram usage:        8 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    5
  3671 ;; This function calls:
  3672 ;;		_islower
  3673 ;; This function is called by:
  3674 ;;		_xtoa
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text24
  3679  0023E8                     __ptext24:
  3680                           	opt callstack 0
  3681  0023E8                     _toupper:
  3682                           	opt callstack 21
  3683  0023E8  0E9F               	movlw	159
  3684  0023EA  6E0D               	movwf	??_toupper^0,c
  3685  0023EC  0EFF               	movlw	255
  3686  0023EE  6E0E               	movwf	(??_toupper+1)^0,c
  3687  0023F0  C00B  F00F         	movff	toupper@c,??_toupper+2
  3688  0023F4  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3689  0023F8  500D               	movf	??_toupper^0,w,c
  3690  0023FA  260F               	addwf	(??_toupper+2)^0,f,c
  3691  0023FC  500E               	movf	(??_toupper+1)^0,w,c
  3692  0023FE  2210               	addwfc	(??_toupper+3)^0,f,c
  3693  002400  5010               	movf	(??_toupper+3)^0,w,c
  3694  002402  E10A               	bnz	u1690
  3695  002404  0E1A               	movlw	26
  3696  002406  5C0F               	subwf	(??_toupper+2)^0,w,c
  3697  002408  A0D8               	btfss	status,0,c
  3698  00240A  EF09  F012         	goto	u1691
  3699  00240E  EF0C  F012         	goto	u1690
  3700  002412                     u1691:
  3701  002412  0E01               	movlw	1
  3702  002414  EF0D  F012         	goto	u1700
  3703  002418                     u1690:
  3704  002418  0E00               	movlw	0
  3705  00241A                     u1700:
  3706  00241A  6E11               	movwf	_toupper$1779^0,c
  3707  00241C  6A12               	clrf	(_toupper$1779+1)^0,c
  3708  00241E  5011               	movf	_toupper$1779^0,w,c
  3709  002420  1012               	iorwf	(_toupper$1779+1)^0,w,c
  3710  002422  B4D8               	btfsc	status,2,c
  3711  002424  EF16  F012         	goto	u1711
  3712  002428  EF18  F012         	goto	u1710
  3713  00242C                     u1711:
  3714  00242C  EF1E  F012         	goto	l1511
  3715  002430                     u1710:
  3716  002430  0E5F               	movlw	95
  3717  002432  140B               	andwf	toupper@c^0,w,c
  3718  002434  6E0B               	movwf	?_toupper^0,c
  3719  002436  6A0C               	clrf	(?_toupper+1)^0,c
  3720  002438  EF22  F012         	goto	l1516
  3721  00243C                     l1511:
  3722  00243C  C00B  F00B         	movff	toupper@c,?_toupper
  3723  002440  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3724  002444                     l1516:
  3725  002444  0012               	return		;funcret
  3726  002446                     __end_of_toupper:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _islower *****************
  3730 ;; Defined at:
  3731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  c               2    4[COMRAM] int 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  2    4[COMRAM] int 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;Total ram usage:        6 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    4
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_toupper
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text25
  3760  00273A                     __ptext25:
  3761                           	opt callstack 0
  3762  00273A                     _islower:
  3763                           	opt callstack 21
  3764  00273A  0E9F               	movlw	159
  3765  00273C  6E07               	movwf	??_islower^0,c
  3766  00273E  0EFF               	movlw	255
  3767  002740  6E08               	movwf	(??_islower+1)^0,c
  3768  002742  C005  F009         	movff	islower@c,??_islower+2
  3769  002746  C006  F00A         	movff	islower@c+1,??_islower+3
  3770  00274A  5007               	movf	??_islower^0,w,c
  3771  00274C  2609               	addwf	(??_islower+2)^0,f,c
  3772  00274E  5008               	movf	(??_islower+1)^0,w,c
  3773  002750  220A               	addwfc	(??_islower+3)^0,f,c
  3774  002752  500A               	movf	(??_islower+3)^0,w,c
  3775  002754  E10A               	bnz	u1580
  3776  002756  0E1A               	movlw	26
  3777  002758  5C09               	subwf	(??_islower+2)^0,w,c
  3778  00275A  A0D8               	btfss	status,0,c
  3779  00275C  EFB2  F013         	goto	u1581
  3780  002760  EFB5  F013         	goto	u1580
  3781  002764                     u1581:
  3782  002764  0E01               	movlw	1
  3783  002766  EFB6  F013         	goto	u1590
  3784  00276A                     u1580:
  3785  00276A  0E00               	movlw	0
  3786  00276C                     u1590:
  3787  00276C  6E05               	movwf	?_islower^0,c
  3788  00276E  6A06               	clrf	(?_islower+1)^0,c
  3789  002770  0012               	return		;funcret
  3790  002772                     __end_of_islower:
  3791                           	opt callstack 0
  3792                           
  3793 ;; *************** function _isupper *****************
  3794 ;; Defined at:
  3795 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  c               2    4[COMRAM] int 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  2    4[COMRAM] int 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;Total ram usage:        6 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    4
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_xtoa
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text26
  3824  002772                     __ptext26:
  3825                           	opt callstack 0
  3826  002772                     _isupper:
  3827                           	opt callstack 22
  3828  002772  0EBF               	movlw	191
  3829  002774  6E07               	movwf	??_isupper^0,c
  3830  002776  0EFF               	movlw	255
  3831  002778  6E08               	movwf	(??_isupper+1)^0,c
  3832  00277A  C005  F009         	movff	isupper@c,??_isupper+2
  3833  00277E  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3834  002782  5007               	movf	??_isupper^0,w,c
  3835  002784  2609               	addwf	(??_isupper+2)^0,f,c
  3836  002786  5008               	movf	(??_isupper+1)^0,w,c
  3837  002788  220A               	addwfc	(??_isupper+3)^0,f,c
  3838  00278A  500A               	movf	(??_isupper+3)^0,w,c
  3839  00278C  E10A               	bnz	u1650
  3840  00278E  0E1A               	movlw	26
  3841  002790  5C09               	subwf	(??_isupper+2)^0,w,c
  3842  002792  A0D8               	btfss	status,0,c
  3843  002794  EFCE  F013         	goto	u1651
  3844  002798  EFD1  F013         	goto	u1650
  3845  00279C                     u1651:
  3846  00279C  0E01               	movlw	1
  3847  00279E  EFD2  F013         	goto	u1660
  3848  0027A2                     u1650:
  3849  0027A2  0E00               	movlw	0
  3850  0027A4                     u1660:
  3851  0027A4  6E05               	movwf	?_isupper^0,c
  3852  0027A6  6A06               	clrf	(?_isupper+1)^0,c
  3853  0027A8  0012               	return		;funcret
  3854  0027AA                     __end_of_isupper:
  3855                           	opt callstack 0
  3856                           
  3857 ;; *************** function _isalpha *****************
  3858 ;; Defined at:
  3859 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  c               2    4[COMRAM] int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  2    4[COMRAM] int 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;Total ram usage:        6 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_xtoa
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text27
  3888  0026FE                     __ptext27:
  3889                           	opt callstack 0
  3890  0026FE                     _isalpha:
  3891                           	opt callstack 22
  3892  0026FE  0E9F               	movlw	159
  3893  002700  6E07               	movwf	??_isalpha^0,c
  3894  002702  0EFF               	movlw	255
  3895  002704  6E08               	movwf	(??_isalpha+1)^0,c
  3896  002706  0E20               	movlw	32
  3897  002708  1005               	iorwf	isalpha@c^0,w,c
  3898  00270A  6E09               	movwf	(??_isalpha+2)^0,c
  3899  00270C  0E00               	movlw	0
  3900  00270E  1006               	iorwf	(isalpha@c+1)^0,w,c
  3901  002710  6E0A               	movwf	(??_isalpha+3)^0,c
  3902  002712  5007               	movf	??_isalpha^0,w,c
  3903  002714  2609               	addwf	(??_isalpha+2)^0,f,c
  3904  002716  5008               	movf	(??_isalpha+1)^0,w,c
  3905  002718  220A               	addwfc	(??_isalpha+3)^0,f,c
  3906  00271A  500A               	movf	(??_isalpha+3)^0,w,c
  3907  00271C  E10A               	bnz	u1670
  3908  00271E  0E1A               	movlw	26
  3909  002720  5C09               	subwf	(??_isalpha+2)^0,w,c
  3910  002722  A0D8               	btfss	status,0,c
  3911  002724  EF96  F013         	goto	u1671
  3912  002728  EF99  F013         	goto	u1670
  3913  00272C                     u1671:
  3914  00272C  0E01               	movlw	1
  3915  00272E  EF9A  F013         	goto	u1680
  3916  002732                     u1670:
  3917  002732  0E00               	movlw	0
  3918  002734                     u1680:
  3919  002734  6E05               	movwf	?_isalpha^0,c
  3920  002736  6A06               	clrf	(?_isalpha+1)^0,c
  3921  002738  0012               	return		;funcret
  3922  00273A                     __end_of_isalpha:
  3923                           	opt callstack 0
  3924                           
  3925 ;; *************** function _dtoa *****************
  3926 ;; Defined at:
  3927 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3930 ;;		 -> NULL(0), 
  3931 ;;  d               8   35[COMRAM] long long 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  n               8   59[COMRAM] long long 
  3934 ;;  i               2   67[COMRAM] int 
  3935 ;;  s               2   57[COMRAM] int 
  3936 ;;  w               2   55[COMRAM] int 
  3937 ;;  p               2   53[COMRAM] int 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  2   33[COMRAM] int 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3947 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;Total ram usage:       36 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    9
  3954 ;; This function calls:
  3955 ;;		___aodiv
  3956 ;;		___aomod
  3957 ;;		_abs
  3958 ;;		_pad
  3959 ;; This function is called by:
  3960 ;;		_vfpfcnvrt
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text28
  3965  0013A8                     __ptext28:
  3966                           	opt callstack 0
  3967  0013A8                     _dtoa:
  3968                           	opt callstack 18
  3969  0013A8                     
  3970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3971  0013A8  C024  F03C         	movff	dtoa@d,dtoa@n
  3972  0013AC  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3973  0013B0  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3974  0013B4  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3975  0013B8  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3976  0013BC  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3977  0013C0  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3978  0013C4  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  3979  0013C8                     
  3980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3981  0013C8  BE43               	btfsc	(dtoa@n+7)^0,7,c
  3982  0013CA  EFE9  F009         	goto	u1891
  3983  0013CE  EFEC  F009         	goto	u1890
  3984  0013D2                     u1891:
  3985  0013D2  0E01               	movlw	1
  3986  0013D4  EFED  F009         	goto	u1900
  3987  0013D8                     u1890:
  3988  0013D8  0E00               	movlw	0
  3989  0013DA                     u1900:
  3990  0013DA  6E3A               	movwf	dtoa@s^0,c
  3991  0013DC  6A3B               	clrf	(dtoa@s+1)^0,c
  3992                           
  3993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3994  0013DE  503A               	movf	dtoa@s^0,w,c
  3995  0013E0  103B               	iorwf	(dtoa@s+1)^0,w,c
  3996  0013E2  B4D8               	btfsc	status,2,c
  3997  0013E4  EFF6  F009         	goto	u1911
  3998  0013E8  EFF8  F009         	goto	u1910
  3999  0013EC                     u1911:
  4000  0013EC  EF08  F00A         	goto	l2793
  4001  0013F0                     u1910:
  4002  0013F0                     
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4004  0013F0  1E43               	comf	(dtoa@n+7)^0,f,c
  4005  0013F2  1E42               	comf	(dtoa@n+6)^0,f,c
  4006  0013F4  1E41               	comf	(dtoa@n+5)^0,f,c
  4007  0013F6  1E40               	comf	(dtoa@n+4)^0,f,c
  4008  0013F8  1E3F               	comf	(dtoa@n+3)^0,f,c
  4009  0013FA  1E3E               	comf	(dtoa@n+2)^0,f,c
  4010  0013FC  1E3D               	comf	(dtoa@n+1)^0,f,c
  4011  0013FE  6C3C               	negf	dtoa@n^0,c
  4012  001400  0E00               	movlw	0
  4013  001402  223D               	addwfc	(dtoa@n+1)^0,f,c
  4014  001404  223E               	addwfc	(dtoa@n+2)^0,f,c
  4015  001406  223F               	addwfc	(dtoa@n+3)^0,f,c
  4016  001408  2240               	addwfc	(dtoa@n+4)^0,f,c
  4017  00140A  2241               	addwfc	(dtoa@n+5)^0,f,c
  4018  00140C  2242               	addwfc	(dtoa@n+6)^0,f,c
  4019  00140E  2243               	addwfc	(dtoa@n+7)^0,f,c
  4020  001410                     l2793:
  4021                           
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4023  001410  0100               	movlb	0	; () banked
  4024  001412  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4025  001414  EF0E  F00A         	goto	u1921
  4026  001418  EF10  F00A         	goto	u1920
  4027  00141C                     u1921:
  4028  00141C  EF11  F00A         	goto	l2797
  4029  001420                     u1920:
  4030  001420                     
  4031                           ; BSR set to: 0
  4032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4033  001420  9257               	bcf	_flags^0,1,c
  4034  001422                     l2797:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4038  001422  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4039  001424  EF1E  F00A         	goto	u1930
  4040  001428  518D               	movf	(_prec+1)& (0+255),w,b
  4041  00142A  E106               	bnz	u1931
  4042  00142C  058C               	decf	_prec& (0+255),w,b
  4043  00142E  B0D8               	btfsc	status,0,c
  4044  001430  EF1C  F00A         	goto	u1931
  4045  001434  EF1E  F00A         	goto	u1930
  4046  001438                     u1931:
  4047  001438  EF24  F00A         	goto	l646
  4048  00143C                     u1930:
  4049  00143C                     
  4050                           ; BSR set to: 0
  4051  00143C  0E00               	movlw	0
  4052  00143E  6E37               	movwf	(dtoa@p+1)^0,c
  4053  001440  0E01               	movlw	1
  4054  001442  6E36               	movwf	dtoa@p^0,c
  4055  001444  EF28  F00A         	goto	l648
  4056  001448                     l646:
  4057                           
  4058                           ; BSR set to: 0
  4059  001448  C08C  F036         	movff	_prec,dtoa@p
  4060  00144C  C08D  F037         	movff	_prec+1,dtoa@p+1
  4061  001450                     l648:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4065  001450  C08A  F038         	movff	_width,dtoa@w
  4066  001454  C08B  F039         	movff	_width+1,dtoa@w+1
  4067  001458                     
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4070  001458  503A               	movf	dtoa@s^0,w,c
  4071  00145A  103B               	iorwf	(dtoa@s+1)^0,w,c
  4072  00145C  A4D8               	btfss	status,2,c
  4073  00145E  EF33  F00A         	goto	u1941
  4074  001462  EF35  F00A         	goto	u1940
  4075  001466                     u1941:
  4076  001466  EF3C  F00A         	goto	l2805
  4077  00146A                     u1940:
  4078  00146A                     
  4079                           ; BSR set to: 0
  4080  00146A  A457               	btfss	_flags^0,2,c
  4081  00146C  EF3A  F00A         	goto	u1951
  4082  001470  EF3C  F00A         	goto	u1950
  4083  001474                     u1951:
  4084  001474  EF3F  F00A         	goto	l2807
  4085  001478                     u1950:
  4086  001478                     l2805:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4090  001478  0638               	decf	dtoa@w^0,f,c
  4091  00147A  A0D8               	btfss	status,0,c
  4092  00147C  0639               	decf	(dtoa@w+1)^0,f,c
  4093  00147E                     l2807:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4097  00147E  0E00               	movlw	0
  4098  001480  6E45               	movwf	(dtoa@i+1)^0,c
  4099  001482  0E1F               	movlw	31
  4100  001484  6E44               	movwf	dtoa@i^0,c
  4101  001486                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4104  001486  0E00               	movlw	0
  4105  001488  0101               	movlb	1	; () banked
  4106  00148A  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4107                           
  4108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4109  00148C  EFC4  F00A         	goto	l2821
  4110  001490                     l2811:
  4111                           
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4113  001490  0644               	decf	dtoa@i^0,f,c
  4114  001492  A0D8               	btfss	status,0,c
  4115  001494  0645               	decf	(dtoa@i+1)^0,f,c
  4116  001496                     
  4117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4118  001496  0EC8               	movlw	low _dbuf
  4119  001498  2444               	addwf	dtoa@i^0,w,c
  4120  00149A  6ED9               	movwf	fsr2l,c
  4121  00149C  0E01               	movlw	high _dbuf
  4122  00149E  2045               	addwfc	(dtoa@i+1)^0,w,c
  4123  0014A0  6EDA               	movwf	fsr2h,c
  4124  0014A2  C03C  F005         	movff	dtoa@n,___aomod@dividend
  4125  0014A6  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  4126  0014AA  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  4127  0014AE  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  4128  0014B2  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  4129  0014B6  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  4130  0014BA  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  4131  0014BE  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  4132  0014C2  0E0A               	movlw	10
  4133  0014C4  6E0D               	movwf	___aomod@divisor^0,c
  4134  0014C6  0E00               	movlw	0
  4135  0014C8  6E0E               	movwf	(___aomod@divisor+1)^0,c
  4136  0014CA  0E00               	movlw	0
  4137  0014CC  6E0F               	movwf	(___aomod@divisor+2)^0,c
  4138  0014CE  0E00               	movlw	0
  4139  0014D0  6E10               	movwf	(___aomod@divisor+3)^0,c
  4140  0014D2  0E00               	movlw	0
  4141  0014D4  6E11               	movwf	(___aomod@divisor+4)^0,c
  4142  0014D6  0E00               	movlw	0
  4143  0014D8  6E12               	movwf	(___aomod@divisor+5)^0,c
  4144  0014DA  0E00               	movlw	0
  4145  0014DC  6E13               	movwf	(___aomod@divisor+6)^0,c
  4146  0014DE  0E00               	movlw	0
  4147  0014E0  6E14               	movwf	(___aomod@divisor+7)^0,c
  4148  0014E2  EC40  F00E         	call	___aomod	;wreg free
  4149  0014E6  C005  F02C         	movff	?___aomod,??_dtoa
  4150  0014EA  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  4151  0014EE  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  4152  0014F2  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  4153  0014F6  C009  F030         	movff	?___aomod+4,??_dtoa+4
  4154  0014FA  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  4155  0014FE  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  4156  001502  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  4157  001506  C02C  F017         	movff	??_dtoa,abs@a
  4158  00150A  C02E  F018         	movff	??_dtoa+2,abs@a+1
  4159  00150E  EC5F  F013         	call	_abs	;wreg free
  4160  001512  5017               	movf	?_abs^0,w,c
  4161  001514  0F30               	addlw	48
  4162  001516  6EDF               	movwf	indf2,c
  4163  001518                     
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4165  001518  0636               	decf	dtoa@p^0,f,c
  4166  00151A  A0D8               	btfss	status,0,c
  4167  00151C  0637               	decf	(dtoa@p+1)^0,f,c
  4168  00151E                     
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4170  00151E  0638               	decf	dtoa@w^0,f,c
  4171  001520  A0D8               	btfss	status,0,c
  4172  001522  0639               	decf	(dtoa@w+1)^0,f,c
  4173  001524                     
  4174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4175  001524  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  4176  001528  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  4177  00152C  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  4178  001530  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  4179  001534  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  4180  001538  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  4181  00153C  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  4182  001540  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  4183  001544  0E0A               	movlw	10
  4184  001546  6E0D               	movwf	___aodiv@divisor^0,c
  4185  001548  0E00               	movlw	0
  4186  00154A  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  4187  00154C  0E00               	movlw	0
  4188  00154E  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  4189  001550  0E00               	movlw	0
  4190  001552  6E10               	movwf	(___aodiv@divisor+3)^0,c
  4191  001554  0E00               	movlw	0
  4192  001556  6E11               	movwf	(___aodiv@divisor+4)^0,c
  4193  001558  0E00               	movlw	0
  4194  00155A  6E12               	movwf	(___aodiv@divisor+5)^0,c
  4195  00155C  0E00               	movlw	0
  4196  00155E  6E13               	movwf	(___aodiv@divisor+6)^0,c
  4197  001560  0E00               	movlw	0
  4198  001562  6E14               	movwf	(___aodiv@divisor+7)^0,c
  4199  001564  EC7C  F00D         	call	___aodiv	;wreg free
  4200  001568  C005  F03C         	movff	?___aodiv,dtoa@n
  4201  00156C  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  4202  001570  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  4203  001574  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  4204  001578  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  4205  00157C  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  4206  001580  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  4207  001584  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  4208  001588                     l2821:
  4209                           
  4210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4211  001588  BE45               	btfsc	(dtoa@i+1)^0,7,c
  4212  00158A  EFCF  F00A         	goto	u1961
  4213  00158E  5045               	movf	(dtoa@i+1)^0,w,c
  4214  001590  E108               	bnz	u1960
  4215  001592  0444               	decf	dtoa@i^0,w,c
  4216  001594  A0D8               	btfss	status,0,c
  4217  001596  EFCF  F00A         	goto	u1961
  4218  00159A  EFD1  F00A         	goto	u1960
  4219  00159E                     u1961:
  4220  00159E  EF01  F00B         	goto	l2831
  4221  0015A2                     u1960:
  4222  0015A2  503C               	movf	dtoa@n^0,w,c
  4223  0015A4  103D               	iorwf	(dtoa@n+1)^0,w,c
  4224  0015A6  103E               	iorwf	(dtoa@n+2)^0,w,c
  4225  0015A8  103F               	iorwf	(dtoa@n+3)^0,w,c
  4226  0015AA  1040               	iorwf	(dtoa@n+4)^0,w,c
  4227  0015AC  1041               	iorwf	(dtoa@n+5)^0,w,c
  4228  0015AE  1042               	iorwf	(dtoa@n+6)^0,w,c
  4229  0015B0  1043               	iorwf	(dtoa@n+7)^0,w,c
  4230  0015B2  A4D8               	btfss	status,2,c
  4231  0015B4  EFDE  F00A         	goto	u1971
  4232  0015B8  EFE0  F00A         	goto	u1970
  4233  0015BC                     u1971:
  4234  0015BC  EF48  F00A         	goto	l2811
  4235  0015C0                     u1970:
  4236  0015C0  BE37               	btfsc	(dtoa@p+1)^0,7,c
  4237  0015C2  EFED  F00A         	goto	u1980
  4238  0015C6  5037               	movf	(dtoa@p+1)^0,w,c
  4239  0015C8  E106               	bnz	u1981
  4240  0015CA  0436               	decf	dtoa@p^0,w,c
  4241  0015CC  B0D8               	btfsc	status,0,c
  4242  0015CE  EFEB  F00A         	goto	u1981
  4243  0015D2  EFED  F00A         	goto	u1980
  4244  0015D6                     u1981:
  4245  0015D6  EF48  F00A         	goto	l2811
  4246  0015DA                     u1980:
  4247  0015DA  BE39               	btfsc	(dtoa@w+1)^0,7,c
  4248  0015DC  EFF8  F00A         	goto	u1991
  4249  0015E0  5039               	movf	(dtoa@w+1)^0,w,c
  4250  0015E2  E108               	bnz	u1990
  4251  0015E4  0438               	decf	dtoa@w^0,w,c
  4252  0015E6  A0D8               	btfss	status,0,c
  4253  0015E8  EFF8  F00A         	goto	u1991
  4254  0015EC  EFFA  F00A         	goto	u1990
  4255  0015F0                     u1991:
  4256  0015F0  EF01  F00B         	goto	l2831
  4257  0015F4                     u1990:
  4258  0015F4  B257               	btfsc	_flags^0,1,c
  4259  0015F6  EFFF  F00A         	goto	u2001
  4260  0015FA  EF01  F00B         	goto	u2000
  4261  0015FE                     u2001:
  4262  0015FE  EF48  F00A         	goto	l2811
  4263  001602                     u2000:
  4264  001602                     l2831:
  4265                           
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4267  001602  503A               	movf	dtoa@s^0,w,c
  4268  001604  103B               	iorwf	(dtoa@s+1)^0,w,c
  4269  001606  A4D8               	btfss	status,2,c
  4270  001608  EF08  F00B         	goto	u2011
  4271  00160C  EF0A  F00B         	goto	u2010
  4272  001610                     u2011:
  4273  001610  EF11  F00B         	goto	l2835
  4274  001614                     u2010:
  4275  001614  A457               	btfss	_flags^0,2,c
  4276  001616  EF0F  F00B         	goto	u2021
  4277  00161A  EF11  F00B         	goto	u2020
  4278  00161E                     u2021:
  4279  00161E  EF2F  F00B         	goto	l2845
  4280  001622                     u2020:
  4281  001622                     l2835:
  4282                           
  4283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4284  001622  0644               	decf	dtoa@i^0,f,c
  4285  001624  A0D8               	btfss	status,0,c
  4286  001626  0645               	decf	(dtoa@i+1)^0,f,c
  4287  001628                     
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4289  001628  503A               	movf	dtoa@s^0,w,c
  4290  00162A  103B               	iorwf	(dtoa@s+1)^0,w,c
  4291  00162C  A4D8               	btfss	status,2,c
  4292  00162E  EF1B  F00B         	goto	u2031
  4293  001632  EF1D  F00B         	goto	u2030
  4294  001636                     u2031:
  4295  001636  EF23  F00B         	goto	l2841
  4296  00163A                     u2030:
  4297  00163A  0E00               	movlw	0
  4298  00163C  6E35               	movwf	(_dtoa$1203+1)^0,c
  4299  00163E  0E2B               	movlw	43
  4300  001640  6E34               	movwf	_dtoa$1203^0,c
  4301  001642  EF27  F00B         	goto	l2843
  4302  001646                     l2841:
  4303  001646  0E00               	movlw	0
  4304  001648  6E35               	movwf	(_dtoa$1203+1)^0,c
  4305  00164A  0E2D               	movlw	45
  4306  00164C  6E34               	movwf	_dtoa$1203^0,c
  4307  00164E                     l2843:
  4308  00164E  0EC8               	movlw	low _dbuf
  4309  001650  2444               	addwf	dtoa@i^0,w,c
  4310  001652  6ED9               	movwf	fsr2l,c
  4311  001654  0E01               	movlw	high _dbuf
  4312  001656  2045               	addwfc	(dtoa@i+1)^0,w,c
  4313  001658  6EDA               	movwf	fsr2h,c
  4314  00165A  C034  FFDF         	movff	_dtoa$1203,indf2
  4315  00165E                     l2845:
  4316                           
  4317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4318  00165E  C022  F017         	movff	dtoa@fp,pad@fp
  4319  001662  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  4320  001666  0EC8               	movlw	low _dbuf
  4321  001668  2444               	addwf	dtoa@i^0,w,c
  4322  00166A  6E19               	movwf	pad@buf^0,c
  4323  00166C  0E01               	movlw	high _dbuf
  4324  00166E  2045               	addwfc	(dtoa@i+1)^0,w,c
  4325  001670  6E1A               	movwf	(pad@buf+1)^0,c
  4326  001672  C038  F01B         	movff	dtoa@w,pad@p
  4327  001676  C039  F01C         	movff	dtoa@w+1,pad@p+1
  4328  00167A  EC58  F00F         	call	_pad	;wreg free
  4329  00167E  C017  F022         	movff	?_pad,?_dtoa
  4330  001682  C018  F023         	movff	?_pad+1,?_dtoa+1
  4331  001686  0012               	return		;funcret
  4332  001688                     __end_of_dtoa:
  4333                           	opt callstack 0
  4334                           
  4335 ;; *************** function _pad *****************
  4336 ;; Defined at:
  4337 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4340 ;;		 -> NULL(0), 
  4341 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4342 ;;		 -> dbuf(32), 
  4343 ;;  p               2   26[COMRAM] int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  w               2   31[COMRAM] int 
  4346 ;;  i               2   29[COMRAM] int 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  2   22[COMRAM] int 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4356 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;Total ram usage:       11 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    8
  4363 ;; This function calls:
  4364 ;;		_fputc
  4365 ;;		_fputs
  4366 ;;		_strlen
  4367 ;; This function is called by:
  4368 ;;		_dtoa
  4369 ;;		_xtoa
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text29
  4374  001EB0                     __ptext29:
  4375                           	opt callstack 0
  4376  001EB0                     _pad:
  4377                           	opt callstack 18
  4378  001EB0                     
  4379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4380  001EB0  A057               	btfss	_flags^0,0,c
  4381  001EB2  EF5D  F00F         	goto	u1601
  4382  001EB6  EF5F  F00F         	goto	u1600
  4383  001EBA                     u1601:
  4384  001EBA  EF69  F00F         	goto	l2645
  4385  001EBE                     u1600:
  4386  001EBE                     
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4388  001EBE  C019  F010         	movff	pad@buf,fputs@s
  4389  001EC2  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4390  001EC6  C017  F012         	movff	pad@fp,fputs@fp
  4391  001ECA  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4392  001ECE  EC1B  F013         	call	_fputs	;wreg free
  4393  001ED2                     l2645:
  4394                           
  4395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4396  001ED2  BE1C               	btfsc	(pad@p+1)^0,7,c
  4397  001ED4  EF6E  F00F         	goto	u1611
  4398  001ED8  EF70  F00F         	goto	u1610
  4399  001EDC                     u1611:
  4400  001EDC  EF76  F00F         	goto	l2649
  4401  001EE0                     u1610:
  4402  001EE0  C01B  F020         	movff	pad@p,pad@w
  4403  001EE4  C01C  F021         	movff	pad@p+1,pad@w+1
  4404  001EE8  EF7A  F00F         	goto	l635
  4405  001EEC                     l2649:
  4406  001EEC  0E00               	movlw	0
  4407  001EEE  6E21               	movwf	(pad@w+1)^0,c
  4408  001EF0  0E00               	movlw	0
  4409  001EF2  6E20               	movwf	pad@w^0,c
  4410  001EF4                     l635:
  4411                           
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4413  001EF4  0E00               	movlw	0
  4414  001EF6  6E1F               	movwf	(pad@i+1)^0,c
  4415  001EF8  0E00               	movlw	0
  4416  001EFA  6E1E               	movwf	pad@i^0,c
  4417                           
  4418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4419  001EFC  EF8C  F00F         	goto	l2655
  4420  001F00                     l2651:
  4421                           
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4423  001F00  0E00               	movlw	0
  4424  001F02  6E08               	movwf	(fputc@c+1)^0,c
  4425  001F04  0E20               	movlw	32
  4426  001F06  6E07               	movwf	fputc@c^0,c
  4427  001F08  C017  F009         	movff	pad@fp,fputc@fp
  4428  001F0C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4429  001F10  EC79  F010         	call	_fputc	;wreg free
  4430  001F14                     
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4432  001F14  4A1E               	infsnz	pad@i^0,f,c
  4433  001F16  2A1F               	incf	(pad@i+1)^0,f,c
  4434  001F18                     l2655:
  4435                           
  4436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4437  001F18  5020               	movf	pad@w^0,w,c
  4438  001F1A  5C1E               	subwf	pad@i^0,w,c
  4439  001F1C  501F               	movf	(pad@i+1)^0,w,c
  4440  001F1E  0A80               	xorlw	128
  4441  001F20  6E1D               	movwf	??_pad^0,c
  4442  001F22  5021               	movf	(pad@w+1)^0,w,c
  4443  001F24  0A80               	xorlw	128
  4444  001F26  581D               	subwfb	??_pad^0,w,c
  4445  001F28  A0D8               	btfss	status,0,c
  4446  001F2A  EF99  F00F         	goto	u1621
  4447  001F2E  EF9B  F00F         	goto	u1620
  4448  001F32                     u1621:
  4449  001F32  EF80  F00F         	goto	l2651
  4450  001F36                     u1620:
  4451  001F36                     
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4453  001F36  B057               	btfsc	_flags^0,0,c
  4454  001F38  EFA0  F00F         	goto	u1631
  4455  001F3C  EFA2  F00F         	goto	u1630
  4456  001F40                     u1631:
  4457  001F40  EFAC  F00F         	goto	l2659
  4458  001F44                     u1630:
  4459  001F44                     
  4460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4461  001F44  C019  F010         	movff	pad@buf,fputs@s
  4462  001F48  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4463  001F4C  C017  F012         	movff	pad@fp,fputs@fp
  4464  001F50  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4465  001F54  EC1B  F013         	call	_fputs	;wreg free
  4466  001F58                     l2659:
  4467                           
  4468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4469  001F58  C019  F005         	movff	pad@buf,strlen@s
  4470  001F5C  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4471  001F60  ECF1  F013         	call	_strlen	;wreg free
  4472  001F64  5020               	movf	pad@w^0,w,c
  4473  001F66  2405               	addwf	?_strlen^0,w,c
  4474  001F68  6E17               	movwf	?_pad^0,c
  4475  001F6A  5021               	movf	(pad@w+1)^0,w,c
  4476  001F6C  2006               	addwfc	(?_strlen+1)^0,w,c
  4477  001F6E  6E18               	movwf	(?_pad+1)^0,c
  4478  001F70  0012               	return		;funcret
  4479  001F72                     __end_of_pad:
  4480                           	opt callstack 0
  4481                           
  4482 ;; *************** function _strlen *****************
  4483 ;; Defined at:
  4484 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4487 ;;		 -> dbuf(32), 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4490 ;;		 -> dbuf(32), 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  2    4[COMRAM] unsigned int 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;Total ram usage:        4 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    4
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_pad
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text30
  4515  0027E2                     __ptext30:
  4516                           	opt callstack 0
  4517  0027E2                     _strlen:
  4518                           	opt callstack 21
  4519  0027E2  C005  F007         	movff	strlen@s,strlen@a
  4520  0027E6  C006  F008         	movff	strlen@s+1,strlen@a+1
  4521  0027EA  EFF9  F013         	goto	l2631
  4522  0027EE                     l2629:
  4523  0027EE  4A05               	infsnz	strlen@s^0,f,c
  4524  0027F0  2A06               	incf	(strlen@s+1)^0,f,c
  4525  0027F2                     l2631:
  4526  0027F2  C005  FFD9         	movff	strlen@s,fsr2l
  4527  0027F6  C006  FFDA         	movff	strlen@s+1,fsr2h
  4528  0027FA  50DF               	movf	indf2,w,c
  4529  0027FC  A4D8               	btfss	status,2,c
  4530  0027FE  EF03  F014         	goto	u1571
  4531  002802  EF05  F014         	goto	u1570
  4532  002806                     u1571:
  4533  002806  EFF7  F013         	goto	l2629
  4534  00280A                     u1570:
  4535  00280A  5007               	movf	strlen@a^0,w,c
  4536  00280C  5C05               	subwf	strlen@s^0,w,c
  4537  00280E  6E05               	movwf	?_strlen^0,c
  4538  002810  5008               	movf	(strlen@a+1)^0,w,c
  4539  002812  5806               	subwfb	(strlen@s+1)^0,w,c
  4540  002814  6E06               	movwf	(?_strlen+1)^0,c
  4541  002816  0012               	return		;funcret
  4542  002818                     __end_of_strlen:
  4543                           	opt callstack 0
  4544                           
  4545 ;; *************** function _fputs *****************
  4546 ;; Defined at:
  4547 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4550 ;;		 -> dbuf(32), 
  4551 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4552 ;;		 -> NULL(0), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  i               2   20[COMRAM] int 
  4555 ;;  c               1   19[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2   15[COMRAM] int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4568 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4569 ;;Total ram usage:        7 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    7
  4572 ;; This function calls:
  4573 ;;		_fputc
  4574 ;; This function is called by:
  4575 ;;		_pad
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text31
  4580  002636                     __ptext31:
  4581                           	opt callstack 0
  4582  002636                     _fputs:
  4583                           	opt callstack 18
  4584  002636  0E00               	movlw	0
  4585  002638  6E16               	movwf	(fputs@i+1)^0,c
  4586  00263A  0E00               	movlw	0
  4587  00263C  6E15               	movwf	fputs@i^0,c
  4588  00263E  EF2C  F013         	goto	l2625
  4589  002642                     l2621:
  4590  002642  C014  F007         	movff	fputs@c,fputc@c
  4591  002646  6A08               	clrf	(fputc@c+1)^0,c
  4592  002648  C012  F009         	movff	fputs@fp,fputc@fp
  4593  00264C  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4594  002650  EC79  F010         	call	_fputc	;wreg free
  4595  002654  4A15               	infsnz	fputs@i^0,f,c
  4596  002656  2A16               	incf	(fputs@i+1)^0,f,c
  4597  002658                     l2625:
  4598  002658  5015               	movf	fputs@i^0,w,c
  4599  00265A  2410               	addwf	fputs@s^0,w,c
  4600  00265C  6ED9               	movwf	fsr2l,c
  4601  00265E  5016               	movf	(fputs@i+1)^0,w,c
  4602  002660  2011               	addwfc	(fputs@s+1)^0,w,c
  4603  002662  6EDA               	movwf	fsr2h,c
  4604  002664  50DF               	movf	indf2,w,c
  4605  002666  6E14               	movwf	fputs@c^0,c
  4606  002668  5014               	movf	fputs@c^0,w,c
  4607  00266A  A4D8               	btfss	status,2,c
  4608  00266C  EF3A  F013         	goto	u1561
  4609  002670  EF3C  F013         	goto	u1560
  4610  002674                     u1561:
  4611  002674  EF21  F013         	goto	l2621
  4612  002678                     u1560:
  4613  002678  0012               	return		;funcret
  4614  00267A                     __end_of_fputs:
  4615                           	opt callstack 0
  4616                           
  4617 ;; *************** function _fputc *****************
  4618 ;; Defined at:
  4619 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  c               2    6[COMRAM] int 
  4622 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4623 ;;		 -> NULL(0), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  2    6[COMRAM] int 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;Total ram usage:        9 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    6
  4642 ;; This function calls:
  4643 ;;		_putch
  4644 ;; This function is called by:
  4645 ;;		_pad
  4646 ;;		_vfpfcnvrt
  4647 ;;		_fputs
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text32
  4652  0020F2                     __ptext32:
  4653                           	opt callstack 0
  4654  0020F2                     _fputc:
  4655                           	opt callstack 18
  4656  0020F2  5009               	movf	fputc@fp^0,w,c
  4657  0020F4  100A               	iorwf	(fputc@fp+1)^0,w,c
  4658  0020F6  B4D8               	btfsc	status,2,c
  4659  0020F8  EF80  F010         	goto	u1521
  4660  0020FC  EF82  F010         	goto	u1520
  4661  002100                     u1521:
  4662  002100  EF8B  F010         	goto	l2609
  4663  002104                     u1520:
  4664  002104  5009               	movf	fputc@fp^0,w,c
  4665  002106  100A               	iorwf	(fputc@fp+1)^0,w,c
  4666  002108  A4D8               	btfss	status,2,c
  4667  00210A  EF89  F010         	goto	u1531
  4668  00210E  EF8B  F010         	goto	u1530
  4669  002112                     u1531:
  4670  002112  EF90  F010         	goto	l2611
  4671  002116                     u1530:
  4672  002116                     l2609:
  4673  002116  5007               	movf	fputc@c^0,w,c
  4674  002118  ECCA  F014         	call	_putch
  4675  00211C  EFC3  F010         	goto	l1485
  4676  002120                     l2611:
  4677  002120  EE20 F004          	lfsr	2,4
  4678  002124  5009               	movf	fputc@fp^0,w,c
  4679  002126  26D9               	addwf	fsr2l,f,c
  4680  002128  500A               	movf	(fputc@fp+1)^0,w,c
  4681  00212A  22DA               	addwfc	fsr2h,f,c
  4682  00212C  50DE               	movf	postinc2,w,c
  4683  00212E  10DE               	iorwf	postinc2,w,c
  4684  002130  B4D8               	btfsc	status,2,c
  4685  002132  EF9D  F010         	goto	u1541
  4686  002136  EF9F  F010         	goto	u1540
  4687  00213A                     u1541:
  4688  00213A  EFBA  F010         	goto	l2615
  4689  00213E                     u1540:
  4690  00213E  EE20 F004          	lfsr	2,4
  4691  002142  5009               	movf	fputc@fp^0,w,c
  4692  002144  26D9               	addwf	fsr2l,f,c
  4693  002146  500A               	movf	(fputc@fp+1)^0,w,c
  4694  002148  22DA               	addwfc	fsr2h,f,c
  4695  00214A  EE10 F002          	lfsr	1,2
  4696  00214E  5009               	movf	fputc@fp^0,w,c
  4697  002150  26E1               	addwf	fsr1l,f,c
  4698  002152  500A               	movf	(fputc@fp+1)^0,w,c
  4699  002154  22E2               	addwfc	fsr1h,f,c
  4700  002156  50DE               	movf	postinc2,w,c
  4701  002158  5CE6               	subwf	postinc1,w,c
  4702  00215A  50E6               	movf	postinc1,w,c
  4703  00215C  0A80               	xorlw	128
  4704  00215E  6E0F               	movwf	(??_fputc+4)^0,c
  4705  002160  50DE               	movf	postinc2,w,c
  4706  002162  0A80               	xorlw	128
  4707  002164  580F               	subwfb	(??_fputc+4)^0,w,c
  4708  002166  B0D8               	btfsc	status,0,c
  4709  002168  EFB8  F010         	goto	u1551
  4710  00216C  EFBA  F010         	goto	u1550
  4711  002170                     u1551:
  4712  002170  EFC3  F010         	goto	l1485
  4713  002174                     u1550:
  4714  002174                     l2615:
  4715  002174  EE20 F002          	lfsr	2,2
  4716  002178  5009               	movf	fputc@fp^0,w,c
  4717  00217A  26D9               	addwf	fsr2l,f,c
  4718  00217C  500A               	movf	(fputc@fp+1)^0,w,c
  4719  00217E  22DA               	addwfc	fsr2h,f,c
  4720  002180  2ADE               	incf	postinc2,f,c
  4721  002182  0E00               	movlw	0
  4722  002184  22DD               	addwfc	postdec2,f,c
  4723  002186                     l1485:
  4724  002186  0012               	return		;funcret
  4725  002188                     __end_of_fputc:
  4726                           	opt callstack 0
  4727                           
  4728 ;; *************** function _putch *****************
  4729 ;; Defined at:
  4730 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  txData          1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  txData          1    5[COMRAM] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    5
  4751 ;; This function calls:
  4752 ;;		_EUSART2_Write
  4753 ;; This function is called by:
  4754 ;;		_fputc
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text33
  4759  002994                     __ptext33:
  4760                           	opt callstack 0
  4761  002994                     _putch:
  4762                           	opt callstack 18
  4763                           
  4764                           ;incstack = 0
  4765                           ;putch@txData stored from wreg
  4766  002994  6E06               	movwf	putch@txData^0,c
  4767  002996                     
  4768                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  4769  002996  5006               	movf	putch@txData^0,w,c
  4770  002998  EC23  F012         	call	_EUSART2_Write
  4771  00299C  0012               	return		;funcret
  4772  00299E                     __end_of_putch:
  4773                           	opt callstack 0
  4774                           
  4775 ;; *************** function _EUSART2_Write *****************
  4776 ;; Defined at:
  4777 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  txData          1    wreg     unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  txData          1    4[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4795 ;;Total ram usage:        1 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    4
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_putch
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text34
  4806  002446                     __ptext34:
  4807                           	opt callstack 0
  4808  002446                     _EUSART2_Write:
  4809                           	opt callstack 18
  4810                           
  4811                           ;incstack = 0
  4812                           ;EUSART2_Write@txData stored from wreg
  4813  002446  6E05               	movwf	EUSART2_Write@txData^0,c
  4814  002448                     l2587:
  4815                           
  4816                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  4817  002448  0100               	movlb	0	; () banked
  4818  00244A  51DB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  4819  00244C  B4D8               	btfsc	status,2,c
  4820  00244E  EF2B  F012         	goto	u1491
  4821  002452  EF2D  F012         	goto	u1490
  4822  002456                     u1491:
  4823  002456  EF24  F012         	goto	l2587
  4824  00245A                     u1490:
  4825  00245A                     
  4826                           ; BSR set to: 0
  4827                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  4828  00245A  010E               	movlb	14	; () banked
  4829  00245C  BDC5               	btfsc	197,6,b	;volatile
  4830  00245E  EF33  F012         	goto	u1501
  4831  002462  EF35  F012         	goto	u1500
  4832  002466                     u1501:
  4833  002466  EF39  F012         	goto	l321
  4834  00246A                     u1500:
  4835  00246A                     
  4836                           ; BSR set to: 14
  4837                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  4838  00246A  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  4839                           
  4840                           ;mcc_generated_files/eusart2.c: 182:     }
  4841  00246E  EF4F  F012         	goto	l2601
  4842  002472                     l321:
  4843                           
  4844                           ; BSR set to: 14
  4845                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  4846  002472  9DC5               	bcf	197,6,b	;volatile
  4847  002474                     
  4848                           ; BSR set to: 14
  4849                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  4850  002474  0E80               	movlw	low _eusart2TxBuffer
  4851  002476  0100               	movlb	0	; () banked
  4852  002478  259D               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  4853  00247A  6ED9               	movwf	fsr2l,c
  4854  00247C  6ADA               	clrf	fsr2h,c
  4855  00247E  0E00               	movlw	high _eusart2TxBuffer
  4856  002480  22DA               	addwfc	fsr2h,f,c
  4857  002482  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  4858  002486                     
  4859                           ; BSR set to: 0
  4860  002486  2B9D               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  4861  002488                     
  4862                           ; BSR set to: 0
  4863                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  4864  002488  0E07               	movlw	7
  4865  00248A  659D               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  4866  00248C  EF4A  F012         	goto	u1511
  4867  002490  EF4C  F012         	goto	u1510
  4868  002494                     u1511:
  4869  002494  EF4E  F012         	goto	l2599
  4870  002498                     u1510:
  4871  002498                     
  4872                           ; BSR set to: 0
  4873                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  4874  002498  0E00               	movlw	0
  4875  00249A  6F9D               	movwf	_eusart2TxHead& (0+255),b	;volatile
  4876  00249C                     l2599:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  4880  00249C  07DB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  4881  00249E                     l2601:
  4882                           
  4883                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  4884  00249E  010E               	movlb	14	; () banked
  4885  0024A0  8DC5               	bsf	197,6,b	;volatile
  4886  0024A2                     
  4887                           ; BSR set to: 14
  4888  0024A2  0012               	return		;funcret
  4889  0024A4                     __end_of_EUSART2_Write:
  4890                           	opt callstack 0
  4891                           
  4892 ;; *************** function _abs *****************
  4893 ;; Defined at:
  4894 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  a               2   22[COMRAM] int 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  2   22[COMRAM] int 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;Total ram usage:        4 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    4
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_dtoa
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text35
  4923  0026BE                     __ptext35:
  4924                           	opt callstack 0
  4925  0026BE                     _abs:
  4926                           	opt callstack 22
  4927  0026BE  BE18               	btfsc	(abs@a+1)^0,7,c
  4928  0026C0  EF6C  F013         	goto	u1640
  4929  0026C4  5018               	movf	(abs@a+1)^0,w,c
  4930  0026C6  E106               	bnz	u1641
  4931  0026C8  0417               	decf	abs@a^0,w,c
  4932  0026CA  B0D8               	btfsc	status,0,c
  4933  0026CC  EF6A  F013         	goto	u1641
  4934  0026D0  EF6C  F013         	goto	u1640
  4935  0026D4                     u1641:
  4936  0026D4  EF7A  F013         	goto	l1413
  4937  0026D8                     u1640:
  4938  0026D8  C017  F019         	movff	abs@a,??_abs
  4939  0026DC  C018  F01A         	movff	abs@a+1,??_abs+1
  4940  0026E0  1E19               	comf	??_abs^0,f,c
  4941  0026E2  1E1A               	comf	(??_abs+1)^0,f,c
  4942  0026E4  4A19               	infsnz	??_abs^0,f,c
  4943  0026E6  2A1A               	incf	(??_abs+1)^0,f,c
  4944  0026E8  C019  F017         	movff	??_abs,?_abs
  4945  0026EC  C01A  F018         	movff	??_abs+1,?_abs+1
  4946  0026F0  EF7E  F013         	goto	l1416
  4947  0026F4                     l1413:
  4948  0026F4  C017  F017         	movff	abs@a,?_abs
  4949  0026F8  C018  F018         	movff	abs@a+1,?_abs+1
  4950  0026FC                     l1416:
  4951  0026FC  0012               	return		;funcret
  4952  0026FE                     __end_of_abs:
  4953                           	opt callstack 0
  4954                           
  4955 ;; *************** function ___aomod *****************
  4956 ;; Defined at:
  4957 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  dividend        8    4[COMRAM] long long 
  4960 ;;  divisor         8   12[COMRAM] long long 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  sign            1   21[COMRAM] unsigned char 
  4963 ;;  counter         1   20[COMRAM] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  8    4[COMRAM] long long 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4973 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;Total ram usage:       18 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    4
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_dtoa
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text36
  4988  001C80                     __ptext36:
  4989                           	opt callstack 0
  4990  001C80                     ___aomod:
  4991                           	opt callstack 22
  4992  001C80  0E00               	movlw	0
  4993  001C82  6E16               	movwf	___aomod@sign^0,c
  4994  001C84  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4995  001C86  EF49  F00E         	goto	u1810
  4996  001C8A  EF47  F00E         	goto	u1811
  4997  001C8E                     u1811:
  4998  001C8E  EF5B  F00E         	goto	l2747
  4999  001C92                     u1810:
  5000  001C92  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5001  001C94  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5002  001C96  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5003  001C98  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5004  001C9A  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5005  001C9C  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5006  001C9E  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5007  001CA0  6C05               	negf	___aomod@dividend^0,c
  5008  001CA2  0E00               	movlw	0
  5009  001CA4  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5010  001CA6  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5011  001CA8  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5012  001CAA  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5013  001CAC  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5014  001CAE  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5015  001CB0  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5016  001CB2  0E01               	movlw	1
  5017  001CB4  6E16               	movwf	___aomod@sign^0,c
  5018  001CB6                     l2747:
  5019  001CB6  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  5020  001CB8  EF62  F00E         	goto	u1820
  5021  001CBC  EF60  F00E         	goto	u1821
  5022  001CC0                     u1821:
  5023  001CC0  EF72  F00E         	goto	l2751
  5024  001CC4                     u1820:
  5025  001CC4  1E14               	comf	(___aomod@divisor+7)^0,f,c
  5026  001CC6  1E13               	comf	(___aomod@divisor+6)^0,f,c
  5027  001CC8  1E12               	comf	(___aomod@divisor+5)^0,f,c
  5028  001CCA  1E11               	comf	(___aomod@divisor+4)^0,f,c
  5029  001CCC  1E10               	comf	(___aomod@divisor+3)^0,f,c
  5030  001CCE  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  5031  001CD0  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  5032  001CD2  6C0D               	negf	___aomod@divisor^0,c
  5033  001CD4  0E00               	movlw	0
  5034  001CD6  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  5035  001CD8  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  5036  001CDA  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  5037  001CDC  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  5038  001CDE  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  5039  001CE0  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  5040  001CE2  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  5041  001CE4                     l2751:
  5042  001CE4  500D               	movf	___aomod@divisor^0,w,c
  5043  001CE6  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  5044  001CE8  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  5045  001CEA  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  5046  001CEC  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  5047  001CEE  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  5048  001CF0  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  5049  001CF2  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  5050  001CF4  B4D8               	btfsc	status,2,c
  5051  001CF6  EF7F  F00E         	goto	u1831
  5052  001CFA  EF81  F00E         	goto	u1830
  5053  001CFE                     u1831:
  5054  001CFE  EFC9  F00E         	goto	l2767
  5055  001D02                     u1830:
  5056  001D02  0E01               	movlw	1
  5057  001D04  6E15               	movwf	___aomod@counter^0,c
  5058  001D06  EF8F  F00E         	goto	l2757
  5059  001D0A                     l2755:
  5060  001D0A  90D8               	bcf	status,0,c
  5061  001D0C  360D               	rlcf	___aomod@divisor^0,f,c
  5062  001D0E  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  5063  001D10  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  5064  001D12  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  5065  001D14  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  5066  001D16  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  5067  001D18  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  5068  001D1A  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  5069  001D1C  2A15               	incf	___aomod@counter^0,f,c
  5070  001D1E                     l2757:
  5071  001D1E  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  5072  001D20  EF94  F00E         	goto	u1841
  5073  001D24  EF96  F00E         	goto	u1840
  5074  001D28                     u1841:
  5075  001D28  EF85  F00E         	goto	l2755
  5076  001D2C                     u1840:
  5077  001D2C                     l2759:
  5078  001D2C  500D               	movf	___aomod@divisor^0,w,c
  5079  001D2E  5C05               	subwf	___aomod@dividend^0,w,c
  5080  001D30  500E               	movf	(___aomod@divisor+1)^0,w,c
  5081  001D32  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  5082  001D34  500F               	movf	(___aomod@divisor+2)^0,w,c
  5083  001D36  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  5084  001D38  5010               	movf	(___aomod@divisor+3)^0,w,c
  5085  001D3A  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  5086  001D3C  5011               	movf	(___aomod@divisor+4)^0,w,c
  5087  001D3E  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  5088  001D40  5012               	movf	(___aomod@divisor+5)^0,w,c
  5089  001D42  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  5090  001D44  5013               	movf	(___aomod@divisor+6)^0,w,c
  5091  001D46  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  5092  001D48  5014               	movf	(___aomod@divisor+7)^0,w,c
  5093  001D4A  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  5094  001D4C  A0D8               	btfss	status,0,c
  5095  001D4E  EFAB  F00E         	goto	u1851
  5096  001D52  EFAD  F00E         	goto	u1850
  5097  001D56                     u1851:
  5098  001D56  EFBD  F00E         	goto	l2763
  5099  001D5A                     u1850:
  5100  001D5A  500D               	movf	___aomod@divisor^0,w,c
  5101  001D5C  5E05               	subwf	___aomod@dividend^0,f,c
  5102  001D5E  500E               	movf	(___aomod@divisor+1)^0,w,c
  5103  001D60  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  5104  001D62  500F               	movf	(___aomod@divisor+2)^0,w,c
  5105  001D64  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  5106  001D66  5010               	movf	(___aomod@divisor+3)^0,w,c
  5107  001D68  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  5108  001D6A  5011               	movf	(___aomod@divisor+4)^0,w,c
  5109  001D6C  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  5110  001D6E  5012               	movf	(___aomod@divisor+5)^0,w,c
  5111  001D70  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  5112  001D72  5013               	movf	(___aomod@divisor+6)^0,w,c
  5113  001D74  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  5114  001D76  5014               	movf	(___aomod@divisor+7)^0,w,c
  5115  001D78  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  5116  001D7A                     l2763:
  5117  001D7A  90D8               	bcf	status,0,c
  5118  001D7C  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  5119  001D7E  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  5120  001D80  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  5121  001D82  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  5122  001D84  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  5123  001D86  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  5124  001D88  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  5125  001D8A  320D               	rrcf	___aomod@divisor^0,f,c
  5126  001D8C  2E15               	decfsz	___aomod@counter^0,f,c
  5127  001D8E  EF96  F00E         	goto	l2759
  5128  001D92                     l2767:
  5129  001D92  5016               	movf	___aomod@sign^0,w,c
  5130  001D94  B4D8               	btfsc	status,2,c
  5131  001D96  EFCF  F00E         	goto	u1861
  5132  001D9A  EFD1  F00E         	goto	u1860
  5133  001D9E                     u1861:
  5134  001D9E  EFE1  F00E         	goto	l2771
  5135  001DA2                     u1860:
  5136  001DA2  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5137  001DA4  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5138  001DA6  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5139  001DA8  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5140  001DAA  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5141  001DAC  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5142  001DAE  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5143  001DB0  6C05               	negf	___aomod@dividend^0,c
  5144  001DB2  0E00               	movlw	0
  5145  001DB4  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5146  001DB6  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5147  001DB8  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5148  001DBA  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5149  001DBC  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5150  001DBE  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5151  001DC0  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5152  001DC2                     l2771:
  5153  001DC2  C005  F005         	movff	___aomod@dividend,?___aomod
  5154  001DC6  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  5155  001DCA  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  5156  001DCE  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  5157  001DD2  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  5158  001DD6  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  5159  001DDA  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  5160  001DDE  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  5161  001DE2  0012               	return		;funcret
  5162  001DE4                     __end_of___aomod:
  5163                           	opt callstack 0
  5164                           
  5165 ;; *************** function ___aodiv *****************
  5166 ;; Defined at:
  5167 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  dividend        8    4[COMRAM] long long 
  5170 ;;  divisor         8   12[COMRAM] long long 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  quotient        8   22[COMRAM] long long 
  5173 ;;  sign            1   21[COMRAM] unsigned char 
  5174 ;;  counter         1   20[COMRAM] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  8    4[COMRAM] long long 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5184 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;Total ram usage:       26 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    4
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_dtoa
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text37
  5199  001AF8                     __ptext37:
  5200                           	opt callstack 0
  5201  001AF8                     ___aodiv:
  5202                           	opt callstack 22
  5203  001AF8  0E00               	movlw	0
  5204  001AFA  6E16               	movwf	___aodiv@sign^0,c
  5205  001AFC  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  5206  001AFE  EF85  F00D         	goto	u1740
  5207  001B02  EF83  F00D         	goto	u1741
  5208  001B06                     u1741:
  5209  001B06  EF97  F00D         	goto	l2703
  5210  001B0A                     u1740:
  5211  001B0A  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  5212  001B0C  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  5213  001B0E  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  5214  001B10  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  5215  001B12  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  5216  001B14  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  5217  001B16  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  5218  001B18  6C0D               	negf	___aodiv@divisor^0,c
  5219  001B1A  0E00               	movlw	0
  5220  001B1C  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  5221  001B1E  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  5222  001B20  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  5223  001B22  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  5224  001B24  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  5225  001B26  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  5226  001B28  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  5227  001B2A  0E01               	movlw	1
  5228  001B2C  6E16               	movwf	___aodiv@sign^0,c
  5229  001B2E                     l2703:
  5230  001B2E  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  5231  001B30  EF9E  F00D         	goto	u1750
  5232  001B34  EF9C  F00D         	goto	u1751
  5233  001B38                     u1751:
  5234  001B38  EFB0  F00D         	goto	l2709
  5235  001B3C                     u1750:
  5236  001B3C  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  5237  001B3E  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  5238  001B40  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  5239  001B42  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  5240  001B44  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  5241  001B46  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  5242  001B48  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  5243  001B4A  6C05               	negf	___aodiv@dividend^0,c
  5244  001B4C  0E00               	movlw	0
  5245  001B4E  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  5246  001B50  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  5247  001B52  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  5248  001B54  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  5249  001B56  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  5250  001B58  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  5251  001B5A  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  5252  001B5C  0E01               	movlw	1
  5253  001B5E  1A16               	xorwf	___aodiv@sign^0,f,c
  5254  001B60                     l2709:
  5255  001B60  EE20  F017         	lfsr	2,___aodiv@quotient
  5256  001B64  0E07               	movlw	7
  5257  001B66                     u1761:
  5258  001B66  6ADE               	clrf	postinc2,c
  5259  001B68  06E8               	decf	wreg,f,c
  5260  001B6A  E2FD               	bc	u1761
  5261  001B6C  500D               	movf	___aodiv@divisor^0,w,c
  5262  001B6E  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  5263  001B70  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  5264  001B72  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  5265  001B74  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  5266  001B76  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  5267  001B78  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  5268  001B7A  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  5269  001B7C  B4D8               	btfsc	status,2,c
  5270  001B7E  EFC3  F00D         	goto	u1771
  5271  001B82  EFC5  F00D         	goto	u1770
  5272  001B86                     u1771:
  5273  001B86  EF17  F00E         	goto	l2731
  5274  001B8A                     u1770:
  5275  001B8A  0E01               	movlw	1
  5276  001B8C  6E15               	movwf	___aodiv@counter^0,c
  5277  001B8E  EFD3  F00D         	goto	l2717
  5278  001B92                     l2715:
  5279  001B92  90D8               	bcf	status,0,c
  5280  001B94  360D               	rlcf	___aodiv@divisor^0,f,c
  5281  001B96  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  5282  001B98  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  5283  001B9A  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  5284  001B9C  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  5285  001B9E  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  5286  001BA0  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  5287  001BA2  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  5288  001BA4  2A15               	incf	___aodiv@counter^0,f,c
  5289  001BA6                     l2717:
  5290  001BA6  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  5291  001BA8  EFD8  F00D         	goto	u1781
  5292  001BAC  EFDA  F00D         	goto	u1780
  5293  001BB0                     u1781:
  5294  001BB0  EFC9  F00D         	goto	l2715
  5295  001BB4                     u1780:
  5296  001BB4                     l2719:
  5297  001BB4  90D8               	bcf	status,0,c
  5298  001BB6  3617               	rlcf	___aodiv@quotient^0,f,c
  5299  001BB8  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  5300  001BBA  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  5301  001BBC  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  5302  001BBE  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  5303  001BC0  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  5304  001BC2  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  5305  001BC4  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  5306  001BC6  500D               	movf	___aodiv@divisor^0,w,c
  5307  001BC8  5C05               	subwf	___aodiv@dividend^0,w,c
  5308  001BCA  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5309  001BCC  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  5310  001BCE  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5311  001BD0  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  5312  001BD2  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5313  001BD4  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  5314  001BD6  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5315  001BD8  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  5316  001BDA  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5317  001BDC  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  5318  001BDE  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5319  001BE0  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  5320  001BE2  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5321  001BE4  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  5322  001BE6  A0D8               	btfss	status,0,c
  5323  001BE8  EFF8  F00D         	goto	u1791
  5324  001BEC  EFFA  F00D         	goto	u1790
  5325  001BF0                     u1791:
  5326  001BF0  EF0B  F00E         	goto	l2727
  5327  001BF4                     u1790:
  5328  001BF4  500D               	movf	___aodiv@divisor^0,w,c
  5329  001BF6  5E05               	subwf	___aodiv@dividend^0,f,c
  5330  001BF8  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5331  001BFA  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5332  001BFC  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5333  001BFE  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5334  001C00  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5335  001C02  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5336  001C04  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5337  001C06  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5338  001C08  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5339  001C0A  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5340  001C0C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5341  001C0E  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5342  001C10  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5343  001C12  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5344  001C14  8017               	bsf	___aodiv@quotient^0,0,c
  5345  001C16                     l2727:
  5346  001C16  90D8               	bcf	status,0,c
  5347  001C18  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5348  001C1A  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5349  001C1C  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5350  001C1E  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5351  001C20  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5352  001C22  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5353  001C24  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5354  001C26  320D               	rrcf	___aodiv@divisor^0,f,c
  5355  001C28  2E15               	decfsz	___aodiv@counter^0,f,c
  5356  001C2A  EFDA  F00D         	goto	l2719
  5357  001C2E                     l2731:
  5358  001C2E  5016               	movf	___aodiv@sign^0,w,c
  5359  001C30  B4D8               	btfsc	status,2,c
  5360  001C32  EF1D  F00E         	goto	u1801
  5361  001C36  EF1F  F00E         	goto	u1800
  5362  001C3A                     u1801:
  5363  001C3A  EF2F  F00E         	goto	l2735
  5364  001C3E                     u1800:
  5365  001C3E  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5366  001C40  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5367  001C42  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5368  001C44  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5369  001C46  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5370  001C48  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5371  001C4A  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5372  001C4C  6C17               	negf	___aodiv@quotient^0,c
  5373  001C4E  0E00               	movlw	0
  5374  001C50  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5375  001C52  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5376  001C54  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5377  001C56  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5378  001C58  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5379  001C5A  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5380  001C5C  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5381  001C5E                     l2735:
  5382  001C5E  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5383  001C62  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5384  001C66  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5385  001C6A  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5386  001C6E  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5387  001C72  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5388  001C76  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5389  001C7A  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5390  001C7E  0012               	return		;funcret
  5391  001C80                     __end_of___aodiv:
  5392                           	opt callstack 0
  5393                           
  5394 ;; *************** function _atoi *****************
  5395 ;; Defined at:
  5396 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5399 ;;		 -> STR_3(14), STR_2(24), STR_1(26), 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  n               2   24[COMRAM] int 
  5402 ;;  neg             2   17[COMRAM] int 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  2   11[COMRAM] int 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5413 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;Total ram usage:       15 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    5
  5419 ;; This function calls:
  5420 ;;		___wmul
  5421 ;;		_isdigit
  5422 ;;		_isspace
  5423 ;; This function is called by:
  5424 ;;		_vfpfcnvrt
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text38
  5429  00195E                     __ptext38:
  5430                           	opt callstack 0
  5431  00195E                     _atoi:
  5432                           	opt callstack 22
  5433  00195E  0E00               	movlw	0
  5434  001960  6E1A               	movwf	(atoi@n+1)^0,c
  5435  001962  0E00               	movlw	0
  5436  001964  6E19               	movwf	atoi@n^0,c
  5437  001966  0E00               	movlw	0
  5438  001968  6E13               	movwf	(atoi@neg+1)^0,c
  5439  00196A  0E00               	movlw	0
  5440  00196C  6E12               	movwf	atoi@neg^0,c
  5441  00196E  EFBB  F00C         	goto	l2919
  5442  001972                     l2917:
  5443  001972  4A0C               	infsnz	atoi@s^0,f,c
  5444  001974  2A0D               	incf	(atoi@s+1)^0,f,c
  5445  001976                     l2919:
  5446  001976  0E01               	movlw	1
  5447  001978  6E18               	movwf	_atoi$1688^0,c
  5448  00197A  C00C  FFF6         	movff	atoi@s,tblptrl
  5449  00197E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5450  001982                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5451  001982  6AF8               	clrf	tblptru,c
  5452  001984                     	endif
  5453  001984                     	if	0	;tblptru may be non-zero
  5454  001984                     	endif
  5455  001984  0008               	tblrd		*
  5456  001986  50F5               	movf	tablat,w,c
  5457  001988  0A20               	xorlw	32
  5458  00198A  B4D8               	btfsc	status,2,c
  5459  00198C  EFCA  F00C         	goto	u2211
  5460  001990  EFCC  F00C         	goto	u2210
  5461  001994                     u2211:
  5462  001994  EFEA  F00C         	goto	l2927
  5463  001998                     u2210:
  5464  001998  0EF7               	movlw	247
  5465  00199A  6E0E               	movwf	??_atoi^0,c
  5466  00199C  0EFF               	movlw	255
  5467  00199E  6E0F               	movwf	(??_atoi+1)^0,c
  5468  0019A0  C00C  FFF6         	movff	atoi@s,tblptrl
  5469  0019A4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5470  0019A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5471  0019A8  6AF8               	clrf	tblptru,c
  5472  0019AA                     	endif
  5473  0019AA                     	if	0	;tblptru may be non-zero
  5474  0019AA                     	endif
  5475  0019AA  0008               	tblrd		*
  5476  0019AC  50F5               	movf	tablat,w,c
  5477  0019AE  6E10               	movwf	(??_atoi+2)^0,c
  5478  0019B0  6A11               	clrf	(??_atoi+3)^0,c
  5479  0019B2  500E               	movf	??_atoi^0,w,c
  5480  0019B4  2610               	addwf	(??_atoi+2)^0,f,c
  5481  0019B6  500F               	movf	(??_atoi+1)^0,w,c
  5482  0019B8  2211               	addwfc	(??_atoi+3)^0,f,c
  5483  0019BA  5011               	movf	(??_atoi+3)^0,w,c
  5484  0019BC  E109               	bnz	u2220
  5485  0019BE  0E05               	movlw	5
  5486  0019C0  5C10               	subwf	(??_atoi+2)^0,w,c
  5487  0019C2  A0D8               	btfss	status,0,c
  5488  0019C4  EFE6  F00C         	goto	u2221
  5489  0019C8  EFE8  F00C         	goto	u2220
  5490  0019CC                     u2221:
  5491  0019CC  EFEA  F00C         	goto	l2927
  5492  0019D0                     u2220:
  5493  0019D0  0E00               	movlw	0
  5494  0019D2  6E18               	movwf	_atoi$1688^0,c
  5495  0019D4                     l2927:
  5496  0019D4  C018  F014         	movff	_atoi$1688,_atoi$1687
  5497  0019D8  6A15               	clrf	(_atoi$1687+1)^0,c
  5498  0019DA  5014               	movf	_atoi$1687^0,w,c
  5499  0019DC  1015               	iorwf	(_atoi$1687+1)^0,w,c
  5500  0019DE  A4D8               	btfss	status,2,c
  5501  0019E0  EFF4  F00C         	goto	u2231
  5502  0019E4  EFF6  F00C         	goto	u2230
  5503  0019E8                     u2231:
  5504  0019E8  EFB9  F00C         	goto	l2917
  5505  0019EC                     u2230:
  5506  0019EC  EF00  F00D         	goto	l2937
  5507  0019F0                     l2933:
  5508  0019F0  0E00               	movlw	0
  5509  0019F2  6E13               	movwf	(atoi@neg+1)^0,c
  5510  0019F4  0E01               	movlw	1
  5511  0019F6  6E12               	movwf	atoi@neg^0,c
  5512  0019F8                     l2935:
  5513  0019F8  4A0C               	infsnz	atoi@s^0,f,c
  5514  0019FA  2A0D               	incf	(atoi@s+1)^0,f,c
  5515  0019FC  EF37  F00D         	goto	l2943
  5516  001A00                     l2937:
  5517  001A00  C00C  FFF6         	movff	atoi@s,tblptrl
  5518  001A04  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5519  001A08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5520  001A08  6AF8               	clrf	tblptru,c
  5521  001A0A                     	endif
  5522  001A0A                     	if	0	;tblptru may be non-zero
  5523  001A0A                     	endif
  5524  001A0A  0008               	tblrd		*
  5525  001A0C  50F5               	movf	tablat,w,c
  5526  001A0E  6E0E               	movwf	??_atoi^0,c
  5527  001A10  6A0F               	clrf	(??_atoi+1)^0,c
  5528                           
  5529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5530                           ; Switch size 1, requested type "simple"
  5531                           ; Number of cases is 1, Range of values is 0 to 0
  5532                           ; switch strategies available:
  5533                           ; Name         Instructions Cycles
  5534                           ; simple_byte            4     3 (average)
  5535                           ;	Chosen strategy is simple_byte
  5536  001A12  500F               	movf	(??_atoi+1)^0,w,c
  5537  001A14  0A00               	xorlw	0	; case 0
  5538  001A16  B4D8               	btfsc	status,2,c
  5539  001A18  EF10  F00D         	goto	l3665
  5540  001A1C  EF37  F00D         	goto	l2943
  5541  001A20                     l3665:
  5542                           
  5543                           ; Switch size 1, requested type "simple"
  5544                           ; Number of cases is 2, Range of values is 43 to 45
  5545                           ; switch strategies available:
  5546                           ; Name         Instructions Cycles
  5547                           ; simple_byte            7     4 (average)
  5548                           ;	Chosen strategy is simple_byte
  5549  001A20  500E               	movf	??_atoi^0,w,c
  5550  001A22  0A2B               	xorlw	43	; case 43
  5551  001A24  B4D8               	btfsc	status,2,c
  5552  001A26  EFFC  F00C         	goto	l2935
  5553  001A2A  0A06               	xorlw	6	; case 45
  5554  001A2C  B4D8               	btfsc	status,2,c
  5555  001A2E  EFF8  F00C         	goto	l2933
  5556  001A32  EF37  F00D         	goto	l2943
  5557  001A36                     l2939:
  5558  001A36  C019  F005         	movff	atoi@n,___wmul@multiplier
  5559  001A3A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5560  001A3E  0E00               	movlw	0
  5561  001A40  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5562  001A42  0E0A               	movlw	10
  5563  001A44  6E07               	movwf	___wmul@multiplicand^0,c
  5564  001A46  EC4C  F014         	call	___wmul	;wreg free
  5565  001A4A  C00C  FFF6         	movff	atoi@s,tblptrl
  5566  001A4E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5567  001A52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5568  001A52  6AF8               	clrf	tblptru,c
  5569  001A54                     	endif
  5570  001A54                     	if	0	;tblptru may be non-zero
  5571  001A54                     	endif
  5572  001A54  0008               	tblrd		*
  5573  001A56  50F5               	movf	tablat,w,c
  5574  001A58  5E05               	subwf	?___wmul^0,f,c
  5575  001A5A  0E00               	movlw	0
  5576  001A5C  5A06               	subwfb	(?___wmul+1)^0,f,c
  5577  001A5E  0E30               	movlw	48
  5578  001A60  2405               	addwf	?___wmul^0,w,c
  5579  001A62  6E19               	movwf	atoi@n^0,c
  5580  001A64  0E00               	movlw	0
  5581  001A66  2006               	addwfc	(?___wmul+1)^0,w,c
  5582  001A68  6E1A               	movwf	(atoi@n+1)^0,c
  5583  001A6A  EFFC  F00C         	goto	l2935
  5584  001A6E                     l2943:
  5585  001A6E  0ED0               	movlw	208
  5586  001A70  6E0E               	movwf	??_atoi^0,c
  5587  001A72  0EFF               	movlw	255
  5588  001A74  6E0F               	movwf	(??_atoi+1)^0,c
  5589  001A76  C00C  FFF6         	movff	atoi@s,tblptrl
  5590  001A7A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5591  001A7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5592  001A7E  6AF8               	clrf	tblptru,c
  5593  001A80                     	endif
  5594  001A80                     	if	0	;tblptru may be non-zero
  5595  001A80                     	endif
  5596  001A80  0008               	tblrd		*
  5597  001A82  50F5               	movf	tablat,w,c
  5598  001A84  6E10               	movwf	(??_atoi+2)^0,c
  5599  001A86  6A11               	clrf	(??_atoi+3)^0,c
  5600  001A88  500E               	movf	??_atoi^0,w,c
  5601  001A8A  2610               	addwf	(??_atoi+2)^0,f,c
  5602  001A8C  500F               	movf	(??_atoi+1)^0,w,c
  5603  001A8E  2211               	addwfc	(??_atoi+3)^0,f,c
  5604  001A90  5011               	movf	(??_atoi+3)^0,w,c
  5605  001A92  E10A               	bnz	u2240
  5606  001A94  0E0A               	movlw	10
  5607  001A96  5C10               	subwf	(??_atoi+2)^0,w,c
  5608  001A98  A0D8               	btfss	status,0,c
  5609  001A9A  EF51  F00D         	goto	u2241
  5610  001A9E  EF54  F00D         	goto	u2240
  5611  001AA2                     u2241:
  5612  001AA2  0E01               	movlw	1
  5613  001AA4  EF55  F00D         	goto	u2250
  5614  001AA8                     u2240:
  5615  001AA8  0E00               	movlw	0
  5616  001AAA                     u2250:
  5617  001AAA  6E16               	movwf	_atoi$1689^0,c
  5618  001AAC  6A17               	clrf	(_atoi$1689+1)^0,c
  5619  001AAE  5016               	movf	_atoi$1689^0,w,c
  5620  001AB0  1017               	iorwf	(_atoi$1689+1)^0,w,c
  5621  001AB2  A4D8               	btfss	status,2,c
  5622  001AB4  EF5E  F00D         	goto	u2261
  5623  001AB8  EF60  F00D         	goto	u2260
  5624  001ABC                     u2261:
  5625  001ABC  EF1B  F00D         	goto	l2939
  5626  001AC0                     u2260:
  5627  001AC0  5012               	movf	atoi@neg^0,w,c
  5628  001AC2  1013               	iorwf	(atoi@neg+1)^0,w,c
  5629  001AC4  A4D8               	btfss	status,2,c
  5630  001AC6  EF67  F00D         	goto	u2271
  5631  001ACA  EF69  F00D         	goto	u2270
  5632  001ACE                     u2271:
  5633  001ACE  EF77  F00D         	goto	l1444
  5634  001AD2                     u2270:
  5635  001AD2  C019  F00E         	movff	atoi@n,??_atoi
  5636  001AD6  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5637  001ADA  1E0E               	comf	??_atoi^0,f,c
  5638  001ADC  1E0F               	comf	(??_atoi+1)^0,f,c
  5639  001ADE  4A0E               	infsnz	??_atoi^0,f,c
  5640  001AE0  2A0F               	incf	(??_atoi+1)^0,f,c
  5641  001AE2  C00E  F00C         	movff	??_atoi,?_atoi
  5642  001AE6  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5643  001AEA  EF7B  F00D         	goto	l1447
  5644  001AEE                     l1444:
  5645  001AEE  C019  F00C         	movff	atoi@n,?_atoi
  5646  001AF2  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5647  001AF6                     l1447:
  5648  001AF6  0012               	return		;funcret
  5649  001AF8                     __end_of_atoi:
  5650                           	opt callstack 0
  5651                           
  5652 ;; *************** function _isspace *****************
  5653 ;; Defined at:
  5654 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  c               2    4[COMRAM] int 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  2    4[COMRAM] int 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;Total ram usage:        7 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    4
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_atoi
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text39
  5683  002552                     __ptext39:
  5684                           	opt callstack 0
  5685  002552                     _isspace:
  5686                           	opt callstack 22
  5687  002552  0E01               	movlw	1
  5688  002554  6E0B               	movwf	_isspace$1714^0,c
  5689  002556  0E20               	movlw	32
  5690  002558  1805               	xorwf	isspace@c^0,w,c
  5691  00255A  1006               	iorwf	(isspace@c+1)^0,w,c
  5692  00255C  B4D8               	btfsc	status,2,c
  5693  00255E  EFB3  F012         	goto	u1871
  5694  002562  EFB5  F012         	goto	u1870
  5695  002566                     u1871:
  5696  002566  EFCE  F012         	goto	l2783
  5697  00256A                     u1870:
  5698  00256A  0EF7               	movlw	247
  5699  00256C  6E07               	movwf	??_isspace^0,c
  5700  00256E  0EFF               	movlw	255
  5701  002570  6E08               	movwf	(??_isspace+1)^0,c
  5702  002572  C005  F009         	movff	isspace@c,??_isspace+2
  5703  002576  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5704  00257A  5007               	movf	??_isspace^0,w,c
  5705  00257C  2609               	addwf	(??_isspace+2)^0,f,c
  5706  00257E  5008               	movf	(??_isspace+1)^0,w,c
  5707  002580  220A               	addwfc	(??_isspace+3)^0,f,c
  5708  002582  500A               	movf	(??_isspace+3)^0,w,c
  5709  002584  E109               	bnz	u1880
  5710  002586  0E05               	movlw	5
  5711  002588  5C09               	subwf	(??_isspace+2)^0,w,c
  5712  00258A  A0D8               	btfss	status,0,c
  5713  00258C  EFCA  F012         	goto	u1881
  5714  002590  EFCC  F012         	goto	u1880
  5715  002594                     u1881:
  5716  002594  EFCE  F012         	goto	l2783
  5717  002598                     u1880:
  5718  002598  0E00               	movlw	0
  5719  00259A  6E0B               	movwf	_isspace$1714^0,c
  5720  00259C                     l2783:
  5721  00259C  C00B  F005         	movff	_isspace$1714,?_isspace
  5722  0025A0  6A06               	clrf	(?_isspace+1)^0,c
  5723  0025A2  0012               	return		;funcret
  5724  0025A4                     __end_of_isspace:
  5725                           	opt callstack 0
  5726                           
  5727 ;; *************** function _isdigit *****************
  5728 ;; Defined at:
  5729 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  c               2    4[COMRAM] int 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  2    4[COMRAM] int 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;Total ram usage:        6 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    4
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_vfpfcnvrt
  5754 ;;		_atoi
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text40
  5759  0027AA                     __ptext40:
  5760                           	opt callstack 0
  5761  0027AA                     _isdigit:
  5762                           	opt callstack 23
  5763  0027AA  0ED0               	movlw	208
  5764  0027AC  6E07               	movwf	??_isdigit^0,c
  5765  0027AE  0EFF               	movlw	255
  5766  0027B0  6E08               	movwf	(??_isdigit+1)^0,c
  5767  0027B2  C005  F009         	movff	isdigit@c,??_isdigit+2
  5768  0027B6  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5769  0027BA  5007               	movf	??_isdigit^0,w,c
  5770  0027BC  2609               	addwf	(??_isdigit+2)^0,f,c
  5771  0027BE  5008               	movf	(??_isdigit+1)^0,w,c
  5772  0027C0  220A               	addwfc	(??_isdigit+3)^0,f,c
  5773  0027C2  500A               	movf	(??_isdigit+3)^0,w,c
  5774  0027C4  E10A               	bnz	u1720
  5775  0027C6  0E0A               	movlw	10
  5776  0027C8  5C09               	subwf	(??_isdigit+2)^0,w,c
  5777  0027CA  A0D8               	btfss	status,0,c
  5778  0027CC  EFEA  F013         	goto	u1721
  5779  0027D0  EFED  F013         	goto	u1720
  5780  0027D4                     u1721:
  5781  0027D4  0E01               	movlw	1
  5782  0027D6  EFEE  F013         	goto	u1730
  5783  0027DA                     u1720:
  5784  0027DA  0E00               	movlw	0
  5785  0027DC                     u1730:
  5786  0027DC  6E05               	movwf	?_isdigit^0,c
  5787  0027DE  6A06               	clrf	(?_isdigit+1)^0,c
  5788  0027E0  0012               	return		;funcret
  5789  0027E2                     __end_of_isdigit:
  5790                           	opt callstack 0
  5791                           
  5792 ;; *************** function ___wmul *****************
  5793 ;; Defined at:
  5794 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  multiplier      2    4[COMRAM] unsigned int 
  5797 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  product         2    8[COMRAM] unsigned int 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  2    4[COMRAM] unsigned int 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, prodl, prodh
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;Total ram usage:        6 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    4
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_atoi
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text41
  5824  002898                     __ptext41:
  5825                           	opt callstack 0
  5826  002898                     ___wmul:
  5827                           	opt callstack 22
  5828  002898  5005               	movf	___wmul@multiplier^0,w,c
  5829  00289A  0207               	mulwf	___wmul@multiplicand^0,c
  5830  00289C  CFF3 F009          	movff	prodl,___wmul@product
  5831  0028A0  CFF4 F00A          	movff	prodh,___wmul@product+1
  5832  0028A4  5005               	movf	___wmul@multiplier^0,w,c
  5833  0028A6  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5834  0028A8  50F3               	movf	243,w,c
  5835  0028AA  260A               	addwf	(___wmul@product+1)^0,f,c
  5836  0028AC  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5837  0028AE  0207               	mulwf	___wmul@multiplicand^0,c
  5838  0028B0  50F3               	movf	243,w,c
  5839  0028B2  260A               	addwf	(___wmul@product+1)^0,f,c
  5840  0028B4  C009  F005         	movff	___wmul@product,?___wmul
  5841  0028B8  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5842  0028BC  0012               	return		;funcret
  5843  0028BE                     __end_of___wmul:
  5844                           	opt callstack 0
  5845                           
  5846 ;; *************** function _EUSART1_is_rx_ready *****************
  5847 ;; Defined at:
  5848 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      _Bool 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;Total ram usage:        0 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    4
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_main
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text42
  5877  00290C                     __ptext42:
  5878                           	opt callstack 0
  5879  00290C                     _EUSART1_is_rx_ready:
  5880                           	opt callstack 26
  5881  00290C                     
  5882                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  5883  00290C  0100               	movlb	0	; () banked
  5884  00290E  5195               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5885  002910  A4D8               	btfss	status,2,c
  5886  002912  EF8D  F014         	goto	u2541
  5887  002916  EF90  F014         	goto	u2540
  5888  00291A                     u2541:
  5889  00291A  0E01               	movlw	1
  5890  00291C  EF91  F014         	goto	u2550
  5891  002920                     u2540:
  5892  002920  0E00               	movlw	0
  5893  002922                     u2550:
  5894  002922                     
  5895                           ; BSR set to: 0
  5896  002922  0012               	return		;funcret
  5897  002924                     __end_of_EUSART1_is_rx_ready:
  5898                           	opt callstack 0
  5899                           
  5900 ;; *************** function _EUSART1_Read *****************
  5901 ;; Defined at:
  5902 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  readValue       1    4[COMRAM] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      unsigned char 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    4
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_main
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text43
  5931  0024A4                     __ptext43:
  5932                           	opt callstack 0
  5933  0024A4                     _EUSART1_Read:
  5934                           	opt callstack 26
  5935  0024A4                     l3283:
  5936                           
  5937                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  5938  0024A4  0100               	movlb	0	; () banked
  5939  0024A6  5195               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5940  0024A8  B4D8               	btfsc	status,2,c
  5941  0024AA  EF59  F012         	goto	u2561
  5942  0024AE  EF5B  F012         	goto	u2560
  5943  0024B2                     u2561:
  5944  0024B2  EF52  F012         	goto	l3283
  5945  0024B6                     u2560:
  5946  0024B6                     
  5947                           ; BSR set to: 0
  5948                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  5949  0024B6  0E00               	movlw	low _eusart1RxStatusBuffer
  5950  0024B8  2596               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5951  0024BA  6ED9               	movwf	fsr2l,c
  5952  0024BC  6ADA               	clrf	fsr2h,c
  5953  0024BE  0E01               	movlw	high _eusart1RxStatusBuffer
  5954  0024C0  22DA               	addwfc	fsr2h,f,c
  5955  0024C2  50DF               	movf	indf2,w,c
  5956  0024C4  6F94               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5957                           
  5958                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  5959  0024C6  0E64               	movlw	low _eusart1RxBuffer
  5960  0024C8  2596               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5961  0024CA  6ED9               	movwf	fsr2l,c
  5962  0024CC  6ADA               	clrf	fsr2h,c
  5963  0024CE  0E01               	movlw	high _eusart1RxBuffer
  5964  0024D0  22DA               	addwfc	fsr2h,f,c
  5965  0024D2  50DF               	movf	indf2,w,c
  5966  0024D4  6E05               	movwf	EUSART1_Read@readValue^0,c
  5967  0024D6                     
  5968                           ; BSR set to: 0
  5969  0024D6  2B96               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  5970  0024D8                     
  5971                           ; BSR set to: 0
  5972                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  5973  0024D8  0E63               	movlw	99
  5974  0024DA  6596               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  5975  0024DC  EF72  F012         	goto	u2571
  5976  0024E0  EF74  F012         	goto	u2570
  5977  0024E4                     u2571:
  5978  0024E4  EF76  F012         	goto	l3293
  5979  0024E8                     u2570:
  5980  0024E8                     
  5981                           ; BSR set to: 0
  5982                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  5983  0024E8  0E00               	movlw	0
  5984  0024EA  6F96               	movwf	_eusart1RxTail& (0+255),b	;volatile
  5985  0024EC                     l3293:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  5989  0024EC  010E               	movlb	14	; () banked
  5990  0024EE  9BC5               	bcf	197,5,b	;volatile
  5991  0024F0                     
  5992                           ; BSR set to: 14
  5993                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  5994  0024F0  0100               	movlb	0	; () banked
  5995  0024F2  0795               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  5996  0024F4                     
  5997                           ; BSR set to: 0
  5998                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  5999  0024F4  010E               	movlb	14	; () banked
  6000  0024F6  8BC5               	bsf	197,5,b	;volatile
  6001  0024F8                     
  6002                           ; BSR set to: 14
  6003                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  6004  0024F8  5005               	movf	EUSART1_Read@readValue^0,w,c
  6005  0024FA                     
  6006                           ; BSR set to: 14
  6007  0024FA  0012               	return		;funcret
  6008  0024FC                     __end_of_EUSART1_Read:
  6009                           	opt callstack 0
  6010                           
  6011 ;; *************** function _ClearRxBuff *****************
  6012 ;; Defined at:
  6013 ;;		line 46 in file "main.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;		None
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  i               2    5[COMRAM] int 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      void 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;Total ram usage:        3 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    4
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text44
  6042  0025A4                     __ptext44:
  6043                           	opt callstack 0
  6044  0025A4                     _ClearRxBuff:
  6045                           	opt callstack 26
  6046  0025A4                     
  6047                           ;main.c: 48:     int i = 0;
  6048  0025A4  0E00               	movlw	0
  6049  0025A6  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  6050  0025A8  0E00               	movlw	0
  6051  0025AA  6E06               	movwf	ClearRxBuff@i^0,c
  6052                           
  6053                           ;main.c: 49:     for(i=0; i<ByteNum; i++ ){
  6054  0025AC  0E00               	movlw	0
  6055  0025AE  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  6056  0025B0  0E00               	movlw	0
  6057  0025B2  6E06               	movwf	ClearRxBuff@i^0,c
  6058  0025B4  EFE6  F012         	goto	l3359
  6059  0025B8                     l3355:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;main.c: 50:         rxData[i] = 0xFF;
  6063  0025B8  0E00               	movlw	low _rxData
  6064  0025BA  2406               	addwf	ClearRxBuff@i^0,w,c
  6065  0025BC  6ED9               	movwf	fsr2l,c
  6066  0025BE  0E02               	movlw	high _rxData
  6067  0025C0  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  6068  0025C2  6EDA               	movwf	fsr2h,c
  6069  0025C4  0EFF               	movlw	255
  6070  0025C6  6EDF               	movwf	indf2,c
  6071  0025C8                     
  6072                           ; BSR set to: 0
  6073                           ;main.c: 51:     }
  6074  0025C8  4A06               	infsnz	ClearRxBuff@i^0,f,c
  6075  0025CA  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  6076  0025CC                     l3359:
  6077  0025CC  0100               	movlb	0	; () banked
  6078  0025CE  518E               	movf	_ByteNum& (0+255),w,b
  6079  0025D0  5C06               	subwf	ClearRxBuff@i^0,w,c
  6080  0025D2  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  6081  0025D4  0A80               	xorlw	128
  6082  0025D6  6E05               	movwf	??_ClearRxBuff^0,c
  6083  0025D8  518F               	movf	(_ByteNum+1)& (0+255),w,b
  6084  0025DA  0A80               	xorlw	128
  6085  0025DC  5805               	subwfb	??_ClearRxBuff^0,w,c
  6086  0025DE  A0D8               	btfss	status,0,c
  6087  0025E0  EFF4  F012         	goto	u2691
  6088  0025E4  EFF6  F012         	goto	u2690
  6089  0025E8                     u2691:
  6090  0025E8  EFDC  F012         	goto	l3355
  6091  0025EC                     u2690:
  6092  0025EC                     
  6093                           ; BSR set to: 0
  6094  0025EC  0012               	return		;funcret
  6095  0025EE                     __end_of_ClearRxBuff:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function _INTERRUPT_InterruptManager *****************
  6099 ;; Defined at:
  6100 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;Total ram usage:        4 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    3
  6121 ;; This function calls:
  6122 ;;		Absolute function
  6123 ;;		_EUSART1_Receive_ISR
  6124 ;;		_EUSART1_Transmit_ISR
  6125 ;;		_EUSART2_Receive_ISR
  6126 ;;		_EUSART2_Transmit_ISR
  6127 ;; This function is called by:
  6128 ;;		Interrupt level 2
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	intcode
  6133  000008                     __pintcode:
  6134                           	opt callstack 0
  6135  000008                     _INTERRUPT_InterruptManager:
  6136                           	opt callstack 17
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;incstack = 0
  6140  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6141  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6142  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6143  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6144  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6145  00001A                     
  6146                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6147  00001A  ACF2               	btfss	242,6,c	;volatile
  6148  00001C  EF12  F000         	goto	i2u271_41
  6149  000020  EF14  F000         	goto	i2u271_40
  6150  000024                     i2u271_41:
  6151  000024  EF89  F000         	goto	i2l159
  6152  000028                     i2u271_40:
  6153  000028                     
  6154                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  6155  000028  010E               	movlb	14	; () banked
  6156  00002A  ADC5               	btfss	197,6,b	;volatile
  6157  00002C  EF1A  F000         	goto	i2u272_41
  6158  000030  EF1C  F000         	goto	i2u272_40
  6159  000034                     i2u272_41:
  6160  000034  EF32  F000         	goto	i2l150
  6161  000038                     i2u272_40:
  6162  000038                     
  6163                           ; BSR set to: 14
  6164  000038  ADCD               	btfss	205,6,b	;volatile
  6165  00003A  EF21  F000         	goto	i2u273_41
  6166  00003E  EF23  F000         	goto	i2u273_40
  6167  000042                     i2u273_41:
  6168  000042  EF32  F000         	goto	i2l150
  6169  000046                     i2u273_40:
  6170  000046                     
  6171                           ; BSR set to: 14
  6172                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  6173  000046  D802               	call	i2u274_48
  6174  000048  EF30  F000         	goto	i2u274_49
  6175  00004C                     i2u274_48:
  6176  00004C  0005               	push	
  6177  00004E  6EFA               	movwf	pclath,c
  6178  000050  0100               	movlb	0	; () banked
  6179  000052  51D8               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  6180  000054  6EFD               	movwf	tosl,c
  6181  000056  51D9               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  6182  000058  6EFE               	movwf	tosh,c
  6183  00005A  6AFF               	clrf	tosu,c
  6184  00005C  50FA               	movf	pclath,w,c
  6185  00005E  0012               	return		;indir
  6186  000060                     i2u274_49:
  6187                           
  6188                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6189  000060  EF89  F000         	goto	i2l159
  6190  000064                     i2l150:
  6191                           
  6192                           ; BSR set to: 14
  6193  000064  AFC5               	btfss	197,7,b	;volatile
  6194  000066  EF37  F000         	goto	i2u275_41
  6195  00006A  EF39  F000         	goto	i2u275_40
  6196  00006E                     i2u275_41:
  6197  00006E  EF4F  F000         	goto	i2l152
  6198  000072                     i2u275_40:
  6199  000072                     
  6200                           ; BSR set to: 14
  6201  000072  AFCD               	btfss	205,7,b	;volatile
  6202  000074  EF3E  F000         	goto	i2u276_41
  6203  000078  EF40  F000         	goto	i2u276_40
  6204  00007C                     i2u276_41:
  6205  00007C  EF4F  F000         	goto	i2l152
  6206  000080                     i2u276_40:
  6207  000080                     
  6208                           ; BSR set to: 14
  6209                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  6210  000080  D802               	call	i2u277_48
  6211  000082  EF4D  F000         	goto	i2u277_49
  6212  000086                     i2u277_48:
  6213  000086  0005               	push	
  6214  000088  6EFA               	movwf	pclath,c
  6215  00008A  0100               	movlb	0	; () banked
  6216  00008C  51D6               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  6217  00008E  6EFD               	movwf	tosl,c
  6218  000090  51D7               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  6219  000092  6EFE               	movwf	tosh,c
  6220  000094  6AFF               	clrf	tosu,c
  6221  000096  50FA               	movf	pclath,w,c
  6222  000098  0012               	return		;indir
  6223  00009A                     i2u277_49:
  6224                           
  6225                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6226  00009A  EF89  F000         	goto	i2l159
  6227  00009E                     i2l152:
  6228                           
  6229                           ; BSR set to: 14
  6230  00009E  A9C5               	btfss	197,4,b	;volatile
  6231  0000A0  EF54  F000         	goto	i2u278_41
  6232  0000A4  EF56  F000         	goto	i2u278_40
  6233  0000A8                     i2u278_41:
  6234  0000A8  EF6C  F000         	goto	i2l154
  6235  0000AC                     i2u278_40:
  6236  0000AC                     
  6237                           ; BSR set to: 14
  6238  0000AC  A9CD               	btfss	205,4,b	;volatile
  6239  0000AE  EF5B  F000         	goto	i2u279_41
  6240  0000B2  EF5D  F000         	goto	i2u279_40
  6241  0000B6                     i2u279_41:
  6242  0000B6  EF6C  F000         	goto	i2l154
  6243  0000BA                     i2u279_40:
  6244  0000BA                     
  6245                           ; BSR set to: 14
  6246                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  6247  0000BA  D802               	call	i2u280_48
  6248  0000BC  EF6A  F000         	goto	i2u280_49
  6249  0000C0                     i2u280_48:
  6250  0000C0  0005               	push	
  6251  0000C2  6EFA               	movwf	pclath,c
  6252  0000C4  0100               	movlb	0	; () banked
  6253  0000C6  51D4               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6254  0000C8  6EFD               	movwf	tosl,c
  6255  0000CA  51D5               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6256  0000CC  6EFE               	movwf	tosh,c
  6257  0000CE  6AFF               	clrf	tosu,c
  6258  0000D0  50FA               	movf	pclath,w,c
  6259  0000D2  0012               	return		;indir
  6260  0000D4                     i2u280_49:
  6261                           
  6262                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6263  0000D4  EF89  F000         	goto	i2l159
  6264  0000D8                     i2l154:
  6265                           
  6266                           ; BSR set to: 14
  6267  0000D8  ABC5               	btfss	197,5,b	;volatile
  6268  0000DA  EF71  F000         	goto	i2u281_41
  6269  0000DE  EF73  F000         	goto	i2u281_40
  6270  0000E2                     i2u281_41:
  6271  0000E2  EF89  F000         	goto	i2l153
  6272  0000E6                     i2u281_40:
  6273  0000E6                     
  6274                           ; BSR set to: 14
  6275  0000E6  ABCD               	btfss	205,5,b	;volatile
  6276  0000E8  EF78  F000         	goto	i2u282_41
  6277  0000EC  EF7A  F000         	goto	i2u282_40
  6278  0000F0                     i2u282_41:
  6279  0000F0  EF89  F000         	goto	i2l153
  6280  0000F4                     i2u282_40:
  6281  0000F4                     
  6282                           ; BSR set to: 14
  6283                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  6284  0000F4  D802               	call	i2u283_48
  6285  0000F6  EF87  F000         	goto	i2u283_49
  6286  0000FA                     i2u283_48:
  6287  0000FA  0005               	push	
  6288  0000FC  6EFA               	movwf	pclath,c
  6289  0000FE  0100               	movlb	0	; () banked
  6290  000100  51D2               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6291  000102  6EFD               	movwf	tosl,c
  6292  000104  51D3               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6293  000106  6EFE               	movwf	tosh,c
  6294  000108  6AFF               	clrf	tosu,c
  6295  00010A  50FA               	movf	pclath,w,c
  6296  00010C  0012               	return		;indir
  6297  00010E                     i2u283_49:
  6298                           
  6299                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  6300  00010E  EF89  F000         	goto	i2l159
  6301  000112                     i2l153:
  6302  000112                     i2l159:
  6303  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6304  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6305  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6306  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6307  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6308  000124  0011               	retfie		f
  6309  000126                     __end_of_INTERRUPT_InterruptManager:
  6310                           	opt callstack 0
  6311                           
  6312 ;; *************** function _EUSART2_Transmit_ISR *****************
  6313 ;; Defined at:
  6314 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_EUSART2_Initialize
  6338 ;;		_INTERRUPT_InterruptManager
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text46
  6343  0025EE                     __ptext46:
  6344                           	opt callstack 0
  6345  0025EE                     _EUSART2_Transmit_ISR:
  6346                           	opt callstack 19
  6347  0025EE                     
  6348                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  6349  0025EE  0E08               	movlw	8
  6350  0025F0  0100               	movlb	0	; () banked
  6351  0025F2  61DB               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6352  0025F4  EFFE  F012         	goto	i2u246_41
  6353  0025F8  EF00  F013         	goto	i2u246_40
  6354  0025FC                     i2u246_41:
  6355  0025FC  EF18  F013         	goto	i2l333
  6356  002600                     i2u246_40:
  6357  002600                     
  6358                           ; BSR set to: 0
  6359                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  6360  002600  0E80               	movlw	low _eusart2TxBuffer
  6361  002602  259C               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  6362  002604  6ED9               	movwf	fsr2l,c
  6363  002606  6ADA               	clrf	fsr2h,c
  6364  002608  0E00               	movlw	high _eusart2TxBuffer
  6365  00260A  22DA               	addwfc	fsr2h,f,c
  6366  00260C  50DF               	movf	indf2,w,c
  6367  00260E  010E               	movlb	14	; () banked
  6368  002610  6F9A               	movwf	154,b	;volatile
  6369  002612                     
  6370                           ; BSR set to: 14
  6371  002612  0100               	movlb	0	; () banked
  6372  002614  2B9C               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  6373  002616                     
  6374                           ; BSR set to: 0
  6375                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  6376  002616  0E07               	movlw	7
  6377  002618  659C               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  6378  00261A  EF11  F013         	goto	i2u247_41
  6379  00261E  EF13  F013         	goto	i2u247_40
  6380  002622                     i2u247_41:
  6381  002622  EF15  F013         	goto	i2l3255
  6382  002626                     i2u247_40:
  6383  002626                     
  6384                           ; BSR set to: 0
  6385                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  6386  002626  0E00               	movlw	0
  6387  002628  6F9C               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6388  00262A                     i2l3255:
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  6392  00262A  2BDB               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6393                           
  6394                           ;mcc_generated_files/eusart2.c: 218:     }
  6395  00262C  EF1A  F013         	goto	i2l336
  6396  002630                     i2l333:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  6400  002630  010E               	movlb	14	; () banked
  6401  002632  9DC5               	bcf	197,6,b	;volatile
  6402  002634                     i2l336:
  6403  002634  0012               	return		;funcret
  6404  002636                     __end_of_EUSART2_Transmit_ISR:
  6405                           	opt callstack 0
  6406                           
  6407 ;; *************** function _EUSART2_Receive_ISR *****************
  6408 ;; Defined at:
  6409 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;Total ram usage:        0 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    2
  6430 ;; This function calls:
  6431 ;;		Absolute function
  6432 ;;		_EUSART2_DefaultErrorHandler
  6433 ;;		_EUSART2_DefaultFramingErrorHandler
  6434 ;;		_EUSART2_DefaultOverrunErrorHandler
  6435 ;;		_EUSART2_RxDataHandler
  6436 ;; This function is called by:
  6437 ;;		_EUSART2_Initialize
  6438 ;;		_INTERRUPT_InterruptManager
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text47
  6443  001F72                     __ptext47:
  6444                           	opt callstack 0
  6445  001F72                     _EUSART2_Receive_ISR:
  6446                           	opt callstack 17
  6447  001F72                     
  6448                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  6449  001F72  0E70               	movlw	low _eusart2RxStatusBuffer
  6450  001F74  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6451  001F76  6ED9               	movwf	fsr2l,c
  6452  001F78  6ADA               	clrf	fsr2h,c
  6453  001F7A  0E00               	movlw	high _eusart2RxStatusBuffer
  6454  001F7C  22DA               	addwfc	fsr2h,f,c
  6455  001F7E  0E00               	movlw	0
  6456  001F80  6EDF               	movwf	indf2,c
  6457  001F82                     
  6458                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  6459  001F82  010E               	movlb	14	; () banked
  6460  001F84  A59D               	btfss	157,2,b	;volatile
  6461  001F86  EFC7  F00F         	goto	i2u248_41
  6462  001F8A  EFC9  F00F         	goto	i2u248_40
  6463  001F8E                     i2u248_41:
  6464  001F8E  EFDD  F00F         	goto	i2l3265
  6465  001F92                     i2u248_40:
  6466  001F92                     
  6467                           ; BSR set to: 14
  6468                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  6469  001F92  0E70               	movlw	low _eusart2RxStatusBuffer
  6470  001F94  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6471  001F96  6ED9               	movwf	fsr2l,c
  6472  001F98  6ADA               	clrf	fsr2h,c
  6473  001F9A  0E00               	movlw	high _eusart2RxStatusBuffer
  6474  001F9C  22DA               	addwfc	fsr2h,f,c
  6475  001F9E  0100               	movlb	0	; () banked
  6476  001FA0  82DF               	bsf	indf2,1,c
  6477  001FA2                     
  6478                           ; BSR set to: 0
  6479                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  6480  001FA2  D802               	call	i2u249_48
  6481  001FA4  EFDD  F00F         	goto	i2u249_49
  6482  001FA8                     i2u249_48:
  6483  001FA8  0005               	push	
  6484  001FAA  6EFA               	movwf	pclath,c
  6485  001FAC  51D0               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  6486  001FAE  6EFD               	movwf	tosl,c
  6487  001FB0  51D1               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  6488  001FB2  6EFE               	movwf	tosh,c
  6489  001FB4  6AFF               	clrf	tosu,c
  6490  001FB6  50FA               	movf	pclath,w,c
  6491  001FB8  0012               	return		;indir
  6492  001FBA                     i2u249_49:
  6493  001FBA                     i2l3265:
  6494                           
  6495                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  6496  001FBA  010E               	movlb	14	; () banked
  6497  001FBC  A39D               	btfss	157,1,b	;volatile
  6498  001FBE  EFE3  F00F         	goto	i2u250_41
  6499  001FC2  EFE5  F00F         	goto	i2u250_40
  6500  001FC6                     i2u250_41:
  6501  001FC6  EFF9  F00F         	goto	i2l3271
  6502  001FCA                     i2u250_40:
  6503  001FCA                     
  6504                           ; BSR set to: 14
  6505                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  6506  001FCA  0E70               	movlw	low _eusart2RxStatusBuffer
  6507  001FCC  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6508  001FCE  6ED9               	movwf	fsr2l,c
  6509  001FD0  6ADA               	clrf	fsr2h,c
  6510  001FD2  0E00               	movlw	high _eusart2RxStatusBuffer
  6511  001FD4  22DA               	addwfc	fsr2h,f,c
  6512  001FD6  0100               	movlb	0	; () banked
  6513  001FD8  84DF               	bsf	indf2,2,c
  6514  001FDA                     
  6515                           ; BSR set to: 0
  6516                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  6517  001FDA  D802               	call	i2u251_48
  6518  001FDC  EFF9  F00F         	goto	i2u251_49
  6519  001FE0                     i2u251_48:
  6520  001FE0  0005               	push	
  6521  001FE2  6EFA               	movwf	pclath,c
  6522  001FE4  51CE               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  6523  001FE6  6EFD               	movwf	tosl,c
  6524  001FE8  51CF               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  6525  001FEA  6EFE               	movwf	tosh,c
  6526  001FEC  6AFF               	clrf	tosu,c
  6527  001FEE  50FA               	movf	pclath,w,c
  6528  001FF0  0012               	return		;indir
  6529  001FF2                     i2u251_49:
  6530  001FF2                     i2l3271:
  6531                           
  6532                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  6533  001FF2  0E70               	movlw	low _eusart2RxStatusBuffer
  6534  001FF4  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6535  001FF6  6ED9               	movwf	fsr2l,c
  6536  001FF8  6ADA               	clrf	fsr2h,c
  6537  001FFA  0E00               	movlw	high _eusart2RxStatusBuffer
  6538  001FFC  22DA               	addwfc	fsr2h,f,c
  6539  001FFE  50DF               	movf	indf2,w,c
  6540  002000  B4D8               	btfsc	status,2,c
  6541  002002  EF05  F010         	goto	i2u252_41
  6542  002006  EF07  F010         	goto	i2u252_40
  6543  00200A                     i2u252_41:
  6544  00200A  EF16  F010         	goto	i2l3275
  6545  00200E                     i2u252_40:
  6546  00200E                     
  6547                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  6548  00200E  D802               	call	i2u253_48
  6549  002010  EF14  F010         	goto	i2u253_49
  6550  002014                     i2u253_48:
  6551  002014  0005               	push	
  6552  002016  6EFA               	movwf	pclath,c
  6553  002018  0100               	movlb	0	; () banked
  6554  00201A  51CC               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  6555  00201C  6EFD               	movwf	tosl,c
  6556  00201E  51CD               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  6557  002020  6EFE               	movwf	tosh,c
  6558  002022  6AFF               	clrf	tosu,c
  6559  002024  50FA               	movf	pclath,w,c
  6560  002026  0012               	return		;indir
  6561  002028                     i2u253_49:
  6562                           
  6563                           ;mcc_generated_files/eusart2.c: 242:     } else {
  6564  002028  EF18  F010         	goto	i2l343
  6565  00202C                     i2l3275:
  6566                           
  6567                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  6568  00202C  EC0C  F014         	call	_EUSART2_RxDataHandler	;wreg free
  6569  002030                     i2l343:
  6570  002030  0012               	return		;funcret
  6571  002032                     __end_of_EUSART2_Receive_ISR:
  6572                           	opt callstack 0
  6573                           
  6574 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  6575 ;; Defined at:
  6576 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		None
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6594 ;;Total ram usage:        0 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_EUSART2_Initialize
  6600 ;;		_EUSART2_Receive_ISR
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text48
  6605  00299E                     __ptext48:
  6606                           	opt callstack 0
  6607  00299E                     _EUSART2_DefaultOverrunErrorHandler:
  6608                           	opt callstack 18
  6609  00299E                     
  6610                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  6611  00299E  010E               	movlb	14	; () banked
  6612  0029A0  999D               	bcf	157,4,b	;volatile
  6613                           
  6614                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  6615  0029A2  899D               	bsf	157,4,b	;volatile
  6616  0029A4                     
  6617                           ; BSR set to: 14
  6618  0029A4  0012               	return		;funcret
  6619  0029A6                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  6620                           	opt callstack 0
  6621                           
  6622 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  6623 ;; Defined at:
  6624 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		None
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_EUSART2_Initialize
  6648 ;;		_EUSART2_Receive_ISR
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text49
  6653  0029C2                     __ptext49:
  6654                           	opt callstack 0
  6655  0029C2                     _EUSART2_DefaultFramingErrorHandler:
  6656                           	opt callstack 18
  6657  0029C2  0012               	return		;funcret
  6658  0029C4                     __end_of_EUSART2_DefaultFramingErrorHandler:
  6659                           	opt callstack 0
  6660                           
  6661 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  6662 ;; Defined at:
  6663 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    1
  6684 ;; This function calls:
  6685 ;;		_EUSART2_RxDataHandler
  6686 ;; This function is called by:
  6687 ;;		_EUSART2_Initialize
  6688 ;;		_EUSART2_Receive_ISR
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text50
  6693  0029AC                     __ptext50:
  6694                           	opt callstack 0
  6695  0029AC                     _EUSART2_DefaultErrorHandler:
  6696                           	opt callstack 17
  6697  0029AC                     
  6698                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  6699  0029AC  EC0C  F014         	call	_EUSART2_RxDataHandler	;wreg free
  6700  0029B0  0012               	return		;funcret
  6701  0029B2                     __end_of_EUSART2_DefaultErrorHandler:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function _EUSART2_RxDataHandler *****************
  6705 ;; Defined at:
  6706 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_EUSART2_Receive_ISR
  6730 ;;		_EUSART2_DefaultErrorHandler
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text51
  6735  002818                     __ptext51:
  6736                           	opt callstack 0
  6737  002818                     _EUSART2_RxDataHandler:
  6738                           	opt callstack 18
  6739  002818                     
  6740                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  6741  002818  0E78               	movlw	low _eusart2RxBuffer
  6742  00281A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6743  00281C  6ED9               	movwf	fsr2l,c
  6744  00281E  6ADA               	clrf	fsr2h,c
  6745  002820  0E00               	movlw	high _eusart2RxBuffer
  6746  002822  22DA               	addwfc	fsr2h,f,c
  6747  002824  CE99 FFDF          	movff	3737,indf2	;volatile
  6748  002828  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
  6749  00282A                     
  6750                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  6751  00282A  0E07               	movlw	7
  6752  00282C  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
  6753  00282E  EF1B  F014         	goto	i2u241_41
  6754  002832  EF1D  F014         	goto	i2u241_40
  6755  002836                     i2u241_41:
  6756  002836  EF1F  F014         	goto	i2l3091
  6757  00283A                     i2u241_40:
  6758  00283A                     
  6759                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  6760  00283A  0E00               	movlw	0
  6761  00283C  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6762  00283E                     i2l3091:
  6763                           
  6764                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  6765  00283E  0100               	movlb	0	; () banked
  6766  002840  2B9A               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  6767  002842                     
  6768                           ; BSR set to: 0
  6769  002842  0012               	return		;funcret
  6770  002844                     __end_of_EUSART2_RxDataHandler:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function _EUSART1_Transmit_ISR *****************
  6774 ;; Defined at:
  6775 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;Total ram usage:        0 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_EUSART1_Initialize
  6799 ;;		_INTERRUPT_InterruptManager
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text52
  6804  00267A                     __ptext52:
  6805                           	opt callstack 0
  6806  00267A                     _EUSART1_Transmit_ISR:
  6807                           	opt callstack 19
  6808  00267A                     
  6809                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6810  00267A  0E10               	movlw	16
  6811  00267C  0100               	movlb	0	; () banked
  6812  00267E  61DA               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6813  002680  EF44  F013         	goto	i2u261_41
  6814  002684  EF46  F013         	goto	i2u261_40
  6815  002688                     i2u261_41:
  6816  002688  EF5C  F013         	goto	i2l477
  6817  00268C                     i2u261_40:
  6818  00268C                     
  6819                           ; BSR set to: 0
  6820                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  6821  00268C  0E60               	movlw	low _eusart1TxBuffer
  6822  00268E  2597               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  6823  002690  6ED9               	movwf	fsr2l,c
  6824  002692  6ADA               	clrf	fsr2h,c
  6825  002694  0E00               	movlw	high _eusart1TxBuffer
  6826  002696  22DA               	addwfc	fsr2h,f,c
  6827  002698  50DF               	movf	indf2,w,c
  6828  00269A  6E9A               	movwf	154,c	;volatile
  6829  00269C                     
  6830                           ; BSR set to: 0
  6831  00269C  2B97               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6832  00269E                     
  6833                           ; BSR set to: 0
  6834                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6835  00269E  0E0F               	movlw	15
  6836  0026A0  6597               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  6837  0026A2  EF55  F013         	goto	i2u262_41
  6838  0026A6  EF57  F013         	goto	i2u262_40
  6839  0026AA                     i2u262_41:
  6840  0026AA  EF59  F013         	goto	i2l3331
  6841  0026AE                     i2u262_40:
  6842  0026AE                     
  6843                           ; BSR set to: 0
  6844                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6845  0026AE  0E00               	movlw	0
  6846  0026B0  6F97               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6847  0026B2                     i2l3331:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6851  0026B2  2BDA               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6852                           
  6853                           ;mcc_generated_files/eusart1.c: 209:     }
  6854  0026B4  EF5E  F013         	goto	i2l480
  6855  0026B8                     i2l477:
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  6859  0026B8  010E               	movlb	14	; () banked
  6860  0026BA  99C5               	bcf	197,4,b	;volatile
  6861  0026BC                     i2l480:
  6862  0026BC  0012               	return		;funcret
  6863  0026BE                     __end_of_EUSART1_Transmit_ISR:
  6864                           	opt callstack 0
  6865                           
  6866 ;; *************** function _EUSART1_Receive_ISR *****************
  6867 ;; Defined at:
  6868 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;		None
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      void 
  6875 ;; Registers used:
  6876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;Total ram usage:        0 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    2
  6889 ;; This function calls:
  6890 ;;		Absolute function
  6891 ;;		_EUSART1_DefaultErrorHandler
  6892 ;;		_EUSART1_DefaultFramingErrorHandler
  6893 ;;		_EUSART1_DefaultOverrunErrorHandler
  6894 ;;		_EUSART1_RxDataHandler
  6895 ;; This function is called by:
  6896 ;;		_EUSART1_Initialize
  6897 ;;		_INTERRUPT_InterruptManager
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text53
  6902  002032                     __ptext53:
  6903                           	opt callstack 0
  6904  002032                     _EUSART1_Receive_ISR:
  6905                           	opt callstack 17
  6906  002032                     
  6907                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6908  002032  0E00               	movlw	low _eusart1RxStatusBuffer
  6909  002034  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6910  002036  6ED9               	movwf	fsr2l,c
  6911  002038  6ADA               	clrf	fsr2h,c
  6912  00203A  0E01               	movlw	high _eusart1RxStatusBuffer
  6913  00203C  22DA               	addwfc	fsr2h,f,c
  6914  00203E  0E00               	movlw	0
  6915  002040  6EDF               	movwf	indf2,c
  6916  002042                     
  6917                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  6918  002042  A49D               	btfss	157,2,c	;volatile
  6919  002044  EF26  F010         	goto	i2u263_41
  6920  002048  EF28  F010         	goto	i2u263_40
  6921  00204C                     i2u263_41:
  6922  00204C  EF3D  F010         	goto	i2l3341
  6923  002050                     i2u263_40:
  6924  002050                     
  6925                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6926  002050  0E00               	movlw	low _eusart1RxStatusBuffer
  6927  002052  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6928  002054  6ED9               	movwf	fsr2l,c
  6929  002056  6ADA               	clrf	fsr2h,c
  6930  002058  0E01               	movlw	high _eusart1RxStatusBuffer
  6931  00205A  22DA               	addwfc	fsr2h,f,c
  6932  00205C  0101               	movlb	1	; () banked
  6933  00205E  82DF               	bsf	indf2,1,c
  6934  002060                     
  6935                           ; BSR set to: 1
  6936                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6937  002060  D802               	call	i2u264_48
  6938  002062  EF3D  F010         	goto	i2u264_49
  6939  002066                     i2u264_48:
  6940  002066  0005               	push	
  6941  002068  6EFA               	movwf	pclath,c
  6942  00206A  0100               	movlb	0	; () banked
  6943  00206C  51CA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6944  00206E  6EFD               	movwf	tosl,c
  6945  002070  51CB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6946  002072  6EFE               	movwf	tosh,c
  6947  002074  6AFF               	clrf	tosu,c
  6948  002076  50FA               	movf	pclath,w,c
  6949  002078  0012               	return		;indir
  6950  00207A                     i2u264_49:
  6951  00207A                     i2l3341:
  6952                           
  6953                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  6954  00207A  A29D               	btfss	157,1,c	;volatile
  6955  00207C  EF42  F010         	goto	i2u265_41
  6956  002080  EF44  F010         	goto	i2u265_40
  6957  002084                     i2u265_41:
  6958  002084  EF59  F010         	goto	i2l3347
  6959  002088                     i2u265_40:
  6960  002088                     
  6961                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6962  002088  0E00               	movlw	low _eusart1RxStatusBuffer
  6963  00208A  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6964  00208C  6ED9               	movwf	fsr2l,c
  6965  00208E  6ADA               	clrf	fsr2h,c
  6966  002090  0E01               	movlw	high _eusart1RxStatusBuffer
  6967  002092  22DA               	addwfc	fsr2h,f,c
  6968  002094  0101               	movlb	1	; () banked
  6969  002096  84DF               	bsf	indf2,2,c
  6970  002098                     
  6971                           ; BSR set to: 1
  6972                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6973  002098  D802               	call	i2u266_48
  6974  00209A  EF59  F010         	goto	i2u266_49
  6975  00209E                     i2u266_48:
  6976  00209E  0005               	push	
  6977  0020A0  6EFA               	movwf	pclath,c
  6978  0020A2  0100               	movlb	0	; () banked
  6979  0020A4  51C8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6980  0020A6  6EFD               	movwf	tosl,c
  6981  0020A8  51C9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6982  0020AA  6EFE               	movwf	tosh,c
  6983  0020AC  6AFF               	clrf	tosu,c
  6984  0020AE  50FA               	movf	pclath,w,c
  6985  0020B0  0012               	return		;indir
  6986  0020B2                     i2u266_49:
  6987  0020B2                     i2l3347:
  6988                           
  6989                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6990  0020B2  0E00               	movlw	low _eusart1RxStatusBuffer
  6991  0020B4  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6992  0020B6  6ED9               	movwf	fsr2l,c
  6993  0020B8  6ADA               	clrf	fsr2h,c
  6994  0020BA  0E01               	movlw	high _eusart1RxStatusBuffer
  6995  0020BC  22DA               	addwfc	fsr2h,f,c
  6996  0020BE  50DF               	movf	indf2,w,c
  6997  0020C0  B4D8               	btfsc	status,2,c
  6998  0020C2  EF65  F010         	goto	i2u267_41
  6999  0020C6  EF67  F010         	goto	i2u267_40
  7000  0020CA                     i2u267_41:
  7001  0020CA  EF76  F010         	goto	i2l3351
  7002  0020CE                     i2u267_40:
  7003  0020CE                     
  7004                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  7005  0020CE  D802               	call	i2u268_48
  7006  0020D0  EF74  F010         	goto	i2u268_49
  7007  0020D4                     i2u268_48:
  7008  0020D4  0005               	push	
  7009  0020D6  6EFA               	movwf	pclath,c
  7010  0020D8  0100               	movlb	0	; () banked
  7011  0020DA  51C6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  7012  0020DC  6EFD               	movwf	tosl,c
  7013  0020DE  51C7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  7014  0020E0  6EFE               	movwf	tosh,c
  7015  0020E2  6AFF               	clrf	tosu,c
  7016  0020E4  50FA               	movf	pclath,w,c
  7017  0020E6  0012               	return		;indir
  7018  0020E8                     i2u268_49:
  7019                           
  7020                           ;mcc_generated_files/eusart1.c: 233:     } else {
  7021  0020E8  EF78  F010         	goto	i2l487
  7022  0020EC                     i2l3351:
  7023                           
  7024                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  7025  0020EC  EC22  F014         	call	_EUSART1_RxDataHandler	;wreg free
  7026  0020F0                     i2l487:
  7027  0020F0  0012               	return		;funcret
  7028  0020F2                     __end_of_EUSART1_Receive_ISR:
  7029                           	opt callstack 0
  7030                           
  7031 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7032 ;; Defined at:
  7033 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		None
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_EUSART1_Initialize
  7057 ;;		_EUSART1_Receive_ISR
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text54
  7062  0029B2                     __ptext54:
  7063                           	opt callstack 0
  7064  0029B2                     _EUSART1_DefaultOverrunErrorHandler:
  7065                           	opt callstack 18
  7066  0029B2                     
  7067                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  7068  0029B2  989D               	bcf	157,4,c	;volatile
  7069                           
  7070                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  7071  0029B4  889D               	bsf	157,4,c	;volatile
  7072  0029B6  0012               	return		;funcret
  7073  0029B8                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7074                           	opt callstack 0
  7075                           
  7076 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7077 ;; Defined at:
  7078 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		None
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_EUSART1_Initialize
  7102 ;;		_EUSART1_Receive_ISR
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text55
  7107  0029C4                     __ptext55:
  7108                           	opt callstack 0
  7109  0029C4                     _EUSART1_DefaultFramingErrorHandler:
  7110                           	opt callstack 18
  7111  0029C4  0012               	return		;funcret
  7112  0029C6                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7113                           	opt callstack 0
  7114                           
  7115 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7116 ;; Defined at:
  7117 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      void 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    1
  7138 ;; This function calls:
  7139 ;;		_EUSART1_RxDataHandler
  7140 ;; This function is called by:
  7141 ;;		_EUSART1_Initialize
  7142 ;;		_EUSART1_Receive_ISR
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text56
  7147  0029B8                     __ptext56:
  7148                           	opt callstack 0
  7149  0029B8                     _EUSART1_DefaultErrorHandler:
  7150                           	opt callstack 17
  7151  0029B8                     
  7152                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7153  0029B8  EC22  F014         	call	_EUSART1_RxDataHandler	;wreg free
  7154  0029BC  0012               	return		;funcret
  7155  0029BE                     __end_of_EUSART1_DefaultErrorHandler:
  7156                           	opt callstack 0
  7157                           
  7158 ;; *************** function _EUSART1_RxDataHandler *****************
  7159 ;; Defined at:
  7160 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7178 ;;Total ram usage:        0 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_EUSART1_Receive_ISR
  7184 ;;		_EUSART1_DefaultErrorHandler
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text57
  7189  002844                     __ptext57:
  7190                           	opt callstack 0
  7191  002844                     _EUSART1_RxDataHandler:
  7192                           	opt callstack 18
  7193  002844                     
  7194                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7195  002844  0E64               	movlw	low _eusart1RxBuffer
  7196  002846  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  7197  002848  6ED9               	movwf	fsr2l,c
  7198  00284A  6ADA               	clrf	fsr2h,c
  7199  00284C  0E01               	movlw	high _eusart1RxBuffer
  7200  00284E  22DA               	addwfc	fsr2h,f,c
  7201  002850  CF99 FFDF          	movff	3993,indf2	;volatile
  7202  002854  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
  7203  002856                     
  7204                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7205  002856  0E63               	movlw	99
  7206  002858  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7207  00285A  EF31  F014         	goto	i2u242_41
  7208  00285E  EF33  F014         	goto	i2u242_40
  7209  002862                     i2u242_41:
  7210  002862  EF35  F014         	goto	i2l3111
  7211  002866                     i2u242_40:
  7212  002866                     
  7213                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7214  002866  0E00               	movlw	0
  7215  002868  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7216  00286A                     i2l3111:
  7217                           
  7218                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7219  00286A  0100               	movlb	0	; () banked
  7220  00286C  2B95               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7221  00286E                     
  7222                           ; BSR set to: 0
  7223  00286E  0012               	return		;funcret
  7224  002870                     __end_of_EUSART1_RxDataHandler:
  7225                           	opt callstack 0
  7226                           
  7227                           	psect	text58
  7228  000000                     __ptext58:
  7229                           	opt callstack 0
  7230  000000                     
  7231                           	psect	rparam
  7232  0000                     
  7233                           	psect	temp
  7234  00005B                     btemp:
  7235                           	opt callstack 0
  7236  00005B                     	ds	1
  7237  0000                     int$flags	set	btemp
  7238  0000                     wtemp8	set	btemp+1
  7239  0000                     ttemp5	set	btemp+1
  7240  0000                     ttemp6	set	btemp+4
  7241  0000                     ttemp7	set	btemp+8
  7242                           tosu	equ	0xFFF
  7243                           tosh	equ	0xFFE
  7244                           tosl	equ	0xFFD
  7245                           stkptr	equ	0xFFC
  7246                           pclatu	equ	0xFFB
  7247                           pclath	equ	0xFFA
  7248                           pcl	equ	0xFF9
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           prodh	equ	0xFF4
  7254                           prodl	equ	0xFF3
  7255                           indf0	equ	0xFEF
  7256                           postinc0	equ	0xFEE
  7257                           postdec0	equ	0xFED
  7258                           preinc0	equ	0xFEC
  7259                           plusw0	equ	0xFEB
  7260                           fsr0h	equ	0xFEA
  7261                           fsr0l	equ	0xFE9
  7262                           wreg	equ	0xFE8
  7263                           indf1	equ	0xFE7
  7264                           postinc1	equ	0xFE6
  7265                           postdec1	equ	0xFE5
  7266                           preinc1	equ	0xFE4
  7267                           plusw1	equ	0xFE3
  7268                           fsr1h	equ	0xFE2
  7269                           fsr1l	equ	0xFE1
  7270                           bsr	equ	0xFE0
  7271                           indf2	equ	0xFDF
  7272                           postinc2	equ	0xFDE
  7273                           postdec2	equ	0xFDD
  7274                           preinc2	equ	0xFDC
  7275                           plusw2	equ	0xFDB
  7276                           fsr2h	equ	0xFDA
  7277                           fsr2l	equ	0xFD9
  7278                           status	equ	0xFD8


Data Sizes:
    Strings     64
    Constant    0
    Data        11
    BSS         398
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     40     135
    BANK1           256      0     232
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[14]), STR_2(CODE[24]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1727_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[14]), STR_2(CODE[24]), STR_1(CODE[26]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[14]), STR_2(CODE[24]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[14]), STR_2(CODE[24]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintRXBuff
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintRXBuff
    _PrintRXBuff->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28119
                                             85 COMRAM     1     1      0
                                             39 BANK0      1     1      0
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _PrintRXBuff
                             _RXMode
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintRXBuff                                          3     3      0   13565
                                             84 COMRAM     1     1      0
                                             37 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13463
                                             27 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13100
                                             82 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   12555
                                             72 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1336
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     495
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearRxBuff
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _PrintRXBuff
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      64      10       39.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      E8       8       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      87       5       84.4%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22D       6        0.0%
DATA                 0      0     22D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 02 10:42:22 2021

                      _eusart1TxBufferRemaining 00DA                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 2214  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 28F2                                             l124 290A  
                                           l127 28D8                                             l320 245A  
                                           l144 29C0                                             l321 2472  
                                           l330 299C                                             l324 24A2  
                                           l503 2988                                             l512 296A  
                                           l506 297E                                             l362 294C  
                                           l515 2974                                             l371 2942  
                                           l452 2922                                             l509 2992  
                                           l365 2960                                             l710 1038  
                                           l446 230E                                             l359 2956  
                                           l640 1F70                                             l368 2938  
                                           l296 2292                                             l465 24FA  
                                           l561 29A8                                             l635 1EF4  
                                           l563 29AA                                             l725 13A6  
                                           l638 1F36                                             l646 1448  
                                           l734 23DE                                             l671 16C0  
                                           l735 23E6                                             l575 2382  
                                           l559 29A6                                             l648 1450  
                                           l680 175E                                             l569 25EC  
                                           l673 16C8                                             l738 28BC  
                                           l666 1686                                             l852 1C7E  
                                           l694 18FA                                             l696 195C  
                                           l865 1DE2                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 2958         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 294E                                             _abs 26BE  
                                           _pad 1EB0                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l3001 10A4                                            l3003 10B2  
                                          l1500 2896                                            l1413 26F4  
                                          l3021 11DE                                            l3013 1138  
                                          l3005 10C0                                            l3101 298A  
                                          l1511 243C                                            l3031 127A  
                                          l3007 10E0                                            l3015 114A  
                                          l1416 26FC                                            l3041 1326  
                                          l3033 1288                                            l3025 1216  
                                          l3017 1170                                            l3009 10EE  
                                          l3121 2188                                            l1506 2816  
                                          l1450 2738                                            l1522 2770  
                                          l3051 1362                                            l3043 1334  
                                          l3035 12C4                                            l3027 123C  
                                          l3019 1196                                            l3131 21EE  
                                          l3123 21B0                                            l3211 28DA  
                                          l1444 1AEE                                            l1516 2444  
                                          l3045 1348                                            l3029 1262  
                                          l3141 21FC                                            l3133 21F0  
                                          l3125 21C0                                            l3221 28EE  
                                          l3213 28DE                                            l1470 27A8  
                                          l1447 1AF6                                            l3039 1300  
                                          l3055 136E                                            l3151 2298  
                                          l3143 29BE                                            l3135 21F6  
                                          l3127 21EA                                            l3215 28E2  
                                          l1456 27E0                                            l1464 25A2  
                                          l2601 249E                                            l3057 1394  
                                          l3049 1354                                            l3161 22C0  
                                          l3153 22A4                                            l3081 2958  
                                          l3073 293A                                            l3137 21F8  
                                          l3129 21EC                                            l3145 28BE  
                                          l3217 28E6                                            l2603 2996  
                                          l2611 2120                                            l3171 230A  
                                          l3163 22C4                                            l3155 22B4  
                                          l3075 2930                                            l3147 28F4  
                                          l3139 21FA                                            l3219 28EA  
                                          l2701 1B2A                                            l2613 213E  
                                          l1485 2186                                            l2605 20F2  
                                          l1493 2678                                            l2621 2642  
                                          l3093 296C                                            l3165 22C8  
                                          l3157 22B8                                            l3149 2294  
                                          l3077 294E                                            l3181 223C  
                                          l3173 2216                                            l2711 1B6C  
                                          l2703 1B2E                                            l2615 2174  
                                          l2607 2104                                            l2623 2654  
                                          l2631 27F2                                            l3095 2962  
                                          l3167 22D4                                            l3159 22BC  
                                          l3079 2944                                            l3191 2258  
                                          l3183 2240                                            l3175 221A  
                                          l3353 25A4                                            l3281 24A4  
                                          l2721 1BC6                                            l2713 1B8A  
                                          l2705 1B3C                                            l2609 2116  
                                          l2625 2658                                            l2633 280A  
                                          l2641 1EB0                                            l2801 1458  
                                          l3521 2384                                            l3097 2980  
                                          l3169 22E0                                            l3193 2264  
                                          l3185 2244                                            l3177 2226  
                                          l3355 25B8                                            l3291 24E8  
                                          l3283 24A4                                            l2723 1BF4  
                                          l2715 1B92                                            l2731 1C2E  
                                          l2707 1B5C                                            l2619 2636  
                                          l2627 27E2                                            l2651 1F00  
                                          l2643 1EBE                                            l2811 1490  
                                          l2803 146A                                            l3523 238C  
                                          l3531 287A                                            l3099 2976  
                                          l3195 228E                                            l3187 2248  
                                          l3179 2236                                            l3357 25C8  
                                          l3293 24EC                                            l3285 24B6  
                                          l3277 290C                                            l2733 1C3E  
                                          l2725 1C14                                            l2717 1BA6  
                                          l2709 1B60                                            l2741 1C84  
                                          l2629 27EE                                            l2653 1F14  
                                          l2645 1ED2                                            l2813 1496  
                                          l2821 1588                                            l2805 1478  
                                          l2637 273A                                            l2901 18D2  
                                          l3525 239A                                            l3541 2334  
                                          l3189 224C                                            l3359 25CC  
                                          l3295 24F0                                            l3287 24D6  
                                          l2735 1C5E                                            l2727 1C16  
                                          l2719 1BB4                                            l2751 1CE4  
                                          l2743 1C92                                            l2663 26BE  
                                          l2591 2474                                            l2655 1F18  
                                          l2647 1EE0                                            l2823 15A2  
                                          l2831 1602                                            l2815 1518  
                                          l2807 147E                                            l2671 26FE  
                                          l2911 1934                                            l2903 18EC  
                                          l3527 23C0                                            l3543 235E  
                                          l3535 2310                                            l3551 1DEA  
                                          l3297 24F4                                            l3289 24D8  
                                          l2921 197A                                            l2729 1C28  
                                          l2761 1D5A                                            l2753 1D02  
                                          l2745 1CB2                                            l2665 26D8  
                                          l2593 2486                                            l2585 2448  
                                          l2657 1F44                                            l2649 1EEC  
                                          l2841 1646                                            l2833 1614  
                                          l2825 15C0                                            l2817 151E  
                                          l2809 1486                                            l2681 2430  
                                          l2905 1908                                            l3529 2870  
                                          l3545 2364                                            l3537 2310  
                                          l3561 1DF4                                            l3553 1DEC  
                                          l3299 24F8                                            l2691 28B4  
                                          l2931 19DA                                            l2923 1998  
                                          l2915 195E                                            l2771 1DC2  
                                          l2763 1D7A                                            l2755 1D0A  
                                          l2747 1CB6                                            l2739 1C80  
                                          l2595 2488                                            l2587 2448  
                                          l2659 1F58                                            l2843 164E  
                                          l2835 1622                                            l2827 15DA  
                                          l2819 1524                                            l2667 2772  
                                          l2675 23E8                                            l2907 190E  
                                          l2851 1698                                            l3539 2326  
                                          l3563 1E02                                            l3555 1DEE  
                                          l3547 1DE4                                            l2685 27AA  
                                          l2781 2598                                            l2933 19F0  
                                          l2925 19D0                                            l2917 1972  
                                          l2765 1D8C                                            l2757 1D1E  
                                          l2749 1CC4                                            l2597 2498  
                                          l2589 246A                                            l2837 1628  
                                          l2845 165E                                            l2829 15F4  
                                          l2909 191E                                            l2861 1706  
                                          l2853 169A                                            l3573 1E28  
                                          l3581 1E5E                                            l3565 1E06  
                                          l3557 1DF0                                            l3549 1DE8  
                                          ?_pad 0017                                            l2783 259C  
                                          l2775 2552                                            l2951 1AD2  
                                          l2943 1A6E                                            l2935 19F8  
                                          l2927 19D4                                            l2919 1976  
                                          l2695 1AF8                                            l2759 1D2C  
                                          l2767 1D92                                            l2599 249C  
                                          l2839 163A                                            l2791 13F0  
                                          l2679 241E                                            l2871 1742  
                                          l2863 170E                                            l2855 16B4  
                                          l3663 0FF8                                            l3591 1E86  
                                          l3583 1E70                                            l3575 1E40  
                                          l3567 1E0A                                            l3559 1DF2  
                                          l2689 2898                                            l2777 2556  
                                          l3665 1A20                                            l2937 1A00  
                                          l2697 1AFC                                            l2769 1DA2  
                                          l2793 1410                                            l2873 1752  
                                          l2865 1718                                            l2857 16DE  
                                          l2849 1688                                            l2961 0F76  
                                          l3585 1E74                                            l3577 1E44  
                                          l3569 1E10                                            l2779 256A  
                                          l2947 1AAE                                            l2939 1A36  
                                          l2699 1B0A                                            l2795 1420  
                                          l2787 13A8                                            l2891 181A  
                                          l2883 17DE                                            l2867 171E  
                                          l2859 16E6                                            l2971 0FAC  
                                          l2963 0F88                                            l3587 1E78  
                                          l3579 1E58                                            l2949 1AC0  
                                          l2797 1422                                            l2789 13C8  
                                          l2893 1820                                            l2885 17F0  
                                          l2877 1792                                            l2869 1726  
                                          l2965 0F8C                                            l2957 0F42  
                                          l3589 1E7E                                            l2799 143C  
                                          l2879 17A4                                            l2887 1804  
                                          l2895 187E                                            l2991 0FD0  
                                          l2983 0FBE                                            l2975 0FB2  
                                          l2967 0F98                                            l2959 0F68  
                                          l2897 189A                                            l2889 1814  
                                          l2969 0F9A                                            l2993 1026  
                                          l2899 18B8                                            l2995 1046  
                                          l2987 0FC4                                            l2979 0FB8  
                                          l2997 1048                                            l2999 106E  
                                          STR_1 0F01                                            STR_2 0F1B  
                                          STR_3 0F33                                            u2000 1602  
                                          u2001 15FE                                            u2010 1614  
                                          u2011 1610                                            u2020 1622  
                                          u2100 17A4                                            u2021 161E  
                                          u2101 17A0                                            u2030 163A  
                                          u2110 17D8                                            u2031 1636  
                                          u2111 17D2                                            u2200 1908  
                                          u2120 17DA                                            u2040 1698  
                                          u2201 1904                                            u2041 1694  
                                          u2210 1998                                            u2130 17F0  
                                          u2050 16B4                                            u2211 1994  
                                          u2131 17EC                                            u2051 16B0  
                                          u2220 19D0                                            u1500 246A  
                                          u2140 1858                                            u2060 16DE  
                                          u2300 1046                                            u2221 19CC  
                                          u1501 2466                                            u2061 16DA  
                                          u2301 1042                                            _LATA 000F83  
                                          u2230 19EC                                            u1510 2498  
                                          u2150 189A                                            u2070 1742  
                                          u2310 106E                                            _LATB 000F84  
                                          u2231 19E8                                            u1511 2494  
                                          u2151 1896                                            u2071 173E  
                                          u2311 106A                                            _LATC 000F85  
                                          u2240 1AA8                                            u1520 2104  
                                          u1600 1EBE                                            u2160 18B8  
                                          u2080 178C                                            u2400 1326  
                                          u2320 10B2                                            _LATD 000F86  
                                          u2241 1AA2                                            u1521 2100  
                                          u1601 1EBA                                            u2161 18B4  
                                          u2145 1846                                            u2081 1786  
                                          u2401 1322                                            u2321 10AE  
                                          _LATE 000F87                                            u2250 1AAA  
                                          u1530 2116                                            u1610 1EE0  
                                          u2170 18D2                                            u2090 178E  
                                          u2330 1130                                            u1531 2112  
                                          u1611 1EDC                                            u2171 18CE  
                                          u2331 112A                                            u2260 1AC0  
                                          u1540 213E                                            u1620 1F36  
                                          u1700 241A                                            u2180 18EC  
                                          u2340 1132                                            u2261 1ABC  
                                          u1541 213A                                            u1621 1F32  
                                          u2181 18E8                                            u2270 1AD2  
                                          u1550 2174                                            u1630 1F44  
                                          u1710 2430                                            u2190 18FA  
                                          u2350 114A                                            u2271 1ACE  
                                          u1551 2170                                            u1631 1F40  
                                          u1711 242C                                            u2191 18F6  
                                          u2351 1146                                            u1720 27DA  
                                          u1800 1C3E                                            u1640 26D8  
                                          u1560 2678                                            u2360 1170  
                                          u2280 0F68                                            u1721 27D4  
                                          u1801 1C3A                                            u1641 26D4  
                                          u1561 2674                                            u2361 116C  
                                          u2281 0F64                                            u1730 27DC  
                                          u1810 1C92                                            u1490 245A  
                                          u1570 280A                                            u1650 27A2  
                                          u2370 1196                                            u2290 1038  
                                          u1811 1C8E                                            u1491 2456  
                                          u1571 2806                                            u1651 279C  
                                          u2371 1192                                            u2291 1034  
                                          u2540 2920                                            u1740 1B0A  
                                          u1820 1CC4                                            u1900 13DA  
                                          u1660 27A4                                            u1580 276A  
                                          u2380 123C                                            u2541 291A  
                                          u1741 1B06                                            u1821 1CC0  
                                          u1581 2764                                            u2381 1238  
                                          u2550 2922                                            u1750 1B3C  
                                          u1830 1D02                                            u1910 13F0  
                                          u1670 2732                                            u1590 276C  
                                          u2390 1262                                            u1751 1B38  
                                          u1831 1CFE                                            u1911 13EC  
                                          u1671 272C                                            u2391 125E  
                                          u2560 24B6                                            u1840 1D2C  
                                          u1920 1420                                            u1680 2734  
                                          u2561 24B2                                            u1761 1B66  
                                          u1841 1D28                                            u1921 141C  
                                          u2570 24E8                                            u1770 1B8A  
                                          u1850 1D5A                                            u1930 143C  
                                          u1690 2418                                            u2571 24E4  
                                          u1771 1B86                                            u1851 1D56  
                                          u1931 1438                                            u1691 2412  
                                          u1780 1BB4                                            u1860 1DA2  
                                          u1940 146A                                            u2900 2382  
                                          u1781 1BB0                                            u1861 1D9E  
                                          u1941 1466                                            u2901 237E  
                                          u1870 256A                                            u1790 1BF4  
                                          u1950 1478                                            u2910 1E24  
                                          u1871 2566                                            u1791 1BF0  
                                          u1951 1474                                            u2911 1E20  
                                          u1880 2598                                            u1960 15A2  
                                          u2920 1E58                                            u1881 2594  
                                          u1961 159E                                            u2921 1E54  
                                          u2690 25EC                                            u1970 15C0  
                                          u1890 13D8                                            u2930 1E70  
                                          u2691 25E8                                            u1971 15BC  
                                          u1891 13D2                                            u2931 1E6C  
                                          u1980 15DA                                            u2940 1E96  
                                          _PMD0 000EE1                                            u1981 15D6  
                                          u2941 1E90                                            _PMD1 000EE2  
                                          u1990 15F4                                            _PMD2 000EE3  
                                          u1991 15F0                                            _PMD3 000EE4  
                                          _PMD4 000EE5                                            _PMD5 000EE6  
                                          u2890 23DE                                            u2946 1E98  
                                          u2891 23DA                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 2446                                            abs@a 0017  
                                          _dbuf 01C8                                            _atoi 195E  
                                          _main 1DE4                                            _dtoa 13A8  
                                 ?_EUSART1_Read 0001                                            _loop 0090  
                                          _prec 008C                                            _nout 0088  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                            _xtoa 1688  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 2636  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 290C  
                         _eusart1RxStatusBuffer 0100                                 __end_of___aodiv 1C80  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1DE4  
                                 __CFG_WDTE$OFF 000000                                           ?_xtoa 0022  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 29BC  
                                         i2l333 2630                                           i2l350 29C2  
                                         i2l343 2030                                           i2l159 0112  
                                         i2l336 2634                                           i2l353 29A4  
                                         i2l347 2842                                           i2l356 29B0  
                                         i2l480 26BC                                           i2l491 286E  
                                         i2l477 26B8                                           i2l494 29C4  
                                         i2l487 20F0                                           i2l497 29B6  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00A6                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 0093                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 267A  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _data1 00DC  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                                         _fputc 20F2                                 __end_of_isalpha 273A  
                                         _fputs 2636                                 __end_of_isdigit 27E2  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 008A                                           _putch 2994  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 2772                                 __end_of_isspace 25A4  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 27AA  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 25A4                                  ??_EUSART1_Read 0005  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 2446           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 29C6     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 29C4           __end_of_EUSART2_SetTxInterruptHandler 293A  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 2930  
                                  _toupper$1779 0011                                 __initialization 24FC  
                                  __end_of_atoi 1AF8                      __end_of_EUSART1_Initialize 2310  
                                  __end_of_main 1EB0                                    __end_of_dtoa 1688  
                                  __end_of_xtoa 195E                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                                          ??_main 0056  
                                        ??_dtoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003             __end_of_EUSART2_DefaultErrorHandler 29B2  
                   _EUSART2_DefaultErrorHandler 29AC                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_EUSART2_Initialize 2294                        _eusart2TxBufferRemaining 00DB  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                                        i2l3111 286A                                          i2l3103 2844  
                                        i2l3105 2854                                          i2l3201 29B2  
                                __CFG_WDTCCS$SC 000000                                          i2l3107 2856  
                                        i2l3203 29B8                                          i2l3109 2866  
                                        i2l3321 267A                                          i2l3331 26B2  
                                        i2l3323 268C                                          i2l3091 283E  
                                        i2l3083 2818                                          i2l3251 2616  
                                        i2l3341 207A                                          i2l3333 2032  
                                        i2l3325 269C                                          i2l3085 2828  
                                        i2l3261 1F92                                          i2l3253 2626  
                                        i2l3245 25EE                                          i2l3351 20EC  
                                        i2l3343 2088                                          i2l3335 2042  
                                        i2l3327 269E                                          i2l3087 282A  
                                        i2l3271 1FF2                                          i2l3263 1FA2  
                                        i2l3255 262A                                          i2l3247 2600  
                                        i2l3345 2098                                          i2l3337 2050  
                                        i2l3329 26AE                                          i2l3089 283A  
                                        i2l3273 200E                                          i2l3265 1FBA  
                                        i2l3257 1F72                                          i2l3249 2612  
                                        i2l3347 20B2                                          i2l3339 2060  
                                        i2l3275 202C                                          i2l3267 1FCA  
                                        i2l3259 1F82                                          i2l3349 20CE  
                                        i2l3197 299E                                          i2l3269 1FDA  
                                        i2l3381 0072                                          i2l3373 001A  
                                        i2l3199 29AC                                          i2l3391 00F4  
                                        i2l3383 0080                                          i2l3375 0028  
                                        i2l3385 00AC                                          i2l3377 0038  
                                        i2l3387 00BA                                          i2l3379 0046  
                                        i2l3389 00E6                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        _TABLAT 000FF5                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 00AE                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                        _RXMode 29A6                                  __CFG_PWRTE$OFF 000000  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 2898  
                                __CFG_STVREN$ON 000000                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 2522                                          clear_1 252E  
                                        clear_2 253A                                          _rxData 0200  
                   _EUSART2_FramingErrorHandler 00D0                                          _printf 2870  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 27E2                                   ??_PrintRXBuff 0055  
                                        fputc@c 0007                                  _PMD_Initialize 28BE  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_islower 0007  
                                  __mediumconst 0000                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 25EE                                __end_of_vfprintf 23E8  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0164                                       ??_toupper 000D  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0078  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 28DA  
                               _eusart2TxBuffer 0080                                      __accesstop 0060  
                       __end_of__initialization 2548                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 2870  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2924  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 2188  
                                 __end_of_fputs 267A                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 299E                          __end_of_PMD_Initialize 28DA  
                          __end_of_EUSART1_Read 24FC                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 20F2                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 28F4                                         ??_fputs 0014  
                           __end_of_PrintRXBuff 2384                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 0098  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 0096  
                                 _eusart2TxHead 009D                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart2RxTail 009B                                   _eusart1TxTail 0097  
             _EUSART1_TxDefaultInterruptHandler 00D4                                   _eusart2TxTail 009C  
               ??_EUSART1_SetRxInterruptHandler 0007                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                         ?_RXMode 0001  
               __end_of_EUSART1_SetErrorHandler 2994                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         ?_printf 00B9  
                               ?_PMD_Initialize 0001                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 298A         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2980                           _eusart2RxStatusBuffer 0070  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 2032  
                            __size_of_vfpfcnvrt 0466                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                                    ?_ClearRxBuff 0001  
                                       _ByteNum 008E                                 __size_of_RXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 1AF8  
                                       ___aomod 1C80                                 __size_of___wmul 0026  
                                     ?_vfprintf 00B3                                    __psmallconst 0F00  
                           _EUSART1_is_rx_ready 290C                                         __pcinit 24FC  
               __end_of_EUSART2_SetErrorHandler 2962                                         __ramtop 0F00  
                                       __ptext0 1DE4                                         __ptext1 28DA  
                                       __ptext2 28BE                                         __ptext3 2188  
                                       __ptext4 28F4                                         __ptext5 29BE  
                                       __ptext6 2216                                         __ptext7 2930  
                                       __ptext8 293A                                         __ptext9 2944  
                               __size_of_printf 0028                                 __size_of_strlen 0036  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 29A6  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 299E  
                                   _PrintRXBuff 2310                           _OSCILLATOR_Initialize 28F4  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 26FE  
                                       _isdigit 27AA                              _EUSART1_Initialize 2294  
                                       _islower 273A                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 2552                                         _isupper 2772  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                                         _toupper 23E8  
                          end_of_initialization 2548                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00C8                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 2976          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 296C                              _EUSART2_Initialize 2216  
                             __end_of_vfpfcnvrt 13A8                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strlen@a 0007  
                                       strlen@s 0005                         fp__EUSART1_Transmit_ISR 0000  
                                    main@RXStat 00C5                __size_of_EUSART1_SetErrorHandler 000A  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                          ??_EUSART2_Initialize 0007                                    _EUSART1_Read 24A4  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 29AC  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 2844  
                  __end_of_INTERRUPT_Initialize 29C2                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 009E  
                                __end_of___wmul 28BE                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 2898                                  __end_of_strlen 2818  
                           start_initialization 24FC                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 26FE                                     __end_of_pad 1F72  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART2_Write 24A4  
                        fp__EUSART1_Receive_ISR 0000                __size_of_EUSART2_SetErrorHandler 000A  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
        __end_of_EUSART2_SetOverrunErrorHandler 294E         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 2944                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                     vfprintf@fmt 00B5  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 2844                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00DC                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 0095  
                                _eusart2RxCount 009A                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 00D2                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 009E                                ___aodiv@dividend 0005  
                       fp__EUSART2_Transmit_ISR 0000                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$1687 0014                                       _atoi$1688 0018  
                                     _atoi$1689 0016                                       __pnvBANK0 00C6  
                        _PIN_MANAGER_Initialize 2188                                       _dtoa$1203 0034  
                                     __pintcode 0008                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
             _EUSART2_TxDefaultInterruptHandler 00D8                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0064                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                    ?_PrintRXBuff 0001  
                                   __smallconst 0F00           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 29B8     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 29B2                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 00C6  
                  ?_EUSART2_DefaultErrorHandler 0001                                        ?_islower 0005  
                                      ?_isspace 0005                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 298A                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 29BE  
                  __size_of_EUSART2_Receive_ISR 00C0                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u241_40 283A  
                                      i2u241_41 2836                                        i2u242_40 2866  
                                      i2u250_40 1FCA                                        i2u242_41 2862  
                                      i2u250_41 1FC6                                        i2u252_40 200E  
                                      i2u251_48 1FE0                                        i2u252_41 200A  
                                      i2u251_49 1FF2                                        i2u261_40 268C  
                                      i2u261_41 2688                                        i2u262_40 26AE  
                                      i2u253_48 2014                                        i2u246_40 2600  
                                      i2u262_41 26AA                                        i2u253_49 2028  
                                      i2u246_41 25FC                                        i2u263_40 2050  
                                      i2u247_40 2626                                        i2u271_40 0028  
                                      i2u263_41 204C                                        i2u247_41 2622  
                                      i2u271_41 0024                                        i2u248_40 1F92  
                                      i2u272_40 0038                                        i2u248_41 1F8E  
                                      i2u272_41 0034                                        i2u265_40 2088  
                                      i2u264_48 2066                                        i2u281_40 00E6  
                                      i2u280_48 00C0                                        i2u273_40 0046  
                                      i2u265_41 2084                                        i2u264_49 207A  
                                      i2u281_41 00E2                                        i2u280_49 00D4  
                                      i2u273_41 0042                                        i2u249_48 1FA8  
                                      i2u282_40 00F4                                        i2u249_49 1FBA  
                                      i2u282_41 00F0                                        i2u267_40 20CE  
                                      i2u266_48 209E                                        i2u275_40 0072  
                                      i2u274_48 004C                                        i2u267_41 20CA  
                                      i2u266_49 20B2                                        i2u275_41 006E  
                                      i2u274_49 0060                                        i2u283_48 00FA  
                                      i2u276_40 0080                                        i2u283_49 010E  
                                      i2u276_41 007C                                        i2u268_48 20D4  
                                      i2u268_49 20E8                                        _PIR3bits 000ECD  
                                      i2u278_40 00AC                                        i2u277_48 0086  
                                      i2u278_41 00A8                                        i2u277_49 009A  
                                      i2u279_40 00BA                                        i2u279_41 00B6  
                                      _PIR7bits 000ED1                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 0F42                                       _xtoa$1214 0035  
                                     _xtoa$1215 0037                               ___wmul@multiplier 0005  
                 __size_of_EUSART2_Transmit_ISR 0048                                    _isspace$1714 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 00B2  
                                     copy_data0 2510                           ?_INTERRUPT_Initialize 0001  
                       _EUSART2_SetErrorHandler 2958                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 00CE           __end_of_EUSART1_SetTxInterruptHandler 296C  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 2962  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 2944  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 293A  
                                    vfprintf@ap 00B7                                        __Lrparam 0000  
                                    vfprintf@fp 00B3                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 007C  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 29BE                     _EUSART1_DefaultErrorHandler 29B8  
                   __end_of_EUSART1_is_rx_ready 2924                            _EUSART2_ErrorHandler 00CC  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                                  PrintRXBuff@i 00C3                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 294E  
                                      __ptext11 2958                                        __ptext20 2870  
                                      __ptext12 2294                                        __ptext21 2384  
                                      __ptext13 2962                                        __ptext30 27E2  
                                      __ptext22 0F42                                        __ptext14 296C  
                                      __ptext31 2636                                        __ptext23 1688  
                                      __ptext15 2976                                        __ptext40 27AA  
                                      __ptext32 20F2                                        __ptext24 23E8  
                                      __ptext16 2980                                        __ptext41 2898  
                                      __ptext33 2994                                        __ptext25 273A  
                                      __ptext17 298A                                        __ptext50 29AC  
                                      __ptext42 290C                                        __ptext34 2446  
                                      __ptext26 2772                                        __ptext18 29A6  
                                      __ptext51 2818                                        __ptext43 24A4  
                                      __ptext35 26BE                                        __ptext27 26FE  
                                      __ptext19 2310                                        __ptext52 267A  
                                      __ptext44 25A4                                        __ptext36 1C80  
                                      __ptext28 13A8                                        __ptext53 2032  
                                      __ptext37 1AF8                                        __ptext29 1EB0  
                                      __ptext54 29B2                                        __ptext46 25EE  
                                      __ptext38 195E                                        __ptext55 29C4  
                                      __ptext47 1F72                                        __ptext39 2552  
                                      __ptext56 29B8                                        __ptext48 299E  
                                      __ptext57 2844                                        __ptext49 29C2  
                                      __ptext58 0000                                __size_of_isupper 0038  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                                 __size_of_atoi 019A                                   __size_of_main 00CC  
                                 __size_of_dtoa 02E0           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 29C4     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 29C2                                   __size_of_xtoa 02D6  
                          __CFG_WDTCWS$WDTCWS_7 000000            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                                      _rxStatus 0092                                        int$flags 005B  
                                      _vfprintf 2384              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 2818  
                                     printf@fmt 00B9                     _EUSART1_FramingErrorHandler 00CA  
                           _EUSART1_Receive_ISR 2032                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                                _vfpfcnvrt$1229 00B0                                      _INTCONbits 000FF2  
                                   _NVMCON1bits 000F81                            __size_of_PrintRXBuff 0074  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                       ??_EUSART2_SetErrorHandler 0007  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 2980  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2976  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 26BE  
                                      printf@ap 00C1  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                 ___aomod@counter 0015  
                            _eusart1RxLastError 0094                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 1F72                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 2216                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 0099  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 00D6                             __end_of_ClearRxBuff 25EE  
