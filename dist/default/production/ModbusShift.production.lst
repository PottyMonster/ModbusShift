

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 04 19:28:14 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    86  0000                     
    87                           ; Version 2.10
    88                           ; Generated 31/07/2019 GMT
    89                           ; 
    90                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F46K40 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataBANK0
   123  00236A                     __pidataBANK0:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for _data1
   127  00236A  11                 	db	17
   128  00236B  03                 	db	3
   129  00236C  06                 	db	6
   130  00236D  AE                 	db	174
   131  00236E  41                 	db	65
   132  00236F  56                 	db	86
   133  002370  52                 	db	82
   134  002371  43                 	db	67
   135  002372  40                 	db	64
   136  002373  49                 	db	73
   137  002374  AD                 	db	173
   138                           
   139                           ;initializer for stoa@F1139
   140  002375  28                 	db	40
   141  002376  6E                 	db	110
   142  002377  75                 	db	117
   143  002378  6C                 	db	108
   144  002379  6C                 	db	108
   145  00237A  29                 	db	41
   146  00237B  00                 	db	0
   147                           
   148                           ;initializer for _ExpectedBytes
   149  00237C  0008               	dw	8
   150                           
   151                           	psect	nvBANK0
   152  0000CA                     __pnvBANK0:
   153                           	opt callstack 0
   154  0000CA                     _EUSART1_ErrorHandler:
   155                           	opt callstack 0
   156  0000CA                     	ds	2
   157  0000CC                     _EUSART1_OverrunErrorHandler:
   158                           	opt callstack 0
   159  0000CC                     	ds	2
   160  0000CE                     _EUSART1_FramingErrorHandler:
   161                           	opt callstack 0
   162  0000CE                     	ds	2
   163  0000D0                     _EUSART2_ErrorHandler:
   164                           	opt callstack 0
   165  0000D0                     	ds	2
   166  0000D2                     _EUSART2_OverrunErrorHandler:
   167                           	opt callstack 0
   168  0000D2                     	ds	2
   169  0000D4                     _EUSART2_FramingErrorHandler:
   170                           	opt callstack 0
   171  0000D4                     	ds	2
   172  0000D6                     _EUSART1_RxDefaultInterruptHandler:
   173                           	opt callstack 0
   174  0000D6                     	ds	2
   175  0000D8                     _EUSART1_TxDefaultInterruptHandler:
   176                           	opt callstack 0
   177  0000D8                     	ds	2
   178  0000DA                     _EUSART2_RxDefaultInterruptHandler:
   179                           	opt callstack 0
   180  0000DA                     	ds	2
   181  0000DC                     _EUSART2_TxDefaultInterruptHandler:
   182                           	opt callstack 0
   183  0000DC                     	ds	2
   184  0000DE                     _eusart1TxBufferRemaining:
   185                           	opt callstack 0
   186  0000DE                     	ds	1
   187  0000DF                     _eusart2TxBufferRemaining:
   188                           	opt callstack 0
   189  0000DF                     	ds	1
   190  0000                     _RC2REG	set	3737
   191  0000                     _RC2STAbits	set	3741
   192  0000                     _TX2REG	set	3738
   193  0000                     _TX2STAbits	set	3742
   194  0000                     _SP2BRGH	set	3740
   195  0000                     _SP2BRGL	set	3739
   196  0000                     _TX2STA	set	3742
   197  0000                     _RC2STA	set	3741
   198  0000                     _BAUD2CON	set	3743
   199  0000                     _PIR7bits	set	3793
   200  0000                     _PIR3bits	set	3789
   201  0000                     _PIE3bits	set	3781
   202  0000                     _PMD5	set	3814
   203  0000                     _PMD4	set	3813
   204  0000                     _PMD3	set	3812
   205  0000                     _PMD2	set	3811
   206  0000                     _PMD1	set	3810
   207  0000                     _PMD0	set	3809
   208  0000                     _OSCTUNE	set	3805
   209  0000                     _OSCFRQ	set	3806
   210  0000                     _OSCEN	set	3804
   211  0000                     _OSCCON3	set	3802
   212  0000                     _OSCCON1	set	3800
   213  0000                     _RX2PPS	set	3725
   214  0000                     _RC6PPS	set	3837
   215  0000                     _RB6PPS	set	3829
   216  0000                     _RX1PPS	set	3765
   217  0000                     _INLVLE	set	3882
   218  0000                     _INLVLD	set	3874
   219  0000                     _INLVLC	set	3869
   220  0000                     _INLVLB	set	3861
   221  0000                     _INLVLA	set	3853
   222  0000                     _SLRCONE	set	3883
   223  0000                     _SLRCOND	set	3875
   224  0000                     _SLRCONC	set	3870
   225  0000                     _SLRCONB	set	3862
   226  0000                     _SLRCONA	set	3854
   227  0000                     _ODCOND	set	3876
   228  0000                     _ODCONC	set	3871
   229  0000                     _ODCONB	set	3863
   230  0000                     _ODCONA	set	3855
   231  0000                     _ODCONE	set	3884
   232  0000                     _WPUC	set	3872
   233  0000                     _WPUA	set	3856
   234  0000                     _WPUB	set	3864
   235  0000                     _WPUE	set	3885
   236  0000                     _WPUD	set	3877
   237  0000                     _ANSELA	set	3857
   238  0000                     _ANSELE	set	3886
   239  0000                     _ANSELB	set	3865
   240  0000                     _ANSELC	set	3873
   241  0000                     _ANSELD	set	3878
   242  0000                     _LATDbits	set	3974
   243  0000                     _LATAbits	set	3971
   244  0000                     _RC1REG	set	3993
   245  0000                     _RC1STAbits	set	3997
   246  0000                     _TX1REG	set	3994
   247  0000                     _TX1STAbits	set	3998
   248  0000                     _SP1BRGH	set	3996
   249  0000                     _SP1BRGL	set	3995
   250  0000                     _TX1STA	set	3998
   251  0000                     _RC1STA	set	3997
   252  0000                     _BAUD1CON	set	3999
   253  0000                     _NVMDAT	set	3968
   254  0000                     _NVMADRL	set	3966
   255  0000                     _NVMADRH	set	3967
   256  0000                     _NVMCON2	set	3970
   257  0000                     _TABLAT	set	4085
   258  0000                     _TBLPTRL	set	4086
   259  0000                     _TBLPTRH	set	4087
   260  0000                     _TBLPTRU	set	4088
   261  0000                     _NVMCON1bits	set	3969
   262  0000                     _INTCONbits	set	4082
   263  0000                     _TRISD	set	3979
   264  0000                     _TRISC	set	3978
   265  0000                     _TRISB	set	3977
   266  0000                     _TRISA	set	3976
   267  0000                     _TRISE	set	3980
   268  0000                     _LATC	set	3973
   269  0000                     _LATB	set	3972
   270  0000                     _LATA	set	3971
   271  0000                     _LATD	set	3974
   272  0000                     _LATE	set	3975
   273                           
   274                           	psect	mediumconst
   275  00FE7E                     __pmediumconst:
   276                           	opt callstack 0
   277  00FE7E  00                 	db	0
   278  00FE7F                     STR_1:
   279                           
   280                           ; BSR set to: 0
   281  00FE7F  0D                 	db	13
   282  00FE80  44                 	db	68	;'D'
   283  00FE81  61                 	db	97	;'a'
   284  00FE82  6E                 	db	110	;'n'
   285  00FE83  20                 	db	32
   286  00FE84  61                 	db	97	;'a'
   287  00FE85  6E                 	db	110	;'n'
   288  00FE86  64                 	db	100	;'d'
   289  00FE87  20                 	db	32
   290  00FE88  53                 	db	83	;'S'
   291  00FE89  61                 	db	97	;'a'
   292  00FE8A  6D                 	db	109	;'m'
   293  00FE8B  27                 	db	39
   294  00FE8C  73                 	db	115	;'s'
   295  00FE8D  20                 	db	32
   296  00FE8E  4D                 	db	77	;'M'
   297  00FE8F  6F                 	db	111	;'o'
   298  00FE90  64                 	db	100	;'d'
   299  00FE91  62                 	db	98	;'b'
   300  00FE92  75                 	db	117	;'u'
   301  00FE93  73                 	db	115	;'s'
   302  00FE94  20                 	db	32
   303  00FE95  47                 	db	71	;'G'
   304  00FE96  50                 	db	80	;'P'
   305  00FE97  49                 	db	73	;'I'
   306  00FE98  4F                 	db	79	;'O'
   307  00FE99  20                 	db	32
   308  00FE9A  45                 	db	69	;'E'
   309  00FE9B  78                 	db	120	;'x'
   310  00FE9C  70                 	db	112	;'p'
   311  00FE9D  61                 	db	97	;'a'
   312  00FE9E  6E                 	db	110	;'n'
   313  00FE9F  73                 	db	115	;'s'
   314  00FEA0  69                 	db	105	;'i'
   315  00FEA1  6F                 	db	111	;'o'
   316  00FEA2  6E                 	db	110	;'n'
   317  00FEA3  20                 	db	32
   318  00FEA4  2D                 	db	45
   319  00FEA5  20                 	db	32
   320  00FEA6  41                 	db	65	;'A'
   321  00FEA7  50                 	db	80	;'P'
   322  00FEA8  30                 	db	48	;'0'
   323  00FEA9  30                 	db	48	;'0'
   324  00FEAA  30                 	db	48	;'0'
   325  00FEAB  78                 	db	120	;'x'
   326  00FEAC  78                 	db	120	;'x'
   327  00FEAD  78                 	db	120	;'x'
   328  00FEAE  78                 	db	120	;'x'
   329  00FEAF  78                 	db	120	;'x'
   330  00FEB0  20                 	db	32
   331  00FEB1  56                 	db	86	;'V'
   332  00FEB2  30                 	db	48	;'0'
   333  00FEB3  2E                 	db	46
   334  00FEB4  31                 	db	49	;'1'
   335  00FEB5  0D                 	db	13
   336  00FEB6  0A                 	db	10
   337  00FEB7  00                 	db	0
   338  00FEB8                     STR_8:
   339                           
   340                           ; BSR set to: 0
   341  00FEB8  0D                 	db	13
   342  00FEB9  20                 	db	32
   343  00FEBA  20                 	db	32
   344  00FEBB  20                 	db	32
   345  00FEBC  30                 	db	48	;'0'
   346  00FEBD  78                 	db	120	;'x'
   347  00FEBE  31                 	db	49	;'1'
   348  00FEBF  30                 	db	48	;'0'
   349  00FEC0  20                 	db	32
   350  00FEC1  2D                 	db	45
   351  00FEC2  20                 	db	32
   352  00FEC3  57                 	db	87	;'W'
   353  00FEC4  72                 	db	114	;'r'
   354  00FEC5  69                 	db	105	;'i'
   355  00FEC6  74                 	db	116	;'t'
   356  00FEC7  65                 	db	101	;'e'
   357  00FEC8  20                 	db	32
   358  00FEC9  4D                 	db	77	;'M'
   359  00FECA  75                 	db	117	;'u'
   360  00FECB  6C                 	db	108	;'l'
   361  00FECC  74                 	db	116	;'t'
   362  00FECD  69                 	db	105	;'i'
   363  00FECE  70                 	db	112	;'p'
   364  00FECF  6C                 	db	108	;'l'
   365  00FED0  65                 	db	101	;'e'
   366  00FED1  20                 	db	32
   367  00FED2  52                 	db	82	;'R'
   368  00FED3  65                 	db	101	;'e'
   369  00FED4  67                 	db	103	;'g'
   370  00FED5  69                 	db	105	;'i'
   371  00FED6  73                 	db	115	;'s'
   372  00FED7  74                 	db	116	;'t'
   373  00FED8  65                 	db	101	;'e'
   374  00FED9  72                 	db	114	;'r'
   375  00FEDA  73                 	db	115	;'s'
   376  00FEDB  20                 	db	32
   377  00FEDC  28                 	db	40
   378  00FEDD  4D                 	db	77	;'M'
   379  00FEDE  61                 	db	97	;'a'
   380  00FEDF  78                 	db	120	;'x'
   381  00FEE0  20                 	db	32
   382  00FEE1  33                 	db	51	;'3'
   383  00FEE2  32                 	db	50	;'2'
   384  00FEE3  78                 	db	120	;'x'
   385  00FEE4  20                 	db	32
   386  00FEE5  31                 	db	49	;'1'
   387  00FEE6  36                 	db	54	;'6'
   388  00FEE7  62                 	db	98	;'b'
   389  00FEE8  69                 	db	105	;'i'
   390  00FEE9  74                 	db	116	;'t'
   391  00FEEA  29                 	db	41
   392  00FEEB  0D                 	db	13
   393  00FEEC  0A                 	db	10
   394  00FEED  0A                 	db	10
   395  00FEEE  00                 	db	0
   396  00FEEF                     STR_7:
   397                           
   398                           ; BSR set to: 0
   399  00FEEF  0D                 	db	13
   400  00FEF0  20                 	db	32
   401  00FEF1  20                 	db	32
   402  00FEF2  20                 	db	32
   403  00FEF3  30                 	db	48	;'0'
   404  00FEF4  78                 	db	120	;'x'
   405  00FEF5  30                 	db	48	;'0'
   406  00FEF6  33                 	db	51	;'3'
   407  00FEF7  20                 	db	32
   408  00FEF8  2D                 	db	45
   409  00FEF9  20                 	db	32
   410  00FEFA  52                 	db	82	;'R'
   411  00FEFB  65                 	db	101	;'e'
   412  00FEFC  61                 	db	97	;'a'
   413  00FEFD  64                 	db	100	;'d'
   414  00FEFE  20                 	db	32
   415  00FEFF  4D                 	db	77	;'M'
   416  00FF00  75                 	db	117	;'u'
   417  00FF01  6C                 	db	108	;'l'
   418  00FF02  74                 	db	116	;'t'
   419  00FF03  69                 	db	105	;'i'
   420  00FF04  70                 	db	112	;'p'
   421  00FF05  6C                 	db	108	;'l'
   422  00FF06  65                 	db	101	;'e'
   423  00FF07  20                 	db	32
   424  00FF08  52                 	db	82	;'R'
   425  00FF09  65                 	db	101	;'e'
   426  00FF0A  67                 	db	103	;'g'
   427  00FF0B  69                 	db	105	;'i'
   428  00FF0C  73                 	db	115	;'s'
   429  00FF0D  74                 	db	116	;'t'
   430  00FF0E  65                 	db	101	;'e'
   431  00FF0F  72                 	db	114	;'r'
   432  00FF10  73                 	db	115	;'s'
   433  00FF11  20                 	db	32
   434  00FF12  28                 	db	40
   435  00FF13  4D                 	db	77	;'M'
   436  00FF14  61                 	db	97	;'a'
   437  00FF15  78                 	db	120	;'x'
   438  00FF16  20                 	db	32
   439  00FF17  33                 	db	51	;'3'
   440  00FF18  32                 	db	50	;'2'
   441  00FF19  78                 	db	120	;'x'
   442  00FF1A  20                 	db	32
   443  00FF1B  31                 	db	49	;'1'
   444  00FF1C  36                 	db	54	;'6'
   445  00FF1D  62                 	db	98	;'b'
   446  00FF1E  69                 	db	105	;'i'
   447  00FF1F  74                 	db	116	;'t'
   448  00FF20  29                 	db	41
   449  00FF21  0D                 	db	13
   450  00FF22  0A                 	db	10
   451  00FF23  00                 	db	0
   452  00FF24                     STR_3:
   453                           
   454                           ; BSR set to: 0
   455  00FF24  0D                 	db	13
   456  00FF25  43                 	db	67	;'C'
   457  00FF26  6F                 	db	111	;'o'
   458  00FF27  6D                 	db	109	;'m'
   459  00FF28  70                 	db	112	;'p'
   460  00FF29  69                 	db	105	;'i'
   461  00FF2A  6C                 	db	108	;'l'
   462  00FF2B  65                 	db	101	;'e'
   463  00FF2C  64                 	db	100	;'d'
   464  00FF2D  20                 	db	32
   465  00FF2E  6F                 	db	111	;'o'
   466  00FF2F  6E                 	db	110	;'n'
   467  00FF30  20                 	db	32
   468  00FF31  25                 	db	37
   469  00FF32  73                 	db	115	;'s'
   470  00FF33  20                 	db	32
   471  00FF34  61                 	db	97	;'a'
   472  00FF35  74                 	db	116	;'t'
   473  00FF36  20                 	db	32
   474  00FF37  25                 	db	37
   475  00FF38  73                 	db	115	;'s'
   476  00FF39  20                 	db	32
   477  00FF3A  62                 	db	98	;'b'
   478  00FF3B  79                 	db	121	;'y'
   479  00FF3C  20                 	db	32
   480  00FF3D  58                 	db	88	;'X'
   481  00FF3E  43                 	db	67	;'C'
   482  00FF3F  38                 	db	56	;'8'
   483  00FF40  20                 	db	32
   484  00FF41  76                 	db	118	;'v'
   485  00FF42  65                 	db	101	;'e'
   486  00FF43  72                 	db	114	;'r'
   487  00FF44  73                 	db	115	;'s'
   488  00FF45  69                 	db	105	;'i'
   489  00FF46  6F                 	db	111	;'o'
   490  00FF47  6E                 	db	110	;'n'
   491  00FF48  20                 	db	32
   492  00FF49  25                 	db	37
   493  00FF4A  75                 	db	117	;'u'
   494  00FF4B  0D                 	db	13
   495  00FF4C  0A                 	db	10
   496  00FF4D  0A                 	db	10
   497  00FF4E  00                 	db	0
   498  00FF4F                     STR_9:
   499                           
   500                           ; BSR set to: 0
   501  00FF4F  0D                 	db	13
   502  00FF50  49                 	db	73	;'I'
   503  00FF51  6E                 	db	110	;'n'
   504  00FF52  69                 	db	105	;'i'
   505  00FF53  74                 	db	116	;'t'
   506  00FF54  61                 	db	97	;'a'
   507  00FF55  6C                 	db	108	;'l'
   508  00FF56  69                 	db	105	;'i'
   509  00FF57  73                 	db	115	;'s'
   510  00FF58  61                 	db	97	;'a'
   511  00FF59  74                 	db	116	;'t'
   512  00FF5A  69                 	db	105	;'i'
   513  00FF5B  6F                 	db	111	;'o'
   514  00FF5C  6E                 	db	110	;'n'
   515  00FF5D  20                 	db	32
   516  00FF5E  43                 	db	67	;'C'
   517  00FF5F  6F                 	db	111	;'o'
   518  00FF60  6D                 	db	109	;'m'
   519  00FF61  70                 	db	112	;'p'
   520  00FF62  6C                 	db	108	;'l'
   521  00FF63  65                 	db	101	;'e'
   522  00FF64  74                 	db	116	;'t'
   523  00FF65  65                 	db	101	;'e'
   524  00FF66  20                 	db	32
   525  00FF67  2D                 	db	45
   526  00FF68  20                 	db	32
   527  00FF69  52                 	db	82	;'R'
   528  00FF6A  65                 	db	101	;'e'
   529  00FF6B  61                 	db	97	;'a'
   530  00FF6C  64                 	db	100	;'d'
   531  00FF6D  79                 	db	121	;'y'
   532  00FF6E  0D                 	db	13
   533  00FF6F  0A                 	db	10
   534  00FF70  0A                 	db	10
   535  00FF71  00                 	db	0
   536  00FF72                     STR_10:
   537                           
   538                           ; BSR set to: 0
   539  00FF72  0D                 	db	13
   540  00FF73  0A                 	db	10
   541  00FF74  4D                 	db	77	;'M'
   542  00FF75  6F                 	db	111	;'o'
   543  00FF76  64                 	db	100	;'d'
   544  00FF77  62                 	db	98	;'b'
   545  00FF78  75                 	db	117	;'u'
   546  00FF79  73                 	db	115	;'s'
   547  00FF7A  20                 	db	32
   548  00FF7B  44                 	db	68	;'D'
   549  00FF7C  61                 	db	97	;'a'
   550  00FF7D  74                 	db	116	;'t'
   551  00FF7E  61                 	db	97	;'a'
   552  00FF7F  20                 	db	32
   553  00FF80  43                 	db	67	;'C'
   554  00FF81  61                 	db	97	;'a'
   555  00FF82  70                 	db	112	;'p'
   556  00FF83  74                 	db	116	;'t'
   557  00FF84  75                 	db	117	;'u'
   558  00FF85  72                 	db	114	;'r'
   559  00FF86  65                 	db	101	;'e'
   560  00FF87  20                 	db	32
   561  00FF88  43                 	db	67	;'C'
   562  00FF89  6F                 	db	111	;'o'
   563  00FF8A  6D                 	db	109	;'m'
   564  00FF8B  70                 	db	112	;'p'
   565  00FF8C  6C                 	db	108	;'l'
   566  00FF8D  65                 	db	101	;'e'
   567  00FF8E  74                 	db	116	;'t'
   568  00FF8F  65                 	db	101	;'e'
   569  00FF90  3A                 	db	58	;':'
   570  00FF91  0D                 	db	13
   571  00FF92  0A                 	db	10
   572  00FF93  00                 	db	0
   573  00FF94                     STR_11:
   574                           
   575                           ; BSR set to: 0
   576  00FF94  20                 	db	32
   577  00FF95  20                 	db	32
   578  00FF96  20                 	db	32
   579  00FF97  42                 	db	66	;'B'
   580  00FF98  79                 	db	121	;'y'
   581  00FF99  74                 	db	116	;'t'
   582  00FF9A  65                 	db	101	;'e'
   583  00FF9B  20                 	db	32
   584  00FF9C  4E                 	db	78	;'N'
   585  00FF9D  75                 	db	117	;'u'
   586  00FF9E  6D                 	db	109	;'m'
   587  00FF9F  3A                 	db	58	;':'
   588  00FFA0  20                 	db	32
   589  00FFA1  25                 	db	37
   590  00FFA2  69                 	db	105	;'i'
   591  00FFA3  20                 	db	32
   592  00FFA4  56                 	db	86	;'V'
   593  00FFA5  61                 	db	97	;'a'
   594  00FFA6  6C                 	db	108	;'l'
   595  00FFA7  3A                 	db	58	;':'
   596  00FFA8  20                 	db	32
   597  00FFA9  30                 	db	48	;'0'
   598  00FFAA  78                 	db	120	;'x'
   599  00FFAB  25                 	db	37
   600  00FFAC  30                 	db	48	;'0'
   601  00FFAD  32                 	db	50	;'2'
   602  00FFAE  78                 	db	120	;'x'
   603  00FFAF  20                 	db	32
   604  00FFB0  0D                 	db	13
   605  00FFB1  0A                 	db	10
   606  00FFB2  00                 	db	0
   607  00FFB3                     STR_6:
   608                           
   609                           ; BSR set to: 0
   610  00FFB3  0D                 	db	13
   611  00FFB4  46                 	db	70	;'F'
   612  00FFB5  75                 	db	117	;'u'
   613  00FFB6  6E                 	db	110	;'n'
   614  00FFB7  63                 	db	99	;'c'
   615  00FFB8  74                 	db	116	;'t'
   616  00FFB9  69                 	db	105	;'i'
   617  00FFBA  6F                 	db	111	;'o'
   618  00FFBB  6E                 	db	110	;'n'
   619  00FFBC  20                 	db	32
   620  00FFBD  43                 	db	67	;'C'
   621  00FFBE  6F                 	db	111	;'o'
   622  00FFBF  64                 	db	100	;'d'
   623  00FFC0  65                 	db	101	;'e'
   624  00FFC1  73                 	db	115	;'s'
   625  00FFC2  20                 	db	32
   626  00FFC3  53                 	db	83	;'S'
   627  00FFC4  75                 	db	117	;'u'
   628  00FFC5  70                 	db	112	;'p'
   629  00FFC6  70                 	db	112	;'p'
   630  00FFC7  6F                 	db	111	;'o'
   631  00FFC8  72                 	db	114	;'r'
   632  00FFC9  74                 	db	116	;'t'
   633  00FFCA  65                 	db	101	;'e'
   634  00FFCB  64                 	db	100	;'d'
   635  00FFCC  3A                 	db	58	;':'
   636  00FFCD  0D                 	db	13
   637  00FFCE  0A                 	db	10
   638  00FFCF  00                 	db	0
   639  00FFD0                     STR_2:
   640                           
   641                           ; BSR set to: 0
   642  00FFD0  0D                 	db	13
   643  00FFD1  43                 	db	67	;'C'
   644  00FFD2  61                 	db	97	;'a'
   645  00FFD3  72                 	db	114	;'r'
   646  00FFD4  64                 	db	100	;'d'
   647  00FFD5  20                 	db	32
   648  00FFD6  53                 	db	83	;'S'
   649  00FFD7  65                 	db	101	;'e'
   650  00FFD8  72                 	db	114	;'r'
   651  00FFD9  20                 	db	32
   652  00FFDA  4E                 	db	78	;'N'
   653  00FFDB  6F                 	db	111	;'o'
   654  00FFDC  2E                 	db	46
   655  00FFDD  20                 	db	32
   656  00FFDE  78                 	db	120	;'x'
   657  00FFDF  78                 	db	120	;'x'
   658  00FFE0  78                 	db	120	;'x'
   659  00FFE1  78                 	db	120	;'x'
   660  00FFE2  78                 	db	120	;'x'
   661  00FFE3  78                 	db	120	;'x'
   662  00FFE4  78                 	db	120	;'x'
   663  00FFE5  20                 	db	32
   664  00FFE6  0D                 	db	13
   665  00FFE7  0A                 	db	10
   666  00FFE8  00                 	db	0
   667  00FFE9                     STR_4:
   668                           
   669                           ; BSR set to: 0
   670  00FFE9  4D                 	db	77	;'M'
   671  00FFEA  61                 	db	97	;'a'
   672  00FFEB  72                 	db	114	;'r'
   673  00FFEC  20                 	db	32
   674  00FFED  20                 	db	32
   675  00FFEE  34                 	db	52	;'4'
   676  00FFEF  20                 	db	32
   677  00FFF0  32                 	db	50	;'2'
   678  00FFF1  30                 	db	48	;'0'
   679  00FFF2  32                 	db	50	;'2'
   680  00FFF3  31                 	db	49	;'1'
   681  00FFF4  00                 	db	0
   682  00FFF5                     STR_5:
   683                           
   684                           ; BSR set to: 0
   685  00FFF5  31                 	db	49	;'1'
   686  00FFF6  39                 	db	57	;'9'
   687  00FFF7  3A                 	db	58	;':'
   688  00FFF8  32                 	db	50	;'2'
   689  00FFF9  38                 	db	56	;'8'
   690  00FFFA  3A                 	db	58	;':'
   691  00FFFB  30                 	db	48	;'0'
   692  00FFFC  34                 	db	52	;'4'
   693  00FFFD  00                 	db	0
   694                           
   695                           ; #config settings
   696  00FFFE  00                 	db	0	; dummy byte at the end
   697  0000                     
   698                           	psect	cinit
   699  001EA6                     __pcinit:
   700                           	opt callstack 0
   701  001EA6                     start_initialization:
   702                           	opt callstack 0
   703  001EA6                     __initialization:
   704                           	opt callstack 0
   705                           
   706                           ; Initialize objects allocated to BANK0 (20 bytes)
   707                           ; load TBLPTR registers with __pidataBANK0
   708  001EA6  0E6A               	movlw	low __pidataBANK0
   709  001EA8  6EF6               	movwf	tblptrl,c
   710  001EAA  0E23               	movlw	high __pidataBANK0
   711  001EAC  6EF7               	movwf	tblptrh,c
   712  001EAE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   713  001EB0  6EF8               	movwf	tblptru,c
   714  001EB2  EE00  F0E0         	lfsr	0,__pdataBANK0
   715  001EB6  EE10 F014          	lfsr	1,20
   716  001EBA                     copy_data0:
   717  001EBA  0009               	tblrd		*+
   718  001EBC  CFF5 FFEE          	movff	tablat,postinc0
   719  001EC0  50E5               	movf	postdec1,w,c
   720  001EC2  50E1               	movf	fsr1l,w,c
   721  001EC4  E1FA               	bnz	copy_data0
   722                           
   723                           ; Clear objects allocated to BANK2 (200 bytes)
   724  001EC6  EE02  F000         	lfsr	0,__pbssBANK2
   725  001ECA  0EC8               	movlw	200
   726  001ECC                     clear_0:
   727  001ECC  6AEE               	clrf	postinc0,c
   728  001ECE  06E8               	decf	wreg,f,c
   729  001ED0  E1FD               	bnz	clear_0
   730                           
   731                           ; Clear objects allocated to BANK1 (232 bytes)
   732  001ED2  EE01  F000         	lfsr	0,__pbssBANK1
   733  001ED6  0EE8               	movlw	232
   734  001ED8                     clear_1:
   735  001ED8  6AEE               	clrf	postinc0,c
   736  001EDA  06E8               	decf	wreg,f,c
   737  001EDC  E1FD               	bnz	clear_1
   738                           
   739                           ; Clear objects allocated to BANK0 (63 bytes)
   740  001EDE  EE00  F060         	lfsr	0,__pbssBANK0
   741  001EE2  0E3F               	movlw	63
   742  001EE4                     clear_2:
   743  001EE4  6AEE               	clrf	postinc0,c
   744  001EE6  06E8               	decf	wreg,f,c
   745  001EE8  E1FD               	bnz	clear_2
   746                           
   747                           ; Clear objects allocated to COMRAM (4 bytes)
   748  001EEA  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   749  001EEC  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   750  001EEE  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   751  001EF0  6A56               	clrf	__pbssCOMRAM& (0+255),c
   752  001EF2                     end_of_initialization:
   753                           	opt callstack 0
   754  001EF2                     __end_of__initialization:
   755                           	opt callstack 0
   756  001EF2  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   757  001EF4  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   758  001EF6  0100               	movlb	0
   759  001EF8  EF7D  F010         	goto	_main	;jump to C main() function
   760                           
   761                           	psect	bssCOMRAM
   762  000056                     __pbssCOMRAM:
   763                           	opt callstack 0
   764  000056                     _flags:
   765                           	opt callstack 0
   766  000056                     	ds	2
   767  000058                     _eusart1RxHead:
   768                           	opt callstack 0
   769  000058                     	ds	1
   770  000059                     _eusart2RxHead:
   771                           	opt callstack 0
   772  000059                     	ds	1
   773                           
   774                           	psect	bssBANK0
   775  000060                     __pbssBANK0:
   776                           	opt callstack 0
   777  000060                     _eusart1TxBuffer:
   778                           	opt callstack 0
   779  000060                     	ds	16
   780  000070                     _eusart2RxStatusBuffer:
   781                           	opt callstack 0
   782  000070                     	ds	8
   783  000078                     _eusart2RxBuffer:
   784                           	opt callstack 0
   785  000078                     	ds	8
   786  000080                     _eusart2TxBuffer:
   787                           	opt callstack 0
   788  000080                     	ds	8
   789  000088                     _nout:
   790                           	opt callstack 0
   791  000088                     	ds	2
   792  00008A                     _width:
   793                           	opt callstack 0
   794  00008A                     	ds	2
   795  00008C                     _prec:
   796                           	opt callstack 0
   797  00008C                     	ds	2
   798  00008E                     _ByteNum:
   799                           	opt callstack 0
   800  00008E                     	ds	2
   801  000090                     _ModDataCnt:
   802                           	opt callstack 0
   803  000090                     	ds	2
   804  000092                     _rxStatus:
   805                           	opt callstack 0
   806  000092                     	ds	1
   807  000093                     _RXStat:
   808                           	opt callstack 0
   809  000093                     	ds	1
   810  000094                     _Debug:
   811                           	opt callstack 0
   812  000094                     	ds	1
   813  000095                     _eusart1RxLastError:
   814                           	opt callstack 0
   815  000095                     	ds	1
   816  000096                     _eusart1RxCount:
   817                           	opt callstack 0
   818  000096                     	ds	1
   819  000097                     _eusart1RxTail:
   820                           	opt callstack 0
   821  000097                     	ds	1
   822  000098                     _eusart1TxTail:
   823                           	opt callstack 0
   824  000098                     	ds	1
   825  000099                     _eusart1TxHead:
   826                           	opt callstack 0
   827  000099                     	ds	1
   828  00009A                     _eusart2RxLastError:
   829                           	opt callstack 0
   830  00009A                     	ds	1
   831  00009B                     _eusart2RxCount:
   832                           	opt callstack 0
   833  00009B                     	ds	1
   834  00009C                     _eusart2RxTail:
   835                           	opt callstack 0
   836  00009C                     	ds	1
   837  00009D                     _eusart2TxTail:
   838                           	opt callstack 0
   839  00009D                     	ds	1
   840  00009E                     _eusart2TxHead:
   841                           	opt callstack 0
   842  00009E                     	ds	1
   843                           
   844                           	psect	dataBANK0
   845  0000E0                     __pdataBANK0:
   846                           	opt callstack 0
   847  0000E0                     _data1:
   848                           	opt callstack 0
   849  0000E0                     	ds	11
   850  0000EB                     stoa@F1139:
   851                           	opt callstack 0
   852  0000EB                     	ds	7
   853  0000F2                     _ExpectedBytes:
   854                           	opt callstack 0
   855  0000F2                     	ds	2
   856                           
   857                           	psect	bssBANK1
   858  000100                     __pbssBANK1:
   859                           	opt callstack 0
   860  000100                     _ModbusData:
   861                           	opt callstack 0
   862  000100                     	ds	100
   863  000164                     _eusart1RxStatusBuffer:
   864                           	opt callstack 0
   865  000164                     	ds	100
   866  0001C8                     _dbuf:
   867                           	opt callstack 0
   868  0001C8                     	ds	32
   869                           
   870                           	psect	bssBANK2
   871  000200                     __pbssBANK2:
   872                           	opt callstack 0
   873  000200                     _rxData:
   874                           	opt callstack 0
   875  000200                     	ds	100
   876  000264                     _eusart1RxBuffer:
   877                           	opt callstack 0
   878  000264                     	ds	100
   879                           
   880                           	psect	cstackBANK0
   881  00009F                     __pcstackBANK0:
   882                           	opt callstack 0
   883  00009F                     vfpfcnvrt@ll:
   884                           	opt callstack 0
   885                           
   886                           ; 8 bytes @ 0x0
   887  00009F                     	ds	8
   888  0000A7                     vfpfcnvrt@cp:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x8
   892  0000A7                     	ds	2
   893  0000A9                     vfpfcnvrt@c:
   894                           	opt callstack 0
   895                           
   896                           ; 1 bytes @ 0xA
   897  0000A9                     	ds	1
   898  0000AA                     vfpfcnvrt@done:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0xB
   902  0000AA                     	ds	2
   903  0000AC                     _vfpfcnvrt$1304:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0xD
   907  0000AC                     	ds	2
   908  0000AE                     vfpfcnvrt@llu:
   909                           	opt callstack 0
   910                           
   911                           ; 8 bytes @ 0xF
   912  0000AE                     	ds	8
   913  0000B6                     ?_vfprintf:
   914                           	opt callstack 0
   915  0000B6                     vfprintf@fp:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x17
   919  0000B6                     	ds	2
   920  0000B8                     vfprintf@fmt:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x19
   924  0000B8                     	ds	2
   925  0000BA                     vfprintf@ap:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x1B
   929  0000BA                     	ds	2
   930  0000BC                     ?_printf:
   931                           	opt callstack 0
   932  0000BC                     printf@fmt:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x1D
   936  0000BC                     	ds	10
   937  0000C6                     printf@ap:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x27
   941  0000C6                     	ds	2
   942  0000C8                     PrintModbus@i:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x29
   946  0000C8                     	ds	2
   947                           
   948                           	psect	cstackCOMRAM
   949  000001                     __pcstackCOMRAM:
   950                           	opt callstack 0
   951  000001                     ??_INTERRUPT_InterruptManager:
   952  000001                     
   953                           ; 1 bytes @ 0x0
   954  000001                     	ds	4
   955  000005                     ??_ClearRxBuff:
   956  000005                     ??_AddRxBuffToModBus:
   957  000005                     ?_strlen:
   958                           	opt callstack 0
   959  000005                     ?_isupper:
   960                           	opt callstack 0
   961  000005                     ?_isalpha:
   962                           	opt callstack 0
   963  000005                     ?_isdigit:
   964                           	opt callstack 0
   965  000005                     ?_isspace:
   966                           	opt callstack 0
   967  000005                     ?_islower:
   968                           	opt callstack 0
   969  000005                     ?___wmul:
   970                           	opt callstack 0
   971  000005                     ?___aodiv:
   972                           	opt callstack 0
   973  000005                     ?___aomod:
   974                           	opt callstack 0
   975  000005                     ?___lodiv:
   976                           	opt callstack 0
   977  000005                     ?___lomod:
   978                           	opt callstack 0
   979  000005                     EUSART2_Write@txData:
   980                           	opt callstack 0
   981  000005                     EUSART1_Read@readValue:
   982                           	opt callstack 0
   983  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   984                           	opt callstack 0
   985  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   986                           	opt callstack 0
   987  000005                     EUSART2_SetErrorHandler@interruptHandler:
   988                           	opt callstack 0
   989  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   990                           	opt callstack 0
   991  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   992                           	opt callstack 0
   993  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   994                           	opt callstack 0
   995  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   996                           	opt callstack 0
   997  000005                     EUSART1_SetErrorHandler@interruptHandler:
   998                           	opt callstack 0
   999  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1000                           	opt callstack 0
  1001  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1002                           	opt callstack 0
  1003  000005                     ClearModbusData@i:
  1004                           	opt callstack 0
  1005  000005                     ___wmul@multiplier:
  1006                           	opt callstack 0
  1007  000005                     isalpha@c:
  1008                           	opt callstack 0
  1009  000005                     isdigit@c:
  1010                           	opt callstack 0
  1011  000005                     isspace@c:
  1012                           	opt callstack 0
  1013  000005                     isupper@c:
  1014                           	opt callstack 0
  1015  000005                     strlen@s:
  1016                           	opt callstack 0
  1017  000005                     islower@c:
  1018                           	opt callstack 0
  1019  000005                     ___aodiv@dividend:
  1020                           	opt callstack 0
  1021  000005                     ___aomod@dividend:
  1022                           	opt callstack 0
  1023  000005                     ___lodiv@dividend:
  1024                           	opt callstack 0
  1025  000005                     ___lomod@dividend:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 8 bytes @ 0x4
  1029  000005                     	ds	1
  1030  000006                     putch@txData:
  1031                           	opt callstack 0
  1032  000006                     ClearRxBuff@i:
  1033                           	opt callstack 0
  1034  000006                     AddRxBuffToModBus@i:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x5
  1038  000006                     	ds	1
  1039  000007                     ??_isupper:
  1040  000007                     ??_isalpha:
  1041  000007                     ??_isdigit:
  1042  000007                     ??_isspace:
  1043  000007                     ??_islower:
  1044  000007                     ___wmul@multiplicand:
  1045                           	opt callstack 0
  1046  000007                     fputc@c:
  1047                           	opt callstack 0
  1048  000007                     strlen@a:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x6
  1052  000007                     	ds	1
  1053  000008                     ??_ModbusRx:
  1054                           
  1055                           ; 1 bytes @ 0x7
  1056  000008                     	ds	1
  1057  000009                     ___wmul@product:
  1058                           	opt callstack 0
  1059  000009                     fputc@fp:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x8
  1063  000009                     	ds	2
  1064  00000B                     ??_fputc:
  1065  00000B                     ?_toupper:
  1066                           	opt callstack 0
  1067  00000B                     _isspace$1791:
  1068                           	opt callstack 0
  1069  00000B                     toupper@c:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xA
  1073  00000B                     	ds	1
  1074  00000C                     ?_atoi:
  1075                           	opt callstack 0
  1076  00000C                     atoi@s:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0xB
  1080  00000C                     	ds	1
  1081  00000D                     ??_toupper:
  1082  00000D                     ___aodiv@divisor:
  1083                           	opt callstack 0
  1084  00000D                     ___aomod@divisor:
  1085                           	opt callstack 0
  1086  00000D                     ___lodiv@divisor:
  1087                           	opt callstack 0
  1088  00000D                     ___lomod@divisor:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 8 bytes @ 0xC
  1092  00000D                     	ds	1
  1093  00000E                     ??_atoi:
  1094                           
  1095                           ; 1 bytes @ 0xD
  1096  00000E                     	ds	2
  1097  000010                     ?_stoa:
  1098                           	opt callstack 0
  1099  000010                     stoa@fp:
  1100                           	opt callstack 0
  1101  000010                     fputs@s:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xF
  1105  000010                     	ds	1
  1106  000011                     _toupper$1855:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x10
  1110  000011                     	ds	1
  1111  000012                     stoa@s:
  1112                           	opt callstack 0
  1113  000012                     atoi@neg:
  1114                           	opt callstack 0
  1115  000012                     fputs@fp:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x11
  1119  000012                     	ds	2
  1120  000014                     ??_stoa:
  1121  000014                     fputs@c:
  1122                           	opt callstack 0
  1123  000014                     _atoi$1764:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x13
  1127  000014                     	ds	1
  1128  000015                     ___aodiv@counter:
  1129                           	opt callstack 0
  1130  000015                     ___aomod@counter:
  1131                           	opt callstack 0
  1132  000015                     ___lomod@counter:
  1133                           	opt callstack 0
  1134  000015                     fputs@i:
  1135                           	opt callstack 0
  1136  000015                     stoa@nuls:
  1137                           	opt callstack 0
  1138  000015                     ___lodiv@quotient:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 8 bytes @ 0x14
  1142  000015                     	ds	1
  1143  000016                     ___aodiv@sign:
  1144                           	opt callstack 0
  1145  000016                     ___aomod@sign:
  1146                           	opt callstack 0
  1147  000016                     _atoi$1766:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x15
  1151  000016                     	ds	1
  1152  000017                     ?_abs:
  1153                           	opt callstack 0
  1154  000017                     ?_pad:
  1155                           	opt callstack 0
  1156  000017                     pad@fp:
  1157                           	opt callstack 0
  1158  000017                     abs@a:
  1159                           	opt callstack 0
  1160  000017                     ___aodiv@quotient:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 8 bytes @ 0x16
  1164  000017                     	ds	1
  1165  000018                     _atoi$1765:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x17
  1169  000018                     	ds	1
  1170  000019                     ??_abs:
  1171  000019                     pad@buf:
  1172                           	opt callstack 0
  1173  000019                     atoi@n:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x18
  1177  000019                     	ds	2
  1178  00001B                     pad@p:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x1A
  1182  00001B                     	ds	1
  1183  00001C                     stoa@i:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x1B
  1187  00001C                     	ds	1
  1188  00001D                     ??_pad:
  1189  00001D                     ___lodiv@counter:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1C
  1193  00001D                     	ds	1
  1194  00001E                     pad@i:
  1195                           	opt callstack 0
  1196  00001E                     stoa@w:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x1D
  1200  00001E                     	ds	2
  1201  000020                     pad@w:
  1202                           	opt callstack 0
  1203  000020                     stoa@cp:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x1F
  1207  000020                     	ds	2
  1208  000022                     ?_dtoa:
  1209                           	opt callstack 0
  1210  000022                     ?_utoa:
  1211                           	opt callstack 0
  1212  000022                     ?_xtoa:
  1213                           	opt callstack 0
  1214  000022                     dtoa@fp:
  1215                           	opt callstack 0
  1216  000022                     stoa@p:
  1217                           	opt callstack 0
  1218  000022                     utoa@fp:
  1219                           	opt callstack 0
  1220  000022                     xtoa@fp:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x21
  1224  000022                     	ds	2
  1225  000024                     stoa@l:
  1226                           	opt callstack 0
  1227  000024                     dtoa@d:
  1228                           	opt callstack 0
  1229  000024                     utoa@d:
  1230                           	opt callstack 0
  1231  000024                     xtoa@d:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 8 bytes @ 0x23
  1235  000024                     	ds	8
  1236  00002C                     ??_dtoa:
  1237  00002C                     ??_utoa:
  1238  00002C                     xtoa@x:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x2B
  1242  00002C                     	ds	1
  1243  00002D                     ??_xtoa:
  1244                           
  1245                           ; 1 bytes @ 0x2C
  1246  00002D                     	ds	7
  1247  000034                     _dtoa$1260:
  1248                           	opt callstack 0
  1249  000034                     utoa@p:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x33
  1253  000034                     	ds	1
  1254  000035                     _xtoa$1289:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x34
  1258  000035                     	ds	1
  1259  000036                     dtoa@p:
  1260                           	opt callstack 0
  1261  000036                     utoa@w:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x35
  1265  000036                     	ds	1
  1266  000037                     _xtoa$1290:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x36
  1270  000037                     	ds	1
  1271  000038                     dtoa@w:
  1272                           	opt callstack 0
  1273  000038                     utoa@n:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 8 bytes @ 0x37
  1277  000038                     	ds	1
  1278  000039                     xtoa@p:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x38
  1282  000039                     	ds	1
  1283  00003A                     dtoa@s:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x39
  1287  00003A                     	ds	1
  1288  00003B                     xtoa@w:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x3A
  1292  00003B                     	ds	1
  1293  00003C                     dtoa@n:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 8 bytes @ 0x3B
  1297  00003C                     	ds	1
  1298  00003D                     xtoa@n:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 8 bytes @ 0x3C
  1302  00003D                     	ds	3
  1303  000040                     utoa@i:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x3F
  1307  000040                     	ds	4
  1308  000044                     dtoa@i:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x43
  1312  000044                     	ds	1
  1313  000045                     xtoa@i:
  1314                           	opt callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x44
  1317  000045                     	ds	2
  1318  000047                     xtoa@c:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x46
  1322  000047                     	ds	2
  1323  000049                     ?_vfpfcnvrt:
  1324                           	opt callstack 0
  1325  000049                     vfpfcnvrt@fp:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x48
  1329  000049                     	ds	2
  1330  00004B                     vfpfcnvrt@fmt:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x4A
  1334  00004B                     	ds	2
  1335  00004D                     vfpfcnvrt@ap:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x4C
  1339  00004D                     	ds	2
  1340  00004F                     ??_vfpfcnvrt:
  1341                           
  1342                           ; 1 bytes @ 0x4E
  1343  00004F                     	ds	4
  1344  000053                     vfprintf@cfmt:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x52
  1348  000053                     	ds	2
  1349  000055                     ??_PrintModbus:
  1350                           
  1351                           ; 1 bytes @ 0x54
  1352  000055                     	ds	1
  1353  000056                     
  1354                           ; 1 bytes @ 0x55
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 60 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  RXStat          1    0        _Bool 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels required when called:   14
  1380 ;; This function calls:
  1381 ;;		_ClearModbusData
  1382 ;;		_ClearRxBuff
  1383 ;;		_InitialiseString
  1384 ;;		_ModbusRx
  1385 ;;		_PrintModbus
  1386 ;;		_RXMode
  1387 ;;		_SYSTEM_Initialize
  1388 ;; This function is called by:
  1389 ;;		Startup code after reset
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text0
  1394  0020FA                     __ptext0:
  1395                           	opt callstack 0
  1396  0020FA                     _main:
  1397                           	opt callstack 17
  1398  0020FA                     
  1399                           ;main.c: 63:     SYSTEM_Initialize();
  1400  0020FA  EC90  F011         	call	_SYSTEM_Initialize	;wreg free
  1401  0020FE                     
  1402                           ;main.c: 70:     (INTCONbits.GIE = 1);
  1403  0020FE  8EF2               	bsf	242,7,c	;volatile
  1404  002100                     
  1405                           ;main.c: 76:     (INTCONbits.PEIE = 1);
  1406  002100  8CF2               	bsf	242,6,c	;volatile
  1407  002102  9883               	bcf	131,4,c	;volatile
  1408  002104  9A83               	bcf	131,5,c	;volatile
  1409  002106  9C83               	bcf	131,6,c	;volatile
  1410  002108  9E83               	bcf	131,7,c	;volatile
  1411  00210A                     
  1412                           ;main.c: 86:     InitialiseString();
  1413  00210A  EC1F  F00E         	call	_InitialiseString	;wreg free
  1414  00210E                     
  1415                           ;main.c: 89:     RXMode();
  1416  00210E  ECFA  F011         	call	_RXMode	;wreg free
  1417  002112                     
  1418                           ;main.c: 90:     ClearRxBuff();
  1419  002112  ECCF  F00F         	call	_ClearRxBuff	;wreg free
  1420  002116                     l4868:
  1421                           
  1422                           ;main.c: 95:     {;main.c: 96:         if(ModbusRx() == 1){
  1423  002116  EC46  F00A         	call	_ModbusRx	;wreg free
  1424  00211A  06E8               	decf	wreg,f,c
  1425  00211C  A4D8               	btfss	status,2,c
  1426  00211E  EF93  F010         	goto	u4961
  1427  002122  EF95  F010         	goto	u4960
  1428  002126                     u4961:
  1429  002126  EF8B  F010         	goto	l4868
  1430  00212A                     u4960:
  1431  00212A                     
  1432                           ;main.c: 98:             PrintModbus();
  1433  00212A  EC5D  F00E         	call	_PrintModbus	;wreg free
  1434  00212E                     
  1435                           ;main.c: 101:             ClearModbusData();
  1436  00212E  EC5C  F010         	call	_ClearModbusData	;wreg free
  1437  002132  EF8B  F010         	goto	l4868
  1438  002136  EF93  F000         	goto	start
  1439  00213A                     __end_of_main:
  1440                           	opt callstack 0
  1441                           
  1442 ;; *************** function _SYSTEM_Initialize *****************
  1443 ;; Defined at:
  1444 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    6
  1465 ;; This function calls:
  1466 ;;		_EUSART1_Initialize
  1467 ;;		_EUSART2_Initialize
  1468 ;;		_INTERRUPT_Initialize
  1469 ;;		_OSCILLATOR_Initialize
  1470 ;;		_PIN_MANAGER_Initialize
  1471 ;;		_PMD_Initialize
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text1
  1478  002320                     __ptext1:
  1479                           	opt callstack 0
  1480  002320                     _SYSTEM_Initialize:
  1481                           	opt callstack 24
  1482  002320                     
  1483                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1484  002320  EC06  F012         	call	_INTERRUPT_Initialize	;wreg free
  1485  002324                     
  1486                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1487  002324  EC82  F011         	call	_PMD_Initialize	;wreg free
  1488  002328                     
  1489                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1490  002328  EC5B  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1491  00232C                     
  1492                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1493  00232C  EC9D  F011         	call	_OSCILLATOR_Initialize	;wreg free
  1494  002330                     
  1495                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1496  002330  ECE1  F00D         	call	_EUSART1_Initialize	;wreg free
  1497  002334                     
  1498                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1499  002334  ECA2  F00D         	call	_EUSART2_Initialize	;wreg free
  1500  002338  0012               	return		;funcret
  1501  00233A                     __end_of_SYSTEM_Initialize:
  1502                           	opt callstack 0
  1503                           
  1504 ;; *************** function _PMD_Initialize *****************
  1505 ;; Defined at:
  1506 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    4
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_SYSTEM_Initialize
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text2
  1535  002304                     __ptext2:
  1536                           	opt callstack 0
  1537  002304                     _PMD_Initialize:
  1538                           	opt callstack 25
  1539  002304                     
  1540                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1541  002304  0E00               	movlw	0
  1542  002306  010E               	movlb	14	; () banked
  1543  002308  6FE1               	movwf	225,b	;volatile
  1544                           
  1545                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1546  00230A  0E00               	movlw	0
  1547  00230C  6FE2               	movwf	226,b	;volatile
  1548                           
  1549                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1550  00230E  0E00               	movlw	0
  1551  002310  6FE3               	movwf	227,b	;volatile
  1552                           
  1553                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1554  002312  0E00               	movlw	0
  1555  002314  6FE4               	movwf	228,b	;volatile
  1556                           
  1557                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1558  002316  0E00               	movlw	0
  1559  002318  6FE5               	movwf	229,b	;volatile
  1560                           
  1561                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1562  00231A  0E00               	movlw	0
  1563  00231C  6FE6               	movwf	230,b	;volatile
  1564  00231E                     
  1565                           ; BSR set to: 14
  1566  00231E  0012               	return		;funcret
  1567  002320                     __end_of_PMD_Initialize:
  1568                           	opt callstack 0
  1569                           
  1570 ;; *************** function _PIN_MANAGER_Initialize *****************
  1571 ;; Defined at:
  1572 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    4
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_SYSTEM_Initialize
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text3
  1601  001AB6                     __ptext3:
  1602                           	opt callstack 0
  1603  001AB6                     _PIN_MANAGER_Initialize:
  1604                           	opt callstack 25
  1605  001AB6                     
  1606                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1607  001AB6  0E00               	movlw	0
  1608  001AB8  6E87               	movwf	135,c	;volatile
  1609                           
  1610                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1611  001ABA  0E00               	movlw	0
  1612  001ABC  6E86               	movwf	134,c	;volatile
  1613                           
  1614                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1615  001ABE  0E00               	movlw	0
  1616  001AC0  6E83               	movwf	131,c	;volatile
  1617                           
  1618                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1619  001AC2  0E00               	movlw	0
  1620  001AC4  6E84               	movwf	132,c	;volatile
  1621                           
  1622                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1623  001AC6  0E00               	movlw	0
  1624  001AC8  6E85               	movwf	133,c	;volatile
  1625                           
  1626                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1627  001ACA  0E07               	movlw	7
  1628  001ACC  6E8C               	movwf	140,c	;volatile
  1629                           
  1630                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1631  001ACE  0E07               	movlw	7
  1632  001AD0  6E88               	movwf	136,c	;volatile
  1633                           
  1634                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1635  001AD2  0EBF               	movlw	191
  1636  001AD4  6E89               	movwf	137,c	;volatile
  1637                           
  1638                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1639  001AD6  0EBF               	movlw	191
  1640  001AD8  6E8A               	movwf	138,c	;volatile
  1641                           
  1642                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1643  001ADA  0EFE               	movlw	254
  1644  001ADC  6E8B               	movwf	139,c	;volatile
  1645  001ADE                     
  1646                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1647  001ADE  010F               	movlb	15	; () banked
  1648  001AE0  6926               	setf	38,b	;volatile
  1649                           
  1650                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1651  001AE2  0E3B               	movlw	59
  1652  001AE4  6F21               	movwf	33,b	;volatile
  1653                           
  1654                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1655  001AE6  0E37               	movlw	55
  1656  001AE8  6F19               	movwf	25,b	;volatile
  1657                           
  1658                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1659  001AEA  0E07               	movlw	7
  1660  001AEC  6F2E               	movwf	46,b	;volatile
  1661  001AEE                     
  1662                           ; BSR set to: 15
  1663                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1664  001AEE  6911               	setf	17,b	;volatile
  1665                           
  1666                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1667  001AF0  0E00               	movlw	0
  1668  001AF2  6F25               	movwf	37,b	;volatile
  1669                           
  1670                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1671  001AF4  0E00               	movlw	0
  1672  001AF6  6F2D               	movwf	45,b	;volatile
  1673                           
  1674                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1675  001AF8  0E00               	movlw	0
  1676  001AFA  6F18               	movwf	24,b	;volatile
  1677                           
  1678                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1679  001AFC  0E00               	movlw	0
  1680  001AFE  6F10               	movwf	16,b	;volatile
  1681                           
  1682                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1683  001B00  0E00               	movlw	0
  1684  001B02  6F20               	movwf	32,b	;volatile
  1685                           
  1686                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1687  001B04  0E00               	movlw	0
  1688  001B06  6F2C               	movwf	44,b	;volatile
  1689                           
  1690                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1691  001B08  0E00               	movlw	0
  1692  001B0A  6F0F               	movwf	15,b	;volatile
  1693                           
  1694                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1695  001B0C  0E00               	movlw	0
  1696  001B0E  6F17               	movwf	23,b	;volatile
  1697                           
  1698                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1699  001B10  0E00               	movlw	0
  1700  001B12  6F1F               	movwf	31,b	;volatile
  1701                           
  1702                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1703  001B14  0E00               	movlw	0
  1704  001B16  6F24               	movwf	36,b	;volatile
  1705  001B18                     
  1706                           ; BSR set to: 15
  1707                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1708  001B18  690E               	setf	14,b	;volatile
  1709  001B1A                     
  1710                           ; BSR set to: 15
  1711                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1712  001B1A  6916               	setf	22,b	;volatile
  1713  001B1C                     
  1714                           ; BSR set to: 15
  1715                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1716  001B1C  691E               	setf	30,b	;volatile
  1717  001B1E                     
  1718                           ; BSR set to: 15
  1719                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1720  001B1E  6923               	setf	35,b	;volatile
  1721                           
  1722                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1723  001B20  0E07               	movlw	7
  1724  001B22  6F2B               	movwf	43,b	;volatile
  1725  001B24                     
  1726                           ; BSR set to: 15
  1727                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1728  001B24  690D               	setf	13,b	;volatile
  1729  001B26                     
  1730                           ; BSR set to: 15
  1731                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1732  001B26  6915               	setf	21,b	;volatile
  1733  001B28                     
  1734                           ; BSR set to: 15
  1735                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1736  001B28  691D               	setf	29,b	;volatile
  1737  001B2A                     
  1738                           ; BSR set to: 15
  1739                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1740  001B2A  6922               	setf	34,b	;volatile
  1741                           
  1742                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1743  001B2C  0E0F               	movlw	15
  1744  001B2E  6F2A               	movwf	42,b	;volatile
  1745                           
  1746                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1747  001B30  0E17               	movlw	23
  1748  001B32  010E               	movlb	14	; () banked
  1749  001B34  6FB5               	movwf	181,b	;volatile
  1750                           
  1751                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1752  001B36  0E0B               	movlw	11
  1753  001B38  6FF5               	movwf	245,b	;volatile
  1754                           
  1755                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1756  001B3A  0E09               	movlw	9
  1757  001B3C  6FFD               	movwf	253,b	;volatile
  1758                           
  1759                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1760  001B3E  0E0F               	movlw	15
  1761  001B40  6F8D               	movwf	141,b	;volatile
  1762  001B42                     
  1763                           ; BSR set to: 14
  1764  001B42  0012               	return		;funcret
  1765  001B44                     __end_of_PIN_MANAGER_Initialize:
  1766                           	opt callstack 0
  1767                           
  1768 ;; *************** function _OSCILLATOR_Initialize *****************
  1769 ;; Defined at:
  1770 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    4
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_SYSTEM_Initialize
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text4
  1799  00233A                     __ptext4:
  1800                           	opt callstack 0
  1801  00233A                     _OSCILLATOR_Initialize:
  1802                           	opt callstack 25
  1803  00233A                     
  1804                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1805  00233A  0E60               	movlw	96
  1806  00233C  010E               	movlb	14	; () banked
  1807  00233E  6FD8               	movwf	216,b	;volatile
  1808                           
  1809                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1810  002340  0E00               	movlw	0
  1811  002342  6FDA               	movwf	218,b	;volatile
  1812                           
  1813                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1814  002344  0E00               	movlw	0
  1815  002346  6FDC               	movwf	220,b	;volatile
  1816                           
  1817                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1818  002348  0E06               	movlw	6
  1819  00234A  6FDE               	movwf	222,b	;volatile
  1820                           
  1821                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1822  00234C  0E00               	movlw	0
  1823  00234E  6FDD               	movwf	221,b	;volatile
  1824  002350                     
  1825                           ; BSR set to: 14
  1826  002350  0012               	return		;funcret
  1827  002352                     __end_of_OSCILLATOR_Initialize:
  1828                           	opt callstack 0
  1829                           
  1830 ;; *************** function _INTERRUPT_Initialize *****************
  1831 ;; Defined at:
  1832 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		None
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    4
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_SYSTEM_Initialize
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text5
  1861  00240C                     __ptext5:
  1862                           	opt callstack 0
  1863  00240C                     _INTERRUPT_Initialize:
  1864                           	opt callstack 25
  1865  00240C                     
  1866                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1867  00240C  9AF2               	bcf	242,5,c	;volatile
  1868  00240E  0012               	return		;funcret
  1869  002410                     __end_of_INTERRUPT_Initialize:
  1870                           	opt callstack 0
  1871                           
  1872 ;; *************** function _EUSART2_Initialize *****************
  1873 ;; Defined at:
  1874 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    5
  1895 ;; This function calls:
  1896 ;;		_EUSART2_SetErrorHandler
  1897 ;;		_EUSART2_SetFramingErrorHandler
  1898 ;;		_EUSART2_SetOverrunErrorHandler
  1899 ;;		_EUSART2_SetRxInterruptHandler
  1900 ;;		_EUSART2_SetTxInterruptHandler
  1901 ;; This function is called by:
  1902 ;;		_SYSTEM_Initialize
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text6
  1907  001B44                     __ptext6:
  1908                           	opt callstack 0
  1909  001B44                     _EUSART2_Initialize:
  1910                           	opt callstack 24
  1911  001B44                     
  1912                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  1913  001B44  010E               	movlb	14	; () banked
  1914  001B46  9FC5               	bcf	197,7,b	;volatile
  1915  001B48                     
  1916                           ; BSR set to: 14
  1917                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  1918  001B48  0E00               	movlw	low _EUSART2_Receive_ISR
  1919  001B4A  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  1920  001B4C  0E18               	movlw	high _EUSART2_Receive_ISR
  1921  001B4E  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  1922  001B50  ECC4  F011         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  1923  001B54                     
  1924                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  1925  001B54  010E               	movlb	14	; () banked
  1926  001B56  9DC5               	bcf	197,6,b	;volatile
  1927                           
  1928                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  1929  001B58  0EE8               	movlw	low _EUSART2_Transmit_ISR
  1930  001B5A  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  1931  001B5C  0E1F               	movlw	high _EUSART2_Transmit_ISR
  1932  001B5E  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  1933  001B60  ECBF  F011         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  1934  001B64                     
  1935                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  1936  001B64  0E08               	movlw	8
  1937  001B66  010E               	movlb	14	; () banked
  1938  001B68  6F9F               	movwf	159,b	;volatile
  1939  001B6A                     
  1940                           ; BSR set to: 14
  1941                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  1942  001B6A  0E90               	movlw	144
  1943  001B6C  6F9D               	movwf	157,b	;volatile
  1944  001B6E                     
  1945                           ; BSR set to: 14
  1946                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  1947  001B6E  0E24               	movlw	36
  1948  001B70  6F9E               	movwf	158,b	;volatile
  1949  001B72                     
  1950                           ; BSR set to: 14
  1951                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  1952  001B72  0E40               	movlw	64
  1953  001B74  6F9B               	movwf	155,b	;volatile
  1954  001B76                     
  1955                           ; BSR set to: 14
  1956                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  1957  001B76  0E03               	movlw	3
  1958  001B78  6F9C               	movwf	156,b	;volatile
  1959  001B7A                     
  1960                           ; BSR set to: 14
  1961                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  1962  001B7A  0E10               	movlw	low _EUSART2_DefaultFramingErrorHandler
  1963  001B7C  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  1964  001B7E  0E24               	movlw	high _EUSART2_DefaultFramingErrorHandler
  1965  001B80  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  1966  001B82  ECCE  F011         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  1967  001B86                     
  1968                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  1969  001B86  0EEC               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  1970  001B88  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  1971  001B8A  0E23               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  1972  001B8C  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1973  001B8E  ECC9  F011         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  1974  001B92                     
  1975                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  1976  001B92  0EFA               	movlw	low _EUSART2_DefaultErrorHandler
  1977  001B94  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  1978  001B96  0E23               	movlw	high _EUSART2_DefaultErrorHandler
  1979  001B98  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  1980  001B9A  ECD3  F011         	call	_EUSART2_SetErrorHandler	;wreg free
  1981                           
  1982                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  1983  001B9E  0E00               	movlw	0
  1984  001BA0  0100               	movlb	0	; () banked
  1985  001BA2  6F9A               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  1986                           
  1987                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  1988  001BA4  0E00               	movlw	0
  1989  001BA6  6F9E               	movwf	_eusart2TxHead& (0+255),b	;volatile
  1990                           
  1991                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  1992  001BA8  0E00               	movlw	0
  1993  001BAA  6F9D               	movwf	_eusart2TxTail& (0+255),b	;volatile
  1994                           
  1995                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  1996  001BAC  0E08               	movlw	8
  1997  001BAE  6FDF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  1998                           
  1999                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  2000  001BB0  0E00               	movlw	0
  2001  001BB2  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  2002                           
  2003                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  2004  001BB4  0E00               	movlw	0
  2005  001BB6  6F9C               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2006                           
  2007                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  2008  001BB8  0E00               	movlw	0
  2009  001BBA  6F9B               	movwf	_eusart2RxCount& (0+255),b	;volatile
  2010  001BBC                     
  2011                           ; BSR set to: 0
  2012                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  2013  001BBC  010E               	movlb	14	; () banked
  2014  001BBE  8FC5               	bsf	197,7,b	;volatile
  2015  001BC0                     
  2016                           ; BSR set to: 14
  2017  001BC0  0012               	return		;funcret
  2018  001BC2                     __end_of_EUSART2_Initialize:
  2019                           	opt callstack 0
  2020                           
  2021 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2022 ;; Defined at:
  2023 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2026 ;;		 -> EUSART2_Transmit_ISR(1), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    4
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_EUSART2_Initialize
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text7
  2053  00237E                     __ptext7:
  2054                           	opt callstack 0
  2055  00237E                     _EUSART2_SetTxInterruptHandler:
  2056                           	opt callstack 24
  2057  00237E                     
  2058                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2059  00237E  C005  F0DC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2060  002382  C006  F0DD         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2061  002386  0012               	return		;funcret
  2062  002388                     __end_of_EUSART2_SetTxInterruptHandler:
  2063                           	opt callstack 0
  2064                           
  2065 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2066 ;; Defined at:
  2067 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2070 ;;		 -> EUSART2_Receive_ISR(1), 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;Total ram usage:        2 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_EUSART2_Initialize
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text8
  2097  002388                     __ptext8:
  2098                           	opt callstack 0
  2099  002388                     _EUSART2_SetRxInterruptHandler:
  2100                           	opt callstack 24
  2101  002388                     
  2102                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2103  002388  C005  F0DA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2104  00238C  C006  F0DB         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2105  002390  0012               	return		;funcret
  2106  002392                     __end_of_EUSART2_SetRxInterruptHandler:
  2107                           	opt callstack 0
  2108                           
  2109 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2110 ;; Defined at:
  2111 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2114 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;Total ram usage:        2 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_EUSART2_Initialize
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text9
  2141  002392                     __ptext9:
  2142                           	opt callstack 0
  2143  002392                     _EUSART2_SetOverrunErrorHandler:
  2144                           	opt callstack 24
  2145  002392                     
  2146                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  2147  002392  C005  F0D2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2148  002396  C006  F0D3         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2149  00239A  0012               	return		;funcret
  2150  00239C                     __end_of_EUSART2_SetOverrunErrorHandler:
  2151                           	opt callstack 0
  2152                           
  2153 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2154 ;; Defined at:
  2155 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2158 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_EUSART2_Initialize
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text10
  2185  00239C                     __ptext10:
  2186                           	opt callstack 0
  2187  00239C                     _EUSART2_SetFramingErrorHandler:
  2188                           	opt callstack 24
  2189  00239C                     
  2190                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  2191  00239C  C005  F0D4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2192  0023A0  C006  F0D5         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2193  0023A4  0012               	return		;funcret
  2194  0023A6                     __end_of_EUSART2_SetFramingErrorHandler:
  2195                           	opt callstack 0
  2196                           
  2197 ;; *************** function _EUSART2_SetErrorHandler *****************
  2198 ;; Defined at:
  2199 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2202 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    4
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_EUSART2_Initialize
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text11
  2229  0023A6                     __ptext11:
  2230                           	opt callstack 0
  2231  0023A6                     _EUSART2_SetErrorHandler:
  2232                           	opt callstack 24
  2233  0023A6                     
  2234                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  2235  0023A6  C005  F0D0         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2236  0023AA  C006  F0D1         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2237  0023AE  0012               	return		;funcret
  2238  0023B0                     __end_of_EUSART2_SetErrorHandler:
  2239                           	opt callstack 0
  2240                           
  2241 ;; *************** function _EUSART1_Initialize *****************
  2242 ;; Defined at:
  2243 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    5
  2264 ;; This function calls:
  2265 ;;		_EUSART1_SetErrorHandler
  2266 ;;		_EUSART1_SetFramingErrorHandler
  2267 ;;		_EUSART1_SetOverrunErrorHandler
  2268 ;;		_EUSART1_SetRxInterruptHandler
  2269 ;;		_EUSART1_SetTxInterruptHandler
  2270 ;; This function is called by:
  2271 ;;		_SYSTEM_Initialize
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text12
  2276  001BC2                     __ptext12:
  2277                           	opt callstack 0
  2278  001BC2                     _EUSART1_Initialize:
  2279                           	opt callstack 24
  2280  001BC2                     
  2281                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2282  001BC2  010E               	movlb	14	; () banked
  2283  001BC4  9BC5               	bcf	197,5,b	;volatile
  2284  001BC6                     
  2285                           ; BSR set to: 14
  2286                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2287  001BC6  0EC0               	movlw	low _EUSART1_Receive_ISR
  2288  001BC8  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2289  001BCA  0E18               	movlw	high _EUSART1_Receive_ISR
  2290  001BCC  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2291  001BCE  ECDD  F011         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2292  001BD2                     
  2293                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2294  001BD2  010E               	movlb	14	; () banked
  2295  001BD4  99C5               	bcf	197,4,b	;volatile
  2296                           
  2297                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2298  001BD6  0E74               	movlw	low _EUSART1_Transmit_ISR
  2299  001BD8  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2300  001BDA  0E20               	movlw	high _EUSART1_Transmit_ISR
  2301  001BDC  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2302  001BDE  ECD8  F011         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2303  001BE2                     
  2304                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2305  001BE2  0E08               	movlw	8
  2306  001BE4  6E9F               	movwf	159,c	;volatile
  2307  001BE6                     
  2308                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2309  001BE6  0E90               	movlw	144
  2310  001BE8  6E9D               	movwf	157,c	;volatile
  2311  001BEA                     
  2312                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2313  001BEA  0E24               	movlw	36
  2314  001BEC  6E9E               	movwf	158,c	;volatile
  2315  001BEE                     
  2316                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  2317  001BEE  0E40               	movlw	64
  2318  001BF0  6E9B               	movwf	155,c	;volatile
  2319  001BF2                     
  2320                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  2321  001BF2  0E03               	movlw	3
  2322  001BF4  6E9C               	movwf	156,c	;volatile
  2323  001BF6                     
  2324                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2325  001BF6  0E12               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2326  001BF8  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2327  001BFA  0E24               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2328  001BFC  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2329  001BFE  ECE7  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2330  001C02                     
  2331                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2332  001C02  0E00               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2333  001C04  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2334  001C06  0E24               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2335  001C08  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2336  001C0A  ECE2  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2337  001C0E                     
  2338                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2339  001C0E  0E06               	movlw	low _EUSART1_DefaultErrorHandler
  2340  001C10  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2341  001C12  0E24               	movlw	high _EUSART1_DefaultErrorHandler
  2342  001C14  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2343  001C16  ECEC  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  2344                           
  2345                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2346  001C1A  0E00               	movlw	0
  2347  001C1C  0100               	movlb	0	; () banked
  2348  001C1E  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2349                           
  2350                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2351  001C20  0E00               	movlw	0
  2352  001C22  6F99               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2353                           
  2354                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2355  001C24  0E00               	movlw	0
  2356  001C26  6F98               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2357                           
  2358                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2359  001C28  0E10               	movlw	16
  2360  001C2A  6FDE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2361                           
  2362                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2363  001C2C  0E00               	movlw	0
  2364  001C2E  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  2365                           
  2366                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2367  001C30  0E00               	movlw	0
  2368  001C32  6F97               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2369                           
  2370                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2371  001C34  0E00               	movlw	0
  2372  001C36  6F96               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2373  001C38                     
  2374                           ; BSR set to: 0
  2375                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2376  001C38  010E               	movlb	14	; () banked
  2377  001C3A  8BC5               	bsf	197,5,b	;volatile
  2378  001C3C                     
  2379                           ; BSR set to: 14
  2380  001C3C  0012               	return		;funcret
  2381  001C3E                     __end_of_EUSART1_Initialize:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2385 ;; Defined at:
  2386 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2389 ;;		 -> EUSART1_Transmit_ISR(1), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    4
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_EUSART1_Initialize
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text13
  2416  0023B0                     __ptext13:
  2417                           	opt callstack 0
  2418  0023B0                     _EUSART1_SetTxInterruptHandler:
  2419                           	opt callstack 24
  2420  0023B0                     
  2421                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2422  0023B0  C005  F0D8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2423  0023B4  C006  F0D9         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2424  0023B8  0012               	return		;funcret
  2425  0023BA                     __end_of_EUSART1_SetTxInterruptHandler:
  2426                           	opt callstack 0
  2427                           
  2428 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2429 ;; Defined at:
  2430 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2433 ;;		 -> EUSART1_Receive_ISR(1), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    4
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_EUSART1_Initialize
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text14
  2460  0023BA                     __ptext14:
  2461                           	opt callstack 0
  2462  0023BA                     _EUSART1_SetRxInterruptHandler:
  2463                           	opt callstack 24
  2464  0023BA                     
  2465                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2466  0023BA  C005  F0D6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2467  0023BE  C006  F0D7         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2468  0023C2  0012               	return		;funcret
  2469  0023C4                     __end_of_EUSART1_SetRxInterruptHandler:
  2470                           	opt callstack 0
  2471                           
  2472 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2473 ;; Defined at:
  2474 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2477 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;Total ram usage:        2 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    4
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_EUSART1_Initialize
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text15
  2504  0023C4                     __ptext15:
  2505                           	opt callstack 0
  2506  0023C4                     _EUSART1_SetOverrunErrorHandler:
  2507                           	opt callstack 24
  2508  0023C4                     
  2509                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2510  0023C4  C005  F0CC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2511  0023C8  C006  F0CD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2512  0023CC  0012               	return		;funcret
  2513  0023CE                     __end_of_EUSART1_SetOverrunErrorHandler:
  2514                           	opt callstack 0
  2515                           
  2516 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2517 ;; Defined at:
  2518 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2521 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;Total ram usage:        2 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    4
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_EUSART1_Initialize
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text16
  2548  0023CE                     __ptext16:
  2549                           	opt callstack 0
  2550  0023CE                     _EUSART1_SetFramingErrorHandler:
  2551                           	opt callstack 24
  2552  0023CE                     
  2553                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2554  0023CE  C005  F0CE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2555  0023D2  C006  F0CF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2556  0023D6  0012               	return		;funcret
  2557  0023D8                     __end_of_EUSART1_SetFramingErrorHandler:
  2558                           	opt callstack 0
  2559                           
  2560 ;; *************** function _EUSART1_SetErrorHandler *****************
  2561 ;; Defined at:
  2562 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2565 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;Total ram usage:        2 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    4
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_EUSART1_Initialize
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text17
  2592  0023D8                     __ptext17:
  2593                           	opt callstack 0
  2594  0023D8                     _EUSART1_SetErrorHandler:
  2595                           	opt callstack 24
  2596  0023D8                     
  2597                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2598  0023D8  C005  F0CA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2599  0023DC  C006  F0CB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2600  0023E0  0012               	return		;funcret
  2601  0023E2                     __end_of_EUSART1_SetErrorHandler:
  2602                           	opt callstack 0
  2603                           
  2604 ;; *************** function _RXMode *****************
  2605 ;; Defined at:
  2606 ;;		line 22 in file "Modbus.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		None
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    4
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text18
  2635  0023F4                     __ptext18:
  2636                           	opt callstack 0
  2637  0023F4                     _RXMode:
  2638                           	opt callstack 26
  2639  0023F4  9086               	bcf	134,0,c	;volatile
  2640  0023F6  9683               	bcf	131,3,c	;volatile
  2641  0023F8  0012               	return		;funcret
  2642  0023FA                     __end_of_RXMode:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _PrintModbus *****************
  2646 ;; Defined at:
  2647 ;;		line 45 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  i               2   41[BANK0 ] int 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2664 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2665 ;;Total ram usage:        3 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:   13
  2668 ;; This function calls:
  2669 ;;		_printf
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text19
  2676  001CBA                     __ptext19:
  2677                           	opt callstack 0
  2678  001CBA                     _PrintModbus:
  2679                           	opt callstack 17
  2680  001CBA                     
  2681                           ;main.c: 50:     printf("\r\nModbus Data Capture Complete:\r\n");
  2682  001CBA  0E72               	movlw	low STR_10
  2683  001CBC  0100               	movlb	0	; () banked
  2684  001CBE  6FBC               	movwf	printf@fmt& (0+255),b
  2685  001CC0  0EFF               	movlw	high STR_10
  2686  001CC2  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2687  001CC4  EC5B  F011         	call	_printf	;wreg free
  2688  001CC8                     
  2689                           ;main.c: 51:     for(i=0; i< ModDataCnt ; i++ ){
  2690  001CC8  0E00               	movlw	0
  2691  001CCA  0100               	movlb	0	; () banked
  2692  001CCC  6FC9               	movwf	(PrintModbus@i+1)& (0+255),b
  2693  001CCE  0E00               	movlw	0
  2694  001CD0  6FC8               	movwf	PrintModbus@i& (0+255),b
  2695  001CD2  EF83  F00E         	goto	l4792
  2696  001CD6                     l4788:
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;main.c: 52:         printf("   Byte Num: %i Val: 0x%02x \r\n", i, ModbusData[i]);
  2700  001CD6  0E94               	movlw	low STR_11
  2701  001CD8  6FBC               	movwf	printf@fmt& (0+255),b
  2702  001CDA  0EFF               	movlw	high STR_11
  2703  001CDC  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2704  001CDE  C0C8  F0BE         	movff	PrintModbus@i,?_printf+2
  2705  001CE2  C0C9  F0BF         	movff	PrintModbus@i+1,?_printf+3
  2706  001CE6  0E00               	movlw	low _ModbusData
  2707  001CE8  25C8               	addwf	PrintModbus@i& (0+255),w,b
  2708  001CEA  6ED9               	movwf	fsr2l,c
  2709  001CEC  0E01               	movlw	high _ModbusData
  2710  001CEE  21C9               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  2711  001CF0  6EDA               	movwf	fsr2h,c
  2712  001CF2  50DF               	movf	indf2,w,c
  2713  001CF4  6E55               	movwf	??_PrintModbus^0,c
  2714  001CF6  5055               	movf	??_PrintModbus^0,w,c
  2715  001CF8  6FC0               	movwf	(?_printf+4)& (0+255),b
  2716  001CFA  6BC1               	clrf	(?_printf+5)& (0+255),b
  2717  001CFC  EC5B  F011         	call	_printf	;wreg free
  2718  001D00                     
  2719                           ;main.c: 53:     }
  2720  001D00  0100               	movlb	0	; () banked
  2721  001D02  4BC8               	infsnz	PrintModbus@i& (0+255),f,b
  2722  001D04  2BC9               	incf	(PrintModbus@i+1)& (0+255),f,b
  2723  001D06                     l4792:
  2724                           
  2725                           ; BSR set to: 0
  2726  001D06  5190               	movf	_ModDataCnt& (0+255),w,b
  2727  001D08  5DC8               	subwf	PrintModbus@i& (0+255),w,b
  2728  001D0A  51C9               	movf	(PrintModbus@i+1)& (0+255),w,b
  2729  001D0C  0A80               	xorlw	128
  2730  001D0E  6E55               	movwf	??_PrintModbus^0,c
  2731  001D10  5191               	movf	(_ModDataCnt+1)& (0+255),w,b
  2732  001D12  0A80               	xorlw	128
  2733  001D14  5855               	subwfb	??_PrintModbus^0,w,c
  2734  001D16  A0D8               	btfss	status,0,c
  2735  001D18  EF90  F00E         	goto	u4871
  2736  001D1C  EF92  F00E         	goto	u4870
  2737  001D20                     u4871:
  2738  001D20  EF6B  F00E         	goto	l4788
  2739  001D24                     u4870:
  2740  001D24                     
  2741                           ; BSR set to: 0
  2742                           ;main.c: 55:     ModDataCnt = 0;
  2743  001D24  0E00               	movlw	0
  2744  001D26  6F91               	movwf	(_ModDataCnt+1)& (0+255),b
  2745  001D28  0E00               	movlw	0
  2746  001D2A  6F90               	movwf	_ModDataCnt& (0+255),b
  2747  001D2C                     
  2748                           ; BSR set to: 0
  2749  001D2C  0012               	return		;funcret
  2750  001D2E                     __end_of_PrintModbus:
  2751                           	opt callstack 0
  2752                           
  2753 ;; *************** function _ModbusRx *****************
  2754 ;; Defined at:
  2755 ;;		line 70 in file "Modbus.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      _Bool 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;Total ram usage:        1 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    5
  2776 ;; This function calls:
  2777 ;;		_AddRxBuffToModBus
  2778 ;;		_ClearRxBuff
  2779 ;;		_EUSART1_Read
  2780 ;;		_EUSART1_is_rx_ready
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text20
  2787  00148C                     __ptext20:
  2788                           	opt callstack 0
  2789  00148C                     _ModbusRx:
  2790                           	opt callstack 25
  2791  00148C                     
  2792                           ;Modbus.c: 72:     if(EUSART1_is_rx_ready()){
  2793  00148C  ECA9  F011         	call	_EUSART1_is_rx_ready	;wreg free
  2794  001490  0900               	iorlw	0
  2795  001492  B4D8               	btfsc	status,2,c
  2796  001494  EF4E  F00A         	goto	u4881
  2797  001498  EF50  F00A         	goto	u4880
  2798  00149C                     u4881:
  2799  00149C  EFBD  F00A         	goto	l4830
  2800  0014A0                     u4880:
  2801  0014A0                     l4798:
  2802                           
  2803                           ;Modbus.c: 74:             if(EUSART1_is_rx_ready()){
  2804  0014A0  ECA9  F011         	call	_EUSART1_is_rx_ready	;wreg free
  2805  0014A4  0900               	iorlw	0
  2806  0014A6  B4D8               	btfsc	status,2,c
  2807  0014A8  EF58  F00A         	goto	u4891
  2808  0014AC  EF5A  F00A         	goto	u4890
  2809  0014B0                     u4891:
  2810  0014B0  EF77  F00A         	goto	l4810
  2811  0014B4                     u4890:
  2812  0014B4  EF6A  F00A         	goto	l4806
  2813  0014B8                     l4802:
  2814                           
  2815                           ;Modbus.c: 78:                     rxData[ByteNum] = EUSART1_Read();
  2816  0014B8  EC27  F00F         	call	_EUSART1_Read	;wreg free
  2817  0014BC  6E08               	movwf	??_ModbusRx^0,c
  2818  0014BE  0E00               	movlw	low _rxData
  2819  0014C0  0100               	movlb	0	; () banked
  2820  0014C2  258E               	addwf	_ByteNum& (0+255),w,b
  2821  0014C4  6ED9               	movwf	fsr2l,c
  2822  0014C6  0E02               	movlw	high _rxData
  2823  0014C8  218F               	addwfc	(_ByteNum+1)& (0+255),w,b
  2824  0014CA  6EDA               	movwf	fsr2h,c
  2825  0014CC  C008  FFDF         	movff	??_ModbusRx,indf2
  2826  0014D0                     
  2827                           ; BSR set to: 0
  2828                           ;Modbus.c: 79:                     ByteNum++;
  2829  0014D0  4B8E               	infsnz	_ByteNum& (0+255),f,b
  2830  0014D2  2B8F               	incf	(_ByteNum+1)& (0+255),f,b
  2831  0014D4                     l4806:
  2832                           
  2833                           ;Modbus.c: 76:                 while(EUSART1_is_rx_ready()){
  2834  0014D4  ECA9  F011         	call	_EUSART1_is_rx_ready	;wreg free
  2835  0014D8  0900               	iorlw	0
  2836  0014DA  A4D8               	btfss	status,2,c
  2837  0014DC  EF72  F00A         	goto	u4901
  2838  0014E0  EF74  F00A         	goto	u4900
  2839  0014E4                     u4901:
  2840  0014E4  EF5C  F00A         	goto	l4802
  2841  0014E8                     u4900:
  2842  0014E8                     
  2843                           ;Modbus.c: 82:                 RXStat = 1;
  2844  0014E8  0E01               	movlw	1
  2845  0014EA  0100               	movlb	0	; () banked
  2846  0014EC  6F93               	movwf	_RXStat& (0+255),b
  2847  0014EE                     l4810:
  2848                           
  2849                           ;Modbus.c: 85:             if(RXStat ==1){
  2850  0014EE  0100               	movlb	0	; () banked
  2851  0014F0  0593               	decf	_RXStat& (0+255),w,b
  2852  0014F2  A4D8               	btfss	status,2,c
  2853  0014F4  EF7E  F00A         	goto	u4911
  2854  0014F8  EF80  F00A         	goto	u4910
  2855  0014FC                     u4911:
  2856  0014FC  EF9C  F00A         	goto	l4822
  2857  001500                     u4910:
  2858  001500                     
  2859                           ; BSR set to: 0
  2860                           ;Modbus.c: 88:                 AddRxBuffToModBus();
  2861  001500  ECC0  F00C         	call	_AddRxBuffToModBus	;wreg free
  2862  001504                     
  2863                           ;Modbus.c: 89:                 ClearRxBuff();
  2864  001504  ECCF  F00F         	call	_ClearRxBuff	;wreg free
  2865  001508                     
  2866                           ;Modbus.c: 90:                 RXStat = 0;
  2867  001508  0E00               	movlw	0
  2868  00150A  0100               	movlb	0	; () banked
  2869  00150C  6F93               	movwf	_RXStat& (0+255),b
  2870  00150E                     
  2871                           ; BSR set to: 0
  2872                           ;Modbus.c: 91:                 ByteNum = 0;
  2873  00150E  0E00               	movlw	0
  2874  001510  6F8F               	movwf	(_ByteNum+1)& (0+255),b
  2875  001512  0E00               	movlw	0
  2876  001514  6F8E               	movwf	_ByteNum& (0+255),b
  2877  001516                     
  2878                           ; BSR set to: 0
  2879  001516  B883               	btfsc	131,4,c	;volatile
  2880  001518  EF90  F00A         	goto	u4921
  2881  00151C  EF93  F00A         	goto	u4920
  2882  001520                     u4921:
  2883  001520  0E01               	movlw	1
  2884  001522  EF94  F00A         	goto	u4926
  2885  001526                     u4920:
  2886  001526  0E00               	movlw	0
  2887  001528                     u4926:
  2888  001528  0AFF               	xorlw	255
  2889  00152A  6E08               	movwf	??_ModbusRx^0,c
  2890  00152C  3A08               	swapf	??_ModbusRx^0,f,c
  2891  00152E  5083               	movf	131,w,c	;volatile
  2892  001530  1808               	xorwf	??_ModbusRx^0,w,c
  2893  001532  0BEF               	andlw	-17
  2894  001534  1808               	xorwf	??_ModbusRx^0,w,c
  2895  001536  6E83               	movwf	131,c	;volatile
  2896  001538                     l4822:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;Modbus.c: 94:         }while(ModDataCnt != ExpectedBytes);
  2900  001538  51F2               	movf	_ExpectedBytes& (0+255),w,b
  2901  00153A  1990               	xorwf	_ModDataCnt& (0+255),w,b
  2902  00153C  E107               	bnz	u4931
  2903  00153E  51F3               	movf	(_ExpectedBytes+1)& (0+255),w,b
  2904  001540  1991               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  2905  001542  A4D8               	btfss	status,2,c
  2906  001544  EFA6  F00A         	goto	u4931
  2907  001548  EFA8  F00A         	goto	u4930
  2908  00154C                     u4931:
  2909  00154C  EF50  F00A         	goto	l4798
  2910  001550                     u4930:
  2911  001550                     
  2912                           ; BSR set to: 0
  2913  001550  BA83               	btfsc	131,5,c	;volatile
  2914  001552  EFAD  F00A         	goto	u4941
  2915  001556  EFB0  F00A         	goto	u4940
  2916  00155A                     u4941:
  2917  00155A  0E01               	movlw	1
  2918  00155C  EFB1  F00A         	goto	u4946
  2919  001560                     u4940:
  2920  001560  0E00               	movlw	0
  2921  001562                     u4946:
  2922  001562  0AFF               	xorlw	255
  2923  001564  6E08               	movwf	??_ModbusRx^0,c
  2924  001566  3A08               	swapf	??_ModbusRx^0,f,c
  2925  001568  4608               	rlncf	??_ModbusRx^0,f,c
  2926  00156A  5083               	movf	131,w,c	;volatile
  2927  00156C  1808               	xorwf	??_ModbusRx^0,w,c
  2928  00156E  0BDF               	andlw	-33
  2929  001570  1808               	xorwf	??_ModbusRx^0,w,c
  2930  001572  6E83               	movwf	131,c	;volatile
  2931  001574                     
  2932                           ; BSR set to: 0
  2933                           ;Modbus.c: 98:         return 1;
  2934  001574  0E01               	movlw	1
  2935  001576  EFBE  F00A         	goto	l645
  2936  00157A                     l4830:
  2937                           
  2938                           ;Modbus.c: 100:     return 0;
  2939  00157A  0E00               	movlw	0
  2940  00157C                     l645:
  2941  00157C  0012               	return		;funcret
  2942  00157E                     __end_of_ModbusRx:
  2943                           	opt callstack 0
  2944                           
  2945 ;; *************** function _EUSART1_is_rx_ready *****************
  2946 ;; Defined at:
  2947 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      _Bool 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    4
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_ModbusRx
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text21
  2976  002352                     __ptext21:
  2977                           	opt callstack 0
  2978  002352                     _EUSART1_is_rx_ready:
  2979                           	opt callstack 25
  2980  002352                     
  2981                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  2982  002352  0100               	movlb	0	; () banked
  2983  002354  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  2984  002356  A4D8               	btfss	status,2,c
  2985  002358  EFB0  F011         	goto	u4791
  2986  00235C  EFB3  F011         	goto	u4790
  2987  002360                     u4791:
  2988  002360  0E01               	movlw	1
  2989  002362  EFB4  F011         	goto	u4800
  2990  002366                     u4790:
  2991  002366  0E00               	movlw	0
  2992  002368                     u4800:
  2993  002368                     
  2994                           ; BSR set to: 0
  2995  002368  0012               	return		;funcret
  2996  00236A                     __end_of_EUSART1_is_rx_ready:
  2997                           	opt callstack 0
  2998                           
  2999 ;; *************** function _EUSART1_Read *****************
  3000 ;; Defined at:
  3001 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  readValue       1    4[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      unsigned char 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    4
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_ModbusRx
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text22
  3030  001E4E                     __ptext22:
  3031                           	opt callstack 0
  3032  001E4E                     _EUSART1_Read:
  3033                           	opt callstack 25
  3034  001E4E                     l4714:
  3035                           
  3036                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  3037  001E4E  0100               	movlb	0	; () banked
  3038  001E50  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3039  001E52  B4D8               	btfsc	status,2,c
  3040  001E54  EF2E  F00F         	goto	u4811
  3041  001E58  EF30  F00F         	goto	u4810
  3042  001E5C                     u4811:
  3043  001E5C  EF27  F00F         	goto	l4714
  3044  001E60                     u4810:
  3045  001E60                     
  3046                           ; BSR set to: 0
  3047                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  3048  001E60  0E64               	movlw	low _eusart1RxStatusBuffer
  3049  001E62  2597               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  3050  001E64  6ED9               	movwf	fsr2l,c
  3051  001E66  6ADA               	clrf	fsr2h,c
  3052  001E68  0E01               	movlw	high _eusart1RxStatusBuffer
  3053  001E6A  22DA               	addwfc	fsr2h,f,c
  3054  001E6C  50DF               	movf	indf2,w,c
  3055  001E6E  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3056                           
  3057                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  3058  001E70  0E64               	movlw	low _eusart1RxBuffer
  3059  001E72  2597               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  3060  001E74  6ED9               	movwf	fsr2l,c
  3061  001E76  6ADA               	clrf	fsr2h,c
  3062  001E78  0E02               	movlw	high _eusart1RxBuffer
  3063  001E7A  22DA               	addwfc	fsr2h,f,c
  3064  001E7C  50DF               	movf	indf2,w,c
  3065  001E7E  6E05               	movwf	EUSART1_Read@readValue^0,c
  3066  001E80                     
  3067                           ; BSR set to: 0
  3068  001E80  2B97               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  3069  001E82                     
  3070                           ; BSR set to: 0
  3071                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  3072  001E82  0E63               	movlw	99
  3073  001E84  6597               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  3074  001E86  EF47  F00F         	goto	u4821
  3075  001E8A  EF49  F00F         	goto	u4820
  3076  001E8E                     u4821:
  3077  001E8E  EF4B  F00F         	goto	l4724
  3078  001E92                     u4820:
  3079  001E92                     
  3080                           ; BSR set to: 0
  3081                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  3082  001E92  0E00               	movlw	0
  3083  001E94  6F97               	movwf	_eusart1RxTail& (0+255),b	;volatile
  3084  001E96                     l4724:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  3088  001E96  010E               	movlb	14	; () banked
  3089  001E98  9BC5               	bcf	197,5,b	;volatile
  3090  001E9A                     
  3091                           ; BSR set to: 14
  3092                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  3093  001E9A  0100               	movlb	0	; () banked
  3094  001E9C  0796               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  3095  001E9E                     
  3096                           ; BSR set to: 0
  3097                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  3098  001E9E  010E               	movlb	14	; () banked
  3099  001EA0  8BC5               	bsf	197,5,b	;volatile
  3100  001EA2                     
  3101                           ; BSR set to: 14
  3102                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  3103  001EA2  5005               	movf	EUSART1_Read@readValue^0,w,c
  3104  001EA4                     
  3105                           ; BSR set to: 14
  3106  001EA4  0012               	return		;funcret
  3107  001EA6                     __end_of_EUSART1_Read:
  3108                           	opt callstack 0
  3109                           
  3110 ;; *************** function _ClearRxBuff *****************
  3111 ;; Defined at:
  3112 ;;		line 36 in file "Modbus.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  i               2    5[COMRAM] int 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;Total ram usage:        3 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    4
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;;		_ModbusRx
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text23
  3142  001F9E                     __ptext23:
  3143                           	opt callstack 0
  3144  001F9E                     _ClearRxBuff:
  3145                           	opt callstack 25
  3146  001F9E                     
  3147                           ;Modbus.c: 38:     int i = 0;
  3148  001F9E  0E00               	movlw	0
  3149  001FA0  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  3150  001FA2  0E00               	movlw	0
  3151  001FA4  6E06               	movwf	ClearRxBuff@i^0,c
  3152                           
  3153                           ;Modbus.c: 39:     for(i=0; i<ByteNum; i++ ){
  3154  001FA6  0E00               	movlw	0
  3155  001FA8  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  3156  001FAA  0E00               	movlw	0
  3157  001FAC  6E06               	movwf	ClearRxBuff@i^0,c
  3158  001FAE  EFE3  F00F         	goto	l4746
  3159  001FB2                     l4742:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;Modbus.c: 40:         rxData[i] = 0xFF;
  3163  001FB2  0E00               	movlw	low _rxData
  3164  001FB4  2406               	addwf	ClearRxBuff@i^0,w,c
  3165  001FB6  6ED9               	movwf	fsr2l,c
  3166  001FB8  0E02               	movlw	high _rxData
  3167  001FBA  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  3168  001FBC  6EDA               	movwf	fsr2h,c
  3169  001FBE  0EFF               	movlw	255
  3170  001FC0  6EDF               	movwf	indf2,c
  3171  001FC2                     
  3172                           ; BSR set to: 0
  3173                           ;Modbus.c: 41:     }
  3174  001FC2  4A06               	infsnz	ClearRxBuff@i^0,f,c
  3175  001FC4  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  3176  001FC6                     l4746:
  3177  001FC6  0100               	movlb	0	; () banked
  3178  001FC8  518E               	movf	_ByteNum& (0+255),w,b
  3179  001FCA  5C06               	subwf	ClearRxBuff@i^0,w,c
  3180  001FCC  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  3181  001FCE  0A80               	xorlw	128
  3182  001FD0  6E05               	movwf	??_ClearRxBuff^0,c
  3183  001FD2  518F               	movf	(_ByteNum+1)& (0+255),w,b
  3184  001FD4  0A80               	xorlw	128
  3185  001FD6  5805               	subwfb	??_ClearRxBuff^0,w,c
  3186  001FD8  A0D8               	btfss	status,0,c
  3187  001FDA  EFF1  F00F         	goto	u4831
  3188  001FDE  EFF3  F00F         	goto	u4830
  3189  001FE2                     u4831:
  3190  001FE2  EFD9  F00F         	goto	l4742
  3191  001FE6                     u4830:
  3192  001FE6                     
  3193                           ; BSR set to: 0
  3194  001FE6  0012               	return		;funcret
  3195  001FE8                     __end_of_ClearRxBuff:
  3196                           	opt callstack 0
  3197                           
  3198 ;; *************** function _AddRxBuffToModBus *****************
  3199 ;; Defined at:
  3200 ;;		line 45 in file "Modbus.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  i               2    5[COMRAM] int 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;Total ram usage:        3 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    4
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_ModbusRx
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text24
  3229  001980                     __ptext24:
  3230                           	opt callstack 0
  3231  001980                     _AddRxBuffToModBus:
  3232                           	opt callstack 25
  3233  001980                     
  3234                           ;Modbus.c: 49:     int i = 0;
  3235  001980  0E00               	movlw	0
  3236  001982  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  3237  001984  0E00               	movlw	0
  3238  001986  6E06               	movwf	AddRxBuffToModBus@i^0,c
  3239                           
  3240                           ;Modbus.c: 51:     for(i=0l; i<ByteNum; i++){
  3241  001988  0E00               	movlw	0
  3242  00198A  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  3243  00198C  0E00               	movlw	0
  3244  00198E  6E06               	movwf	AddRxBuffToModBus@i^0,c
  3245  001990  EFDC  F00C         	goto	l4756
  3246  001994                     l4750:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;Modbus.c: 52:         ModbusData[ModDataCnt] = rxData[i];
  3250  001994  0E00               	movlw	low _rxData
  3251  001996  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  3252  001998  6ED9               	movwf	fsr2l,c
  3253  00199A  0E02               	movlw	high _rxData
  3254  00199C  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  3255  00199E  6EDA               	movwf	fsr2h,c
  3256  0019A0  0E00               	movlw	low _ModbusData
  3257  0019A2  2590               	addwf	_ModDataCnt& (0+255),w,b
  3258  0019A4  6EE1               	movwf	fsr1l,c
  3259  0019A6  0E01               	movlw	high _ModbusData
  3260  0019A8  2191               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  3261  0019AA  6EE2               	movwf	fsr1h,c
  3262  0019AC  CFDF FFE7          	movff	indf2,indf1
  3263  0019B0                     
  3264                           ; BSR set to: 0
  3265                           ;Modbus.c: 53:         ModDataCnt++;
  3266  0019B0  4B90               	infsnz	_ModDataCnt& (0+255),f,b
  3267  0019B2  2B91               	incf	(_ModDataCnt+1)& (0+255),f,b
  3268  0019B4                     
  3269                           ; BSR set to: 0
  3270                           ;Modbus.c: 54:     }
  3271  0019B4  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  3272  0019B6  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  3273  0019B8                     l4756:
  3274  0019B8  0100               	movlb	0	; () banked
  3275  0019BA  518E               	movf	_ByteNum& (0+255),w,b
  3276  0019BC  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  3277  0019BE  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  3278  0019C0  0A80               	xorlw	128
  3279  0019C2  6E05               	movwf	??_AddRxBuffToModBus^0,c
  3280  0019C4  518F               	movf	(_ByteNum+1)& (0+255),w,b
  3281  0019C6  0A80               	xorlw	128
  3282  0019C8  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  3283  0019CA  A0D8               	btfss	status,0,c
  3284  0019CC  EFEA  F00C         	goto	u4841
  3285  0019D0  EFEC  F00C         	goto	u4840
  3286  0019D4                     u4841:
  3287  0019D4  EFCA  F00C         	goto	l4750
  3288  0019D8                     u4840:
  3289  0019D8                     
  3290                           ; BSR set to: 0
  3291                           ;Modbus.c: 59:     if(ModbusData[1] == 0x0F){
  3292  0019D8  0E0F               	movlw	15
  3293  0019DA  0101               	movlb	1	; () banked
  3294  0019DC  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  3295  0019DE  A4D8               	btfss	status,2,c
  3296  0019E0  EFF4  F00C         	goto	u4851
  3297  0019E4  EFF6  F00C         	goto	u4850
  3298  0019E8                     u4851:
  3299  0019E8  EFFF  F00C         	goto	l4762
  3300  0019EC                     u4850:
  3301  0019EC                     l4760:
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;Modbus.c: 60:         ExpectedBytes = ModbusData[6] + 9;
  3305  0019EC  0E09               	movlw	9
  3306  0019EE  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  3307  0019F0  0100               	movlb	0	; () banked
  3308  0019F2  6FF2               	movwf	_ExpectedBytes& (0+255),b
  3309  0019F4  6BF3               	clrf	(_ExpectedBytes+1)& (0+255),b
  3310  0019F6  0E00               	movlw	0
  3311  0019F8  23F3               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  3312                           
  3313                           ;Modbus.c: 61:     }else if (ModbusData[1] == 0x10){
  3314  0019FA  EF0F  F00D         	goto	l630
  3315  0019FE                     l4762:
  3316                           
  3317                           ; BSR set to: 1
  3318  0019FE  0E10               	movlw	16
  3319  001A00  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  3320  001A02  A4D8               	btfss	status,2,c
  3321  001A04  EF06  F00D         	goto	u4861
  3322  001A08  EF08  F00D         	goto	u4860
  3323  001A0C                     u4861:
  3324  001A0C  EF0A  F00D         	goto	l4766
  3325  001A10                     u4860:
  3326  001A10  EFF6  F00C         	goto	l4760
  3327  001A14                     l4766:
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;Modbus.c: 64:         ExpectedBytes = 8;
  3331  001A14  0E00               	movlw	0
  3332  001A16  0100               	movlb	0	; () banked
  3333  001A18  6FF3               	movwf	(_ExpectedBytes+1)& (0+255),b
  3334  001A1A  0E08               	movlw	8
  3335  001A1C  6FF2               	movwf	_ExpectedBytes& (0+255),b
  3336  001A1E                     l630:
  3337                           
  3338                           ; BSR set to: 0
  3339  001A1E  0012               	return		;funcret
  3340  001A20                     __end_of_AddRxBuffToModBus:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _InitialiseString *****************
  3344 ;; Defined at:
  3345 ;;		line 22 in file "main.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:   13
  3366 ;; This function calls:
  3367 ;;		_printf
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text25
  3374  001C3E                     __ptext25:
  3375                           	opt callstack 0
  3376  001C3E                     _InitialiseString:
  3377                           	opt callstack 17
  3378  001C3E                     
  3379                           ;main.c: 25:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  3380  001C3E  0E7F               	movlw	low STR_1
  3381  001C40  0100               	movlb	0	; () banked
  3382  001C42  6FBC               	movwf	printf@fmt& (0+255),b
  3383  001C44  0EFE               	movlw	high STR_1
  3384  001C46  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3385  001C48  EC5B  F011         	call	_printf	;wreg free
  3386                           
  3387                           ;main.c: 26:     printf("\rCard Ser No. xxxxxxx \r\n");
  3388  001C4C  0ED0               	movlw	low STR_2
  3389  001C4E  0100               	movlb	0	; () banked
  3390  001C50  6FBC               	movwf	printf@fmt& (0+255),b
  3391  001C52  0EFF               	movlw	high STR_2
  3392  001C54  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3393  001C56  EC5B  F011         	call	_printf	;wreg free
  3394                           
  3395                           ;main.c: 27:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  3396  001C5A  0E24               	movlw	low STR_3
  3397  001C5C  0100               	movlb	0	; () banked
  3398  001C5E  6FBC               	movwf	printf@fmt& (0+255),b
  3399  001C60  0EFF               	movlw	high STR_3
  3400  001C62  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3401  001C64  0EE9               	movlw	low STR_4
  3402  001C66  6FBE               	movwf	(?_printf+2)& (0+255),b
  3403  001C68  0EFF               	movlw	high STR_4
  3404  001C6A  6FBF               	movwf	(?_printf+3)& (0+255),b
  3405  001C6C  0EF5               	movlw	low STR_5
  3406  001C6E  6FC0               	movwf	(?_printf+4)& (0+255),b
  3407  001C70  0EFF               	movlw	high STR_5
  3408  001C72  6FC1               	movwf	(?_printf+5)& (0+255),b
  3409  001C74  0E08               	movlw	8
  3410  001C76  6FC3               	movwf	(?_printf+7)& (0+255),b
  3411  001C78  0E34               	movlw	52
  3412  001C7A  6FC2               	movwf	(?_printf+6)& (0+255),b
  3413  001C7C  EC5B  F011         	call	_printf	;wreg free
  3414                           
  3415                           ;main.c: 29:     printf("\rFunction Codes Supported:\r\n");
  3416  001C80  0EB3               	movlw	low STR_6
  3417  001C82  0100               	movlb	0	; () banked
  3418  001C84  6FBC               	movwf	printf@fmt& (0+255),b
  3419  001C86  0EFF               	movlw	high STR_6
  3420  001C88  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3421  001C8A  EC5B  F011         	call	_printf	;wreg free
  3422                           
  3423                           ;main.c: 30:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  3424  001C8E  0EEF               	movlw	low STR_7
  3425  001C90  0100               	movlb	0	; () banked
  3426  001C92  6FBC               	movwf	printf@fmt& (0+255),b
  3427  001C94  0EFE               	movlw	high STR_7
  3428  001C96  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3429  001C98  EC5B  F011         	call	_printf	;wreg free
  3430                           
  3431                           ;main.c: 31:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  3432  001C9C  0EB8               	movlw	low STR_8
  3433  001C9E  0100               	movlb	0	; () banked
  3434  001CA0  6FBC               	movwf	printf@fmt& (0+255),b
  3435  001CA2  0EFE               	movlw	high STR_8
  3436  001CA4  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3437  001CA6  EC5B  F011         	call	_printf	;wreg free
  3438                           
  3439                           ;main.c: 32:     printf("\rInitalisation Complete - Ready\r\n\n");
  3440  001CAA  0E4F               	movlw	low STR_9
  3441  001CAC  0100               	movlb	0	; () banked
  3442  001CAE  6FBC               	movwf	printf@fmt& (0+255),b
  3443  001CB0  0EFF               	movlw	high STR_9
  3444  001CB2  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3445  001CB4  EC5B  F011         	call	_printf	;wreg free
  3446  001CB8  0012               	return		;funcret
  3447  001CBA                     __end_of_InitialiseString:
  3448                           	opt callstack 0
  3449                           
  3450 ;; *************** function _printf *****************
  3451 ;; Defined at:
  3452 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  3455 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3456 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3457 ;;		 -> STR_1(57), 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  ap              2   39[BANK0 ] PTR void [1]
  3460 ;;		 -> ?_printf(2), 
  3461 ;;  ret             2    0        int 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2   29[BANK0 ] int 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;Total ram usage:       12 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:   12
  3478 ;; This function calls:
  3479 ;;		_vfprintf
  3480 ;; This function is called by:
  3481 ;;		_InitialiseString
  3482 ;;		_PrintModbus
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text26
  3487  0022B6                     __ptext26:
  3488                           	opt callstack 0
  3489  0022B6                     _printf:
  3490                           	opt callstack 17
  3491  0022B6  0EBE               	movlw	low (?_printf+2)
  3492  0022B8  0100               	movlb	0	; () banked
  3493  0022BA  6FC6               	movwf	printf@ap& (0+255),b
  3494  0022BC  0E00               	movlw	high (?_printf+2)
  3495  0022BE  6FC7               	movwf	(printf@ap+1)& (0+255),b
  3496  0022C0                     
  3497                           ; BSR set to: 0
  3498  0022C0  0E00               	movlw	0
  3499  0022C2  6FB6               	movwf	vfprintf@fp& (0+255),b
  3500  0022C4  0E00               	movlw	0
  3501  0022C6  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
  3502  0022C8  C0BC  F0B8         	movff	printf@fmt,vfprintf@fmt
  3503  0022CC  C0BD  F0B9         	movff	printf@fmt+1,vfprintf@fmt+1
  3504  0022D0  0EC6               	movlw	low printf@ap
  3505  0022D2  6FBA               	movwf	vfprintf@ap& (0+255),b
  3506  0022D4  0E00               	movlw	high printf@ap
  3507  0022D6  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
  3508  0022D8  EC97  F00E         	call	_vfprintf	;wreg free
  3509  0022DC  0012               	return		;funcret
  3510  0022DE                     __end_of_printf:
  3511                           	opt callstack 0
  3512                           
  3513 ;; *************** function _vfprintf *****************
  3514 ;; Defined at:
  3515 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  3518 ;;		 -> NULL(0), 
  3519 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  3520 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3521 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3522 ;;		 -> STR_1(57), 
  3523 ;;  ap              2   27[BANK0 ] PTR PTR void 
  3524 ;;		 -> printf@ap(2), 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3527 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3528 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3529 ;;		 -> STR_1(57), 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2   23[BANK0 ] int 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3539 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3542 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3543 ;;Total ram usage:        8 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:   11
  3546 ;; This function calls:
  3547 ;;		_vfpfcnvrt
  3548 ;; This function is called by:
  3549 ;;		_printf
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text27
  3554  001D2E                     __ptext27:
  3555                           	opt callstack 0
  3556  001D2E                     _vfprintf:
  3557                           	opt callstack 17
  3558  001D2E                     
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3560  001D2E  C0B8  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  3561  001D32  C0B9  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3562  001D36                     
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3564  001D36  0E00               	movlw	0
  3565  001D38  0100               	movlb	0	; () banked
  3566  001D3A  6F89               	movwf	(_nout+1)& (0+255),b
  3567  001D3C  0E00               	movlw	0
  3568  001D3E  6F88               	movwf	_nout& (0+255),b
  3569                           
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3571  001D40  EFB5  F00E         	goto	l4630
  3572  001D44                     l4628:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3576  001D44  C0B6  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  3577  001D48  C0B7  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3578  001D4C  0E53               	movlw	low vfprintf@cfmt
  3579  001D4E  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  3580  001D50  0E00               	movlw	high vfprintf@cfmt
  3581  001D52  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3582  001D54  C0BA  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3583  001D58  C0BB  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3584  001D5C  EC95  F000         	call	_vfpfcnvrt	;wreg free
  3585  001D60  5049               	movf	?_vfpfcnvrt^0,w,c
  3586  001D62  0100               	movlb	0	; () banked
  3587  001D64  2788               	addwf	_nout& (0+255),f,b
  3588  001D66  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  3589  001D68  2389               	addwfc	(_nout+1)& (0+255),f,b
  3590  001D6A                     l4630:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3594  001D6A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  3595  001D6E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3596  001D72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3597  001D72  6AF8               	clrf	tblptru,c
  3598  001D74                     	endif
  3599  001D74                     	if	0	;tblptru may be non-zero
  3600  001D74                     	endif
  3601  001D74  0008               	tblrd		*
  3602  001D76  50F5               	movf	tablat,w,c
  3603  001D78  0900               	iorlw	0
  3604  001D7A  A4D8               	btfss	status,2,c
  3605  001D7C  EFC2  F00E         	goto	u4781
  3606  001D80  EFC4  F00E         	goto	u4780
  3607  001D84                     u4781:
  3608  001D84  EFA2  F00E         	goto	l4628
  3609  001D88                     u4780:
  3610  001D88                     
  3611                           ; BSR set to: 0
  3612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3613  001D88  C088  F0B6         	movff	_nout,?_vfprintf
  3614  001D8C  C089  F0B7         	movff	_nout+1,?_vfprintf+1
  3615  001D90                     
  3616                           ; BSR set to: 0
  3617  001D90  0012               	return		;funcret
  3618  001D92                     __end_of_vfprintf:
  3619                           	opt callstack 0
  3620                           
  3621 ;; *************** function _vfpfcnvrt *****************
  3622 ;; Defined at:
  3623 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  3626 ;;		 -> NULL(0), 
  3627 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  3628 ;;		 -> vfprintf@cfmt(2), 
  3629 ;;  ap              2   76[COMRAM] PTR PTR void 
  3630 ;;		 -> printf@ap(2), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  llu             8   15[BANK0 ] unsigned long long 
  3633 ;;  ll              8    0[BANK0 ] long long 
  3634 ;;  f               4    0        long long 
  3635 ;;  vp              3    0        PTR void 
  3636 ;;  ct              3    0        unsigned char [3]
  3637 ;;  done            2   11[BANK0 ] int 
  3638 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  3639 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  3640 ;;  i               2    0        int 
  3641 ;;  c               1   10[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   72[COMRAM] int 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;Total ram usage:       33 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:   10
  3658 ;; This function calls:
  3659 ;;		_atoi
  3660 ;;		_dtoa
  3661 ;;		_fputc
  3662 ;;		_isdigit
  3663 ;;		_stoa
  3664 ;;		_utoa
  3665 ;;		_xtoa
  3666 ;; This function is called by:
  3667 ;;		_vfprintf
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text28
  3672  00012A                     __ptext28:
  3673                           	opt callstack 0
  3674  00012A                     _vfpfcnvrt:
  3675                           	opt callstack 17
  3676  00012A                     
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3678  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3679  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3680  000132  CFDE FFF6          	movff	postinc2,tblptrl
  3681  000136  CFDD FFF7          	movff	postdec2,tblptrh
  3682  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3683  00013A  6AF8               	clrf	tblptru,c
  3684  00013C                     	endif
  3685  00013C                     	if	0	;tblptru may be non-zero
  3686  00013C                     	endif
  3687  00013C  0008               	tblrd		*
  3688  00013E  50F5               	movf	tablat,w,c
  3689  000140  0A25               	xorlw	37
  3690  000142  A4D8               	btfss	status,2,c
  3691  000144  EFA6  F000         	goto	u4631
  3692  000148  EFA8  F000         	goto	u4630
  3693  00014C                     u4631:
  3694  00014C  EF3D  F003         	goto	l4586
  3695  000150                     u4630:
  3696  000150                     
  3697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3698  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3699  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3700  000158  2ADE               	incf	postinc2,f,c
  3701  00015A  0E00               	movlw	0
  3702  00015C  22DD               	addwfc	postdec2,f,c
  3703  00015E                     
  3704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3705  00015E  0E00               	movlw	0
  3706  000160  0100               	movlb	0	; () banked
  3707  000162  6F8B               	movwf	(_width+1)& (0+255),b
  3708  000164  0E00               	movlw	0
  3709  000166  6F8A               	movwf	_width& (0+255),b
  3710  000168  C08A  F056         	movff	_width,_flags
  3711  00016C  C08B  F057         	movff	_width+1,_flags+1
  3712  000170                     
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3715  000170  698C               	setf	_prec& (0+255),b
  3716  000172  698D               	setf	(_prec+1)& (0+255),b
  3717  000174                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3720  000174  0E00               	movlw	0
  3721  000176  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3722  000178  0E00               	movlw	0
  3723  00017A  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  3724                           
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3726  00017C  EF07  F001         	goto	l4508
  3727  000180                     l4482:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3731  000180  8056               	bsf	_flags^0,0,c
  3732  000182                     l4484:
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3736  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3737  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3738  00018A  2ADE               	incf	postinc2,f,c
  3739  00018C  0E00               	movlw	0
  3740  00018E  22DD               	addwfc	postdec2,f,c
  3741                           
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3743  000190  EF07  F001         	goto	l4508
  3744  000194                     l4486:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3748  000194  8256               	bsf	_flags^0,1,c
  3749  000196  EFC1  F000         	goto	l4484
  3750  00019A                     l4490:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3754  00019A  8456               	bsf	_flags^0,2,c
  3755  00019C  EFC1  F000         	goto	l4484
  3756  0001A0                     l4494:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3760  0001A0  8656               	bsf	_flags^0,3,c
  3761  0001A2  EFC1  F000         	goto	l4484
  3762  0001A6                     l4498:
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3766  0001A6  8856               	bsf	_flags^0,4,c
  3767  0001A8  EFC1  F000         	goto	l4484
  3768  0001AC                     l4502:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3772  0001AC  0E00               	movlw	0
  3773  0001AE  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3774  0001B0  0E01               	movlw	1
  3775  0001B2  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  3776                           
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3778  0001B4  EF07  F001         	goto	l4508
  3779  0001B8                     l4506:
  3780                           
  3781                           ; BSR set to: 0
  3782  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3783  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3784  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  3785  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  3786  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3787  0001C8  6AF8               	clrf	tblptru,c
  3788  0001CA                     	endif
  3789  0001CA                     	if	0	;tblptru may be non-zero
  3790  0001CA                     	endif
  3791  0001CA  0008               	tblrd		*
  3792  0001CC  50F5               	movf	tablat,w,c
  3793  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  3794  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  3795                           
  3796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3797                           ; Switch size 1, requested type "simple"
  3798                           ; Number of cases is 1, Range of values is 0 to 0
  3799                           ; switch strategies available:
  3800                           ; Name         Instructions Cycles
  3801                           ; simple_byte            4     3 (average)
  3802                           ;	Chosen strategy is simple_byte
  3803  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  3804  0001D4  0A00               	xorlw	0	; case 0
  3805  0001D6  B4D8               	btfsc	status,2,c
  3806  0001D8  EFF0  F000         	goto	l4944
  3807  0001DC  EFD6  F000         	goto	l4502
  3808  0001E0                     l4944:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ; Switch size 1, requested type "simple"
  3812                           ; Number of cases is 5, Range of values is 32 to 48
  3813                           ; switch strategies available:
  3814                           ; Name         Instructions Cycles
  3815                           ; simple_byte           16     9 (average)
  3816                           ;	Chosen strategy is simple_byte
  3817  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  3818  0001E2  0A20               	xorlw	32	; case 32
  3819  0001E4  B4D8               	btfsc	status,2,c
  3820  0001E6  EFD0  F000         	goto	l4494
  3821  0001EA  0A03               	xorlw	3	; case 35
  3822  0001EC  B4D8               	btfsc	status,2,c
  3823  0001EE  EFD3  F000         	goto	l4498
  3824  0001F2  0A08               	xorlw	8	; case 43
  3825  0001F4  B4D8               	btfsc	status,2,c
  3826  0001F6  EFCD  F000         	goto	l4490
  3827  0001FA  0A06               	xorlw	6	; case 45
  3828  0001FC  B4D8               	btfsc	status,2,c
  3829  0001FE  EFC0  F000         	goto	l4482
  3830  000202  0A1D               	xorlw	29	; case 48
  3831  000204  B4D8               	btfsc	status,2,c
  3832  000206  EFCA  F000         	goto	l4486
  3833  00020A  EFD6  F000         	goto	l4502
  3834  00020E                     l4508:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3838  00020E  51AA               	movf	vfpfcnvrt@done& (0+255),w,b
  3839  000210  11AB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3840  000212  B4D8               	btfsc	status,2,c
  3841  000214  EF0E  F001         	goto	u4641
  3842  000218  EF10  F001         	goto	u4640
  3843  00021C                     u4641:
  3844  00021C  EFDC  F000         	goto	l4506
  3845  000220                     u4640:
  3846  000220                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3849  000220  A056               	btfss	_flags^0,0,c
  3850  000222  EF15  F001         	goto	u4651
  3851  000226  EF17  F001         	goto	u4650
  3852  00022A                     u4651:
  3853  00022A  EF18  F001         	goto	l4512
  3854  00022E                     u4650:
  3855  00022E                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3858  00022E  9256               	bcf	_flags^0,1,c
  3859  000230                     l4512:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3863  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3864  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3865  000238  CFDE FFF6          	movff	postinc2,tblptrl
  3866  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  3867  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3868  000240  6AF8               	clrf	tblptru,c
  3869  000242                     	endif
  3870  000242                     	if	0	;tblptru may be non-zero
  3871  000242                     	endif
  3872  000242  0008               	tblrd		*
  3873  000244  50F5               	movf	tablat,w,c
  3874  000246  0A2A               	xorlw	42
  3875  000248  A4D8               	btfss	status,2,c
  3876  00024A  EF29  F001         	goto	u4661
  3877  00024E  EF2B  F001         	goto	u4660
  3878  000252                     u4661:
  3879  000252  EF54  F001         	goto	l4520
  3880  000256                     u4660:
  3881  000256                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3884  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3885  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3886  00025E  2ADE               	incf	postinc2,f,c
  3887  000260  0E00               	movlw	0
  3888  000262  22DD               	addwfc	postdec2,f,c
  3889                           
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3891  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3892  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3893  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3894  000270  0E02               	movlw	2
  3895  000272  26DE               	addwf	postinc2,f,c
  3896  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3897  000278  0E00               	movlw	0
  3898  00027A  22DD               	addwfc	postdec2,f,c
  3899  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3900  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3901  000284  CFDE F08A          	movff	postinc2,_width
  3902  000288  CFDD F08B          	movff	postdec2,_width+1
  3903  00028C                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3906  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  3907  00028E  EF4D  F001         	goto	u4670
  3908  000292  EF4B  F001         	goto	u4671
  3909  000296                     u4671:
  3910  000296  EF99  F001         	goto	l4530
  3911  00029A                     u4670:
  3912  00029A                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3915  00029A  8056               	bsf	_flags^0,0,c
  3916                           
  3917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3918  00029C  6D8A               	negf	_width& (0+255),b
  3919  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  3920  0002A0  B0D8               	btfsc	status,0,c
  3921  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  3922  0002A4  EF99  F001         	goto	l4530
  3923  0002A8                     l4520:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3927  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3928  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3929  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  3930  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  3931  0002B8  EC03  F008         	call	_atoi	;wreg free
  3932  0002BC  C00C  F08A         	movff	?_atoi,_width
  3933  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  3934                           
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3936  0002C4  EF6B  F001         	goto	l4524
  3937  0002C8                     l4522:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3941  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3942  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3943  0002D0  2ADE               	incf	postinc2,f,c
  3944  0002D2  0E00               	movlw	0
  3945  0002D4  22DD               	addwfc	postdec2,f,c
  3946  0002D6                     l4524:
  3947  0002D6  0ED0               	movlw	208
  3948  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  3949  0002DA  0EFF               	movlw	255
  3950  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  3951  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3952  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3953  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  3954  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  3955  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3956  0002EE  6AF8               	clrf	tblptru,c
  3957  0002F0                     	endif
  3958  0002F0                     	if	0	;tblptru may be non-zero
  3959  0002F0                     	endif
  3960  0002F0  0008               	tblrd		*
  3961  0002F2  50F5               	movf	tablat,w,c
  3962  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  3963  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  3964  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  3965  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3966  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  3967  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3968  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  3969  000302  E10A               	bnz	u4680
  3970  000304  0E0A               	movlw	10
  3971  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3972  000308  A0D8               	btfss	status,0,c
  3973  00030A  EF89  F001         	goto	u4681
  3974  00030E  EF8C  F001         	goto	u4680
  3975  000312                     u4681:
  3976  000312  0E01               	movlw	1
  3977  000314  EF8D  F001         	goto	u4690
  3978  000318                     u4680:
  3979  000318  0E00               	movlw	0
  3980  00031A                     u4690:
  3981  00031A  0100               	movlb	0	; () banked
  3982  00031C  6FAC               	movwf	_vfpfcnvrt$1304& (0+255),b
  3983  00031E  6BAD               	clrf	(_vfpfcnvrt$1304+1)& (0+255),b
  3984  000320                     
  3985                           ; BSR set to: 0
  3986  000320  51AC               	movf	_vfpfcnvrt$1304& (0+255),w,b
  3987  000322  11AD               	iorwf	(_vfpfcnvrt$1304+1)& (0+255),w,b
  3988  000324  A4D8               	btfss	status,2,c
  3989  000326  EF97  F001         	goto	u4701
  3990  00032A  EF99  F001         	goto	u4700
  3991  00032E                     u4701:
  3992  00032E  EF64  F001         	goto	l4522
  3993  000332                     u4700:
  3994  000332                     l4530:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3998  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3999  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4000  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  4001  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  4002  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4003  000342  6AF8               	clrf	tblptru,c
  4004  000344                     	endif
  4005  000344                     	if	0	;tblptru may be non-zero
  4006  000344                     	endif
  4007  000344  0008               	tblrd		*
  4008  000346  50F5               	movf	tablat,w,c
  4009  000348  0A64               	xorlw	100
  4010  00034A  B4D8               	btfsc	status,2,c
  4011  00034C  EFAA  F001         	goto	u4711
  4012  000350  EFAC  F001         	goto	u4710
  4013  000354                     u4711:
  4014  000354  EFBF  F001         	goto	l4534
  4015  000358                     u4710:
  4016  000358                     
  4017                           ; BSR set to: 0
  4018  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4019  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4020  000360  CFDE FFF6          	movff	postinc2,tblptrl
  4021  000364  CFDD FFF7          	movff	postdec2,tblptrh
  4022  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4023  000368  6AF8               	clrf	tblptru,c
  4024  00036A                     	endif
  4025  00036A                     	if	0	;tblptru may be non-zero
  4026  00036A                     	endif
  4027  00036A  0008               	tblrd		*
  4028  00036C  50F5               	movf	tablat,w,c
  4029  00036E  0A69               	xorlw	105
  4030  000370  A4D8               	btfss	status,2,c
  4031  000372  EFBD  F001         	goto	u4721
  4032  000376  EFBF  F001         	goto	u4720
  4033  00037A                     u4721:
  4034  00037A  EFFF  F001         	goto	l4540
  4035  00037E                     u4720:
  4036  00037E                     l4534:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4040  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4041  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4042  000386  2ADE               	incf	postinc2,f,c
  4043  000388  0E00               	movlw	0
  4044  00038A  22DD               	addwfc	postdec2,f,c
  4045                           
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4047  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4048  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4049  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4050  000398  0E02               	movlw	2
  4051  00039A  26DE               	addwf	postinc2,f,c
  4052  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4053  0003A0  0E00               	movlw	0
  4054  0003A2  22DD               	addwfc	postdec2,f,c
  4055  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4056  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4057  0003AC  CFDE F09F          	movff	postinc2,vfpfcnvrt@ll
  4058  0003B0  CFDD F0A0          	movff	postdec2,vfpfcnvrt@ll+1
  4059  0003B4  0E00               	movlw	0
  4060  0003B6  BFA0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4061  0003B8  0EFF               	movlw	-1
  4062  0003BA  6FA1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4063  0003BC  6FA2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4064  0003BE  6FA3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4065  0003C0  6FA4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4066  0003C2  6FA5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4067  0003C4  6FA6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4068  0003C6                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4071  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  4072  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4073  0003CE  C09F  F024         	movff	vfpfcnvrt@ll,dtoa@d
  4074  0003D2  C0A0  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4075  0003D6  C0A1  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4076  0003DA  C0A2  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4077  0003DE  C0A3  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4078  0003E2  C0A4  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4079  0003E6  C0A5  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4080  0003EA  C0A6  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4081  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  4082  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  4083  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4084  0003FA  EF59  F003         	goto	l810
  4085  0003FE                     l4540:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4089  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4090  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4091  000406  CFDE FFF6          	movff	postinc2,tblptrl
  4092  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  4093  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4094  00040E  6AF8               	clrf	tblptru,c
  4095  000410                     	endif
  4096  000410                     	if	0	;tblptru may be non-zero
  4097  000410                     	endif
  4098  000410  0008               	tblrd		*
  4099  000412  50F5               	movf	tablat,w,c
  4100  000414  0A73               	xorlw	115
  4101  000416  A4D8               	btfss	status,2,c
  4102  000418  EF10  F002         	goto	u4731
  4103  00041C  EF12  F002         	goto	u4730
  4104  000420                     u4731:
  4105  000420  EF3D  F002         	goto	l4548
  4106  000424                     u4730:
  4107  000424                     
  4108                           ; BSR set to: 0
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4110  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4111  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4112  00042C  2ADE               	incf	postinc2,f,c
  4113  00042E  0E00               	movlw	0
  4114  000430  22DD               	addwfc	postdec2,f,c
  4115                           
  4116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4117  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4118  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4119  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4120  00043E  0E02               	movlw	2
  4121  000440  26DE               	addwf	postinc2,f,c
  4122  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4123  000446  0E00               	movlw	0
  4124  000448  22DD               	addwfc	postdec2,f,c
  4125  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4126  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4127  000452  CFDE F0A7          	movff	postinc2,vfpfcnvrt@cp
  4128  000456  CFDD F0A8          	movff	postdec2,vfpfcnvrt@cp+1
  4129  00045A                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4132  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  4133  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4134  000462  C0A7  F012         	movff	vfpfcnvrt@cp,stoa@s
  4135  000466  C0A8  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4136  00046A  EC36  F007         	call	_stoa	;wreg free
  4137  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  4138  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  4139  000476  EF59  F003         	goto	l810
  4140  00047A                     l4548:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4144  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4145  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4146  000482  CFDE FFF6          	movff	postinc2,tblptrl
  4147  000486  CFDD FFF7          	movff	postdec2,tblptrh
  4148  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4149  00048A  6AF8               	clrf	tblptru,c
  4150  00048C                     	endif
  4151  00048C                     	if	0	;tblptru may be non-zero
  4152  00048C                     	endif
  4153  00048C  0008               	tblrd		*
  4154  00048E  50F5               	movf	tablat,w,c
  4155  000490  0A75               	xorlw	117
  4156  000492  A4D8               	btfss	status,2,c
  4157  000494  EF4E  F002         	goto	u4741
  4158  000498  EF50  F002         	goto	u4740
  4159  00049C                     u4741:
  4160  00049C  EF91  F002         	goto	l4556
  4161  0004A0                     u4740:
  4162  0004A0                     
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4165  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4166  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4167  0004A8  2ADE               	incf	postinc2,f,c
  4168  0004AA  0E00               	movlw	0
  4169  0004AC  22DD               	addwfc	postdec2,f,c
  4170                           
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4172  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4173  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4174  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4175  0004BA  0E02               	movlw	2
  4176  0004BC  26DE               	addwf	postinc2,f,c
  4177  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4178  0004C2  0E00               	movlw	0
  4179  0004C4  22DD               	addwfc	postdec2,f,c
  4180  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4181  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4182  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  4183  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  4184  0004D6  C051  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4185  0004DA  C052  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4186  0004DE  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4187  0004E0  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4188  0004E2  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4189  0004E4  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4190  0004E6  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4191  0004E8  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4192  0004EA                     
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4195  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  4196  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4197  0004F2  C0AE  F024         	movff	vfpfcnvrt@llu,utoa@d
  4198  0004F6  C0AF  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4199  0004FA  C0B0  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4200  0004FE  C0B1  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4201  000502  C0B2  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4202  000506  C0B3  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4203  00050A  C0B4  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4204  00050E  C0B5  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4205  000512  EC35  F006         	call	_utoa	;wreg free
  4206  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  4207  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  4208  00051E  EF59  F003         	goto	l810
  4209  000522                     l4556:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4213  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4214  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4215  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  4216  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  4217  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4218  000532  6AF8               	clrf	tblptru,c
  4219  000534                     	endif
  4220  000534                     	if	0	;tblptru may be non-zero
  4221  000534                     	endif
  4222  000534  0008               	tblrd		*
  4223  000536  50F5               	movf	tablat,w,c
  4224  000538  0A78               	xorlw	120
  4225  00053A  B4D8               	btfsc	status,2,c
  4226  00053C  EFA2  F002         	goto	u4751
  4227  000540  EFA4  F002         	goto	u4750
  4228  000544                     u4751:
  4229  000544  EFB7  F002         	goto	l4560
  4230  000548                     u4750:
  4231  000548                     
  4232                           ; BSR set to: 0
  4233  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4234  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4235  000550  CFDE FFF6          	movff	postinc2,tblptrl
  4236  000554  CFDD FFF7          	movff	postdec2,tblptrh
  4237  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4238  000558  6AF8               	clrf	tblptru,c
  4239  00055A                     	endif
  4240  00055A                     	if	0	;tblptru may be non-zero
  4241  00055A                     	endif
  4242  00055A  0008               	tblrd		*
  4243  00055C  50F5               	movf	tablat,w,c
  4244  00055E  0A58               	xorlw	88
  4245  000560  A4D8               	btfss	status,2,c
  4246  000562  EFB5  F002         	goto	u4761
  4247  000566  EFB7  F002         	goto	u4760
  4248  00056A                     u4761:
  4249  00056A  EF06  F003         	goto	l4570
  4250  00056E                     u4760:
  4251  00056E                     l4560:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  4255  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4256  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4257  000576  CFDE FFF6          	movff	postinc2,tblptrl
  4258  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  4259  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4260  00057E  6AF8               	clrf	tblptru,c
  4261  000580                     	endif
  4262  000580                     	if	0	;tblptru may be non-zero
  4263  000580                     	endif
  4264  000580  0008               	tblrd		*
  4265  000582  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  4266  000586                     
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  4269  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4270  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4271  00058E  2ADE               	incf	postinc2,f,c
  4272  000590  0E00               	movlw	0
  4273  000592  22DD               	addwfc	postdec2,f,c
  4274  000594                     
  4275                           ; BSR set to: 0
  4276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4277  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4278  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4279  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4280  0005A0  0E02               	movlw	2
  4281  0005A2  26DE               	addwf	postinc2,f,c
  4282  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4283  0005A8  0E00               	movlw	0
  4284  0005AA  22DD               	addwfc	postdec2,f,c
  4285  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4286  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4287  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  4288  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  4289  0005BC  C051  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4290  0005C0  C052  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4291  0005C4  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4292  0005C6  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4293  0005C8  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4294  0005CA  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4295  0005CC  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4296  0005CE  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4297  0005D0                     
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  4300  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  4301  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4302  0005D8  C0AE  F024         	movff	vfpfcnvrt@llu,xtoa@d
  4303  0005DC  C0AF  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4304  0005E0  C0B0  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4305  0005E4  C0B1  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4306  0005E8  C0B2  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4307  0005EC  C0B3  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4308  0005F0  C0B4  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4309  0005F4  C0B5  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4310  0005F8  C0A9  F02C         	movff	vfpfcnvrt@c,xtoa@x
  4311  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  4312  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  4313  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4314  000608  EF59  F003         	goto	l810
  4315  00060C                     l4570:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4319  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4320  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4321  000614  CFDE FFF6          	movff	postinc2,tblptrl
  4322  000618  CFDD FFF7          	movff	postdec2,tblptrh
  4323  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4324  00061C  6AF8               	clrf	tblptru,c
  4325  00061E                     	endif
  4326  00061E                     	if	0	;tblptru may be non-zero
  4327  00061E                     	endif
  4328  00061E  0008               	tblrd		*
  4329  000620  50F5               	movf	tablat,w,c
  4330  000622  0A25               	xorlw	37
  4331  000624  A4D8               	btfss	status,2,c
  4332  000626  EF17  F003         	goto	u4771
  4333  00062A  EF19  F003         	goto	u4770
  4334  00062E                     u4771:
  4335  00062E  EF30  F003         	goto	l4580
  4336  000632                     u4770:
  4337  000632                     
  4338                           ; BSR set to: 0
  4339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4340  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4341  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4342  00063A  2ADE               	incf	postinc2,f,c
  4343  00063C  0E00               	movlw	0
  4344  00063E  22DD               	addwfc	postdec2,f,c
  4345  000640                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4348  000640  0E00               	movlw	0
  4349  000642  6E08               	movwf	(fputc@c+1)^0,c
  4350  000644  0E25               	movlw	37
  4351  000646  6E07               	movwf	fputc@c^0,c
  4352  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4353  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4354  000650  EC10  F00D         	call	_fputc	;wreg free
  4355  000654                     l4576:
  4356                           
  4357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4358  000654  0E00               	movlw	0
  4359  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  4360  000658  0E01               	movlw	1
  4361  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  4362  00065C  EF59  F003         	goto	l810
  4363  000660                     l4580:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4367  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4368  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4369  000668  2ADE               	incf	postinc2,f,c
  4370  00066A  0E00               	movlw	0
  4371  00066C  22DD               	addwfc	postdec2,f,c
  4372  00066E                     
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4375  00066E  0E00               	movlw	0
  4376  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  4377  000672  0E00               	movlw	0
  4378  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  4379  000676  EF59  F003         	goto	l810
  4380  00067A                     l4586:
  4381                           
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4383  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4384  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4385  000682  CFDE FFF6          	movff	postinc2,tblptrl
  4386  000686  CFDD FFF7          	movff	postdec2,tblptrh
  4387  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4388  00068A  6AF8               	clrf	tblptru,c
  4389  00068C                     	endif
  4390  00068C                     	if	0	;tblptru may be non-zero
  4391  00068C                     	endif
  4392  00068C  0008               	tblrd		*
  4393  00068E  50F5               	movf	tablat,w,c
  4394  000690  6E07               	movwf	fputc@c^0,c
  4395  000692  6A08               	clrf	(fputc@c+1)^0,c
  4396  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4397  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4398  00069C  EC10  F00D         	call	_fputc	;wreg free
  4399  0006A0                     
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4401  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4402  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4403  0006A8  2ADE               	incf	postinc2,f,c
  4404  0006AA  0E00               	movlw	0
  4405  0006AC  22DD               	addwfc	postdec2,f,c
  4406  0006AE  EF2A  F003         	goto	l4576
  4407  0006B2                     l810:
  4408  0006B2  0012               	return		;funcret
  4409  0006B4                     __end_of_vfpfcnvrt:
  4410                           	opt callstack 0
  4411                           
  4412 ;; *************** function _xtoa *****************
  4413 ;; Defined at:
  4414 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4417 ;;		 -> NULL(0), 
  4418 ;;  d               8   35[COMRAM] unsigned long long 
  4419 ;;  x               1   43[COMRAM] unsigned char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  n               8   60[COMRAM] unsigned long long 
  4422 ;;  c               2   70[COMRAM] int 
  4423 ;;  i               2   68[COMRAM] int 
  4424 ;;  w               2   58[COMRAM] int 
  4425 ;;  p               2   56[COMRAM] int 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  2   33[COMRAM] int 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4435 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4436 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4437 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4438 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4439 ;;Total ram usage:       39 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    9
  4442 ;; This function calls:
  4443 ;;		_isalpha
  4444 ;;		_isupper
  4445 ;;		_pad
  4446 ;;		_toupper
  4447 ;; This function is called by:
  4448 ;;		_vfpfcnvrt
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text29
  4453  000994                     __ptext29:
  4454                           	opt callstack 0
  4455  000994                     _xtoa:
  4456                           	opt callstack 17
  4457  000994                     
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  4459  000994  0100               	movlb	0	; () banked
  4460  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4461  000998  EFD0  F004         	goto	u4391
  4462  00099C  EFD2  F004         	goto	u4390
  4463  0009A0                     u4391:
  4464  0009A0  EFD3  F004         	goto	l4368
  4465  0009A4                     u4390:
  4466  0009A4                     
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4469  0009A4  9256               	bcf	_flags^0,1,c
  4470  0009A6                     l4368:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4474  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4475  0009A8  EFE0  F004         	goto	u4400
  4476  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  4477  0009AE  E106               	bnz	u4401
  4478  0009B0  058C               	decf	_prec& (0+255),w,b
  4479  0009B2  B0D8               	btfsc	status,0,c
  4480  0009B4  EFDE  F004         	goto	u4401
  4481  0009B8  EFE0  F004         	goto	u4400
  4482  0009BC                     u4401:
  4483  0009BC  EFE6  F004         	goto	l756
  4484  0009C0                     u4400:
  4485  0009C0                     
  4486                           ; BSR set to: 0
  4487  0009C0  0E00               	movlw	0
  4488  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  4489  0009C4  0E01               	movlw	1
  4490  0009C6  6E39               	movwf	xtoa@p^0,c
  4491  0009C8  EFEA  F004         	goto	l758
  4492  0009CC                     l756:
  4493                           
  4494                           ; BSR set to: 0
  4495  0009CC  C08C  F039         	movff	_prec,xtoa@p
  4496  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  4497  0009D4                     l758:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4501  0009D4  C08A  F03B         	movff	_width,xtoa@w
  4502  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  4503                           
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4505  0009DC  A856               	btfss	_flags^0,4,c
  4506  0009DE  EFF3  F004         	goto	u4411
  4507  0009E2  EFF5  F004         	goto	u4410
  4508  0009E6                     u4411:
  4509  0009E6  EFF9  F004         	goto	l4374
  4510  0009EA                     u4410:
  4511  0009EA                     
  4512                           ; BSR set to: 0
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4514  0009EA  0EFE               	movlw	254
  4515  0009EC  263B               	addwf	xtoa@w^0,f,c
  4516  0009EE  0EFF               	movlw	255
  4517  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  4518  0009F2                     l4374:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4522  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  4523  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  4524  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  4525  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  4526  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  4527  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  4528  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  4529  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  4530  000A12                     
  4531                           ; BSR set to: 0
  4532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4533  000A12  0E00               	movlw	0
  4534  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  4535  000A16  0E1F               	movlw	31
  4536  000A18  6E45               	movwf	xtoa@i^0,c
  4537  000A1A                     
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4540  000A1A  0E00               	movlw	0
  4541  000A1C  0101               	movlb	1	; () banked
  4542  000A1E  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4543                           
  4544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4545  000A20  EFC5  F005         	goto	l4410
  4546  000A24                     l4380:
  4547                           
  4548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4549  000A24  0645               	decf	xtoa@i^0,f,c
  4550  000A26  A0D8               	btfss	status,0,c
  4551  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  4552  000A2A                     
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4554  000A2A  0E0F               	movlw	15
  4555  000A2C  143D               	andwf	xtoa@n^0,w,c
  4556  000A2E  6E47               	movwf	xtoa@c^0,c
  4557  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  4558  000A32                     
  4559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4560  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  4561  000A34  EF25  F005         	goto	u4421
  4562  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  4563  000A3A  E109               	bnz	u4420
  4564  000A3C  0E0A               	movlw	10
  4565  000A3E  5C47               	subwf	xtoa@c^0,w,c
  4566  000A40  A0D8               	btfss	status,0,c
  4567  000A42  EF25  F005         	goto	u4421
  4568  000A46  EF27  F005         	goto	u4420
  4569  000A4A                     u4421:
  4570  000A4A  EF2F  F005         	goto	l4388
  4571  000A4E                     u4420:
  4572  000A4E  0E57               	movlw	87
  4573  000A50  2447               	addwf	xtoa@c^0,w,c
  4574  000A52  6E47               	movwf	xtoa@c^0,c
  4575  000A54  0E00               	movlw	0
  4576  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  4577  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  4578  000A5A  EF35  F005         	goto	l765
  4579  000A5E                     l4388:
  4580  000A5E  0E30               	movlw	48
  4581  000A60  2447               	addwf	xtoa@c^0,w,c
  4582  000A62  6E47               	movwf	xtoa@c^0,c
  4583  000A64  0E00               	movlw	0
  4584  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  4585  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  4586  000A6A                     l765:
  4587  000A6A  0EBF               	movlw	191
  4588  000A6C  6E2D               	movwf	??_xtoa^0,c
  4589  000A6E  0EFF               	movlw	255
  4590  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  4591  000A72  502C               	movf	xtoa@x^0,w,c
  4592  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  4593  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  4594  000A78  502D               	movf	??_xtoa^0,w,c
  4595  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  4596  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  4597  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  4598  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  4599  000A82  E10A               	bnz	u4430
  4600  000A84  0E1A               	movlw	26
  4601  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  4602  000A88  A0D8               	btfss	status,0,c
  4603  000A8A  EF49  F005         	goto	u4431
  4604  000A8E  EF4C  F005         	goto	u4430
  4605  000A92                     u4431:
  4606  000A92  0E01               	movlw	1
  4607  000A94  EF4D  F005         	goto	u4440
  4608  000A98                     u4430:
  4609  000A98  0E00               	movlw	0
  4610  000A9A                     u4440:
  4611  000A9A  6E35               	movwf	_xtoa$1289^0,c
  4612  000A9C  6A36               	clrf	(_xtoa$1289+1)^0,c
  4613  000A9E  5035               	movf	_xtoa$1289^0,w,c
  4614  000AA0  1036               	iorwf	(_xtoa$1289+1)^0,w,c
  4615  000AA2  B4D8               	btfsc	status,2,c
  4616  000AA4  EF56  F005         	goto	u4451
  4617  000AA8  EF58  F005         	goto	u4450
  4618  000AAC                     u4451:
  4619  000AAC  EF88  F005         	goto	l4402
  4620  000AB0                     u4450:
  4621  000AB0  0E9F               	movlw	159
  4622  000AB2  6E2D               	movwf	??_xtoa^0,c
  4623  000AB4  0EFF               	movlw	255
  4624  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  4625  000AB8  0E20               	movlw	32
  4626  000ABA  1047               	iorwf	xtoa@c^0,w,c
  4627  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  4628  000ABE  0E00               	movlw	0
  4629  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  4630  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  4631  000AC4  502D               	movf	??_xtoa^0,w,c
  4632  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  4633  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  4634  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  4635  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  4636  000ACE  E10A               	bnz	u4460
  4637  000AD0  0E1A               	movlw	26
  4638  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  4639  000AD4  A0D8               	btfss	status,0,c
  4640  000AD6  EF6F  F005         	goto	u4461
  4641  000ADA  EF72  F005         	goto	u4460
  4642  000ADE                     u4461:
  4643  000ADE  0E01               	movlw	1
  4644  000AE0  EF73  F005         	goto	u4470
  4645  000AE4                     u4460:
  4646  000AE4  0E00               	movlw	0
  4647  000AE6                     u4470:
  4648  000AE6  6E37               	movwf	_xtoa$1290^0,c
  4649  000AE8  6A38               	clrf	(_xtoa$1290+1)^0,c
  4650  000AEA  5037               	movf	_xtoa$1290^0,w,c
  4651  000AEC  1038               	iorwf	(_xtoa$1290+1)^0,w,c
  4652  000AEE  B4D8               	btfsc	status,2,c
  4653  000AF0  EF7C  F005         	goto	u4481
  4654  000AF4  EF7E  F005         	goto	u4480
  4655  000AF8                     u4481:
  4656  000AF8  EF88  F005         	goto	l4402
  4657  000AFC                     u4480:
  4658  000AFC                     
  4659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4660  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  4661  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  4662  000B04  ECC9  F00E         	call	_toupper	;wreg free
  4663  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  4664  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  4665  000B10                     l4402:
  4666                           
  4667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4668  000B10  0EC8               	movlw	low _dbuf
  4669  000B12  2445               	addwf	xtoa@i^0,w,c
  4670  000B14  6ED9               	movwf	fsr2l,c
  4671  000B16  0E01               	movlw	high _dbuf
  4672  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  4673  000B1A  6EDA               	movwf	fsr2h,c
  4674  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  4675  000B20                     
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4677  000B20  0639               	decf	xtoa@p^0,f,c
  4678  000B22  A0D8               	btfss	status,0,c
  4679  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  4680  000B26                     
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4682  000B26  063B               	decf	xtoa@w^0,f,c
  4683  000B28  A0D8               	btfss	status,0,c
  4684  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  4685  000B2C                     
  4686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4687  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  4688  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  4689  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  4690  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  4691  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  4692  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  4693  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  4694  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  4695  000B4C  0E05               	movlw	5
  4696  000B4E  EFB2  F005         	goto	u4490
  4697  000B52                     u4495:
  4698  000B52  90D8               	bcf	status,0,c
  4699  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  4700  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  4701  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  4702  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  4703  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  4704  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  4705  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  4706  000B62  322D               	rrcf	??_xtoa^0,f,c
  4707  000B64                     u4490:
  4708  000B64  2EE8               	decfsz	wreg,f,c
  4709  000B66  EFA9  F005         	goto	u4495
  4710  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  4711  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  4712  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  4713  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  4714  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  4715  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  4716  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  4717  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  4718  000B8A                     l4410:
  4719                           
  4720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4721  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  4722  000B8C  EFD1  F005         	goto	u4501
  4723  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  4724  000B92  E109               	bnz	u4500
  4725  000B94  0E02               	movlw	2
  4726  000B96  5C45               	subwf	xtoa@i^0,w,c
  4727  000B98  A0D8               	btfss	status,0,c
  4728  000B9A  EFD1  F005         	goto	u4501
  4729  000B9E  EFD3  F005         	goto	u4500
  4730  000BA2                     u4501:
  4731  000BA2  EF03  F006         	goto	l779
  4732  000BA6                     u4500:
  4733  000BA6  503D               	movf	xtoa@n^0,w,c
  4734  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  4735  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  4736  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  4737  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  4738  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  4739  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  4740  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  4741  000BB6  A4D8               	btfss	status,2,c
  4742  000BB8  EFE0  F005         	goto	u4511
  4743  000BBC  EFE2  F005         	goto	u4510
  4744  000BC0                     u4511:
  4745  000BC0  EF12  F005         	goto	l4380
  4746  000BC4                     u4510:
  4747  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  4748  000BC6  EFEF  F005         	goto	u4520
  4749  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  4750  000BCC  E106               	bnz	u4521
  4751  000BCE  0439               	decf	xtoa@p^0,w,c
  4752  000BD0  B0D8               	btfsc	status,0,c
  4753  000BD2  EFED  F005         	goto	u4521
  4754  000BD6  EFEF  F005         	goto	u4520
  4755  000BDA                     u4521:
  4756  000BDA  EF12  F005         	goto	l4380
  4757  000BDE                     u4520:
  4758  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  4759  000BE0  EFFA  F005         	goto	u4531
  4760  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  4761  000BE6  E108               	bnz	u4530
  4762  000BE8  043B               	decf	xtoa@w^0,w,c
  4763  000BEA  A0D8               	btfss	status,0,c
  4764  000BEC  EFFA  F005         	goto	u4531
  4765  000BF0  EFFC  F005         	goto	u4530
  4766  000BF4                     u4531:
  4767  000BF4  EF03  F006         	goto	l779
  4768  000BF8                     u4530:
  4769  000BF8  B256               	btfsc	_flags^0,1,c
  4770  000BFA  EF01  F006         	goto	u4541
  4771  000BFE  EF03  F006         	goto	u4540
  4772  000C02                     u4541:
  4773  000C02  EF12  F005         	goto	l4380
  4774  000C06                     u4540:
  4775  000C06                     l779:
  4776                           
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4778  000C06  A856               	btfss	_flags^0,4,c
  4779  000C08  EF08  F006         	goto	u4551
  4780  000C0C  EF0A  F006         	goto	u4550
  4781  000C10                     u4551:
  4782  000C10  EF20  F006         	goto	l4426
  4783  000C14                     u4550:
  4784  000C14                     
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4786  000C14  0645               	decf	xtoa@i^0,f,c
  4787  000C16  A0D8               	btfss	status,0,c
  4788  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  4789  000C1A                     
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4791  000C1A  0EC8               	movlw	low _dbuf
  4792  000C1C  2445               	addwf	xtoa@i^0,w,c
  4793  000C1E  6ED9               	movwf	fsr2l,c
  4794  000C20  0E01               	movlw	high _dbuf
  4795  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  4796  000C24  6EDA               	movwf	fsr2h,c
  4797  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  4798  000C2A                     
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4800  000C2A  0645               	decf	xtoa@i^0,f,c
  4801  000C2C  A0D8               	btfss	status,0,c
  4802  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  4803                           
  4804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4805  000C30  0EC8               	movlw	low _dbuf
  4806  000C32  2445               	addwf	xtoa@i^0,w,c
  4807  000C34  6ED9               	movwf	fsr2l,c
  4808  000C36  0E01               	movlw	high _dbuf
  4809  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  4810  000C3A  6EDA               	movwf	fsr2h,c
  4811  000C3C  0E30               	movlw	48
  4812  000C3E  6EDF               	movwf	indf2,c
  4813  000C40                     l4426:
  4814                           
  4815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4816  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  4817  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  4818  000C48  0EC8               	movlw	low _dbuf
  4819  000C4A  2445               	addwf	xtoa@i^0,w,c
  4820  000C4C  6E19               	movwf	pad@buf^0,c
  4821  000C4E  0E01               	movlw	high _dbuf
  4822  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  4823  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  4824  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  4825  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  4826  000C5C  EC9F  F00B         	call	_pad	;wreg free
  4827  000C60  C017  F022         	movff	?_pad,?_xtoa
  4828  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  4829  000C68  0012               	return		;funcret
  4830  000C6A                     __end_of_xtoa:
  4831                           	opt callstack 0
  4832                           
  4833 ;; *************** function _toupper *****************
  4834 ;; Defined at:
  4835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  c               2   10[COMRAM] int 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  2   10[COMRAM] int 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4851 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4853 ;;Total ram usage:        8 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    5
  4856 ;; This function calls:
  4857 ;;		_islower
  4858 ;; This function is called by:
  4859 ;;		_xtoa
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text30
  4864  001D92                     __ptext30:
  4865                           	opt callstack 0
  4866  001D92                     _toupper:
  4867                           	opt callstack 20
  4868  001D92  0E9F               	movlw	159
  4869  001D94  6E0D               	movwf	??_toupper^0,c
  4870  001D96  0EFF               	movlw	255
  4871  001D98  6E0E               	movwf	(??_toupper+1)^0,c
  4872  001D9A  C00B  F00F         	movff	toupper@c,??_toupper+2
  4873  001D9E  C00C  F010         	movff	toupper@c+1,??_toupper+3
  4874  001DA2  500D               	movf	??_toupper^0,w,c
  4875  001DA4  260F               	addwf	(??_toupper+2)^0,f,c
  4876  001DA6  500E               	movf	(??_toupper+1)^0,w,c
  4877  001DA8  2210               	addwfc	(??_toupper+3)^0,f,c
  4878  001DAA  5010               	movf	(??_toupper+3)^0,w,c
  4879  001DAC  E10A               	bnz	u3800
  4880  001DAE  0E1A               	movlw	26
  4881  001DB0  5C0F               	subwf	(??_toupper+2)^0,w,c
  4882  001DB2  A0D8               	btfss	status,0,c
  4883  001DB4  EFDE  F00E         	goto	u3801
  4884  001DB8  EFE1  F00E         	goto	u3800
  4885  001DBC                     u3801:
  4886  001DBC  0E01               	movlw	1
  4887  001DBE  EFE2  F00E         	goto	u3810
  4888  001DC2                     u3800:
  4889  001DC2  0E00               	movlw	0
  4890  001DC4                     u3810:
  4891  001DC4  6E11               	movwf	_toupper$1855^0,c
  4892  001DC6  6A12               	clrf	(_toupper$1855+1)^0,c
  4893  001DC8  5011               	movf	_toupper$1855^0,w,c
  4894  001DCA  1012               	iorwf	(_toupper$1855+1)^0,w,c
  4895  001DCC  B4D8               	btfsc	status,2,c
  4896  001DCE  EFEB  F00E         	goto	u3821
  4897  001DD2  EFED  F00E         	goto	u3820
  4898  001DD6                     u3821:
  4899  001DD6  EFF3  F00E         	goto	l1598
  4900  001DDA                     u3820:
  4901  001DDA  0E5F               	movlw	95
  4902  001DDC  140B               	andwf	toupper@c^0,w,c
  4903  001DDE  6E0B               	movwf	?_toupper^0,c
  4904  001DE0  6A0C               	clrf	(?_toupper+1)^0,c
  4905  001DE2  EFF7  F00E         	goto	l1603
  4906  001DE6                     l1598:
  4907  001DE6  C00B  F00B         	movff	toupper@c,?_toupper
  4908  001DEA  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  4909  001DEE                     l1603:
  4910  001DEE  0012               	return		;funcret
  4911  001DF0                     __end_of_toupper:
  4912                           	opt callstack 0
  4913                           
  4914 ;; *************** function _islower *****************
  4915 ;; Defined at:
  4916 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  c               2    4[COMRAM] int 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  2    4[COMRAM] int 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;Total ram usage:        6 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    4
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_toupper
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text31
  4945  0021B6                     __ptext31:
  4946                           	opt callstack 0
  4947  0021B6                     _islower:
  4948                           	opt callstack 20
  4949  0021B6  0E9F               	movlw	159
  4950  0021B8  6E07               	movwf	??_islower^0,c
  4951  0021BA  0EFF               	movlw	255
  4952  0021BC  6E08               	movwf	(??_islower+1)^0,c
  4953  0021BE  C005  F009         	movff	islower@c,??_islower+2
  4954  0021C2  C006  F00A         	movff	islower@c+1,??_islower+3
  4955  0021C6  5007               	movf	??_islower^0,w,c
  4956  0021C8  2609               	addwf	(??_islower+2)^0,f,c
  4957  0021CA  5008               	movf	(??_islower+1)^0,w,c
  4958  0021CC  220A               	addwfc	(??_islower+3)^0,f,c
  4959  0021CE  500A               	movf	(??_islower+3)^0,w,c
  4960  0021D0  E10A               	bnz	u3690
  4961  0021D2  0E1A               	movlw	26
  4962  0021D4  5C09               	subwf	(??_islower+2)^0,w,c
  4963  0021D6  A0D8               	btfss	status,0,c
  4964  0021D8  EFF0  F010         	goto	u3691
  4965  0021DC  EFF3  F010         	goto	u3690
  4966  0021E0                     u3691:
  4967  0021E0  0E01               	movlw	1
  4968  0021E2  EFF4  F010         	goto	u3700
  4969  0021E6                     u3690:
  4970  0021E6  0E00               	movlw	0
  4971  0021E8                     u3700:
  4972  0021E8  6E05               	movwf	?_islower^0,c
  4973  0021EA  6A06               	clrf	(?_islower+1)^0,c
  4974  0021EC  0012               	return		;funcret
  4975  0021EE                     __end_of_islower:
  4976                           	opt callstack 0
  4977                           
  4978 ;; *************** function _isupper *****************
  4979 ;; Defined at:
  4980 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  c               2    4[COMRAM] int 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  2    4[COMRAM] int 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;Total ram usage:        6 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    4
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_xtoa
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text32
  5009  0021EE                     __ptext32:
  5010                           	opt callstack 0
  5011  0021EE                     _isupper:
  5012                           	opt callstack 21
  5013  0021EE  0EBF               	movlw	191
  5014  0021F0  6E07               	movwf	??_isupper^0,c
  5015  0021F2  0EFF               	movlw	255
  5016  0021F4  6E08               	movwf	(??_isupper+1)^0,c
  5017  0021F6  C005  F009         	movff	isupper@c,??_isupper+2
  5018  0021FA  C006  F00A         	movff	isupper@c+1,??_isupper+3
  5019  0021FE  5007               	movf	??_isupper^0,w,c
  5020  002200  2609               	addwf	(??_isupper+2)^0,f,c
  5021  002202  5008               	movf	(??_isupper+1)^0,w,c
  5022  002204  220A               	addwfc	(??_isupper+3)^0,f,c
  5023  002206  500A               	movf	(??_isupper+3)^0,w,c
  5024  002208  E10A               	bnz	u3760
  5025  00220A  0E1A               	movlw	26
  5026  00220C  5C09               	subwf	(??_isupper+2)^0,w,c
  5027  00220E  A0D8               	btfss	status,0,c
  5028  002210  EF0C  F011         	goto	u3761
  5029  002214  EF0F  F011         	goto	u3760
  5030  002218                     u3761:
  5031  002218  0E01               	movlw	1
  5032  00221A  EF10  F011         	goto	u3770
  5033  00221E                     u3760:
  5034  00221E  0E00               	movlw	0
  5035  002220                     u3770:
  5036  002220  6E05               	movwf	?_isupper^0,c
  5037  002222  6A06               	clrf	(?_isupper+1)^0,c
  5038  002224  0012               	return		;funcret
  5039  002226                     __end_of_isupper:
  5040                           	opt callstack 0
  5041                           
  5042 ;; *************** function _isalpha *****************
  5043 ;; Defined at:
  5044 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  c               2    4[COMRAM] int 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;		None
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  2    4[COMRAM] int 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, status,0
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;Total ram usage:        6 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    4
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_xtoa
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text33
  5073  00217A                     __ptext33:
  5074                           	opt callstack 0
  5075  00217A                     _isalpha:
  5076                           	opt callstack 21
  5077  00217A  0E9F               	movlw	159
  5078  00217C  6E07               	movwf	??_isalpha^0,c
  5079  00217E  0EFF               	movlw	255
  5080  002180  6E08               	movwf	(??_isalpha+1)^0,c
  5081  002182  0E20               	movlw	32
  5082  002184  1005               	iorwf	isalpha@c^0,w,c
  5083  002186  6E09               	movwf	(??_isalpha+2)^0,c
  5084  002188  0E00               	movlw	0
  5085  00218A  1006               	iorwf	(isalpha@c+1)^0,w,c
  5086  00218C  6E0A               	movwf	(??_isalpha+3)^0,c
  5087  00218E  5007               	movf	??_isalpha^0,w,c
  5088  002190  2609               	addwf	(??_isalpha+2)^0,f,c
  5089  002192  5008               	movf	(??_isalpha+1)^0,w,c
  5090  002194  220A               	addwfc	(??_isalpha+3)^0,f,c
  5091  002196  500A               	movf	(??_isalpha+3)^0,w,c
  5092  002198  E10A               	bnz	u3780
  5093  00219A  0E1A               	movlw	26
  5094  00219C  5C09               	subwf	(??_isalpha+2)^0,w,c
  5095  00219E  A0D8               	btfss	status,0,c
  5096  0021A0  EFD4  F010         	goto	u3781
  5097  0021A4  EFD7  F010         	goto	u3780
  5098  0021A8                     u3781:
  5099  0021A8  0E01               	movlw	1
  5100  0021AA  EFD8  F010         	goto	u3790
  5101  0021AE                     u3780:
  5102  0021AE  0E00               	movlw	0
  5103  0021B0                     u3790:
  5104  0021B0  6E05               	movwf	?_isalpha^0,c
  5105  0021B2  6A06               	clrf	(?_isalpha+1)^0,c
  5106  0021B4  0012               	return		;funcret
  5107  0021B6                     __end_of_isalpha:
  5108                           	opt callstack 0
  5109                           
  5110 ;; *************** function _utoa *****************
  5111 ;; Defined at:
  5112 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5115 ;;		 -> NULL(0), 
  5116 ;;  d               8   35[COMRAM] unsigned long long 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  n               8   55[COMRAM] unsigned long long 
  5119 ;;  i               2   63[COMRAM] int 
  5120 ;;  w               2   53[COMRAM] int 
  5121 ;;  p               2   51[COMRAM] int 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  2   33[COMRAM] int 
  5124 ;; Registers used:
  5125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5131 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;Total ram usage:       32 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    9
  5138 ;; This function calls:
  5139 ;;		___lodiv
  5140 ;;		___lomod
  5141 ;;		_pad
  5142 ;; This function is called by:
  5143 ;;		_vfpfcnvrt
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text34
  5148  000C6A                     __ptext34:
  5149                           	opt callstack 0
  5150  000C6A                     _utoa:
  5151                           	opt callstack 17
  5152  000C6A                     
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5154  000C6A  0100               	movlb	0	; () banked
  5155  000C6C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5156  000C6E  EF3B  F006         	goto	u4321
  5157  000C72  EF3D  F006         	goto	u4320
  5158  000C76                     u4321:
  5159  000C76  EF3E  F006         	goto	l4332
  5160  000C7A                     u4320:
  5161  000C7A                     
  5162                           ; BSR set to: 0
  5163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5164  000C7A  9256               	bcf	_flags^0,1,c
  5165  000C7C                     l4332:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5169  000C7C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5170  000C7E  EF4B  F006         	goto	u4330
  5171  000C82  518D               	movf	(_prec+1)& (0+255),w,b
  5172  000C84  E106               	bnz	u4331
  5173  000C86  058C               	decf	_prec& (0+255),w,b
  5174  000C88  B0D8               	btfsc	status,0,c
  5175  000C8A  EF49  F006         	goto	u4331
  5176  000C8E  EF4B  F006         	goto	u4330
  5177  000C92                     u4331:
  5178  000C92  EF51  F006         	goto	l741
  5179  000C96                     u4330:
  5180  000C96                     
  5181                           ; BSR set to: 0
  5182  000C96  0E00               	movlw	0
  5183  000C98  6E35               	movwf	(utoa@p+1)^0,c
  5184  000C9A  0E01               	movlw	1
  5185  000C9C  6E34               	movwf	utoa@p^0,c
  5186  000C9E  EF55  F006         	goto	l743
  5187  000CA2                     l741:
  5188                           
  5189                           ; BSR set to: 0
  5190  000CA2  C08C  F034         	movff	_prec,utoa@p
  5191  000CA6  C08D  F035         	movff	_prec+1,utoa@p+1
  5192  000CAA                     l743:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5196  000CAA  C08A  F036         	movff	_width,utoa@w
  5197  000CAE  C08B  F037         	movff	_width+1,utoa@w+1
  5198                           
  5199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5200  000CB2  C024  F038         	movff	utoa@d,utoa@n
  5201  000CB6  C025  F039         	movff	utoa@d+1,utoa@n+1
  5202  000CBA  C026  F03A         	movff	utoa@d+2,utoa@n+2
  5203  000CBE  C027  F03B         	movff	utoa@d+3,utoa@n+3
  5204  000CC2  C028  F03C         	movff	utoa@d+4,utoa@n+4
  5205  000CC6  C029  F03D         	movff	utoa@d+5,utoa@n+5
  5206  000CCA  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  5207  000CCE  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  5208  000CD2                     
  5209                           ; BSR set to: 0
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5211  000CD2  0E00               	movlw	0
  5212  000CD4  6E41               	movwf	(utoa@i+1)^0,c
  5213  000CD6  0E1F               	movlw	31
  5214  000CD8  6E40               	movwf	utoa@i^0,c
  5215  000CDA                     
  5216                           ; BSR set to: 0
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5218  000CDA  0E00               	movlw	0
  5219  000CDC  0101               	movlb	1	; () banked
  5220  000CDE  6FE7               	movwf	(_dbuf+31)& (0+255),b
  5221                           
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5223  000CE0  EFE8  F006         	goto	l4350
  5224  000CE4                     l4340:
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5227  000CE4  0640               	decf	utoa@i^0,f,c
  5228  000CE6  A0D8               	btfss	status,0,c
  5229  000CE8  0641               	decf	(utoa@i+1)^0,f,c
  5230  000CEA                     
  5231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5232  000CEA  0EC8               	movlw	low _dbuf
  5233  000CEC  2440               	addwf	utoa@i^0,w,c
  5234  000CEE  6ED9               	movwf	fsr2l,c
  5235  000CF0  0E01               	movlw	high _dbuf
  5236  000CF2  2041               	addwfc	(utoa@i+1)^0,w,c
  5237  000CF4  6EDA               	movwf	fsr2h,c
  5238  000CF6  C038  F005         	movff	utoa@n,___lomod@dividend
  5239  000CFA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  5240  000CFE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  5241  000D02  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  5242  000D06  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  5243  000D0A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  5244  000D0E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  5245  000D12  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  5246  000D16  0E0A               	movlw	10
  5247  000D18  6E0D               	movwf	___lomod@divisor^0,c
  5248  000D1A  0E00               	movlw	0
  5249  000D1C  6E0E               	movwf	(___lomod@divisor+1)^0,c
  5250  000D1E  0E00               	movlw	0
  5251  000D20  6E0F               	movwf	(___lomod@divisor+2)^0,c
  5252  000D22  0E00               	movlw	0
  5253  000D24  6E10               	movwf	(___lomod@divisor+3)^0,c
  5254  000D26  0E00               	movlw	0
  5255  000D28  6E11               	movwf	(___lomod@divisor+4)^0,c
  5256  000D2A  0E00               	movlw	0
  5257  000D2C  6E12               	movwf	(___lomod@divisor+5)^0,c
  5258  000D2E  0E00               	movlw	0
  5259  000D30  6E13               	movwf	(___lomod@divisor+6)^0,c
  5260  000D32  0E00               	movlw	0
  5261  000D34  6E14               	movwf	(___lomod@divisor+7)^0,c
  5262  000D36  EC37  F00B         	call	___lomod	;wreg free
  5263  000D3A  C005  F02C         	movff	?___lomod,??_utoa
  5264  000D3E  C006  F02D         	movff	?___lomod+1,??_utoa+1
  5265  000D42  C007  F02E         	movff	?___lomod+2,??_utoa+2
  5266  000D46  C008  F02F         	movff	?___lomod+3,??_utoa+3
  5267  000D4A  C009  F030         	movff	?___lomod+4,??_utoa+4
  5268  000D4E  C00A  F031         	movff	?___lomod+5,??_utoa+5
  5269  000D52  C00B  F032         	movff	?___lomod+6,??_utoa+6
  5270  000D56  C00C  F033         	movff	?___lomod+7,??_utoa+7
  5271  000D5A  502C               	movf	??_utoa^0,w,c
  5272  000D5C  0F30               	addlw	48
  5273  000D5E  6EDF               	movwf	indf2,c
  5274  000D60                     
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5276  000D60  0634               	decf	utoa@p^0,f,c
  5277  000D62  A0D8               	btfss	status,0,c
  5278  000D64  0635               	decf	(utoa@p+1)^0,f,c
  5279  000D66                     
  5280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5281  000D66  0636               	decf	utoa@w^0,f,c
  5282  000D68  A0D8               	btfss	status,0,c
  5283  000D6A  0637               	decf	(utoa@w+1)^0,f,c
  5284  000D6C                     
  5285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5286  000D6C  C038  F005         	movff	utoa@n,___lodiv@dividend
  5287  000D70  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  5288  000D74  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  5289  000D78  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  5290  000D7C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  5291  000D80  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  5292  000D84  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  5293  000D88  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  5294  000D8C  0E0A               	movlw	10
  5295  000D8E  6E0D               	movwf	___lodiv@divisor^0,c
  5296  000D90  0E00               	movlw	0
  5297  000D92  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  5298  000D94  0E00               	movlw	0
  5299  000D96  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  5300  000D98  0E00               	movlw	0
  5301  000D9A  6E10               	movwf	(___lodiv@divisor+3)^0,c
  5302  000D9C  0E00               	movlw	0
  5303  000D9E  6E11               	movwf	(___lodiv@divisor+4)^0,c
  5304  000DA0  0E00               	movlw	0
  5305  000DA2  6E12               	movwf	(___lodiv@divisor+5)^0,c
  5306  000DA4  0E00               	movlw	0
  5307  000DA6  6E13               	movwf	(___lodiv@divisor+6)^0,c
  5308  000DA8  0E00               	movlw	0
  5309  000DAA  6E14               	movwf	(___lodiv@divisor+7)^0,c
  5310  000DAC  ECBF  F00A         	call	___lodiv	;wreg free
  5311  000DB0  C005  F038         	movff	?___lodiv,utoa@n
  5312  000DB4  C006  F039         	movff	?___lodiv+1,utoa@n+1
  5313  000DB8  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  5314  000DBC  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  5315  000DC0  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  5316  000DC4  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  5317  000DC8  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  5318  000DCC  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  5319  000DD0                     l4350:
  5320                           
  5321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5322  000DD0  5040               	movf	utoa@i^0,w,c
  5323  000DD2  1041               	iorwf	(utoa@i+1)^0,w,c
  5324  000DD4  B4D8               	btfsc	status,2,c
  5325  000DD6  EFEF  F006         	goto	u4341
  5326  000DDA  EFF1  F006         	goto	u4340
  5327  000DDE                     u4341:
  5328  000DDE  EF21  F007         	goto	l4360
  5329  000DE2                     u4340:
  5330  000DE2  5038               	movf	utoa@n^0,w,c
  5331  000DE4  1039               	iorwf	(utoa@n+1)^0,w,c
  5332  000DE6  103A               	iorwf	(utoa@n+2)^0,w,c
  5333  000DE8  103B               	iorwf	(utoa@n+3)^0,w,c
  5334  000DEA  103C               	iorwf	(utoa@n+4)^0,w,c
  5335  000DEC  103D               	iorwf	(utoa@n+5)^0,w,c
  5336  000DEE  103E               	iorwf	(utoa@n+6)^0,w,c
  5337  000DF0  103F               	iorwf	(utoa@n+7)^0,w,c
  5338  000DF2  A4D8               	btfss	status,2,c
  5339  000DF4  EFFE  F006         	goto	u4351
  5340  000DF8  EF00  F007         	goto	u4350
  5341  000DFC                     u4351:
  5342  000DFC  EF72  F006         	goto	l4340
  5343  000E00                     u4350:
  5344  000E00  BE35               	btfsc	(utoa@p+1)^0,7,c
  5345  000E02  EF0D  F007         	goto	u4360
  5346  000E06  5035               	movf	(utoa@p+1)^0,w,c
  5347  000E08  E106               	bnz	u4361
  5348  000E0A  0434               	decf	utoa@p^0,w,c
  5349  000E0C  B0D8               	btfsc	status,0,c
  5350  000E0E  EF0B  F007         	goto	u4361
  5351  000E12  EF0D  F007         	goto	u4360
  5352  000E16                     u4361:
  5353  000E16  EF72  F006         	goto	l4340
  5354  000E1A                     u4360:
  5355  000E1A  BE37               	btfsc	(utoa@w+1)^0,7,c
  5356  000E1C  EF18  F007         	goto	u4371
  5357  000E20  5037               	movf	(utoa@w+1)^0,w,c
  5358  000E22  E108               	bnz	u4370
  5359  000E24  0436               	decf	utoa@w^0,w,c
  5360  000E26  A0D8               	btfss	status,0,c
  5361  000E28  EF18  F007         	goto	u4371
  5362  000E2C  EF1A  F007         	goto	u4370
  5363  000E30                     u4371:
  5364  000E30  EF21  F007         	goto	l4360
  5365  000E34                     u4370:
  5366  000E34  B256               	btfsc	_flags^0,1,c
  5367  000E36  EF1F  F007         	goto	u4381
  5368  000E3A  EF21  F007         	goto	u4380
  5369  000E3E                     u4381:
  5370  000E3E  EF72  F006         	goto	l4340
  5371  000E42                     u4380:
  5372  000E42                     l4360:
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5375  000E42  C022  F017         	movff	utoa@fp,pad@fp
  5376  000E46  C023  F018         	movff	utoa@fp+1,pad@fp+1
  5377  000E4A  0EC8               	movlw	low _dbuf
  5378  000E4C  2440               	addwf	utoa@i^0,w,c
  5379  000E4E  6E19               	movwf	pad@buf^0,c
  5380  000E50  0E01               	movlw	high _dbuf
  5381  000E52  2041               	addwfc	(utoa@i+1)^0,w,c
  5382  000E54  6E1A               	movwf	(pad@buf+1)^0,c
  5383  000E56  C036  F01B         	movff	utoa@w,pad@p
  5384  000E5A  C037  F01C         	movff	utoa@w+1,pad@p+1
  5385  000E5E  EC9F  F00B         	call	_pad	;wreg free
  5386  000E62  C017  F022         	movff	?_pad,?_utoa
  5387  000E66  C018  F023         	movff	?_pad+1,?_utoa+1
  5388  000E6A  0012               	return		;funcret
  5389  000E6C                     __end_of_utoa:
  5390                           	opt callstack 0
  5391                           
  5392 ;; *************** function ___lomod *****************
  5393 ;; Defined at:
  5394 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  dividend        8    4[COMRAM] unsigned long long 
  5397 ;;  divisor         8   12[COMRAM] unsigned long long 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  counter         1   20[COMRAM] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  8    4[COMRAM] unsigned long long 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5409 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5412 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5413 ;;Total ram usage:       17 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    4
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_utoa
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text35
  5424  00166E                     __ptext35:
  5425                           	opt callstack 0
  5426  00166E                     ___lomod:
  5427                           	opt callstack 21
  5428  00166E  500D               	movf	___lomod@divisor^0,w,c
  5429  001670  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  5430  001672  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  5431  001674  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  5432  001676  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  5433  001678  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  5434  00167A  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  5435  00167C  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  5436  00167E  B4D8               	btfsc	status,2,c
  5437  001680  EF44  F00B         	goto	u4021
  5438  001684  EF46  F00B         	goto	u4020
  5439  001688                     u4021:
  5440  001688  EF8E  F00B         	goto	l1273
  5441  00168C                     u4020:
  5442  00168C  0E01               	movlw	1
  5443  00168E  6E15               	movwf	___lomod@counter^0,c
  5444  001690  EF54  F00B         	goto	l4202
  5445  001694                     l4200:
  5446  001694  90D8               	bcf	status,0,c
  5447  001696  360D               	rlcf	___lomod@divisor^0,f,c
  5448  001698  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  5449  00169A  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  5450  00169C  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  5451  00169E  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  5452  0016A0  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  5453  0016A2  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  5454  0016A4  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  5455  0016A6  2A15               	incf	___lomod@counter^0,f,c
  5456  0016A8                     l4202:
  5457  0016A8  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  5458  0016AA  EF59  F00B         	goto	u4031
  5459  0016AE  EF5B  F00B         	goto	u4030
  5460  0016B2                     u4031:
  5461  0016B2  EF4A  F00B         	goto	l4200
  5462  0016B6                     u4030:
  5463  0016B6                     l4204:
  5464  0016B6  500D               	movf	___lomod@divisor^0,w,c
  5465  0016B8  5C05               	subwf	___lomod@dividend^0,w,c
  5466  0016BA  500E               	movf	(___lomod@divisor+1)^0,w,c
  5467  0016BC  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  5468  0016BE  500F               	movf	(___lomod@divisor+2)^0,w,c
  5469  0016C0  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  5470  0016C2  5010               	movf	(___lomod@divisor+3)^0,w,c
  5471  0016C4  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  5472  0016C6  5011               	movf	(___lomod@divisor+4)^0,w,c
  5473  0016C8  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  5474  0016CA  5012               	movf	(___lomod@divisor+5)^0,w,c
  5475  0016CC  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  5476  0016CE  5013               	movf	(___lomod@divisor+6)^0,w,c
  5477  0016D0  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  5478  0016D2  5014               	movf	(___lomod@divisor+7)^0,w,c
  5479  0016D4  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  5480  0016D6  A0D8               	btfss	status,0,c
  5481  0016D8  EF70  F00B         	goto	u4041
  5482  0016DC  EF72  F00B         	goto	u4040
  5483  0016E0                     u4041:
  5484  0016E0  EF82  F00B         	goto	l4208
  5485  0016E4                     u4040:
  5486  0016E4  500D               	movf	___lomod@divisor^0,w,c
  5487  0016E6  5E05               	subwf	___lomod@dividend^0,f,c
  5488  0016E8  500E               	movf	(___lomod@divisor+1)^0,w,c
  5489  0016EA  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  5490  0016EC  500F               	movf	(___lomod@divisor+2)^0,w,c
  5491  0016EE  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  5492  0016F0  5010               	movf	(___lomod@divisor+3)^0,w,c
  5493  0016F2  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  5494  0016F4  5011               	movf	(___lomod@divisor+4)^0,w,c
  5495  0016F6  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  5496  0016F8  5012               	movf	(___lomod@divisor+5)^0,w,c
  5497  0016FA  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  5498  0016FC  5013               	movf	(___lomod@divisor+6)^0,w,c
  5499  0016FE  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  5500  001700  5014               	movf	(___lomod@divisor+7)^0,w,c
  5501  001702  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  5502  001704                     l4208:
  5503  001704  90D8               	bcf	status,0,c
  5504  001706  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  5505  001708  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  5506  00170A  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  5507  00170C  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  5508  00170E  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  5509  001710  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  5510  001712  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  5511  001714  320D               	rrcf	___lomod@divisor^0,f,c
  5512  001716  2E15               	decfsz	___lomod@counter^0,f,c
  5513  001718  EF5B  F00B         	goto	l4204
  5514  00171C                     l1273:
  5515  00171C  C005  F005         	movff	___lomod@dividend,?___lomod
  5516  001720  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  5517  001724  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  5518  001728  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  5519  00172C  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  5520  001730  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  5521  001734  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  5522  001738  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  5523  00173C  0012               	return		;funcret
  5524  00173E                     __end_of___lomod:
  5525                           	opt callstack 0
  5526                           
  5527 ;; *************** function ___lodiv *****************
  5528 ;; Defined at:
  5529 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  dividend        8    4[COMRAM] unsigned long long 
  5532 ;;  divisor         8   12[COMRAM] unsigned long long 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  quotient        8   20[COMRAM] unsigned long long 
  5535 ;;  counter         1   28[COMRAM] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  8    4[COMRAM] unsigned long long 
  5538 ;; Registers used:
  5539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5545 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5549 ;;Total ram usage:       25 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    4
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_utoa
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text36
  5560  00157E                     __ptext36:
  5561                           	opt callstack 0
  5562  00157E                     ___lodiv:
  5563                           	opt callstack 21
  5564  00157E  EE20  F015         	lfsr	2,___lodiv@quotient
  5565  001582  0E07               	movlw	7
  5566  001584                     u3981:
  5567  001584  6ADE               	clrf	postinc2,c
  5568  001586  06E8               	decf	wreg,f,c
  5569  001588  E2FD               	bc	u3981
  5570  00158A  500D               	movf	___lodiv@divisor^0,w,c
  5571  00158C  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  5572  00158E  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  5573  001590  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  5574  001592  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  5575  001594  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  5576  001596  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  5577  001598  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  5578  00159A  B4D8               	btfsc	status,2,c
  5579  00159C  EFD2  F00A         	goto	u3991
  5580  0015A0  EFD4  F00A         	goto	u3990
  5581  0015A4                     u3991:
  5582  0015A4  EF26  F00B         	goto	l1263
  5583  0015A8                     u3990:
  5584  0015A8  0E01               	movlw	1
  5585  0015AA  6E1D               	movwf	___lodiv@counter^0,c
  5586  0015AC  EFE2  F00A         	goto	l4182
  5587  0015B0                     l4180:
  5588  0015B0  90D8               	bcf	status,0,c
  5589  0015B2  360D               	rlcf	___lodiv@divisor^0,f,c
  5590  0015B4  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  5591  0015B6  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  5592  0015B8  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  5593  0015BA  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  5594  0015BC  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  5595  0015BE  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  5596  0015C0  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  5597  0015C2  2A1D               	incf	___lodiv@counter^0,f,c
  5598  0015C4                     l4182:
  5599  0015C4  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  5600  0015C6  EFE7  F00A         	goto	u4001
  5601  0015CA  EFE9  F00A         	goto	u4000
  5602  0015CE                     u4001:
  5603  0015CE  EFD8  F00A         	goto	l4180
  5604  0015D2                     u4000:
  5605  0015D2                     l4184:
  5606  0015D2  90D8               	bcf	status,0,c
  5607  0015D4  3615               	rlcf	___lodiv@quotient^0,f,c
  5608  0015D6  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  5609  0015D8  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  5610  0015DA  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  5611  0015DC  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  5612  0015DE  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  5613  0015E0  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  5614  0015E2  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  5615  0015E4  500D               	movf	___lodiv@divisor^0,w,c
  5616  0015E6  5C05               	subwf	___lodiv@dividend^0,w,c
  5617  0015E8  500E               	movf	(___lodiv@divisor+1)^0,w,c
  5618  0015EA  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  5619  0015EC  500F               	movf	(___lodiv@divisor+2)^0,w,c
  5620  0015EE  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  5621  0015F0  5010               	movf	(___lodiv@divisor+3)^0,w,c
  5622  0015F2  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  5623  0015F4  5011               	movf	(___lodiv@divisor+4)^0,w,c
  5624  0015F6  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  5625  0015F8  5012               	movf	(___lodiv@divisor+5)^0,w,c
  5626  0015FA  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  5627  0015FC  5013               	movf	(___lodiv@divisor+6)^0,w,c
  5628  0015FE  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  5629  001600  5014               	movf	(___lodiv@divisor+7)^0,w,c
  5630  001602  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  5631  001604  A0D8               	btfss	status,0,c
  5632  001606  EF07  F00B         	goto	u4011
  5633  00160A  EF09  F00B         	goto	u4010
  5634  00160E                     u4011:
  5635  00160E  EF1A  F00B         	goto	l4192
  5636  001612                     u4010:
  5637  001612  500D               	movf	___lodiv@divisor^0,w,c
  5638  001614  5E05               	subwf	___lodiv@dividend^0,f,c
  5639  001616  500E               	movf	(___lodiv@divisor+1)^0,w,c
  5640  001618  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  5641  00161A  500F               	movf	(___lodiv@divisor+2)^0,w,c
  5642  00161C  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  5643  00161E  5010               	movf	(___lodiv@divisor+3)^0,w,c
  5644  001620  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  5645  001622  5011               	movf	(___lodiv@divisor+4)^0,w,c
  5646  001624  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  5647  001626  5012               	movf	(___lodiv@divisor+5)^0,w,c
  5648  001628  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  5649  00162A  5013               	movf	(___lodiv@divisor+6)^0,w,c
  5650  00162C  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  5651  00162E  5014               	movf	(___lodiv@divisor+7)^0,w,c
  5652  001630  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  5653  001632  8015               	bsf	___lodiv@quotient^0,0,c
  5654  001634                     l4192:
  5655  001634  90D8               	bcf	status,0,c
  5656  001636  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  5657  001638  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  5658  00163A  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  5659  00163C  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  5660  00163E  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  5661  001640  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  5662  001642  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  5663  001644  320D               	rrcf	___lodiv@divisor^0,f,c
  5664  001646  2E1D               	decfsz	___lodiv@counter^0,f,c
  5665  001648  EFE9  F00A         	goto	l4184
  5666  00164C                     l1263:
  5667  00164C  C015  F005         	movff	___lodiv@quotient,?___lodiv
  5668  001650  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  5669  001654  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  5670  001658  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  5671  00165C  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  5672  001660  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  5673  001664  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  5674  001668  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  5675  00166C  0012               	return		;funcret
  5676  00166E                     __end_of___lodiv:
  5677                           	opt callstack 0
  5678                           
  5679 ;; *************** function _stoa *****************
  5680 ;; Defined at:
  5681 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5684 ;;		 -> NULL(0), 
  5685 ;;  s               2   17[COMRAM] PTR unsigned char 
  5686 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  nuls            7   20[COMRAM] unsigned char [7]
  5689 ;;  l               2   35[COMRAM] int 
  5690 ;;  p               2   33[COMRAM] int 
  5691 ;;  cp              2   31[COMRAM] PTR unsigned char 
  5692 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  5693 ;;  w               2   29[COMRAM] int 
  5694 ;;  i               2   27[COMRAM] int 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  2   15[COMRAM] int 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5705 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5707 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5708 ;;Total ram usage:       22 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    7
  5711 ;; This function calls:
  5712 ;;		_fputc
  5713 ;;		_strlen
  5714 ;; This function is called by:
  5715 ;;		_vfpfcnvrt
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text37
  5720  000E6C                     __ptext37:
  5721                           	opt callstack 0
  5722  000E6C                     _stoa:
  5723                           	opt callstack 19
  5724  000E6C                     
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5726  000E6C  EE20  F0EB         	lfsr	2,stoa@F1139
  5727  000E70  EE10  F015         	lfsr	1,stoa@nuls
  5728  000E74  0E06               	movlw	6
  5729  000E76                     u4221:
  5730  000E76  CFDB FFE3          	movff	plusw2,plusw1
  5731  000E7A  06E8               	decf	wreg,f,c
  5732  000E7C  E2FC               	bc	u4221
  5733  000E7E                     
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  5735  000E7E  C012  F020         	movff	stoa@s,stoa@cp
  5736  000E82  C013  F021         	movff	stoa@s+1,stoa@cp+1
  5737  000E86                     
  5738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  5739  000E86  5020               	movf	stoa@cp^0,w,c
  5740  000E88  1021               	iorwf	(stoa@cp+1)^0,w,c
  5741  000E8A  A4D8               	btfss	status,2,c
  5742  000E8C  EF4A  F007         	goto	u4231
  5743  000E90  EF4C  F007         	goto	u4230
  5744  000E94                     u4231:
  5745  000E94  EF50  F007         	goto	l4294
  5746  000E98                     u4230:
  5747  000E98                     
  5748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  5749  000E98  0E15               	movlw	low stoa@nuls
  5750  000E9A  6E20               	movwf	stoa@cp^0,c
  5751  000E9C  0E00               	movlw	high stoa@nuls
  5752  000E9E  6E21               	movwf	(stoa@cp+1)^0,c
  5753  000EA0                     l4294:
  5754                           
  5755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  5756  000EA0  C020  F005         	movff	stoa@cp,strlen@s
  5757  000EA4  C021  F006         	movff	stoa@cp+1,strlen@s+1
  5758  000EA8  ECA7  F00F         	call	_strlen	;wreg free
  5759  000EAC  C005  F024         	movff	?_strlen,stoa@l
  5760  000EB0  C006  F025         	movff	?_strlen+1,stoa@l+1
  5761  000EB4                     
  5762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  5763  000EB4  C08C  F022         	movff	_prec,stoa@p
  5764  000EB8  C08D  F023         	movff	_prec+1,stoa@p+1
  5765  000EBC                     
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  5767  000EBC  BE23               	btfsc	(stoa@p+1)^0,7,c
  5768  000EBE  EF63  F007         	goto	u4241
  5769  000EC2  EF65  F007         	goto	u4240
  5770  000EC6                     u4241:
  5771  000EC6  EF7A  F007         	goto	l722
  5772  000ECA                     u4240:
  5773  000ECA  5024               	movf	stoa@l^0,w,c
  5774  000ECC  5C22               	subwf	stoa@p^0,w,c
  5775  000ECE  5023               	movf	(stoa@p+1)^0,w,c
  5776  000ED0  0A80               	xorlw	128
  5777  000ED2  6E14               	movwf	??_stoa^0,c
  5778  000ED4  5025               	movf	(stoa@l+1)^0,w,c
  5779  000ED6  0A80               	xorlw	128
  5780  000ED8  5814               	subwfb	??_stoa^0,w,c
  5781  000EDA  A0D8               	btfss	status,0,c
  5782  000EDC  EF72  F007         	goto	u4251
  5783  000EE0  EF74  F007         	goto	u4250
  5784  000EE4                     u4251:
  5785  000EE4  EF76  F007         	goto	l720
  5786  000EE8                     u4250:
  5787  000EE8  EF7A  F007         	goto	l722
  5788  000EEC                     l720:
  5789  000EEC  C022  F024         	movff	stoa@p,stoa@l
  5790  000EF0  C023  F025         	movff	stoa@p+1,stoa@l+1
  5791  000EF4                     l722:
  5792                           
  5793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  5794  000EF4  C024  F022         	movff	stoa@l,stoa@p
  5795  000EF8  C025  F023         	movff	stoa@l+1,stoa@p+1
  5796                           
  5797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  5798  000EFC  C08A  F01E         	movff	_width,stoa@w
  5799  000F00  C08B  F01F         	movff	_width+1,stoa@w+1
  5800                           
  5801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  5802  000F04  B056               	btfsc	_flags^0,0,c
  5803  000F06  EF87  F007         	goto	u4261
  5804  000F0A  EF89  F007         	goto	u4260
  5805  000F0E                     u4261:
  5806  000F0E  EFA6  F007         	goto	l4310
  5807  000F12                     u4260:
  5808  000F12  EF97  F007         	goto	l4308
  5809  000F16                     l4304:
  5810                           
  5811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  5812  000F16  0E00               	movlw	0
  5813  000F18  6E08               	movwf	(fputc@c+1)^0,c
  5814  000F1A  0E20               	movlw	32
  5815  000F1C  6E07               	movwf	fputc@c^0,c
  5816  000F1E  C010  F009         	movff	stoa@fp,fputc@fp
  5817  000F22  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5818  000F26  EC10  F00D         	call	_fputc	;wreg free
  5819  000F2A                     
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  5821  000F2A  4A24               	infsnz	stoa@l^0,f,c
  5822  000F2C  2A25               	incf	(stoa@l+1)^0,f,c
  5823  000F2E                     l4308:
  5824                           
  5825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  5826  000F2E  501E               	movf	stoa@w^0,w,c
  5827  000F30  5C24               	subwf	stoa@l^0,w,c
  5828  000F32  5025               	movf	(stoa@l+1)^0,w,c
  5829  000F34  0A80               	xorlw	128
  5830  000F36  6E14               	movwf	??_stoa^0,c
  5831  000F38  501F               	movf	(stoa@w+1)^0,w,c
  5832  000F3A  0A80               	xorlw	128
  5833  000F3C  5814               	subwfb	??_stoa^0,w,c
  5834  000F3E  A0D8               	btfss	status,0,c
  5835  000F40  EFA4  F007         	goto	u4271
  5836  000F44  EFA6  F007         	goto	u4270
  5837  000F48                     u4271:
  5838  000F48  EF8B  F007         	goto	l4304
  5839  000F4C                     u4270:
  5840  000F4C                     l4310:
  5841                           
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  5843  000F4C  0E00               	movlw	0
  5844  000F4E  6E1D               	movwf	(stoa@i+1)^0,c
  5845  000F50  0E00               	movlw	0
  5846  000F52  6E1C               	movwf	stoa@i^0,c
  5847                           
  5848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5849  000F54  EFCB  F007         	goto	l4318
  5850  000F58                     l4312:
  5851                           
  5852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  5853  000F58  C020  FFF6         	movff	stoa@cp,tblptrl
  5854  000F5C  C021  FFF7         	movff	stoa@cp+1,tblptrh
  5855  000F60  0E00               	movlw	low (__mediumconst shr (0+16))
  5856  000F62  6EF8               	movwf	tblptru,c
  5857  000F64  0E0E               	movlw	(high __ramtop+-1)
  5858  000F66  64F7               	cpfsgt	tblptrh,c
  5859  000F68  D003               	bra	u4287
  5860  000F6A  0008               	tblrd		*
  5861  000F6C  50F5               	movf	tablat,w,c
  5862  000F6E  D005               	bra	u4280
  5863  000F70                     u4287:
  5864  000F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  5865  000F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  5866  000F78  50EF               	movf	indf0,w,c
  5867  000F7A                     u4280:
  5868  000F7A  6E14               	movwf	??_stoa^0,c
  5869  000F7C  5014               	movf	??_stoa^0,w,c
  5870  000F7E  6E07               	movwf	fputc@c^0,c
  5871  000F80  6A08               	clrf	(fputc@c+1)^0,c
  5872  000F82  C010  F009         	movff	stoa@fp,fputc@fp
  5873  000F86  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5874  000F8A  EC10  F00D         	call	_fputc	;wreg free
  5875  000F8E                     
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  5877  000F8E  4A20               	infsnz	stoa@cp^0,f,c
  5878  000F90  2A21               	incf	(stoa@cp+1)^0,f,c
  5879  000F92                     
  5880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  5881  000F92  4A1C               	infsnz	stoa@i^0,f,c
  5882  000F94  2A1D               	incf	(stoa@i+1)^0,f,c
  5883  000F96                     l4318:
  5884                           
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5886  000F96  5022               	movf	stoa@p^0,w,c
  5887  000F98  5C1C               	subwf	stoa@i^0,w,c
  5888  000F9A  501D               	movf	(stoa@i+1)^0,w,c
  5889  000F9C  0A80               	xorlw	128
  5890  000F9E  6E14               	movwf	??_stoa^0,c
  5891  000FA0  5023               	movf	(stoa@p+1)^0,w,c
  5892  000FA2  0A80               	xorlw	128
  5893  000FA4  5814               	subwfb	??_stoa^0,w,c
  5894  000FA6  A0D8               	btfss	status,0,c
  5895  000FA8  EFD8  F007         	goto	u4291
  5896  000FAC  EFDA  F007         	goto	u4290
  5897  000FB0                     u4291:
  5898  000FB0  EFAC  F007         	goto	l4312
  5899  000FB4                     u4290:
  5900  000FB4                     
  5901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  5902  000FB4  A056               	btfss	_flags^0,0,c
  5903  000FB6  EFDF  F007         	goto	u4301
  5904  000FBA  EFE1  F007         	goto	u4300
  5905  000FBE                     u4301:
  5906  000FBE  EFFE  F007         	goto	l732
  5907  000FC2                     u4300:
  5908  000FC2  EFEF  F007         	goto	l4326
  5909  000FC6                     l4322:
  5910                           
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  5912  000FC6  0E00               	movlw	0
  5913  000FC8  6E08               	movwf	(fputc@c+1)^0,c
  5914  000FCA  0E20               	movlw	32
  5915  000FCC  6E07               	movwf	fputc@c^0,c
  5916  000FCE  C010  F009         	movff	stoa@fp,fputc@fp
  5917  000FD2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5918  000FD6  EC10  F00D         	call	_fputc	;wreg free
  5919  000FDA                     
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  5921  000FDA  4A24               	infsnz	stoa@l^0,f,c
  5922  000FDC  2A25               	incf	(stoa@l+1)^0,f,c
  5923  000FDE                     l4326:
  5924                           
  5925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  5926  000FDE  501E               	movf	stoa@w^0,w,c
  5927  000FE0  5C24               	subwf	stoa@l^0,w,c
  5928  000FE2  5025               	movf	(stoa@l+1)^0,w,c
  5929  000FE4  0A80               	xorlw	128
  5930  000FE6  6E14               	movwf	??_stoa^0,c
  5931  000FE8  501F               	movf	(stoa@w+1)^0,w,c
  5932  000FEA  0A80               	xorlw	128
  5933  000FEC  5814               	subwfb	??_stoa^0,w,c
  5934  000FEE  A0D8               	btfss	status,0,c
  5935  000FF0  EFFC  F007         	goto	u4311
  5936  000FF4  EFFE  F007         	goto	u4310
  5937  000FF8                     u4311:
  5938  000FF8  EFE3  F007         	goto	l4322
  5939  000FFC                     u4310:
  5940  000FFC                     l732:
  5941                           
  5942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  5943  000FFC  C024  F010         	movff	stoa@l,?_stoa
  5944  001000  C025  F011         	movff	stoa@l+1,?_stoa+1
  5945  001004  0012               	return		;funcret
  5946  001006                     __end_of_stoa:
  5947                           	opt callstack 0
  5948                           
  5949 ;; *************** function _dtoa *****************
  5950 ;; Defined at:
  5951 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5954 ;;		 -> NULL(0), 
  5955 ;;  d               8   35[COMRAM] long long 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  n               8   59[COMRAM] long long 
  5958 ;;  i               2   67[COMRAM] int 
  5959 ;;  s               2   57[COMRAM] int 
  5960 ;;  w               2   55[COMRAM] int 
  5961 ;;  p               2   53[COMRAM] int 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  2   33[COMRAM] int 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5971 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5973 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5974 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5975 ;;Total ram usage:       36 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    9
  5978 ;; This function calls:
  5979 ;;		___aodiv
  5980 ;;		___aomod
  5981 ;;		_abs
  5982 ;;		_pad
  5983 ;; This function is called by:
  5984 ;;		_vfpfcnvrt
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text38
  5989  0006B4                     __ptext38:
  5990                           	opt callstack 0
  5991  0006B4                     _dtoa:
  5992                           	opt callstack 17
  5993  0006B4                     
  5994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5995  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  5996  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  5997  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  5998  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  5999  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  6000  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  6001  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  6002  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  6003  0006D4                     
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6005  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  6006  0006D6  EF6F  F003         	goto	u4071
  6007  0006DA  EF72  F003         	goto	u4070
  6008  0006DE                     u4071:
  6009  0006DE  0E01               	movlw	1
  6010  0006E0  EF73  F003         	goto	u4080
  6011  0006E4                     u4070:
  6012  0006E4  0E00               	movlw	0
  6013  0006E6                     u4080:
  6014  0006E6  6E3A               	movwf	dtoa@s^0,c
  6015  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6018  0006EA  503A               	movf	dtoa@s^0,w,c
  6019  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  6020  0006EE  B4D8               	btfsc	status,2,c
  6021  0006F0  EF7C  F003         	goto	u4091
  6022  0006F4  EF7E  F003         	goto	u4090
  6023  0006F8                     u4091:
  6024  0006F8  EF8E  F003         	goto	l4230
  6025  0006FC                     u4090:
  6026  0006FC                     
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6028  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  6029  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  6030  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  6031  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  6032  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  6033  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  6034  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  6035  00070A  6C3C               	negf	dtoa@n^0,c
  6036  00070C  0E00               	movlw	0
  6037  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  6038  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  6039  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  6040  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  6041  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  6042  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  6043  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  6044  00071C                     l4230:
  6045                           
  6046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6047  00071C  0100               	movlb	0	; () banked
  6048  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6049  000720  EF94  F003         	goto	u4101
  6050  000724  EF96  F003         	goto	u4100
  6051  000728                     u4101:
  6052  000728  EF97  F003         	goto	l4234
  6053  00072C                     u4100:
  6054  00072C                     
  6055                           ; BSR set to: 0
  6056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6057  00072C  9256               	bcf	_flags^0,1,c
  6058  00072E                     l4234:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6062  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6063  000730  EFA4  F003         	goto	u4110
  6064  000734  518D               	movf	(_prec+1)& (0+255),w,b
  6065  000736  E106               	bnz	u4111
  6066  000738  058C               	decf	_prec& (0+255),w,b
  6067  00073A  B0D8               	btfsc	status,0,c
  6068  00073C  EFA2  F003         	goto	u4111
  6069  000740  EFA4  F003         	goto	u4110
  6070  000744                     u4111:
  6071  000744  EFAA  F003         	goto	l693
  6072  000748                     u4110:
  6073  000748                     
  6074                           ; BSR set to: 0
  6075  000748  0E00               	movlw	0
  6076  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  6077  00074C  0E01               	movlw	1
  6078  00074E  6E36               	movwf	dtoa@p^0,c
  6079  000750  EFAE  F003         	goto	l695
  6080  000754                     l693:
  6081                           
  6082                           ; BSR set to: 0
  6083  000754  C08C  F036         	movff	_prec,dtoa@p
  6084  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  6085  00075C                     l695:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6089  00075C  C08A  F038         	movff	_width,dtoa@w
  6090  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  6091  000764                     
  6092                           ; BSR set to: 0
  6093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6094  000764  503A               	movf	dtoa@s^0,w,c
  6095  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  6096  000768  A4D8               	btfss	status,2,c
  6097  00076A  EFB9  F003         	goto	u4121
  6098  00076E  EFBB  F003         	goto	u4120
  6099  000772                     u4121:
  6100  000772  EFC2  F003         	goto	l4242
  6101  000776                     u4120:
  6102  000776                     
  6103                           ; BSR set to: 0
  6104  000776  A456               	btfss	_flags^0,2,c
  6105  000778  EFC0  F003         	goto	u4131
  6106  00077C  EFC2  F003         	goto	u4130
  6107  000780                     u4131:
  6108  000780  EFC5  F003         	goto	l4244
  6109  000784                     u4130:
  6110  000784                     l4242:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6114  000784  0638               	decf	dtoa@w^0,f,c
  6115  000786  A0D8               	btfss	status,0,c
  6116  000788  0639               	decf	(dtoa@w+1)^0,f,c
  6117  00078A                     l4244:
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6121  00078A  0E00               	movlw	0
  6122  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  6123  00078E  0E1F               	movlw	31
  6124  000790  6E44               	movwf	dtoa@i^0,c
  6125  000792                     
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6128  000792  0E00               	movlw	0
  6129  000794  0101               	movlb	1	; () banked
  6130  000796  6FE7               	movwf	(_dbuf+31)& (0+255),b
  6131                           
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6133  000798  EF4A  F004         	goto	l4258
  6134  00079C                     l4248:
  6135                           
  6136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6137  00079C  0644               	decf	dtoa@i^0,f,c
  6138  00079E  A0D8               	btfss	status,0,c
  6139  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  6140  0007A2                     
  6141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6142  0007A2  0EC8               	movlw	low _dbuf
  6143  0007A4  2444               	addwf	dtoa@i^0,w,c
  6144  0007A6  6ED9               	movwf	fsr2l,c
  6145  0007A8  0E01               	movlw	high _dbuf
  6146  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  6147  0007AC  6EDA               	movwf	fsr2h,c
  6148  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  6149  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  6150  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  6151  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  6152  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  6153  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  6154  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  6155  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  6156  0007CE  0E0A               	movlw	10
  6157  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  6158  0007D2  0E00               	movlw	0
  6159  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  6160  0007D6  0E00               	movlw	0
  6161  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  6162  0007DA  0E00               	movlw	0
  6163  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  6164  0007DE  0E00               	movlw	0
  6165  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  6166  0007E2  0E00               	movlw	0
  6167  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  6168  0007E6  0E00               	movlw	0
  6169  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  6170  0007EA  0E00               	movlw	0
  6171  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  6172  0007EE  EC94  F009         	call	___aomod	;wreg free
  6173  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  6174  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  6175  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  6176  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  6177  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  6178  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  6179  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  6180  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  6181  000812  C02C  F017         	movff	??_dtoa,abs@a
  6182  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  6183  00081A  EC9D  F010         	call	_abs	;wreg free
  6184  00081E  5017               	movf	?_abs^0,w,c
  6185  000820  0F30               	addlw	48
  6186  000822  6EDF               	movwf	indf2,c
  6187  000824                     
  6188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6189  000824  0636               	decf	dtoa@p^0,f,c
  6190  000826  A0D8               	btfss	status,0,c
  6191  000828  0637               	decf	(dtoa@p+1)^0,f,c
  6192  00082A                     
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6194  00082A  0638               	decf	dtoa@w^0,f,c
  6195  00082C  A0D8               	btfss	status,0,c
  6196  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  6197  000830                     
  6198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6199  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  6200  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  6201  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  6202  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  6203  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  6204  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  6205  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  6206  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  6207  000850  0E0A               	movlw	10
  6208  000852  6E0D               	movwf	___aodiv@divisor^0,c
  6209  000854  0E00               	movlw	0
  6210  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  6211  000858  0E00               	movlw	0
  6212  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  6213  00085C  0E00               	movlw	0
  6214  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  6215  000860  0E00               	movlw	0
  6216  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  6217  000864  0E00               	movlw	0
  6218  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  6219  000868  0E00               	movlw	0
  6220  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  6221  00086C  0E00               	movlw	0
  6222  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  6223  000870  ECD0  F008         	call	___aodiv	;wreg free
  6224  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  6225  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  6226  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  6227  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  6228  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  6229  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  6230  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  6231  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  6232  000894                     l4258:
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6235  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  6236  000896  EF55  F004         	goto	u4141
  6237  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  6238  00089C  E108               	bnz	u4140
  6239  00089E  0444               	decf	dtoa@i^0,w,c
  6240  0008A0  A0D8               	btfss	status,0,c
  6241  0008A2  EF55  F004         	goto	u4141
  6242  0008A6  EF57  F004         	goto	u4140
  6243  0008AA                     u4141:
  6244  0008AA  EF87  F004         	goto	l4268
  6245  0008AE                     u4140:
  6246  0008AE  503C               	movf	dtoa@n^0,w,c
  6247  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  6248  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  6249  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  6250  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  6251  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  6252  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  6253  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  6254  0008BE  A4D8               	btfss	status,2,c
  6255  0008C0  EF64  F004         	goto	u4151
  6256  0008C4  EF66  F004         	goto	u4150
  6257  0008C8                     u4151:
  6258  0008C8  EFCE  F003         	goto	l4248
  6259  0008CC                     u4150:
  6260  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  6261  0008CE  EF73  F004         	goto	u4160
  6262  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  6263  0008D4  E106               	bnz	u4161
  6264  0008D6  0436               	decf	dtoa@p^0,w,c
  6265  0008D8  B0D8               	btfsc	status,0,c
  6266  0008DA  EF71  F004         	goto	u4161
  6267  0008DE  EF73  F004         	goto	u4160
  6268  0008E2                     u4161:
  6269  0008E2  EFCE  F003         	goto	l4248
  6270  0008E6                     u4160:
  6271  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  6272  0008E8  EF7E  F004         	goto	u4171
  6273  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  6274  0008EE  E108               	bnz	u4170
  6275  0008F0  0438               	decf	dtoa@w^0,w,c
  6276  0008F2  A0D8               	btfss	status,0,c
  6277  0008F4  EF7E  F004         	goto	u4171
  6278  0008F8  EF80  F004         	goto	u4170
  6279  0008FC                     u4171:
  6280  0008FC  EF87  F004         	goto	l4268
  6281  000900                     u4170:
  6282  000900  B256               	btfsc	_flags^0,1,c
  6283  000902  EF85  F004         	goto	u4181
  6284  000906  EF87  F004         	goto	u4180
  6285  00090A                     u4181:
  6286  00090A  EFCE  F003         	goto	l4248
  6287  00090E                     u4180:
  6288  00090E                     l4268:
  6289                           
  6290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6291  00090E  503A               	movf	dtoa@s^0,w,c
  6292  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  6293  000912  A4D8               	btfss	status,2,c
  6294  000914  EF8E  F004         	goto	u4191
  6295  000918  EF90  F004         	goto	u4190
  6296  00091C                     u4191:
  6297  00091C  EF97  F004         	goto	l4272
  6298  000920                     u4190:
  6299  000920  A456               	btfss	_flags^0,2,c
  6300  000922  EF95  F004         	goto	u4201
  6301  000926  EF97  F004         	goto	u4200
  6302  00092A                     u4201:
  6303  00092A  EFB5  F004         	goto	l4282
  6304  00092E                     u4200:
  6305  00092E                     l4272:
  6306                           
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6308  00092E  0644               	decf	dtoa@i^0,f,c
  6309  000930  A0D8               	btfss	status,0,c
  6310  000932  0645               	decf	(dtoa@i+1)^0,f,c
  6311  000934                     
  6312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6313  000934  503A               	movf	dtoa@s^0,w,c
  6314  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  6315  000938  A4D8               	btfss	status,2,c
  6316  00093A  EFA1  F004         	goto	u4211
  6317  00093E  EFA3  F004         	goto	u4210
  6318  000942                     u4211:
  6319  000942  EFA9  F004         	goto	l4278
  6320  000946                     u4210:
  6321  000946  0E00               	movlw	0
  6322  000948  6E35               	movwf	(_dtoa$1260+1)^0,c
  6323  00094A  0E2B               	movlw	43
  6324  00094C  6E34               	movwf	_dtoa$1260^0,c
  6325  00094E  EFAD  F004         	goto	l4280
  6326  000952                     l4278:
  6327  000952  0E00               	movlw	0
  6328  000954  6E35               	movwf	(_dtoa$1260+1)^0,c
  6329  000956  0E2D               	movlw	45
  6330  000958  6E34               	movwf	_dtoa$1260^0,c
  6331  00095A                     l4280:
  6332  00095A  0EC8               	movlw	low _dbuf
  6333  00095C  2444               	addwf	dtoa@i^0,w,c
  6334  00095E  6ED9               	movwf	fsr2l,c
  6335  000960  0E01               	movlw	high _dbuf
  6336  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  6337  000964  6EDA               	movwf	fsr2h,c
  6338  000966  C034  FFDF         	movff	_dtoa$1260,indf2
  6339  00096A                     l4282:
  6340                           
  6341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6342  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  6343  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  6344  000972  0EC8               	movlw	low _dbuf
  6345  000974  2444               	addwf	dtoa@i^0,w,c
  6346  000976  6E19               	movwf	pad@buf^0,c
  6347  000978  0E01               	movlw	high _dbuf
  6348  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  6349  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  6350  00097E  C038  F01B         	movff	dtoa@w,pad@p
  6351  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  6352  000986  EC9F  F00B         	call	_pad	;wreg free
  6353  00098A  C017  F022         	movff	?_pad,?_dtoa
  6354  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  6355  000992  0012               	return		;funcret
  6356  000994                     __end_of_dtoa:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function _pad *****************
  6360 ;; Defined at:
  6361 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  6364 ;;		 -> NULL(0), 
  6365 ;;  buf             2   24[COMRAM] PTR unsigned char 
  6366 ;;		 -> dbuf(32), 
  6367 ;;  p               2   26[COMRAM] int 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  w               2   31[COMRAM] int 
  6370 ;;  i               2   29[COMRAM] int 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2   22[COMRAM] int 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6380 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6383 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6384 ;;Total ram usage:       11 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    8
  6387 ;; This function calls:
  6388 ;;		_fputc
  6389 ;;		_fputs
  6390 ;;		_strlen
  6391 ;; This function is called by:
  6392 ;;		_dtoa
  6393 ;;		_utoa
  6394 ;;		_xtoa
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text39
  6399  00173E                     __ptext39:
  6400                           	opt callstack 0
  6401  00173E                     _pad:
  6402                           	opt callstack 17
  6403  00173E                     
  6404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6405  00173E  A056               	btfss	_flags^0,0,c
  6406  001740  EFA4  F00B         	goto	u3711
  6407  001744  EFA6  F00B         	goto	u3710
  6408  001748                     u3711:
  6409  001748  EFB0  F00B         	goto	l4044
  6410  00174C                     u3710:
  6411  00174C                     
  6412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6413  00174C  C019  F010         	movff	pad@buf,fputs@s
  6414  001750  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6415  001754  C017  F012         	movff	pad@fp,fputs@fp
  6416  001758  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6417  00175C  EC18  F010         	call	_fputs	;wreg free
  6418  001760                     l4044:
  6419                           
  6420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6421  001760  BE1C               	btfsc	(pad@p+1)^0,7,c
  6422  001762  EFB5  F00B         	goto	u3721
  6423  001766  EFB7  F00B         	goto	u3720
  6424  00176A                     u3721:
  6425  00176A  EFBD  F00B         	goto	l4048
  6426  00176E                     u3720:
  6427  00176E  C01B  F020         	movff	pad@p,pad@w
  6428  001772  C01C  F021         	movff	pad@p+1,pad@w+1
  6429  001776  EFC1  F00B         	goto	l682
  6430  00177A                     l4048:
  6431  00177A  0E00               	movlw	0
  6432  00177C  6E21               	movwf	(pad@w+1)^0,c
  6433  00177E  0E00               	movlw	0
  6434  001780  6E20               	movwf	pad@w^0,c
  6435  001782                     l682:
  6436                           
  6437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6438  001782  0E00               	movlw	0
  6439  001784  6E1F               	movwf	(pad@i+1)^0,c
  6440  001786  0E00               	movlw	0
  6441  001788  6E1E               	movwf	pad@i^0,c
  6442                           
  6443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6444  00178A  EFD3  F00B         	goto	l4054
  6445  00178E                     l4050:
  6446                           
  6447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6448  00178E  0E00               	movlw	0
  6449  001790  6E08               	movwf	(fputc@c+1)^0,c
  6450  001792  0E20               	movlw	32
  6451  001794  6E07               	movwf	fputc@c^0,c
  6452  001796  C017  F009         	movff	pad@fp,fputc@fp
  6453  00179A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  6454  00179E  EC10  F00D         	call	_fputc	;wreg free
  6455  0017A2                     
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6457  0017A2  4A1E               	infsnz	pad@i^0,f,c
  6458  0017A4  2A1F               	incf	(pad@i+1)^0,f,c
  6459  0017A6                     l4054:
  6460                           
  6461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6462  0017A6  5020               	movf	pad@w^0,w,c
  6463  0017A8  5C1E               	subwf	pad@i^0,w,c
  6464  0017AA  501F               	movf	(pad@i+1)^0,w,c
  6465  0017AC  0A80               	xorlw	128
  6466  0017AE  6E1D               	movwf	??_pad^0,c
  6467  0017B0  5021               	movf	(pad@w+1)^0,w,c
  6468  0017B2  0A80               	xorlw	128
  6469  0017B4  581D               	subwfb	??_pad^0,w,c
  6470  0017B6  A0D8               	btfss	status,0,c
  6471  0017B8  EFE0  F00B         	goto	u3731
  6472  0017BC  EFE2  F00B         	goto	u3730
  6473  0017C0                     u3731:
  6474  0017C0  EFC7  F00B         	goto	l4050
  6475  0017C4                     u3730:
  6476  0017C4                     
  6477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6478  0017C4  B056               	btfsc	_flags^0,0,c
  6479  0017C6  EFE7  F00B         	goto	u3741
  6480  0017CA  EFE9  F00B         	goto	u3740
  6481  0017CE                     u3741:
  6482  0017CE  EFF3  F00B         	goto	l4058
  6483  0017D2                     u3740:
  6484  0017D2                     
  6485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6486  0017D2  C019  F010         	movff	pad@buf,fputs@s
  6487  0017D6  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6488  0017DA  C017  F012         	movff	pad@fp,fputs@fp
  6489  0017DE  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6490  0017E2  EC18  F010         	call	_fputs	;wreg free
  6491  0017E6                     l4058:
  6492                           
  6493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6494  0017E6  C019  F005         	movff	pad@buf,strlen@s
  6495  0017EA  C01A  F006         	movff	pad@buf+1,strlen@s+1
  6496  0017EE  ECA7  F00F         	call	_strlen	;wreg free
  6497  0017F2  5020               	movf	pad@w^0,w,c
  6498  0017F4  2405               	addwf	?_strlen^0,w,c
  6499  0017F6  6E17               	movwf	?_pad^0,c
  6500  0017F8  5021               	movf	(pad@w+1)^0,w,c
  6501  0017FA  2006               	addwfc	(?_strlen+1)^0,w,c
  6502  0017FC  6E18               	movwf	(?_pad+1)^0,c
  6503  0017FE  0012               	return		;funcret
  6504  001800                     __end_of_pad:
  6505                           	opt callstack 0
  6506                           
  6507 ;; *************** function _strlen *****************
  6508 ;; Defined at:
  6509 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6512 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6513 ;;		 -> STR_4(12), 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  a               2    6[COMRAM] PTR const unsigned char 
  6516 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6517 ;;		 -> STR_4(12), 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  2    4[COMRAM] unsigned int 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;Total ram usage:        4 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    4
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_pad
  6538 ;;		_stoa
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text40
  6543  001F4E                     __ptext40:
  6544                           	opt callstack 0
  6545  001F4E                     _strlen:
  6546                           	opt callstack 20
  6547  001F4E  C005  F007         	movff	strlen@s,strlen@a
  6548  001F52  C006  F008         	movff	strlen@s+1,strlen@a+1
  6549  001F56  EFAF  F00F         	goto	l4030
  6550  001F5A                     l4028:
  6551  001F5A  4A05               	infsnz	strlen@s^0,f,c
  6552  001F5C  2A06               	incf	(strlen@s+1)^0,f,c
  6553  001F5E                     l4030:
  6554  001F5E  C005  FFF6         	movff	strlen@s,tblptrl
  6555  001F62  C006  FFF7         	movff	strlen@s+1,tblptrh
  6556  001F66  0E00               	movlw	low (__mediumconst shr (0+16))
  6557  001F68  6EF8               	movwf	tblptru,c
  6558  001F6A  0E0E               	movlw	(high __ramtop+-1)
  6559  001F6C  64F7               	cpfsgt	tblptrh,c
  6560  001F6E  D003               	bra	u3677
  6561  001F70  0008               	tblrd		*
  6562  001F72  50F5               	movf	tablat,w,c
  6563  001F74  D005               	bra	u3670
  6564  001F76                     u3677:
  6565  001F76  CFF6 FFE9          	movff	tblptrl,fsr0l
  6566  001F7A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6567  001F7E  50EF               	movf	indf0,w,c
  6568  001F80                     u3670:
  6569  001F80  0900               	iorlw	0
  6570  001F82  A4D8               	btfss	status,2,c
  6571  001F84  EFC6  F00F         	goto	u3681
  6572  001F88  EFC8  F00F         	goto	u3680
  6573  001F8C                     u3681:
  6574  001F8C  EFAD  F00F         	goto	l4028
  6575  001F90                     u3680:
  6576  001F90  5007               	movf	strlen@a^0,w,c
  6577  001F92  5C05               	subwf	strlen@s^0,w,c
  6578  001F94  6E05               	movwf	?_strlen^0,c
  6579  001F96  5008               	movf	(strlen@a+1)^0,w,c
  6580  001F98  5806               	subwfb	(strlen@s+1)^0,w,c
  6581  001F9A  6E06               	movwf	(?_strlen+1)^0,c
  6582  001F9C  0012               	return		;funcret
  6583  001F9E                     __end_of_strlen:
  6584                           	opt callstack 0
  6585                           
  6586 ;; *************** function _fputs *****************
  6587 ;; Defined at:
  6588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6591 ;;		 -> dbuf(32), 
  6592 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6593 ;;		 -> NULL(0), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  i               2   20[COMRAM] int 
  6596 ;;  c               1   19[COMRAM] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2   15[COMRAM] int 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;Total ram usage:        7 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    7
  6613 ;; This function calls:
  6614 ;;		_fputc
  6615 ;; This function is called by:
  6616 ;;		_pad
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text41
  6621  002030                     __ptext41:
  6622                           	opt callstack 0
  6623  002030                     _fputs:
  6624                           	opt callstack 17
  6625  002030  0E00               	movlw	0
  6626  002032  6E16               	movwf	(fputs@i+1)^0,c
  6627  002034  0E00               	movlw	0
  6628  002036  6E15               	movwf	fputs@i^0,c
  6629  002038  EF29  F010         	goto	l4024
  6630  00203C                     l4020:
  6631  00203C  C014  F007         	movff	fputs@c,fputc@c
  6632  002040  6A08               	clrf	(fputc@c+1)^0,c
  6633  002042  C012  F009         	movff	fputs@fp,fputc@fp
  6634  002046  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  6635  00204A  EC10  F00D         	call	_fputc	;wreg free
  6636  00204E  4A15               	infsnz	fputs@i^0,f,c
  6637  002050  2A16               	incf	(fputs@i+1)^0,f,c
  6638  002052                     l4024:
  6639  002052  5015               	movf	fputs@i^0,w,c
  6640  002054  2410               	addwf	fputs@s^0,w,c
  6641  002056  6ED9               	movwf	fsr2l,c
  6642  002058  5016               	movf	(fputs@i+1)^0,w,c
  6643  00205A  2011               	addwfc	(fputs@s+1)^0,w,c
  6644  00205C  6EDA               	movwf	fsr2h,c
  6645  00205E  50DF               	movf	indf2,w,c
  6646  002060  6E14               	movwf	fputs@c^0,c
  6647  002062  5014               	movf	fputs@c^0,w,c
  6648  002064  A4D8               	btfss	status,2,c
  6649  002066  EF37  F010         	goto	u3661
  6650  00206A  EF39  F010         	goto	u3660
  6651  00206E                     u3661:
  6652  00206E  EF1E  F010         	goto	l4020
  6653  002072                     u3660:
  6654  002072  0012               	return		;funcret
  6655  002074                     __end_of_fputs:
  6656                           	opt callstack 0
  6657                           
  6658 ;; *************** function _fputc *****************
  6659 ;; Defined at:
  6660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  c               2    6[COMRAM] int 
  6663 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  6664 ;;		 -> NULL(0), 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  2    6[COMRAM] int 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;Total ram usage:        9 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    6
  6683 ;; This function calls:
  6684 ;;		_putch
  6685 ;; This function is called by:
  6686 ;;		_pad
  6687 ;;		_stoa
  6688 ;;		_vfpfcnvrt
  6689 ;;		_fputs
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text42
  6694  001A20                     __ptext42:
  6695                           	opt callstack 0
  6696  001A20                     _fputc:
  6697                           	opt callstack 17
  6698  001A20  5009               	movf	fputc@fp^0,w,c
  6699  001A22  100A               	iorwf	(fputc@fp+1)^0,w,c
  6700  001A24  B4D8               	btfsc	status,2,c
  6701  001A26  EF17  F00D         	goto	u3621
  6702  001A2A  EF19  F00D         	goto	u3620
  6703  001A2E                     u3621:
  6704  001A2E  EF22  F00D         	goto	l4008
  6705  001A32                     u3620:
  6706  001A32  5009               	movf	fputc@fp^0,w,c
  6707  001A34  100A               	iorwf	(fputc@fp+1)^0,w,c
  6708  001A36  A4D8               	btfss	status,2,c
  6709  001A38  EF20  F00D         	goto	u3631
  6710  001A3C  EF22  F00D         	goto	u3630
  6711  001A40                     u3631:
  6712  001A40  EF27  F00D         	goto	l4010
  6713  001A44                     u3630:
  6714  001A44                     l4008:
  6715  001A44  5007               	movf	fputc@c^0,w,c
  6716  001A46  ECF1  F011         	call	_putch
  6717  001A4A  EF5A  F00D         	goto	l1572
  6718  001A4E                     l4010:
  6719  001A4E  EE20 F004          	lfsr	2,4
  6720  001A52  5009               	movf	fputc@fp^0,w,c
  6721  001A54  26D9               	addwf	fsr2l,f,c
  6722  001A56  500A               	movf	(fputc@fp+1)^0,w,c
  6723  001A58  22DA               	addwfc	fsr2h,f,c
  6724  001A5A  50DE               	movf	postinc2,w,c
  6725  001A5C  10DE               	iorwf	postinc2,w,c
  6726  001A5E  B4D8               	btfsc	status,2,c
  6727  001A60  EF34  F00D         	goto	u3641
  6728  001A64  EF36  F00D         	goto	u3640
  6729  001A68                     u3641:
  6730  001A68  EF51  F00D         	goto	l4014
  6731  001A6C                     u3640:
  6732  001A6C  EE20 F004          	lfsr	2,4
  6733  001A70  5009               	movf	fputc@fp^0,w,c
  6734  001A72  26D9               	addwf	fsr2l,f,c
  6735  001A74  500A               	movf	(fputc@fp+1)^0,w,c
  6736  001A76  22DA               	addwfc	fsr2h,f,c
  6737  001A78  EE10 F002          	lfsr	1,2
  6738  001A7C  5009               	movf	fputc@fp^0,w,c
  6739  001A7E  26E1               	addwf	fsr1l,f,c
  6740  001A80  500A               	movf	(fputc@fp+1)^0,w,c
  6741  001A82  22E2               	addwfc	fsr1h,f,c
  6742  001A84  50DE               	movf	postinc2,w,c
  6743  001A86  5CE6               	subwf	postinc1,w,c
  6744  001A88  50E6               	movf	postinc1,w,c
  6745  001A8A  0A80               	xorlw	128
  6746  001A8C  6E0F               	movwf	(??_fputc+4)^0,c
  6747  001A8E  50DE               	movf	postinc2,w,c
  6748  001A90  0A80               	xorlw	128
  6749  001A92  580F               	subwfb	(??_fputc+4)^0,w,c
  6750  001A94  B0D8               	btfsc	status,0,c
  6751  001A96  EF4F  F00D         	goto	u3651
  6752  001A9A  EF51  F00D         	goto	u3650
  6753  001A9E                     u3651:
  6754  001A9E  EF5A  F00D         	goto	l1572
  6755  001AA2                     u3650:
  6756  001AA2                     l4014:
  6757  001AA2  EE20 F002          	lfsr	2,2
  6758  001AA6  5009               	movf	fputc@fp^0,w,c
  6759  001AA8  26D9               	addwf	fsr2l,f,c
  6760  001AAA  500A               	movf	(fputc@fp+1)^0,w,c
  6761  001AAC  22DA               	addwfc	fsr2h,f,c
  6762  001AAE  2ADE               	incf	postinc2,f,c
  6763  001AB0  0E00               	movlw	0
  6764  001AB2  22DD               	addwfc	postdec2,f,c
  6765  001AB4                     l1572:
  6766  001AB4  0012               	return		;funcret
  6767  001AB6                     __end_of_fputc:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function _putch *****************
  6771 ;; Defined at:
  6772 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  txData          1    wreg     unsigned char 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  txData          1    5[COMRAM] unsigned char 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6790 ;;Total ram usage:        1 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    5
  6793 ;; This function calls:
  6794 ;;		_EUSART2_Write
  6795 ;; This function is called by:
  6796 ;;		_fputc
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text43
  6801  0023E2                     __ptext43:
  6802                           	opt callstack 0
  6803  0023E2                     _putch:
  6804                           	opt callstack 17
  6805                           
  6806                           ;incstack = 0
  6807                           ;putch@txData stored from wreg
  6808  0023E2  6E06               	movwf	putch@txData^0,c
  6809  0023E4                     
  6810                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  6811  0023E4  5006               	movf	putch@txData^0,w,c
  6812  0023E6  ECF8  F00E         	call	_EUSART2_Write
  6813  0023EA  0012               	return		;funcret
  6814  0023EC                     __end_of_putch:
  6815                           	opt callstack 0
  6816                           
  6817 ;; *************** function _EUSART2_Write *****************
  6818 ;; Defined at:
  6819 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  txData          1    wreg     unsigned char 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  txData          1    4[COMRAM] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6837 ;;Total ram usage:        1 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    4
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		_putch
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text44
  6848  001DF0                     __ptext44:
  6849                           	opt callstack 0
  6850  001DF0                     _EUSART2_Write:
  6851                           	opt callstack 17
  6852                           
  6853                           ;incstack = 0
  6854                           ;EUSART2_Write@txData stored from wreg
  6855  001DF0  6E05               	movwf	EUSART2_Write@txData^0,c
  6856  001DF2                     l3986:
  6857                           
  6858                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  6859  001DF2  0100               	movlb	0	; () banked
  6860  001DF4  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  6861  001DF6  B4D8               	btfsc	status,2,c
  6862  001DF8  EF00  F00F         	goto	u3591
  6863  001DFC  EF02  F00F         	goto	u3590
  6864  001E00                     u3591:
  6865  001E00  EFF9  F00E         	goto	l3986
  6866  001E04                     u3590:
  6867  001E04                     
  6868                           ; BSR set to: 0
  6869                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  6870  001E04  010E               	movlb	14	; () banked
  6871  001E06  BDC5               	btfsc	197,6,b	;volatile
  6872  001E08  EF08  F00F         	goto	u3601
  6873  001E0C  EF0A  F00F         	goto	u3600
  6874  001E10                     u3601:
  6875  001E10  EF0E  F00F         	goto	l321
  6876  001E14                     u3600:
  6877  001E14                     
  6878                           ; BSR set to: 14
  6879                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  6880  001E14  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  6881                           
  6882                           ;mcc_generated_files/eusart2.c: 182:     }
  6883  001E18  EF24  F00F         	goto	l4000
  6884  001E1C                     l321:
  6885                           
  6886                           ; BSR set to: 14
  6887                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  6888  001E1C  9DC5               	bcf	197,6,b	;volatile
  6889  001E1E                     
  6890                           ; BSR set to: 14
  6891                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  6892  001E1E  0E80               	movlw	low _eusart2TxBuffer
  6893  001E20  0100               	movlb	0	; () banked
  6894  001E22  259E               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  6895  001E24  6ED9               	movwf	fsr2l,c
  6896  001E26  6ADA               	clrf	fsr2h,c
  6897  001E28  0E00               	movlw	high _eusart2TxBuffer
  6898  001E2A  22DA               	addwfc	fsr2h,f,c
  6899  001E2C  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  6900  001E30                     
  6901                           ; BSR set to: 0
  6902  001E30  2B9E               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  6903  001E32                     
  6904                           ; BSR set to: 0
  6905                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  6906  001E32  0E07               	movlw	7
  6907  001E34  659E               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  6908  001E36  EF1F  F00F         	goto	u3611
  6909  001E3A  EF21  F00F         	goto	u3610
  6910  001E3E                     u3611:
  6911  001E3E  EF23  F00F         	goto	l3998
  6912  001E42                     u3610:
  6913  001E42                     
  6914                           ; BSR set to: 0
  6915                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  6916  001E42  0E00               	movlw	0
  6917  001E44  6F9E               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6918  001E46                     l3998:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  6922  001E46  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6923  001E48                     l4000:
  6924                           
  6925                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  6926  001E48  010E               	movlb	14	; () banked
  6927  001E4A  8DC5               	bsf	197,6,b	;volatile
  6928  001E4C                     
  6929                           ; BSR set to: 14
  6930  001E4C  0012               	return		;funcret
  6931  001E4E                     __end_of_EUSART2_Write:
  6932                           	opt callstack 0
  6933                           
  6934 ;; *************** function _abs *****************
  6935 ;; Defined at:
  6936 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  a               2   22[COMRAM] int 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2   22[COMRAM] int 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;Total ram usage:        4 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    4
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_dtoa
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text45
  6965  00213A                     __ptext45:
  6966                           	opt callstack 0
  6967  00213A                     _abs:
  6968                           	opt callstack 21
  6969  00213A  BE18               	btfsc	(abs@a+1)^0,7,c
  6970  00213C  EFAA  F010         	goto	u3750
  6971  002140  5018               	movf	(abs@a+1)^0,w,c
  6972  002142  E106               	bnz	u3751
  6973  002144  0417               	decf	abs@a^0,w,c
  6974  002146  B0D8               	btfsc	status,0,c
  6975  002148  EFA8  F010         	goto	u3751
  6976  00214C  EFAA  F010         	goto	u3750
  6977  002150                     u3751:
  6978  002150  EFB8  F010         	goto	l1500
  6979  002154                     u3750:
  6980  002154  C017  F019         	movff	abs@a,??_abs
  6981  002158  C018  F01A         	movff	abs@a+1,??_abs+1
  6982  00215C  1E19               	comf	??_abs^0,f,c
  6983  00215E  1E1A               	comf	(??_abs+1)^0,f,c
  6984  002160  4A19               	infsnz	??_abs^0,f,c
  6985  002162  2A1A               	incf	(??_abs+1)^0,f,c
  6986  002164  C019  F017         	movff	??_abs,?_abs
  6987  002168  C01A  F018         	movff	??_abs+1,?_abs+1
  6988  00216C  EFBC  F010         	goto	l1503
  6989  002170                     l1500:
  6990  002170  C017  F017         	movff	abs@a,?_abs
  6991  002174  C018  F018         	movff	abs@a+1,?_abs+1
  6992  002178                     l1503:
  6993  002178  0012               	return		;funcret
  6994  00217A                     __end_of_abs:
  6995                           	opt callstack 0
  6996                           
  6997 ;; *************** function ___aomod *****************
  6998 ;; Defined at:
  6999 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  dividend        8    4[COMRAM] long long 
  7002 ;;  divisor         8   12[COMRAM] long long 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  sign            1   21[COMRAM] unsigned char 
  7005 ;;  counter         1   20[COMRAM] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  8    4[COMRAM] long long 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7015 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;Total ram usage:       18 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    4
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_dtoa
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text46
  7030  001328                     __ptext46:
  7031                           	opt callstack 0
  7032  001328                     ___aomod:
  7033                           	opt callstack 21
  7034  001328  0E00               	movlw	0
  7035  00132A  6E16               	movwf	___aomod@sign^0,c
  7036  00132C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  7037  00132E  EF9D  F009         	goto	u3920
  7038  001332  EF9B  F009         	goto	u3921
  7039  001336                     u3921:
  7040  001336  EFAF  F009         	goto	l4146
  7041  00133A                     u3920:
  7042  00133A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7043  00133C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7044  00133E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7045  001340  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7046  001342  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7047  001344  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7048  001346  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7049  001348  6C05               	negf	___aomod@dividend^0,c
  7050  00134A  0E00               	movlw	0
  7051  00134C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7052  00134E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7053  001350  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7054  001352  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7055  001354  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7056  001356  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7057  001358  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7058  00135A  0E01               	movlw	1
  7059  00135C  6E16               	movwf	___aomod@sign^0,c
  7060  00135E                     l4146:
  7061  00135E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  7062  001360  EFB6  F009         	goto	u3930
  7063  001364  EFB4  F009         	goto	u3931
  7064  001368                     u3931:
  7065  001368  EFC6  F009         	goto	l4150
  7066  00136C                     u3930:
  7067  00136C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  7068  00136E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  7069  001370  1E12               	comf	(___aomod@divisor+5)^0,f,c
  7070  001372  1E11               	comf	(___aomod@divisor+4)^0,f,c
  7071  001374  1E10               	comf	(___aomod@divisor+3)^0,f,c
  7072  001376  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  7073  001378  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  7074  00137A  6C0D               	negf	___aomod@divisor^0,c
  7075  00137C  0E00               	movlw	0
  7076  00137E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  7077  001380  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  7078  001382  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  7079  001384  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  7080  001386  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  7081  001388  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  7082  00138A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  7083  00138C                     l4150:
  7084  00138C  500D               	movf	___aomod@divisor^0,w,c
  7085  00138E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  7086  001390  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  7087  001392  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  7088  001394  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  7089  001396  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  7090  001398  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  7091  00139A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  7092  00139C  B4D8               	btfsc	status,2,c
  7093  00139E  EFD3  F009         	goto	u3941
  7094  0013A2  EFD5  F009         	goto	u3940
  7095  0013A6                     u3941:
  7096  0013A6  EF1D  F00A         	goto	l4166
  7097  0013AA                     u3940:
  7098  0013AA  0E01               	movlw	1
  7099  0013AC  6E15               	movwf	___aomod@counter^0,c
  7100  0013AE  EFE3  F009         	goto	l4156
  7101  0013B2                     l4154:
  7102  0013B2  90D8               	bcf	status,0,c
  7103  0013B4  360D               	rlcf	___aomod@divisor^0,f,c
  7104  0013B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  7105  0013B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  7106  0013BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  7107  0013BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  7108  0013BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  7109  0013C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  7110  0013C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  7111  0013C4  2A15               	incf	___aomod@counter^0,f,c
  7112  0013C6                     l4156:
  7113  0013C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  7114  0013C8  EFE8  F009         	goto	u3951
  7115  0013CC  EFEA  F009         	goto	u3950
  7116  0013D0                     u3951:
  7117  0013D0  EFD9  F009         	goto	l4154
  7118  0013D4                     u3950:
  7119  0013D4                     l4158:
  7120  0013D4  500D               	movf	___aomod@divisor^0,w,c
  7121  0013D6  5C05               	subwf	___aomod@dividend^0,w,c
  7122  0013D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  7123  0013DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  7124  0013DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  7125  0013DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  7126  0013E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  7127  0013E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  7128  0013E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  7129  0013E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  7130  0013E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  7131  0013EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  7132  0013EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  7133  0013EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  7134  0013F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  7135  0013F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  7136  0013F4  A0D8               	btfss	status,0,c
  7137  0013F6  EFFF  F009         	goto	u3961
  7138  0013FA  EF01  F00A         	goto	u3960
  7139  0013FE                     u3961:
  7140  0013FE  EF11  F00A         	goto	l4162
  7141  001402                     u3960:
  7142  001402  500D               	movf	___aomod@divisor^0,w,c
  7143  001404  5E05               	subwf	___aomod@dividend^0,f,c
  7144  001406  500E               	movf	(___aomod@divisor+1)^0,w,c
  7145  001408  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  7146  00140A  500F               	movf	(___aomod@divisor+2)^0,w,c
  7147  00140C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  7148  00140E  5010               	movf	(___aomod@divisor+3)^0,w,c
  7149  001410  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  7150  001412  5011               	movf	(___aomod@divisor+4)^0,w,c
  7151  001414  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  7152  001416  5012               	movf	(___aomod@divisor+5)^0,w,c
  7153  001418  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  7154  00141A  5013               	movf	(___aomod@divisor+6)^0,w,c
  7155  00141C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  7156  00141E  5014               	movf	(___aomod@divisor+7)^0,w,c
  7157  001420  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  7158  001422                     l4162:
  7159  001422  90D8               	bcf	status,0,c
  7160  001424  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  7161  001426  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  7162  001428  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  7163  00142A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  7164  00142C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  7165  00142E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  7166  001430  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  7167  001432  320D               	rrcf	___aomod@divisor^0,f,c
  7168  001434  2E15               	decfsz	___aomod@counter^0,f,c
  7169  001436  EFEA  F009         	goto	l4158
  7170  00143A                     l4166:
  7171  00143A  5016               	movf	___aomod@sign^0,w,c
  7172  00143C  B4D8               	btfsc	status,2,c
  7173  00143E  EF23  F00A         	goto	u3971
  7174  001442  EF25  F00A         	goto	u3970
  7175  001446                     u3971:
  7176  001446  EF35  F00A         	goto	l4170
  7177  00144A                     u3970:
  7178  00144A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7179  00144C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7180  00144E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7181  001450  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7182  001452  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7183  001454  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7184  001456  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7185  001458  6C05               	negf	___aomod@dividend^0,c
  7186  00145A  0E00               	movlw	0
  7187  00145C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7188  00145E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7189  001460  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7190  001462  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7191  001464  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7192  001466  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7193  001468  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7194  00146A                     l4170:
  7195  00146A  C005  F005         	movff	___aomod@dividend,?___aomod
  7196  00146E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  7197  001472  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  7198  001476  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  7199  00147A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  7200  00147E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  7201  001482  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  7202  001486  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  7203  00148A  0012               	return		;funcret
  7204  00148C                     __end_of___aomod:
  7205                           	opt callstack 0
  7206                           
  7207 ;; *************** function ___aodiv *****************
  7208 ;; Defined at:
  7209 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  dividend        8    4[COMRAM] long long 
  7212 ;;  divisor         8   12[COMRAM] long long 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  quotient        8   22[COMRAM] long long 
  7215 ;;  sign            1   21[COMRAM] unsigned char 
  7216 ;;  counter         1   20[COMRAM] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  8    4[COMRAM] long long 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7226 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;Total ram usage:       26 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    4
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_dtoa
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text47
  7241  0011A0                     __ptext47:
  7242                           	opt callstack 0
  7243  0011A0                     ___aodiv:
  7244                           	opt callstack 21
  7245  0011A0  0E00               	movlw	0
  7246  0011A2  6E16               	movwf	___aodiv@sign^0,c
  7247  0011A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  7248  0011A6  EFD9  F008         	goto	u3850
  7249  0011AA  EFD7  F008         	goto	u3851
  7250  0011AE                     u3851:
  7251  0011AE  EFEB  F008         	goto	l4102
  7252  0011B2                     u3850:
  7253  0011B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  7254  0011B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  7255  0011B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  7256  0011B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  7257  0011BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  7258  0011BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  7259  0011BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  7260  0011C0  6C0D               	negf	___aodiv@divisor^0,c
  7261  0011C2  0E00               	movlw	0
  7262  0011C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  7263  0011C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  7264  0011C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  7265  0011CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  7266  0011CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  7267  0011CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  7268  0011D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  7269  0011D2  0E01               	movlw	1
  7270  0011D4  6E16               	movwf	___aodiv@sign^0,c
  7271  0011D6                     l4102:
  7272  0011D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  7273  0011D8  EFF2  F008         	goto	u3860
  7274  0011DC  EFF0  F008         	goto	u3861
  7275  0011E0                     u3861:
  7276  0011E0  EF04  F009         	goto	l4108
  7277  0011E4                     u3860:
  7278  0011E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  7279  0011E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  7280  0011E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  7281  0011EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  7282  0011EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  7283  0011EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  7284  0011F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  7285  0011F2  6C05               	negf	___aodiv@dividend^0,c
  7286  0011F4  0E00               	movlw	0
  7287  0011F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  7288  0011F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  7289  0011FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  7290  0011FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  7291  0011FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  7292  001200  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  7293  001202  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  7294  001204  0E01               	movlw	1
  7295  001206  1A16               	xorwf	___aodiv@sign^0,f,c
  7296  001208                     l4108:
  7297  001208  EE20  F017         	lfsr	2,___aodiv@quotient
  7298  00120C  0E07               	movlw	7
  7299  00120E                     u3871:
  7300  00120E  6ADE               	clrf	postinc2,c
  7301  001210  06E8               	decf	wreg,f,c
  7302  001212  E2FD               	bc	u3871
  7303  001214  500D               	movf	___aodiv@divisor^0,w,c
  7304  001216  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  7305  001218  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  7306  00121A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  7307  00121C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  7308  00121E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  7309  001220  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  7310  001222  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  7311  001224  B4D8               	btfsc	status,2,c
  7312  001226  EF17  F009         	goto	u3881
  7313  00122A  EF19  F009         	goto	u3880
  7314  00122E                     u3881:
  7315  00122E  EF6B  F009         	goto	l4130
  7316  001232                     u3880:
  7317  001232  0E01               	movlw	1
  7318  001234  6E15               	movwf	___aodiv@counter^0,c
  7319  001236  EF27  F009         	goto	l4116
  7320  00123A                     l4114:
  7321  00123A  90D8               	bcf	status,0,c
  7322  00123C  360D               	rlcf	___aodiv@divisor^0,f,c
  7323  00123E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  7324  001240  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  7325  001242  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  7326  001244  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  7327  001246  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  7328  001248  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  7329  00124A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  7330  00124C  2A15               	incf	___aodiv@counter^0,f,c
  7331  00124E                     l4116:
  7332  00124E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  7333  001250  EF2C  F009         	goto	u3891
  7334  001254  EF2E  F009         	goto	u3890
  7335  001258                     u3891:
  7336  001258  EF1D  F009         	goto	l4114
  7337  00125C                     u3890:
  7338  00125C                     l4118:
  7339  00125C  90D8               	bcf	status,0,c
  7340  00125E  3617               	rlcf	___aodiv@quotient^0,f,c
  7341  001260  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  7342  001262  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  7343  001264  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  7344  001266  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  7345  001268  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  7346  00126A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  7347  00126C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  7348  00126E  500D               	movf	___aodiv@divisor^0,w,c
  7349  001270  5C05               	subwf	___aodiv@dividend^0,w,c
  7350  001272  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7351  001274  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  7352  001276  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7353  001278  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  7354  00127A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7355  00127C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  7356  00127E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7357  001280  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  7358  001282  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7359  001284  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  7360  001286  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7361  001288  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  7362  00128A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7363  00128C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  7364  00128E  A0D8               	btfss	status,0,c
  7365  001290  EF4C  F009         	goto	u3901
  7366  001294  EF4E  F009         	goto	u3900
  7367  001298                     u3901:
  7368  001298  EF5F  F009         	goto	l4126
  7369  00129C                     u3900:
  7370  00129C  500D               	movf	___aodiv@divisor^0,w,c
  7371  00129E  5E05               	subwf	___aodiv@dividend^0,f,c
  7372  0012A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7373  0012A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  7374  0012A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7375  0012A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  7376  0012A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7377  0012AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  7378  0012AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7379  0012AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  7380  0012B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7381  0012B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  7382  0012B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7383  0012B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  7384  0012B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7385  0012BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  7386  0012BC  8017               	bsf	___aodiv@quotient^0,0,c
  7387  0012BE                     l4126:
  7388  0012BE  90D8               	bcf	status,0,c
  7389  0012C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  7390  0012C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  7391  0012C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  7392  0012C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  7393  0012C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  7394  0012CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  7395  0012CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  7396  0012CE  320D               	rrcf	___aodiv@divisor^0,f,c
  7397  0012D0  2E15               	decfsz	___aodiv@counter^0,f,c
  7398  0012D2  EF2E  F009         	goto	l4118
  7399  0012D6                     l4130:
  7400  0012D6  5016               	movf	___aodiv@sign^0,w,c
  7401  0012D8  B4D8               	btfsc	status,2,c
  7402  0012DA  EF71  F009         	goto	u3911
  7403  0012DE  EF73  F009         	goto	u3910
  7404  0012E2                     u3911:
  7405  0012E2  EF83  F009         	goto	l4134
  7406  0012E6                     u3910:
  7407  0012E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  7408  0012E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  7409  0012EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  7410  0012EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  7411  0012EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  7412  0012F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  7413  0012F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  7414  0012F4  6C17               	negf	___aodiv@quotient^0,c
  7415  0012F6  0E00               	movlw	0
  7416  0012F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  7417  0012FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  7418  0012FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  7419  0012FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  7420  001300  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  7421  001302  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  7422  001304  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  7423  001306                     l4134:
  7424  001306  C017  F005         	movff	___aodiv@quotient,?___aodiv
  7425  00130A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  7426  00130E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  7427  001312  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  7428  001316  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  7429  00131A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  7430  00131E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  7431  001322  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  7432  001326  0012               	return		;funcret
  7433  001328                     __end_of___aodiv:
  7434                           	opt callstack 0
  7435                           
  7436 ;; *************** function _atoi *****************
  7437 ;; Defined at:
  7438 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7441 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  7442 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  7443 ;;		 -> STR_1(57), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  n               2   24[COMRAM] int 
  7446 ;;  neg             2   17[COMRAM] int 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  2   11[COMRAM] int 
  7449 ;; Registers used:
  7450 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;Total ram usage:       15 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:    5
  7463 ;; This function calls:
  7464 ;;		___wmul
  7465 ;;		_isdigit
  7466 ;;		_isspace
  7467 ;; This function is called by:
  7468 ;;		_vfpfcnvrt
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text48
  7473  001006                     __ptext48:
  7474                           	opt callstack 0
  7475  001006                     _atoi:
  7476                           	opt callstack 21
  7477  001006  0E00               	movlw	0
  7478  001008  6E1A               	movwf	(atoi@n+1)^0,c
  7479  00100A  0E00               	movlw	0
  7480  00100C  6E19               	movwf	atoi@n^0,c
  7481  00100E  0E00               	movlw	0
  7482  001010  6E13               	movwf	(atoi@neg+1)^0,c
  7483  001012  0E00               	movlw	0
  7484  001014  6E12               	movwf	atoi@neg^0,c
  7485  001016  EF0F  F008         	goto	l4434
  7486  00101A                     l4432:
  7487  00101A  4A0C               	infsnz	atoi@s^0,f,c
  7488  00101C  2A0D               	incf	(atoi@s+1)^0,f,c
  7489  00101E                     l4434:
  7490  00101E  0E01               	movlw	1
  7491  001020  6E18               	movwf	_atoi$1765^0,c
  7492  001022  C00C  FFF6         	movff	atoi@s,tblptrl
  7493  001026  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7494  00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7495  00102A  6AF8               	clrf	tblptru,c
  7496  00102C                     	endif
  7497  00102C                     	if	0	;tblptru may be non-zero
  7498  00102C                     	endif
  7499  00102C  0008               	tblrd		*
  7500  00102E  50F5               	movf	tablat,w,c
  7501  001030  0A20               	xorlw	32
  7502  001032  B4D8               	btfsc	status,2,c
  7503  001034  EF1E  F008         	goto	u4561
  7504  001038  EF20  F008         	goto	u4560
  7505  00103C                     u4561:
  7506  00103C  EF3E  F008         	goto	l4442
  7507  001040                     u4560:
  7508  001040  0EF7               	movlw	247
  7509  001042  6E0E               	movwf	??_atoi^0,c
  7510  001044  0EFF               	movlw	255
  7511  001046  6E0F               	movwf	(??_atoi+1)^0,c
  7512  001048  C00C  FFF6         	movff	atoi@s,tblptrl
  7513  00104C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7514  001050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7515  001050  6AF8               	clrf	tblptru,c
  7516  001052                     	endif
  7517  001052                     	if	0	;tblptru may be non-zero
  7518  001052                     	endif
  7519  001052  0008               	tblrd		*
  7520  001054  50F5               	movf	tablat,w,c
  7521  001056  6E10               	movwf	(??_atoi+2)^0,c
  7522  001058  6A11               	clrf	(??_atoi+3)^0,c
  7523  00105A  500E               	movf	??_atoi^0,w,c
  7524  00105C  2610               	addwf	(??_atoi+2)^0,f,c
  7525  00105E  500F               	movf	(??_atoi+1)^0,w,c
  7526  001060  2211               	addwfc	(??_atoi+3)^0,f,c
  7527  001062  5011               	movf	(??_atoi+3)^0,w,c
  7528  001064  E109               	bnz	u4570
  7529  001066  0E05               	movlw	5
  7530  001068  5C10               	subwf	(??_atoi+2)^0,w,c
  7531  00106A  A0D8               	btfss	status,0,c
  7532  00106C  EF3A  F008         	goto	u4571
  7533  001070  EF3C  F008         	goto	u4570
  7534  001074                     u4571:
  7535  001074  EF3E  F008         	goto	l4442
  7536  001078                     u4570:
  7537  001078  0E00               	movlw	0
  7538  00107A  6E18               	movwf	_atoi$1765^0,c
  7539  00107C                     l4442:
  7540  00107C  C018  F014         	movff	_atoi$1765,_atoi$1764
  7541  001080  6A15               	clrf	(_atoi$1764+1)^0,c
  7542  001082  5014               	movf	_atoi$1764^0,w,c
  7543  001084  1015               	iorwf	(_atoi$1764+1)^0,w,c
  7544  001086  A4D8               	btfss	status,2,c
  7545  001088  EF48  F008         	goto	u4581
  7546  00108C  EF4A  F008         	goto	u4580
  7547  001090                     u4581:
  7548  001090  EF0D  F008         	goto	l4432
  7549  001094                     u4580:
  7550  001094  EF54  F008         	goto	l4452
  7551  001098                     l4448:
  7552  001098  0E00               	movlw	0
  7553  00109A  6E13               	movwf	(atoi@neg+1)^0,c
  7554  00109C  0E01               	movlw	1
  7555  00109E  6E12               	movwf	atoi@neg^0,c
  7556  0010A0                     l4450:
  7557  0010A0  4A0C               	infsnz	atoi@s^0,f,c
  7558  0010A2  2A0D               	incf	(atoi@s+1)^0,f,c
  7559  0010A4  EF8B  F008         	goto	l4458
  7560  0010A8                     l4452:
  7561  0010A8  C00C  FFF6         	movff	atoi@s,tblptrl
  7562  0010AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7563  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7564  0010B0  6AF8               	clrf	tblptru,c
  7565  0010B2                     	endif
  7566  0010B2                     	if	0	;tblptru may be non-zero
  7567  0010B2                     	endif
  7568  0010B2  0008               	tblrd		*
  7569  0010B4  50F5               	movf	tablat,w,c
  7570  0010B6  6E0E               	movwf	??_atoi^0,c
  7571  0010B8  6A0F               	clrf	(??_atoi+1)^0,c
  7572                           
  7573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7574                           ; Switch size 1, requested type "simple"
  7575                           ; Number of cases is 1, Range of values is 0 to 0
  7576                           ; switch strategies available:
  7577                           ; Name         Instructions Cycles
  7578                           ; simple_byte            4     3 (average)
  7579                           ;	Chosen strategy is simple_byte
  7580  0010BA  500F               	movf	(??_atoi+1)^0,w,c
  7581  0010BC  0A00               	xorlw	0	; case 0
  7582  0010BE  B4D8               	btfsc	status,2,c
  7583  0010C0  EF64  F008         	goto	l4946
  7584  0010C4  EF8B  F008         	goto	l4458
  7585  0010C8                     l4946:
  7586                           
  7587                           ; Switch size 1, requested type "simple"
  7588                           ; Number of cases is 2, Range of values is 43 to 45
  7589                           ; switch strategies available:
  7590                           ; Name         Instructions Cycles
  7591                           ; simple_byte            7     4 (average)
  7592                           ;	Chosen strategy is simple_byte
  7593  0010C8  500E               	movf	??_atoi^0,w,c
  7594  0010CA  0A2B               	xorlw	43	; case 43
  7595  0010CC  B4D8               	btfsc	status,2,c
  7596  0010CE  EF50  F008         	goto	l4450
  7597  0010D2  0A06               	xorlw	6	; case 45
  7598  0010D4  B4D8               	btfsc	status,2,c
  7599  0010D6  EF4C  F008         	goto	l4448
  7600  0010DA  EF8B  F008         	goto	l4458
  7601  0010DE                     l4454:
  7602  0010DE  C019  F005         	movff	atoi@n,___wmul@multiplier
  7603  0010E2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7604  0010E6  0E00               	movlw	0
  7605  0010E8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7606  0010EA  0E0A               	movlw	10
  7607  0010EC  6E07               	movwf	___wmul@multiplicand^0,c
  7608  0010EE  EC6F  F011         	call	___wmul	;wreg free
  7609  0010F2  C00C  FFF6         	movff	atoi@s,tblptrl
  7610  0010F6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7611  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7612  0010FA  6AF8               	clrf	tblptru,c
  7613  0010FC                     	endif
  7614  0010FC                     	if	0	;tblptru may be non-zero
  7615  0010FC                     	endif
  7616  0010FC  0008               	tblrd		*
  7617  0010FE  50F5               	movf	tablat,w,c
  7618  001100  5E05               	subwf	?___wmul^0,f,c
  7619  001102  0E00               	movlw	0
  7620  001104  5A06               	subwfb	(?___wmul+1)^0,f,c
  7621  001106  0E30               	movlw	48
  7622  001108  2405               	addwf	?___wmul^0,w,c
  7623  00110A  6E19               	movwf	atoi@n^0,c
  7624  00110C  0E00               	movlw	0
  7625  00110E  2006               	addwfc	(?___wmul+1)^0,w,c
  7626  001110  6E1A               	movwf	(atoi@n+1)^0,c
  7627  001112  EF50  F008         	goto	l4450
  7628  001116                     l4458:
  7629  001116  0ED0               	movlw	208
  7630  001118  6E0E               	movwf	??_atoi^0,c
  7631  00111A  0EFF               	movlw	255
  7632  00111C  6E0F               	movwf	(??_atoi+1)^0,c
  7633  00111E  C00C  FFF6         	movff	atoi@s,tblptrl
  7634  001122  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7635  001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7636  001126  6AF8               	clrf	tblptru,c
  7637  001128                     	endif
  7638  001128                     	if	0	;tblptru may be non-zero
  7639  001128                     	endif
  7640  001128  0008               	tblrd		*
  7641  00112A  50F5               	movf	tablat,w,c
  7642  00112C  6E10               	movwf	(??_atoi+2)^0,c
  7643  00112E  6A11               	clrf	(??_atoi+3)^0,c
  7644  001130  500E               	movf	??_atoi^0,w,c
  7645  001132  2610               	addwf	(??_atoi+2)^0,f,c
  7646  001134  500F               	movf	(??_atoi+1)^0,w,c
  7647  001136  2211               	addwfc	(??_atoi+3)^0,f,c
  7648  001138  5011               	movf	(??_atoi+3)^0,w,c
  7649  00113A  E10A               	bnz	u4590
  7650  00113C  0E0A               	movlw	10
  7651  00113E  5C10               	subwf	(??_atoi+2)^0,w,c
  7652  001140  A0D8               	btfss	status,0,c
  7653  001142  EFA5  F008         	goto	u4591
  7654  001146  EFA8  F008         	goto	u4590
  7655  00114A                     u4591:
  7656  00114A  0E01               	movlw	1
  7657  00114C  EFA9  F008         	goto	u4600
  7658  001150                     u4590:
  7659  001150  0E00               	movlw	0
  7660  001152                     u4600:
  7661  001152  6E16               	movwf	_atoi$1766^0,c
  7662  001154  6A17               	clrf	(_atoi$1766+1)^0,c
  7663  001156  5016               	movf	_atoi$1766^0,w,c
  7664  001158  1017               	iorwf	(_atoi$1766+1)^0,w,c
  7665  00115A  A4D8               	btfss	status,2,c
  7666  00115C  EFB2  F008         	goto	u4611
  7667  001160  EFB4  F008         	goto	u4610
  7668  001164                     u4611:
  7669  001164  EF6F  F008         	goto	l4454
  7670  001168                     u4610:
  7671  001168  5012               	movf	atoi@neg^0,w,c
  7672  00116A  1013               	iorwf	(atoi@neg+1)^0,w,c
  7673  00116C  A4D8               	btfss	status,2,c
  7674  00116E  EFBB  F008         	goto	u4621
  7675  001172  EFBD  F008         	goto	u4620
  7676  001176                     u4621:
  7677  001176  EFCB  F008         	goto	l1531
  7678  00117A                     u4620:
  7679  00117A  C019  F00E         	movff	atoi@n,??_atoi
  7680  00117E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7681  001182  1E0E               	comf	??_atoi^0,f,c
  7682  001184  1E0F               	comf	(??_atoi+1)^0,f,c
  7683  001186  4A0E               	infsnz	??_atoi^0,f,c
  7684  001188  2A0F               	incf	(??_atoi+1)^0,f,c
  7685  00118A  C00E  F00C         	movff	??_atoi,?_atoi
  7686  00118E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7687  001192  EFCF  F008         	goto	l1534
  7688  001196                     l1531:
  7689  001196  C019  F00C         	movff	atoi@n,?_atoi
  7690  00119A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7691  00119E                     l1534:
  7692  00119E  0012               	return		;funcret
  7693  0011A0                     __end_of_atoi:
  7694                           	opt callstack 0
  7695                           
  7696 ;; *************** function _isspace *****************
  7697 ;; Defined at:
  7698 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  c               2    4[COMRAM] int 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  2    4[COMRAM] int 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7715 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7716 ;;Total ram usage:        7 bytes
  7717 ;; Hardware stack levels used:    1
  7718 ;; Hardware stack levels required when called:    4
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_atoi
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text49
  7727  001EFC                     __ptext49:
  7728                           	opt callstack 0
  7729  001EFC                     _isspace:
  7730                           	opt callstack 21
  7731  001EFC  0E01               	movlw	1
  7732  001EFE  6E0B               	movwf	_isspace$1791^0,c
  7733  001F00  0E20               	movlw	32
  7734  001F02  1805               	xorwf	isspace@c^0,w,c
  7735  001F04  1006               	iorwf	(isspace@c+1)^0,w,c
  7736  001F06  B4D8               	btfsc	status,2,c
  7737  001F08  EF88  F00F         	goto	u4051
  7738  001F0C  EF8A  F00F         	goto	u4050
  7739  001F10                     u4051:
  7740  001F10  EFA3  F00F         	goto	l4220
  7741  001F14                     u4050:
  7742  001F14  0EF7               	movlw	247
  7743  001F16  6E07               	movwf	??_isspace^0,c
  7744  001F18  0EFF               	movlw	255
  7745  001F1A  6E08               	movwf	(??_isspace+1)^0,c
  7746  001F1C  C005  F009         	movff	isspace@c,??_isspace+2
  7747  001F20  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7748  001F24  5007               	movf	??_isspace^0,w,c
  7749  001F26  2609               	addwf	(??_isspace+2)^0,f,c
  7750  001F28  5008               	movf	(??_isspace+1)^0,w,c
  7751  001F2A  220A               	addwfc	(??_isspace+3)^0,f,c
  7752  001F2C  500A               	movf	(??_isspace+3)^0,w,c
  7753  001F2E  E109               	bnz	u4060
  7754  001F30  0E05               	movlw	5
  7755  001F32  5C09               	subwf	(??_isspace+2)^0,w,c
  7756  001F34  A0D8               	btfss	status,0,c
  7757  001F36  EF9F  F00F         	goto	u4061
  7758  001F3A  EFA1  F00F         	goto	u4060
  7759  001F3E                     u4061:
  7760  001F3E  EFA3  F00F         	goto	l4220
  7761  001F42                     u4060:
  7762  001F42  0E00               	movlw	0
  7763  001F44  6E0B               	movwf	_isspace$1791^0,c
  7764  001F46                     l4220:
  7765  001F46  C00B  F005         	movff	_isspace$1791,?_isspace
  7766  001F4A  6A06               	clrf	(?_isspace+1)^0,c
  7767  001F4C  0012               	return		;funcret
  7768  001F4E                     __end_of_isspace:
  7769                           	opt callstack 0
  7770                           
  7771 ;; *************** function _isdigit *****************
  7772 ;; Defined at:
  7773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  c               2    4[COMRAM] int 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  2    4[COMRAM] int 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7790 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;Total ram usage:        6 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    4
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_vfpfcnvrt
  7798 ;;		_atoi
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text50
  7803  002226                     __ptext50:
  7804                           	opt callstack 0
  7805  002226                     _isdigit:
  7806                           	opt callstack 22
  7807  002226  0ED0               	movlw	208
  7808  002228  6E07               	movwf	??_isdigit^0,c
  7809  00222A  0EFF               	movlw	255
  7810  00222C  6E08               	movwf	(??_isdigit+1)^0,c
  7811  00222E  C005  F009         	movff	isdigit@c,??_isdigit+2
  7812  002232  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7813  002236  5007               	movf	??_isdigit^0,w,c
  7814  002238  2609               	addwf	(??_isdigit+2)^0,f,c
  7815  00223A  5008               	movf	(??_isdigit+1)^0,w,c
  7816  00223C  220A               	addwfc	(??_isdigit+3)^0,f,c
  7817  00223E  500A               	movf	(??_isdigit+3)^0,w,c
  7818  002240  E10A               	bnz	u3830
  7819  002242  0E0A               	movlw	10
  7820  002244  5C09               	subwf	(??_isdigit+2)^0,w,c
  7821  002246  A0D8               	btfss	status,0,c
  7822  002248  EF28  F011         	goto	u3831
  7823  00224C  EF2B  F011         	goto	u3830
  7824  002250                     u3831:
  7825  002250  0E01               	movlw	1
  7826  002252  EF2C  F011         	goto	u3840
  7827  002256                     u3830:
  7828  002256  0E00               	movlw	0
  7829  002258                     u3840:
  7830  002258  6E05               	movwf	?_isdigit^0,c
  7831  00225A  6A06               	clrf	(?_isdigit+1)^0,c
  7832  00225C  0012               	return		;funcret
  7833  00225E                     __end_of_isdigit:
  7834                           	opt callstack 0
  7835                           
  7836 ;; *************** function ___wmul *****************
  7837 ;; Defined at:
  7838 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  multiplier      2    4[COMRAM] unsigned int 
  7841 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  product         2    8[COMRAM] unsigned int 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  2    4[COMRAM] unsigned int 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, prodl, prodh
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7857 ;;Total ram usage:        6 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    4
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		_atoi
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text51
  7868  0022DE                     __ptext51:
  7869                           	opt callstack 0
  7870  0022DE                     ___wmul:
  7871                           	opt callstack 21
  7872  0022DE  5005               	movf	___wmul@multiplier^0,w,c
  7873  0022E0  0207               	mulwf	___wmul@multiplicand^0,c
  7874  0022E2  CFF3 F009          	movff	prodl,___wmul@product
  7875  0022E6  CFF4 F00A          	movff	prodh,___wmul@product+1
  7876  0022EA  5005               	movf	___wmul@multiplier^0,w,c
  7877  0022EC  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7878  0022EE  50F3               	movf	243,w,c
  7879  0022F0  260A               	addwf	(___wmul@product+1)^0,f,c
  7880  0022F2  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7881  0022F4  0207               	mulwf	___wmul@multiplicand^0,c
  7882  0022F6  50F3               	movf	243,w,c
  7883  0022F8  260A               	addwf	(___wmul@product+1)^0,f,c
  7884  0022FA  C009  F005         	movff	___wmul@product,?___wmul
  7885  0022FE  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7886  002302  0012               	return		;funcret
  7887  002304                     __end_of___wmul:
  7888                           	opt callstack 0
  7889                           
  7890 ;; *************** function _ClearModbusData *****************
  7891 ;; Defined at:
  7892 ;;		line 28 in file "Modbus.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  i               2    4[COMRAM] int 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;Total ram usage:        2 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    4
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text52
  7921  0020B8                     __ptext52:
  7922                           	opt callstack 0
  7923  0020B8                     _ClearModbusData:
  7924                           	opt callstack 26
  7925  0020B8                     
  7926                           ;Modbus.c: 29:     int i = 0;
  7927  0020B8  0E00               	movlw	0
  7928  0020BA  6E06               	movwf	(ClearModbusData@i+1)^0,c
  7929  0020BC  0E00               	movlw	0
  7930  0020BE  6E05               	movwf	ClearModbusData@i^0,c
  7931                           
  7932                           ;Modbus.c: 30:     for(i=0; i<99; i++ ){
  7933  0020C0  0E00               	movlw	0
  7934  0020C2  6E06               	movwf	(ClearModbusData@i+1)^0,c
  7935  0020C4  0E00               	movlw	0
  7936  0020C6  6E05               	movwf	ClearModbusData@i^0,c
  7937  0020C8                     l4840:
  7938                           
  7939                           ;Modbus.c: 31:         ModbusData[i] = 0xFF;
  7940  0020C8  0E00               	movlw	low _ModbusData
  7941  0020CA  2405               	addwf	ClearModbusData@i^0,w,c
  7942  0020CC  6ED9               	movwf	fsr2l,c
  7943  0020CE  0E01               	movlw	high _ModbusData
  7944  0020D0  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
  7945  0020D2  6EDA               	movwf	fsr2h,c
  7946  0020D4  0EFF               	movlw	255
  7947  0020D6  6EDF               	movwf	indf2,c
  7948  0020D8                     
  7949                           ;Modbus.c: 32:     }
  7950  0020D8  4A05               	infsnz	ClearModbusData@i^0,f,c
  7951  0020DA  2A06               	incf	(ClearModbusData@i+1)^0,f,c
  7952  0020DC  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
  7953  0020DE  EF7A  F010         	goto	u4951
  7954  0020E2  5006               	movf	(ClearModbusData@i+1)^0,w,c
  7955  0020E4  E109               	bnz	u4950
  7956  0020E6  0E63               	movlw	99
  7957  0020E8  5C05               	subwf	ClearModbusData@i^0,w,c
  7958  0020EA  A0D8               	btfss	status,0,c
  7959  0020EC  EF7A  F010         	goto	u4951
  7960  0020F0  EF7C  F010         	goto	u4950
  7961  0020F4                     u4951:
  7962  0020F4  EF64  F010         	goto	l4840
  7963  0020F8                     u4950:
  7964  0020F8  0012               	return		;funcret
  7965  0020FA                     __end_of_ClearModbusData:
  7966                           	opt callstack 0
  7967                           
  7968 ;; *************** function _INTERRUPT_InterruptManager *****************
  7969 ;; Defined at:
  7970 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;		None
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      void 
  7977 ;; Registers used:
  7978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;Total ram usage:        4 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    3
  7991 ;; This function calls:
  7992 ;;		Absolute function
  7993 ;;		_EUSART1_Receive_ISR
  7994 ;;		_EUSART1_Transmit_ISR
  7995 ;;		_EUSART2_Receive_ISR
  7996 ;;		_EUSART2_Transmit_ISR
  7997 ;; This function is called by:
  7998 ;;		Interrupt level 2
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	intcode
  8003  000008                     __pintcode:
  8004                           	opt callstack 0
  8005  000008                     _INTERRUPT_InterruptManager:
  8006                           	opt callstack 17
  8007                           
  8008                           ;incstack = 0
  8009  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8010  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  8011  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8012  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8013  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8014  00001A                     
  8015                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  8016  00001A  ACF2               	btfss	242,6,c	;volatile
  8017  00001C  EF12  F000         	goto	i2u344_41
  8018  000020  EF14  F000         	goto	i2u344_40
  8019  000024                     i2u344_41:
  8020  000024  EF89  F000         	goto	i2l159
  8021  000028                     i2u344_40:
  8022  000028                     
  8023                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  8024  000028  010E               	movlb	14	; () banked
  8025  00002A  ADC5               	btfss	197,6,b	;volatile
  8026  00002C  EF1A  F000         	goto	i2u345_41
  8027  000030  EF1C  F000         	goto	i2u345_40
  8028  000034                     i2u345_41:
  8029  000034  EF32  F000         	goto	i2l150
  8030  000038                     i2u345_40:
  8031  000038                     
  8032                           ; BSR set to: 14
  8033  000038  ADCD               	btfss	205,6,b	;volatile
  8034  00003A  EF21  F000         	goto	i2u346_41
  8035  00003E  EF23  F000         	goto	i2u346_40
  8036  000042                     i2u346_41:
  8037  000042  EF32  F000         	goto	i2l150
  8038  000046                     i2u346_40:
  8039  000046                     
  8040                           ; BSR set to: 14
  8041                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  8042  000046  D802               	call	i2u347_48
  8043  000048  EF30  F000         	goto	i2u347_49
  8044  00004C                     i2u347_48:
  8045  00004C  0005               	push	
  8046  00004E  6EFA               	movwf	pclath,c
  8047  000050  0100               	movlb	0	; () banked
  8048  000052  51DC               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  8049  000054  6EFD               	movwf	tosl,c
  8050  000056  51DD               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  8051  000058  6EFE               	movwf	tosh,c
  8052  00005A  6AFF               	clrf	tosu,c
  8053  00005C  50FA               	movf	pclath,w,c
  8054  00005E  0012               	return		;indir
  8055  000060                     i2u347_49:
  8056                           
  8057                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  8058  000060  EF89  F000         	goto	i2l159
  8059  000064                     i2l150:
  8060                           
  8061                           ; BSR set to: 14
  8062  000064  AFC5               	btfss	197,7,b	;volatile
  8063  000066  EF37  F000         	goto	i2u348_41
  8064  00006A  EF39  F000         	goto	i2u348_40
  8065  00006E                     i2u348_41:
  8066  00006E  EF4F  F000         	goto	i2l152
  8067  000072                     i2u348_40:
  8068  000072                     
  8069                           ; BSR set to: 14
  8070  000072  AFCD               	btfss	205,7,b	;volatile
  8071  000074  EF3E  F000         	goto	i2u349_41
  8072  000078  EF40  F000         	goto	i2u349_40
  8073  00007C                     i2u349_41:
  8074  00007C  EF4F  F000         	goto	i2l152
  8075  000080                     i2u349_40:
  8076  000080                     
  8077                           ; BSR set to: 14
  8078                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  8079  000080  D802               	call	i2u350_48
  8080  000082  EF4D  F000         	goto	i2u350_49
  8081  000086                     i2u350_48:
  8082  000086  0005               	push	
  8083  000088  6EFA               	movwf	pclath,c
  8084  00008A  0100               	movlb	0	; () banked
  8085  00008C  51DA               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  8086  00008E  6EFD               	movwf	tosl,c
  8087  000090  51DB               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  8088  000092  6EFE               	movwf	tosh,c
  8089  000094  6AFF               	clrf	tosu,c
  8090  000096  50FA               	movf	pclath,w,c
  8091  000098  0012               	return		;indir
  8092  00009A                     i2u350_49:
  8093                           
  8094                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  8095  00009A  EF89  F000         	goto	i2l159
  8096  00009E                     i2l152:
  8097                           
  8098                           ; BSR set to: 14
  8099  00009E  A9C5               	btfss	197,4,b	;volatile
  8100  0000A0  EF54  F000         	goto	i2u351_41
  8101  0000A4  EF56  F000         	goto	i2u351_40
  8102  0000A8                     i2u351_41:
  8103  0000A8  EF6C  F000         	goto	i2l154
  8104  0000AC                     i2u351_40:
  8105  0000AC                     
  8106                           ; BSR set to: 14
  8107  0000AC  A9CD               	btfss	205,4,b	;volatile
  8108  0000AE  EF5B  F000         	goto	i2u352_41
  8109  0000B2  EF5D  F000         	goto	i2u352_40
  8110  0000B6                     i2u352_41:
  8111  0000B6  EF6C  F000         	goto	i2l154
  8112  0000BA                     i2u352_40:
  8113  0000BA                     
  8114                           ; BSR set to: 14
  8115                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  8116  0000BA  D802               	call	i2u353_48
  8117  0000BC  EF6A  F000         	goto	i2u353_49
  8118  0000C0                     i2u353_48:
  8119  0000C0  0005               	push	
  8120  0000C2  6EFA               	movwf	pclath,c
  8121  0000C4  0100               	movlb	0	; () banked
  8122  0000C6  51D8               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  8123  0000C8  6EFD               	movwf	tosl,c
  8124  0000CA  51D9               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  8125  0000CC  6EFE               	movwf	tosh,c
  8126  0000CE  6AFF               	clrf	tosu,c
  8127  0000D0  50FA               	movf	pclath,w,c
  8128  0000D2  0012               	return		;indir
  8129  0000D4                     i2u353_49:
  8130                           
  8131                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  8132  0000D4  EF89  F000         	goto	i2l159
  8133  0000D8                     i2l154:
  8134                           
  8135                           ; BSR set to: 14
  8136  0000D8  ABC5               	btfss	197,5,b	;volatile
  8137  0000DA  EF71  F000         	goto	i2u354_41
  8138  0000DE  EF73  F000         	goto	i2u354_40
  8139  0000E2                     i2u354_41:
  8140  0000E2  EF89  F000         	goto	i2l153
  8141  0000E6                     i2u354_40:
  8142  0000E6                     
  8143                           ; BSR set to: 14
  8144  0000E6  ABCD               	btfss	205,5,b	;volatile
  8145  0000E8  EF78  F000         	goto	i2u355_41
  8146  0000EC  EF7A  F000         	goto	i2u355_40
  8147  0000F0                     i2u355_41:
  8148  0000F0  EF89  F000         	goto	i2l153
  8149  0000F4                     i2u355_40:
  8150  0000F4                     
  8151                           ; BSR set to: 14
  8152                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  8153  0000F4  D802               	call	i2u356_48
  8154  0000F6  EF87  F000         	goto	i2u356_49
  8155  0000FA                     i2u356_48:
  8156  0000FA  0005               	push	
  8157  0000FC  6EFA               	movwf	pclath,c
  8158  0000FE  0100               	movlb	0	; () banked
  8159  000100  51D6               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  8160  000102  6EFD               	movwf	tosl,c
  8161  000104  51D7               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  8162  000106  6EFE               	movwf	tosh,c
  8163  000108  6AFF               	clrf	tosu,c
  8164  00010A  50FA               	movf	pclath,w,c
  8165  00010C  0012               	return		;indir
  8166  00010E                     i2u356_49:
  8167                           
  8168                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  8169  00010E  EF89  F000         	goto	i2l159
  8170  000112                     i2l153:
  8171  000112                     i2l159:
  8172  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8173  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8174  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8175  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8176  000122  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8177  000124  0011               	retfie		f
  8178  000126                     __end_of_INTERRUPT_InterruptManager:
  8179                           	opt callstack 0
  8180                           
  8181 ;; *************** function _EUSART2_Transmit_ISR *****************
  8182 ;; Defined at:
  8183 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;		None
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;		None
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8201 ;;Total ram usage:        0 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_EUSART2_Initialize
  8207 ;;		_INTERRUPT_InterruptManager
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text54
  8212  001FE8                     __ptext54:
  8213                           	opt callstack 0
  8214  001FE8                     _EUSART2_Transmit_ISR:
  8215                           	opt callstack 19
  8216  001FE8                     
  8217                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  8218  001FE8  0E08               	movlw	8
  8219  001FEA  0100               	movlb	0	; () banked
  8220  001FEC  61DF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8221  001FEE  EFFB  F00F         	goto	i2u316_41
  8222  001FF2  EFFD  F00F         	goto	i2u316_40
  8223  001FF6                     i2u316_41:
  8224  001FF6  EF15  F010         	goto	i2l333
  8225  001FFA                     i2u316_40:
  8226  001FFA                     
  8227                           ; BSR set to: 0
  8228                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  8229  001FFA  0E80               	movlw	low _eusart2TxBuffer
  8230  001FFC  259D               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  8231  001FFE  6ED9               	movwf	fsr2l,c
  8232  002000  6ADA               	clrf	fsr2h,c
  8233  002002  0E00               	movlw	high _eusart2TxBuffer
  8234  002004  22DA               	addwfc	fsr2h,f,c
  8235  002006  50DF               	movf	indf2,w,c
  8236  002008  010E               	movlb	14	; () banked
  8237  00200A  6F9A               	movwf	154,b	;volatile
  8238  00200C                     
  8239                           ; BSR set to: 14
  8240  00200C  0100               	movlb	0	; () banked
  8241  00200E  2B9D               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  8242  002010                     
  8243                           ; BSR set to: 0
  8244                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  8245  002010  0E07               	movlw	7
  8246  002012  659D               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  8247  002014  EF0E  F010         	goto	i2u317_41
  8248  002018  EF10  F010         	goto	i2u317_40
  8249  00201C                     i2u317_41:
  8250  00201C  EF12  F010         	goto	i2l3716
  8251  002020                     i2u317_40:
  8252  002020                     
  8253                           ; BSR set to: 0
  8254                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  8255  002020  0E00               	movlw	0
  8256  002022  6F9D               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8257  002024                     i2l3716:
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  8261  002024  2BDF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  8262                           
  8263                           ;mcc_generated_files/eusart2.c: 218:     }
  8264  002026  EF17  F010         	goto	i2l336
  8265  00202A                     i2l333:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  8269  00202A  010E               	movlb	14	; () banked
  8270  00202C  9DC5               	bcf	197,6,b	;volatile
  8271  00202E                     i2l336:
  8272  00202E  0012               	return		;funcret
  8273  002030                     __end_of_EUSART2_Transmit_ISR:
  8274                           	opt callstack 0
  8275                           
  8276 ;; *************** function _EUSART2_Receive_ISR *****************
  8277 ;; Defined at:
  8278 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;Total ram usage:        0 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:    2
  8299 ;; This function calls:
  8300 ;;		Absolute function
  8301 ;;		_EUSART2_DefaultErrorHandler
  8302 ;;		_EUSART2_DefaultFramingErrorHandler
  8303 ;;		_EUSART2_DefaultOverrunErrorHandler
  8304 ;;		_EUSART2_RxDataHandler
  8305 ;; This function is called by:
  8306 ;;		_EUSART2_Initialize
  8307 ;;		_INTERRUPT_InterruptManager
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text55
  8312  001800                     __ptext55:
  8313                           	opt callstack 0
  8314  001800                     _EUSART2_Receive_ISR:
  8315                           	opt callstack 17
  8316  001800                     
  8317                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  8318  001800  0E70               	movlw	low _eusart2RxStatusBuffer
  8319  001802  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8320  001804  6ED9               	movwf	fsr2l,c
  8321  001806  6ADA               	clrf	fsr2h,c
  8322  001808  0E00               	movlw	high _eusart2RxStatusBuffer
  8323  00180A  22DA               	addwfc	fsr2h,f,c
  8324  00180C  0E00               	movlw	0
  8325  00180E  6EDF               	movwf	indf2,c
  8326  001810                     
  8327                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  8328  001810  010E               	movlb	14	; () banked
  8329  001812  A59D               	btfss	157,2,b	;volatile
  8330  001814  EF0E  F00C         	goto	i2u318_41
  8331  001818  EF10  F00C         	goto	i2u318_40
  8332  00181C                     i2u318_41:
  8333  00181C  EF24  F00C         	goto	i2l3726
  8334  001820                     i2u318_40:
  8335  001820                     
  8336                           ; BSR set to: 14
  8337                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  8338  001820  0E70               	movlw	low _eusart2RxStatusBuffer
  8339  001822  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8340  001824  6ED9               	movwf	fsr2l,c
  8341  001826  6ADA               	clrf	fsr2h,c
  8342  001828  0E00               	movlw	high _eusart2RxStatusBuffer
  8343  00182A  22DA               	addwfc	fsr2h,f,c
  8344  00182C  0100               	movlb	0	; () banked
  8345  00182E  82DF               	bsf	indf2,1,c
  8346  001830                     
  8347                           ; BSR set to: 0
  8348                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  8349  001830  D802               	call	i2u319_48
  8350  001832  EF24  F00C         	goto	i2u319_49
  8351  001836                     i2u319_48:
  8352  001836  0005               	push	
  8353  001838  6EFA               	movwf	pclath,c
  8354  00183A  51D4               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  8355  00183C  6EFD               	movwf	tosl,c
  8356  00183E  51D5               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  8357  001840  6EFE               	movwf	tosh,c
  8358  001842  6AFF               	clrf	tosu,c
  8359  001844  50FA               	movf	pclath,w,c
  8360  001846  0012               	return		;indir
  8361  001848                     i2u319_49:
  8362  001848                     i2l3726:
  8363                           
  8364                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  8365  001848  010E               	movlb	14	; () banked
  8366  00184A  A39D               	btfss	157,1,b	;volatile
  8367  00184C  EF2A  F00C         	goto	i2u320_41
  8368  001850  EF2C  F00C         	goto	i2u320_40
  8369  001854                     i2u320_41:
  8370  001854  EF40  F00C         	goto	i2l3732
  8371  001858                     i2u320_40:
  8372  001858                     
  8373                           ; BSR set to: 14
  8374                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  8375  001858  0E70               	movlw	low _eusart2RxStatusBuffer
  8376  00185A  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8377  00185C  6ED9               	movwf	fsr2l,c
  8378  00185E  6ADA               	clrf	fsr2h,c
  8379  001860  0E00               	movlw	high _eusart2RxStatusBuffer
  8380  001862  22DA               	addwfc	fsr2h,f,c
  8381  001864  0100               	movlb	0	; () banked
  8382  001866  84DF               	bsf	indf2,2,c
  8383  001868                     
  8384                           ; BSR set to: 0
  8385                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  8386  001868  D802               	call	i2u321_48
  8387  00186A  EF40  F00C         	goto	i2u321_49
  8388  00186E                     i2u321_48:
  8389  00186E  0005               	push	
  8390  001870  6EFA               	movwf	pclath,c
  8391  001872  51D2               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  8392  001874  6EFD               	movwf	tosl,c
  8393  001876  51D3               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  8394  001878  6EFE               	movwf	tosh,c
  8395  00187A  6AFF               	clrf	tosu,c
  8396  00187C  50FA               	movf	pclath,w,c
  8397  00187E  0012               	return		;indir
  8398  001880                     i2u321_49:
  8399  001880                     i2l3732:
  8400                           
  8401                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  8402  001880  0E70               	movlw	low _eusart2RxStatusBuffer
  8403  001882  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8404  001884  6ED9               	movwf	fsr2l,c
  8405  001886  6ADA               	clrf	fsr2h,c
  8406  001888  0E00               	movlw	high _eusart2RxStatusBuffer
  8407  00188A  22DA               	addwfc	fsr2h,f,c
  8408  00188C  50DF               	movf	indf2,w,c
  8409  00188E  B4D8               	btfsc	status,2,c
  8410  001890  EF4C  F00C         	goto	i2u322_41
  8411  001894  EF4E  F00C         	goto	i2u322_40
  8412  001898                     i2u322_41:
  8413  001898  EF5D  F00C         	goto	i2l3736
  8414  00189C                     i2u322_40:
  8415  00189C                     
  8416                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  8417  00189C  D802               	call	i2u323_48
  8418  00189E  EF5B  F00C         	goto	i2u323_49
  8419  0018A2                     i2u323_48:
  8420  0018A2  0005               	push	
  8421  0018A4  6EFA               	movwf	pclath,c
  8422  0018A6  0100               	movlb	0	; () banked
  8423  0018A8  51D0               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  8424  0018AA  6EFD               	movwf	tosl,c
  8425  0018AC  51D1               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  8426  0018AE  6EFE               	movwf	tosh,c
  8427  0018B0  6AFF               	clrf	tosu,c
  8428  0018B2  50FA               	movf	pclath,w,c
  8429  0018B4  0012               	return		;indir
  8430  0018B6                     i2u323_49:
  8431                           
  8432                           ;mcc_generated_files/eusart2.c: 242:     } else {
  8433  0018B6  EF5F  F00C         	goto	i2l343
  8434  0018BA                     i2l3736:
  8435                           
  8436                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  8437  0018BA  EC2F  F011         	call	_EUSART2_RxDataHandler	;wreg free
  8438  0018BE                     i2l343:
  8439  0018BE  0012               	return		;funcret
  8440  0018C0                     __end_of_EUSART2_Receive_ISR:
  8441                           	opt callstack 0
  8442                           
  8443 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  8444 ;; Defined at:
  8445 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		None
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_EUSART2_Initialize
  8469 ;;		_EUSART2_Receive_ISR
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text56
  8474  0023EC                     __ptext56:
  8475                           	opt callstack 0
  8476  0023EC                     _EUSART2_DefaultOverrunErrorHandler:
  8477                           	opt callstack 18
  8478  0023EC                     
  8479                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  8480  0023EC  010E               	movlb	14	; () banked
  8481  0023EE  999D               	bcf	157,4,b	;volatile
  8482                           
  8483                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  8484  0023F0  899D               	bsf	157,4,b	;volatile
  8485  0023F2                     
  8486                           ; BSR set to: 14
  8487  0023F2  0012               	return		;funcret
  8488  0023F4                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  8489                           	opt callstack 0
  8490                           
  8491 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  8492 ;; Defined at:
  8493 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		None
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;Total ram usage:        0 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_EUSART2_Initialize
  8517 ;;		_EUSART2_Receive_ISR
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text57
  8522  002410                     __ptext57:
  8523                           	opt callstack 0
  8524  002410                     _EUSART2_DefaultFramingErrorHandler:
  8525                           	opt callstack 18
  8526  002410  0012               	return		;funcret
  8527  002412                     __end_of_EUSART2_DefaultFramingErrorHandler:
  8528                           	opt callstack 0
  8529                           
  8530 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  8531 ;; Defined at:
  8532 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;Total ram usage:        0 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    1
  8553 ;; This function calls:
  8554 ;;		_EUSART2_RxDataHandler
  8555 ;; This function is called by:
  8556 ;;		_EUSART2_Initialize
  8557 ;;		_EUSART2_Receive_ISR
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text58
  8562  0023FA                     __ptext58:
  8563                           	opt callstack 0
  8564  0023FA                     _EUSART2_DefaultErrorHandler:
  8565                           	opt callstack 17
  8566  0023FA                     
  8567                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  8568  0023FA  EC2F  F011         	call	_EUSART2_RxDataHandler	;wreg free
  8569  0023FE  0012               	return		;funcret
  8570  002400                     __end_of_EUSART2_DefaultErrorHandler:
  8571                           	opt callstack 0
  8572                           
  8573 ;; *************** function _EUSART2_RxDataHandler *****************
  8574 ;; Defined at:
  8575 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;Total ram usage:        0 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_EUSART2_Receive_ISR
  8599 ;;		_EUSART2_DefaultErrorHandler
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text59
  8604  00225E                     __ptext59:
  8605                           	opt callstack 0
  8606  00225E                     _EUSART2_RxDataHandler:
  8607                           	opt callstack 18
  8608  00225E                     
  8609                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  8610  00225E  0E78               	movlw	low _eusart2RxBuffer
  8611  002260  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8612  002262  6ED9               	movwf	fsr2l,c
  8613  002264  6ADA               	clrf	fsr2h,c
  8614  002266  0E00               	movlw	high _eusart2RxBuffer
  8615  002268  22DA               	addwfc	fsr2h,f,c
  8616  00226A  CE99 FFDF          	movff	3737,indf2	;volatile
  8617  00226E  2A59               	incf	_eusart2RxHead^0,f,c	;volatile
  8618  002270                     
  8619                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  8620  002270  0E07               	movlw	7
  8621  002272  6459               	cpfsgt	_eusart2RxHead^0,c	;volatile
  8622  002274  EF3E  F011         	goto	i2u303_41
  8623  002278  EF40  F011         	goto	i2u303_40
  8624  00227C                     i2u303_41:
  8625  00227C  EF42  F011         	goto	i2l3498
  8626  002280                     i2u303_40:
  8627  002280                     
  8628                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  8629  002280  0E00               	movlw	0
  8630  002282  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  8631  002284                     i2l3498:
  8632                           
  8633                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  8634  002284  0100               	movlb	0	; () banked
  8635  002286  2B9B               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  8636  002288                     
  8637                           ; BSR set to: 0
  8638  002288  0012               	return		;funcret
  8639  00228A                     __end_of_EUSART2_RxDataHandler:
  8640                           	opt callstack 0
  8641                           
  8642 ;; *************** function _EUSART1_Transmit_ISR *****************
  8643 ;; Defined at:
  8644 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;Total ram usage:        0 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_EUSART1_Initialize
  8668 ;;		_INTERRUPT_InterruptManager
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text60
  8673  002074                     __ptext60:
  8674                           	opt callstack 0
  8675  002074                     _EUSART1_Transmit_ISR:
  8676                           	opt callstack 19
  8677  002074                     
  8678                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  8679  002074  0E10               	movlw	16
  8680  002076  0100               	movlb	0	; () banked
  8681  002078  61DE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  8682  00207A  EF41  F010         	goto	i2u327_41
  8683  00207E  EF43  F010         	goto	i2u327_40
  8684  002082                     i2u327_41:
  8685  002082  EF59  F010         	goto	i2l477
  8686  002086                     i2u327_40:
  8687  002086                     
  8688                           ; BSR set to: 0
  8689                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  8690  002086  0E60               	movlw	low _eusart1TxBuffer
  8691  002088  2598               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  8692  00208A  6ED9               	movwf	fsr2l,c
  8693  00208C  6ADA               	clrf	fsr2h,c
  8694  00208E  0E00               	movlw	high _eusart1TxBuffer
  8695  002090  22DA               	addwfc	fsr2h,f,c
  8696  002092  50DF               	movf	indf2,w,c
  8697  002094  6E9A               	movwf	154,c	;volatile
  8698  002096                     
  8699                           ; BSR set to: 0
  8700  002096  2B98               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  8701  002098                     
  8702                           ; BSR set to: 0
  8703                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  8704  002098  0E0F               	movlw	15
  8705  00209A  6598               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  8706  00209C  EF52  F010         	goto	i2u328_41
  8707  0020A0  EF54  F010         	goto	i2u328_40
  8708  0020A4                     i2u328_41:
  8709  0020A4  EF56  F010         	goto	i2l3766
  8710  0020A8                     i2u328_40:
  8711  0020A8                     
  8712                           ; BSR set to: 0
  8713                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  8714  0020A8  0E00               	movlw	0
  8715  0020AA  6F98               	movwf	_eusart1TxTail& (0+255),b	;volatile
  8716  0020AC                     i2l3766:
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  8720  0020AC  2BDE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  8721                           
  8722                           ;mcc_generated_files/eusart1.c: 209:     }
  8723  0020AE  EF5B  F010         	goto	i2l480
  8724  0020B2                     i2l477:
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  8728  0020B2  010E               	movlb	14	; () banked
  8729  0020B4  99C5               	bcf	197,4,b	;volatile
  8730  0020B6                     i2l480:
  8731  0020B6  0012               	return		;funcret
  8732  0020B8                     __end_of_EUSART1_Transmit_ISR:
  8733                           	opt callstack 0
  8734                           
  8735 ;; *************** function _EUSART1_Receive_ISR *****************
  8736 ;; Defined at:
  8737 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;		None
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8755 ;;Total ram usage:        0 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    2
  8758 ;; This function calls:
  8759 ;;		Absolute function
  8760 ;;		_EUSART1_DefaultErrorHandler
  8761 ;;		_EUSART1_DefaultFramingErrorHandler
  8762 ;;		_EUSART1_DefaultOverrunErrorHandler
  8763 ;;		_EUSART1_RxDataHandler
  8764 ;; This function is called by:
  8765 ;;		_EUSART1_Initialize
  8766 ;;		_INTERRUPT_InterruptManager
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text61
  8771  0018C0                     __ptext61:
  8772                           	opt callstack 0
  8773  0018C0                     _EUSART1_Receive_ISR:
  8774                           	opt callstack 17
  8775  0018C0                     
  8776                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  8777  0018C0  0E64               	movlw	low _eusart1RxStatusBuffer
  8778  0018C2  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  8779  0018C4  6ED9               	movwf	fsr2l,c
  8780  0018C6  6ADA               	clrf	fsr2h,c
  8781  0018C8  0E01               	movlw	high _eusart1RxStatusBuffer
  8782  0018CA  22DA               	addwfc	fsr2h,f,c
  8783  0018CC  0E00               	movlw	0
  8784  0018CE  6EDF               	movwf	indf2,c
  8785  0018D0                     
  8786                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  8787  0018D0  A49D               	btfss	157,2,c	;volatile
  8788  0018D2  EF6D  F00C         	goto	i2u329_41
  8789  0018D6  EF6F  F00C         	goto	i2u329_40
  8790  0018DA                     i2u329_41:
  8791  0018DA  EF84  F00C         	goto	i2l3776
  8792  0018DE                     i2u329_40:
  8793  0018DE                     
  8794                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  8795  0018DE  0E64               	movlw	low _eusart1RxStatusBuffer
  8796  0018E0  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  8797  0018E2  6ED9               	movwf	fsr2l,c
  8798  0018E4  6ADA               	clrf	fsr2h,c
  8799  0018E6  0E01               	movlw	high _eusart1RxStatusBuffer
  8800  0018E8  22DA               	addwfc	fsr2h,f,c
  8801  0018EA  0101               	movlb	1	; () banked
  8802  0018EC  82DF               	bsf	indf2,1,c
  8803  0018EE                     
  8804                           ; BSR set to: 1
  8805                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  8806  0018EE  D802               	call	i2u330_48
  8807  0018F0  EF84  F00C         	goto	i2u330_49
  8808  0018F4                     i2u330_48:
  8809  0018F4  0005               	push	
  8810  0018F6  6EFA               	movwf	pclath,c
  8811  0018F8  0100               	movlb	0	; () banked
  8812  0018FA  51CE               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  8813  0018FC  6EFD               	movwf	tosl,c
  8814  0018FE  51CF               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  8815  001900  6EFE               	movwf	tosh,c
  8816  001902  6AFF               	clrf	tosu,c
  8817  001904  50FA               	movf	pclath,w,c
  8818  001906  0012               	return		;indir
  8819  001908                     i2u330_49:
  8820  001908                     i2l3776:
  8821                           
  8822                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  8823  001908  A29D               	btfss	157,1,c	;volatile
  8824  00190A  EF89  F00C         	goto	i2u331_41
  8825  00190E  EF8B  F00C         	goto	i2u331_40
  8826  001912                     i2u331_41:
  8827  001912  EFA0  F00C         	goto	i2l3782
  8828  001916                     i2u331_40:
  8829  001916                     
  8830                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  8831  001916  0E64               	movlw	low _eusart1RxStatusBuffer
  8832  001918  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  8833  00191A  6ED9               	movwf	fsr2l,c
  8834  00191C  6ADA               	clrf	fsr2h,c
  8835  00191E  0E01               	movlw	high _eusart1RxStatusBuffer
  8836  001920  22DA               	addwfc	fsr2h,f,c
  8837  001922  0101               	movlb	1	; () banked
  8838  001924  84DF               	bsf	indf2,2,c
  8839  001926                     
  8840                           ; BSR set to: 1
  8841                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  8842  001926  D802               	call	i2u332_48
  8843  001928  EFA0  F00C         	goto	i2u332_49
  8844  00192C                     i2u332_48:
  8845  00192C  0005               	push	
  8846  00192E  6EFA               	movwf	pclath,c
  8847  001930  0100               	movlb	0	; () banked
  8848  001932  51CC               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  8849  001934  6EFD               	movwf	tosl,c
  8850  001936  51CD               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  8851  001938  6EFE               	movwf	tosh,c
  8852  00193A  6AFF               	clrf	tosu,c
  8853  00193C  50FA               	movf	pclath,w,c
  8854  00193E  0012               	return		;indir
  8855  001940                     i2u332_49:
  8856  001940                     i2l3782:
  8857                           
  8858                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  8859  001940  0E64               	movlw	low _eusart1RxStatusBuffer
  8860  001942  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  8861  001944  6ED9               	movwf	fsr2l,c
  8862  001946  6ADA               	clrf	fsr2h,c
  8863  001948  0E01               	movlw	high _eusart1RxStatusBuffer
  8864  00194A  22DA               	addwfc	fsr2h,f,c
  8865  00194C  50DF               	movf	indf2,w,c
  8866  00194E  B4D8               	btfsc	status,2,c
  8867  001950  EFAC  F00C         	goto	i2u333_41
  8868  001954  EFAE  F00C         	goto	i2u333_40
  8869  001958                     i2u333_41:
  8870  001958  EFBD  F00C         	goto	i2l3786
  8871  00195C                     i2u333_40:
  8872  00195C                     
  8873                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  8874  00195C  D802               	call	i2u334_48
  8875  00195E  EFBB  F00C         	goto	i2u334_49
  8876  001962                     i2u334_48:
  8877  001962  0005               	push	
  8878  001964  6EFA               	movwf	pclath,c
  8879  001966  0100               	movlb	0	; () banked
  8880  001968  51CA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  8881  00196A  6EFD               	movwf	tosl,c
  8882  00196C  51CB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  8883  00196E  6EFE               	movwf	tosh,c
  8884  001970  6AFF               	clrf	tosu,c
  8885  001972  50FA               	movf	pclath,w,c
  8886  001974  0012               	return		;indir
  8887  001976                     i2u334_49:
  8888                           
  8889                           ;mcc_generated_files/eusart1.c: 233:     } else {
  8890  001976  EFBF  F00C         	goto	i2l487
  8891  00197A                     i2l3786:
  8892                           
  8893                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  8894  00197A  EC45  F011         	call	_EUSART1_RxDataHandler	;wreg free
  8895  00197E                     i2l487:
  8896  00197E  0012               	return		;funcret
  8897  001980                     __end_of_EUSART1_Receive_ISR:
  8898                           	opt callstack 0
  8899                           
  8900 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  8901 ;; Defined at:
  8902 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;		None
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1    wreg      void 
  8909 ;; Registers used:
  8910 ;;		None
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_EUSART1_Initialize
  8926 ;;		_EUSART1_Receive_ISR
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text62
  8931  002400                     __ptext62:
  8932                           	opt callstack 0
  8933  002400                     _EUSART1_DefaultOverrunErrorHandler:
  8934                           	opt callstack 18
  8935  002400                     
  8936                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  8937  002400  989D               	bcf	157,4,c	;volatile
  8938                           
  8939                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  8940  002402  889D               	bsf	157,4,c	;volatile
  8941  002404  0012               	return		;funcret
  8942  002406                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  8943                           	opt callstack 0
  8944                           
  8945 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  8946 ;; Defined at:
  8947 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		None
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_EUSART1_Initialize
  8971 ;;		_EUSART1_Receive_ISR
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text63
  8976  002412                     __ptext63:
  8977                           	opt callstack 0
  8978  002412                     _EUSART1_DefaultFramingErrorHandler:
  8979                           	opt callstack 18
  8980  002412  0012               	return		;funcret
  8981  002414                     __end_of_EUSART1_DefaultFramingErrorHandler:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  8985 ;; Defined at:
  8986 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;		None
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9004 ;;Total ram usage:        0 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    1
  9007 ;; This function calls:
  9008 ;;		_EUSART1_RxDataHandler
  9009 ;; This function is called by:
  9010 ;;		_EUSART1_Initialize
  9011 ;;		_EUSART1_Receive_ISR
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text64
  9016  002406                     __ptext64:
  9017                           	opt callstack 0
  9018  002406                     _EUSART1_DefaultErrorHandler:
  9019                           	opt callstack 17
  9020  002406                     
  9021                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  9022  002406  EC45  F011         	call	_EUSART1_RxDataHandler	;wreg free
  9023  00240A  0012               	return		;funcret
  9024  00240C                     __end_of_EUSART1_DefaultErrorHandler:
  9025                           	opt callstack 0
  9026                           
  9027 ;; *************** function _EUSART1_RxDataHandler *****************
  9028 ;; Defined at:
  9029 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;Total ram usage:        0 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_EUSART1_Receive_ISR
  9053 ;;		_EUSART1_DefaultErrorHandler
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text65
  9058  00228A                     __ptext65:
  9059                           	opt callstack 0
  9060  00228A                     _EUSART1_RxDataHandler:
  9061                           	opt callstack 18
  9062  00228A                     
  9063                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  9064  00228A  0E64               	movlw	low _eusart1RxBuffer
  9065  00228C  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9066  00228E  6ED9               	movwf	fsr2l,c
  9067  002290  6ADA               	clrf	fsr2h,c
  9068  002292  0E02               	movlw	high _eusart1RxBuffer
  9069  002294  22DA               	addwfc	fsr2h,f,c
  9070  002296  CF99 FFDF          	movff	3993,indf2	;volatile
  9071  00229A  2A58               	incf	_eusart1RxHead^0,f,c	;volatile
  9072  00229C                     
  9073                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  9074  00229C  0E63               	movlw	99
  9075  00229E  6458               	cpfsgt	_eusart1RxHead^0,c	;volatile
  9076  0022A0  EF54  F011         	goto	i2u304_41
  9077  0022A4  EF56  F011         	goto	i2u304_40
  9078  0022A8                     i2u304_41:
  9079  0022A8  EF58  F011         	goto	i2l3518
  9080  0022AC                     i2u304_40:
  9081  0022AC                     
  9082                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  9083  0022AC  0E00               	movlw	0
  9084  0022AE  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  9085  0022B0                     i2l3518:
  9086                           
  9087                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  9088  0022B0  0100               	movlb	0	; () banked
  9089  0022B2  2B96               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  9090  0022B4                     
  9091                           ; BSR set to: 0
  9092  0022B4  0012               	return		;funcret
  9093  0022B6                     __end_of_EUSART1_RxDataHandler:
  9094                           	opt callstack 0
  9095                           
  9096                           	psect	text66
  9097  000000                     __ptext66:
  9098                           	opt callstack 0
  9099  000000                     
  9100                           	psect	rparam
  9101  0000                     
  9102                           	psect	temp
  9103  00005A                     btemp:
  9104                           	opt callstack 0
  9105  00005A                     	ds	1
  9106  0000                     int$flags	set	btemp
  9107  0000                     wtemp8	set	btemp+1
  9108  0000                     ttemp5	set	btemp+1
  9109  0000                     ttemp6	set	btemp+4
  9110  0000                     ttemp7	set	btemp+8
  9111                           tosu	equ	0xFFF
  9112                           tosh	equ	0xFFE
  9113                           tosl	equ	0xFFD
  9114                           stkptr	equ	0xFFC
  9115                           pclatu	equ	0xFFB
  9116                           pclath	equ	0xFFA
  9117                           pcl	equ	0xFF9
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           indf0	equ	0xFEF
  9125                           postinc0	equ	0xFEE
  9126                           postdec0	equ	0xFED
  9127                           preinc0	equ	0xFEC
  9128                           plusw0	equ	0xFEB
  9129                           fsr0h	equ	0xFEA
  9130                           fsr0l	equ	0xFE9
  9131                           wreg	equ	0xFE8
  9132                           indf1	equ	0xFE7
  9133                           postinc1	equ	0xFE6
  9134                           postdec1	equ	0xFE5
  9135                           preinc1	equ	0xFE4
  9136                           plusw1	equ	0xFE3
  9137                           fsr1h	equ	0xFE2
  9138                           fsr1l	equ	0xFE1
  9139                           bsr	equ	0xFE0
  9140                           indf2	equ	0xFDF
  9141                           postinc2	equ	0xFDE
  9142                           postdec2	equ	0xFDD
  9143                           preinc2	equ	0xFDC
  9144                           plusw2	equ	0xFDB
  9145                           fsr2h	equ	0xFDA
  9146                           fsr2l	equ	0xFD9
  9147                           status	equ	0xFD8


Data Sizes:
    Strings     383
    Constant    0
    Data        20
    BSS         499
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     43     148
    BANK1           256      0     232
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1804_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintModbus
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusRx->_ClearRxBuff
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintModbus
    _PrintModbus->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   63181
                                             85 COMRAM     1     1      0
                    _ClearModbusData
                        _ClearRxBuff
                   _InitialiseString
                           _ModbusRx
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   30859
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0     179
                                              7 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   30757
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   30757
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29842
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   29279
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7157
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6539
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7393
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5127
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Write                                       1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearRxBuff
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      E8       8       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      94       5       92.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     29E       6        0.0%
DATA                 0      0     29E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 04 19:28:14 2021

                      _eusart1TxBufferRemaining 00DE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 1B42  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 2338                                             l124 2350  
                                           l127 231E                                             l320 1E04  
                                           l144 240E                                             l321 1E1C  
                                           l330 23EA                                             l324 1E4C  
                                           l503 23D6                                             l512 23B8  
                                           l506 23CC                                             l362 239A  
                                           l515 23C2                                             l371 2390  
                                           l620 1FE6                                             l452 2368  
                                           l605 23F4                                             l509 23E0  
                                           l365 23AE                                             l614 20F8  
                                           l630 1A1E                                             l446 1C3C  
                                           l607 23F6                                             l359 23A4  
                                           l720 0EEC                                             l544 1CB8  
                                           l368 2386                                             l296 1BC0  
                                           l713 0992                                             l465 1EA4  
                                           l609 23F8                                             l722 0EF4  
                                           l810 06B2                                             l731 0FB4  
                                           l732 0FFC                                             l556 1D2C  
                                           l741 0CA2                                             l821 1D88  
                                           l645 157C                                             l822 1D90  
                                           l751 0E6A                                             l743 0CAA  
                                           l736 1004                                             l825 2302  
                                           l682 1782                                             l756 09CC  
                                           l685 17C4                                             l693 0754  
                                           l781 0C68                                             l765 0A6A  
                                           l758 09D4                                             l687 17FE  
                                           l695 075C                                             l952 148A  
                                           l939 1326                                             l779 0C06  
                                           l795 0220                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 23A6         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 239C                                             _abs 213A  
                                           _pad 173E                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l1500 2170                                            l1270 166C  
                                          l1503 2178                                            l1263 164C  
                                          l4000 1E48                                            l1280 173C  
                                          l1273 171C                                            l4002 23E4  
                                          l4010 1A4E                                            l1531 1196  
                                          l1603 1DEE                                            l4100 11D2  
                                          l4012 1A6C                                            l4004 1A20  
                                          l4020 203C                                            l1534 119E  
                                          l4110 1214                                            l4102 11D6  
                                          l4014 1AA2                                            l4006 1A32  
                                          l4022 204E                                            l4030 1F5E  
                                          l1543 225C                                            l1551 1F4C  
                                          l4120 126E                                            l4112 1232  
                                          l4104 11E4                                            l4008 1A44  
                                          l4024 2052                                            l4032 1F90  
                                          l4040 173E                                            l4200 1694  
                                          l1537 21B4                                            l1609 21EC  
                                          l4122 129C                                            l4114 123A  
                                          l4130 12D6                                            l4106 1204  
                                          l4018 2030                                            l4026 1F4E  
                                          l4050 178E                                            l4042 174C  
                                          l4210 1716                                            l4202 16A8  
                                          l4220 1F46                                            l4212 1EFC  
                                          l4132 12E6                                            l4124 12BC  
                                          l4116 124E                                            l4108 1208  
                                          l4140 132C                                            l1572 1AB4  
                                          l1580 2072                                            l4028 1F5A  
                                          l4052 17A2                                            l4044 1760  
                                          l4300 0ECA                                            l4204 16B6  
                                          l4036 21B6                                            l1557 2224  
                                          l4214 1F00                                            l4134 1306  
                                          l4126 12BE                                            l4118 125C  
                                          l4150 138C                                            l4142 133A  
                                          l4062 213A                                            l4054 17A6  
                                          l4046 176E                                            l4230 071C  
                                          l4310 0F4C                                            l4206 16E4  
                                          l4070 217A                                            l4216 1F14  
                                          l4128 12D0                                            l4160 1402  
                                          l4152 13AA                                            l4144 135A  
                                          l4064 2154                                            l4056 17D2  
                                          l4048 177A                                            l4240 0776  
                                          l4232 072C                                            l4224 06B4  
                                          l4312 0F58                                            l4304 0F16  
                                          l4208 1704                                            l4080 1DDA  
                                          l4400 0AFC                                            l1593 1F9C  
                                          l4090 22FA                                            l4218 1F42  
                                          l4170 146A                                            l4162 1422  
                                          l4154 13B2                                            l4146 135E  
                                          l4138 1328                                            l4058 17E6  
                                          l4250 07A2                                            l4242 0784  
                                          l4234 072E                                            l4226 06D4  
                                          l4322 0FC6                                            l4314 0F8E  
                                          l4306 0F2A                                            l4330 0C7A  
                                          l4066 21EE                                            l4074 1D92  
                                          l4402 0B10                                            l4410 0B8A  
                                          l1587 22DC                                            l4084 2226  
                                          l4164 1434                                            l4156 13C6  
                                          l4148 136C                                            l4260 08AE  
                                          l4252 0824                                            l4244 078A  
                                          l4236 0748                                            l4228 06FC  
                                          l4324 0FDA                                            l4316 0F92  
                                          l4308 0F2E                                            l4180 15B0  
                                          l4340 0CE4                                            l4332 0C7C  
                                          l4420 0C14                                            l4412 0BA6  
                                          l4404 0B20                                            l4430 1006  
                                          l4094 11A0                                            l4158 13D4  
                                          l4166 143A                                            l4270 0920  
                                          l4262 08CC                                            l4254 082A  
                                          l4246 0792                                            l4238 0764  
                                          l4326 0FDE                                            l4318 0F96  
                                          l4190 1632                                            l4182 15C4  
                                          l4174 157E                                            l4342 0CEA  
                                          l4350 0DD0                                            l4334 0C96  
                                          l1598 1DE6                                            l4078 1DC8  
                                          l4422 0C1A                                            l4414 0BC4  
                                          l4406 0B26                                            l4510 022E  
                                          l4502 01AC                                            l4088 22DE  
                                          l4440 1078                                            l4432 101A  
                                          l4096 11A4                                            l4168 144A  
                                          l4280 095A                                            l4272 092E  
                                          l4264 08E6                                            l4256 0830  
                                          l4248 079C                                            l4192 1634  
                                          l4184 15D2                                            l4176 158A  
                                          l4352 0DE2                                            l4360 0E42  
                                          l4344 0D60                                            l4336 0CD2  
                                          l4328 0C6A                                            l4424 0C2A  
                                          l4416 0BDE                                            l4408 0B2C  
                                          l4520 02A8                                            l4512 0230  
                                          l4450 10A0                                            l4442 107C  
                                          l4434 101E                                            l4098 11B2  
                                          l4274 0934                                            l4282 096A  
                                          l4266 0900                                            l4258 0894  
                                          l4290 0E86                                            l4194 1646  
                                          l4186 15E4                                            l4178 15A8  
                                          l4354 0E00                                            l4346 0D66  
                                          l4338 0CDA                                            l4426 0C40  
                                          l4418 0BF8                                            l4370 09C0  
                                          l4522 02C8                                            l4530 0332  
                                          l4514 0256                                            l4506 01B8  
                                          l4610 2392                                            l4452 10A8  
                                          l4436 1022                                            l4276 0946  
                                          l4268 090E                                            l4292 0E98  
                                          l4188 1612                                            l4196 166E  
                                          l4356 0E1A                                            l4348 0D6C  
                                          l4380 0A24                                            l4372 09EA  
                                          l4364 0994                                            l4540 03FE  
                                          l4532 0358                                            l4524 02D6  
                                          l4516 028C                                            l4508 020E  
                                          l4620 23C4                                            l4612 23A6  
                                          l4604 2388                                            l4700 1B7A  
                                          l4462 1156                                            l4454 10DE  
                                          l4446 1082                                            l4438 1040  
                                          l4278 0952                                            l4294 0EA0  
                                          l4286 0E6C                                            l4198 168C  
                                          l4358 0E34                                            l4382 0A2A  
                                          l4374 09F2                                            l4366 09A4  
                                          l4550 04A0                                            l4542 0424  
                                          l4534 037E                                            l4518 029A  
                                          l4630 1D6A                                            l4622 23D8  
                                          l4614 23BA                                            l4606 237E  
                                          l4702 1B86                                            ?_pad 0017  
                                          l4464 1168                                            l4448 1098  
                                          l4296 0EB4                                            l4288 0E7E  
                                          l4392 0A9E                                            l4384 0A32  
                                          l4376 0A12                                            l4368 09A6  
                                          l4560 056E                                            l4552 04EA  
                                          l4544 045A                                            l4536 03C6  
                                          l4528 0320                                            l4480 0174  
                                          l4472 012A                                            l4624 1D2E  
                                          l4720 1E82                                            l4712 1E4E  
                                          l4616 23B0                                            l4608 239C  
                                          l4704 1B92                                            l4640 1B1A  
                                          l4632 1AB6                                            l4466 117A  
                                          l4458 1116                                            l4298 0EBC  
                                          l4394 0AB0                                            l4386 0A4E  
                                          l4378 0A1A                                            l4562 0586  
                                          l4570 060C                                            l4490 019A  
                                          l4482 0180                                            l4474 0150  
                                          l4626 1D36                                            l4730 1EA2  
                                          l4722 1E92                                            l4714 1E4E  
                                          l4802 14B8                                            l4810 14EE  
                                          l4618 23CE                                            l4706 1BBC  
                                          l4650 1B28                                            l4642 1B1C  
                                          l4634 1ADE                                            l4388 0A5E  
                                          l4572 0632                                            l4580 0660  
                                          l4564 0594                                            l4556 0522  
                                          l4548 047A                                            l4484 0182  
                                          l4476 015E                                            l4628 1D44  
                                          l4740 1F9E                                            l4724 1E96  
                                          l4716 1E60                                            l4708 2352  
                                          l4820 1516                                            l4812 1500  
                                          l4804 14D0                                            l4660 1BC2  
                                          l4652 1B2A                                            l4644 1B1E  
                                          l4636 1AEE                                            l4398 0AEA  
                                          l4582 066E                                            l4574 0640  
                                          l4566 05D0                                            l4558 0548  
                                          l4494 01A0                                            l4486 0194  
                                          l4478 0170                                            l4734 22B6  
                                          l4750 1994                                            l4742 1FB2  
                                          l4726 1E9A                                            l4718 1E80  
                                          l4814 1504                                            l4822 1538  
                                          l4806 14D4                                            l4830 157A  
                                          l4670 1BEA                                            l4662 1BC6  
                                          l4654 240C                                            l4646 1B24  
                                          l4638 1B18                                            l4840 20C8  
                                          l4576 0654                                            l4736 22C0  
                                          l4760 19EC                                            l4752 19B0  
                                          l4744 1FC2                                            l4728 1E9E  
                                          l4824 1550                                            l4816 1508  
                                          l4808 14E8                                            l4680 1C0E  
                                          l4672 1BEE                                            l4664 1BD2  
                                          l4648 1B26                                            l4656 2304  
                                          l4842 20D8                                            l4834 20B8  
                                          l4498 01A6                                            l4586 067A  
                                          l4762 19FE                                            l4754 19B4  
                                          l4746 1FC6                                            l4826 1574  
                                          l4818 150E                                            l4682 1C38  
                                          l4674 1BF2                                            l4666 1BE2  
                                          l4690 1B64                                            l4658 233A  
                                          l4770 2324                                            l4850 2100  
                                          l4844 20DC                                            l4588 06A0  
                                          l4780 1C3E                                            l4756 19B8  
                                          l4748 1980                                            l4676 1BF6  
                                          l4668 1BE6                                            l4692 1B6A  
                                          l4684 1B44                                            l4772 2328  
                                          l4860 210A                                            l4852 2102  
                                          l3990 1E1E                                            l4766 1A14  
                                          l4758 19D8                                            l4790 1D00  
                                          l4782 1CBA                                            l4678 1C02  
                                          l4694 1B6E                                            l4686 1B48  
                                          l4774 232C                                            l4870 212A  
                                          l4862 210E                                            l4854 2104  
                                          l4846 20FA                                            l3992 1E30  
                                          l3984 1DF2                                            l4944 01E0  
                                          l4792 1D06                                            l4784 1CBA  
                                          l4696 1B72                                            l4688 1B54  
                                          l4776 2330                                            l4768 2320  
                                          l4872 212E                                            l4864 2112  
                                          l4856 2106                                            l4848 20FE  
                                          l4946 10C8                                            l3994 1E32  
                                          l3986 1DF2                                            l4794 1D24  
                                          l4786 1CC8                                            l4698 1B76  
                                          l4778 2334                                            l4866 2116  
                                          l4858 2108                                            l3996 1E42  
                                          l3988 1E14                                            l4796 148C  
                                          l4788 1CD6                                            l4868 2116  
                                          l3998 1E46                                            l4798 14A0  
                                          STR_1 FE7F                                            STR_2 FFD0  
                                          STR_3 FF24                                            STR_4 FFE9  
                                          STR_5 FFF5                                            STR_6 FFB3  
                                          STR_7 FEEF                                            STR_8 FEB8  
                                          STR_9 FF4F                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          u4000 15D2                                            _LATD 000F86  
                                          u4001 15CE                                            _LATE 000F87  
                                          u4010 1612                                            u4011 160E  
                                          u4100 072C                                            u4020 168C  
                                          u4101 0728                                            u4021 1688  
                                          u4110 0748                                            u4030 16B6  
                                          u4111 0744                                            u4031 16B2  
                                          u4200 092E                                            u4120 0776  
                                          u4040 16E4                                            u4201 092A  
                                          u4121 0772                                            u4041 16E0  
                                          u4050 1F14                                            u4210 0946  
                                          u4130 0784                                            u4051 1F10  
                                          u4211 0942                                            u4131 0780  
                                          u4060 1F42                                            u4140 08AE  
                                          u4300 0FC2                                            u4061 1F3E  
                                          u4141 08AA                                            u4301 0FBE  
                                          u4221 0E76                                            u4150 08CC  
                                          u4070 06E4                                            u4310 0FFC  
                                          u4230 0E98                                            u4151 08C8  
                                          u4071 06DE                                            u4311 0FF8  
                                          u4231 0E94                                            u3600 1E14  
                                          u4160 08E6                                            u4080 06E6  
                                          u4240 0ECA                                            u4320 0C7A  
                                          u4400 09C0                                            u3601 1E10  
                                          u4161 08E2                                            u4241 0EC6  
                                          u4321 0C76                                            u4401 09BC  
                                          u3610 1E42                                            u4170 0900  
                                          u4090 06FC                                            u4250 0EE8  
                                          u4330 0C96                                            u4410 09EA  
                                          u3611 1E3E                                            u4171 08FC  
                                          u4091 06F8                                            u4251 0EE4  
                                          u4331 0C92                                            u4411 09E6  
                                          u3620 1A32                                            u4180 090E  
                                          u4260 0F12                                            u4340 0DE2  
                                          u3700 21E8                                            u4500 0BA6  
                                          u4420 0A4E                                            u3621 1A2E  
                                          u4181 090A                                            u4261 0F0E  
                                          u4341 0DDE                                            u4501 0BA2  
                                          u4421 0A4A                                            u3630 1A44  
                                          u3710 174C                                            u4190 0920  
                                          u4270 0F4C                                            u4350 0E00  
                                          u4510 0BC4                                            u4430 0A98  
                                          u3631 1A40                                            u3711 1748  
                                          u4191 091C                                            u4271 0F48  
                                          u4351 0DFC                                            u4511 0BC0  
                                          u4431 0A92                                            u4600 1152  
                                          u3640 1A6C                                            u3720 176E  
                                          u4280 0F7A                                            u4360 0E1A  
                                          u3800 1DC2                                            u4520 0BDE  
                                          u4440 0A9A                                            u3641 1A68  
                                          u3721 176A                                            u4361 0E16  
                                          u3801 1DBC                                            u4521 0BDA  
                                          u4610 1168                                            u3650 1AA2  
                                          u3730 17C4                                            u4290 0FB4  
                                          u4370 0E34                                            u3810 1DC4  
                                          u4530 0BF8                                            u4450 0AB0  
                                          u4611 1164                                            u3651 1A9E  
                                          u3731 17C0                                            u4291 0FB0  
                                          u4371 0E30                                            u4531 0BF4  
                                          u4451 0AAC                                            u4620 117A  
                                          u3900 129C                                            u3660 2072  
                                          u3740 17D2                                            u4380 0E42  
                                          u3820 1DDA                                            u4540 0C06  
                                          u4460 0AE4                                            u4700 0332  
                                          _PMD0 000EE1                                            u4621 1176  
                                          u3901 1298                                            u3661 206E  
                                          u3741 17CE                                            u4381 0E3E  
                                          u3821 1DD6                                            u4541 0C02  
                                          u4461 0ADE                                            u4701 032E  
                                          _PMD1 000EE2                                            u3830 2256  
                                          u3910 12E6                                            u3750 2154  
                                          u3590 1E04                                            u3670 1F80  
                                          u4550 0C14                                            u4470 0AE6  
                                          u4390 09A4                                            u4710 0358  
                                          u4630 0150                                            _PMD2 000EE3  
                                          u3831 2250                                            u3911 12E2  
                                          u3751 2150                                            u3591 1E00  
                                          u4287 0F70                                            u4551 0C10  
                                          u4391 09A0                                            u4711 0354  
                                          u4631 014C                                            _PMD3 000EE4  
                                          u3840 2258                                            u4560 1040  
                                          u3920 133A                                            u3680 1F90  
                                          u3760 221E                                            u4480 0AFC  
                                          u4720 037E                                            u4640 0220  
                                          u4800 2368                                            _PMD4 000EE5  
                                          u4561 103C                                            u3921 1336  
                                          u3681 1F8C                                            u3761 2218  
                                          u4481 0AF8                                            u4721 037A  
                                          u4641 021C                                            _PMD5 000EE6  
                                          u4570 1078                                            u3850 11B2  
                                          u3930 136C                                            u3770 2220  
                                          u3690 21E6                                            u4490 0B64  
                                          u4730 0424                                            u4650 022E  
                                          u4810 1E60                                            u4571 1074  
                                          u3851 11AE                                            u3931 1368  
                                          u3691 21E0                                            u4731 0420  
                                          u4651 022A                                            u4811 1E5C  
                                          u4580 1094                                            u3860 11E4  
                                          u3940 13AA                                            u3780 21AE  
                                          u4740 04A0                                            u4660 0256  
                                          u4820 1E92                                            u4900 14E8  
                                          u4581 1090                                            u3861 11E0  
                                          u3941 13A6                                            u3677 1F76  
                                          u3781 21A8                                            u4741 049C  
                                          u4661 0252                                            u4821 1E8E  
                                          u4901 14E4                                            u4590 1150  
                                          u3950 13D4                                            u3790 21B0  
                                          u4750 0548                                            u4670 029A  
                                          u4830 1FE6                                            u4910 1500  
                                          u4591 114A                                            u3871 120E  
                                          u3951 13D0                                            u4495 0B52  
                                          u4751 0544                                            u4671 0296  
                                          u4831 1FE2                                            u4911 14FC  
                                          u3880 1232                                            u3960 1402  
                                          u4760 056E                                            u4680 0318  
                                          u4840 19D8                                            u4920 1526  
                                          u3881 122E                                            u3961 13FE  
                                          u4761 056A                                            u4681 0312  
                                          u4841 19D4                                            u4921 1520  
                                          u3890 125C                                            u3970 144A  
                                          u4770 0632                                            u4690 031A  
                                          u4850 19EC                                            u4930 1550  
                                          u3891 1258                                            u3971 1446  
                                          u4771 062E                                            u4851 19E8  
                                          u4931 154C                                            u4780 1D88  
                                          u4860 1A10                                            u4940 1560  
                                          u3981 1584                                            u4781 1D84  
                                          u4861 1A0C                                            u4941 155A  
                                          u4950 20F8                                            u3990 15A8  
                                          u4790 2366                                            u4926 1528  
                                          u4870 1D24                                            u4951 20F4  
                                          u3991 15A4                                            u4791 2360  
                                          u4871 1D20                                            u4880 14A0  
                                          u4960 212A                                            u4881 149C  
                                          u4961 2126                                            u4946 1562  
                                          u4890 14B4                                            u4891 14B0  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 1DF0  
                                          abs@a 0017                                            _dbuf 01C8  
                                          _atoi 1006                                            _main 20FA  
                                          _dtoa 06B4                                   ?_EUSART1_Read 0001  
                                          _prec 008C                                            _nout 0088  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 0E6C                                            btemp 005A  
                                          _utoa 0C6A                                            _xtoa 0994  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 2030  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 2352  
                         _eusart1RxStatusBuffer 0164                                 __end_of___aodiv 1328  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 148C  
                                         STR_10 FF72                                           STR_11 FF94  
                                 __CFG_WDTE$OFF 000000                                ?_ClearModbusData 0001  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 166E                                           ?_xtoa 0022  
                               __end_of___lomod 173E                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 240A                                           i2l333 202A  
                                         i2l350 2410                                           i2l343 18BE  
                                         i2l159 0112                                           i2l336 202E  
                                         i2l353 23F2                                           i2l347 2288  
                                         i2l356 23FE                                           i2l480 20B6  
                                         i2l491 22B4                                           i2l477 20B2  
                                         i2l494 2412                                           i2l487 197E  
                                         i2l497 2404                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 00AE  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 0094  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 2074                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                         _data1 00E0                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0056                                           _fputc 1A20  
                               __end_of_isalpha 21B6                                           _fputs 2030  
                               __end_of_isdigit 225E                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 008A  
                                         _putch 23E2                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 21EE  
                               __end_of_isspace 1F4E                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 2226                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 1F9E  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005B                                           ttemp6 005E  
                                         ttemp7 0062                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 0090  
                                         wtemp8 005B                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 1DF0                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 2414  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 2412  
         __end_of_EUSART2_SetTxInterruptHandler 2388          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 237E                                    _toupper$1855 0011  
                               __initialization 1EA6                                    __end_of_atoi 11A0  
                    __end_of_EUSART1_Initialize 1C3E                                    __end_of_main 213A  
                                  __end_of_dtoa 0994                       __size_of_InitialiseString 007C  
                                  __end_of_stoa 1006                                    __end_of_utoa 0E6C  
                                  __end_of_xtoa 0C6A                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 157E                                          ??_atoi 000E  
                                        ??_main 0056                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 2400                     _EUSART2_DefaultErrorHandler 23FA  
                                    _ModbusData 0100                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                      __end_of_EUSART2_Initialize 1BC2  
                      _eusart2TxBufferRemaining 00DF                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                  __CFG_WDTCCS$SC 000000  
                                        i2l3510 228A                                          i2l3512 229A  
                                        i2l3514 229C                                          i2l3516 22AC  
                                        i2l3604 23EC                                          i2l3518 22B0  
                                        i2l3606 23FA                                          i2l3710 200C  
                                        i2l3720 1810                                          i2l3712 2010  
                                        i2l3634 2400                                          i2l3490 225E  
                                        i2l3730 1868                                          i2l3722 1820  
                                        i2l3714 2020                                          i2l3706 1FE8  
                                        i2l3636 2406                                          i2l3492 226E  
                                        i2l3732 1880                                          i2l3724 1830  
                                        i2l3716 2024                                          i2l3708 1FFA  
                                        i2l3494 2270                                          i2l3734 189C  
                                        i2l3726 1848                                          i2l3718 1800  
                                        i2l3760 2096                                          i2l3496 2280  
                                        i2l3736 18BA                                          i2l3728 1858  
                                        _INLVLA 000F0D                                          i2l3770 18D0  
                                        i2l3762 2098                                          i2l3498 2284  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        i2l3780 1926                                          i2l3772 18DE  
                                        i2l3764 20A8                                          i2l3756 2074  
                                        i2l3860 0046                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l3782 1940  
                                        i2l3774 18EE                                          i2l3766 20AC  
                                        i2l3758 2086                                          i2l3870 00E6  
                                        i2l3862 0072                                          i2l3854 001A  
                                        i2l3784 195C                                          i2l3776 1908  
                                        i2l3768 18C0                                          i2l3872 00F4  
                                        i2l3864 0080                                          i2l3856 0028  
                                        i2l3786 197A                                          i2l3778 1916  
                                        i2l3866 00AC                                          i2l3858 0038  
                                        i2l3868 00BA                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00AA  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 23F4  
                                        _RXStat 0093                                  __CFG_PWRTE$OFF 000000  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 0006  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 22DE                                  __CFG_STVREN$ON 000000  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 1ECC  
                                        clear_1 1ED8                                          clear_2 1EE4  
                                        _rxData 0200                     _EUSART2_FramingErrorHandler 00D4  
                                        _printf 22B6                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 1F4E  
                                 _ExpectedBytes 00F2                                          fputc@c 0007  
                                _PMD_Initialize 2304                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst FE7E                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 1FE8                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 1D92  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0264  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0078                                 _eusart1TxBuffer 0060  
                             _SYSTEM_Initialize 2320                                 _eusart2TxBuffer 0080  
                                    __accesstop 0060                         __end_of__initialization 1EF2  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 22B6                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 236A                             ??_SYSTEM_Initialize 0007  
                                 __end_of_fputc 1AB6                                   __end_of_fputs 2074  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 23EC  
                        __end_of_PMD_Initialize 2320                            __end_of_EUSART1_Read 1EA6  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 1980  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 233A  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0058                                   _eusart1TxHead 0099  
                                 _eusart2RxHead 0059                                   _eusart1RxTail 0097  
                                 _eusart2TxHead 009E                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart2RxTail 009C                                   _eusart1TxTail 0098  
             _EUSART1_TxDefaultInterruptHandler 00D8                                   _eusart2TxTail 009D  
               ??_EUSART1_SetRxInterruptHandler 0007                             __end_of_PrintModbus 1D2E  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
               __end_of_EUSART1_SetErrorHandler 23E2                                _InitialiseString 1C3E  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       ?_printf 00BC                                 ?_PMD_Initialize 0001  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 23D8  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 23CE  
                         _eusart2RxStatusBuffer 0070                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 18C0                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                    ??_ModbusRx 0008                                         _ByteNum 008E  
                               __size_of_RXMode 0006                                         __Hparam 0000  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 11A0                                         ___aomod 1328  
                               __size_of___wmul 0026                                         ___lodiv 157E  
                                       ___lomod 166E                                       ?_vfprintf 00B6  
                           _EUSART1_is_rx_ready 2352                                         __pcinit 1EA6  
               __end_of_EUSART2_SetErrorHandler 23B0                                         __ramtop 0F00  
                                       __ptext0 20FA                                         __ptext1 2320  
                                       __ptext2 2304                                         __ptext3 1AB6  
                                       __ptext4 233A                                         __ptext5 240C  
                                       __ptext6 1B44                                         __ptext7 237E  
                                       __ptext8 2388                                         __ptext9 2392  
                               __size_of_printf 0028                                 __size_of_strlen 0050  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 23F4  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 23EC  
                         _OSCILLATOR_Initialize 233A                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 217A                                         _isdigit 2226  
                            _EUSART1_Initialize 1BC2                                         _islower 21B6  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 1EFC  
                                   _PrintModbus 1CBA                                         _isupper 21EE  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 0042  
                                       _toupper 1D92                            end_of_initialization 1EF2  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00CC  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 23C4  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 23BA  
                            _EUSART2_Initialize 1B44                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
              __size_of_EUSART1_SetErrorHandler 000A                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                            ??_EUSART2_Initialize 0007  
                                  _EUSART1_Read 1E4E            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 23FA                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 228A                    __end_of_INTERRUPT_Initialize 2410  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 00A7  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 009F  
                                __end_of___wmul 2304                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 22DE                                  __end_of_strlen 1F9E  
                           start_initialization 1EA6                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 217A                                     __end_of_pad 1800  
                      __end_of_InitialiseString 1CBA   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART2_Write 1E4E                          fp__EUSART1_Receive_ISR 0000  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 239C         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 2392                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                               __size_of_ModbusRx 00F2  
                                   vfprintf@fmt 00B8                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 228A  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00E0  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 0096                                  _eusart2RxCount 009B  
                                   __pbssCOMRAM 0056               _EUSART1_RxDefaultInterruptHandler 00D6  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 009F  
                              ___aodiv@dividend 0005                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 1980                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1764 0014  
                                     _atoi$1765 0018                                       _atoi$1766 0016  
                                     __pnvBANK0 00CA                             ??_AddRxBuffToModBus 0005  
                        _PIN_MANAGER_Initialize 1AB6                                       _dtoa$1260 0034  
                                     __pintcode 0008                                   __pmediumconst FE7E  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00DC  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2406  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2400  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00CA                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 1A20  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 23D8  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 240C                    __size_of_EUSART2_Receive_ISR 00C0  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                                        i2u303_40 2280  
                                      i2u303_41 227C             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u304_40 22AC                                        i2u320_40 1858  
                                      i2u304_41 22A8                                        i2u320_41 1854  
                                      i2u322_40 189C                                        i2u321_48 186E  
                                      i2u322_41 1898                                        i2u321_49 1880  
                                      i2u331_40 1916                                        i2u330_48 18F4  
                                      i2u331_41 1912                                        i2u330_49 1908  
                                      i2u323_48 18A2                                        i2u316_40 1FFA  
                                      i2u323_49 18B6                                        i2u316_41 1FF6  
                                      i2u333_40 195C                                        i2u332_48 192C  
                                      i2u317_40 2020                                        i2u333_41 1958  
                                      i2u332_49 1940                                        i2u317_41 201C  
                                      i2u318_40 1820                                        i2u318_41 181C  
                                      i2u334_48 1962                                        i2u327_40 2086  
                                      i2u351_40 00AC                                        i2u350_48 0086  
                                      i2u334_49 1976                                        i2u327_41 2082  
                                      i2u351_41 00A8                                        i2u350_49 009A  
                                      i2u328_40 20A8                                        i2u319_48 1836  
                                      i2u352_40 00BA                                        i2u344_40 0028  
                                      i2u328_41 20A4                                        i2u319_49 1848  
                                      i2u352_41 00B6                                        i2u344_41 0024  
                                      i2u329_40 18DE                                        i2u345_40 0038  
                                      i2u329_41 18DA                                        i2u345_41 0034  
                                      i2u354_40 00E6                                        i2u353_48 00C0  
                                      i2u346_40 0046                                        i2u354_41 00E2  
                                      i2u353_49 00D4                                        i2u346_41 0042  
                                      i2u355_40 00F4                                        i2u355_41 00F0  
                                      i2u348_40 0072                                        i2u347_48 004C  
                                      i2u348_41 006E                                        i2u347_49 0060  
                                      i2u356_48 00FA                                        i2u349_40 0080  
                                      i2u356_49 010E                                        i2u349_41 007C  
                                      _PIR3bits 000ECD                                        _PIR7bits 000ED1  
                        ?_EUSART1_RxDataHandler 0001                                       _vfpfcnvrt 012A  
                                     _xtoa$1290 0037                                       _xtoa$1289 0035  
                             ___wmul@multiplier 0005                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1791 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00A9                                       copy_data0 1EBA  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 23A6  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00D2  
                                      _ModbusRx 148C           __end_of_EUSART1_SetTxInterruptHandler 23BA  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 23B0  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 2392  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 2388  
                                    vfprintf@ap 00BA                                        __Lrparam 0000  
                                    vfprintf@fp 00B6                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 007C  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 240C                     _EUSART1_DefaultErrorHandler 2406  
                   __end_of_EUSART1_is_rx_ready 236A                            _EUSART2_ErrorHandler 00D0  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                    __size_of_AddRxBuffToModBus 00A0                                 _ClearModbusData 20B8  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 239C                                        __ptext11 23A6  
                                      __ptext20 148C                                        __ptext12 1BC2  
                                      __ptext21 2352                                        __ptext13 23B0  
                                      __ptext30 1D92                                        __ptext22 1E4E  
                                      __ptext14 23BA                                        __ptext31 21B6  
                                      __ptext23 1F9E                                        __ptext15 23C4  
                                      __ptext40 1F4E                                        __ptext32 21EE  
                                      __ptext24 1980                                        __ptext16 23CE  
                                      __ptext41 2030                                        __ptext33 217A  
                                      __ptext25 1C3E                                        __ptext17 23D8  
                                      __ptext50 2226                                        __ptext42 1A20  
                                      __ptext34 0C6A                                        __ptext26 22B6  
                                      __ptext18 23F4                                        __ptext51 22DE  
                                      __ptext43 23E2                                        __ptext35 166E  
                                      __ptext27 1D2E                                        __ptext19 1CBA  
                                      __ptext60 2074                                        __ptext52 20B8  
                                      __ptext44 1DF0                                        __ptext36 157E  
                                      __ptext28 012A                                        __ptext61 18C0  
                                      __ptext45 213A                                        __ptext37 0E6C  
                                      __ptext29 0994                                        __ptext62 2400  
                                      __ptext54 1FE8                                        __ptext46 1328  
                                      __ptext38 06B4                                        __ptext63 2412  
                                      __ptext55 1800                                        __ptext47 11A0  
                                      __ptext39 173E                                        __ptext64 2406  
                                      __ptext56 23EC                                        __ptext48 1006  
                                      __ptext65 228A                                        __ptext57 2410  
                                      __ptext49 1EFC                                        __ptext66 0000  
                                      __ptext58 23FA                                        __ptext59 225E  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 0040                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 2412     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 2410                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
                                  PrintModbus@i 00C8            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 00EB  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 0092  
                                      int$flags 005A                                        _vfprintf 1D2E  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 225E                                       printf@fmt 00BC  
                   _EUSART1_FramingErrorHandler 00CE                             _EUSART1_Receive_ISR 18C0  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1304 00AC  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 0074                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 23CE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 23C4                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 20B8                                        printf@ap 00C6  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                            _eusart1RxLastError 0095                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 1800                         __end_of_ClearModbusData 20FA  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1B44  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 009A                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00DA  
                           __end_of_ClearRxBuff 1FE8  
