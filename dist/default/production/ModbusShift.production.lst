

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 21 00:28:42 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   125  0000                     
   126                           ; Version 2.10
   127                           ; Generated 31/07/2019 GMT
   128                           ; 
   129                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F46K40 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161                           	psect	idataBANK1
   162  00336A                     __pidataBANK1:
   163                           	opt callstack 0
   164                           
   165                           ;initializer for ValidateCmd@F10739
   166  00336A  50                 	db	80
   167  00336B  61                 	db	97
   168  00336C  72                 	db	114
   169  00336D  74                 	db	116
   170  00336E  20                 	db	32
   171  00336F  4E                 	db	78
   172  003370  75                 	db	117
   173  003371  6D                 	db	109
   174  003372  62                 	db	98
   175  003373  65                 	db	101
   176  003374  72                 	db	114
   177  003375  00                 	db	0
   178  003376  00                 	db	0
   179  003377  00                 	db	0
   180  003378  00                 	db	0
   181  003379  00                 	db	0
   182  00337A  00                 	db	0
   183  00337B  00                 	db	0
   184  00337C  00                 	db	0
   185  00337D  00                 	db	0
   186                           
   187                           ;initializer for ValidateCmd@F10736
   188  00337E  53                 	db	83
   189  00337F  65                 	db	101
   190  003380  72                 	db	114
   191  003381  69                 	db	105
   192  003382  61                 	db	97
   193  003383  6C                 	db	108
   194  003384  20                 	db	32
   195  003385  4E                 	db	78
   196  003386  75                 	db	117
   197  003387  6D                 	db	109
   198  003388  62                 	db	98
   199  003389  65                 	db	101
   200  00338A  72                 	db	114
   201  00338B  00                 	db	0
   202  00338C  00                 	db	0
   203  00338D  00                 	db	0
   204  00338E  00                 	db	0
   205  00338F  00                 	db	0
   206  003390  00                 	db	0
   207  003391  00                 	db	0
   208                           
   209                           ;initializer for _MB301xx
   210  003392  4150               	dw	16720
   211  003394  3030               	dw	12336
   212  003396  3036               	dw	12342
   213  003398  3033               	dw	12339
   214  00339A  3033               	dw	12339
   215  00339C  2D30               	dw	11568
   216  00339E  3200               	dw	12800
   217                           
   218                           ;initializer for _MB304xx
   219  0033A0  4155               	dw	16725
   220  0033A2  4720               	dw	18208
   221  0033A4  3039               	dw	12345
   222  0033A6  3230               	dw	12848
   223  0033A8  3231               	dw	12849
   224                           
   225                           ;initializer for _MB303xx
   226  0033AA  3132               	dw	12594
   227  0033AC  3334               	dw	13108
   228  0033AE  3536               	dw	13622
   229  0033B0  3738               	dw	14136
   230  0033B2  3930               	dw	14640
   231                           
   232                           ;initializer for stoa@F1139
   233  0033B4  28                 	db	40
   234  0033B5  6E                 	db	110
   235  0033B6  75                 	db	117
   236  0033B7  6C                 	db	108
   237  0033B8  6C                 	db	108
   238  0033B9  29                 	db	41
   239  0033BA  00                 	db	0
   240                           
   241                           ;initializer for _MB307xx
   242  0033BB  045A               	dw	1114
   243  0033BD  00F1               	dw	241
   244  0033BF  01C4               	dw	452
   245                           
   246                           ;initializer for _MB305xx
   247  0033C1  3137               	dw	12599
   248  0033C3  3335               	dw	13109
   249  0033C5  3439               	dw	13369
   250                           
   251                           ;initializer for _MB306xx
   252  0033C7  004D               	dw	77
   253  0033C9  3030               	dw	12336
   254                           
   255                           ;initializer for ReadRX232@F10718
   256  0033CB  5A                 	db	90
   257  0033CC  00                 	db	0
   258                           
   259                           ;initializer for _ByteLo
   260  0033CD  00FF               	dw	255
   261                           
   262                           ;initializer for _MBResCRC
   263  0033CF  FFFF               	dw	65535
   264                           
   265                           ;initializer for _ExpectedBytes
   266  0033D1  0008               	dw	8
   267                           
   268                           ;initializer for _MB302xx
   269  0033D3  0004               	dw	4
   270                           
   271                           	psect	idataBANK2
   272  003562                     __pidataBANK2:
   273                           	opt callstack 0
   274                           
   275                           ;initializer for ValidateCmd@F10742
   276  003562  52                 	db	82
   277  003563  65                 	db	101
   278  003564  76                 	db	118
   279  003565  69                 	db	105
   280  003566  73                 	db	115
   281  003567  69                 	db	105
   282  003568  6F                 	db	111
   283  003569  6E                 	db	110
   284  00356A  00                 	db	0
   285  00356B  00                 	db	0
   286  00356C  00                 	db	0
   287  00356D  00                 	db	0
   288  00356E  00                 	db	0
   289  00356F  00                 	db	0
   290  003570  00                 	db	0
   291  003571  00                 	db	0
   292  003572  00                 	db	0
   293  003573  00                 	db	0
   294  003574  00                 	db	0
   295  003575  00                 	db	0
   296                           
   297                           ;initializer for _MBRespon
   298  003576  FF                 	db	255
   299  003577  00                 	db	0
   300  003578  00                 	db	0
   301  003579  00                 	db	0
   302  00357A  00                 	db	0
   303  00357B  00                 	db	0
   304  00357C  00                 	db	0
   305  00357D  00                 	db	0
   306  00357E  00                 	db	0
   307  00357F  00                 	db	0
   308  003580  00                 	db	0
   309  003581  00                 	db	0
   310  003582  00                 	db	0
   311  003583  00                 	db	0
   312  003584  00                 	db	0
   313  003585  00                 	db	0
   314  003586  00                 	db	0
   315  003587  00                 	db	0
   316  003588  00                 	db	0
   317  003589  00                 	db	0
   318  00358A  00                 	db	0
   319  00358B  00                 	db	0
   320  00358C  00                 	db	0
   321  00358D  00                 	db	0
   322  00358E  00                 	db	0
   323  00358F  00                 	db	0
   324  003590  00                 	db	0
   325  003591  00                 	db	0
   326  003592  00                 	db	0
   327  003593  00                 	db	0
   328  003594  00                 	db	0
   329  003595  00                 	db	0
   330  003596  00                 	db	0
   331  003597  00                 	db	0
   332  003598  00                 	db	0
   333  003599  00                 	db	0
   334  00359A  00                 	db	0
   335  00359B  00                 	db	0
   336  00359C  00                 	db	0
   337  00359D  00                 	db	0
   338  00359E  00                 	db	0
   339  00359F  00                 	db	0
   340  0035A0  00                 	db	0
   341  0035A1  00                 	db	0
   342  0035A2  00                 	db	0
   343  0035A3  00                 	db	0
   344  0035A4  00                 	db	0
   345  0035A5  00                 	db	0
   346  0035A6  00                 	db	0
   347  0035A7  00                 	db	0
   348  0035A8  00                 	db	0
   349  0035A9  00                 	db	0
   350  0035AA  00                 	db	0
   351  0035AB  00                 	db	0
   352  0035AC  00                 	db	0
   353  0035AD  00                 	db	0
   354  0035AE  00                 	db	0
   355  0035AF  00                 	db	0
   356  0035B0  00                 	db	0
   357  0035B1  00                 	db	0
   358  0035B2  00                 	db	0
   359  0035B3  00                 	db	0
   360  0035B4  00                 	db	0
   361  0035B5  00                 	db	0
   362  0035B6  00                 	db	0
   363  0035B7  00                 	db	0
   364  0035B8  00                 	db	0
   365  0035B9  00                 	db	0
   366  0035BA  00                 	db	0
   367  0035BB  00                 	db	0
   368  0035BC  00                 	db	0
   369  0035BD  00                 	db	0
   370  0035BE  00                 	db	0
   371  0035BF  00                 	db	0
   372  0035C0  00                 	db	0
   373                           
   374                           	psect	idataBANK3
   375  003A28                     __pidataBANK3:
   376                           	opt callstack 0
   377                           
   378                           ;initializer for _MB300xx
   379  003A28  0001               	dw	1
   380  003A2A  0002               	dw	2
   381  003A2C  0003               	dw	3
   382  003A2E  0004               	dw	4
   383  003A30  0005               	dw	5
   384  003A32  0006               	dw	6
   385  003A34  0007               	dw	7
   386  003A36  0008               	dw	8
   387  003A38  0009               	dw	9
   388  003A3A  000A               	dw	10
   389  003A3C  000B               	dw	11
   390  003A3E  000C               	dw	12
   391  003A40  000D               	dw	13
   392  003A42  000E               	dw	14
   393  003A44  000F               	dw	15
   394  003A46  0010               	dw	16
   395  003A48  0011               	dw	17
   396  003A4A  0012               	dw	18
   397  003A4C  0013               	dw	19
   398  003A4E  0014               	dw	20
   399  003A50  0015               	dw	21
   400  003A52  0016               	dw	22
   401  003A54  0017               	dw	23
   402  003A56  0018               	dw	24
   403  003A58  0019               	dw	25
   404  003A5A  001A               	dw	26
   405  003A5C  001B               	dw	27
   406  003A5E  001C               	dw	28
   407  003A60  001D               	dw	29
   408  003A62  001E               	dw	30
   409  003A64  001F               	dw	31
   410  003A66  0020               	dw	32
   411                           
   412                           	psect	idataBANK4
   413  003A68                     __pidataBANK4:
   414                           	opt callstack 0
   415                           
   416                           ;initializer for _MB400xx
   417  003A68  0020               	dw	32
   418  003A6A  001F               	dw	31
   419  003A6C  001E               	dw	30
   420  003A6E  001D               	dw	29
   421  003A70  001C               	dw	28
   422  003A72  001B               	dw	27
   423  003A74  001A               	dw	26
   424  003A76  0019               	dw	25
   425  003A78  0018               	dw	24
   426  003A7A  0017               	dw	23
   427  003A7C  0016               	dw	22
   428  003A7E  0015               	dw	21
   429  003A80  0014               	dw	20
   430  003A82  0013               	dw	19
   431  003A84  0012               	dw	18
   432  003A86  0011               	dw	17
   433  003A88  0010               	dw	16
   434  003A8A  000F               	dw	15
   435  003A8C  000E               	dw	14
   436  003A8E  000D               	dw	13
   437  003A90  000C               	dw	12
   438  003A92  000B               	dw	11
   439  003A94  000A               	dw	10
   440  003A96  0009               	dw	9
   441  003A98  0008               	dw	8
   442  003A9A  0007               	dw	7
   443  003A9C  0006               	dw	6
   444  003A9E  0005               	dw	5
   445  003AA0  0004               	dw	4
   446  003AA2  0003               	dw	3
   447  003AA4  0002               	dw	2
   448  003AA6  0001               	dw	1
   449                           
   450                           	psect	nvBANK1
   451  0001DE                     __pnvBANK1:
   452                           	opt callstack 0
   453  0001DE                     _EUSART1_ErrorHandler:
   454                           	opt callstack 0
   455  0001DE                     	ds	2
   456  0001E0                     _EUSART1_OverrunErrorHandler:
   457                           	opt callstack 0
   458  0001E0                     	ds	2
   459  0001E2                     _EUSART1_FramingErrorHandler:
   460                           	opt callstack 0
   461  0001E2                     	ds	2
   462  0001E4                     _EUSART2_ErrorHandler:
   463                           	opt callstack 0
   464  0001E4                     	ds	2
   465  0001E6                     _EUSART2_OverrunErrorHandler:
   466                           	opt callstack 0
   467  0001E6                     	ds	2
   468  0001E8                     _EUSART2_FramingErrorHandler:
   469                           	opt callstack 0
   470  0001E8                     	ds	2
   471  0001EA                     _EUSART1_RxDefaultInterruptHandler:
   472                           	opt callstack 0
   473  0001EA                     	ds	2
   474  0001EC                     _EUSART1_TxDefaultInterruptHandler:
   475                           	opt callstack 0
   476  0001EC                     	ds	2
   477  0001EE                     _EUSART2_RxDefaultInterruptHandler:
   478                           	opt callstack 0
   479  0001EE                     	ds	2
   480  0001F0                     _EUSART2_TxDefaultInterruptHandler:
   481                           	opt callstack 0
   482  0001F0                     	ds	2
   483  0001F2                     _eusart1TxBufferRemaining:
   484                           	opt callstack 0
   485  0001F2                     	ds	1
   486  0001F3                     _eusart2TxBufferRemaining:
   487                           	opt callstack 0
   488  0001F3                     	ds	1
   489  0000                     _RC2REG	set	3737
   490  0000                     _RC2STAbits	set	3741
   491  0000                     _TX2REG	set	3738
   492  0000                     _TX2STAbits	set	3742
   493  0000                     _SP2BRGH	set	3740
   494  0000                     _SP2BRGL	set	3739
   495  0000                     _TX2STA	set	3742
   496  0000                     _RC2STA	set	3741
   497  0000                     _BAUD2CON	set	3743
   498  0000                     _PIR7bits	set	3793
   499  0000                     _PIR3bits	set	3789
   500  0000                     _PIE3bits	set	3781
   501  0000                     _PMD5	set	3814
   502  0000                     _PMD4	set	3813
   503  0000                     _PMD3	set	3812
   504  0000                     _PMD2	set	3811
   505  0000                     _PMD1	set	3810
   506  0000                     _PMD0	set	3809
   507  0000                     _OSCTUNE	set	3805
   508  0000                     _OSCFRQ	set	3806
   509  0000                     _OSCEN	set	3804
   510  0000                     _OSCCON3	set	3802
   511  0000                     _OSCCON1	set	3800
   512  0000                     _RX2PPS	set	3725
   513  0000                     _RC6PPS	set	3837
   514  0000                     _RB6PPS	set	3829
   515  0000                     _RX1PPS	set	3765
   516  0000                     _INLVLE	set	3882
   517  0000                     _INLVLD	set	3874
   518  0000                     _INLVLC	set	3869
   519  0000                     _INLVLB	set	3861
   520  0000                     _INLVLA	set	3853
   521  0000                     _SLRCONE	set	3883
   522  0000                     _SLRCOND	set	3875
   523  0000                     _SLRCONC	set	3870
   524  0000                     _SLRCONB	set	3862
   525  0000                     _SLRCONA	set	3854
   526  0000                     _ODCOND	set	3876
   527  0000                     _ODCONC	set	3871
   528  0000                     _ODCONB	set	3863
   529  0000                     _ODCONA	set	3855
   530  0000                     _ODCONE	set	3884
   531  0000                     _WPUC	set	3872
   532  0000                     _WPUA	set	3856
   533  0000                     _WPUB	set	3864
   534  0000                     _WPUE	set	3885
   535  0000                     _WPUD	set	3877
   536  0000                     _ANSELA	set	3857
   537  0000                     _ANSELE	set	3886
   538  0000                     _ANSELB	set	3865
   539  0000                     _ANSELC	set	3873
   540  0000                     _ANSELD	set	3878
   541  0000                     _LATDbits	set	3974
   542  0000                     _LATAbits	set	3971
   543  0000                     _RC1REG	set	3993
   544  0000                     _RC1STAbits	set	3997
   545  0000                     _TX1REG	set	3994
   546  0000                     _TX1STAbits	set	3998
   547  0000                     _SP1BRGH	set	3996
   548  0000                     _SP1BRGL	set	3995
   549  0000                     _TX1STA	set	3998
   550  0000                     _RC1STA	set	3997
   551  0000                     _BAUD1CON	set	3999
   552  0000                     _NVMDAT	set	3968
   553  0000                     _NVMADRL	set	3966
   554  0000                     _NVMADRH	set	3967
   555  0000                     _NVMCON2	set	3970
   556  0000                     _TABLAT	set	4085
   557  0000                     _TBLPTRL	set	4086
   558  0000                     _TBLPTRH	set	4087
   559  0000                     _TBLPTRU	set	4088
   560  0000                     _NVMCON1bits	set	3969
   561  0000                     _INTCONbits	set	4082
   562  0000                     _TRISD	set	3979
   563  0000                     _TRISC	set	3978
   564  0000                     _TRISB	set	3977
   565  0000                     _TRISA	set	3976
   566  0000                     _TRISE	set	3980
   567  0000                     _LATC	set	3973
   568  0000                     _LATB	set	3972
   569  0000                     _LATA	set	3971
   570  0000                     _LATD	set	3974
   571  0000                     _LATE	set	3975
   572                           
   573                           	psect	mediumconst
   574  00F874                     __pmediumconst:
   575                           	opt callstack 0
   576  00F874  00                 	db	0
   577  00F875                     STR_58:
   578                           
   579                           ; BSR set to: 0
   580  00F875  20                 	db	32
   581  00F876  20                 	db	32
   582  00F877  20                 	db	32
   583  00F878  20                 	db	32
   584  00F879  20                 	db	32
   585  00F87A  20                 	db	32
   586  00F87B  41                 	db	65	;'A'
   587  00F87C  64                 	db	100	;'d'
   588  00F87D  64                 	db	100	;'d'
   589  00F87E  20                 	db	32
   590  00F87F  30                 	db	48	;'0'
   591  00F880  78                 	db	120	;'x'
   592  00F881  30                 	db	48	;'0'
   593  00F882  30                 	db	48	;'0'
   594  00F883  30                 	db	48	;'0'
   595  00F884  30                 	db	48	;'0'
   596  00F885  20                 	db	32
   597  00F886  74                 	db	116	;'t'
   598  00F887  6F                 	db	111	;'o'
   599  00F888  20                 	db	32
   600  00F889  30                 	db	48	;'0'
   601  00F88A  78                 	db	120	;'x'
   602  00F88B  30                 	db	48	;'0'
   603  00F88C  30                 	db	48	;'0'
   604  00F88D  33                 	db	51	;'3'
   605  00F88E  31                 	db	49	;'1'
   606  00F88F  20                 	db	32
   607  00F890  2D                 	db	45
   608  00F891  20                 	db	32
   609  00F892  33                 	db	51	;'3'
   610  00F893  32                 	db	50	;'2'
   611  00F894  78                 	db	120	;'x'
   612  00F895  20                 	db	32
   613  00F896  43                 	db	67	;'C'
   614  00F897  69                 	db	105	;'i'
   615  00F898  72                 	db	114	;'r'
   616  00F899  63                 	db	99	;'c'
   617  00F89A  75                 	db	117	;'u'
   618  00F89B  69                 	db	105	;'i'
   619  00F89C  74                 	db	116	;'t'
   620  00F89D  20                 	db	32
   621  00F89E  53                 	db	83	;'S'
   622  00F89F  65                 	db	101	;'e'
   623  00F8A0  74                 	db	116	;'t'
   624  00F8A1  20                 	db	32
   625  00F8A2  53                 	db	83	;'S'
   626  00F8A3  74                 	db	116	;'t'
   627  00F8A4  61                 	db	97	;'a'
   628  00F8A5  74                 	db	116	;'t'
   629  00F8A6  75                 	db	117	;'u'
   630  00F8A7  73                 	db	115	;'s'
   631  00F8A8  20                 	db	32
   632  00F8A9  20                 	db	32
   633  00F8AA  28                 	db	40
   634  00F8AB  6C                 	db	108	;'l'
   635  00F8AC  6F                 	db	111	;'o'
   636  00F8AD  77                 	db	119	;'w'
   637  00F8AE  65                 	db	101	;'e'
   638  00F8AF  72                 	db	114	;'r'
   639  00F8B0  20                 	db	32
   640  00F8B1  38                 	db	56	;'8'
   641  00F8B2  62                 	db	98	;'b'
   642  00F8B3  69                 	db	105	;'i'
   643  00F8B4  74                 	db	116	;'t'
   644  00F8B5  73                 	db	115	;'s'
   645  00F8B6  20                 	db	32
   646  00F8B7  6F                 	db	111	;'o'
   647  00F8B8  6E                 	db	110	;'n'
   648  00F8B9  6C                 	db	108	;'l'
   649  00F8BA  79                 	db	121	;'y'
   650  00F8BB  29                 	db	41
   651  00F8BC  0D                 	db	13
   652  00F8BD  0A                 	db	10
   653  00F8BE  0A                 	db	10
   654  00F8BF  00                 	db	0
   655  00F8C0                     STR_49:
   656                           
   657                           ; BSR set to: 0
   658  00F8C0  20                 	db	32
   659  00F8C1  20                 	db	32
   660  00F8C2  20                 	db	32
   661  00F8C3  20                 	db	32
   662  00F8C4  20                 	db	32
   663  00F8C5  20                 	db	32
   664  00F8C6  41                 	db	65	;'A'
   665  00F8C7  64                 	db	100	;'d'
   666  00F8C8  64                 	db	100	;'d'
   667  00F8C9  20                 	db	32
   668  00F8CA  30                 	db	48	;'0'
   669  00F8CB  78                 	db	120	;'x'
   670  00F8CC  30                 	db	48	;'0'
   671  00F8CD  30                 	db	48	;'0'
   672  00F8CE  30                 	db	48	;'0'
   673  00F8CF  30                 	db	48	;'0'
   674  00F8D0  20                 	db	32
   675  00F8D1  74                 	db	116	;'t'
   676  00F8D2  6F                 	db	111	;'o'
   677  00F8D3  20                 	db	32
   678  00F8D4  30                 	db	48	;'0'
   679  00F8D5  78                 	db	120	;'x'
   680  00F8D6  30                 	db	48	;'0'
   681  00F8D7  30                 	db	48	;'0'
   682  00F8D8  33                 	db	51	;'3'
   683  00F8D9  31                 	db	49	;'1'
   684  00F8DA  20                 	db	32
   685  00F8DB  2D                 	db	45
   686  00F8DC  20                 	db	32
   687  00F8DD  33                 	db	51	;'3'
   688  00F8DE  32                 	db	50	;'2'
   689  00F8DF  78                 	db	120	;'x'
   690  00F8E0  20                 	db	32
   691  00F8E1  43                 	db	67	;'C'
   692  00F8E2  69                 	db	105	;'i'
   693  00F8E3  72                 	db	114	;'r'
   694  00F8E4  63                 	db	99	;'c'
   695  00F8E5  75                 	db	117	;'u'
   696  00F8E6  69                 	db	105	;'i'
   697  00F8E7  74                 	db	116	;'t'
   698  00F8E8  20                 	db	32
   699  00F8E9  47                 	db	71	;'G'
   700  00F8EA  65                 	db	101	;'e'
   701  00F8EB  74                 	db	116	;'t'
   702  00F8EC  20                 	db	32
   703  00F8ED  53                 	db	83	;'S'
   704  00F8EE  74                 	db	116	;'t'
   705  00F8EF  61                 	db	97	;'a'
   706  00F8F0  74                 	db	116	;'t'
   707  00F8F1  75                 	db	117	;'u'
   708  00F8F2  73                 	db	115	;'s'
   709  00F8F3  20                 	db	32
   710  00F8F4  28                 	db	40
   711  00F8F5  6C                 	db	108	;'l'
   712  00F8F6  6F                 	db	111	;'o'
   713  00F8F7  77                 	db	119	;'w'
   714  00F8F8  65                 	db	101	;'e'
   715  00F8F9  72                 	db	114	;'r'
   716  00F8FA  20                 	db	32
   717  00F8FB  38                 	db	56	;'8'
   718  00F8FC  62                 	db	98	;'b'
   719  00F8FD  69                 	db	105	;'i'
   720  00F8FE  74                 	db	116	;'t'
   721  00F8FF  73                 	db	115	;'s'
   722  00F900  20                 	db	32
   723  00F901  6F                 	db	111	;'o'
   724  00F902  6E                 	db	110	;'n'
   725  00F903  6C                 	db	108	;'l'
   726  00F904  79                 	db	121	;'y'
   727  00F905  29                 	db	41
   728  00F906  0D                 	db	13
   729  00F907  0A                 	db	10
   730  00F908  00                 	db	0
   731  00F909                     STR_67:
   732                           
   733                           ; BSR set to: 0
   734  00F909  43                 	db	67	;'C'
   735  00F90A  6C                 	db	108	;'l'
   736  00F90B  65                 	db	101	;'e'
   737  00F90C  61                 	db	97	;'a'
   738  00F90D  72                 	db	114	;'r'
   739  00F90E  69                 	db	105	;'i'
   740  00F90F  6E                 	db	110	;'n'
   741  00F910  67                 	db	103	;'g'
   742  00F911  20                 	db	32
   743  00F912  45                 	db	69	;'E'
   744  00F913  45                 	db	69	;'E'
   745  00F914  50                 	db	80	;'P'
   746  00F915  52                 	db	82	;'R'
   747  00F916  4F                 	db	79	;'O'
   748  00F917  4D                 	db	77	;'M'
   749  00F918  20                 	db	32
   750  00F919  66                 	db	102	;'f'
   751  00F91A  72                 	db	114	;'r'
   752  00F91B  6F                 	db	111	;'o'
   753  00F91C  6D                 	db	109	;'m'
   754  00F91D  20                 	db	32
   755  00F91E  41                 	db	65	;'A'
   756  00F91F  64                 	db	100	;'d'
   757  00F920  64                 	db	100	;'d'
   758  00F921  72                 	db	114	;'r'
   759  00F922  65                 	db	101	;'e'
   760  00F923  73                 	db	115	;'s'
   761  00F924  73                 	db	115	;'s'
   762  00F925  3A                 	db	58	;':'
   763  00F926  20                 	db	32
   764  00F927  30                 	db	48	;'0'
   765  00F928  78                 	db	120	;'x'
   766  00F929  25                 	db	37
   767  00F92A  30                 	db	48	;'0'
   768  00F92B  34                 	db	52	;'4'
   769  00F92C  78                 	db	120	;'x'
   770  00F92D  20                 	db	32
   771  00F92E  66                 	db	102	;'f'
   772  00F92F  6F                 	db	111	;'o'
   773  00F930  72                 	db	114	;'r'
   774  00F931  20                 	db	32
   775  00F932  6E                 	db	110	;'n'
   776  00F933  75                 	db	117	;'u'
   777  00F934  6D                 	db	109	;'m'
   778  00F935  20                 	db	32
   779  00F936  62                 	db	98	;'b'
   780  00F937  79                 	db	121	;'y'
   781  00F938  74                 	db	116	;'t'
   782  00F939  65                 	db	101	;'e'
   783  00F93A  73                 	db	115	;'s'
   784  00F93B  3A                 	db	58	;':'
   785  00F93C  20                 	db	32
   786  00F93D  25                 	db	37
   787  00F93E  69                 	db	105	;'i'
   788  00F93F  20                 	db	32
   789  00F940  0D                 	db	13
   790  00F941  0A                 	db	10
   791  00F942  00                 	db	0
   792  00F943                     STR_56:
   793                           
   794                           ; BSR set to: 0
   795  00F943  20                 	db	32
   796  00F944  20                 	db	32
   797  00F945  20                 	db	32
   798  00F946  20                 	db	32
   799  00F947  20                 	db	32
   800  00F948  20                 	db	32
   801  00F949  41                 	db	65	;'A'
   802  00F94A  64                 	db	100	;'d'
   803  00F94B  64                 	db	100	;'d'
   804  00F94C  20                 	db	32
   805  00F94D  30                 	db	48	;'0'
   806  00F94E  78                 	db	120	;'x'
   807  00F94F  30                 	db	48	;'0'
   808  00F950  37                 	db	55	;'7'
   809  00F951  30                 	db	48	;'0'
   810  00F952  30                 	db	48	;'0'
   811  00F953  20                 	db	32
   812  00F954  74                 	db	116	;'t'
   813  00F955  6F                 	db	111	;'o'
   814  00F956  20                 	db	32
   815  00F957  30                 	db	48	;'0'
   816  00F958  78                 	db	120	;'x'
   817  00F959  30                 	db	48	;'0'
   818  00F95A  37                 	db	55	;'7'
   819  00F95B  30                 	db	48	;'0'
   820  00F95C  32                 	db	50	;'2'
   821  00F95D  20                 	db	32
   822  00F95E  2D                 	db	45
   823  00F95F  20                 	db	32
   824  00F960  33                 	db	51	;'3'
   825  00F961  78                 	db	120	;'x'
   826  00F962  20                 	db	32
   827  00F963  41                 	db	65	;'A'
   828  00F964  6E                 	db	110	;'n'
   829  00F965  61                 	db	97	;'a'
   830  00F966  6C                 	db	108	;'l'
   831  00F967  6F                 	db	111	;'o'
   832  00F968  67                 	db	103	;'g'
   833  00F969  75                 	db	117	;'u'
   834  00F96A  65                 	db	101	;'e'
   835  00F96B  20                 	db	32
   836  00F96C  49                 	db	73	;'I'
   837  00F96D  6E                 	db	110	;'n'
   838  00F96E  70                 	db	112	;'p'
   839  00F96F  75                 	db	117	;'u'
   840  00F970  74                 	db	116	;'t'
   841  00F971  73                 	db	115	;'s'
   842  00F972  20                 	db	32
   843  00F973  2D                 	db	45
   844  00F974  20                 	db	32
   845  00F975  57                 	db	87	;'W'
   846  00F976  49                 	db	73	;'I'
   847  00F977  50                 	db	80	;'P'
   848  00F978  0D                 	db	13
   849  00F979  0A                 	db	10
   850  00F97A  0A                 	db	10
   851  00F97B  00                 	db	0
   852  00F97C                     STR_55:
   853                           
   854                           ; BSR set to: 0
   855  00F97C  20                 	db	32
   856  00F97D  20                 	db	32
   857  00F97E  20                 	db	32
   858  00F97F  20                 	db	32
   859  00F980  20                 	db	32
   860  00F981  20                 	db	32
   861  00F982  41                 	db	65	;'A'
   862  00F983  64                 	db	100	;'d'
   863  00F984  64                 	db	100	;'d'
   864  00F985  20                 	db	32
   865  00F986  30                 	db	48	;'0'
   866  00F987  78                 	db	120	;'x'
   867  00F988  30                 	db	48	;'0'
   868  00F989  36                 	db	54	;'6'
   869  00F98A  30                 	db	48	;'0'
   870  00F98B  30                 	db	48	;'0'
   871  00F98C  20                 	db	32
   872  00F98D  74                 	db	116	;'t'
   873  00F98E  6F                 	db	111	;'o'
   874  00F98F  20                 	db	32
   875  00F990  30                 	db	48	;'0'
   876  00F991  78                 	db	120	;'x'
   877  00F992  30                 	db	48	;'0'
   878  00F993  36                 	db	54	;'6'
   879  00F994  30                 	db	48	;'0'
   880  00F995  31                 	db	49	;'1'
   881  00F996  20                 	db	32
   882  00F997  2D                 	db	45
   883  00F998  20                 	db	32
   884  00F999  43                 	db	67	;'C'
   885  00F99A  6F                 	db	111	;'o'
   886  00F99B  6D                 	db	109	;'m'
   887  00F99C  70                 	db	112	;'p'
   888  00F99D  69                 	db	105	;'i'
   889  00F99E  6C                 	db	108	;'l'
   890  00F99F  65                 	db	101	;'e'
   891  00F9A0  72                 	db	114	;'r'
   892  00F9A1  20                 	db	32
   893  00F9A2  56                 	db	86	;'V'
   894  00F9A3  65                 	db	101	;'e'
   895  00F9A4  72                 	db	114	;'r'
   896  00F9A5  73                 	db	115	;'s'
   897  00F9A6  69                 	db	105	;'i'
   898  00F9A7  6F                 	db	111	;'o'
   899  00F9A8  6E                 	db	110	;'n'
   900  00F9A9  20                 	db	32
   901  00F9AA  2D                 	db	45
   902  00F9AB  20                 	db	32
   903  00F9AC  57                 	db	87	;'W'
   904  00F9AD  49                 	db	73	;'I'
   905  00F9AE  50                 	db	80	;'P'
   906  00F9AF  0D                 	db	13
   907  00F9B0  0A                 	db	10
   908  00F9B1  00                 	db	0
   909  00F9B2                     STR_8:
   910                           
   911                           ; BSR set to: 0
   912  00F9B2  43                 	db	67	;'C'
   913  00F9B3  6F                 	db	111	;'o'
   914  00F9B4  6D                 	db	109	;'m'
   915  00F9B5  70                 	db	112	;'p'
   916  00F9B6  6C                 	db	108	;'l'
   917  00F9B7  65                 	db	101	;'e'
   918  00F9B8  74                 	db	116	;'t'
   919  00F9B9  65                 	db	101	;'e'
   920  00F9BA  64                 	db	100	;'d'
   921  00F9BB  20                 	db	32
   922  00F9BC  41                 	db	65	;'A'
   923  00F9BD  64                 	db	100	;'d'
   924  00F9BE  64                 	db	100	;'d'
   925  00F9BF  69                 	db	105	;'i'
   926  00F9C0  6E                 	db	110	;'n'
   927  00F9C1  67                 	db	103	;'g'
   928  00F9C2  20                 	db	32
   929  00F9C3  72                 	db	114	;'r'
   930  00F9C4  78                 	db	120	;'x'
   931  00F9C5  44                 	db	68	;'D'
   932  00F9C6  61                 	db	97	;'a'
   933  00F9C7  74                 	db	116	;'t'
   934  00F9C8  61                 	db	97	;'a'
   935  00F9C9  20                 	db	32
   936  00F9CA  42                 	db	66	;'B'
   937  00F9CB  75                 	db	117	;'u'
   938  00F9CC  66                 	db	102	;'f'
   939  00F9CD  66                 	db	102	;'f'
   940  00F9CE  65                 	db	101	;'e'
   941  00F9CF  72                 	db	114	;'r'
   942  00F9D0  20                 	db	32
   943  00F9D1  74                 	db	116	;'t'
   944  00F9D2  6F                 	db	111	;'o'
   945  00F9D3  20                 	db	32
   946  00F9D4  4D                 	db	77	;'M'
   947  00F9D5  6F                 	db	111	;'o'
   948  00F9D6  64                 	db	100	;'d'
   949  00F9D7  62                 	db	98	;'b'
   950  00F9D8  75                 	db	117	;'u'
   951  00F9D9  73                 	db	115	;'s'
   952  00F9DA  44                 	db	68	;'D'
   953  00F9DB  61                 	db	97	;'a'
   954  00F9DC  74                 	db	116	;'t'
   955  00F9DD  61                 	db	97	;'a'
   956  00F9DE  20                 	db	32
   957  00F9DF  41                 	db	65	;'A'
   958  00F9E0  72                 	db	114	;'r'
   959  00F9E1  72                 	db	114	;'r'
   960  00F9E2  61                 	db	97	;'a'
   961  00F9E3  79                 	db	121	;'y'
   962  00F9E4  0D                 	db	13
   963  00F9E5  0A                 	db	10
   964  00F9E6  0A                 	db	10
   965  00F9E7  00                 	db	0
   966  00F9E8                     STR_57:
   967                           
   968                           ; BSR set to: 0
   969  00F9E8  20                 	db	32
   970  00F9E9  20                 	db	32
   971  00F9EA  20                 	db	32
   972  00F9EB  30                 	db	48	;'0'
   973  00F9EC  78                 	db	120	;'x'
   974  00F9ED  31                 	db	49	;'1'
   975  00F9EE  30                 	db	48	;'0'
   976  00F9EF  20                 	db	32
   977  00F9F0  2D                 	db	45
   978  00F9F1  20                 	db	32
   979  00F9F2  57                 	db	87	;'W'
   980  00F9F3  72                 	db	114	;'r'
   981  00F9F4  69                 	db	105	;'i'
   982  00F9F5  74                 	db	116	;'t'
   983  00F9F6  65                 	db	101	;'e'
   984  00F9F7  20                 	db	32
   985  00F9F8  4D                 	db	77	;'M'
   986  00F9F9  75                 	db	117	;'u'
   987  00F9FA  6C                 	db	108	;'l'
   988  00F9FB  74                 	db	116	;'t'
   989  00F9FC  69                 	db	105	;'i'
   990  00F9FD  70                 	db	112	;'p'
   991  00F9FE  6C                 	db	108	;'l'
   992  00F9FF  65                 	db	101	;'e'
   993  00FA00  20                 	db	32
   994  00FA01  52                 	db	82	;'R'
   995  00FA02  65                 	db	101	;'e'
   996  00FA03  67                 	db	103	;'g'
   997  00FA04  69                 	db	105	;'i'
   998  00FA05  73                 	db	115	;'s'
   999  00FA06  74                 	db	116	;'t'
  1000  00FA07  65                 	db	101	;'e'
  1001  00FA08  72                 	db	114	;'r'
  1002  00FA09  73                 	db	115	;'s'
  1003  00FA0A  20                 	db	32
  1004  00FA0B  28                 	db	40
  1005  00FA0C  4D                 	db	77	;'M'
  1006  00FA0D  61                 	db	97	;'a'
  1007  00FA0E  78                 	db	120	;'x'
  1008  00FA0F  20                 	db	32
  1009  00FA10  33                 	db	51	;'3'
  1010  00FA11  32                 	db	50	;'2'
  1011  00FA12  78                 	db	120	;'x'
  1012  00FA13  20                 	db	32
  1013  00FA14  31                 	db	49	;'1'
  1014  00FA15  36                 	db	54	;'6'
  1015  00FA16  62                 	db	98	;'b'
  1016  00FA17  69                 	db	105	;'i'
  1017  00FA18  74                 	db	116	;'t'
  1018  00FA19  29                 	db	41
  1019  00FA1A  0D                 	db	13
  1020  00FA1B  0A                 	db	10
  1021  00FA1C  00                 	db	0
  1022  00FA1D                     STR_54:
  1023                           
  1024                           ; BSR set to: 0
  1025  00FA1D  20                 	db	32
  1026  00FA1E  20                 	db	32
  1027  00FA1F  20                 	db	32
  1028  00FA20  20                 	db	32
  1029  00FA21  20                 	db	32
  1030  00FA22  20                 	db	32
  1031  00FA23  41                 	db	65	;'A'
  1032  00FA24  64                 	db	100	;'d'
  1033  00FA25  64                 	db	100	;'d'
  1034  00FA26  20                 	db	32
  1035  00FA27  30                 	db	48	;'0'
  1036  00FA28  78                 	db	120	;'x'
  1037  00FA29  30                 	db	48	;'0'
  1038  00FA2A  35                 	db	53	;'5'
  1039  00FA2B  30                 	db	48	;'0'
  1040  00FA2C  30                 	db	48	;'0'
  1041  00FA2D  20                 	db	32
  1042  00FA2E  74                 	db	116	;'t'
  1043  00FA2F  6F                 	db	111	;'o'
  1044  00FA30  20                 	db	32
  1045  00FA31  30                 	db	48	;'0'
  1046  00FA32  78                 	db	120	;'x'
  1047  00FA33  30                 	db	48	;'0'
  1048  00FA34  35                 	db	53	;'5'
  1049  00FA35  30                 	db	48	;'0'
  1050  00FA36  33                 	db	51	;'3'
  1051  00FA37  20                 	db	32
  1052  00FA38  2D                 	db	45
  1053  00FA39  20                 	db	32
  1054  00FA3A  43                 	db	67	;'C'
  1055  00FA3B  6F                 	db	111	;'o'
  1056  00FA3C  6D                 	db	109	;'m'
  1057  00FA3D  70                 	db	112	;'p'
  1058  00FA3E  69                 	db	105	;'i'
  1059  00FA3F  6C                 	db	108	;'l'
  1060  00FA40  65                 	db	101	;'e'
  1061  00FA41  20                 	db	32
  1062  00FA42  54                 	db	84	;'T'
  1063  00FA43  69                 	db	105	;'i'
  1064  00FA44  6D                 	db	109	;'m'
  1065  00FA45  65                 	db	101	;'e'
  1066  00FA46  20                 	db	32
  1067  00FA47  2D                 	db	45
  1068  00FA48  20                 	db	32
  1069  00FA49  57                 	db	87	;'W'
  1070  00FA4A  49                 	db	73	;'I'
  1071  00FA4B  50                 	db	80	;'P'
  1072  00FA4C  0D                 	db	13
  1073  00FA4D  0A                 	db	10
  1074  00FA4E  00                 	db	0
  1075  00FA4F                     STR_53:
  1076                           
  1077                           ; BSR set to: 0
  1078  00FA4F  20                 	db	32
  1079  00FA50  20                 	db	32
  1080  00FA51  20                 	db	32
  1081  00FA52  20                 	db	32
  1082  00FA53  20                 	db	32
  1083  00FA54  20                 	db	32
  1084  00FA55  41                 	db	65	;'A'
  1085  00FA56  64                 	db	100	;'d'
  1086  00FA57  64                 	db	100	;'d'
  1087  00FA58  20                 	db	32
  1088  00FA59  30                 	db	48	;'0'
  1089  00FA5A  78                 	db	120	;'x'
  1090  00FA5B  30                 	db	48	;'0'
  1091  00FA5C  34                 	db	52	;'4'
  1092  00FA5D  30                 	db	48	;'0'
  1093  00FA5E  30                 	db	48	;'0'
  1094  00FA5F  20                 	db	32
  1095  00FA60  74                 	db	116	;'t'
  1096  00FA61  6F                 	db	111	;'o'
  1097  00FA62  20                 	db	32
  1098  00FA63  30                 	db	48	;'0'
  1099  00FA64  78                 	db	120	;'x'
  1100  00FA65  30                 	db	48	;'0'
  1101  00FA66  34                 	db	52	;'4'
  1102  00FA67  30                 	db	48	;'0'
  1103  00FA68  34                 	db	52	;'4'
  1104  00FA69  20                 	db	32
  1105  00FA6A  2D                 	db	45
  1106  00FA6B  20                 	db	32
  1107  00FA6C  43                 	db	67	;'C'
  1108  00FA6D  6F                 	db	111	;'o'
  1109  00FA6E  6D                 	db	109	;'m'
  1110  00FA6F  70                 	db	112	;'p'
  1111  00FA70  69                 	db	105	;'i'
  1112  00FA71  6C                 	db	108	;'l'
  1113  00FA72  65                 	db	101	;'e'
  1114  00FA73  20                 	db	32
  1115  00FA74  44                 	db	68	;'D'
  1116  00FA75  61                 	db	97	;'a'
  1117  00FA76  74                 	db	116	;'t'
  1118  00FA77  65                 	db	101	;'e'
  1119  00FA78  20                 	db	32
  1120  00FA79  2D                 	db	45
  1121  00FA7A  20                 	db	32
  1122  00FA7B  57                 	db	87	;'W'
  1123  00FA7C  49                 	db	73	;'I'
  1124  00FA7D  50                 	db	80	;'P'
  1125  00FA7E  0D                 	db	13
  1126  00FA7F  0A                 	db	10
  1127  00FA80  00                 	db	0
  1128  00FA81                     STR_60:
  1129                           
  1130                           ; BSR set to: 0
  1131  00FA81  20                 	db	32
  1132  00FA82  20                 	db	32
  1133  00FA83  20                 	db	32
  1134  00FA84  3F                 	db	63	;'?'
  1135  00FA85  20                 	db	32
  1136  00FA86  2D                 	db	45
  1137  00FA87  20                 	db	32
  1138  00FA88  49                 	db	73	;'I'
  1139  00FA89  6E                 	db	110	;'n'
  1140  00FA8A  69                 	db	105	;'i'
  1141  00FA8B  74                 	db	116	;'t'
  1142  00FA8C  61                 	db	97	;'a'
  1143  00FA8D  6C                 	db	108	;'l'
  1144  00FA8E  69                 	db	105	;'i'
  1145  00FA8F  73                 	db	115	;'s'
  1146  00FA90  65                 	db	101	;'e'
  1147  00FA91  20                 	db	32
  1148  00FA92  61                 	db	97	;'a'
  1149  00FA93  6E                 	db	110	;'n'
  1150  00FA94  64                 	db	100	;'d'
  1151  00FA95  20                 	db	32
  1152  00FA96  64                 	db	100	;'d'
  1153  00FA97  69                 	db	105	;'i'
  1154  00FA98  73                 	db	115	;'s'
  1155  00FA99  70                 	db	112	;'p'
  1156  00FA9A  6C                 	db	108	;'l'
  1157  00FA9B  61                 	db	97	;'a'
  1158  00FA9C  79                 	db	121	;'y'
  1159  00FA9D  20                 	db	32
  1160  00FA9E  63                 	db	99	;'c'
  1161  00FA9F  61                 	db	97	;'a'
  1162  00FAA0  72                 	db	114	;'r'
  1163  00FAA1  64                 	db	100	;'d'
  1164  00FAA2  20                 	db	32
  1165  00FAA3  64                 	db	100	;'d'
  1166  00FAA4  65                 	db	101	;'e'
  1167  00FAA5  74                 	db	116	;'t'
  1168  00FAA6  61                 	db	97	;'a'
  1169  00FAA7  69                 	db	105	;'i'
  1170  00FAA8  6C                 	db	108	;'l'
  1171  00FAA9  73                 	db	115	;'s'
  1172  00FAAA  0D                 	db	13
  1173  00FAAB  0A                 	db	10
  1174  00FAAC  00                 	db	0
  1175  00FAAD                     STR_50:
  1176                           
  1177                           ; BSR set to: 0
  1178  00FAAD  20                 	db	32
  1179  00FAAE  20                 	db	32
  1180  00FAAF  20                 	db	32
  1181  00FAB0  20                 	db	32
  1182  00FAB1  20                 	db	32
  1183  00FAB2  20                 	db	32
  1184  00FAB3  41                 	db	65	;'A'
  1185  00FAB4  64                 	db	100	;'d'
  1186  00FAB5  64                 	db	100	;'d'
  1187  00FAB6  20                 	db	32
  1188  00FAB7  30                 	db	48	;'0'
  1189  00FAB8  78                 	db	120	;'x'
  1190  00FAB9  30                 	db	48	;'0'
  1191  00FABA  31                 	db	49	;'1'
  1192  00FABB  30                 	db	48	;'0'
  1193  00FABC  30                 	db	48	;'0'
  1194  00FABD  20                 	db	32
  1195  00FABE  74                 	db	116	;'t'
  1196  00FABF  6F                 	db	111	;'o'
  1197  00FAC0  20                 	db	32
  1198  00FAC1  30                 	db	48	;'0'
  1199  00FAC2  78                 	db	120	;'x'
  1200  00FAC3  30                 	db	48	;'0'
  1201  00FAC4  31                 	db	49	;'1'
  1202  00FAC5  30                 	db	48	;'0'
  1203  00FAC6  38                 	db	56	;'8'
  1204  00FAC7  20                 	db	32
  1205  00FAC8  2D                 	db	45
  1206  00FAC9  20                 	db	32
  1207  00FACA  50                 	db	80	;'P'
  1208  00FACB  61                 	db	97	;'a'
  1209  00FACC  72                 	db	114	;'r'
  1210  00FACD  74                 	db	116	;'t'
  1211  00FACE  20                 	db	32
  1212  00FACF  4E                 	db	78	;'N'
  1213  00FAD0  75                 	db	117	;'u'
  1214  00FAD1  6D                 	db	109	;'m'
  1215  00FAD2  62                 	db	98	;'b'
  1216  00FAD3  65                 	db	101	;'e'
  1217  00FAD4  72                 	db	114	;'r'
  1218  00FAD5  0D                 	db	13
  1219  00FAD6  0A                 	db	10
  1220  00FAD7  00                 	db	0
  1221  00FAD8                     STR_43:
  1222                           
  1223                           ; BSR set to: 0
  1224  00FAD8  43                 	db	67	;'C'
  1225  00FAD9  6F                 	db	111	;'o'
  1226  00FADA  6D                 	db	109	;'m'
  1227  00FADB  70                 	db	112	;'p'
  1228  00FADC  69                 	db	105	;'i'
  1229  00FADD  6C                 	db	108	;'l'
  1230  00FADE  65                 	db	101	;'e'
  1231  00FADF  64                 	db	100	;'d'
  1232  00FAE0  20                 	db	32
  1233  00FAE1  6F                 	db	111	;'o'
  1234  00FAE2  6E                 	db	110	;'n'
  1235  00FAE3  20                 	db	32
  1236  00FAE4  25                 	db	37
  1237  00FAE5  73                 	db	115	;'s'
  1238  00FAE6  20                 	db	32
  1239  00FAE7  61                 	db	97	;'a'
  1240  00FAE8  74                 	db	116	;'t'
  1241  00FAE9  20                 	db	32
  1242  00FAEA  25                 	db	37
  1243  00FAEB  73                 	db	115	;'s'
  1244  00FAEC  20                 	db	32
  1245  00FAED  62                 	db	98	;'b'
  1246  00FAEE  79                 	db	121	;'y'
  1247  00FAEF  20                 	db	32
  1248  00FAF0  58                 	db	88	;'X'
  1249  00FAF1  43                 	db	67	;'C'
  1250  00FAF2  38                 	db	56	;'8'
  1251  00FAF3  20                 	db	32
  1252  00FAF4  76                 	db	118	;'v'
  1253  00FAF5  65                 	db	101	;'e'
  1254  00FAF6  72                 	db	114	;'r'
  1255  00FAF7  73                 	db	115	;'s'
  1256  00FAF8  69                 	db	105	;'i'
  1257  00FAF9  6F                 	db	111	;'o'
  1258  00FAFA  6E                 	db	110	;'n'
  1259  00FAFB  20                 	db	32
  1260  00FAFC  25                 	db	37
  1261  00FAFD  75                 	db	117	;'u'
  1262  00FAFE  0D                 	db	13
  1263  00FAFF  0A                 	db	10
  1264  00FB00  0A                 	db	10
  1265  00FB01  00                 	db	0
  1266  00FB02                     STR_48:
  1267                           
  1268                           ; BSR set to: 0
  1269  00FB02  20                 	db	32
  1270  00FB03  20                 	db	32
  1271  00FB04  20                 	db	32
  1272  00FB05  30                 	db	48	;'0'
  1273  00FB06  78                 	db	120	;'x'
  1274  00FB07  30                 	db	48	;'0'
  1275  00FB08  33                 	db	51	;'3'
  1276  00FB09  20                 	db	32
  1277  00FB0A  2D                 	db	45
  1278  00FB0B  20                 	db	32
  1279  00FB0C  52                 	db	82	;'R'
  1280  00FB0D  65                 	db	101	;'e'
  1281  00FB0E  61                 	db	97	;'a'
  1282  00FB0F  64                 	db	100	;'d'
  1283  00FB10  20                 	db	32
  1284  00FB11  4D                 	db	77	;'M'
  1285  00FB12  75                 	db	117	;'u'
  1286  00FB13  6C                 	db	108	;'l'
  1287  00FB14  74                 	db	116	;'t'
  1288  00FB15  69                 	db	105	;'i'
  1289  00FB16  70                 	db	112	;'p'
  1290  00FB17  6C                 	db	108	;'l'
  1291  00FB18  65                 	db	101	;'e'
  1292  00FB19  20                 	db	32
  1293  00FB1A  31                 	db	49	;'1'
  1294  00FB1B  36                 	db	54	;'6'
  1295  00FB1C  62                 	db	98	;'b'
  1296  00FB1D  69                 	db	105	;'i'
  1297  00FB1E  74                 	db	116	;'t'
  1298  00FB1F  20                 	db	32
  1299  00FB20  52                 	db	82	;'R'
  1300  00FB21  65                 	db	101	;'e'
  1301  00FB22  67                 	db	103	;'g'
  1302  00FB23  69                 	db	105	;'i'
  1303  00FB24  73                 	db	115	;'s'
  1304  00FB25  74                 	db	116	;'t'
  1305  00FB26  65                 	db	101	;'e'
  1306  00FB27  72                 	db	114	;'r'
  1307  00FB28  73                 	db	115	;'s'
  1308  00FB29  0D                 	db	13
  1309  00FB2A  0A                 	db	10
  1310  00FB2B  00                 	db	0
  1311  00FB2C                     STR_52:
  1312                           
  1313                           ; BSR set to: 0
  1314  00FB2C  20                 	db	32
  1315  00FB2D  20                 	db	32
  1316  00FB2E  20                 	db	32
  1317  00FB2F  20                 	db	32
  1318  00FB30  20                 	db	32
  1319  00FB31  20                 	db	32
  1320  00FB32  41                 	db	65	;'A'
  1321  00FB33  64                 	db	100	;'d'
  1322  00FB34  64                 	db	100	;'d'
  1323  00FB35  20                 	db	32
  1324  00FB36  30                 	db	48	;'0'
  1325  00FB37  78                 	db	120	;'x'
  1326  00FB38  30                 	db	48	;'0'
  1327  00FB39  33                 	db	51	;'3'
  1328  00FB3A  30                 	db	48	;'0'
  1329  00FB3B  30                 	db	48	;'0'
  1330  00FB3C  20                 	db	32
  1331  00FB3D  74                 	db	116	;'t'
  1332  00FB3E  6F                 	db	111	;'o'
  1333  00FB3F  20                 	db	32
  1334  00FB40  30                 	db	48	;'0'
  1335  00FB41  78                 	db	120	;'x'
  1336  00FB42  30                 	db	48	;'0'
  1337  00FB43  33                 	db	51	;'3'
  1338  00FB44  30                 	db	48	;'0'
  1339  00FB45  34                 	db	52	;'4'
  1340  00FB46  20                 	db	32
  1341  00FB47  2D                 	db	45
  1342  00FB48  20                 	db	32
  1343  00FB49  52                 	db	82	;'R'
  1344  00FB4A  65                 	db	101	;'e'
  1345  00FB4B  76                 	db	118	;'v'
  1346  00FB4C  69                 	db	105	;'i'
  1347  00FB4D  73                 	db	115	;'s'
  1348  00FB4E  69                 	db	105	;'i'
  1349  00FB4F  6F                 	db	111	;'o'
  1350  00FB50  6E                 	db	110	;'n'
  1351  00FB51  0D                 	db	13
  1352  00FB52  0A                 	db	10
  1353  00FB53  00                 	db	0
  1354  00FB54                     STR_38:
  1355                           
  1356                           ; BSR set to: 0
  1357  00FB54  0D                 	db	13
  1358  00FB55  0A                 	db	10
  1359  00FB56  44                 	db	68	;'D'
  1360  00FB57  61                 	db	97	;'a'
  1361  00FB58  6E                 	db	110	;'n'
  1362  00FB59  20                 	db	32
  1363  00FB5A  61                 	db	97	;'a'
  1364  00FB5B  6E                 	db	110	;'n'
  1365  00FB5C  64                 	db	100	;'d'
  1366  00FB5D  20                 	db	32
  1367  00FB5E  53                 	db	83	;'S'
  1368  00FB5F  61                 	db	97	;'a'
  1369  00FB60  6D                 	db	109	;'m'
  1370  00FB61  27                 	db	39
  1371  00FB62  73                 	db	115	;'s'
  1372  00FB63  20                 	db	32
  1373  00FB64  4D                 	db	77	;'M'
  1374  00FB65  6F                 	db	111	;'o'
  1375  00FB66  64                 	db	100	;'d'
  1376  00FB67  62                 	db	98	;'b'
  1377  00FB68  75                 	db	117	;'u'
  1378  00FB69  73                 	db	115	;'s'
  1379  00FB6A  20                 	db	32
  1380  00FB6B  47                 	db	71	;'G'
  1381  00FB6C  50                 	db	80	;'P'
  1382  00FB6D  49                 	db	73	;'I'
  1383  00FB6E  4F                 	db	79	;'O'
  1384  00FB6F  20                 	db	32
  1385  00FB70  45                 	db	69	;'E'
  1386  00FB71  78                 	db	120	;'x'
  1387  00FB72  70                 	db	112	;'p'
  1388  00FB73  61                 	db	97	;'a'
  1389  00FB74  6E                 	db	110	;'n'
  1390  00FB75  73                 	db	115	;'s'
  1391  00FB76  69                 	db	105	;'i'
  1392  00FB77  6F                 	db	111	;'o'
  1393  00FB78  6E                 	db	110	;'n'
  1394  00FB79  0D                 	db	13
  1395  00FB7A  0A                 	db	10
  1396  00FB7B  00                 	db	0
  1397  00FB7C                     STR_68:
  1398                           
  1399                           ; BSR set to: 0
  1400  00FB7C  0D                 	db	13
  1401  00FB7D  0A                 	db	10
  1402  00FB7E  45                 	db	69	;'E'
  1403  00FB7F  6E                 	db	110	;'n'
  1404  00FB80  74                 	db	116	;'t'
  1405  00FB81  65                 	db	101	;'e'
  1406  00FB82  72                 	db	114	;'r'
  1407  00FB83  20                 	db	32
  1408  00FB84  63                 	db	99	;'c'
  1409  00FB85  61                 	db	97	;'a'
  1410  00FB86  72                 	db	114	;'r'
  1411  00FB87  64                 	db	100	;'d'
  1412  00FB88  20                 	db	32
  1413  00FB89  25                 	db	37
  1414  00FB8A  73                 	db	115	;'s'
  1415  00FB8B  20                 	db	32
  1416  00FB8C  28                 	db	40
  1417  00FB8D  6D                 	db	109	;'m'
  1418  00FB8E  61                 	db	97	;'a'
  1419  00FB8F  78                 	db	120	;'x'
  1420  00FB90  20                 	db	32
  1421  00FB91  25                 	db	37
  1422  00FB92  69                 	db	105	;'i'
  1423  00FB93  20                 	db	32
  1424  00FB94  63                 	db	99	;'c'
  1425  00FB95  68                 	db	104	;'h'
  1426  00FB96  61                 	db	97	;'a'
  1427  00FB97  72                 	db	114	;'r'
  1428  00FB98  61                 	db	97	;'a'
  1429  00FB99  63                 	db	99	;'c'
  1430  00FB9A  74                 	db	116	;'t'
  1431  00FB9B  65                 	db	101	;'e'
  1432  00FB9C  72                 	db	114	;'r'
  1433  00FB9D  73                 	db	115	;'s'
  1434  00FB9E  29                 	db	41
  1435  00FB9F  3A                 	db	58	;':'
  1436  00FBA0  20                 	db	32
  1437  00FBA1  00                 	db	0
  1438  00FBA2                     STR_61:
  1439                           
  1440                           ; BSR set to: 0
  1441  00FBA2  20                 	db	32
  1442  00FBA3  20                 	db	32
  1443  00FBA4  20                 	db	32
  1444  00FBA5  73                 	db	115	;'s'
  1445  00FBA6  65                 	db	101	;'e'
  1446  00FBA7  72                 	db	114	;'r'
  1447  00FBA8  69                 	db	105	;'i'
  1448  00FBA9  61                 	db	97	;'a'
  1449  00FBAA  6C                 	db	108	;'l'
  1450  00FBAB  20                 	db	32
  1451  00FBAC  2D                 	db	45
  1452  00FBAD  20                 	db	32
  1453  00FBAE  53                 	db	83	;'S'
  1454  00FBAF  65                 	db	101	;'e'
  1455  00FBB0  74                 	db	116	;'t'
  1456  00FBB1  20                 	db	32
  1457  00FBB2  63                 	db	99	;'c'
  1458  00FBB3  61                 	db	97	;'a'
  1459  00FBB4  72                 	db	114	;'r'
  1460  00FBB5  64                 	db	100	;'d'
  1461  00FBB6  20                 	db	32
  1462  00FBB7  73                 	db	115	;'s'
  1463  00FBB8  65                 	db	101	;'e'
  1464  00FBB9  72                 	db	114	;'r'
  1465  00FBBA  69                 	db	105	;'i'
  1466  00FBBB  61                 	db	97	;'a'
  1467  00FBBC  6C                 	db	108	;'l'
  1468  00FBBD  20                 	db	32
  1469  00FBBE  6E                 	db	110	;'n'
  1470  00FBBF  75                 	db	117	;'u'
  1471  00FBC0  6D                 	db	109	;'m'
  1472  00FBC1  62                 	db	98	;'b'
  1473  00FBC2  65                 	db	101	;'e'
  1474  00FBC3  72                 	db	114	;'r'
  1475  00FBC4  0D                 	db	13
  1476  00FBC5  0A                 	db	10
  1477  00FBC6  00                 	db	0
  1478  00FBC7                     STR_27:
  1479                           
  1480                           ; BSR set to: 0
  1481  00FBC7  0D                 	db	13
  1482  00FBC8  0A                 	db	10
  1483  00FBC9  52                 	db	82	;'R'
  1484  00FBCA  65                 	db	101	;'e'
  1485  00FBCB  63                 	db	99	;'c'
  1486  00FBCC  65                 	db	101	;'e'
  1487  00FBCD  69                 	db	105	;'i'
  1488  00FBCE  76                 	db	118	;'v'
  1489  00FBCF  65                 	db	101	;'e'
  1490  00FBD0  64                 	db	100	;'d'
  1491  00FBD1  20                 	db	32
  1492  00FBD2  4D                 	db	77	;'M'
  1493  00FBD3  6F                 	db	111	;'o'
  1494  00FBD4  64                 	db	100	;'d'
  1495  00FBD5  62                 	db	98	;'b'
  1496  00FBD6  75                 	db	117	;'u'
  1497  00FBD7  73                 	db	115	;'s'
  1498  00FBD8  20                 	db	32
  1499  00FBD9  43                 	db	67	;'C'
  1500  00FBDA  52                 	db	82	;'R'
  1501  00FBDB  43                 	db	67	;'C'
  1502  00FBDC  20                 	db	32
  1503  00FBDD  63                 	db	99	;'c'
  1504  00FBDE  68                 	db	104	;'h'
  1505  00FBDF  65                 	db	101	;'e'
  1506  00FBE0  63                 	db	99	;'c'
  1507  00FBE1  6B                 	db	107	;'k'
  1508  00FBE2  65                 	db	101	;'e'
  1509  00FBE3  64                 	db	100	;'d'
  1510  00FBE4  20                 	db	32
  1511  00FBE5  6F                 	db	111	;'o'
  1512  00FBE6  75                 	db	117	;'u'
  1513  00FBE7  74                 	db	116	;'t'
  1514  00FBE8  2E                 	db	46
  1515  00FBE9  0D                 	db	13
  1516  00FBEA  0A                 	db	10
  1517  00FBEB  00                 	db	0
  1518  00FBEC                     STR_47:
  1519                           
  1520                           ; BSR set to: 0
  1521  00FBEC  4D                 	db	77	;'M'
  1522  00FBED  6F                 	db	111	;'o'
  1523  00FBEE  64                 	db	100	;'d'
  1524  00FBEF  62                 	db	98	;'b'
  1525  00FBF0  75                 	db	117	;'u'
  1526  00FBF1  73                 	db	115	;'s'
  1527  00FBF2  20                 	db	32
  1528  00FBF3  46                 	db	70	;'F'
  1529  00FBF4  75                 	db	117	;'u'
  1530  00FBF5  6E                 	db	110	;'n'
  1531  00FBF6  63                 	db	99	;'c'
  1532  00FBF7  74                 	db	116	;'t'
  1533  00FBF8  69                 	db	105	;'i'
  1534  00FBF9  6F                 	db	111	;'o'
  1535  00FBFA  6E                 	db	110	;'n'
  1536  00FBFB  20                 	db	32
  1537  00FBFC  43                 	db	67	;'C'
  1538  00FBFD  6F                 	db	111	;'o'
  1539  00FBFE  64                 	db	100	;'d'
  1540  00FBFF  65                 	db	101	;'e'
  1541  00FC00  73                 	db	115	;'s'
  1542  00FC01  20                 	db	32
  1543  00FC02  53                 	db	83	;'S'
  1544  00FC03  75                 	db	117	;'u'
  1545  00FC04  70                 	db	112	;'p'
  1546  00FC05  70                 	db	112	;'p'
  1547  00FC06  6F                 	db	111	;'o'
  1548  00FC07  72                 	db	114	;'r'
  1549  00FC08  74                 	db	116	;'t'
  1550  00FC09  65                 	db	101	;'e'
  1551  00FC0A  64                 	db	100	;'d'
  1552  00FC0B  3A                 	db	58	;':'
  1553  00FC0C  0D                 	db	13
  1554  00FC0D  0A                 	db	10
  1555  00FC0E  0A                 	db	10
  1556  00FC0F  00                 	db	0
  1557  00FC10                     STR_13:
  1558                           
  1559                           ; BSR set to: 0
  1560  00FC10  63                 	db	99	;'c'
  1561  00FC11  72                 	db	114	;'r'
  1562  00FC12  63                 	db	99	;'c'
  1563  00FC13  48                 	db	72	;'H'
  1564  00FC14  69                 	db	105	;'i'
  1565  00FC15  67                 	db	103	;'g'
  1566  00FC16  68                 	db	104	;'h'
  1567  00FC17  3A                 	db	58	;':'
  1568  00FC18  20                 	db	32
  1569  00FC19  30                 	db	48	;'0'
  1570  00FC1A  78                 	db	120	;'x'
  1571  00FC1B  25                 	db	37
  1572  00FC1C  30                 	db	48	;'0'
  1573  00FC1D  32                 	db	50	;'2'
  1574  00FC1E  78                 	db	120	;'x'
  1575  00FC1F  20                 	db	32
  1576  00FC20  20                 	db	32
  1577  00FC21  63                 	db	99	;'c'
  1578  00FC22  72                 	db	114	;'r'
  1579  00FC23  63                 	db	99	;'c'
  1580  00FC24  4C                 	db	76	;'L'
  1581  00FC25  6F                 	db	111	;'o'
  1582  00FC26  77                 	db	119	;'w'
  1583  00FC27  3A                 	db	58	;':'
  1584  00FC28  20                 	db	32
  1585  00FC29  30                 	db	48	;'0'
  1586  00FC2A  78                 	db	120	;'x'
  1587  00FC2B  25                 	db	37
  1588  00FC2C  30                 	db	48	;'0'
  1589  00FC2D  32                 	db	50	;'2'
  1590  00FC2E  78                 	db	120	;'x'
  1591  00FC2F  20                 	db	32
  1592  00FC30  20                 	db	32
  1593  00FC31  0D                 	db	13
  1594  00FC32  0A                 	db	10
  1595  00FC33  00                 	db	0
  1596  00FC34                     STR_46:
  1597                           
  1598                           ; BSR set to: 0
  1599  00FC34  49                 	db	73	;'I'
  1600  00FC35  6E                 	db	110	;'n'
  1601  00FC36  69                 	db	105	;'i'
  1602  00FC37  74                 	db	116	;'t'
  1603  00FC38  61                 	db	97	;'a'
  1604  00FC39  6C                 	db	108	;'l'
  1605  00FC3A  69                 	db	105	;'i'
  1606  00FC3B  73                 	db	115	;'s'
  1607  00FC3C  61                 	db	97	;'a'
  1608  00FC3D  74                 	db	116	;'t'
  1609  00FC3E  69                 	db	105	;'i'
  1610  00FC3F  6F                 	db	111	;'o'
  1611  00FC40  6E                 	db	110	;'n'
  1612  00FC41  20                 	db	32
  1613  00FC42  43                 	db	67	;'C'
  1614  00FC43  6F                 	db	111	;'o'
  1615  00FC44  6D                 	db	109	;'m'
  1616  00FC45  70                 	db	112	;'p'
  1617  00FC46  6C                 	db	108	;'l'
  1618  00FC47  65                 	db	101	;'e'
  1619  00FC48  74                 	db	116	;'t'
  1620  00FC49  65                 	db	101	;'e'
  1621  00FC4A  20                 	db	32
  1622  00FC4B  2D                 	db	45
  1623  00FC4C  20                 	db	32
  1624  00FC4D  52                 	db	82	;'R'
  1625  00FC4E  65                 	db	101	;'e'
  1626  00FC4F  61                 	db	97	;'a'
  1627  00FC50  64                 	db	100	;'d'
  1628  00FC51  79                 	db	121	;'y'
  1629  00FC52  0D                 	db	13
  1630  00FC53  0A                 	db	10
  1631  00FC54  0A                 	db	10
  1632  00FC55  00                 	db	0
  1633  00FC56                     STR_10:
  1634                           
  1635                           ; BSR set to: 0
  1636  00FC56  0D                 	db	13
  1637  00FC57  0A                 	db	10
  1638  00FC58  4D                 	db	77	;'M'
  1639  00FC59  6F                 	db	111	;'o'
  1640  00FC5A  64                 	db	100	;'d'
  1641  00FC5B  62                 	db	98	;'b'
  1642  00FC5C  75                 	db	117	;'u'
  1643  00FC5D  73                 	db	115	;'s'
  1644  00FC5E  20                 	db	32
  1645  00FC5F  44                 	db	68	;'D'
  1646  00FC60  61                 	db	97	;'a'
  1647  00FC61  74                 	db	116	;'t'
  1648  00FC62  61                 	db	97	;'a'
  1649  00FC63  20                 	db	32
  1650  00FC64  43                 	db	67	;'C'
  1651  00FC65  61                 	db	97	;'a'
  1652  00FC66  70                 	db	112	;'p'
  1653  00FC67  74                 	db	116	;'t'
  1654  00FC68  75                 	db	117	;'u'
  1655  00FC69  72                 	db	114	;'r'
  1656  00FC6A  65                 	db	101	;'e'
  1657  00FC6B  20                 	db	32
  1658  00FC6C  43                 	db	67	;'C'
  1659  00FC6D  6F                 	db	111	;'o'
  1660  00FC6E  6D                 	db	109	;'m'
  1661  00FC6F  70                 	db	112	;'p'
  1662  00FC70  6C                 	db	108	;'l'
  1663  00FC71  65                 	db	101	;'e'
  1664  00FC72  74                 	db	116	;'t'
  1665  00FC73  65                 	db	101	;'e'
  1666  00FC74  3A                 	db	58	;':'
  1667  00FC75  0D                 	db	13
  1668  00FC76  0A                 	db	10
  1669  00FC77  00                 	db	0
  1670  00FC78                     STR_62:
  1671                           
  1672                           ; BSR set to: 0
  1673  00FC78  20                 	db	32
  1674  00FC79  20                 	db	32
  1675  00FC7A  20                 	db	32
  1676  00FC7B  70                 	db	112	;'p'
  1677  00FC7C  61                 	db	97	;'a'
  1678  00FC7D  72                 	db	114	;'r'
  1679  00FC7E  74                 	db	116	;'t'
  1680  00FC7F  20                 	db	32
  1681  00FC80  2D                 	db	45
  1682  00FC81  20                 	db	32
  1683  00FC82  53                 	db	83	;'S'
  1684  00FC83  65                 	db	101	;'e'
  1685  00FC84  74                 	db	116	;'t'
  1686  00FC85  20                 	db	32
  1687  00FC86  63                 	db	99	;'c'
  1688  00FC87  61                 	db	97	;'a'
  1689  00FC88  72                 	db	114	;'r'
  1690  00FC89  64                 	db	100	;'d'
  1691  00FC8A  20                 	db	32
  1692  00FC8B  70                 	db	112	;'p'
  1693  00FC8C  61                 	db	97	;'a'
  1694  00FC8D  72                 	db	114	;'r'
  1695  00FC8E  74                 	db	116	;'t'
  1696  00FC8F  20                 	db	32
  1697  00FC90  6E                 	db	110	;'n'
  1698  00FC91  75                 	db	117	;'u'
  1699  00FC92  6D                 	db	109	;'m'
  1700  00FC93  62                 	db	98	;'b'
  1701  00FC94  65                 	db	101	;'e'
  1702  00FC95  72                 	db	114	;'r'
  1703  00FC96  0D                 	db	13
  1704  00FC97  0A                 	db	10
  1705  00FC98  00                 	db	0
  1706  00FC99                     STR_70:
  1707                           
  1708                           ; BSR set to: 0
  1709  00FC99  0D                 	db	13
  1710  00FC9A  0A                 	db	10
  1711  00FC9B  45                 	db	69	;'E'
  1712  00FC9C  6E                 	db	110	;'n'
  1713  00FC9D  74                 	db	116	;'t'
  1714  00FC9E  65                 	db	101	;'e'
  1715  00FC9F  72                 	db	114	;'r'
  1716  00FCA0  65                 	db	101	;'e'
  1717  00FCA1  64                 	db	100	;'d'
  1718  00FCA2  3A                 	db	58	;':'
  1719  00FCA3  20                 	db	32
  1720  00FCA4  25                 	db	37
  1721  00FCA5  73                 	db	115	;'s'
  1722  00FCA6  20                 	db	32
  1723  00FCA7  0D                 	db	13
  1724  00FCA8  0A                 	db	10
  1725  00FCA9  20                 	db	32
  1726  00FCAA  43                 	db	67	;'C'
  1727  00FCAB  6F                 	db	111	;'o'
  1728  00FCAC  6E                 	db	110	;'n'
  1729  00FCAD  66                 	db	102	;'f'
  1730  00FCAE  69                 	db	105	;'i'
  1731  00FCAF  72                 	db	114	;'r'
  1732  00FCB0  6D                 	db	109	;'m'
  1733  00FCB1  20                 	db	32
  1734  00FCB2  20                 	db	32
  1735  00FCB3  59                 	db	89	;'Y'
  1736  00FCB4  7C                 	db	124
  1737  00FCB5  4E                 	db	78	;'N'
  1738  00FCB6  3F                 	db	63	;'?'
  1739  00FCB7  3A                 	db	58	;':'
  1740  00FCB8  20                 	db	32
  1741  00FCB9  00                 	db	0
  1742  00FCBA                     STR_63:
  1743                           
  1744                           ; BSR set to: 0
  1745  00FCBA  20                 	db	32
  1746  00FCBB  20                 	db	32
  1747  00FCBC  20                 	db	32
  1748  00FCBD  72                 	db	114	;'r'
  1749  00FCBE  65                 	db	101	;'e'
  1750  00FCBF  76                 	db	118	;'v'
  1751  00FCC0  20                 	db	32
  1752  00FCC1  2D                 	db	45
  1753  00FCC2  20                 	db	32
  1754  00FCC3  53                 	db	83	;'S'
  1755  00FCC4  65                 	db	101	;'e'
  1756  00FCC5  74                 	db	116	;'t'
  1757  00FCC6  20                 	db	32
  1758  00FCC7  63                 	db	99	;'c'
  1759  00FCC8  61                 	db	97	;'a'
  1760  00FCC9  72                 	db	114	;'r'
  1761  00FCCA  64                 	db	100	;'d'
  1762  00FCCB  20                 	db	32
  1763  00FCCC  70                 	db	112	;'p'
  1764  00FCCD  61                 	db	97	;'a'
  1765  00FCCE  72                 	db	114	;'r'
  1766  00FCCF  74                 	db	116	;'t'
  1767  00FCD0  20                 	db	32
  1768  00FCD1  6E                 	db	110	;'n'
  1769  00FCD2  75                 	db	117	;'u'
  1770  00FCD3  6D                 	db	109	;'m'
  1771  00FCD4  62                 	db	98	;'b'
  1772  00FCD5  65                 	db	101	;'e'
  1773  00FCD6  72                 	db	114	;'r'
  1774  00FCD7  0D                 	db	13
  1775  00FCD8  0A                 	db	10
  1776  00FCD9  00                 	db	0
  1777  00FCDA                     STR_28:
  1778                           
  1779                           ; BSR set to: 0
  1780  00FCDA  0D                 	db	13
  1781  00FCDB  0A                 	db	10
  1782  00FCDC  52                 	db	82	;'R'
  1783  00FCDD  65                 	db	101	;'e'
  1784  00FCDE  63                 	db	99	;'c'
  1785  00FCDF  65                 	db	101	;'e'
  1786  00FCE0  69                 	db	105	;'i'
  1787  00FCE1  76                 	db	118	;'v'
  1788  00FCE2  65                 	db	101	;'e'
  1789  00FCE3  64                 	db	100	;'d'
  1790  00FCE4  20                 	db	32
  1791  00FCE5  4D                 	db	77	;'M'
  1792  00FCE6  6F                 	db	111	;'o'
  1793  00FCE7  64                 	db	100	;'d'
  1794  00FCE8  62                 	db	98	;'b'
  1795  00FCE9  75                 	db	117	;'u'
  1796  00FCEA  73                 	db	115	;'s'
  1797  00FCEB  20                 	db	32
  1798  00FCEC  43                 	db	67	;'C'
  1799  00FCED  52                 	db	82	;'R'
  1800  00FCEE  43                 	db	67	;'C'
  1801  00FCEF  20                 	db	32
  1802  00FCF0  69                 	db	105	;'i'
  1803  00FCF1  73                 	db	115	;'s'
  1804  00FCF2  20                 	db	32
  1805  00FCF3  62                 	db	98	;'b'
  1806  00FCF4  61                 	db	97	;'a'
  1807  00FCF5  64                 	db	100	;'d'
  1808  00FCF6  2E                 	db	46
  1809  00FCF7  0D                 	db	13
  1810  00FCF8  0A                 	db	10
  1811  00FCF9  00                 	db	0
  1812  00FCFA                     STR_2:
  1813                           
  1814                           ; BSR set to: 0
  1815  00FCFA  4D                 	db	77	;'M'
  1816  00FCFB  6F                 	db	111	;'o'
  1817  00FCFC  64                 	db	100	;'d'
  1818  00FCFD  62                 	db	98	;'b'
  1819  00FCFE  75                 	db	117	;'u'
  1820  00FCFF  73                 	db	115	;'s'
  1821  00FD00  20                 	db	32
  1822  00FD01  52                 	db	82	;'R'
  1823  00FD02  65                 	db	101	;'e'
  1824  00FD03  67                 	db	103	;'g'
  1825  00FD04  69                 	db	105	;'i'
  1826  00FD05  73                 	db	115	;'s'
  1827  00FD06  74                 	db	116	;'t'
  1828  00FD07  65                 	db	101	;'e'
  1829  00FD08  72                 	db	114	;'r'
  1830  00FD09  20                 	db	32
  1831  00FD0A  42                 	db	66	;'B'
  1832  00FD0B  65                 	db	101	;'e'
  1833  00FD0C  66                 	db	102	;'f'
  1834  00FD0D  6F                 	db	111	;'o'
  1835  00FD0E  72                 	db	114	;'r'
  1836  00FD0F  65                 	db	101	;'e'
  1837  00FD10  20                 	db	32
  1838  00FD11  55                 	db	85	;'U'
  1839  00FD12  70                 	db	112	;'p'
  1840  00FD13  64                 	db	100	;'d'
  1841  00FD14  61                 	db	97	;'a'
  1842  00FD15  74                 	db	116	;'t'
  1843  00FD16  65                 	db	101	;'e'
  1844  00FD17  3A                 	db	58	;':'
  1845  00FD18  00                 	db	0
  1846  00FD19                     STR_51:
  1847                           
  1848                           ; BSR set to: 0
  1849  00FD19  20                 	db	32
  1850  00FD1A  20                 	db	32
  1851  00FD1B  20                 	db	32
  1852  00FD1C  20                 	db	32
  1853  00FD1D  20                 	db	32
  1854  00FD1E  20                 	db	32
  1855  00FD1F  41                 	db	65	;'A'
  1856  00FD20  64                 	db	100	;'d'
  1857  00FD21  64                 	db	100	;'d'
  1858  00FD22  20                 	db	32
  1859  00FD23  30                 	db	48	;'0'
  1860  00FD24  78                 	db	120	;'x'
  1861  00FD25  30                 	db	48	;'0'
  1862  00FD26  32                 	db	50	;'2'
  1863  00FD27  30                 	db	48	;'0'
  1864  00FD28  30                 	db	48	;'0'
  1865  00FD29  20                 	db	32
  1866  00FD2A  2D                 	db	45
  1867  00FD2B  20                 	db	32
  1868  00FD2C  52                 	db	82	;'R'
  1869  00FD2D  65                 	db	101	;'e'
  1870  00FD2E  76                 	db	118	;'v'
  1871  00FD2F  69                 	db	105	;'i'
  1872  00FD30  73                 	db	115	;'s'
  1873  00FD31  69                 	db	105	;'i'
  1874  00FD32  6F                 	db	111	;'o'
  1875  00FD33  6E                 	db	110	;'n'
  1876  00FD34  0D                 	db	13
  1877  00FD35  0A                 	db	10
  1878  00FD36  00                 	db	0
  1879  00FD37                     STR_21:
  1880                           
  1881                           ; BSR set to: 0
  1882  00FD37  52                 	db	82	;'R'
  1883  00FD38  65                 	db	101	;'e'
  1884  00FD39  71                 	db	113	;'q'
  1885  00FD3A  75                 	db	117	;'u'
  1886  00FD3B  65                 	db	101	;'e'
  1887  00FD3C  73                 	db	115	;'s'
  1888  00FD3D  74                 	db	116	;'t'
  1889  00FD3E  65                 	db	101	;'e'
  1890  00FD3F  64                 	db	100	;'d'
  1891  00FD40  20                 	db	32
  1892  00FD41  41                 	db	65	;'A'
  1893  00FD42  6E                 	db	110	;'n'
  1894  00FD43  61                 	db	97	;'a'
  1895  00FD44  6C                 	db	108	;'l'
  1896  00FD45  6F                 	db	111	;'o'
  1897  00FD46  67                 	db	103	;'g'
  1898  00FD47  75                 	db	117	;'u'
  1899  00FD48  65                 	db	101	;'e'
  1900  00FD49  20                 	db	32
  1901  00FD4A  49                 	db	73	;'I'
  1902  00FD4B  6E                 	db	110	;'n'
  1903  00FD4C  70                 	db	112	;'p'
  1904  00FD4D  75                 	db	117	;'u'
  1905  00FD4E  74                 	db	116	;'t'
  1906  00FD4F  73                 	db	115	;'s'
  1907  00FD50  0D                 	db	13
  1908  00FD51  0A                 	db	10
  1909  00FD52  0A                 	db	10
  1910  00FD53  00                 	db	0
  1911  00FD54                     STR_9:
  1912                           
  1913                           ; BSR set to: 0
  1914  00FD54  4D                 	db	77	;'M'
  1915  00FD55  6F                 	db	111	;'o'
  1916  00FD56  64                 	db	100	;'d'
  1917  00FD57  44                 	db	68	;'D'
  1918  00FD58  61                 	db	97	;'a'
  1919  00FD59  74                 	db	116	;'t'
  1920  00FD5A  61                 	db	97	;'a'
  1921  00FD5B  43                 	db	67	;'C'
  1922  00FD5C  6E                 	db	110	;'n'
  1923  00FD5D  74                 	db	116	;'t'
  1924  00FD5E  20                 	db	32
  1925  00FD5F  73                 	db	115	;'s'
  1926  00FD60  69                 	db	105	;'i'
  1927  00FD61  74                 	db	116	;'t'
  1928  00FD62  74                 	db	116	;'t'
  1929  00FD63  69                 	db	105	;'i'
  1930  00FD64  6E                 	db	110	;'n'
  1931  00FD65  67                 	db	103	;'g'
  1932  00FD66  20                 	db	32
  1933  00FD67  61                 	db	97	;'a'
  1934  00FD68  74                 	db	116	;'t'
  1935  00FD69  20                 	db	32
  1936  00FD6A  25                 	db	37
  1937  00FD6B  69                 	db	105	;'i'
  1938  00FD6C  0D                 	db	13
  1939  00FD6D  0A                 	db	10
  1940  00FD6E  0A                 	db	10
  1941  00FD6F  00                 	db	0
  1942  00FD70                     STR_22:
  1943                           
  1944                           ; BSR set to: 0
  1945  00FD70  4D                 	db	77	;'M'
  1946  00FD71  6F                 	db	111	;'o'
  1947  00FD72  64                 	db	100	;'d'
  1948  00FD73  62                 	db	98	;'b'
  1949  00FD74  75                 	db	117	;'u'
  1950  00FD75  73                 	db	115	;'s'
  1951  00FD76  20                 	db	32
  1952  00FD77  52                 	db	82	;'R'
  1953  00FD78  65                 	db	101	;'e'
  1954  00FD79  73                 	db	115	;'s'
  1955  00FD7A  70                 	db	112	;'p'
  1956  00FD7B  6F                 	db	111	;'o'
  1957  00FD7C  6E                 	db	110	;'n'
  1958  00FD7D  73                 	db	115	;'s'
  1959  00FD7E  65                 	db	101	;'e'
  1960  00FD7F  20                 	db	32
  1961  00FD80  43                 	db	67	;'C'
  1962  00FD81  6F                 	db	111	;'o'
  1963  00FD82  75                 	db	117	;'u'
  1964  00FD83  6E                 	db	110	;'n'
  1965  00FD84  74                 	db	116	;'t'
  1966  00FD85  20                 	db	32
  1967  00FD86  25                 	db	37
  1968  00FD87  69                 	db	105	;'i'
  1969  00FD88  3A                 	db	58	;':'
  1970  00FD89  0D                 	db	13
  1971  00FD8A  0A                 	db	10
  1972  00FD8B  00                 	db	0
  1973  00FD8C                     STR_3:
  1974                           
  1975                           ; BSR set to: 0
  1976  00FD8C  55                 	db	85	;'U'
  1977  00FD8D  6E                 	db	110	;'n'
  1978  00FD8E  73                 	db	115	;'s'
  1979  00FD8F  75                 	db	117	;'u'
  1980  00FD90  70                 	db	112	;'p'
  1981  00FD91  70                 	db	112	;'p'
  1982  00FD92  6F                 	db	111	;'o'
  1983  00FD93  72                 	db	114	;'r'
  1984  00FD94  74                 	db	116	;'t'
  1985  00FD95  65                 	db	101	;'e'
  1986  00FD96  64                 	db	100	;'d'
  1987  00FD97  20                 	db	32
  1988  00FD98  46                 	db	70	;'F'
  1989  00FD99  75                 	db	117	;'u'
  1990  00FD9A  6E                 	db	110	;'n'
  1991  00FD9B  63                 	db	99	;'c'
  1992  00FD9C  74                 	db	116	;'t'
  1993  00FD9D  69                 	db	105	;'i'
  1994  00FD9E  6F                 	db	111	;'o'
  1995  00FD9F  6E                 	db	110	;'n'
  1996  00FDA0  20                 	db	32
  1997  00FDA1  43                 	db	67	;'C'
  1998  00FDA2  6F                 	db	111	;'o'
  1999  00FDA3  64                 	db	100	;'d'
  2000  00FDA4  65                 	db	101	;'e'
  2001  00FDA5  0D                 	db	13
  2002  00FDA6  0A                 	db	10
  2003  00FDA7  00                 	db	0
  2004  00FDA8                     STR_7:
  2005                           
  2006                           ; BSR set to: 0
  2007  00FDA8  20                 	db	32
  2008  00FDA9  20                 	db	32
  2009  00FDAA  20                 	db	32
  2010  00FDAB  52                 	db	82	;'R'
  2011  00FDAC  65                 	db	101	;'e'
  2012  00FDAD  67                 	db	103	;'g'
  2013  00FDAE  3A                 	db	58	;':'
  2014  00FDAF  20                 	db	32
  2015  00FDB0  25                 	db	37
  2016  00FDB1  69                 	db	105	;'i'
  2017  00FDB2  20                 	db	32
  2018  00FDB3  44                 	db	68	;'D'
  2019  00FDB4  61                 	db	97	;'a'
  2020  00FDB5  74                 	db	116	;'t'
  2021  00FDB6  61                 	db	97	;'a'
  2022  00FDB7  3A                 	db	58	;':'
  2023  00FDB8  20                 	db	32
  2024  00FDB9  30                 	db	48	;'0'
  2025  00FDBA  78                 	db	120	;'x'
  2026  00FDBB  25                 	db	37
  2027  00FDBC  30                 	db	48	;'0'
  2028  00FDBD  34                 	db	52	;'4'
  2029  00FDBE  78                 	db	120	;'x'
  2030  00FDBF  20                 	db	32
  2031  00FDC0  0D                 	db	13
  2032  00FDC1  0A                 	db	10
  2033  00FDC2  00                 	db	0
  2034  00FDC3                     STR_14:
  2035                           
  2036                           ; BSR set to: 0
  2037  00FDC3  52                 	db	82	;'R'
  2038  00FDC4  65                 	db	101	;'e'
  2039  00FDC5  71                 	db	113	;'q'
  2040  00FDC6  75                 	db	117	;'u'
  2041  00FDC7  65                 	db	101	;'e'
  2042  00FDC8  73                 	db	115	;'s'
  2043  00FDC9  74                 	db	116	;'t'
  2044  00FDCA  65                 	db	101	;'e'
  2045  00FDCB  64                 	db	100	;'d'
  2046  00FDCC  20                 	db	32
  2047  00FDCD  43                 	db	67	;'C'
  2048  00FDCE  69                 	db	105	;'i'
  2049  00FDCF  72                 	db	114	;'r'
  2050  00FDD0  63                 	db	99	;'c'
  2051  00FDD1  75                 	db	117	;'u'
  2052  00FDD2  69                 	db	105	;'i'
  2053  00FDD3  74                 	db	116	;'t'
  2054  00FDD4  20                 	db	32
  2055  00FDD5  44                 	db	68	;'D'
  2056  00FDD6  61                 	db	97	;'a'
  2057  00FDD7  74                 	db	116	;'t'
  2058  00FDD8  61                 	db	97	;'a'
  2059  00FDD9  0D                 	db	13
  2060  00FDDA  0A                 	db	10
  2061  00FDDB  0A                 	db	10
  2062  00FDDC  00                 	db	0
  2063  00FDDD                     STR_19:
  2064                           
  2065                           ; BSR set to: 0
  2066  00FDDD  52                 	db	82	;'R'
  2067  00FDDE  65                 	db	101	;'e'
  2068  00FDDF  71                 	db	113	;'q'
  2069  00FDE0  75                 	db	117	;'u'
  2070  00FDE1  65                 	db	101	;'e'
  2071  00FDE2  73                 	db	115	;'s'
  2072  00FDE3  74                 	db	116	;'t'
  2073  00FDE4  65                 	db	101	;'e'
  2074  00FDE5  64                 	db	100	;'d'
  2075  00FDE6  20                 	db	32
  2076  00FDE7  43                 	db	67	;'C'
  2077  00FDE8  6F                 	db	111	;'o'
  2078  00FDE9  6D                 	db	109	;'m'
  2079  00FDEA  70                 	db	112	;'p'
  2080  00FDEB  69                 	db	105	;'i'
  2081  00FDEC  6C                 	db	108	;'l'
  2082  00FDED  65                 	db	101	;'e'
  2083  00FDEE  20                 	db	32
  2084  00FDEF  54                 	db	84	;'T'
  2085  00FDF0  69                 	db	105	;'i'
  2086  00FDF1  6D                 	db	109	;'m'
  2087  00FDF2  65                 	db	101	;'e'
  2088  00FDF3  0D                 	db	13
  2089  00FDF4  0A                 	db	10
  2090  00FDF5  0A                 	db	10
  2091  00FDF6  00                 	db	0
  2092  00FDF7                     STR_18:
  2093                           
  2094                           ; BSR set to: 0
  2095  00FDF7  52                 	db	82	;'R'
  2096  00FDF8  65                 	db	101	;'e'
  2097  00FDF9  71                 	db	113	;'q'
  2098  00FDFA  75                 	db	117	;'u'
  2099  00FDFB  65                 	db	101	;'e'
  2100  00FDFC  73                 	db	115	;'s'
  2101  00FDFD  74                 	db	116	;'t'
  2102  00FDFE  65                 	db	101	;'e'
  2103  00FDFF  64                 	db	100	;'d'
  2104  00FE00  20                 	db	32
  2105  00FE01  43                 	db	67	;'C'
  2106  00FE02  6F                 	db	111	;'o'
  2107  00FE03  6D                 	db	109	;'m'
  2108  00FE04  70                 	db	112	;'p'
  2109  00FE05  69                 	db	105	;'i'
  2110  00FE06  6C                 	db	108	;'l'
  2111  00FE07  65                 	db	101	;'e'
  2112  00FE08  20                 	db	32
  2113  00FE09  44                 	db	68	;'D'
  2114  00FE0A  61                 	db	97	;'a'
  2115  00FE0B  74                 	db	116	;'t'
  2116  00FE0C  65                 	db	101	;'e'
  2117  00FE0D  0D                 	db	13
  2118  00FE0E  0A                 	db	10
  2119  00FE0F  0A                 	db	10
  2120  00FE10  00                 	db	0
  2121  00FE11                     STR_20:
  2122                           
  2123                           ; BSR set to: 0
  2124  00FE11  52                 	db	82	;'R'
  2125  00FE12  65                 	db	101	;'e'
  2126  00FE13  71                 	db	113	;'q'
  2127  00FE14  75                 	db	117	;'u'
  2128  00FE15  65                 	db	101	;'e'
  2129  00FE16  73                 	db	115	;'s'
  2130  00FE17  74                 	db	116	;'t'
  2131  00FE18  65                 	db	101	;'e'
  2132  00FE19  64                 	db	100	;'d'
  2133  00FE1A  20                 	db	32
  2134  00FE1B  43                 	db	67	;'C'
  2135  00FE1C  6F                 	db	111	;'o'
  2136  00FE1D  6D                 	db	109	;'m'
  2137  00FE1E  70                 	db	112	;'p'
  2138  00FE1F  69                 	db	105	;'i'
  2139  00FE20  6C                 	db	108	;'l'
  2140  00FE21  65                 	db	101	;'e'
  2141  00FE22  72                 	db	114	;'r'
  2142  00FE23  20                 	db	32
  2143  00FE24  56                 	db	86	;'V'
  2144  00FE25  65                 	db	101	;'e'
  2145  00FE26  72                 	db	114	;'r'
  2146  00FE27  0D                 	db	13
  2147  00FE28  0A                 	db	10
  2148  00FE29  0A                 	db	10
  2149  00FE2A  00                 	db	0
  2150  00FE2B                     STR_23:
  2151                           
  2152                           ; BSR set to: 0
  2153  00FE2B  20                 	db	32
  2154  00FE2C  20                 	db	32
  2155  00FE2D  20                 	db	32
  2156  00FE2E  42                 	db	66	;'B'
  2157  00FE2F  79                 	db	121	;'y'
  2158  00FE30  74                 	db	116	;'t'
  2159  00FE31  65                 	db	101	;'e'
  2160  00FE32  20                 	db	32
  2161  00FE33  25                 	db	37
  2162  00FE34  30                 	db	48	;'0'
  2163  00FE35  32                 	db	50	;'2'
  2164  00FE36  69                 	db	105	;'i'
  2165  00FE37  20                 	db	32
  2166  00FE38  3A                 	db	58	;':'
  2167  00FE39  20                 	db	32
  2168  00FE3A  30                 	db	48	;'0'
  2169  00FE3B  78                 	db	120	;'x'
  2170  00FE3C  25                 	db	37
  2171  00FE3D  30                 	db	48	;'0'
  2172  00FE3E  32                 	db	50	;'2'
  2173  00FE3F  78                 	db	120	;'x'
  2174  00FE40  20                 	db	32
  2175  00FE41  0D                 	db	13
  2176  00FE42  0A                 	db	10
  2177  00FE43  00                 	db	0
  2178  00FE44                     STR_17:
  2179                           
  2180                           ; BSR set to: 0
  2181  00FE44  52                 	db	82	;'R'
  2182  00FE45  65                 	db	101	;'e'
  2183  00FE46  71                 	db	113	;'q'
  2184  00FE47  75                 	db	117	;'u'
  2185  00FE48  65                 	db	101	;'e'
  2186  00FE49  73                 	db	115	;'s'
  2187  00FE4A  74                 	db	116	;'t'
  2188  00FE4B  65                 	db	101	;'e'
  2189  00FE4C  64                 	db	100	;'d'
  2190  00FE4D  20                 	db	32
  2191  00FE4E  53                 	db	83	;'S'
  2192  00FE4F  65                 	db	101	;'e'
  2193  00FE50  72                 	db	114	;'r'
  2194  00FE51  69                 	db	105	;'i'
  2195  00FE52  61                 	db	97	;'a'
  2196  00FE53  6C                 	db	108	;'l'
  2197  00FE54  20                 	db	32
  2198  00FE55  4E                 	db	78	;'N'
  2199  00FE56  6F                 	db	111	;'o'
  2200  00FE57  2E                 	db	46
  2201  00FE58  0D                 	db	13
  2202  00FE59  0A                 	db	10
  2203  00FE5A  0A                 	db	10
  2204  00FE5B  00                 	db	0
  2205  00FE5C                     STR_25:
  2206                           
  2207                           ; BSR set to: 0
  2208  00FE5C  53                 	db	83	;'S'
  2209  00FE5D  6F                 	db	111	;'o'
  2210  00FE5E  6D                 	db	109	;'m'
  2211  00FE5F  65                 	db	101	;'e'
  2212  00FE60  74                 	db	116	;'t'
  2213  00FE61  68                 	db	104	;'h'
  2214  00FE62  69                 	db	105	;'i'
  2215  00FE63  6E                 	db	110	;'n'
  2216  00FE64  67                 	db	103	;'g'
  2217  00FE65  20                 	db	32
  2218  00FE66  69                 	db	105	;'i'
  2219  00FE67  6E                 	db	110	;'n'
  2220  00FE68  20                 	db	32
  2221  00FE69  45                 	db	69	;'E'
  2222  00FE6A  53                 	db	83	;'S'
  2223  00FE6B  55                 	db	85	;'U'
  2224  00FE6C  41                 	db	65	;'A'
  2225  00FE6D  52                 	db	82	;'R'
  2226  00FE6E  54                 	db	84	;'T'
  2227  00FE6F  31                 	db	49	;'1'
  2228  00FE70  20                 	db	32
  2229  00FE71  0D                 	db	13
  2230  00FE72  0A                 	db	10
  2231  00FE73  00                 	db	0
  2232  00FE74                     STR_11:
  2233                           
  2234                           ; BSR set to: 0
  2235  00FE74  20                 	db	32
  2236  00FE75  20                 	db	32
  2237  00FE76  20                 	db	32
  2238  00FE77  42                 	db	66	;'B'
  2239  00FE78  79                 	db	121	;'y'
  2240  00FE79  74                 	db	116	;'t'
  2241  00FE7A  65                 	db	101	;'e'
  2242  00FE7B  20                 	db	32
  2243  00FE7C  25                 	db	37
  2244  00FE7D  69                 	db	105	;'i'
  2245  00FE7E  20                 	db	32
  2246  00FE7F  3A                 	db	58	;':'
  2247  00FE80  20                 	db	32
  2248  00FE81  30                 	db	48	;'0'
  2249  00FE82  78                 	db	120	;'x'
  2250  00FE83  25                 	db	37
  2251  00FE84  30                 	db	48	;'0'
  2252  00FE85  32                 	db	50	;'2'
  2253  00FE86  78                 	db	120	;'x'
  2254  00FE87  20                 	db	32
  2255  00FE88  0D                 	db	13
  2256  00FE89  0A                 	db	10
  2257  00FE8A  00                 	db	0
  2258  00FE8B                     STR_42:
  2259                           
  2260                           ; BSR set to: 0
  2261  00FE8B  43                 	db	67	;'C'
  2262  00FE8C  61                 	db	97	;'a'
  2263  00FE8D  72                 	db	114	;'r'
  2264  00FE8E  64                 	db	100	;'d'
  2265  00FE8F  20                 	db	32
  2266  00FE90  41                 	db	65	;'A'
  2267  00FE91  64                 	db	100	;'d'
  2268  00FE92  64                 	db	100	;'d'
  2269  00FE93  72                 	db	114	;'r'
  2270  00FE94  65                 	db	101	;'e'
  2271  00FE95  73                 	db	115	;'s'
  2272  00FE96  73                 	db	115	;'s'
  2273  00FE97  2E                 	db	46
  2274  00FE98  20                 	db	32
  2275  00FE99  30                 	db	48	;'0'
  2276  00FE9A  78                 	db	120	;'x'
  2277  00FE9B  30                 	db	48	;'0'
  2278  00FE9C  35                 	db	53	;'5'
  2279  00FE9D  20                 	db	32
  2280  00FE9E  0D                 	db	13
  2281  00FE9F  0A                 	db	10
  2282  00FEA0  00                 	db	0
  2283  00FEA1                     STR_59:
  2284                           
  2285                           ; BSR set to: 0
  2286  00FEA1  43                 	db	67	;'C'
  2287  00FEA2  6F                 	db	111	;'o'
  2288  00FEA3  6D                 	db	109	;'m'
  2289  00FEA4  6D                 	db	109	;'m'
  2290  00FEA5  61                 	db	97	;'a'
  2291  00FEA6  6E                 	db	110	;'n'
  2292  00FEA7  64                 	db	100	;'d'
  2293  00FEA8  73                 	db	115	;'s'
  2294  00FEA9  20                 	db	32
  2295  00FEAA  53                 	db	83	;'S'
  2296  00FEAB  75                 	db	117	;'u'
  2297  00FEAC  70                 	db	112	;'p'
  2298  00FEAD  70                 	db	112	;'p'
  2299  00FEAE  6F                 	db	111	;'o'
  2300  00FEAF  72                 	db	114	;'r'
  2301  00FEB0  74                 	db	116	;'t'
  2302  00FEB1  65                 	db	101	;'e'
  2303  00FEB2  64                 	db	100	;'d'
  2304  00FEB3  3A                 	db	58	;':'
  2305  00FEB4  0D                 	db	13
  2306  00FEB5  0A                 	db	10
  2307  00FEB6  00                 	db	0
  2308  00FEB7                     STR_15:
  2309                           
  2310                           ; BSR set to: 0
  2311  00FEB7  52                 	db	82	;'R'
  2312  00FEB8  65                 	db	101	;'e'
  2313  00FEB9  71                 	db	113	;'q'
  2314  00FEBA  75                 	db	117	;'u'
  2315  00FEBB  65                 	db	101	;'e'
  2316  00FEBC  73                 	db	115	;'s'
  2317  00FEBD  74                 	db	116	;'t'
  2318  00FEBE  65                 	db	101	;'e'
  2319  00FEBF  64                 	db	100	;'d'
  2320  00FEC0  20                 	db	32
  2321  00FEC1  50                 	db	80	;'P'
  2322  00FEC2  61                 	db	97	;'a'
  2323  00FEC3  72                 	db	114	;'r'
  2324  00FEC4  74                 	db	116	;'t'
  2325  00FEC5  20                 	db	32
  2326  00FEC6  4E                 	db	78	;'N'
  2327  00FEC7  6F                 	db	111	;'o'
  2328  00FEC8  2E                 	db	46
  2329  00FEC9  0D                 	db	13
  2330  00FECA  0A                 	db	10
  2331  00FECB  0A                 	db	10
  2332  00FECC  00                 	db	0
  2333  00FECD                     STR_16:
  2334                           
  2335                           ; BSR set to: 0
  2336  00FECD  52                 	db	82	;'R'
  2337  00FECE  65                 	db	101	;'e'
  2338  00FECF  71                 	db	113	;'q'
  2339  00FED0  75                 	db	117	;'u'
  2340  00FED1  65                 	db	101	;'e'
  2341  00FED2  73                 	db	115	;'s'
  2342  00FED3  74                 	db	116	;'t'
  2343  00FED4  65                 	db	101	;'e'
  2344  00FED5  64                 	db	100	;'d'
  2345  00FED6  20                 	db	32
  2346  00FED7  52                 	db	82	;'R'
  2347  00FED8  65                 	db	101	;'e'
  2348  00FED9  76                 	db	118	;'v'
  2349  00FEDA  69                 	db	105	;'i'
  2350  00FEDB  73                 	db	115	;'s'
  2351  00FEDC  69                 	db	105	;'i'
  2352  00FEDD  6F                 	db	111	;'o'
  2353  00FEDE  6E                 	db	110	;'n'
  2354  00FEDF  0D                 	db	13
  2355  00FEE0  0A                 	db	10
  2356  00FEE1  0A                 	db	10
  2357  00FEE2  00                 	db	0
  2358  00FEE3                     STR_41:
  2359                           
  2360                           ; BSR set to: 0
  2361  00FEE3  43                 	db	67	;'C'
  2362  00FEE4  61                 	db	97	;'a'
  2363  00FEE5  72                 	db	114	;'r'
  2364  00FEE6  64                 	db	100	;'d'
  2365  00FEE7  20                 	db	32
  2366  00FEE8  52                 	db	82	;'R'
  2367  00FEE9  65                 	db	101	;'e'
  2368  00FEEA  76                 	db	118	;'v'
  2369  00FEEB  69                 	db	105	;'i'
  2370  00FEEC  73                 	db	115	;'s'
  2371  00FEED  69                 	db	105	;'i'
  2372  00FEEE  6F                 	db	111	;'o'
  2373  00FEEF  6E                 	db	110	;'n'
  2374  00FEF0  2E                 	db	46
  2375  00FEF1  20                 	db	32
  2376  00FEF2  25                 	db	37
  2377  00FEF3  73                 	db	115	;'s'
  2378  00FEF4  20                 	db	32
  2379  00FEF5  0D                 	db	13
  2380  00FEF6  0A                 	db	10
  2381  00FEF7  00                 	db	0
  2382  00FEF8                     STR_1:
  2383                           
  2384                           ; BSR set to: 0
  2385  00FEF8  46                 	db	70	;'F'
  2386  00FEF9  75                 	db	117	;'u'
  2387  00FEFA  6E                 	db	110	;'n'
  2388  00FEFB  63                 	db	99	;'c'
  2389  00FEFC  74                 	db	116	;'t'
  2390  00FEFD  69                 	db	105	;'i'
  2391  00FEFE  6F                 	db	111	;'o'
  2392  00FEFF  6E                 	db	110	;'n'
  2393  00FF00  20                 	db	32
  2394  00FF01  43                 	db	67	;'C'
  2395  00FF02  6F                 	db	111	;'o'
  2396  00FF03  64                 	db	100	;'d'
  2397  00FF04  65                 	db	101	;'e'
  2398  00FF05  20                 	db	32
  2399  00FF06  30                 	db	48	;'0'
  2400  00FF07  78                 	db	120	;'x'
  2401  00FF08  31                 	db	49	;'1'
  2402  00FF09  30                 	db	48	;'0'
  2403  00FF0A  0D                 	db	13
  2404  00FF0B  0A                 	db	10
  2405  00FF0C  00                 	db	0
  2406  00FF0D                     STR_40:
  2407                           
  2408                           ; BSR set to: 0
  2409  00FF0D  43                 	db	67	;'C'
  2410  00FF0E  61                 	db	97	;'a'
  2411  00FF0F  72                 	db	114	;'r'
  2412  00FF10  64                 	db	100	;'d'
  2413  00FF11  20                 	db	32
  2414  00FF12  50                 	db	80	;'P'
  2415  00FF13  61                 	db	97	;'a'
  2416  00FF14  72                 	db	114	;'r'
  2417  00FF15  74                 	db	116	;'t'
  2418  00FF16  20                 	db	32
  2419  00FF17  4E                 	db	78	;'N'
  2420  00FF18  6F                 	db	111	;'o'
  2421  00FF19  2E                 	db	46
  2422  00FF1A  20                 	db	32
  2423  00FF1B  25                 	db	37
  2424  00FF1C  73                 	db	115	;'s'
  2425  00FF1D  20                 	db	32
  2426  00FF1E  0D                 	db	13
  2427  00FF1F  0A                 	db	10
  2428  00FF20  00                 	db	0
  2429  00FF21                     STR_39:
  2430                           
  2431                           ; BSR set to: 0
  2432  00FF21  43                 	db	67	;'C'
  2433  00FF22  61                 	db	97	;'a'
  2434  00FF23  72                 	db	114	;'r'
  2435  00FF24  64                 	db	100	;'d'
  2436  00FF25  20                 	db	32
  2437  00FF26  53                 	db	83	;'S'
  2438  00FF27  65                 	db	101	;'e'
  2439  00FF28  72                 	db	114	;'r'
  2440  00FF29  20                 	db	32
  2441  00FF2A  4E                 	db	78	;'N'
  2442  00FF2B  6F                 	db	111	;'o'
  2443  00FF2C  2E                 	db	46
  2444  00FF2D  20                 	db	32
  2445  00FF2E  25                 	db	37
  2446  00FF2F  73                 	db	115	;'s'
  2447  00FF30  20                 	db	32
  2448  00FF31  0D                 	db	13
  2449  00FF32  0A                 	db	10
  2450  00FF33  00                 	db	0
  2451  00FF34                     STR_4:
  2452                           
  2453                           ; BSR set to: 0
  2454  00FF34  0D                 	db	13
  2455  00FF35  0A                 	db	10
  2456  00FF36  45                 	db	69	;'E'
  2457  00FF37  6E                 	db	110	;'n'
  2458  00FF38  74                 	db	116	;'t'
  2459  00FF39  65                 	db	101	;'e'
  2460  00FF3A  72                 	db	114	;'r'
  2461  00FF3B  20                 	db	32
  2462  00FF3C  43                 	db	67	;'C'
  2463  00FF3D  6F                 	db	111	;'o'
  2464  00FF3E  6D                 	db	109	;'m'
  2465  00FF3F  6D                 	db	109	;'m'
  2466  00FF40  61                 	db	97	;'a'
  2467  00FF41  6E                 	db	110	;'n'
  2468  00FF42  64                 	db	100	;'d'
  2469  00FF43  20                 	db	32
  2470  00FF44  3A                 	db	58	;':'
  2471  00FF45  20                 	db	32
  2472  00FF46  00                 	db	0
  2473  00FF47                     STR_72:
  2474                           
  2475                           ; BSR set to: 0
  2476  00FF47  4E                 	db	78	;'N'
  2477  00FF48  75                 	db	117	;'u'
  2478  00FF49  6D                 	db	109	;'m'
  2479  00FF4A  20                 	db	32
  2480  00FF4B  43                 	db	67	;'C'
  2481  00FF4C  68                 	db	104	;'h'
  2482  00FF4D  61                 	db	97	;'a'
  2483  00FF4E  72                 	db	114	;'r'
  2484  00FF4F  73                 	db	115	;'s'
  2485  00FF50  3A                 	db	58	;':'
  2486  00FF51  20                 	db	32
  2487  00FF52  25                 	db	37
  2488  00FF53  69                 	db	105	;'i'
  2489  00FF54  20                 	db	32
  2490  00FF55  0D                 	db	13
  2491  00FF56  0A                 	db	10
  2492  00FF57  00                 	db	0
  2493  00FF58                     STR_66:
  2494                           
  2495                           ; BSR set to: 0
  2496  00FF58  44                 	db	68	;'D'
  2497  00FF59  65                 	db	101	;'e'
  2498  00FF5A  62                 	db	98	;'b'
  2499  00FF5B  75                 	db	117	;'u'
  2500  00FF5C  67                 	db	103	;'g'
  2501  00FF5D  20                 	db	32
  2502  00FF5E  44                 	db	68	;'D'
  2503  00FF5F  69                 	db	105	;'i'
  2504  00FF60  73                 	db	115	;'s'
  2505  00FF61  61                 	db	97	;'a'
  2506  00FF62  62                 	db	98	;'b'
  2507  00FF63  6C                 	db	108	;'l'
  2508  00FF64  65                 	db	101	;'e'
  2509  00FF65  64                 	db	100	;'d'
  2510  00FF66  0D                 	db	13
  2511  00FF67  0A                 	db	10
  2512  00FF68  00                 	db	0
  2513  00FF69                     STR_65:
  2514                           
  2515                           ; BSR set to: 0
  2516  00FF69  44                 	db	68	;'D'
  2517  00FF6A  65                 	db	101	;'e'
  2518  00FF6B  62                 	db	98	;'b'
  2519  00FF6C  75                 	db	117	;'u'
  2520  00FF6D  67                 	db	103	;'g'
  2521  00FF6E  20                 	db	32
  2522  00FF6F  45                 	db	69	;'E'
  2523  00FF70  6E                 	db	110	;'n'
  2524  00FF71  61                 	db	97	;'a'
  2525  00FF72  62                 	db	98	;'b'
  2526  00FF73  6C                 	db	108	;'l'
  2527  00FF74  65                 	db	101	;'e'
  2528  00FF75  64                 	db	100	;'d'
  2529  00FF76  0D                 	db	13
  2530  00FF77  0A                 	db	10
  2531  00FF78  00                 	db	0
  2532  00FF79                     STR_6:
  2533                           
  2534                           ; BSR set to: 0
  2535  00FF79  55                 	db	85	;'U'
  2536  00FF7A  70                 	db	112	;'p'
  2537  00FF7B  64                 	db	100	;'d'
  2538  00FF7C  61                 	db	97	;'a'
  2539  00FF7D  74                 	db	116	;'t'
  2540  00FF7E  65                 	db	101	;'e'
  2541  00FF7F  64                 	db	100	;'d'
  2542  00FF80  4D                 	db	77	;'M'
  2543  00FF81  42                 	db	66	;'B'
  2544  00FF82  34                 	db	52	;'4'
  2545  00FF83  30                 	db	48	;'0'
  2546  00FF84  30                 	db	48	;'0'
  2547  00FF85  20                 	db	32
  2548  00FF86  0D                 	db	13
  2549  00FF87  0A                 	db	10
  2550  00FF88  00                 	db	0
  2551  00FF89                     STR_26:
  2552                           
  2553                           ; BSR set to: 0
  2554  00FF89  52                 	db	82	;'R'
  2555  00FF8A  65                 	db	101	;'e'
  2556  00FF8B  61                 	db	97	;'a'
  2557  00FF8C  64                 	db	100	;'d'
  2558  00FF8D  3A                 	db	58	;':'
  2559  00FF8E  20                 	db	32
  2560  00FF8F  30                 	db	48	;'0'
  2561  00FF90  78                 	db	120	;'x'
  2562  00FF91  25                 	db	37
  2563  00FF92  30                 	db	48	;'0'
  2564  00FF93  32                 	db	50	;'2'
  2565  00FF94  78                 	db	120	;'x'
  2566  00FF95  20                 	db	32
  2567  00FF96  0D                 	db	13
  2568  00FF97  0A                 	db	10
  2569  00FF98  00                 	db	0
  2570  00FF99                     STR_71:
  2571                           
  2572                           ; BSR set to: 0
  2573  00FF99  59                 	db	89	;'Y'
  2574  00FF9A  0D                 	db	13
  2575  00FF9B  0A                 	db	10
  2576  00FF9C  53                 	db	83	;'S'
  2577  00FF9D  61                 	db	97	;'a'
  2578  00FF9E  76                 	db	118	;'v'
  2579  00FF9F  69                 	db	105	;'i'
  2580  00FFA0  6E                 	db	110	;'n'
  2581  00FFA1  67                 	db	103	;'g'
  2582  00FFA2  20                 	db	32
  2583  00FFA3  25                 	db	37
  2584  00FFA4  73                 	db	115	;'s'
  2585  00FFA5  0D                 	db	13
  2586  00FFA6  0A                 	db	10
  2587  00FFA7  00                 	db	0
  2588  00FFA8                     STR_73:
  2589                           
  2590                           ; BSR set to: 0
  2591  00FFA8  25                 	db	37
  2592  00FFA9  73                 	db	115	;'s'
  2593  00FFAA  20                 	db	32
  2594  00FFAB  53                 	db	83	;'S'
  2595  00FFAC  61                 	db	97	;'a'
  2596  00FFAD  76                 	db	118	;'v'
  2597  00FFAE  65                 	db	101	;'e'
  2598  00FFAF  64                 	db	100	;'d'
  2599  00FFB0  2E                 	db	46
  2600  00FFB1  20                 	db	32
  2601  00FFB2  0D                 	db	13
  2602  00FFB3  0A                 	db	10
  2603  00FFB4  00                 	db	0
  2604  00FFB5                     STR_75:
  2605                           
  2606                           ; BSR set to: 0
  2607  00FFB5  4E                 	db	78	;'N'
  2608  00FFB6  6F                 	db	111	;'o'
  2609  00FFB7  74                 	db	116	;'t'
  2610  00FFB8  20                 	db	32
  2611  00FFB9  73                 	db	115	;'s'
  2612  00FFBA  61                 	db	97	;'a'
  2613  00FFBB  76                 	db	118	;'v'
  2614  00FFBC  65                 	db	101	;'e'
  2615  00FFBD  64                 	db	100	;'d'
  2616  00FFBE  0D                 	db	13
  2617  00FFBF  0A                 	db	10
  2618  00FFC0  00                 	db	0
  2619  00FFC1                     STR_44:
  2620                           
  2621                           ; BSR set to: 0
  2622  00FFC1  4D                 	db	77	;'M'
  2623  00FFC2  61                 	db	97	;'a'
  2624  00FFC3  72                 	db	114	;'r'
  2625  00FFC4  20                 	db	32
  2626  00FFC5  32                 	db	50	;'2'
  2627  00FFC6  31                 	db	49	;'1'
  2628  00FFC7  20                 	db	32
  2629  00FFC8  32                 	db	50	;'2'
  2630  00FFC9  30                 	db	48	;'0'
  2631  00FFCA  32                 	db	50	;'2'
  2632  00FFCB  31                 	db	49	;'1'
  2633  00FFCC  00                 	db	0
  2634  00FFCD                     STR_45:
  2635                           
  2636                           ; BSR set to: 0
  2637  00FFCD  30                 	db	48	;'0'
  2638  00FFCE  30                 	db	48	;'0'
  2639  00FFCF  3A                 	db	58	;':'
  2640  00FFD0  32                 	db	50	;'2'
  2641  00FFD1  38                 	db	56	;'8'
  2642  00FFD2  3A                 	db	58	;':'
  2643  00FFD3  33                 	db	51	;'3'
  2644  00FFD4  32                 	db	50	;'2'
  2645  00FFD5  00                 	db	0
  2646  00FFD6                     STR_29:
  2647                           
  2648                           ; BSR set to: 0
  2649  00FFD6  53                 	db	83	;'S'
  2650  00FFD7  65                 	db	101	;'e'
  2651  00FFD8  72                 	db	114	;'r'
  2652  00FFD9  69                 	db	105	;'i'
  2653  00FFDA  61                 	db	97	;'a'
  2654  00FFDB  6C                 	db	108	;'l'
  2655  00FFDC  00                 	db	0
  2656  00FFDD                     STR_80:
  2657                           
  2658                           ; BSR set to: 0
  2659  00FFDD  73                 	db	115	;'s'
  2660  00FFDE  65                 	db	101	;'e'
  2661  00FFDF  72                 	db	114	;'r'
  2662  00FFE0  69                 	db	105	;'i'
  2663  00FFE1  61                 	db	97	;'a'
  2664  00FFE2  6C                 	db	108	;'l'
  2665  00FFE3  00                 	db	0
  2666  00FFE4                     STR_76:
  2667                           
  2668                           ; BSR set to: 0
  2669  00FFE4  64                 	db	100	;'d'
  2670  00FFE5  65                 	db	101	;'e'
  2671  00FFE6  62                 	db	98	;'b'
  2672  00FFE7  75                 	db	117	;'u'
  2673  00FFE8  67                 	db	103	;'g'
  2674  00FFE9  00                 	db	0
  2675  00FFEA                     STR_31:
  2676                           
  2677                           ; BSR set to: 0
  2678  00FFEA  50                 	db	80	;'P'
  2679  00FFEB  61                 	db	97	;'a'
  2680  00FFEC  72                 	db	114	;'r'
  2681  00FFED  74                 	db	116	;'t'
  2682  00FFEE  00                 	db	0
  2683  00FFEF                     STR_82:
  2684                           
  2685                           ; BSR set to: 0
  2686  00FFEF  70                 	db	112	;'p'
  2687  00FFF0  61                 	db	97	;'a'
  2688  00FFF1  72                 	db	114	;'r'
  2689  00FFF2  74                 	db	116	;'t'
  2690  00FFF3  00                 	db	0
  2691  00FFF4                     STR_33:
  2692                           
  2693                           ; BSR set to: 0
  2694  00FFF4  52                 	db	82	;'R'
  2695  00FFF5  65                 	db	101	;'e'
  2696  00FFF6  76                 	db	118	;'v'
  2697  00FFF7  00                 	db	0
  2698  00FFF8                     STR_84:
  2699                           
  2700                           ; BSR set to: 0
  2701  00FFF8  72                 	db	114	;'r'
  2702  00FFF9  65                 	db	101	;'e'
  2703  00FFFA  76                 	db	118	;'v'
  2704  00FFFB  00                 	db	0
  2705  00FFFC                     STR_78:
  2706                           
  2707                           ; BSR set to: 0
  2708  00FFFC  3F                 	db	63	;'?'
  2709  00FFFD  00                 	db	0
  2710  0000                     
  2711                           ; #config settings
  2712  00FFFE  00                 	db	0	; dummy byte at the end
  2713  0000                     
  2714                           	psect	cinit
  2715  00296C                     __pcinit:
  2716                           	opt callstack 0
  2717  00296C                     start_initialization:
  2718                           	opt callstack 0
  2719  00296C                     __initialization:
  2720                           	opt callstack 0
  2721                           
  2722                           ; Initialize objects allocated to BANK4 (64 bytes)
  2723                           ; load TBLPTR registers with __pidataBANK4
  2724  00296C  0E68               	movlw	low __pidataBANK4
  2725  00296E  6EF6               	movwf	tblptrl,c
  2726  002970  0E3A               	movlw	high __pidataBANK4
  2727  002972  6EF7               	movwf	tblptrh,c
  2728  002974  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  2729  002976  6EF8               	movwf	tblptru,c
  2730  002978  EE04  F064         	lfsr	0,__pdataBANK4
  2731  00297C  EE10 F040          	lfsr	1,64
  2732  002980                     copy_data0:
  2733  002980  0009               	tblrd		*+
  2734  002982  CFF5 FFEE          	movff	tablat,postinc0
  2735  002986  50E5               	movf	postdec1,w,c
  2736  002988  50E1               	movf	fsr1l,w,c
  2737  00298A  E1FA               	bnz	copy_data0
  2738                           
  2739                           ; Initialize objects allocated to BANK3 (64 bytes)
  2740                           ; load TBLPTR registers with __pidataBANK3
  2741  00298C  0E28               	movlw	low __pidataBANK3
  2742  00298E  6EF6               	movwf	tblptrl,c
  2743  002990  0E3A               	movlw	high __pidataBANK3
  2744  002992  6EF7               	movwf	tblptrh,c
  2745  002994  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  2746  002996  6EF8               	movwf	tblptru,c
  2747  002998  EE03  F084         	lfsr	0,__pdataBANK3
  2748  00299C  EE10 F040          	lfsr	1,64
  2749  0029A0                     copy_data1:
  2750  0029A0  0009               	tblrd		*+
  2751  0029A2  CFF5 FFEE          	movff	tablat,postinc0
  2752  0029A6  50E5               	movf	postdec1,w,c
  2753  0029A8  50E1               	movf	fsr1l,w,c
  2754  0029AA  E1FA               	bnz	copy_data1
  2755                           
  2756                           ; Initialize objects allocated to BANK2 (95 bytes)
  2757                           ; load TBLPTR registers with __pidataBANK2
  2758  0029AC  0E62               	movlw	low __pidataBANK2
  2759  0029AE  6EF6               	movwf	tblptrl,c
  2760  0029B0  0E35               	movlw	high __pidataBANK2
  2761  0029B2  6EF7               	movwf	tblptrh,c
  2762  0029B4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2763  0029B6  6EF8               	movwf	tblptru,c
  2764  0029B8  EE02  F097         	lfsr	0,__pdataBANK2
  2765  0029BC  EE10 F05F          	lfsr	1,95
  2766  0029C0                     copy_data2:
  2767  0029C0  0009               	tblrd		*+
  2768  0029C2  CFF5 FFEE          	movff	tablat,postinc0
  2769  0029C6  50E5               	movf	postdec1,w,c
  2770  0029C8  50E1               	movf	fsr1l,w,c
  2771  0029CA  E1FA               	bnz	copy_data2
  2772                           
  2773                           ; Initialize objects allocated to BANK1 (107 bytes)
  2774                           ; load TBLPTR registers with __pidataBANK1
  2775  0029CC  0E6A               	movlw	low __pidataBANK1
  2776  0029CE  6EF6               	movwf	tblptrl,c
  2777  0029D0  0E33               	movlw	high __pidataBANK1
  2778  0029D2  6EF7               	movwf	tblptrh,c
  2779  0029D4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2780  0029D6  6EF8               	movwf	tblptru,c
  2781  0029D8  EE01  F073         	lfsr	0,__pdataBANK1
  2782  0029DC  EE10 F06B          	lfsr	1,107
  2783  0029E0                     copy_data3:
  2784  0029E0  0009               	tblrd		*+
  2785  0029E2  CFF5 FFEE          	movff	tablat,postinc0
  2786  0029E6  50E5               	movf	postdec1,w,c
  2787  0029E8  50E1               	movf	fsr1l,w,c
  2788  0029EA  E1FA               	bnz	copy_data3
  2789                           
  2790                           ; Clear objects allocated to BANK5 (100 bytes)
  2791  0029EC  EE05  F000         	lfsr	0,__pbssBANK5
  2792  0029F0  0E64               	movlw	100
  2793  0029F2                     clear_0:
  2794  0029F2  6AEE               	clrf	postinc0,c
  2795  0029F4  06E8               	decf	wreg,f,c
  2796  0029F6  E1FD               	bnz	clear_0
  2797                           
  2798                           ; Clear objects allocated to BANK4 (100 bytes)
  2799  0029F8  EE04  F000         	lfsr	0,__pbssBANK4
  2800  0029FC  0E64               	movlw	100
  2801  0029FE                     clear_1:
  2802  0029FE  6AEE               	clrf	postinc0,c
  2803  002A00  06E8               	decf	wreg,f,c
  2804  002A02  E1FD               	bnz	clear_1
  2805                           
  2806                           ; Clear objects allocated to BANK3 (132 bytes)
  2807  002A04  EE03  F000         	lfsr	0,__pbssBANK3
  2808  002A08  0E84               	movlw	132
  2809  002A0A                     clear_2:
  2810  002A0A  6AEE               	clrf	postinc0,c
  2811  002A0C  06E8               	decf	wreg,f,c
  2812  002A0E  E1FD               	bnz	clear_2
  2813                           
  2814                           ; Clear objects allocated to BANK2 (151 bytes)
  2815  002A10  EE02  F000         	lfsr	0,__pbssBANK2
  2816  002A14  0E97               	movlw	151
  2817  002A16                     clear_3:
  2818  002A16  6AEE               	clrf	postinc0,c
  2819  002A18  06E8               	decf	wreg,f,c
  2820  002A1A  E1FD               	bnz	clear_3
  2821                           
  2822                           ; Clear objects allocated to BANK1 (115 bytes)
  2823  002A1C  EE01  F000         	lfsr	0,__pbssBANK1
  2824  002A20  0E73               	movlw	115
  2825  002A22                     clear_4:
  2826  002A22  6AEE               	clrf	postinc0,c
  2827  002A24  06E8               	decf	wreg,f,c
  2828  002A26  E1FD               	bnz	clear_4
  2829                           
  2830                           ; Clear objects allocated to BANK0 (21 bytes)
  2831  002A28  EE00  F0AC         	lfsr	0,__pbssBANK0
  2832  002A2C  0E15               	movlw	21
  2833  002A2E                     clear_5:
  2834  002A2E  6AEE               	clrf	postinc0,c
  2835  002A30  06E8               	decf	wreg,f,c
  2836  002A32  E1FD               	bnz	clear_5
  2837                           
  2838                           ; Clear objects allocated to COMRAM (4 bytes)
  2839  002A34  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2840  002A36  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2841  002A38  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2842  002A3A  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2843  002A3C                     end_of_initialization:
  2844                           	opt callstack 0
  2845  002A3C                     __end_of__initialization:
  2846                           	opt callstack 0
  2847  002A3C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2848  002A3E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2849  002A40  0100               	movlb	0
  2850  002A42  EFD4  F012         	goto	_main	;jump to C main() function
  2851                           
  2852                           	psect	bssCOMRAM
  2853  000057                     __pbssCOMRAM:
  2854                           	opt callstack 0
  2855  000057                     _flags:
  2856                           	opt callstack 0
  2857  000057                     	ds	2
  2858  000059                     _eusart1RxHead:
  2859                           	opt callstack 0
  2860  000059                     	ds	1
  2861  00005A                     _eusart2RxHead:
  2862                           	opt callstack 0
  2863  00005A                     	ds	1
  2864                           
  2865                           	psect	bssBANK0
  2866  0000AC                     __pbssBANK0:
  2867                           	opt callstack 0
  2868  0000AC                     _width:
  2869                           	opt callstack 0
  2870  0000AC                     	ds	2
  2871  0000AE                     _prec:
  2872                           	opt callstack 0
  2873  0000AE                     	ds	2
  2874  0000B0                     _ByteHi:
  2875                           	opt callstack 0
  2876  0000B0                     	ds	2
  2877  0000B2                     _MBResCnt:
  2878                           	opt callstack 0
  2879  0000B2                     	ds	2
  2880  0000B4                     _ByteNum:
  2881                           	opt callstack 0
  2882  0000B4                     	ds	2
  2883  0000B6                     _ModDataCnt:
  2884                           	opt callstack 0
  2885  0000B6                     	ds	2
  2886  0000B8                     _Debug:
  2887                           	opt callstack 0
  2888  0000B8                     	ds	1
  2889  0000B9                     _eusart1RxCount:
  2890                           	opt callstack 0
  2891  0000B9                     	ds	1
  2892  0000BA                     _eusart1RxTail:
  2893                           	opt callstack 0
  2894  0000BA                     	ds	1
  2895  0000BB                     _eusart1TxTail:
  2896                           	opt callstack 0
  2897  0000BB                     	ds	1
  2898  0000BC                     _eusart1TxHead:
  2899                           	opt callstack 0
  2900  0000BC                     	ds	1
  2901  0000BD                     _eusart2RxCount:
  2902                           	opt callstack 0
  2903  0000BD                     	ds	1
  2904  0000BE                     _eusart2RxTail:
  2905                           	opt callstack 0
  2906  0000BE                     	ds	1
  2907  0000BF                     _eusart2TxTail:
  2908                           	opt callstack 0
  2909  0000BF                     	ds	1
  2910  0000C0                     _eusart2TxHead:
  2911                           	opt callstack 0
  2912  0000C0                     	ds	1
  2913                           
  2914                           	psect	bssBANK1
  2915  000100                     __pbssBANK1:
  2916                           	opt callstack 0
  2917  000100                     _eusart2RxStatusBuffer:
  2918                           	opt callstack 0
  2919  000100                     	ds	32
  2920  000120                     _eusart1TxBuffer:
  2921                           	opt callstack 0
  2922  000120                     	ds	16
  2923  000130                     	ds	11
  2924  00013B                     _nout:
  2925                           	opt callstack 0
  2926  00013B                     	ds	2
  2927  00013D                     	ds	2
  2928  00013F                     _rxStatus:
  2929                           	opt callstack 0
  2930  00013F                     	ds	1
  2931  000140                     _RXStat:
  2932                           	opt callstack 0
  2933  000140                     	ds	1
  2934  000141                     _eusart1RxLastError:
  2935                           	opt callstack 0
  2936  000141                     	ds	1
  2937  000142                     _eusart2RxLastError:
  2938                           	opt callstack 0
  2939  000142                     	ds	1
  2940  000143                     _dbuf:
  2941                           	opt callstack 0
  2942  000143                     	ds	32
  2943  000163                     _Command:
  2944                           	opt callstack 0
  2945  000163                     	ds	16
  2946                           
  2947                           	psect	dataBANK1
  2948  000173                     __pdataBANK1:
  2949                           	opt callstack 0
  2950  000173                     ValidateCmd@F10739:
  2951                           	opt callstack 0
  2952  000173                     	ds	20
  2953  000187                     ValidateCmd@F10736:
  2954                           	opt callstack 0
  2955  000187                     	ds	20
  2956  00019B                     _MB301xx:
  2957                           	opt callstack 0
  2958  00019B                     	ds	14
  2959  0001A9                     _MB304xx:
  2960                           	opt callstack 0
  2961  0001A9                     	ds	10
  2962  0001B3                     _MB303xx:
  2963                           	opt callstack 0
  2964  0001B3                     	ds	10
  2965  0001BD                     stoa@F1139:
  2966                           	opt callstack 0
  2967  0001BD                     	ds	7
  2968  0001C4                     _MB307xx:
  2969                           	opt callstack 0
  2970  0001C4                     	ds	6
  2971  0001CA                     _MB305xx:
  2972                           	opt callstack 0
  2973  0001CA                     	ds	6
  2974  0001D0                     _MB306xx:
  2975                           	opt callstack 0
  2976  0001D0                     	ds	4
  2977  0001D4                     ReadRX232@F10718:
  2978                           	opt callstack 0
  2979  0001D4                     	ds	2
  2980  0001D6                     _ByteLo:
  2981                           	opt callstack 0
  2982  0001D6                     	ds	2
  2983  0001D8                     _MBResCRC:
  2984                           	opt callstack 0
  2985  0001D8                     	ds	2
  2986  0001DA                     _ExpectedBytes:
  2987                           	opt callstack 0
  2988  0001DA                     	ds	2
  2989  0001DC                     _MB302xx:
  2990                           	opt callstack 0
  2991  0001DC                     	ds	2
  2992                           
  2993                           	psect	bssBANK2
  2994  000200                     __pbssBANK2:
  2995                           	opt callstack 0
  2996  000200                     _ModbusData:
  2997                           	opt callstack 0
  2998  000200                     	ds	100
  2999  000264                     _eusart2TxBuffer:
  3000                           	opt callstack 0
  3001  000264                     	ds	32
  3002  000284                     	ds	19
  3003                           
  3004                           	psect	dataBANK2
  3005  000297                     __pdataBANK2:
  3006                           	opt callstack 0
  3007  000297                     ValidateCmd@F10742:
  3008                           	opt callstack 0
  3009  000297                     	ds	20
  3010  0002AB                     _MBRespon:
  3011                           	opt callstack 0
  3012  0002AB                     	ds	75
  3013                           
  3014                           	psect	bssBANK3
  3015  000300                     __pbssBANK3:
  3016                           	opt callstack 0
  3017  000300                     _eusart1RxStatusBuffer:
  3018                           	opt callstack 0
  3019  000300                     	ds	100
  3020  000364                     _eusart2RxBuffer:
  3021                           	opt callstack 0
  3022  000364                     	ds	32
  3023                           
  3024                           	psect	dataBANK3
  3025  000384                     __pdataBANK3:
  3026                           	opt callstack 0
  3027  000384                     _MB300xx:
  3028                           	opt callstack 0
  3029  000384                     	ds	64
  3030                           
  3031                           	psect	bssBANK4
  3032  000400                     __pbssBANK4:
  3033                           	opt callstack 0
  3034  000400                     _eusart1RxBuffer:
  3035                           	opt callstack 0
  3036  000400                     	ds	100
  3037                           
  3038                           	psect	dataBANK4
  3039  000464                     __pdataBANK4:
  3040                           	opt callstack 0
  3041  000464                     _MB400xx:
  3042                           	opt callstack 0
  3043  000464                     	ds	64
  3044                           
  3045                           	psect	bssBANK5
  3046  000500                     __pbssBANK5:
  3047                           	opt callstack 0
  3048  000500                     _rxData:
  3049                           	opt callstack 0
  3050  000500                     	ds	100
  3051                           
  3052                           	psect	cstackBANK4
  3053  0004A4                     __pcstackBANK4:
  3054                           	opt callstack 0
  3055  0004A4                     ValidateCmd@ConfName:
  3056                           	opt callstack 0
  3057                           
  3058                           ; 20 bytes @ 0x0
  3059  0004A4                     	ds	20
  3060  0004B8                     ValidateCmd@ConfName_1470:
  3061                           	opt callstack 0
  3062                           
  3063                           ; 20 bytes @ 0x14
  3064  0004B8                     	ds	20
  3065  0004CC                     ValidateCmd@ConfName_1474:
  3066                           	opt callstack 0
  3067                           
  3068                           ; 20 bytes @ 0x28
  3069  0004CC                     	ds	20
  3070                           
  3071                           	psect	cstackBANK0
  3072  000060                     __pcstackBANK0:
  3073                           	opt callstack 0
  3074  000060                     vfpfcnvrt@ll:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 8 bytes @ 0x0
  3078  000060                     	ds	8
  3079  000068                     vfpfcnvrt@cp:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x8
  3083  000068                     	ds	2
  3084  00006A                     vfpfcnvrt@c:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 1 bytes @ 0xA
  3088  00006A                     	ds	1
  3089  00006B                     vfpfcnvrt@done:
  3090                           	opt callstack 0
  3091                           
  3092                           ; 2 bytes @ 0xB
  3093  00006B                     	ds	2
  3094  00006D                     _vfpfcnvrt$1596:
  3095                           	opt callstack 0
  3096                           
  3097                           ; 2 bytes @ 0xD
  3098  00006D                     	ds	2
  3099  00006F                     vfpfcnvrt@llu:
  3100                           	opt callstack 0
  3101                           
  3102                           ; 8 bytes @ 0xF
  3103  00006F                     	ds	8
  3104  000077                     ?_vfprintf:
  3105                           	opt callstack 0
  3106  000077                     vfprintf@fp:
  3107                           	opt callstack 0
  3108                           
  3109                           ; 2 bytes @ 0x17
  3110  000077                     	ds	2
  3111  000079                     vfprintf@fmt:
  3112                           	opt callstack 0
  3113                           
  3114                           ; 2 bytes @ 0x19
  3115  000079                     	ds	2
  3116  00007B                     vfprintf@ap:
  3117                           	opt callstack 0
  3118                           
  3119                           ; 2 bytes @ 0x1B
  3120  00007B                     	ds	2
  3121  00007D                     ?_printf:
  3122                           	opt callstack 0
  3123  00007D                     printf@fmt:
  3124                           	opt callstack 0
  3125                           
  3126                           ; 2 bytes @ 0x1D
  3127  00007D                     	ds	10
  3128  000087                     printf@ap:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 2 bytes @ 0x27
  3132  000087                     	ds	2
  3133  000089                     ??_ModbusFC03:
  3134  000089                     ??_checkCRC:
  3135  000089                     ?_ReadRX232:
  3136                           	opt callstack 0
  3137  000089                     AddRxBuffToModBus@i:
  3138                           	opt callstack 0
  3139  000089                     PrintModbus@i:
  3140                           	opt callstack 0
  3141  000089                     PrintModRespon@i:
  3142                           	opt callstack 0
  3143  000089                     ReadRX232@NumChars:
  3144                           	opt callstack 0
  3145  000089                     ClearEEAddRange@StartAdd:
  3146                           	opt callstack 0
  3147  000089                     InitialiseString@PartNum:
  3148                           	opt callstack 0
  3149                           
  3150                           ; 19 bytes @ 0x29
  3151  000089                     	ds	2
  3152  00008B                     ??_ModbusFC10:
  3153  00008B                     ModbusError@ErrorCode:
  3154                           	opt callstack 0
  3155  00008B                     ClearEEAddRange@NumBytes:
  3156                           	opt callstack 0
  3157                           
  3158                           ; 2 bytes @ 0x2B
  3159  00008B                     	ds	2
  3160  00008D                     SaveCardDat@Name:
  3161                           	opt callstack 0
  3162                           
  3163                           ; 2 bytes @ 0x2D
  3164  00008D                     	ds	1
  3165  00008E                     checkCRC@crcHigh:
  3166                           	opt callstack 0
  3167                           
  3168                           ; 2 bytes @ 0x2E
  3169  00008E                     	ds	1
  3170  00008F                     ModbusFC10@TempData:
  3171                           	opt callstack 0
  3172  00008F                     SaveCardDat@MBAddress:
  3173                           	opt callstack 0
  3174                           
  3175                           ; 2 bytes @ 0x2F
  3176  00008F                     	ds	1
  3177  000090                     checkCRC@crcLow:
  3178                           	opt callstack 0
  3179                           
  3180                           ; 2 bytes @ 0x30
  3181  000090                     	ds	1
  3182  000091                     ModbusFC10@i:
  3183                           	opt callstack 0
  3184  000091                     SaveCardDat@dataeeAddr:
  3185                           	opt callstack 0
  3186                           
  3187                           ; 2 bytes @ 0x31
  3188  000091                     	ds	1
  3189  000092                     checkCRC@j:
  3190                           	opt callstack 0
  3191                           
  3192                           ; 2 bytes @ 0x32
  3193  000092                     	ds	1
  3194  000093                     ModbusFC10@j:
  3195                           	opt callstack 0
  3196  000093                     SaveCardDat@NumBytes:
  3197                           	opt callstack 0
  3198                           
  3199                           ; 2 bytes @ 0x33
  3200  000093                     	ds	1
  3201  000094                     checkCRC@crc:
  3202                           	opt callstack 0
  3203                           
  3204                           ; 2 bytes @ 0x34
  3205  000094                     	ds	1
  3206  000095                     ??_SaveCardDat:
  3207                           
  3208                           ; 1 bytes @ 0x35
  3209  000095                     	ds	1
  3210  000096                     checkCRC@i:
  3211                           	opt callstack 0
  3212                           
  3213                           ; 2 bytes @ 0x36
  3214  000096                     	ds	1
  3215  000097                     _SaveCardDat$2458:
  3216                           	opt callstack 0
  3217                           
  3218                           ; 2 bytes @ 0x37
  3219  000097                     	ds	2
  3220  000099                     SaveCardDat@dataeeAddrWrk:
  3221                           	opt callstack 0
  3222                           
  3223                           ; 2 bytes @ 0x39
  3224  000099                     	ds	2
  3225  00009B                     SaveCardDat@i:
  3226                           	opt callstack 0
  3227                           
  3228                           ; 2 bytes @ 0x3B
  3229  00009B                     	ds	1
  3230  00009C                     InitialiseString@SerialNum:
  3231                           	opt callstack 0
  3232                           
  3233                           ; 11 bytes @ 0x3C
  3234  00009C                     	ds	1
  3235  00009D                     SaveCardDat@Conf:
  3236                           	opt callstack 0
  3237                           
  3238                           ; 1 bytes @ 0x3D
  3239  00009D                     	ds	10
  3240  0000A7                     InitialiseString@Partial:
  3241                           	opt callstack 0
  3242                           
  3243                           ; 1 bytes @ 0x47
  3244  0000A7                     	ds	1
  3245  0000A8                     InitialiseString@RevNum:
  3246                           	opt callstack 0
  3247                           
  3248                           ; 2 bytes @ 0x48
  3249  0000A8                     	ds	2
  3250  0000AA                     ??_main:
  3251                           
  3252                           ; 1 bytes @ 0x4A
  3253  0000AA                     	ds	2
  3254                           
  3255                           	psect	cstackCOMRAM
  3256  000001                     __pcstackCOMRAM:
  3257                           	opt callstack 0
  3258  000001                     ??_INTERRUPT_InterruptManager:
  3259  000001                     
  3260                           ; 1 bytes @ 0x0
  3261  000001                     	ds	4
  3262  000005                     ??_ClearRxBuff:
  3263  000005                     ?_generateCRC:
  3264                           	opt callstack 0
  3265  000005                     ?_strcmp:
  3266                           	opt callstack 0
  3267  000005                     ?_strlen:
  3268                           	opt callstack 0
  3269  000005                     ?_isupper:
  3270                           	opt callstack 0
  3271  000005                     ?_isalpha:
  3272                           	opt callstack 0
  3273  000005                     ?_isdigit:
  3274                           	opt callstack 0
  3275  000005                     ?_isspace:
  3276                           	opt callstack 0
  3277  000005                     ?_islower:
  3278                           	opt callstack 0
  3279  000005                     ?___wmul:
  3280                           	opt callstack 0
  3281  000005                     ?___aodiv:
  3282                           	opt callstack 0
  3283  000005                     ?___aomod:
  3284                           	opt callstack 0
  3285  000005                     ?___lodiv:
  3286                           	opt callstack 0
  3287  000005                     ?___lomod:
  3288                           	opt callstack 0
  3289  000005                     EUSART2_Read@readValue:
  3290                           	opt callstack 0
  3291  000005                     EUSART2_Write@txData:
  3292                           	opt callstack 0
  3293  000005                     EUSART1_Read@readValue:
  3294                           	opt callstack 0
  3295  000005                     EUSART1_Write@txData:
  3296                           	opt callstack 0
  3297  000005                     DATAEE_WriteByte@bAdd:
  3298                           	opt callstack 0
  3299  000005                     DATAEE_ReadByte@bAdd:
  3300                           	opt callstack 0
  3301  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  3302                           	opt callstack 0
  3303  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  3304                           	opt callstack 0
  3305  000005                     EUSART2_SetErrorHandler@interruptHandler:
  3306                           	opt callstack 0
  3307  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3308                           	opt callstack 0
  3309  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3310                           	opt callstack 0
  3311  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  3312                           	opt callstack 0
  3313  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  3314                           	opt callstack 0
  3315  000005                     EUSART1_SetErrorHandler@interruptHandler:
  3316                           	opt callstack 0
  3317  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  3318                           	opt callstack 0
  3319  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  3320                           	opt callstack 0
  3321  000005                     ClearModbusData@i:
  3322                           	opt callstack 0
  3323  000005                     generateCRC@MessCnt:
  3324                           	opt callstack 0
  3325  000005                     ClearModbusRespon@i:
  3326                           	opt callstack 0
  3327  000005                     ___wmul@multiplier:
  3328                           	opt callstack 0
  3329  000005                     isalpha@c:
  3330                           	opt callstack 0
  3331  000005                     isdigit@c:
  3332                           	opt callstack 0
  3333  000005                     isspace@c:
  3334                           	opt callstack 0
  3335  000005                     isupper@c:
  3336                           	opt callstack 0
  3337  000005                     strcmp@l:
  3338                           	opt callstack 0
  3339  000005                     strlen@s:
  3340                           	opt callstack 0
  3341  000005                     islower@c:
  3342                           	opt callstack 0
  3343  000005                     ___aodiv@dividend:
  3344                           	opt callstack 0
  3345  000005                     ___aomod@dividend:
  3346                           	opt callstack 0
  3347  000005                     ___lodiv@dividend:
  3348                           	opt callstack 0
  3349  000005                     ___lomod@dividend:
  3350                           	opt callstack 0
  3351                           
  3352                           ; 8 bytes @ 0x4
  3353  000005                     	ds	1
  3354  000006                     putch@txData:
  3355                           	opt callstack 0
  3356  000006                     ClearRxBuff@i:
  3357                           	opt callstack 0
  3358  000006                     UART1_Write_string@data:
  3359                           	opt callstack 0
  3360                           
  3361                           ; 2 bytes @ 0x5
  3362  000006                     	ds	1
  3363  000007                     ??_isupper:
  3364  000007                     ??_isalpha:
  3365  000007                     ??_isdigit:
  3366  000007                     ??_isspace:
  3367  000007                     ??_islower:
  3368  000007                     DATAEE_WriteByte@bData:
  3369                           	opt callstack 0
  3370  000007                     generateCRC@HiOrLo:
  3371                           	opt callstack 0
  3372  000007                     ___wmul@multiplicand:
  3373                           	opt callstack 0
  3374  000007                     fputc@c:
  3375                           	opt callstack 0
  3376  000007                     strcmp@r:
  3377                           	opt callstack 0
  3378  000007                     strlen@a:
  3379                           	opt callstack 0
  3380                           
  3381                           ; 2 bytes @ 0x6
  3382  000007                     	ds	1
  3383  000008                     ??_generateCRC:
  3384  000008                     DATAEE_WriteByte@GIEBitValue:
  3385                           	opt callstack 0
  3386  000008                     UART1_Write_string@data_len:
  3387                           	opt callstack 0
  3388                           
  3389                           ; 2 bytes @ 0x7
  3390  000008                     	ds	1
  3391  000009                     ??_strcmp:
  3392  000009                     ___wmul@product:
  3393                           	opt callstack 0
  3394  000009                     memmove@d1:
  3395                           	opt callstack 0
  3396  000009                     fputc@fp:
  3397                           	opt callstack 0
  3398  000009                     strcpy@dest:
  3399                           	opt callstack 0
  3400                           
  3401                           ; 2 bytes @ 0x8
  3402  000009                     	ds	1
  3403  00000A                     ??_UART1_Write_string:
  3404  00000A                     generateCRC@crcHigh:
  3405                           	opt callstack 0
  3406  00000A                     CardConfigIni@Name:
  3407                           	opt callstack 0
  3408                           
  3409                           ; 2 bytes @ 0x9
  3410  00000A                     	ds	1
  3411  00000B                     ??_fputc:
  3412  00000B                     ?_toupper:
  3413                           	opt callstack 0
  3414  00000B                     _isspace$2083:
  3415                           	opt callstack 0
  3416  00000B                     UART1_Write_string@i:
  3417                           	opt callstack 0
  3418  00000B                     memmove@s1:
  3419                           	opt callstack 0
  3420  00000B                     strcpy@src:
  3421                           	opt callstack 0
  3422  00000B                     toupper@c:
  3423                           	opt callstack 0
  3424                           
  3425                           ; 2 bytes @ 0xA
  3426  00000B                     	ds	1
  3427  00000C                     ?_atoi:
  3428                           	opt callstack 0
  3429  00000C                     generateCRC@crcLow:
  3430                           	opt callstack 0
  3431  00000C                     CardConfigIni@RetNum:
  3432                           	opt callstack 0
  3433  00000C                     atoi@s:
  3434                           	opt callstack 0
  3435                           
  3436                           ; 2 bytes @ 0xB
  3437  00000C                     	ds	1
  3438  00000D                     ??_strcpy:
  3439  00000D                     ??_toupper:
  3440  00000D                     memmove@n:
  3441                           	opt callstack 0
  3442  00000D                     ___aodiv@divisor:
  3443                           	opt callstack 0
  3444  00000D                     ___aomod@divisor:
  3445                           	opt callstack 0
  3446  00000D                     ___lodiv@divisor:
  3447                           	opt callstack 0
  3448  00000D                     ___lomod@divisor:
  3449                           	opt callstack 0
  3450                           
  3451                           ; 8 bytes @ 0xC
  3452  00000D                     	ds	1
  3453  00000E                     ??_atoi:
  3454  00000E                     generateCRC@i:
  3455                           	opt callstack 0
  3456  00000E                     CardConfigIni@dataeeAddrWrk:
  3457                           	opt callstack 0
  3458                           
  3459                           ; 2 bytes @ 0xD
  3460  00000E                     	ds	1
  3461  00000F                     ??_memmove:
  3462  00000F                     strcpy@s:
  3463                           	opt callstack 0
  3464                           
  3465                           ; 2 bytes @ 0xE
  3466  00000F                     	ds	1
  3467  000010                     ?_stoa:
  3468                           	opt callstack 0
  3469  000010                     generateCRC@j:
  3470                           	opt callstack 0
  3471  000010                     CardConfigIni@NumBytes:
  3472                           	opt callstack 0
  3473  000010                     stoa@fp:
  3474                           	opt callstack 0
  3475  000010                     fputs@s:
  3476                           	opt callstack 0
  3477                           
  3478                           ; 2 bytes @ 0xF
  3479  000010                     	ds	1
  3480  000011                     memmove@d:
  3481                           	opt callstack 0
  3482  000011                     strcpy@d:
  3483                           	opt callstack 0
  3484  000011                     _toupper$2170:
  3485                           	opt callstack 0
  3486                           
  3487                           ; 2 bytes @ 0x10
  3488  000011                     	ds	1
  3489  000012                     ??_CardConfigIni:
  3490  000012                     generateCRC@crc:
  3491                           	opt callstack 0
  3492  000012                     stoa@s:
  3493                           	opt callstack 0
  3494  000012                     atoi@neg:
  3495                           	opt callstack 0
  3496  000012                     fputs@fp:
  3497                           	opt callstack 0
  3498                           
  3499                           ; 2 bytes @ 0x11
  3500  000012                     	ds	1
  3501  000013                     memmove@s:
  3502                           	opt callstack 0
  3503  000013                     strcat@dest:
  3504                           	opt callstack 0
  3505                           
  3506                           ; 2 bytes @ 0x12
  3507  000013                     	ds	1
  3508  000014                     ??_stoa:
  3509  000014                     fputs@c:
  3510                           	opt callstack 0
  3511  000014                     CardConfigIni@j:
  3512                           	opt callstack 0
  3513  000014                     _atoi$2056:
  3514                           	opt callstack 0
  3515                           
  3516                           ; 2 bytes @ 0x13
  3517  000014                     	ds	1
  3518  000015                     ___aodiv@counter:
  3519                           	opt callstack 0
  3520  000015                     ___aomod@counter:
  3521                           	opt callstack 0
  3522  000015                     ___lomod@counter:
  3523                           	opt callstack 0
  3524  000015                     fputs@i:
  3525                           	opt callstack 0
  3526  000015                     strcat@src:
  3527                           	opt callstack 0
  3528  000015                     stoa@nuls:
  3529                           	opt callstack 0
  3530  000015                     ___lodiv@quotient:
  3531                           	opt callstack 0
  3532                           
  3533                           ; 8 bytes @ 0x14
  3534  000015                     	ds	1
  3535  000016                     ___aodiv@sign:
  3536                           	opt callstack 0
  3537  000016                     ___aomod@sign:
  3538                           	opt callstack 0
  3539  000016                     CardConfigIni@i:
  3540                           	opt callstack 0
  3541  000016                     _atoi$2058:
  3542                           	opt callstack 0
  3543                           
  3544                           ; 2 bytes @ 0x15
  3545  000016                     	ds	1
  3546  000017                     ?_abs:
  3547                           	opt callstack 0
  3548  000017                     ?_pad:
  3549                           	opt callstack 0
  3550  000017                     pad@fp:
  3551                           	opt callstack 0
  3552  000017                     abs@a:
  3553                           	opt callstack 0
  3554  000017                     ___aodiv@quotient:
  3555                           	opt callstack 0
  3556                           
  3557                           ; 8 bytes @ 0x16
  3558  000017                     	ds	1
  3559  000018                     CardConfigIni@readDataOdd:
  3560                           	opt callstack 0
  3561  000018                     _atoi$2057:
  3562                           	opt callstack 0
  3563                           
  3564                           ; 1 bytes @ 0x17
  3565  000018                     	ds	1
  3566  000019                     ??_abs:
  3567  000019                     CardConfigIni@readDataEven:
  3568                           	opt callstack 0
  3569  000019                     pad@buf:
  3570                           	opt callstack 0
  3571  000019                     atoi@n:
  3572                           	opt callstack 0
  3573                           
  3574                           ; 2 bytes @ 0x18
  3575  000019                     	ds	2
  3576  00001B                     pad@p:
  3577                           	opt callstack 0
  3578                           
  3579                           ; 2 bytes @ 0x1A
  3580  00001B                     	ds	1
  3581  00001C                     stoa@i:
  3582                           	opt callstack 0
  3583                           
  3584                           ; 2 bytes @ 0x1B
  3585  00001C                     	ds	1
  3586  00001D                     ??_pad:
  3587  00001D                     ___lodiv@counter:
  3588                           	opt callstack 0
  3589                           
  3590                           ; 1 bytes @ 0x1C
  3591  00001D                     	ds	1
  3592  00001E                     pad@i:
  3593                           	opt callstack 0
  3594  00001E                     stoa@w:
  3595                           	opt callstack 0
  3596                           
  3597                           ; 2 bytes @ 0x1D
  3598  00001E                     	ds	2
  3599  000020                     pad@w:
  3600                           	opt callstack 0
  3601  000020                     stoa@cp:
  3602                           	opt callstack 0
  3603                           
  3604                           ; 2 bytes @ 0x1F
  3605  000020                     	ds	2
  3606  000022                     ?_dtoa:
  3607                           	opt callstack 0
  3608  000022                     ?_utoa:
  3609                           	opt callstack 0
  3610  000022                     ?_xtoa:
  3611                           	opt callstack 0
  3612  000022                     dtoa@fp:
  3613                           	opt callstack 0
  3614  000022                     stoa@p:
  3615                           	opt callstack 0
  3616  000022                     utoa@fp:
  3617                           	opt callstack 0
  3618  000022                     xtoa@fp:
  3619                           	opt callstack 0
  3620                           
  3621                           ; 2 bytes @ 0x21
  3622  000022                     	ds	2
  3623  000024                     stoa@l:
  3624                           	opt callstack 0
  3625  000024                     dtoa@d:
  3626                           	opt callstack 0
  3627  000024                     utoa@d:
  3628                           	opt callstack 0
  3629  000024                     xtoa@d:
  3630                           	opt callstack 0
  3631                           
  3632                           ; 8 bytes @ 0x23
  3633  000024                     	ds	8
  3634  00002C                     ??_dtoa:
  3635  00002C                     ??_utoa:
  3636  00002C                     xtoa@x:
  3637                           	opt callstack 0
  3638                           
  3639                           ; 1 bytes @ 0x2B
  3640  00002C                     	ds	1
  3641  00002D                     ??_xtoa:
  3642                           
  3643                           ; 1 bytes @ 0x2C
  3644  00002D                     	ds	7
  3645  000034                     _dtoa$1552:
  3646                           	opt callstack 0
  3647  000034                     utoa@p:
  3648                           	opt callstack 0
  3649                           
  3650                           ; 2 bytes @ 0x33
  3651  000034                     	ds	1
  3652  000035                     _xtoa$1581:
  3653                           	opt callstack 0
  3654                           
  3655                           ; 2 bytes @ 0x34
  3656  000035                     	ds	1
  3657  000036                     dtoa@p:
  3658                           	opt callstack 0
  3659  000036                     utoa@w:
  3660                           	opt callstack 0
  3661                           
  3662                           ; 2 bytes @ 0x35
  3663  000036                     	ds	1
  3664  000037                     _xtoa$1582:
  3665                           	opt callstack 0
  3666                           
  3667                           ; 2 bytes @ 0x36
  3668  000037                     	ds	1
  3669  000038                     dtoa@w:
  3670                           	opt callstack 0
  3671  000038                     utoa@n:
  3672                           	opt callstack 0
  3673                           
  3674                           ; 8 bytes @ 0x37
  3675  000038                     	ds	1
  3676  000039                     xtoa@p:
  3677                           	opt callstack 0
  3678                           
  3679                           ; 2 bytes @ 0x38
  3680  000039                     	ds	1
  3681  00003A                     dtoa@s:
  3682                           	opt callstack 0
  3683                           
  3684                           ; 2 bytes @ 0x39
  3685  00003A                     	ds	1
  3686  00003B                     xtoa@w:
  3687                           	opt callstack 0
  3688                           
  3689                           ; 2 bytes @ 0x3A
  3690  00003B                     	ds	1
  3691  00003C                     dtoa@n:
  3692                           	opt callstack 0
  3693                           
  3694                           ; 8 bytes @ 0x3B
  3695  00003C                     	ds	1
  3696  00003D                     xtoa@n:
  3697                           	opt callstack 0
  3698                           
  3699                           ; 8 bytes @ 0x3C
  3700  00003D                     	ds	3
  3701  000040                     utoa@i:
  3702                           	opt callstack 0
  3703                           
  3704                           ; 2 bytes @ 0x3F
  3705  000040                     	ds	4
  3706  000044                     dtoa@i:
  3707                           	opt callstack 0
  3708                           
  3709                           ; 2 bytes @ 0x43
  3710  000044                     	ds	1
  3711  000045                     xtoa@i:
  3712                           	opt callstack 0
  3713                           
  3714                           ; 2 bytes @ 0x44
  3715  000045                     	ds	2
  3716  000047                     xtoa@c:
  3717                           	opt callstack 0
  3718                           
  3719                           ; 2 bytes @ 0x46
  3720  000047                     	ds	2
  3721  000049                     ?_vfpfcnvrt:
  3722                           	opt callstack 0
  3723  000049                     vfpfcnvrt@fp:
  3724                           	opt callstack 0
  3725                           
  3726                           ; 2 bytes @ 0x48
  3727  000049                     	ds	2
  3728  00004B                     vfpfcnvrt@fmt:
  3729                           	opt callstack 0
  3730                           
  3731                           ; 2 bytes @ 0x4A
  3732  00004B                     	ds	2
  3733  00004D                     vfpfcnvrt@ap:
  3734                           	opt callstack 0
  3735                           
  3736                           ; 2 bytes @ 0x4C
  3737  00004D                     	ds	2
  3738  00004F                     ??_vfpfcnvrt:
  3739                           
  3740                           ; 1 bytes @ 0x4E
  3741  00004F                     	ds	4
  3742  000053                     vfprintf@cfmt:
  3743                           	opt callstack 0
  3744                           
  3745                           ; 2 bytes @ 0x52
  3746  000053                     	ds	2
  3747  000055                     ??_PrintModbus:
  3748  000055                     ??_PrintModRespon:
  3749  000055                     ??_AddRxBuffToModBus:
  3750  000055                     PrintMB400@i:
  3751                           	opt callstack 0
  3752  000055                     ModbusFC03@i:
  3753                           	opt callstack 0
  3754  000055                     ReadRX232@temp:
  3755                           	opt callstack 0
  3756  000055                     ClearEEAddRange@i:
  3757                           	opt callstack 0
  3758                           
  3759                           ; 2 bytes @ 0x54
  3760  000055                     	ds	1
  3761  000056                     ??_ModbusRx:
  3762  000056                     
  3763                           ; 1 bytes @ 0x55
  3764  000056                     	ds	1
  3765  000057                     
  3766                           ; 1 bytes @ 0x56
  3767 ;;
  3768 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3769 ;;
  3770 ;; *************** function _main *****************
  3771 ;; Defined at:
  3772 ;;		line 29 in file "main.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  RXStat          1    0        _Bool 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;Total ram usage:        3 bytes
  3791 ;; Hardware stack levels required when called:   16
  3792 ;; This function calls:
  3793 ;;		_ClearModbusData
  3794 ;;		_ClearModbusRespon
  3795 ;;		_ClearRxBuff
  3796 ;;		_InitialiseString
  3797 ;;		_ModbusError
  3798 ;;		_ModbusFC03
  3799 ;;		_ModbusFC10
  3800 ;;		_ModbusRx
  3801 ;;		_PrintMB400
  3802 ;;		_PrintModRespon
  3803 ;;		_PrintModbus
  3804 ;;		_RXMode
  3805 ;;		_ReadRX232
  3806 ;;		_SYSTEM_Initialize
  3807 ;;		_ValidateCmd
  3808 ;;		_printf
  3809 ;;		_strcpy
  3810 ;; This function is called by:
  3811 ;;		Startup code after reset
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text0
  3816  0025A8                     __ptext0:
  3817                           	opt callstack 0
  3818  0025A8                     _main:
  3819                           	opt callstack 15
  3820  0025A8                     
  3821                           ;main.c: 32:     SYSTEM_Initialize();
  3822  0025A8  EC76  F01E         	call	_SYSTEM_Initialize	;wreg free
  3823  0025AC                     
  3824                           ;main.c: 39:     (INTCONbits.GIE = 1);
  3825  0025AC  8EF2               	bsf	242,7,c	;volatile
  3826  0025AE                     
  3827                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  3828  0025AE  8CF2               	bsf	242,6,c	;volatile
  3829  0025B0  9883               	bcf	131,4,c	;volatile
  3830  0025B2  9A83               	bcf	131,5,c	;volatile
  3831  0025B4  9C83               	bcf	131,6,c	;volatile
  3832  0025B6  9E83               	bcf	131,7,c	;volatile
  3833  0025B8                     
  3834                           ;main.c: 55:     InitialiseString(0);
  3835  0025B8  0E00               	movlw	0
  3836  0025BA  EC21  F008         	call	_InitialiseString
  3837  0025BE                     
  3838                           ;main.c: 58:     RXMode();
  3839  0025BE  EC1B  F01F         	call	_RXMode	;wreg free
  3840  0025C2                     
  3841                           ;main.c: 59:     ClearRxBuff();
  3842  0025C2  EC66  F01C         	call	_ClearRxBuff	;wreg free
  3843  0025C6                     
  3844                           ;main.c: 60:     ClearModbusRespon();
  3845  0025C6  ECF3  F01C         	call	_ClearModbusRespon	;wreg free
  3846  0025CA                     l7141:
  3847                           
  3848                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  3849  0025CA  EC1F  F010         	call	_ModbusRx	;wreg free
  3850  0025CE  06E8               	decf	wreg,f,c
  3851  0025D0  A4D8               	btfss	status,2,c
  3852  0025D2  EFED  F012         	goto	u7351
  3853  0025D6  EFEF  F012         	goto	u7350
  3854  0025DA                     u7351:
  3855  0025DA  EF38  F013         	goto	l7161
  3856  0025DE                     u7350:
  3857  0025DE  EF17  F013         	goto	l7153
  3858  0025E2                     l7145:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;main.c: 73:                 {;main.c: 77:                     ModbusFC03();
  3862  0025E2  EC5A  F003         	call	_ModbusFC03	;wreg free
  3863                           
  3864                           ;main.c: 78:                     break;
  3865  0025E6  EF2E  F013         	goto	l7155
  3866  0025EA                     l7147:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;main.c: 81:                 {;main.c: 82:                     printf("Function Code 0x1
      +                          0\r\n");
  3870  0025EA  0EF8               	movlw	low STR_1
  3871  0025EC  6F7D               	movwf	printf@fmt& (0+255),b
  3872  0025EE  0EFE               	movlw	high STR_1
  3873  0025F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3874  0025F2  EC2E  F01E         	call	_printf	;wreg free
  3875                           
  3876                           ;main.c: 84:                     printf("Modbus Register Before Update:");
  3877  0025F6  0EFA               	movlw	low STR_2
  3878  0025F8  0100               	movlb	0	; () banked
  3879  0025FA  6F7D               	movwf	printf@fmt& (0+255),b
  3880  0025FC  0EFC               	movlw	high STR_2
  3881  0025FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3882  002600  EC2E  F01E         	call	_printf	;wreg free
  3883                           
  3884                           ;main.c: 85:                     PrintMB400();
  3885  002604  ECEB  F019         	call	_PrintMB400	;wreg free
  3886                           
  3887                           ;main.c: 86:                     ModbusFC10();
  3888  002608  EC14  F00C         	call	_ModbusFC10	;wreg free
  3889                           
  3890                           ;main.c: 88:                     break;
  3891  00260C  EF2E  F013         	goto	l7155
  3892  002610                     l7149:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;main.c: 91:                 {;main.c: 92:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  3896  002610  0E8C               	movlw	low STR_3
  3897  002612  6F7D               	movwf	printf@fmt& (0+255),b
  3898  002614  0EFD               	movlw	high STR_3
  3899  002616  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3900  002618  EC2E  F01E         	call	_printf	;wreg free
  3901                           
  3902                           ;main.c: 94:                     ModbusError(0x01);
  3903  00261C  0E00               	movlw	0
  3904  00261E  0100               	movlb	0	; () banked
  3905  002620  6F8C               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  3906  002622  0E01               	movlw	1
  3907  002624  6F8B               	movwf	ModbusError@ErrorCode& (0+255),b
  3908  002626  ECF4  F015         	call	_ModbusError	;wreg free
  3909                           
  3910                           ;main.c: 95:                     break;
  3911  00262A  EF2E  F013         	goto	l7155
  3912  00262E                     l7153:
  3913  00262E  0102               	movlb	2	; () banked
  3914  002630  5101               	movf	(_ModbusData+1)& (0+255),w,b
  3915  002632  0100               	movlb	0	; () banked
  3916  002634  6FAA               	movwf	??_main& (0+255),b
  3917  002636  6BAB               	clrf	(??_main+1)& (0+255),b
  3918                           
  3919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3920                           ; Switch size 1, requested type "simple"
  3921                           ; Number of cases is 1, Range of values is 0 to 0
  3922                           ; switch strategies available:
  3923                           ; Name         Instructions Cycles
  3924                           ; simple_byte            4     3 (average)
  3925                           ;	Chosen strategy is simple_byte
  3926  002638  51AB               	movf	(??_main+1)& (0+255),w,b
  3927  00263A  0A00               	xorlw	0	; case 0
  3928  00263C  B4D8               	btfsc	status,2,c
  3929  00263E  EF23  F013         	goto	l7285
  3930  002642  EF08  F013         	goto	l7149
  3931  002646                     l7285:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ; Switch size 1, requested type "simple"
  3935                           ; Number of cases is 2, Range of values is 3 to 16
  3936                           ; switch strategies available:
  3937                           ; Name         Instructions Cycles
  3938                           ; simple_byte            7     4 (average)
  3939                           ;	Chosen strategy is simple_byte
  3940  002646  51AA               	movf	??_main& (0+255),w,b
  3941  002648  0A03               	xorlw	3	; case 3
  3942  00264A  B4D8               	btfsc	status,2,c
  3943  00264C  EFF1  F012         	goto	l7145
  3944  002650  0A13               	xorlw	19	; case 16
  3945  002652  B4D8               	btfsc	status,2,c
  3946  002654  EFF5  F012         	goto	l7147
  3947  002658  EF08  F013         	goto	l7149
  3948  00265C                     l7155:
  3949                           
  3950                           ;main.c: 99:             PrintModbus();
  3951  00265C  EC42  F019         	call	_PrintModbus	;wreg free
  3952                           
  3953                           ;main.c: 100:             PrintModRespon();
  3954  002660  ECD6  F017         	call	_PrintModRespon	;wreg free
  3955  002664                     
  3956                           ;main.c: 104:             ClearModbusData();
  3957  002664  EC1A  F01C         	call	_ClearModbusData	;wreg free
  3958  002668                     
  3959                           ;main.c: 105:             ClearModbusRespon();
  3960  002668  ECF3  F01C         	call	_ClearModbusRespon	;wreg free
  3961                           
  3962                           ;main.c: 107:         }else if(ReadRX232(16) != 0){
  3963  00266C  EFE5  F012         	goto	l7141
  3964  002670                     l7161:
  3965  002670  0E00               	movlw	0
  3966  002672  0100               	movlb	0	; () banked
  3967  002674  6F8A               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  3968  002676  0E10               	movlw	16
  3969  002678  6F89               	movwf	ReadRX232@NumChars& (0+255),b
  3970  00267A  EC42  F012         	call	_ReadRX232	;wreg free
  3971  00267E  0100               	movlb	0	; () banked
  3972  002680  5189               	movf	?_ReadRX232& (0+255),w,b
  3973  002682  118A               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3974  002684  B4D8               	btfsc	status,2,c
  3975  002686  EF47  F013         	goto	u7361
  3976  00268A  EF49  F013         	goto	u7360
  3977  00268E                     u7361:
  3978  00268E  EF5E  F013         	goto	l595
  3979  002692                     u7360:
  3980  002692                     
  3981                           ; BSR set to: 0
  3982                           ;main.c: 109:             if(ValidateCmd() ==1){
  3983  002692  ECF3  F00C         	call	_ValidateCmd	;wreg free
  3984  002696                     
  3985                           ;main.c: 116:             printf("\r\nEnter Command : ");
  3986  002696  0E34               	movlw	low STR_4
  3987  002698  0100               	movlb	0	; () banked
  3988  00269A  6F7D               	movwf	printf@fmt& (0+255),b
  3989  00269C  0EFF               	movlw	high STR_4
  3990  00269E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3991  0026A0  EC2E  F01E         	call	_printf	;wreg free
  3992  0026A4                     
  3993                           ;main.c: 117:             strcpy(Command, "");
  3994  0026A4  0E63               	movlw	low _Command
  3995  0026A6  6E09               	movwf	strcpy@dest^0,c
  3996  0026A8  0E01               	movlw	high _Command
  3997  0026AA  6E0A               	movwf	(strcpy@dest+1)^0,c
  3998  0026AC  0EBF               	movlw	low (STR_58+74)
  3999  0026AE  6E0B               	movwf	strcpy@src^0,c
  4000  0026B0  0EF8               	movlw	high (STR_58+74)
  4001  0026B2  6E0C               	movwf	(strcpy@src+1)^0,c
  4002  0026B4  ECE1  F01A         	call	_strcpy	;wreg free
  4003                           
  4004                           ;main.c: 119:         }else{
  4005  0026B8  EFE5  F012         	goto	l7141
  4006  0026BC                     l595:
  4007                           
  4008                           ; BSR set to: 0
  4009  0026BC  EFE5  F012         	goto	l7141
  4010  0026C0  EF93  F000         	goto	start
  4011  0026C4                     __end_of_main:
  4012                           	opt callstack 0
  4013                           
  4014 ;; *************** function _ValidateCmd *****************
  4015 ;; Defined at:
  4016 ;;		line 300 in file "RS232.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  ConfName       20   40[BANK4 ] unsigned char [20]
  4021 ;;  MaxChars        2    0        int 
  4022 ;;  ConfName       20   20[BANK4 ] unsigned char [20]
  4023 ;;  MaxChars        2    0        int 
  4024 ;;  ConfName       20    0[BANK4 ] unsigned char [20]
  4025 ;;  MaxChars        2    0        int 
  4026 ;;  i               2    0        int 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      _Bool 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0      68       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0      68       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;Total ram usage:       68 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:   15
  4043 ;; This function calls:
  4044 ;;		_InitialiseString
  4045 ;;		_SaveCardDat
  4046 ;;		_TogDebug
  4047 ;;		_strcmp
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text1
  4054  0019E6                     __ptext1:
  4055                           	opt callstack 0
  4056  0019E6                     _ValidateCmd:
  4057                           	opt callstack 15
  4058  0019E6                     
  4059                           ;RS232.c: 306:     if(!strcmp(Command,"debug")){
  4060  0019E6  0E63               	movlw	low _Command
  4061  0019E8  6E05               	movwf	strcmp@l^0,c
  4062  0019EA  0E01               	movlw	high _Command
  4063  0019EC  6E06               	movwf	(strcmp@l+1)^0,c
  4064  0019EE  0EE4               	movlw	low STR_76
  4065  0019F0  6E07               	movwf	strcmp@r^0,c
  4066  0019F2  0EFF               	movlw	high STR_76
  4067  0019F4  6E08               	movwf	(strcmp@r+1)^0,c
  4068  0019F6  EC77  F017         	call	_strcmp	;wreg free
  4069  0019FA  5005               	movf	?_strcmp^0,w,c
  4070  0019FC  1006               	iorwf	(?_strcmp+1)^0,w,c
  4071  0019FE  A4D8               	btfss	status,2,c
  4072  001A00  EF04  F00D         	goto	u7271
  4073  001A04  EF06  F00D         	goto	u7270
  4074  001A08                     u7271:
  4075  001A08  EF0B  F00D         	goto	l7047
  4076  001A0C                     u7270:
  4077  001A0C                     
  4078                           ;RS232.c: 307:         TogDebug();
  4079  001A0C  EC92  F01D         	call	_TogDebug	;wreg free
  4080  001A10                     l7041:
  4081                           
  4082                           ;RS232.c: 308:         return 1;
  4083  001A10  0E01               	movlw	1
  4084  001A12  EFC0  F00D         	goto	l940
  4085  001A16                     l7047:
  4086  001A16  0E63               	movlw	low _Command
  4087  001A18  6E05               	movwf	strcmp@l^0,c
  4088  001A1A  0E01               	movlw	high _Command
  4089  001A1C  6E06               	movwf	(strcmp@l+1)^0,c
  4090  001A1E  0EFC               	movlw	low STR_78
  4091  001A20  6E07               	movwf	strcmp@r^0,c
  4092  001A22  0EFF               	movlw	high STR_78
  4093  001A24  6E08               	movwf	(strcmp@r+1)^0,c
  4094  001A26  EC77  F017         	call	_strcmp	;wreg free
  4095  001A2A  5005               	movf	?_strcmp^0,w,c
  4096  001A2C  1006               	iorwf	(?_strcmp+1)^0,w,c
  4097  001A2E  A4D8               	btfss	status,2,c
  4098  001A30  EF1C  F00D         	goto	u7281
  4099  001A34  EF1E  F00D         	goto	u7280
  4100  001A38                     u7281:
  4101  001A38  EF23  F00D         	goto	l7057
  4102  001A3C                     u7280:
  4103  001A3C                     
  4104                           ;RS232.c: 310:         InitialiseString(0);
  4105  001A3C  0E00               	movlw	0
  4106  001A3E  EC21  F008         	call	_InitialiseString
  4107  001A42  EF08  F00D         	goto	l7041
  4108  001A46                     l7057:
  4109  001A46  0E63               	movlw	low _Command
  4110  001A48  6E05               	movwf	strcmp@l^0,c
  4111  001A4A  0E01               	movlw	high _Command
  4112  001A4C  6E06               	movwf	(strcmp@l+1)^0,c
  4113  001A4E  0EDD               	movlw	low STR_80
  4114  001A50  6E07               	movwf	strcmp@r^0,c
  4115  001A52  0EFF               	movlw	high STR_80
  4116  001A54  6E08               	movwf	(strcmp@r+1)^0,c
  4117  001A56  EC77  F017         	call	_strcmp	;wreg free
  4118  001A5A  5005               	movf	?_strcmp^0,w,c
  4119  001A5C  1006               	iorwf	(?_strcmp+1)^0,w,c
  4120  001A5E  A4D8               	btfss	status,2,c
  4121  001A60  EF34  F00D         	goto	u7291
  4122  001A64  EF36  F00D         	goto	u7290
  4123  001A68                     u7291:
  4124  001A68  EF57  F00D         	goto	l7073
  4125  001A6C                     u7290:
  4126  001A6C                     
  4127                           ;RS232.c: 313:         char ConfName[20] = "Serial Number";
  4128  001A6C  EE21  F087         	lfsr	2,ValidateCmd@F10736
  4129  001A70  EE14  F0A4         	lfsr	1,ValidateCmd@ConfName
  4130  001A74  0E13               	movlw	19
  4131  001A76                     u7301:
  4132  001A76  CFDB FFE3          	movff	plusw2,plusw1
  4133  001A7A  06E8               	decf	wreg,f,c
  4134  001A7C  E2FC               	bc	u7301
  4135  001A7E                     
  4136                           ;RS232.c: 319:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  4137  001A7E  0EA4               	movlw	low ValidateCmd@ConfName
  4138  001A80  0100               	movlb	0	; () banked
  4139  001A82  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4140  001A84  0E04               	movlw	high ValidateCmd@ConfName
  4141  001A86  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4142  001A88  0E03               	movlw	3
  4143  001A8A  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4144  001A8C  0E00               	movlw	0
  4145  001A8E  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4146  001A90  0E03               	movlw	3
  4147  001A92  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4148  001A94  0E00               	movlw	0
  4149  001A96  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4150  001A98  0E00               	movlw	0
  4151  001A9A  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4152  001A9C  0E0A               	movlw	10
  4153  001A9E  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4154  001AA0  EC2C  F00B         	call	_SaveCardDat	;wreg free
  4155  001AA4                     
  4156                           ;RS232.c: 320:         InitialiseString(1);
  4157  001AA4  0E01               	movlw	1
  4158  001AA6  EC21  F008         	call	_InitialiseString
  4159  001AAA  EF08  F00D         	goto	l7041
  4160  001AAE                     l7073:
  4161  001AAE  0E63               	movlw	low _Command
  4162  001AB0  6E05               	movwf	strcmp@l^0,c
  4163  001AB2  0E01               	movlw	high _Command
  4164  001AB4  6E06               	movwf	(strcmp@l+1)^0,c
  4165  001AB6  0EEF               	movlw	low STR_82
  4166  001AB8  6E07               	movwf	strcmp@r^0,c
  4167  001ABA  0EFF               	movlw	high STR_82
  4168  001ABC  6E08               	movwf	(strcmp@r+1)^0,c
  4169  001ABE  EC77  F017         	call	_strcmp	;wreg free
  4170  001AC2  5005               	movf	?_strcmp^0,w,c
  4171  001AC4  1006               	iorwf	(?_strcmp+1)^0,w,c
  4172  001AC6  A4D8               	btfss	status,2,c
  4173  001AC8  EF68  F00D         	goto	u7311
  4174  001ACC  EF6A  F00D         	goto	u7310
  4175  001AD0                     u7311:
  4176  001AD0  EF8B  F00D         	goto	l7089
  4177  001AD4                     u7310:
  4178  001AD4                     
  4179                           ;RS232.c: 326:         char ConfName[20] = "Part Number";
  4180  001AD4  EE21  F073         	lfsr	2,ValidateCmd@F10739
  4181  001AD8  EE14  F0B8         	lfsr	1,ValidateCmd@ConfName_1470
  4182  001ADC  0E13               	movlw	19
  4183  001ADE                     u7321:
  4184  001ADE  CFDB FFE3          	movff	plusw2,plusw1
  4185  001AE2  06E8               	decf	wreg,f,c
  4186  001AE4  E2FC               	bc	u7321
  4187  001AE6                     
  4188                           ;RS232.c: 328:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  4189  001AE6  0EB8               	movlw	low ValidateCmd@ConfName_1470
  4190  001AE8  0100               	movlb	0	; () banked
  4191  001AEA  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4192  001AEC  0E04               	movlw	high ValidateCmd@ConfName_1470
  4193  001AEE  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4194  001AF0  0E01               	movlw	1
  4195  001AF2  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4196  001AF4  0E00               	movlw	0
  4197  001AF6  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4198  001AF8  0E01               	movlw	1
  4199  001AFA  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4200  001AFC  0E00               	movlw	0
  4201  001AFE  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4202  001B00  0E00               	movlw	0
  4203  001B02  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4204  001B04  0E10               	movlw	16
  4205  001B06  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4206  001B08  EC2C  F00B         	call	_SaveCardDat	;wreg free
  4207  001B0C                     
  4208                           ;RS232.c: 329:         InitialiseString(1);
  4209  001B0C  0E01               	movlw	1
  4210  001B0E  EC21  F008         	call	_InitialiseString
  4211  001B12  EF08  F00D         	goto	l7041
  4212  001B16                     l7089:
  4213  001B16  0E63               	movlw	low _Command
  4214  001B18  6E05               	movwf	strcmp@l^0,c
  4215  001B1A  0E01               	movlw	high _Command
  4216  001B1C  6E06               	movwf	(strcmp@l+1)^0,c
  4217  001B1E  0EF8               	movlw	low STR_84
  4218  001B20  6E07               	movwf	strcmp@r^0,c
  4219  001B22  0EFF               	movlw	high STR_84
  4220  001B24  6E08               	movwf	(strcmp@r+1)^0,c
  4221  001B26  EC77  F017         	call	_strcmp	;wreg free
  4222  001B2A  5005               	movf	?_strcmp^0,w,c
  4223  001B2C  1006               	iorwf	(?_strcmp+1)^0,w,c
  4224  001B2E  A4D8               	btfss	status,2,c
  4225  001B30  EF9C  F00D         	goto	u7331
  4226  001B34  EF9E  F00D         	goto	u7330
  4227  001B38                     u7331:
  4228  001B38  EFBF  F00D         	goto	l7105
  4229  001B3C                     u7330:
  4230  001B3C                     
  4231                           ;RS232.c: 336:         char ConfName[20] = "Revision";
  4232  001B3C  EE22  F097         	lfsr	2,ValidateCmd@F10742
  4233  001B40  EE14  F0CC         	lfsr	1,ValidateCmd@ConfName_1474
  4234  001B44  0E13               	movlw	19
  4235  001B46                     u7341:
  4236  001B46  CFDB FFE3          	movff	plusw2,plusw1
  4237  001B4A  06E8               	decf	wreg,f,c
  4238  001B4C  E2FC               	bc	u7341
  4239  001B4E                     
  4240                           ;RS232.c: 339:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  4241  001B4E  0ECC               	movlw	low ValidateCmd@ConfName_1474
  4242  001B50  0100               	movlb	0	; () banked
  4243  001B52  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4244  001B54  0E04               	movlw	high ValidateCmd@ConfName_1474
  4245  001B56  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4246  001B58  0E02               	movlw	2
  4247  001B5A  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4248  001B5C  0E00               	movlw	0
  4249  001B5E  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4250  001B60  0E02               	movlw	2
  4251  001B62  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4252  001B64  0E00               	movlw	0
  4253  001B66  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4254  001B68  0E00               	movlw	0
  4255  001B6A  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4256  001B6C  0E02               	movlw	2
  4257  001B6E  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4258  001B70  EC2C  F00B         	call	_SaveCardDat	;wreg free
  4259  001B74                     
  4260                           ;RS232.c: 341:         InitialiseString(1);
  4261  001B74  0E01               	movlw	1
  4262  001B76  EC21  F008         	call	_InitialiseString
  4263  001B7A  EF08  F00D         	goto	l7041
  4264  001B7E                     l7105:
  4265                           
  4266                           ;RS232.c: 345:         return 0;
  4267  001B7E  0E00               	movlw	0
  4268  001B80                     l940:
  4269  001B80  0012               	return		;funcret
  4270  001B82                     __end_of_ValidateCmd:
  4271                           	opt callstack 0
  4272                           
  4273 ;; *************** function _TogDebug *****************
  4274 ;; Defined at:
  4275 ;;		line 215 in file "RS232.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:   13
  4296 ;; This function calls:
  4297 ;;		_printf
  4298 ;; This function is called by:
  4299 ;;		_ValidateCmd
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text2
  4304  003B24                     __ptext2:
  4305                           	opt callstack 0
  4306  003B24                     _TogDebug:
  4307                           	opt callstack 16
  4308  003B24                     
  4309                           ;RS232.c: 217:     if(Debug==0){
  4310  003B24  0100               	movlb	0	; () banked
  4311  003B26  51B8               	movf	_Debug& (0+255),w,b
  4312  003B28  A4D8               	btfss	status,2,c
  4313  003B2A  EF99  F01D         	goto	u7011
  4314  003B2E  EF9B  F01D         	goto	u7010
  4315  003B32                     u7011:
  4316  003B32  EFA5  F01D         	goto	l6763
  4317  003B36                     u7010:
  4318  003B36                     
  4319                           ; BSR set to: 0
  4320                           ;RS232.c: 218:         Debug =1;
  4321  003B36  0E01               	movlw	1
  4322  003B38  6FB8               	movwf	_Debug& (0+255),b
  4323  003B3A                     
  4324                           ; BSR set to: 0
  4325                           ;RS232.c: 219:         printf("Debug Enabled\r\n");
  4326  003B3A  0E69               	movlw	low STR_65
  4327  003B3C  6F7D               	movwf	printf@fmt& (0+255),b
  4328  003B3E  0EFF               	movlw	high STR_65
  4329  003B40  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4330  003B42  EC2E  F01E         	call	_printf	;wreg free
  4331                           
  4332                           ;RS232.c: 220:     }else{
  4333  003B46  EFAD  F01D         	goto	l911
  4334  003B4A                     l6763:
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;RS232.c: 221:         Debug =0;
  4338  003B4A  0E00               	movlw	0
  4339  003B4C  6FB8               	movwf	_Debug& (0+255),b
  4340  003B4E                     
  4341                           ; BSR set to: 0
  4342                           ;RS232.c: 222:         printf("Debug Disabled\r\n");
  4343  003B4E  0E58               	movlw	low STR_66
  4344  003B50  6F7D               	movwf	printf@fmt& (0+255),b
  4345  003B52  0EFF               	movlw	high STR_66
  4346  003B54  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4347  003B56  EC2E  F01E         	call	_printf	;wreg free
  4348  003B5A                     l911:
  4349  003B5A  0012               	return		;funcret
  4350  003B5C                     __end_of_TogDebug:
  4351                           	opt callstack 0
  4352                           
  4353 ;; *************** function _SaveCardDat *****************
  4354 ;; Defined at:
  4355 ;;		line 240 in file "RS232.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  Name            2   45[BANK0 ] PTR unsigned char 
  4358 ;;		 -> ValidateCmd@ConfName_1474(20), ValidateCmd@ConfName_1470(20), ValidateCmd@ConfName(20), 
  4359 ;;  MBAddress       2   47[BANK0 ] unsigned int 
  4360 ;;  dataeeAddr      2   49[BANK0 ] unsigned short 
  4361 ;;  NumBytes        2   51[BANK0 ] int 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  i               2   59[BANK0 ] int 
  4364 ;;  dataeeAddrWr    2   57[BANK0 ] unsigned short 
  4365 ;;  Conf            1   61[BANK0 ] unsigned char 
  4366 ;;  readData        1    0        unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4376 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4380 ;;Total ram usage:       17 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:   14
  4383 ;; This function calls:
  4384 ;;		_ClearEEAddRange
  4385 ;;		_DATAEE_WriteByte
  4386 ;;		_EUSART2_Read
  4387 ;;		_EUSART2_is_rx_ready
  4388 ;;		_ReadRX232
  4389 ;;		_printf
  4390 ;;		_strcpy
  4391 ;;		_strlen
  4392 ;; This function is called by:
  4393 ;;		_ValidateCmd
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text3
  4398  001658                     __ptext3:
  4399                           	opt callstack 0
  4400  001658                     _SaveCardDat:
  4401                           	opt callstack 15
  4402  001658                     
  4403                           ;RS232.c: 243:     unsigned char Conf, readData;;RS232.c: 244:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  4404  001658  C091  F099         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  4405  00165C  C092  F09A         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  4406  001660                     
  4407                           ;RS232.c: 246:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  4408  001660  0E7C               	movlw	low STR_68
  4409  001662  0100               	movlb	0	; () banked
  4410  001664  6F7D               	movwf	printf@fmt& (0+255),b
  4411  001666  0EFB               	movlw	high STR_68
  4412  001668  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4413  00166A  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4414  00166E  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4415  001672  C093  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  4416  001676  C094  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  4417  00167A  EC2E  F01E         	call	_printf	;wreg free
  4418  00167E                     
  4419                           ;RS232.c: 248:     strcpy(Command, "");
  4420  00167E  0E63               	movlw	low _Command
  4421  001680  6E09               	movwf	strcpy@dest^0,c
  4422  001682  0E01               	movlw	high _Command
  4423  001684  6E0A               	movwf	(strcpy@dest+1)^0,c
  4424  001686  0EBF               	movlw	low (STR_58+74)
  4425  001688  6E0B               	movwf	strcpy@src^0,c
  4426  00168A  0EF8               	movlw	high (STR_58+74)
  4427  00168C  6E0C               	movwf	(strcpy@src+1)^0,c
  4428  00168E  ECE1  F01A         	call	_strcpy	;wreg free
  4429  001692                     l6775:
  4430  001692  C093  F089         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  4431  001696  C094  F08A         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  4432  00169A  EC42  F012         	call	_ReadRX232	;wreg free
  4433  00169E  0100               	movlb	0	; () banked
  4434  0016A0  5189               	movf	?_ReadRX232& (0+255),w,b
  4435  0016A2  118A               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  4436  0016A4  B4D8               	btfsc	status,2,c
  4437  0016A6  EF57  F00B         	goto	u7021
  4438  0016AA  EF59  F00B         	goto	u7020
  4439  0016AE                     u7021:
  4440  0016AE  EF49  F00B         	goto	l6775
  4441  0016B2                     u7020:
  4442  0016B2                     
  4443                           ; BSR set to: 0
  4444                           ;RS232.c: 251:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  4445  0016B2  0E99               	movlw	low STR_70
  4446  0016B4  6F7D               	movwf	printf@fmt& (0+255),b
  4447  0016B6  0EFC               	movlw	high STR_70
  4448  0016B8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4449  0016BA  0E63               	movlw	low _Command
  4450  0016BC  6F7F               	movwf	(?_printf+2)& (0+255),b
  4451  0016BE  0E01               	movlw	high _Command
  4452  0016C0  6F80               	movwf	(?_printf+3)& (0+255),b
  4453  0016C2  EC2E  F01E         	call	_printf	;wreg free
  4454  0016C6                     l6779:
  4455  0016C6  EC83  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4456  0016CA  0900               	iorlw	0
  4457  0016CC  B4D8               	btfsc	status,2,c
  4458  0016CE  EF6B  F00B         	goto	u7031
  4459  0016D2  EF6D  F00B         	goto	u7030
  4460  0016D6                     u7031:
  4461  0016D6  EF63  F00B         	goto	l6779
  4462  0016DA                     u7030:
  4463  0016DA                     
  4464                           ;RS232.c: 256:     Conf = EUSART2_Read();
  4465  0016DA  EC3F  F01B         	call	_EUSART2_Read	;wreg free
  4466  0016DE  0100               	movlb	0	; () banked
  4467  0016E0  6F9D               	movwf	SaveCardDat@Conf& (0+255),b
  4468  0016E2                     
  4469                           ; BSR set to: 0
  4470                           ;RS232.c: 259:     if(Conf == 0x79 || Conf == 0x59){
  4471  0016E2  0E79               	movlw	121
  4472  0016E4  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4473  0016E6  B4D8               	btfsc	status,2,c
  4474  0016E8  EF78  F00B         	goto	u7041
  4475  0016EC  EF7A  F00B         	goto	u7040
  4476  0016F0                     u7041:
  4477  0016F0  EF83  F00B         	goto	l928
  4478  0016F4                     u7040:
  4479  0016F4                     
  4480                           ; BSR set to: 0
  4481  0016F4  0E59               	movlw	89
  4482  0016F6  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4483  0016F8  A4D8               	btfss	status,2,c
  4484  0016FA  EF81  F00B         	goto	u7051
  4485  0016FE  EF83  F00B         	goto	u7050
  4486  001702                     u7051:
  4487  001702  EFFB  F00B         	goto	l6811
  4488  001706                     u7050:
  4489  001706                     l928:
  4490  001706                     
  4491                           ; BSR set to: 0
  4492                           ;RS232.c: 261:         printf("Y\r\nSaving %s\r\n", Name);
  4493  001706  0E99               	movlw	low STR_71
  4494  001708  6F7D               	movwf	printf@fmt& (0+255),b
  4495  00170A  0EFF               	movlw	high STR_71
  4496  00170C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4497  00170E  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4498  001712  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4499  001716  EC2E  F01E         	call	_printf	;wreg free
  4500  00171A                     
  4501                           ;RS232.c: 262:         printf("Num Chars: %i \r\n", strlen(Command));
  4502  00171A  0E63               	movlw	low _Command
  4503  00171C  6E05               	movwf	strlen@s^0,c
  4504  00171E  0E01               	movlw	high _Command
  4505  001720  6E06               	movwf	(strlen@s+1)^0,c
  4506  001722  ECF2  F01B         	call	_strlen	;wreg free
  4507  001726  C005  F097         	movff	?_strlen,_SaveCardDat$2458
  4508  00172A  C006  F098         	movff	?_strlen+1,_SaveCardDat$2458+1
  4509  00172E                     
  4510                           ;RS232.c: 262:         printf("Num Chars: %i \r\n", strlen(Command));
  4511  00172E  0E47               	movlw	low STR_72
  4512  001730  0100               	movlb	0	; () banked
  4513  001732  6F7D               	movwf	printf@fmt& (0+255),b
  4514  001734  0EFF               	movlw	high STR_72
  4515  001736  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4516  001738  C097  F07F         	movff	_SaveCardDat$2458,?_printf+2
  4517  00173C  C098  F080         	movff	_SaveCardDat$2458+1,?_printf+3
  4518  001740  EC2E  F01E         	call	_printf	;wreg free
  4519  001744                     
  4520                           ;RS232.c: 266:         ClearEEAddRange(dataeeAddr,NumBytes);
  4521  001744  C091  F089         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  4522  001748  C092  F08A         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  4523  00174C  C093  F08B         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  4524  001750  C094  F08C         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  4525  001754  EC6D  F01B         	call	_ClearEEAddRange	;wreg free
  4526  001758                     
  4527                           ;RS232.c: 269:         for (i = 0; i < strlen(Command); i++){
  4528  001758  0E00               	movlw	0
  4529  00175A  0100               	movlb	0	; () banked
  4530  00175C  6F9C               	movwf	(SaveCardDat@i+1)& (0+255),b
  4531  00175E  0E00               	movlw	0
  4532  001760  6F9B               	movwf	SaveCardDat@i& (0+255),b
  4533  001762  EFD3  F00B         	goto	l6805
  4534  001766                     l6797:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;RS232.c: 270:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  4538  001766  C099  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  4539  00176A  C09A  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  4540  00176E  0E63               	movlw	low _Command
  4541  001770  259B               	addwf	SaveCardDat@i& (0+255),w,b
  4542  001772  6ED9               	movwf	fsr2l,c
  4543  001774  0E01               	movlw	high _Command
  4544  001776  219C               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  4545  001778  6EDA               	movwf	fsr2h,c
  4546  00177A  50DF               	movf	indf2,w,c
  4547  00177C  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4548  00177E  ECAF  F01C         	call	_DATAEE_WriteByte	;wreg free
  4549  001782                     
  4550                           ;RS232.c: 271:             dataeeAddrWrk++;
  4551  001782  0100               	movlb	0	; () banked
  4552  001784  4B99               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4553  001786  2B9A               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4554  001788                     
  4555                           ; BSR set to: 0
  4556                           ;RS232.c: 272:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4557  001788  0E03               	movlw	3
  4558  00178A  0100               	movlb	0	; () banked
  4559  00178C  6F96               	movwf	(??_SaveCardDat+1)& (0+255),b
  4560  00178E  0E08               	movlw	8
  4561  001790  6F95               	movwf	??_SaveCardDat& (0+255),b
  4562  001792  0E77               	movlw	119
  4563  001794                     u7377:
  4564  001794  2EE8               	decfsz	wreg,f,c
  4565  001796  D7FE               	bra	u7377
  4566  001798  2F95               	decfsz	??_SaveCardDat& (0+255),f,b
  4567  00179A  D7FC               	bra	u7377
  4568  00179C  2F96               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4569  00179E  D7FA               	bra	u7377
  4570  0017A0                     
  4571                           ;RS232.c: 273:         }
  4572  0017A0  0100               	movlb	0	; () banked
  4573  0017A2  4B9B               	infsnz	SaveCardDat@i& (0+255),f,b
  4574  0017A4  2B9C               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4575  0017A6                     l6805:
  4576                           
  4577                           ; BSR set to: 0
  4578  0017A6  0E63               	movlw	low _Command
  4579  0017A8  6E05               	movwf	strlen@s^0,c
  4580  0017AA  0E01               	movlw	high _Command
  4581  0017AC  6E06               	movwf	(strlen@s+1)^0,c
  4582  0017AE  ECF2  F01B         	call	_strlen	;wreg free
  4583  0017B2  5005               	movf	?_strlen^0,w,c
  4584  0017B4  0100               	movlb	0	; () banked
  4585  0017B6  5D9B               	subwf	SaveCardDat@i& (0+255),w,b
  4586  0017B8  5006               	movf	(?_strlen+1)^0,w,c
  4587  0017BA  599C               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4588  0017BC  A0D8               	btfss	status,0,c
  4589  0017BE  EFE3  F00B         	goto	u7061
  4590  0017C2  EFE5  F00B         	goto	u7060
  4591  0017C6                     u7061:
  4592  0017C6  EFB3  F00B         	goto	l6797
  4593  0017CA                     u7060:
  4594  0017CA                     
  4595                           ; BSR set to: 0
  4596                           ;RS232.c: 275:         printf("%s Saved. \r\n",Name);
  4597  0017CA  0EA8               	movlw	low STR_73
  4598  0017CC  6F7D               	movwf	printf@fmt& (0+255),b
  4599  0017CE  0EFF               	movlw	high STR_73
  4600  0017D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4601  0017D2  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4602  0017D6  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4603  0017DA  EC2E  F01E         	call	_printf	;wreg free
  4604  0017DE                     
  4605                           ;RS232.c: 290:         strcpy(Command, "");
  4606  0017DE  0E63               	movlw	low _Command
  4607  0017E0  6E09               	movwf	strcpy@dest^0,c
  4608  0017E2  0E01               	movlw	high _Command
  4609  0017E4  6E0A               	movwf	(strcpy@dest+1)^0,c
  4610  0017E6  0EBF               	movlw	low (STR_58+74)
  4611  0017E8  6E0B               	movwf	strcpy@src^0,c
  4612  0017EA  0EF8               	movlw	high (STR_58+74)
  4613  0017EC  6E0C               	movwf	(strcpy@src+1)^0,c
  4614  0017EE  ECE1  F01A         	call	_strcpy	;wreg free
  4615                           
  4616                           ;RS232.c: 292:     }else if(Conf == 0x4e || Conf == 0x6e){
  4617  0017F2  EF13  F00C         	goto	l936
  4618  0017F6                     l6811:
  4619                           
  4620                           ; BSR set to: 0
  4621  0017F6  0E4E               	movlw	78
  4622  0017F8  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4623  0017FA  B4D8               	btfsc	status,2,c
  4624  0017FC  EF02  F00C         	goto	u7071
  4625  001800  EF04  F00C         	goto	u7070
  4626  001804                     u7071:
  4627  001804  EF0D  F00C         	goto	l6815
  4628  001808                     u7070:
  4629  001808                     
  4630                           ; BSR set to: 0
  4631  001808  0E6E               	movlw	110
  4632  00180A  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4633  00180C  A4D8               	btfss	status,2,c
  4634  00180E  EF0B  F00C         	goto	u7081
  4635  001812  EF0D  F00C         	goto	u7080
  4636  001816                     u7081:
  4637  001816  EF13  F00C         	goto	l936
  4638  00181A                     u7080:
  4639  00181A                     l6815:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;RS232.c: 293:         printf("Not saved\r\n");
  4643  00181A  0EB5               	movlw	low STR_75
  4644  00181C  6F7D               	movwf	printf@fmt& (0+255),b
  4645  00181E  0EFF               	movlw	high STR_75
  4646  001820  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4647  001822  EC2E  F01E         	call	_printf	;wreg free
  4648  001826                     l936:
  4649  001826  0012               	return		;funcret
  4650  001828                     __end_of_SaveCardDat:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _ReadRX232 *****************
  4654 ;; Defined at:
  4655 ;;		line 160 in file "RS232.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  NumChars        2   41[BANK0 ] int 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  temp            2   84[COMRAM] unsigned char [2]
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2   41[BANK0 ] int 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;Total ram usage:        4 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:   13
  4676 ;; This function calls:
  4677 ;;		_EUSART2_Read
  4678 ;;		_EUSART2_Write
  4679 ;;		_EUSART2_is_rx_ready
  4680 ;;		_memmove
  4681 ;;		_printf
  4682 ;;		_strcat
  4683 ;;		_strlen
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;;		_SaveCardDat
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text4
  4691  002484                     __ptext4:
  4692                           	opt callstack 0
  4693  002484                     _ReadRX232:
  4694                           	opt callstack 15
  4695  002484                     
  4696                           ;RS232.c: 160: int ReadRX232(int NumChars);RS232.c: 161: {;RS232.c: 166:     char temp[2
      +                          ] = {'Z','\0'};
  4697  002484  C1D4  F055         	movff	ReadRX232@F10718,ReadRX232@temp
  4698  002488  C1D5  F056         	movff	ReadRX232@F10718+1,ReadRX232@temp+1
  4699  00248C                     
  4700                           ;RS232.c: 169:     if(EUSART2_is_rx_ready())
  4701  00248C  EC83  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4702  002490  0900               	iorlw	0
  4703  002492  B4D8               	btfsc	status,2,c
  4704  002494  EF4E  F012         	goto	u6641
  4705  002498  EF50  F012         	goto	u6640
  4706  00249C                     u6641:
  4707  00249C  EFCE  F012         	goto	l6525
  4708  0024A0                     u6640:
  4709  0024A0                     l6497:
  4710                           
  4711                           ;RS232.c: 175:              if(EUSART2_is_rx_ready())
  4712  0024A0  EC83  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4713  0024A4  0900               	iorlw	0
  4714  0024A6  B4D8               	btfsc	status,2,c
  4715  0024A8  EF58  F012         	goto	u6651
  4716  0024AC  EF5A  F012         	goto	u6650
  4717  0024B0                     u6651:
  4718  0024B0  EFAA  F012         	goto	l6517
  4719  0024B4                     u6650:
  4720  0024B4                     
  4721                           ;RS232.c: 176:              {;RS232.c: 178:                 temp[0]=EUSART2_Read();
  4722  0024B4  EC3F  F01B         	call	_EUSART2_Read	;wreg free
  4723  0024B8  6E55               	movwf	ReadRX232@temp^0,c
  4724                           
  4725                           ;RS232.c: 181:                 EUSART2_Write(temp[0]);
  4726  0024BA  5055               	movf	ReadRX232@temp^0,w,c
  4727  0024BC  EC81  F01A         	call	_EUSART2_Write
  4728  0024C0                     
  4729                           ;RS232.c: 183:                 if(temp[0]!='\r'){
  4730  0024C0  0E0D               	movlw	13
  4731  0024C2  1855               	xorwf	ReadRX232@temp^0,w,c
  4732  0024C4  B4D8               	btfsc	status,2,c
  4733  0024C6  EF67  F012         	goto	u6661
  4734  0024CA  EF69  F012         	goto	u6660
  4735  0024CE                     u6661:
  4736  0024CE  EF73  F012         	goto	l6505
  4737  0024D2                     u6660:
  4738  0024D2                     
  4739                           ;RS232.c: 184:                     strcat(Command, temp);
  4740  0024D2  0E63               	movlw	low _Command
  4741  0024D4  6E13               	movwf	strcat@dest^0,c
  4742  0024D6  0E01               	movlw	high _Command
  4743  0024D8  6E14               	movwf	(strcat@dest+1)^0,c
  4744  0024DA  0E55               	movlw	low ReadRX232@temp
  4745  0024DC  6E15               	movwf	strcat@src^0,c
  4746  0024DE  0E00               	movlw	high ReadRX232@temp
  4747  0024E0  6E16               	movwf	(strcat@src+1)^0,c
  4748  0024E2  EC42  F01E         	call	_strcat	;wreg free
  4749  0024E6                     l6505:
  4750                           
  4751                           ;RS232.c: 187:                 if(strlen(Command)>NumChars)
  4752  0024E6  0E63               	movlw	low _Command
  4753  0024E8  6E05               	movwf	strlen@s^0,c
  4754  0024EA  0E01               	movlw	high _Command
  4755  0024EC  6E06               	movwf	(strlen@s+1)^0,c
  4756  0024EE  ECF2  F01B         	call	_strlen	;wreg free
  4757  0024F2  5005               	movf	?_strlen^0,w,c
  4758  0024F4  0100               	movlb	0	; () banked
  4759  0024F6  5D89               	subwf	ReadRX232@NumChars& (0+255),w,b
  4760  0024F8  5006               	movf	(?_strlen+1)^0,w,c
  4761  0024FA  598A               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4762  0024FC  B0D8               	btfsc	status,0,c
  4763  0024FE  EF83  F012         	goto	u6671
  4764  002502  EF85  F012         	goto	u6670
  4765  002506                     u6671:
  4766  002506  EF99  F012         	goto	l6509
  4767  00250A                     u6670:
  4768  00250A                     
  4769                           ; BSR set to: 0
  4770                           ;RS232.c: 188:                 {;RS232.c: 190:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  4771  00250A  0E63               	movlw	low _Command
  4772  00250C  6E09               	movwf	memmove@d1^0,c
  4773  00250E  0E01               	movlw	high _Command
  4774  002510  6E0A               	movwf	(memmove@d1+1)^0,c
  4775  002512  0E64               	movlw	low (_Command+1)
  4776  002514  6E0B               	movwf	memmove@s1^0,c
  4777  002516  0E01               	movlw	high (_Command+1)
  4778  002518  6E0C               	movwf	(memmove@s1+1)^0,c
  4779  00251A  0E63               	movlw	low _Command
  4780  00251C  6E05               	movwf	strlen@s^0,c
  4781  00251E  0E01               	movlw	high _Command
  4782  002520  6E06               	movwf	(strlen@s+1)^0,c
  4783  002522  ECF2  F01B         	call	_strlen	;wreg free
  4784  002526  C005  F00D         	movff	?_strlen,memmove@n
  4785  00252A  C006  F00E         	movff	?_strlen+1,memmove@n+1
  4786  00252E  ECDA  F013         	call	_memmove	;wreg free
  4787  002532                     l6509:
  4788                           
  4789                           ;RS232.c: 194:                 if(temp[0]=='\r'){
  4790  002532  0E0D               	movlw	13
  4791  002534  1855               	xorwf	ReadRX232@temp^0,w,c
  4792  002536  A4D8               	btfss	status,2,c
  4793  002538  EFA0  F012         	goto	u6681
  4794  00253C  EFA2  F012         	goto	u6680
  4795  002540                     u6681:
  4796  002540  EFAA  F012         	goto	l6517
  4797  002544                     u6680:
  4798  002544                     
  4799                           ;RS232.c: 196:                     temp[0]='z';
  4800  002544  0E7A               	movlw	122
  4801  002546  6E55               	movwf	ReadRX232@temp^0,c
  4802  002548                     
  4803                           ;RS232.c: 197:                     return NumChars;
  4804  002548  C089  F089         	movff	ReadRX232@NumChars,?_ReadRX232
  4805  00254C  C08A  F08A         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  4806  002550  EFD3  F012         	goto	l905
  4807  002554                     l6517:
  4808                           
  4809                           ;RS232.c: 200:         }while( temp[0] !='\r' );
  4810  002554  0E0D               	movlw	13
  4811  002556  1855               	xorwf	ReadRX232@temp^0,w,c
  4812  002558  A4D8               	btfss	status,2,c
  4813  00255A  EFB1  F012         	goto	u6691
  4814  00255E  EFB3  F012         	goto	u6690
  4815  002562                     u6691:
  4816  002562  EF50  F012         	goto	l6497
  4817  002566                     u6690:
  4818  002566                     
  4819                           ;RS232.c: 202:         Command[strlen(Command)-1] = '\0';
  4820  002566  0E63               	movlw	low _Command
  4821  002568  6E05               	movwf	strlen@s^0,c
  4822  00256A  0E01               	movlw	high _Command
  4823  00256C  6E06               	movwf	(strlen@s+1)^0,c
  4824  00256E  ECF2  F01B         	call	_strlen	;wreg free
  4825  002572  0E62               	movlw	low (_Command+65535)
  4826  002574  2405               	addwf	?_strlen^0,w,c
  4827  002576  6ED9               	movwf	fsr2l,c
  4828  002578  0E01               	movlw	high (_Command+65535)
  4829  00257A  2006               	addwfc	(?_strlen+1)^0,w,c
  4830  00257C  6EDA               	movwf	fsr2h,c
  4831  00257E  0E00               	movlw	0
  4832  002580  6EDF               	movwf	indf2,c
  4833  002582                     
  4834                           ;RS232.c: 204:         printf("\r\n\n");
  4835  002582  0EBC               	movlw	low (STR_58+71)
  4836  002584  0100               	movlb	0	; () banked
  4837  002586  6F7D               	movwf	printf@fmt& (0+255),b
  4838  002588  0EF8               	movlw	high (STR_58+71)
  4839  00258A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4840  00258C  EC2E  F01E         	call	_printf	;wreg free
  4841  002590                     
  4842                           ;RS232.c: 206:         strlen(Command);
  4843  002590  0E63               	movlw	low _Command
  4844  002592  6E05               	movwf	strlen@s^0,c
  4845  002594  0E01               	movlw	high _Command
  4846  002596  6E06               	movwf	(strlen@s+1)^0,c
  4847  002598  ECF2  F01B         	call	_strlen	;wreg free
  4848  00259C                     l6525:
  4849                           
  4850                           ;RS232.c: 209:     return 0;
  4851  00259C  0E00               	movlw	0
  4852  00259E  0100               	movlb	0	; () banked
  4853  0025A0  6F8A               	movwf	(?_ReadRX232+1)& (0+255),b
  4854  0025A2  0E00               	movlw	0
  4855  0025A4  6F89               	movwf	?_ReadRX232& (0+255),b
  4856  0025A6                     l905:
  4857  0025A6  0012               	return		;funcret
  4858  0025A8                     __end_of_ReadRX232:
  4859                           	opt callstack 0
  4860                           
  4861 ;; *************** function _strcat *****************
  4862 ;; Defined at:
  4863 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  dest            2   18[COMRAM] PTR unsigned char 
  4866 ;;		 -> Command(16), 
  4867 ;;  src             2   20[COMRAM] PTR const unsigned char 
  4868 ;;		 -> ReadRX232@temp(2), 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  2   18[COMRAM] PTR unsigned char 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;Total ram usage:        4 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    5
  4887 ;; This function calls:
  4888 ;;		_strcpy
  4889 ;;		_strlen
  4890 ;; This function is called by:
  4891 ;;		_ReadRX232
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text5
  4896  003C84                     __ptext5:
  4897                           	opt callstack 0
  4898  003C84                     _strcat:
  4899                           	opt callstack 22
  4900  003C84  C013  F005         	movff	strcat@dest,strlen@s
  4901  003C88  C014  F006         	movff	strcat@dest+1,strlen@s+1
  4902  003C8C  ECF2  F01B         	call	_strlen	;wreg free
  4903  003C90  5005               	movf	?_strlen^0,w,c
  4904  003C92  2413               	addwf	strcat@dest^0,w,c
  4905  003C94  6E09               	movwf	strcpy@dest^0,c
  4906  003C96  5006               	movf	(?_strlen+1)^0,w,c
  4907  003C98  2014               	addwfc	(strcat@dest+1)^0,w,c
  4908  003C9A  6E0A               	movwf	(strcpy@dest+1)^0,c
  4909  003C9C  C015  F00B         	movff	strcat@src,strcpy@src
  4910  003CA0  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  4911  003CA4  ECE1  F01A         	call	_strcpy	;wreg free
  4912  003CA8  0012               	return		;funcret
  4913  003CAA                     __end_of_strcat:
  4914                           	opt callstack 0
  4915                           
  4916 ;; *************** function _strcpy *****************
  4917 ;; Defined at:
  4918 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  dest            2    8[COMRAM] PTR unsigned char 
  4921 ;;		 -> Command(16), 
  4922 ;;  src             2   10[COMRAM] PTR const unsigned char 
  4923 ;;		 -> STR_74(1), STR_69(1), ReadRX232@temp(2), STR_5(1), 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  d               2   16[COMRAM] PTR unsigned char 
  4926 ;;		 -> Command(16), 
  4927 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4928 ;;		 -> STR_74(1), STR_69(1), ReadRX232@temp(2), STR_5(1), 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  2    8[COMRAM] PTR unsigned char 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4939 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4941 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4942 ;;Total ram usage:       10 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    4
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_main
  4949 ;;		_SaveCardDat
  4950 ;;		_strcat
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text6
  4955  0035C2                     __ptext6:
  4956                           	opt callstack 0
  4957  0035C2                     _strcpy:
  4958                           	opt callstack 26
  4959  0035C2  C00B  F00F         	movff	strcpy@src,strcpy@s
  4960  0035C6  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  4961  0035CA  C009  F011         	movff	strcpy@dest,strcpy@d
  4962  0035CE  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  4963  0035D2                     l6353:
  4964  0035D2  500F               	movf	strcpy@s^0,w,c
  4965  0035D4  6E0D               	movwf	??_strcpy^0,c
  4966  0035D6  5010               	movf	(strcpy@s+1)^0,w,c
  4967  0035D8  6E0E               	movwf	(??_strcpy+1)^0,c
  4968  0035DA  4A0F               	infsnz	strcpy@s^0,f,c
  4969  0035DC  2A10               	incf	(strcpy@s+1)^0,f,c
  4970  0035DE  C00D  FFF6         	movff	??_strcpy,tblptrl
  4971  0035E2  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  4972  0035E6  0E00               	movlw	low (__mediumconst shr (0+16))
  4973  0035E8  6EF8               	movwf	tblptru,c
  4974  0035EA  C011  FFD9         	movff	strcpy@d,fsr2l
  4975  0035EE  C012  FFDA         	movff	strcpy@d+1,fsr2h
  4976  0035F2  4A11               	infsnz	strcpy@d^0,f,c
  4977  0035F4  2A12               	incf	(strcpy@d+1)^0,f,c
  4978  0035F6  0E0E               	movlw	(high __ramtop+-1)
  4979  0035F8  64F7               	cpfsgt	tblptrh,c
  4980  0035FA  D003               	bra	u6407
  4981  0035FC  0008               	tblrd		*
  4982  0035FE  50F5               	movf	tablat,w,c
  4983  003600  D005               	bra	u6400
  4984  003602                     u6407:
  4985  003602  CFF6 FFE9          	movff	tblptrl,fsr0l
  4986  003606  CFF7 FFEA          	movff	tblptrh,fsr0h
  4987  00360A  50EF               	movf	indf0,w,c
  4988  00360C                     u6400:
  4989  00360C  6EDF               	movwf	indf2,c
  4990  00360E  50DF               	movf	indf2,w,c
  4991  003610  A4D8               	btfss	status,2,c
  4992  003612  EF0D  F01B         	goto	u6411
  4993  003616  EF0F  F01B         	goto	u6410
  4994  00361A                     u6411:
  4995  00361A  EFE9  F01A         	goto	l6353
  4996  00361E                     u6410:
  4997  00361E  0012               	return		;funcret
  4998  003620                     __end_of_strcpy:
  4999                           	opt callstack 0
  5000                           
  5001 ;; *************** function _memmove *****************
  5002 ;; Defined at:
  5003 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  d1              2    8[COMRAM] PTR void 
  5006 ;;		 -> Command(16), 
  5007 ;;  s1              2   10[COMRAM] PTR const void 
  5008 ;;		 -> Command(16), 
  5009 ;;  n               2   12[COMRAM] unsigned int 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5012 ;;		 -> Command(16), 
  5013 ;;  d               2   16[COMRAM] PTR unsigned char 
  5014 ;;		 -> Command(16), 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2    8[COMRAM] PTR void 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5024 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;Total ram usage:       12 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    4
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_ReadRX232
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text7
  5039  0027B4                     __ptext7:
  5040                           	opt callstack 0
  5041  0027B4                     _memmove:
  5042                           	opt callstack 23
  5043  0027B4  C00B  F013         	movff	memmove@s1,memmove@s
  5044  0027B8  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  5045  0027BC  C009  F011         	movff	memmove@d1,memmove@d
  5046  0027C0  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  5047  0027C4  5011               	movf	memmove@d^0,w,c
  5048  0027C6  5C13               	subwf	memmove@s^0,w,c
  5049  0027C8  5012               	movf	(memmove@d+1)^0,w,c
  5050  0027CA  5814               	subwfb	(memmove@s+1)^0,w,c
  5051  0027CC  B0D8               	btfsc	status,0,c
  5052  0027CE  EFEB  F013         	goto	u6531
  5053  0027D2  EFED  F013         	goto	u6530
  5054  0027D6                     u6531:
  5055  0027D6  EF24  F014         	goto	l6457
  5056  0027DA                     u6530:
  5057  0027DA  500D               	movf	memmove@n^0,w,c
  5058  0027DC  2413               	addwf	memmove@s^0,w,c
  5059  0027DE  6E0F               	movwf	??_memmove^0,c
  5060  0027E0  500E               	movf	(memmove@n+1)^0,w,c
  5061  0027E2  2014               	addwfc	(memmove@s+1)^0,w,c
  5062  0027E4  6E10               	movwf	(??_memmove+1)^0,c
  5063  0027E6  500F               	movf	??_memmove^0,w,c
  5064  0027E8  5C11               	subwf	memmove@d^0,w,c
  5065  0027EA  5010               	movf	(??_memmove+1)^0,w,c
  5066  0027EC  5812               	subwfb	(memmove@d+1)^0,w,c
  5067  0027EE  B0D8               	btfsc	status,0,c
  5068  0027F0  EFFC  F013         	goto	u6541
  5069  0027F4  EFFE  F013         	goto	u6540
  5070  0027F8                     u6541:
  5071  0027F8  EF24  F014         	goto	l6457
  5072  0027FC                     u6540:
  5073  0027FC  500D               	movf	memmove@n^0,w,c
  5074  0027FE  2613               	addwf	memmove@s^0,f,c
  5075  002800  500E               	movf	(memmove@n+1)^0,w,c
  5076  002802  2214               	addwfc	(memmove@s+1)^0,f,c
  5077  002804  500D               	movf	memmove@n^0,w,c
  5078  002806  2611               	addwf	memmove@d^0,f,c
  5079  002808  500E               	movf	(memmove@n+1)^0,w,c
  5080  00280A  2212               	addwfc	(memmove@d+1)^0,f,c
  5081  00280C                     l6453:
  5082  00280C  0613               	decf	memmove@s^0,f,c
  5083  00280E  A0D8               	btfss	status,0,c
  5084  002810  0614               	decf	(memmove@s+1)^0,f,c
  5085  002812  C013  FFD9         	movff	memmove@s,fsr2l
  5086  002816  C014  FFDA         	movff	memmove@s+1,fsr2h
  5087  00281A  0611               	decf	memmove@d^0,f,c
  5088  00281C  A0D8               	btfss	status,0,c
  5089  00281E  0612               	decf	(memmove@d+1)^0,f,c
  5090  002820  C011  FFE1         	movff	memmove@d,fsr1l
  5091  002824  C012  FFE2         	movff	memmove@d+1,fsr1h
  5092  002828  CFDF FFE7          	movff	indf2,indf1
  5093  00282C  060D               	decf	memmove@n^0,f,c
  5094  00282E  A0D8               	btfss	status,0,c
  5095  002830  060E               	decf	(memmove@n+1)^0,f,c
  5096  002832  500D               	movf	memmove@n^0,w,c
  5097  002834  100E               	iorwf	(memmove@n+1)^0,w,c
  5098  002836  A4D8               	btfss	status,2,c
  5099  002838  EF20  F014         	goto	u6551
  5100  00283C  EF22  F014         	goto	u6550
  5101  002840                     u6551:
  5102  002840  EF06  F014         	goto	l6453
  5103  002844                     u6550:
  5104  002844  EF47  F014         	goto	l1880
  5105  002848                     l6457:
  5106  002848  500D               	movf	memmove@n^0,w,c
  5107  00284A  100E               	iorwf	(memmove@n+1)^0,w,c
  5108  00284C  B4D8               	btfsc	status,2,c
  5109  00284E  EF2B  F014         	goto	u6561
  5110  002852  EF2D  F014         	goto	u6560
  5111  002856                     u6561:
  5112  002856  EF47  F014         	goto	l1880
  5113  00285A                     u6560:
  5114  00285A                     l6459:
  5115  00285A  C013  FFD9         	movff	memmove@s,fsr2l
  5116  00285E  C014  FFDA         	movff	memmove@s+1,fsr2h
  5117  002862  C011  FFE1         	movff	memmove@d,fsr1l
  5118  002866  C012  FFE2         	movff	memmove@d+1,fsr1h
  5119  00286A  CFDF FFE7          	movff	indf2,indf1
  5120  00286E  4A13               	infsnz	memmove@s^0,f,c
  5121  002870  2A14               	incf	(memmove@s+1)^0,f,c
  5122  002872  4A11               	infsnz	memmove@d^0,f,c
  5123  002874  2A12               	incf	(memmove@d+1)^0,f,c
  5124  002876  060D               	decf	memmove@n^0,f,c
  5125  002878  A0D8               	btfss	status,0,c
  5126  00287A  060E               	decf	(memmove@n+1)^0,f,c
  5127  00287C  500D               	movf	memmove@n^0,w,c
  5128  00287E  100E               	iorwf	(memmove@n+1)^0,w,c
  5129  002880  A4D8               	btfss	status,2,c
  5130  002882  EF45  F014         	goto	u6571
  5131  002886  EF47  F014         	goto	u6570
  5132  00288A                     u6571:
  5133  00288A  EF2D  F014         	goto	l6459
  5134  00288E                     u6570:
  5135  00288E                     l1880:
  5136  00288E  0012               	return		;funcret
  5137  002890                     __end_of_memmove:
  5138                           	opt callstack 0
  5139                           
  5140 ;; *************** function _EUSART2_is_rx_ready *****************
  5141 ;; Defined at:
  5142 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      _Bool 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;Total ram usage:        0 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    4
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_ReadRX232
  5167 ;;		_SaveCardDat
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text8
  5172  003D06                     __ptext8:
  5173                           	opt callstack 0
  5174  003D06                     _EUSART2_is_rx_ready:
  5175                           	opt callstack 23
  5176  003D06                     
  5177                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  5178  003D06  0100               	movlb	0	; () banked
  5179  003D08  51BD               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5180  003D0A  A4D8               	btfss	status,2,c
  5181  003D0C  EF8A  F01E         	goto	u6451
  5182  003D10  EF8D  F01E         	goto	u6450
  5183  003D14                     u6451:
  5184  003D14  0E01               	movlw	1
  5185  003D16  EF8E  F01E         	goto	u6460
  5186  003D1A                     u6450:
  5187  003D1A  0E00               	movlw	0
  5188  003D1C                     u6460:
  5189  003D1C                     
  5190                           ; BSR set to: 0
  5191  003D1C  0012               	return		;funcret
  5192  003D1E                     __end_of_EUSART2_is_rx_ready:
  5193                           	opt callstack 0
  5194                           
  5195 ;; *************** function _EUSART2_Read *****************
  5196 ;; Defined at:
  5197 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  readValue       1    4[COMRAM] unsigned char 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      unsigned char 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5215 ;;Total ram usage:        1 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    4
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_ReadRX232
  5222 ;;		_SaveCardDat
  5223 ;;		_getch
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text9
  5228  00367E                     __ptext9:
  5229                           	opt callstack 0
  5230  00367E                     _EUSART2_Read:
  5231                           	opt callstack 23
  5232  00367E                     l6405:
  5233                           
  5234                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  5235  00367E  0100               	movlb	0	; () banked
  5236  003680  51BD               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5237  003682  B4D8               	btfsc	status,2,c
  5238  003684  EF46  F01B         	goto	u6471
  5239  003688  EF48  F01B         	goto	u6470
  5240  00368C                     u6471:
  5241  00368C  EF3F  F01B         	goto	l6405
  5242  003690                     u6470:
  5243  003690                     
  5244                           ; BSR set to: 0
  5245                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  5246  003690  0E00               	movlw	low _eusart2RxStatusBuffer
  5247  003692  25BE               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  5248  003694  6ED9               	movwf	fsr2l,c
  5249  003696  6ADA               	clrf	fsr2h,c
  5250  003698  0E01               	movlw	high _eusart2RxStatusBuffer
  5251  00369A  22DA               	addwfc	fsr2h,f,c
  5252  00369C  50DF               	movf	indf2,w,c
  5253  00369E  0101               	movlb	1	; () banked
  5254  0036A0  6F42               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5255                           
  5256                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  5257  0036A2  0E64               	movlw	low _eusart2RxBuffer
  5258  0036A4  0100               	movlb	0	; () banked
  5259  0036A6  25BE               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  5260  0036A8  6ED9               	movwf	fsr2l,c
  5261  0036AA  6ADA               	clrf	fsr2h,c
  5262  0036AC  0E03               	movlw	high _eusart2RxBuffer
  5263  0036AE  22DA               	addwfc	fsr2h,f,c
  5264  0036B0  50DF               	movf	indf2,w,c
  5265  0036B2  6E05               	movwf	EUSART2_Read@readValue^0,c
  5266  0036B4                     
  5267                           ; BSR set to: 0
  5268  0036B4  2BBE               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  5269  0036B6                     
  5270                           ; BSR set to: 0
  5271                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  5272  0036B6  0E1F               	movlw	31
  5273  0036B8  65BE               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  5274  0036BA  EF61  F01B         	goto	u6481
  5275  0036BE  EF63  F01B         	goto	u6480
  5276  0036C2                     u6481:
  5277  0036C2  EF65  F01B         	goto	l6415
  5278  0036C6                     u6480:
  5279  0036C6                     
  5280                           ; BSR set to: 0
  5281                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  5282  0036C6  0E00               	movlw	0
  5283  0036C8  6FBE               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5284  0036CA                     l6415:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  5288  0036CA  010E               	movlb	14	; () banked
  5289  0036CC  9FC5               	bcf	197,7,b	;volatile
  5290  0036CE                     
  5291                           ; BSR set to: 14
  5292                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  5293  0036CE  0100               	movlb	0	; () banked
  5294  0036D0  07BD               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  5295  0036D2                     
  5296                           ; BSR set to: 0
  5297                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  5298  0036D2  010E               	movlb	14	; () banked
  5299  0036D4  8FC5               	bsf	197,7,b	;volatile
  5300  0036D6                     
  5301                           ; BSR set to: 14
  5302                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  5303  0036D6  5005               	movf	EUSART2_Read@readValue^0,w,c
  5304  0036D8                     
  5305                           ; BSR set to: 14
  5306  0036D8  0012               	return		;funcret
  5307  0036DA                     __end_of_EUSART2_Read:
  5308                           	opt callstack 0
  5309                           
  5310 ;; *************** function _ClearEEAddRange *****************
  5311 ;; Defined at:
  5312 ;;		line 228 in file "RS232.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  StartAdd        2   41[BANK0 ] unsigned int 
  5315 ;;  NumBytes        2   43[BANK0 ] unsigned int 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  i               2   84[COMRAM] int 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5330 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;Total ram usage:        6 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:   13
  5334 ;; This function calls:
  5335 ;;		_DATAEE_WriteByte
  5336 ;;		_printf
  5337 ;; This function is called by:
  5338 ;;		_SaveCardDat
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text10
  5343  0036DA                     __ptext10:
  5344                           	opt callstack 0
  5345  0036DA                     _ClearEEAddRange:
  5346                           	opt callstack 15
  5347  0036DA                     
  5348                           ;RS232.c: 231:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  5349  0036DA  0E09               	movlw	low STR_67
  5350  0036DC  0100               	movlb	0	; () banked
  5351  0036DE  6F7D               	movwf	printf@fmt& (0+255),b
  5352  0036E0  0EF9               	movlw	high STR_67
  5353  0036E2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5354  0036E4  C089  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  5355  0036E8  C08A  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  5356  0036EC  C08B  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  5357  0036F0  C08C  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  5358  0036F4  EC2E  F01E         	call	_printf	;wreg free
  5359  0036F8                     
  5360                           ;RS232.c: 233:     for(int i = 0; i<NumBytes; i++){
  5361  0036F8  0E00               	movlw	0
  5362  0036FA  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  5363  0036FC  0E00               	movlw	0
  5364  0036FE  6E55               	movwf	ClearEEAddRange@i^0,c
  5365  003700  EF8E  F01B         	goto	l6581
  5366  003704                     l6577:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;RS232.c: 234:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  5370  003704  5189               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  5371  003706  2455               	addwf	ClearEEAddRange@i^0,w,c
  5372  003708  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  5373  00370A  518A               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  5374  00370C  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  5375  00370E  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  5376  003710  0EFF               	movlw	255
  5377  003712  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  5378  003714  ECAF  F01C         	call	_DATAEE_WriteByte	;wreg free
  5379  003718                     
  5380                           ;RS232.c: 235:     }
  5381  003718  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  5382  00371A  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  5383  00371C                     l6581:
  5384  00371C  0100               	movlb	0	; () banked
  5385  00371E  518B               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  5386  003720  5C55               	subwf	ClearEEAddRange@i^0,w,c
  5387  003722  518C               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  5388  003724  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  5389  003726  A0D8               	btfss	status,0,c
  5390  003728  EF98  F01B         	goto	u6761
  5391  00372C  EF9A  F01B         	goto	u6760
  5392  003730                     u6761:
  5393  003730  EF82  F01B         	goto	l6577
  5394  003734                     u6760:
  5395  003734                     
  5396                           ; BSR set to: 0
  5397  003734  0012               	return		;funcret
  5398  003736                     __end_of_ClearEEAddRange:
  5399                           	opt callstack 0
  5400                           
  5401 ;; *************** function _DATAEE_WriteByte *****************
  5402 ;; Defined at:
  5403 ;;		line 165 in file "mcc_generated_files/memory.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  bAdd            2    4[COMRAM] unsigned short 
  5406 ;;  bData           1    6[COMRAM] unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5418 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;Total ram usage:        4 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    4
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_ClearEEAddRange
  5429 ;;		_SaveCardDat
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text11
  5434  00395E                     __ptext11:
  5435                           	opt callstack 0
  5436  00395E                     _DATAEE_WriteByte:
  5437                           	opt callstack 24
  5438  00395E                     
  5439                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  5440  00395E  0E00               	movlw	0
  5441  003960  BEF2               	btfsc	242,7,c	;volatile
  5442  003962  0E01               	movlw	1
  5443  003964  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  5444  003966                     
  5445                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  5446  003966  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  5447  003968  0B03               	andlw	3
  5448  00396A  6E7F               	movwf	127,c	;volatile
  5449  00396C                     
  5450                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  5451  00396C  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  5452  003970                     
  5453                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  5454  003970  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  5455  003974                     
  5456                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  5457  003974  0E3F               	movlw	-193
  5458  003976  1681               	andwf	129,f,c	;volsfr
  5459  003978                     
  5460                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  5461  003978  8481               	bsf	129,2,c	;volsfr
  5462  00397A                     
  5463                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  5464  00397A  9EF2               	bcf	242,7,c	;volatile
  5465  00397C                     
  5466                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  5467  00397C  0E55               	movlw	85
  5468  00397E  6E82               	movwf	130,c	;volsfr
  5469  003980                     
  5470                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  5471  003980  0EAA               	movlw	170
  5472  003982  6E82               	movwf	130,c	;volsfr
  5473  003984                     
  5474                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  5475  003984  8281               	bsf	129,1,c	;volsfr
  5476  003986                     l212:
  5477                           
  5478                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  5479  003986  B281               	btfsc	129,1,c	;volsfr
  5480  003988  EFC8  F01C         	goto	u6431
  5481  00398C  EFCA  F01C         	goto	u6430
  5482  003990                     u6431:
  5483  003990  EFC3  F01C         	goto	l212
  5484  003994                     u6430:
  5485  003994                     
  5486                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  5487  003994  9481               	bcf	129,2,c	;volsfr
  5488                           
  5489                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  5490  003996  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  5491  003998  D002               	bra	u6445
  5492  00399A  9EF2               	bcf	242,7,c	;volatile
  5493  00399C  D001               	bra	u6446
  5494  00399E                     u6445:
  5495  00399E  8EF2               	bsf	242,7,c	;volatile
  5496  0039A0                     u6446:
  5497  0039A0  0012               	return		;funcret
  5498  0039A2                     __end_of_DATAEE_WriteByte:
  5499                           	opt callstack 0
  5500                           
  5501 ;; *************** function _InitialiseString *****************
  5502 ;; Defined at:
  5503 ;;		line 110 in file "RS232.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  Partial         1    wreg     _Bool 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  Partial         1   71[BANK0 ] _Bool 
  5508 ;;  PartNum        19   41[BANK0 ] unsigned char [19]
  5509 ;;  SerialNum      11   60[BANK0 ] unsigned char [11]
  5510 ;;  RevNum          2   72[BANK0 ] unsigned char [2]
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;Total ram usage:       33 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:   13
  5527 ;; This function calls:
  5528 ;;		_CardConfigIni
  5529 ;;		_printf
  5530 ;; This function is called by:
  5531 ;;		_main
  5532 ;;		_ValidateCmd
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text12
  5537  001042                     __ptext12:
  5538                           	opt callstack 0
  5539  001042                     _InitialiseString:
  5540                           	opt callstack 16
  5541                           
  5542                           ;incstack = 0
  5543                           ;InitialiseString@Partial stored from wreg
  5544  001042  0100               	movlb	0	; () banked
  5545  001044  6FA7               	movwf	InitialiseString@Partial& (0+255),b
  5546  001046                     
  5547                           ;RS232.c: 113:     char SerialNum[11] = { '\0' };
  5548  001046  EE20  F09C         	lfsr	2,InitialiseString@SerialNum
  5549  00104A  0E0A               	movlw	10
  5550  00104C                     u6771:
  5551  00104C  6ADE               	clrf	postinc2,c
  5552  00104E  06E8               	decf	wreg,f,c
  5553  001050  E2FD               	bc	u6771
  5554  001052                     
  5555                           ;RS232.c: 115:     CardConfigIni("Serial", SerialNum,0x0300,5);
  5556  001052  0ED6               	movlw	low STR_29
  5557  001054  6E0A               	movwf	CardConfigIni@Name^0,c
  5558  001056  0EFF               	movlw	high STR_29
  5559  001058  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5560  00105A  0E9C               	movlw	low InitialiseString@SerialNum
  5561  00105C  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5562  00105E  0E00               	movlw	high InitialiseString@SerialNum
  5563  001060  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5564  001062  0E03               	movlw	3
  5565  001064  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5566  001066  0E00               	movlw	0
  5567  001068  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5568  00106A  0E00               	movlw	0
  5569  00106C  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5570  00106E  0E05               	movlw	5
  5571  001070  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5572  001072  EC34  F00A         	call	_CardConfigIni	;wreg free
  5573  001076                     
  5574                           ;RS232.c: 117:     char PartNum[19] = { '\0' };
  5575  001076  EE20  F089         	lfsr	2,InitialiseString@PartNum
  5576  00107A  0E12               	movlw	18
  5577  00107C                     u6781:
  5578  00107C  6ADE               	clrf	postinc2,c
  5579  00107E  06E8               	decf	wreg,f,c
  5580  001080  E2FD               	bc	u6781
  5581                           
  5582                           ;RS232.c: 118:     CardConfigIni("Part", PartNum,0x0100,8);
  5583  001082  0EEA               	movlw	low STR_31
  5584  001084  6E0A               	movwf	CardConfigIni@Name^0,c
  5585  001086  0EFF               	movlw	high STR_31
  5586  001088  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5587  00108A  0E89               	movlw	low InitialiseString@PartNum
  5588  00108C  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5589  00108E  0E00               	movlw	high InitialiseString@PartNum
  5590  001090  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5591  001092  0E01               	movlw	1
  5592  001094  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5593  001096  0E00               	movlw	0
  5594  001098  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5595  00109A  0E00               	movlw	0
  5596  00109C  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5597  00109E  0E08               	movlw	8
  5598  0010A0  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5599  0010A2  EC34  F00A         	call	_CardConfigIni	;wreg free
  5600  0010A6                     
  5601                           ;RS232.c: 120:     char RevNum[2] = { '\0' };
  5602  0010A6  0E00               	movlw	0
  5603  0010A8  0100               	movlb	0	; () banked
  5604  0010AA  6FA9               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  5605  0010AC  0E00               	movlw	0
  5606  0010AE  6FA8               	movwf	InitialiseString@RevNum& (0+255),b
  5607  0010B0                     
  5608                           ; BSR set to: 0
  5609                           ;RS232.c: 121:     CardConfigIni("Rev", RevNum,0x0200,1);
  5610  0010B0  0EF4               	movlw	low STR_33
  5611  0010B2  6E0A               	movwf	CardConfigIni@Name^0,c
  5612  0010B4  0EFF               	movlw	high STR_33
  5613  0010B6  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5614  0010B8  0EA8               	movlw	low InitialiseString@RevNum
  5615  0010BA  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5616  0010BC  0E00               	movlw	high InitialiseString@RevNum
  5617  0010BE  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5618  0010C0  0E02               	movlw	2
  5619  0010C2  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5620  0010C4  0E00               	movlw	0
  5621  0010C6  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5622  0010C8  0E00               	movlw	0
  5623  0010CA  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5624  0010CC  0E01               	movlw	1
  5625  0010CE  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5626  0010D0  EC34  F00A         	call	_CardConfigIni	;wreg free
  5627  0010D4                     
  5628                           ;RS232.c: 125:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  5629  0010D4  0E54               	movlw	low STR_38
  5630  0010D6  0100               	movlb	0	; () banked
  5631  0010D8  6F7D               	movwf	printf@fmt& (0+255),b
  5632  0010DA  0EFB               	movlw	high STR_38
  5633  0010DC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5634  0010DE  EC2E  F01E         	call	_printf	;wreg free
  5635  0010E2                     
  5636                           ;RS232.c: 129:     printf("Card Ser No. %s \r\n",SerialNum);
  5637  0010E2  0E21               	movlw	low STR_39
  5638  0010E4  0100               	movlb	0	; () banked
  5639  0010E6  6F7D               	movwf	printf@fmt& (0+255),b
  5640  0010E8  0EFF               	movlw	high STR_39
  5641  0010EA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5642  0010EC  0E9C               	movlw	low InitialiseString@SerialNum
  5643  0010EE  6F7F               	movwf	(?_printf+2)& (0+255),b
  5644  0010F0  0E00               	movlw	high InitialiseString@SerialNum
  5645  0010F2  6F80               	movwf	(?_printf+3)& (0+255),b
  5646  0010F4  EC2E  F01E         	call	_printf	;wreg free
  5647  0010F8                     
  5648                           ;RS232.c: 130:     printf("Card Part No. %s \r\n",PartNum);
  5649  0010F8  0E0D               	movlw	low STR_40
  5650  0010FA  0100               	movlb	0	; () banked
  5651  0010FC  6F7D               	movwf	printf@fmt& (0+255),b
  5652  0010FE  0EFF               	movlw	high STR_40
  5653  001100  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5654  001102  0E89               	movlw	low InitialiseString@PartNum
  5655  001104  6F7F               	movwf	(?_printf+2)& (0+255),b
  5656  001106  0E00               	movlw	high InitialiseString@PartNum
  5657  001108  6F80               	movwf	(?_printf+3)& (0+255),b
  5658  00110A  EC2E  F01E         	call	_printf	;wreg free
  5659  00110E                     
  5660                           ;RS232.c: 131:     printf("Card Revision. %s \r\n",RevNum);
  5661  00110E  0EE3               	movlw	low STR_41
  5662  001110  0100               	movlb	0	; () banked
  5663  001112  6F7D               	movwf	printf@fmt& (0+255),b
  5664  001114  0EFE               	movlw	high STR_41
  5665  001116  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5666  001118  0EA8               	movlw	low InitialiseString@RevNum
  5667  00111A  6F7F               	movwf	(?_printf+2)& (0+255),b
  5668  00111C  0E00               	movlw	high InitialiseString@RevNum
  5669  00111E  6F80               	movwf	(?_printf+3)& (0+255),b
  5670  001120  EC2E  F01E         	call	_printf	;wreg free
  5671  001124                     
  5672                           ;RS232.c: 132:     printf("Card Address. 0x05 \r\n");
  5673  001124  0E8B               	movlw	low STR_42
  5674  001126  0100               	movlb	0	; () banked
  5675  001128  6F7D               	movwf	printf@fmt& (0+255),b
  5676  00112A  0EFE               	movlw	high STR_42
  5677  00112C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5678  00112E  EC2E  F01E         	call	_printf	;wreg free
  5679  001132                     
  5680                           ;RS232.c: 133:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  5681  001132  0ED8               	movlw	low STR_43
  5682  001134  0100               	movlb	0	; () banked
  5683  001136  6F7D               	movwf	printf@fmt& (0+255),b
  5684  001138  0EFA               	movlw	high STR_43
  5685  00113A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5686  00113C  0EC1               	movlw	low STR_44
  5687  00113E  6F7F               	movwf	(?_printf+2)& (0+255),b
  5688  001140  0EFF               	movlw	high STR_44
  5689  001142  6F80               	movwf	(?_printf+3)& (0+255),b
  5690  001144  0ECD               	movlw	low STR_45
  5691  001146  6F81               	movwf	(?_printf+4)& (0+255),b
  5692  001148  0EFF               	movlw	high STR_45
  5693  00114A  6F82               	movwf	(?_printf+5)& (0+255),b
  5694  00114C  0E08               	movlw	8
  5695  00114E  6F84               	movwf	(?_printf+7)& (0+255),b
  5696  001150  0E34               	movlw	52
  5697  001152  6F83               	movwf	(?_printf+6)& (0+255),b
  5698  001154  EC2E  F01E         	call	_printf	;wreg free
  5699  001158                     
  5700                           ;RS232.c: 136:     if(Partial != 1){
  5701  001158  0100               	movlb	0	; () banked
  5702  00115A  05A7               	decf	InitialiseString@Partial& (0+255),w,b
  5703  00115C  B4D8               	btfsc	status,2,c
  5704  00115E  EFB3  F008         	goto	u6791
  5705  001162  EFB5  F008         	goto	u6790
  5706  001166                     u6791:
  5707  001166  EF32  F009         	goto	l894
  5708  00116A                     u6790:
  5709  00116A                     
  5710                           ; BSR set to: 0
  5711                           ;RS232.c: 137:         printf("Initalisation Complete - Ready\r\n\n");
  5712  00116A  0E34               	movlw	low STR_46
  5713  00116C  6F7D               	movwf	printf@fmt& (0+255),b
  5714  00116E  0EFC               	movlw	high STR_46
  5715  001170  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5716  001172  EC2E  F01E         	call	_printf	;wreg free
  5717                           
  5718                           ;RS232.c: 138:         printf("Modbus Function Codes Supported:\r\n\n");
  5719  001176  0EEC               	movlw	low STR_47
  5720  001178  0100               	movlb	0	; () banked
  5721  00117A  6F7D               	movwf	printf@fmt& (0+255),b
  5722  00117C  0EFB               	movlw	high STR_47
  5723  00117E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5724  001180  EC2E  F01E         	call	_printf	;wreg free
  5725                           
  5726                           ;RS232.c: 139:         printf("   0x03 - Read Multiple 16bit Registers\r\n");
  5727  001184  0E02               	movlw	low STR_48
  5728  001186  0100               	movlb	0	; () banked
  5729  001188  6F7D               	movwf	printf@fmt& (0+255),b
  5730  00118A  0EFB               	movlw	high STR_48
  5731  00118C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5732  00118E  EC2E  F01E         	call	_printf	;wreg free
  5733                           
  5734                           ;RS232.c: 140:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  5735  001192  0EC0               	movlw	low STR_49
  5736  001194  0100               	movlb	0	; () banked
  5737  001196  6F7D               	movwf	printf@fmt& (0+255),b
  5738  001198  0EF8               	movlw	high STR_49
  5739  00119A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5740  00119C  EC2E  F01E         	call	_printf	;wreg free
  5741                           
  5742                           ;RS232.c: 141:         printf("      Add 0x0100 to 0x0108 - Part Number\r\n");
  5743  0011A0  0EAD               	movlw	low STR_50
  5744  0011A2  0100               	movlb	0	; () banked
  5745  0011A4  6F7D               	movwf	printf@fmt& (0+255),b
  5746  0011A6  0EFA               	movlw	high STR_50
  5747  0011A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5748  0011AA  EC2E  F01E         	call	_printf	;wreg free
  5749                           
  5750                           ;RS232.c: 142:         printf("      Add 0x0200 - Revision\r\n");
  5751  0011AE  0E19               	movlw	low STR_51
  5752  0011B0  0100               	movlb	0	; () banked
  5753  0011B2  6F7D               	movwf	printf@fmt& (0+255),b
  5754  0011B4  0EFD               	movlw	high STR_51
  5755  0011B6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5756  0011B8  EC2E  F01E         	call	_printf	;wreg free
  5757                           
  5758                           ;RS232.c: 143:         printf("      Add 0x0300 to 0x0304 - Revision\r\n");
  5759  0011BC  0E2C               	movlw	low STR_52
  5760  0011BE  0100               	movlb	0	; () banked
  5761  0011C0  6F7D               	movwf	printf@fmt& (0+255),b
  5762  0011C2  0EFB               	movlw	high STR_52
  5763  0011C4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5764  0011C6  EC2E  F01E         	call	_printf	;wreg free
  5765                           
  5766                           ;RS232.c: 144:         printf("      Add 0x0400 to 0x0404 - Compile Date - WIP\r\n");
  5767  0011CA  0E4F               	movlw	low STR_53
  5768  0011CC  0100               	movlb	0	; () banked
  5769  0011CE  6F7D               	movwf	printf@fmt& (0+255),b
  5770  0011D0  0EFA               	movlw	high STR_53
  5771  0011D2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5772  0011D4  EC2E  F01E         	call	_printf	;wreg free
  5773                           
  5774                           ;RS232.c: 145:         printf("      Add 0x0500 to 0x0503 - Compile Time - WIP\r\n");
  5775  0011D8  0E1D               	movlw	low STR_54
  5776  0011DA  0100               	movlb	0	; () banked
  5777  0011DC  6F7D               	movwf	printf@fmt& (0+255),b
  5778  0011DE  0EFA               	movlw	high STR_54
  5779  0011E0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5780  0011E2  EC2E  F01E         	call	_printf	;wreg free
  5781                           
  5782                           ;RS232.c: 146:         printf("      Add 0x0600 to 0x0601 - Compiler Version - WIP\r\n")
      +                          ;
  5783  0011E6  0E7C               	movlw	low STR_55
  5784  0011E8  0100               	movlb	0	; () banked
  5785  0011EA  6F7D               	movwf	printf@fmt& (0+255),b
  5786  0011EC  0EF9               	movlw	high STR_55
  5787  0011EE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5788  0011F0  EC2E  F01E         	call	_printf	;wreg free
  5789                           
  5790                           ;RS232.c: 147:         printf("      Add 0x0700 to 0x0702 - 3x Analogue Inputs - WIP\r\n
      +                          \n");
  5791  0011F4  0E43               	movlw	low STR_56
  5792  0011F6  0100               	movlb	0	; () banked
  5793  0011F8  6F7D               	movwf	printf@fmt& (0+255),b
  5794  0011FA  0EF9               	movlw	high STR_56
  5795  0011FC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5796  0011FE  EC2E  F01E         	call	_printf	;wreg free
  5797                           
  5798                           ;RS232.c: 148:         printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n");
  5799  001202  0EE8               	movlw	low STR_57
  5800  001204  0100               	movlb	0	; () banked
  5801  001206  6F7D               	movwf	printf@fmt& (0+255),b
  5802  001208  0EF9               	movlw	high STR_57
  5803  00120A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5804  00120C  EC2E  F01E         	call	_printf	;wreg free
  5805                           
  5806                           ;RS232.c: 149:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  5807  001210  0E75               	movlw	low STR_58
  5808  001212  0100               	movlb	0	; () banked
  5809  001214  6F7D               	movwf	printf@fmt& (0+255),b
  5810  001216  0EF8               	movlw	high STR_58
  5811  001218  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5812  00121A  EC2E  F01E         	call	_printf	;wreg free
  5813                           
  5814                           ;RS232.c: 151:         printf("Commands Supported:\r\n");
  5815  00121E  0EA1               	movlw	low STR_59
  5816  001220  0100               	movlb	0	; () banked
  5817  001222  6F7D               	movwf	printf@fmt& (0+255),b
  5818  001224  0EFE               	movlw	high STR_59
  5819  001226  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5820  001228  EC2E  F01E         	call	_printf	;wreg free
  5821                           
  5822                           ;RS232.c: 152:         printf("   ? - Initalise and display card details\r\n");
  5823  00122C  0E81               	movlw	low STR_60
  5824  00122E  0100               	movlb	0	; () banked
  5825  001230  6F7D               	movwf	printf@fmt& (0+255),b
  5826  001232  0EFA               	movlw	high STR_60
  5827  001234  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5828  001236  EC2E  F01E         	call	_printf	;wreg free
  5829                           
  5830                           ;RS232.c: 153:         printf("   serial - Set card serial number\r\n");
  5831  00123A  0EA2               	movlw	low STR_61
  5832  00123C  0100               	movlb	0	; () banked
  5833  00123E  6F7D               	movwf	printf@fmt& (0+255),b
  5834  001240  0EFB               	movlw	high STR_61
  5835  001242  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5836  001244  EC2E  F01E         	call	_printf	;wreg free
  5837                           
  5838                           ;RS232.c: 154:         printf("   part - Set card part number\r\n");
  5839  001248  0E78               	movlw	low STR_62
  5840  00124A  0100               	movlb	0	; () banked
  5841  00124C  6F7D               	movwf	printf@fmt& (0+255),b
  5842  00124E  0EFC               	movlw	high STR_62
  5843  001250  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5844  001252  EC2E  F01E         	call	_printf	;wreg free
  5845                           
  5846                           ;RS232.c: 155:         printf("   rev - Set card part number\r\n");
  5847  001256  0EBA               	movlw	low STR_63
  5848  001258  0100               	movlb	0	; () banked
  5849  00125A  6F7D               	movwf	printf@fmt& (0+255),b
  5850  00125C  0EFC               	movlw	high STR_63
  5851  00125E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5852  001260  EC2E  F01E         	call	_printf	;wreg free
  5853  001264                     l894:
  5854  001264  0012               	return		;funcret
  5855  001266                     __end_of_InitialiseString:
  5856                           	opt callstack 0
  5857                           
  5858 ;; *************** function _CardConfigIni *****************
  5859 ;; Defined at:
  5860 ;;		line 58 in file "RS232.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  Name            2    9[COMRAM] PTR unsigned char 
  5863 ;;		 -> STR_37(4), STR_36(5), STR_35(7), 
  5864 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  5865 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  5866 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  5867 ;;  NumBytes        2   15[COMRAM] int 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  i               2   21[COMRAM] int 
  5870 ;;  j               2   19[COMRAM] int 
  5871 ;;  readDataEven    1   24[COMRAM] unsigned char 
  5872 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;Total ram usage:       16 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    5
  5889 ;; This function calls:
  5890 ;;		_DATAEE_ReadByte
  5891 ;;		_strcmp
  5892 ;; This function is called by:
  5893 ;;		_InitialiseString
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text13
  5898  001468                     __ptext13:
  5899                           	opt callstack 0
  5900  001468                     _CardConfigIni:
  5901                           	opt callstack 23
  5902  001468                     
  5903                           ;RS232.c: 62:     char readDataOdd, readDataEven;;RS232.c: 63:     int i=0, j=0;
  5904  001468  0E00               	movlw	0
  5905  00146A  6E17               	movwf	(CardConfigIni@i+1)^0,c
  5906  00146C  0E00               	movlw	0
  5907  00146E  6E16               	movwf	CardConfigIni@i^0,c
  5908  001470  0E00               	movlw	0
  5909  001472  6E15               	movwf	(CardConfigIni@j+1)^0,c
  5910  001474  0E00               	movlw	0
  5911  001476  6E14               	movwf	CardConfigIni@j^0,c
  5912                           
  5913                           ;RS232.c: 67:     for(i = 0; i < NumBytes; i++){
  5914  001478  0E00               	movlw	0
  5915  00147A  6E17               	movwf	(CardConfigIni@i+1)^0,c
  5916  00147C  0E00               	movlw	0
  5917  00147E  6E16               	movwf	CardConfigIni@i^0,c
  5918  001480  EF14  F00B         	goto	l6569
  5919  001484                     l6531:
  5920                           
  5921                           ;RS232.c: 68:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  5922  001484  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5923  001488  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5924  00148C  EC8F  F01E         	call	_DATAEE_ReadByte	;wreg free
  5925  001490  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  5926  001492                     
  5927                           ;RS232.c: 70:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5928  001492  0E03               	movlw	3
  5929  001494  6E13               	movwf	(??_CardConfigIni+1)^0,c
  5930  001496  0E08               	movlw	8
  5931  001498  6E12               	movwf	??_CardConfigIni^0,c
  5932  00149A  0E77               	movlw	119
  5933  00149C                     u7387:
  5934  00149C  2EE8               	decfsz	wreg,f,c
  5935  00149E  D7FE               	bra	u7387
  5936  0014A0  2E12               	decfsz	??_CardConfigIni^0,f,c
  5937  0014A2  D7FC               	bra	u7387
  5938  0014A4  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  5939  0014A6  D7FA               	bra	u7387
  5940  0014A8  F000               	nop	
  5941  0014AA                     
  5942                           ;RS232.c: 73:         if(readDataOdd != 0xFF){
  5943  0014AA  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  5944  0014AC  B4D8               	btfsc	status,2,c
  5945  0014AE  EF5B  F00A         	goto	u6701
  5946  0014B2  EF5D  F00A         	goto	u6700
  5947  0014B6                     u6701:
  5948  0014B6  EF67  F00A         	goto	l6541
  5949  0014BA                     u6700:
  5950  0014BA                     
  5951                           ;RS232.c: 74:             RetNum[j] = readDataOdd;
  5952  0014BA  5014               	movf	CardConfigIni@j^0,w,c
  5953  0014BC  240C               	addwf	CardConfigIni@RetNum^0,w,c
  5954  0014BE  6ED9               	movwf	fsr2l,c
  5955  0014C0  5015               	movf	(CardConfigIni@j+1)^0,w,c
  5956  0014C2  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  5957  0014C4  6EDA               	movwf	fsr2h,c
  5958  0014C6  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  5959  0014CA                     
  5960                           ;RS232.c: 75:             j++;
  5961  0014CA  4A14               	infsnz	CardConfigIni@j^0,f,c
  5962  0014CC  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  5963  0014CE                     l6541:
  5964                           
  5965                           ;RS232.c: 78:         dataeeAddrWrk++;
  5966  0014CE  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  5967  0014D0  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  5968  0014D2                     
  5969                           ;RS232.c: 79:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  5970  0014D2  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5971  0014D6  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5972  0014DA  EC8F  F01E         	call	_DATAEE_ReadByte	;wreg free
  5973  0014DE  6E19               	movwf	CardConfigIni@readDataEven^0,c
  5974  0014E0                     
  5975                           ;RS232.c: 81:         dataeeAddrWrk++;
  5976  0014E0  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  5977  0014E2  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  5978  0014E4                     
  5979                           ;RS232.c: 82:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5980  0014E4  0E03               	movlw	3
  5981  0014E6  6E13               	movwf	(??_CardConfigIni+1)^0,c
  5982  0014E8  0E08               	movlw	8
  5983  0014EA  6E12               	movwf	??_CardConfigIni^0,c
  5984  0014EC  0E77               	movlw	119
  5985  0014EE                     u7397:
  5986  0014EE  2EE8               	decfsz	wreg,f,c
  5987  0014F0  D7FE               	bra	u7397
  5988  0014F2  2E12               	decfsz	??_CardConfigIni^0,f,c
  5989  0014F4  D7FC               	bra	u7397
  5990  0014F6  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  5991  0014F8  D7FA               	bra	u7397
  5992  0014FA  F000               	nop	
  5993  0014FC                     
  5994                           ;RS232.c: 85:         if(readDataEven != 0xFF){
  5995  0014FC  2819               	incf	CardConfigIni@readDataEven^0,w,c
  5996  0014FE  B4D8               	btfsc	status,2,c
  5997  001500  EF84  F00A         	goto	u6711
  5998  001504  EF86  F00A         	goto	u6710
  5999  001508                     u6711:
  6000  001508  EF90  F00A         	goto	l6555
  6001  00150C                     u6710:
  6002  00150C                     
  6003                           ;RS232.c: 86:             RetNum[j] = readDataEven;
  6004  00150C  5014               	movf	CardConfigIni@j^0,w,c
  6005  00150E  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6006  001510  6ED9               	movwf	fsr2l,c
  6007  001512  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6008  001514  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6009  001516  6EDA               	movwf	fsr2h,c
  6010  001518  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  6011  00151C                     
  6012                           ;RS232.c: 87:             j++;
  6013  00151C  4A14               	infsnz	CardConfigIni@j^0,f,c
  6014  00151E  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  6015  001520                     l6555:
  6016                           
  6017                           ;RS232.c: 90:         if(!strcmp("Serial",Name)){
  6018  001520  0ED6               	movlw	low STR_29
  6019  001522  6E05               	movwf	strcmp@l^0,c
  6020  001524  0EFF               	movlw	high STR_29
  6021  001526  6E06               	movwf	(strcmp@l+1)^0,c
  6022  001528  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6023  00152C  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6024  001530  EC77  F017         	call	_strcmp	;wreg free
  6025  001534  5005               	movf	?_strcmp^0,w,c
  6026  001536  1006               	iorwf	(?_strcmp+1)^0,w,c
  6027  001538  A4D8               	btfss	status,2,c
  6028  00153A  EFA1  F00A         	goto	u6721
  6029  00153E  EFA3  F00A         	goto	u6720
  6030  001542                     u6721:
  6031  001542  EFBC  F00A         	goto	l6559
  6032  001546                     u6720:
  6033  001546                     
  6034                           ;RS232.c: 91:             MB303xx[i] = readDataOdd *256 + readDataEven;
  6035  001546  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6036  001548  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6037  00154C  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6038  00154E  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6039  001552  6A12               	clrf	??_CardConfigIni^0,c
  6040  001554  2612               	addwf	??_CardConfigIni^0,f,c
  6041  001556  0E00               	movlw	0
  6042  001558  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6043  00155A  90D8               	bcf	status,0,c
  6044  00155C  3416               	rlcf	CardConfigIni@i^0,w,c
  6045  00155E  6ED9               	movwf	fsr2l,c
  6046  001560  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6047  001562  6EDA               	movwf	fsr2h,c
  6048  001564  0EB3               	movlw	low _MB303xx
  6049  001566  26D9               	addwf	fsr2l,f,c
  6050  001568  0E01               	movlw	high _MB303xx
  6051  00156A  22DA               	addwfc	fsr2h,f,c
  6052  00156C  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6053  001570  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6054                           
  6055                           ;RS232.c: 92:         }else if(!strcmp("Part",Name)){
  6056  001574  EF12  F00B         	goto	l6567
  6057  001578                     l6559:
  6058  001578  0EEA               	movlw	low STR_31
  6059  00157A  6E05               	movwf	strcmp@l^0,c
  6060  00157C  0EFF               	movlw	high STR_31
  6061  00157E  6E06               	movwf	(strcmp@l+1)^0,c
  6062  001580  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6063  001584  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6064  001588  EC77  F017         	call	_strcmp	;wreg free
  6065  00158C  5005               	movf	?_strcmp^0,w,c
  6066  00158E  1006               	iorwf	(?_strcmp+1)^0,w,c
  6067  001590  A4D8               	btfss	status,2,c
  6068  001592  EFCD  F00A         	goto	u6731
  6069  001596  EFCF  F00A         	goto	u6730
  6070  00159A                     u6731:
  6071  00159A  EFE8  F00A         	goto	l6563
  6072  00159E                     u6730:
  6073  00159E                     
  6074                           ;RS232.c: 93:             MB301xx[i] = readDataOdd *256 + readDataEven;
  6075  00159E  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6076  0015A0  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6077  0015A4  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6078  0015A6  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6079  0015AA  6A12               	clrf	??_CardConfigIni^0,c
  6080  0015AC  2612               	addwf	??_CardConfigIni^0,f,c
  6081  0015AE  0E00               	movlw	0
  6082  0015B0  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6083  0015B2  90D8               	bcf	status,0,c
  6084  0015B4  3416               	rlcf	CardConfigIni@i^0,w,c
  6085  0015B6  6ED9               	movwf	fsr2l,c
  6086  0015B8  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6087  0015BA  6EDA               	movwf	fsr2h,c
  6088  0015BC  0E9B               	movlw	low _MB301xx
  6089  0015BE  26D9               	addwf	fsr2l,f,c
  6090  0015C0  0E01               	movlw	high _MB301xx
  6091  0015C2  22DA               	addwfc	fsr2h,f,c
  6092  0015C4  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6093  0015C8  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6094                           
  6095                           ;RS232.c: 94:         }else if(!strcmp("Rev",Name)){
  6096  0015CC  EF12  F00B         	goto	l6567
  6097  0015D0                     l6563:
  6098  0015D0  0EF4               	movlw	low STR_33
  6099  0015D2  6E05               	movwf	strcmp@l^0,c
  6100  0015D4  0EFF               	movlw	high STR_33
  6101  0015D6  6E06               	movwf	(strcmp@l+1)^0,c
  6102  0015D8  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6103  0015DC  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6104  0015E0  EC77  F017         	call	_strcmp	;wreg free
  6105  0015E4  5005               	movf	?_strcmp^0,w,c
  6106  0015E6  1006               	iorwf	(?_strcmp+1)^0,w,c
  6107  0015E8  A4D8               	btfss	status,2,c
  6108  0015EA  EFF9  F00A         	goto	u6741
  6109  0015EE  EFFB  F00A         	goto	u6740
  6110  0015F2                     u6741:
  6111  0015F2  EF12  F00B         	goto	l6567
  6112  0015F6                     u6740:
  6113  0015F6                     
  6114                           ;RS232.c: 95:             MB302xx[i] = readDataOdd *256 + readDataEven;
  6115  0015F6  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6116  0015F8  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6117  0015FC  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6118  0015FE  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6119  001602  6A12               	clrf	??_CardConfigIni^0,c
  6120  001604  2612               	addwf	??_CardConfigIni^0,f,c
  6121  001606  0E00               	movlw	0
  6122  001608  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6123  00160A  90D8               	bcf	status,0,c
  6124  00160C  3416               	rlcf	CardConfigIni@i^0,w,c
  6125  00160E  6ED9               	movwf	fsr2l,c
  6126  001610  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6127  001612  6EDA               	movwf	fsr2h,c
  6128  001614  0EDC               	movlw	low _MB302xx
  6129  001616  26D9               	addwf	fsr2l,f,c
  6130  001618  0E01               	movlw	high _MB302xx
  6131  00161A  22DA               	addwfc	fsr2h,f,c
  6132  00161C  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6133  001620  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6134  001624                     l6567:
  6135                           
  6136                           ;RS232.c: 99:     }
  6137  001624  4A16               	infsnz	CardConfigIni@i^0,f,c
  6138  001626  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  6139  001628                     l6569:
  6140  001628  5010               	movf	CardConfigIni@NumBytes^0,w,c
  6141  00162A  5C16               	subwf	CardConfigIni@i^0,w,c
  6142  00162C  5017               	movf	(CardConfigIni@i+1)^0,w,c
  6143  00162E  0A80               	xorlw	128
  6144  001630  6E12               	movwf	??_CardConfigIni^0,c
  6145  001632  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  6146  001634  0A80               	xorlw	128
  6147  001636  5812               	subwfb	??_CardConfigIni^0,w,c
  6148  001638  A0D8               	btfss	status,0,c
  6149  00163A  EF21  F00B         	goto	u6751
  6150  00163E  EF23  F00B         	goto	u6750
  6151  001642                     u6751:
  6152  001642  EF42  F00A         	goto	l6531
  6153  001646                     u6750:
  6154  001646                     
  6155                           ;RS232.c: 101:     RetNum[j] = '\0';
  6156  001646  5014               	movf	CardConfigIni@j^0,w,c
  6157  001648  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6158  00164A  6ED9               	movwf	fsr2l,c
  6159  00164C  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6160  00164E  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6161  001650  6EDA               	movwf	fsr2h,c
  6162  001652  0E00               	movlw	0
  6163  001654  6EDF               	movwf	indf2,c
  6164  001656  0012               	return		;funcret
  6165  001658                     __end_of_CardConfigIni:
  6166                           	opt callstack 0
  6167                           
  6168 ;; *************** function _strcmp *****************
  6169 ;; Defined at:
  6170 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  l               2    4[COMRAM] PTR const unsigned char 
  6173 ;;		 -> STR_34(4), STR_32(5), STR_30(7), Command(16), 
  6174 ;;  r               2    6[COMRAM] PTR const unsigned char 
  6175 ;;		 -> STR_85(4), STR_83(5), STR_81(7), STR_79(2), 
  6176 ;;		 -> STR_77(6), STR_37(4), STR_36(5), STR_35(7), 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  2    4[COMRAM] int 
  6181 ;; Registers used:
  6182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6191 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;Total ram usage:        5 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    4
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_CardConfigIni
  6199 ;;		_ValidateCmd
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text14
  6204  002EEE                     __ptext14:
  6205                           	opt callstack 0
  6206  002EEE                     _strcmp:
  6207                           	opt callstack 25
  6208  002EEE  EF7D  F017         	goto	l6435
  6209  002EF2                     l6433:
  6210  002EF2  4A05               	infsnz	strcmp@l^0,f,c
  6211  002EF4  2A06               	incf	(strcmp@l+1)^0,f,c
  6212  002EF6  4A07               	infsnz	strcmp@r^0,f,c
  6213  002EF8  2A08               	incf	(strcmp@r+1)^0,f,c
  6214  002EFA                     l6435:
  6215  002EFA  C007  FFF6         	movff	strcmp@r,tblptrl
  6216  002EFE  C008  FFF7         	movff	strcmp@r+1,tblptrh
  6217  002F02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6218  002F02  6AF8               	clrf	tblptru,c
  6219  002F04                     	endif
  6220  002F04                     	if	0	;tblptru may be non-zero
  6221  002F04                     	endif
  6222  002F04  0008               	tblrd		*
  6223  002F06  CFF5 F009          	movff	tablat,??_strcmp
  6224  002F0A  C005  FFF6         	movff	strcmp@l,tblptrl
  6225  002F0E  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6226  002F12  0E00               	movlw	low (__mediumconst shr (0+16))
  6227  002F14  6EF8               	movwf	tblptru,c
  6228  002F16  0E0E               	movlw	(high __ramtop+-1)
  6229  002F18  64F7               	cpfsgt	tblptrh,c
  6230  002F1A  D003               	bra	u6497
  6231  002F1C  0008               	tblrd		*
  6232  002F1E  50F5               	movf	tablat,w,c
  6233  002F20  D005               	bra	u6495
  6234  002F22                     u6497:
  6235  002F22  CFF6 FFE9          	movff	tblptrl,fsr0l
  6236  002F26  CFF7 FFEA          	movff	tblptrh,fsr0h
  6237  002F2A  50EF               	movf	indf0,w,c
  6238  002F2C                     u6495:
  6239  002F2C  1809               	xorwf	??_strcmp^0,w,c
  6240  002F2E  A4D8               	btfss	status,2,c
  6241  002F30  EF9C  F017         	goto	u6491
  6242  002F34  EF9E  F017         	goto	u6490
  6243  002F38                     u6491:
  6244  002F38  EFB7  F017         	goto	l6439
  6245  002F3C                     u6490:
  6246  002F3C  C005  FFF6         	movff	strcmp@l,tblptrl
  6247  002F40  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6248  002F44  0E00               	movlw	low (__mediumconst shr (0+16))
  6249  002F46  6EF8               	movwf	tblptru,c
  6250  002F48  0E0E               	movlw	(high __ramtop+-1)
  6251  002F4A  64F7               	cpfsgt	tblptrh,c
  6252  002F4C  D003               	bra	u6507
  6253  002F4E  0008               	tblrd		*
  6254  002F50  50F5               	movf	tablat,w,c
  6255  002F52  D005               	bra	u6500
  6256  002F54                     u6507:
  6257  002F54  CFF6 FFE9          	movff	tblptrl,fsr0l
  6258  002F58  CFF7 FFEA          	movff	tblptrh,fsr0h
  6259  002F5C  50EF               	movf	indf0,w,c
  6260  002F5E                     u6500:
  6261  002F5E  0900               	iorlw	0
  6262  002F60  A4D8               	btfss	status,2,c
  6263  002F62  EFB5  F017         	goto	u6511
  6264  002F66  EFB7  F017         	goto	u6510
  6265  002F6A                     u6511:
  6266  002F6A  EF79  F017         	goto	l6433
  6267  002F6E                     u6510:
  6268  002F6E                     l6439:
  6269  002F6E  C005  FFF6         	movff	strcmp@l,tblptrl
  6270  002F72  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6271  002F76  0E00               	movlw	low (__mediumconst shr (0+16))
  6272  002F78  6EF8               	movwf	tblptru,c
  6273  002F7A  0E0E               	movlw	(high __ramtop+-1)
  6274  002F7C  64F7               	cpfsgt	tblptrh,c
  6275  002F7E  D003               	bra	u6527
  6276  002F80  0008               	tblrd		*
  6277  002F82  50F5               	movf	tablat,w,c
  6278  002F84  D005               	bra	u6520
  6279  002F86                     u6527:
  6280  002F86  CFF6 FFE9          	movff	tblptrl,fsr0l
  6281  002F8A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6282  002F8E  50EF               	movf	indf0,w,c
  6283  002F90                     u6520:
  6284  002F90  6E09               	movwf	??_strcmp^0,c
  6285  002F92  C007  FFF6         	movff	strcmp@r,tblptrl
  6286  002F96  C008  FFF7         	movff	strcmp@r+1,tblptrh
  6287  002F9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6288  002F9A  6AF8               	clrf	tblptru,c
  6289  002F9C                     	endif
  6290  002F9C                     	if	0	;tblptru may be non-zero
  6291  002F9C                     	endif
  6292  002F9C  0008               	tblrd		*
  6293  002F9E  50F5               	movf	tablat,w,c
  6294  002FA0  5C09               	subwf	??_strcmp^0,w,c
  6295  002FA2  6E05               	movwf	?_strcmp^0,c
  6296  002FA4  6A06               	clrf	(?_strcmp+1)^0,c
  6297  002FA6  A0D8               	btfss	status,0,c
  6298  002FA8  0606               	decf	(?_strcmp+1)^0,f,c
  6299  002FAA  0012               	return		;funcret
  6300  002FAC                     __end_of_strcmp:
  6301                           	opt callstack 0
  6302                           
  6303 ;; *************** function _DATAEE_ReadByte *****************
  6304 ;; Defined at:
  6305 ;;		line 187 in file "mcc_generated_files/memory.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  bAdd            2    4[COMRAM] unsigned short 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      unsigned char 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;Total ram usage:        2 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    4
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_CardConfigIni
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text15
  6334  003D1E                     __ptext15:
  6335                           	opt callstack 0
  6336  003D1E                     _DATAEE_ReadByte:
  6337                           	opt callstack 23
  6338  003D1E                     
  6339                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  6340  003D1E  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  6341  003D20  0B03               	andlw	3
  6342  003D22  6E7F               	movwf	127,c	;volatile
  6343  003D24                     
  6344                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  6345  003D24  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  6346  003D28                     
  6347                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  6348  003D28  0E3F               	movlw	-193
  6349  003D2A  1681               	andwf	129,f,c	;volsfr
  6350  003D2C                     
  6351                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  6352  003D2C  8081               	bsf	129,0,c	;volsfr
  6353  003D2E                     
  6354                           ;mcc_generated_files/memory.c: 193:     __nop();
  6355  003D2E  F000               	nop	
  6356  003D30                     
  6357                           ;mcc_generated_files/memory.c: 194:     __nop();
  6358  003D30  F000               	nop	
  6359  003D32                     
  6360                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  6361  003D32  5080               	movf	128,w,c	;volatile
  6362  003D34  0012               	return		;funcret
  6363  003D36                     __end_of_DATAEE_ReadByte:
  6364                           	opt callstack 0
  6365                           
  6366 ;; *************** function _SYSTEM_Initialize *****************
  6367 ;; Defined at:
  6368 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      void 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    6
  6389 ;; This function calls:
  6390 ;;		_EUSART1_Initialize
  6391 ;;		_EUSART2_Initialize
  6392 ;;		_INTERRUPT_Initialize
  6393 ;;		_OSCILLATOR_Initialize
  6394 ;;		_PIN_MANAGER_Initialize
  6395 ;;		_PMD_Initialize
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text16
  6402  003CEC                     __ptext16:
  6403                           	opt callstack 0
  6404  003CEC                     _SYSTEM_Initialize:
  6405                           	opt callstack 24
  6406  003CEC                     
  6407                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6408  003CEC  EC2A  F01F         	call	_INTERRUPT_Initialize	;wreg free
  6409  003CF0                     
  6410                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6411  003CF0  EC68  F01E         	call	_PMD_Initialize	;wreg free
  6412  003CF4                     
  6413                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6414  003CF4  EC76  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  6415  003CF8                     
  6416                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6417  003CF8  EC9B  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  6418  003CFC                     
  6419                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  6420  003CFC  ECBD  F018         	call	_EUSART1_Initialize	;wreg free
  6421  003D00                     
  6422                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  6423  003D00  EC00  F019         	call	_EUSART2_Initialize	;wreg free
  6424  003D04  0012               	return		;funcret
  6425  003D06                     __end_of_SYSTEM_Initialize:
  6426                           	opt callstack 0
  6427                           
  6428 ;; *************** function _PMD_Initialize *****************
  6429 ;; Defined at:
  6430 ;;		line 74 in file "mcc_generated_files/mcc.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_SYSTEM_Initialize
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text17
  6459  003CD0                     __ptext17:
  6460                           	opt callstack 0
  6461  003CD0                     _PMD_Initialize:
  6462                           	opt callstack 25
  6463  003CD0                     
  6464                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  6465  003CD0  0E00               	movlw	0
  6466  003CD2  010E               	movlb	14	; () banked
  6467  003CD4  6FE1               	movwf	225,b	;volatile
  6468                           
  6469                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  6470  003CD6  0E00               	movlw	0
  6471  003CD8  6FE2               	movwf	226,b	;volatile
  6472                           
  6473                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  6474  003CDA  0E00               	movlw	0
  6475  003CDC  6FE3               	movwf	227,b	;volatile
  6476                           
  6477                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  6478  003CDE  0E00               	movlw	0
  6479  003CE0  6FE4               	movwf	228,b	;volatile
  6480                           
  6481                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  6482  003CE2  0E00               	movlw	0
  6483  003CE4  6FE5               	movwf	229,b	;volatile
  6484                           
  6485                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  6486  003CE6  0E00               	movlw	0
  6487  003CE8  6FE6               	movwf	230,b	;volatile
  6488  003CEA                     
  6489                           ; BSR set to: 14
  6490  003CEA  0012               	return		;funcret
  6491  003CEC                     __end_of_PMD_Initialize:
  6492                           	opt callstack 0
  6493                           
  6494 ;; *************** function _PIN_MANAGER_Initialize *****************
  6495 ;; Defined at:
  6496 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6514 ;;Total ram usage:        0 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    4
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		_SYSTEM_Initialize
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text18
  6525  0030EC                     __ptext18:
  6526                           	opt callstack 0
  6527  0030EC                     _PIN_MANAGER_Initialize:
  6528                           	opt callstack 25
  6529  0030EC                     
  6530                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6531  0030EC  0E00               	movlw	0
  6532  0030EE  6E87               	movwf	135,c	;volatile
  6533                           
  6534                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6535  0030F0  0E00               	movlw	0
  6536  0030F2  6E86               	movwf	134,c	;volatile
  6537                           
  6538                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6539  0030F4  0E00               	movlw	0
  6540  0030F6  6E83               	movwf	131,c	;volatile
  6541                           
  6542                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6543  0030F8  0E00               	movlw	0
  6544  0030FA  6E84               	movwf	132,c	;volatile
  6545                           
  6546                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6547  0030FC  0E00               	movlw	0
  6548  0030FE  6E85               	movwf	133,c	;volatile
  6549                           
  6550                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6551  003100  0E07               	movlw	7
  6552  003102  6E8C               	movwf	140,c	;volatile
  6553                           
  6554                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  6555  003104  0E07               	movlw	7
  6556  003106  6E88               	movwf	136,c	;volatile
  6557                           
  6558                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  6559  003108  0EBF               	movlw	191
  6560  00310A  6E89               	movwf	137,c	;volatile
  6561                           
  6562                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6563  00310C  0EBF               	movlw	191
  6564  00310E  6E8A               	movwf	138,c	;volatile
  6565                           
  6566                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  6567  003110  0EFE               	movlw	254
  6568  003112  6E8B               	movwf	139,c	;volatile
  6569  003114                     
  6570                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  6571  003114  010F               	movlb	15	; () banked
  6572  003116  6926               	setf	38,b	;volatile
  6573                           
  6574                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  6575  003118  0E3B               	movlw	59
  6576  00311A  6F21               	movwf	33,b	;volatile
  6577                           
  6578                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  6579  00311C  0E37               	movlw	55
  6580  00311E  6F19               	movwf	25,b	;volatile
  6581                           
  6582                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  6583  003120  0E07               	movlw	7
  6584  003122  6F2E               	movwf	46,b	;volatile
  6585  003124                     
  6586                           ; BSR set to: 15
  6587                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  6588  003124  6911               	setf	17,b	;volatile
  6589                           
  6590                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  6591  003126  0E00               	movlw	0
  6592  003128  6F25               	movwf	37,b	;volatile
  6593                           
  6594                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  6595  00312A  0E00               	movlw	0
  6596  00312C  6F2D               	movwf	45,b	;volatile
  6597                           
  6598                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  6599  00312E  0E00               	movlw	0
  6600  003130  6F18               	movwf	24,b	;volatile
  6601                           
  6602                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  6603  003132  0E00               	movlw	0
  6604  003134  6F10               	movwf	16,b	;volatile
  6605                           
  6606                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  6607  003136  0E00               	movlw	0
  6608  003138  6F20               	movwf	32,b	;volatile
  6609                           
  6610                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  6611  00313A  0E00               	movlw	0
  6612  00313C  6F2C               	movwf	44,b	;volatile
  6613                           
  6614                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  6615  00313E  0E00               	movlw	0
  6616  003140  6F0F               	movwf	15,b	;volatile
  6617                           
  6618                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  6619  003142  0E00               	movlw	0
  6620  003144  6F17               	movwf	23,b	;volatile
  6621                           
  6622                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  6623  003146  0E00               	movlw	0
  6624  003148  6F1F               	movwf	31,b	;volatile
  6625                           
  6626                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  6627  00314A  0E00               	movlw	0
  6628  00314C  6F24               	movwf	36,b	;volatile
  6629  00314E                     
  6630                           ; BSR set to: 15
  6631                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  6632  00314E  690E               	setf	14,b	;volatile
  6633  003150                     
  6634                           ; BSR set to: 15
  6635                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  6636  003150  6916               	setf	22,b	;volatile
  6637  003152                     
  6638                           ; BSR set to: 15
  6639                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  6640  003152  691E               	setf	30,b	;volatile
  6641  003154                     
  6642                           ; BSR set to: 15
  6643                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  6644  003154  6923               	setf	35,b	;volatile
  6645                           
  6646                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  6647  003156  0E07               	movlw	7
  6648  003158  6F2B               	movwf	43,b	;volatile
  6649  00315A                     
  6650                           ; BSR set to: 15
  6651                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  6652  00315A  690D               	setf	13,b	;volatile
  6653  00315C                     
  6654                           ; BSR set to: 15
  6655                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  6656  00315C  6915               	setf	21,b	;volatile
  6657  00315E                     
  6658                           ; BSR set to: 15
  6659                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  6660  00315E  691D               	setf	29,b	;volatile
  6661  003160                     
  6662                           ; BSR set to: 15
  6663                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  6664  003160  6922               	setf	34,b	;volatile
  6665                           
  6666                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  6667  003162  0E0F               	movlw	15
  6668  003164  6F2A               	movwf	42,b	;volatile
  6669                           
  6670                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  6671  003166  0E17               	movlw	23
  6672  003168  010E               	movlb	14	; () banked
  6673  00316A  6FB5               	movwf	181,b	;volatile
  6674                           
  6675                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  6676  00316C  0E0B               	movlw	11
  6677  00316E  6FF5               	movwf	245,b	;volatile
  6678                           
  6679                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  6680  003170  0E09               	movlw	9
  6681  003172  6FFD               	movwf	253,b	;volatile
  6682                           
  6683                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  6684  003174  0E0F               	movlw	15
  6685  003176  6F8D               	movwf	141,b	;volatile
  6686  003178                     
  6687                           ; BSR set to: 14
  6688  003178  0012               	return		;funcret
  6689  00317A                     __end_of_PIN_MANAGER_Initialize:
  6690                           	opt callstack 0
  6691                           
  6692 ;; *************** function _OSCILLATOR_Initialize *****************
  6693 ;; Defined at:
  6694 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      void 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    4
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_SYSTEM_Initialize
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text19
  6723  003D36                     __ptext19:
  6724                           	opt callstack 0
  6725  003D36                     _OSCILLATOR_Initialize:
  6726                           	opt callstack 25
  6727  003D36                     
  6728                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  6729  003D36  0E60               	movlw	96
  6730  003D38  010E               	movlb	14	; () banked
  6731  003D3A  6FD8               	movwf	216,b	;volatile
  6732                           
  6733                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  6734  003D3C  0E00               	movlw	0
  6735  003D3E  6FDA               	movwf	218,b	;volatile
  6736                           
  6737                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  6738  003D40  0E00               	movlw	0
  6739  003D42  6FDC               	movwf	220,b	;volatile
  6740                           
  6741                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  6742  003D44  0E06               	movlw	6
  6743  003D46  6FDE               	movwf	222,b	;volatile
  6744                           
  6745                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  6746  003D48  0E00               	movlw	0
  6747  003D4A  6FDD               	movwf	221,b	;volatile
  6748  003D4C                     
  6749                           ; BSR set to: 14
  6750  003D4C  0012               	return		;funcret
  6751  003D4E                     __end_of_OSCILLATOR_Initialize:
  6752                           	opt callstack 0
  6753                           
  6754 ;; *************** function _INTERRUPT_Initialize *****************
  6755 ;; Defined at:
  6756 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		None
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    4
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_SYSTEM_Initialize
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text20
  6785  003E54                     __ptext20:
  6786                           	opt callstack 0
  6787  003E54                     _INTERRUPT_Initialize:
  6788                           	opt callstack 25
  6789  003E54                     
  6790                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  6791  003E54  9AF2               	bcf	242,5,c	;volatile
  6792  003E56  0012               	return		;funcret
  6793  003E58                     __end_of_INTERRUPT_Initialize:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function _EUSART2_Initialize *****************
  6797 ;; Defined at:
  6798 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    5
  6819 ;; This function calls:
  6820 ;;		_EUSART2_SetErrorHandler
  6821 ;;		_EUSART2_SetFramingErrorHandler
  6822 ;;		_EUSART2_SetOverrunErrorHandler
  6823 ;;		_EUSART2_SetRxInterruptHandler
  6824 ;;		_EUSART2_SetTxInterruptHandler
  6825 ;; This function is called by:
  6826 ;;		_SYSTEM_Initialize
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text21
  6831  003200                     __ptext21:
  6832                           	opt callstack 0
  6833  003200                     _EUSART2_Initialize:
  6834                           	opt callstack 24
  6835  003200                     
  6836                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  6837  003200  010E               	movlb	14	; () banked
  6838  003202  9FC5               	bcf	197,7,b	;volatile
  6839  003204                     
  6840                           ; BSR set to: 14
  6841                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  6842  003204  0E6E               	movlw	low _EUSART2_Receive_ISR
  6843  003206  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  6844  003208  0E2D               	movlw	high _EUSART2_Receive_ISR
  6845  00320A  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  6846  00320C  ECE5  F01E         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  6847  003210                     
  6848                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  6849  003210  010E               	movlb	14	; () banked
  6850  003212  9DC5               	bcf	197,6,b	;volatile
  6851                           
  6852                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  6853  003214  0E80               	movlw	low _EUSART2_Transmit_ISR
  6854  003216  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  6855  003218  0E38               	movlw	high _EUSART2_Transmit_ISR
  6856  00321A  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  6857  00321C  ECE0  F01E         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  6858  003220                     
  6859                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  6860  003220  0E08               	movlw	8
  6861  003222  010E               	movlb	14	; () banked
  6862  003224  6F9F               	movwf	159,b	;volatile
  6863  003226                     
  6864                           ; BSR set to: 14
  6865                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  6866  003226  0E90               	movlw	144
  6867  003228  6F9D               	movwf	157,b	;volatile
  6868  00322A                     
  6869                           ; BSR set to: 14
  6870                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  6871  00322A  0E24               	movlw	36
  6872  00322C  6F9E               	movwf	158,b	;volatile
  6873  00322E                     
  6874                           ; BSR set to: 14
  6875                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  6876  00322E  0EA0               	movlw	160
  6877  003230  6F9B               	movwf	155,b	;volatile
  6878  003232                     
  6879                           ; BSR set to: 14
  6880                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  6881  003232  0E01               	movlw	1
  6882  003234  6F9C               	movwf	156,b	;volatile
  6883  003236                     
  6884                           ; BSR set to: 14
  6885                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  6886  003236  0E58               	movlw	low _EUSART2_DefaultFramingErrorHandler
  6887  003238  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  6888  00323A  0E3E               	movlw	high _EUSART2_DefaultFramingErrorHandler
  6889  00323C  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  6890  00323E  ECEF  F01E         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  6891  003242                     
  6892                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  6893  003242  0E2E               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  6894  003244  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  6895  003246  0E3E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  6896  003248  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6897  00324A  ECEA  F01E         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  6898  00324E                     
  6899                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  6900  00324E  0E42               	movlw	low _EUSART2_DefaultErrorHandler
  6901  003250  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  6902  003252  0E3E               	movlw	high _EUSART2_DefaultErrorHandler
  6903  003254  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  6904  003256  ECF4  F01E         	call	_EUSART2_SetErrorHandler	;wreg free
  6905                           
  6906                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  6907  00325A  0E00               	movlw	0
  6908  00325C  0101               	movlb	1	; () banked
  6909  00325E  6F42               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6910                           
  6911                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  6912  003260  0E00               	movlw	0
  6913  003262  0100               	movlb	0	; () banked
  6914  003264  6FC0               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6915                           
  6916                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  6917  003266  0E00               	movlw	0
  6918  003268  6FBF               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6919                           
  6920                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  6921  00326A  0E20               	movlw	32
  6922  00326C  0101               	movlb	1	; () banked
  6923  00326E  6FF3               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6924                           
  6925                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  6926  003270  0E00               	movlw	0
  6927  003272  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6928                           
  6929                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  6930  003274  0E00               	movlw	0
  6931  003276  0100               	movlb	0	; () banked
  6932  003278  6FBE               	movwf	_eusart2RxTail& (0+255),b	;volatile
  6933                           
  6934                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  6935  00327A  0E00               	movlw	0
  6936  00327C  6FBD               	movwf	_eusart2RxCount& (0+255),b	;volatile
  6937  00327E                     
  6938                           ; BSR set to: 0
  6939                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  6940  00327E  010E               	movlb	14	; () banked
  6941  003280  8FC5               	bsf	197,7,b	;volatile
  6942  003282                     
  6943                           ; BSR set to: 14
  6944  003282  0012               	return		;funcret
  6945  003284                     __end_of_EUSART2_Initialize:
  6946                           	opt callstack 0
  6947                           
  6948 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  6949 ;; Defined at:
  6950 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6953 ;;		 -> EUSART2_Transmit_ISR(1), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      void 
  6958 ;; Registers used:
  6959 ;;		wreg, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;Total ram usage:        2 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    4
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_EUSART2_Initialize
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text22
  6980  003DC0                     __ptext22:
  6981                           	opt callstack 0
  6982  003DC0                     _EUSART2_SetTxInterruptHandler:
  6983                           	opt callstack 24
  6984  003DC0                     
  6985                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6986  003DC0  C005  F1F0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  6987  003DC4  C006  F1F1         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  6988  003DC8  0012               	return		;funcret
  6989  003DCA                     __end_of_EUSART2_SetTxInterruptHandler:
  6990                           	opt callstack 0
  6991                           
  6992 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  6993 ;; Defined at:
  6994 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6997 ;;		 -> EUSART2_Receive_ISR(1), 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;		None
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		wreg, status,2, status,0
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;Total ram usage:        2 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    4
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_EUSART2_Initialize
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text23
  7024  003DCA                     __ptext23:
  7025                           	opt callstack 0
  7026  003DCA                     _EUSART2_SetRxInterruptHandler:
  7027                           	opt callstack 24
  7028  003DCA                     
  7029                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7030  003DCA  C005  F1EE         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  7031  003DCE  C006  F1EF         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  7032  003DD2  0012               	return		;funcret
  7033  003DD4                     __end_of_EUSART2_SetRxInterruptHandler:
  7034                           	opt callstack 0
  7035                           
  7036 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  7037 ;; Defined at:
  7038 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7041 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7057 ;;Total ram usage:        2 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    4
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_EUSART2_Initialize
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text24
  7068  003DD4                     __ptext24:
  7069                           	opt callstack 0
  7070  003DD4                     _EUSART2_SetOverrunErrorHandler:
  7071                           	opt callstack 24
  7072  003DD4                     
  7073                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  7074  003DD4  C005  F1E6         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  7075  003DD8  C006  F1E7         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  7076  003DDC  0012               	return		;funcret
  7077  003DDE                     __end_of_EUSART2_SetOverrunErrorHandler:
  7078                           	opt callstack 0
  7079                           
  7080 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  7081 ;; Defined at:
  7082 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7085 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7101 ;;Total ram usage:        2 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    4
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_EUSART2_Initialize
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text25
  7112  003DDE                     __ptext25:
  7113                           	opt callstack 0
  7114  003DDE                     _EUSART2_SetFramingErrorHandler:
  7115                           	opt callstack 24
  7116  003DDE                     
  7117                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  7118  003DDE  C005  F1E8         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  7119  003DE2  C006  F1E9         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  7120  003DE6  0012               	return		;funcret
  7121  003DE8                     __end_of_EUSART2_SetFramingErrorHandler:
  7122                           	opt callstack 0
  7123                           
  7124 ;; *************** function _EUSART2_SetErrorHandler *****************
  7125 ;; Defined at:
  7126 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7129 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;Total ram usage:        2 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    4
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_EUSART2_Initialize
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text26
  7156  003DE8                     __ptext26:
  7157                           	opt callstack 0
  7158  003DE8                     _EUSART2_SetErrorHandler:
  7159                           	opt callstack 24
  7160  003DE8                     
  7161                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  7162  003DE8  C005  F1E4         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  7163  003DEC  C006  F1E5         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  7164  003DF0  0012               	return		;funcret
  7165  003DF2                     __end_of_EUSART2_SetErrorHandler:
  7166                           	opt callstack 0
  7167                           
  7168 ;; *************** function _EUSART1_Initialize *****************
  7169 ;; Defined at:
  7170 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;Total ram usage:        0 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    5
  7191 ;; This function calls:
  7192 ;;		_EUSART1_SetErrorHandler
  7193 ;;		_EUSART1_SetFramingErrorHandler
  7194 ;;		_EUSART1_SetOverrunErrorHandler
  7195 ;;		_EUSART1_SetRxInterruptHandler
  7196 ;;		_EUSART1_SetTxInterruptHandler
  7197 ;; This function is called by:
  7198 ;;		_SYSTEM_Initialize
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text27
  7203  00317A                     __ptext27:
  7204                           	opt callstack 0
  7205  00317A                     _EUSART1_Initialize:
  7206                           	opt callstack 24
  7207  00317A                     
  7208                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  7209  00317A  010E               	movlb	14	; () banked
  7210  00317C  9BC5               	bcf	197,5,b	;volatile
  7211  00317E                     
  7212                           ; BSR set to: 14
  7213                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  7214  00317E  0E2E               	movlw	low _EUSART1_Receive_ISR
  7215  003180  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  7216  003182  0E2E               	movlw	high _EUSART1_Receive_ISR
  7217  003184  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  7218  003186  ECFE  F01E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  7219  00318A                     
  7220                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  7221  00318A  010E               	movlb	14	; () banked
  7222  00318C  99C5               	bcf	197,4,b	;volatile
  7223                           
  7224                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  7225  00318E  0E16               	movlw	low _EUSART1_Transmit_ISR
  7226  003190  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  7227  003192  0E39               	movlw	high _EUSART1_Transmit_ISR
  7228  003194  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  7229  003196  ECF9  F01E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  7230  00319A                     
  7231                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  7232  00319A  0E08               	movlw	8
  7233  00319C  6E9F               	movwf	159,c	;volatile
  7234  00319E                     
  7235                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  7236  00319E  0E90               	movlw	144
  7237  0031A0  6E9D               	movwf	157,c	;volatile
  7238  0031A2                     
  7239                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  7240  0031A2  0E24               	movlw	36
  7241  0031A4  6E9E               	movwf	158,c	;volatile
  7242  0031A6                     
  7243                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  7244  0031A6  0EA0               	movlw	160
  7245  0031A8  6E9B               	movwf	155,c	;volatile
  7246  0031AA                     
  7247                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  7248  0031AA  0E03               	movlw	3
  7249  0031AC  6E9C               	movwf	156,c	;volatile
  7250  0031AE                     
  7251                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  7252  0031AE  0E01               	movlw	1
  7253  0031B0  6E9C               	movwf	156,c	;volatile
  7254                           
  7255                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  7256  0031B2  0E5A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7257  0031B4  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7258  0031B6  0E3E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7259  0031B8  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7260  0031BA  EC08  F01F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7261                           
  7262                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  7263  0031BE  0E48               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7264  0031C0  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7265  0031C2  0E3E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7266  0031C4  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7267  0031C6  EC03  F01F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7268                           
  7269                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  7270  0031CA  0E4E               	movlw	low _EUSART1_DefaultErrorHandler
  7271  0031CC  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7272  0031CE  0E3E               	movlw	high _EUSART1_DefaultErrorHandler
  7273  0031D0  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7274  0031D2  EC0D  F01F         	call	_EUSART1_SetErrorHandler	;wreg free
  7275  0031D6                     
  7276                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7277  0031D6  0E00               	movlw	0
  7278  0031D8  0101               	movlb	1	; () banked
  7279  0031DA  6F41               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7280  0031DC                     
  7281                           ; BSR set to: 1
  7282                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  7283  0031DC  0E00               	movlw	0
  7284  0031DE  0100               	movlb	0	; () banked
  7285  0031E0  6FBC               	movwf	_eusart1TxHead& (0+255),b	;volatile
  7286  0031E2                     
  7287                           ; BSR set to: 0
  7288                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  7289  0031E2  0E00               	movlw	0
  7290  0031E4  6FBB               	movwf	_eusart1TxTail& (0+255),b	;volatile
  7291  0031E6                     
  7292                           ; BSR set to: 0
  7293                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  7294  0031E6  0E10               	movlw	16
  7295  0031E8  0101               	movlb	1	; () banked
  7296  0031EA  6FF2               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  7297  0031EC                     
  7298                           ; BSR set to: 1
  7299                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  7300  0031EC  0E00               	movlw	0
  7301  0031EE  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7302  0031F0                     
  7303                           ; BSR set to: 1
  7304                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  7305  0031F0  0E00               	movlw	0
  7306  0031F2  0100               	movlb	0	; () banked
  7307  0031F4  6FBA               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7308  0031F6                     
  7309                           ; BSR set to: 0
  7310                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  7311  0031F6  0E00               	movlw	0
  7312  0031F8  6FB9               	movwf	_eusart1RxCount& (0+255),b	;volatile
  7313  0031FA                     
  7314                           ; BSR set to: 0
  7315                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  7316  0031FA  010E               	movlb	14	; () banked
  7317  0031FC  8BC5               	bsf	197,5,b	;volatile
  7318  0031FE                     
  7319                           ; BSR set to: 14
  7320  0031FE  0012               	return		;funcret
  7321  003200                     __end_of_EUSART1_Initialize:
  7322                           	opt callstack 0
  7323                           
  7324 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  7325 ;; Defined at:
  7326 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7329 ;;		 -> EUSART1_Transmit_ISR(1), 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;Total ram usage:        2 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:    4
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_EUSART1_Initialize
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text28
  7356  003DF2                     __ptext28:
  7357                           	opt callstack 0
  7358  003DF2                     _EUSART1_SetTxInterruptHandler:
  7359                           	opt callstack 24
  7360  003DF2                     
  7361                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7362  003DF2  C005  F1EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  7363  003DF6  C006  F1ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  7364  003DFA  0012               	return		;funcret
  7365  003DFC                     __end_of_EUSART1_SetTxInterruptHandler:
  7366                           	opt callstack 0
  7367                           
  7368 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  7369 ;; Defined at:
  7370 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7373 ;;		 -> EUSART1_Receive_ISR(1), 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7389 ;;Total ram usage:        2 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    4
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_EUSART1_Initialize
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text29
  7400  003DFC                     __ptext29:
  7401                           	opt callstack 0
  7402  003DFC                     _EUSART1_SetRxInterruptHandler:
  7403                           	opt callstack 24
  7404  003DFC                     
  7405                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7406  003DFC  C005  F1EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  7407  003E00  C006  F1EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  7408  003E04  0012               	return		;funcret
  7409  003E06                     __end_of_EUSART1_SetRxInterruptHandler:
  7410                           	opt callstack 0
  7411                           
  7412 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7413 ;; Defined at:
  7414 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7417 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7433 ;;Total ram usage:        2 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    4
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_EUSART1_Initialize
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text30
  7444  003E06                     __ptext30:
  7445                           	opt callstack 0
  7446  003E06                     _EUSART1_SetOverrunErrorHandler:
  7447                           	opt callstack 24
  7448  003E06                     
  7449                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  7450  003E06  C005  F1E0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7451  003E0A  C006  F1E1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7452  003E0E  0012               	return		;funcret
  7453  003E10                     __end_of_EUSART1_SetOverrunErrorHandler:
  7454                           	opt callstack 0
  7455                           
  7456 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7457 ;; Defined at:
  7458 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7461 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2, status,0
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7477 ;;Total ram usage:        2 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    4
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_EUSART1_Initialize
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text31
  7488  003E10                     __ptext31:
  7489                           	opt callstack 0
  7490  003E10                     _EUSART1_SetFramingErrorHandler:
  7491                           	opt callstack 24
  7492  003E10                     
  7493                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  7494  003E10  C005  F1E2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7495  003E14  C006  F1E3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7496  003E18  0012               	return		;funcret
  7497  003E1A                     __end_of_EUSART1_SetFramingErrorHandler:
  7498                           	opt callstack 0
  7499                           
  7500 ;; *************** function _EUSART1_SetErrorHandler *****************
  7501 ;; Defined at:
  7502 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7505 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;Total ram usage:        2 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:    4
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_EUSART1_Initialize
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text32
  7532  003E1A                     __ptext32:
  7533                           	opt callstack 0
  7534  003E1A                     _EUSART1_SetErrorHandler:
  7535                           	opt callstack 24
  7536  003E1A                     
  7537                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  7538  003E1A  C005  F1DE         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7539  003E1E  C006  F1DF         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7540  003E22  0012               	return		;funcret
  7541  003E24                     __end_of_EUSART1_SetErrorHandler:
  7542                           	opt callstack 0
  7543                           
  7544 ;; *************** function _PrintModbus *****************
  7545 ;; Defined at:
  7546 ;;		line 104 in file "Modbus.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;  i               2   41[BANK0 ] int 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7563 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7564 ;;Total ram usage:        3 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:   13
  7567 ;; This function calls:
  7568 ;;		_printf
  7569 ;; This function is called by:
  7570 ;;		_main
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text33
  7575  003284                     __ptext33:
  7576                           	opt callstack 0
  7577  003284                     _PrintModbus:
  7578                           	opt callstack 17
  7579  003284                     
  7580                           ;Modbus.c: 109:     printf("\r\nModbus Data Capture Complete:\r\n");
  7581  003284  0E56               	movlw	low STR_10
  7582  003286  0100               	movlb	0	; () banked
  7583  003288  6F7D               	movwf	printf@fmt& (0+255),b
  7584  00328A  0EFC               	movlw	high STR_10
  7585  00328C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7586  00328E  EC2E  F01E         	call	_printf	;wreg free
  7587  003292                     
  7588                           ;Modbus.c: 111:     for(i=0; i< ModDataCnt ; i++ ){
  7589  003292  0E00               	movlw	0
  7590  003294  0100               	movlb	0	; () banked
  7591  003296  6F8A               	movwf	(PrintModbus@i+1)& (0+255),b
  7592  003298  0E00               	movlw	0
  7593  00329A  6F89               	movwf	PrintModbus@i& (0+255),b
  7594  00329C  EF68  F019         	goto	l7031
  7595  0032A0                     l7027:
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;Modbus.c: 112:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  7599  0032A0  0E74               	movlw	low STR_11
  7600  0032A2  6F7D               	movwf	printf@fmt& (0+255),b
  7601  0032A4  0EFE               	movlw	high STR_11
  7602  0032A6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7603  0032A8  C089  F07F         	movff	PrintModbus@i,?_printf+2
  7604  0032AC  C08A  F080         	movff	PrintModbus@i+1,?_printf+3
  7605  0032B0  0E00               	movlw	low _ModbusData
  7606  0032B2  2589               	addwf	PrintModbus@i& (0+255),w,b
  7607  0032B4  6ED9               	movwf	fsr2l,c
  7608  0032B6  0E02               	movlw	high _ModbusData
  7609  0032B8  218A               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  7610  0032BA  6EDA               	movwf	fsr2h,c
  7611  0032BC  50DF               	movf	indf2,w,c
  7612  0032BE  6E55               	movwf	??_PrintModbus^0,c
  7613  0032C0  5055               	movf	??_PrintModbus^0,w,c
  7614  0032C2  6F81               	movwf	(?_printf+4)& (0+255),b
  7615  0032C4  6B82               	clrf	(?_printf+5)& (0+255),b
  7616  0032C6  EC2E  F01E         	call	_printf	;wreg free
  7617  0032CA                     
  7618                           ;Modbus.c: 113:     }
  7619  0032CA  0100               	movlb	0	; () banked
  7620  0032CC  4B89               	infsnz	PrintModbus@i& (0+255),f,b
  7621  0032CE  2B8A               	incf	(PrintModbus@i+1)& (0+255),f,b
  7622  0032D0                     l7031:
  7623                           
  7624                           ; BSR set to: 0
  7625  0032D0  51B6               	movf	_ModDataCnt& (0+255),w,b
  7626  0032D2  5D89               	subwf	PrintModbus@i& (0+255),w,b
  7627  0032D4  518A               	movf	(PrintModbus@i+1)& (0+255),w,b
  7628  0032D6  0A80               	xorlw	128
  7629  0032D8  6E55               	movwf	??_PrintModbus^0,c
  7630  0032DA  51B7               	movf	(_ModDataCnt+1)& (0+255),w,b
  7631  0032DC  0A80               	xorlw	128
  7632  0032DE  5855               	subwfb	??_PrintModbus^0,w,c
  7633  0032E0  A0D8               	btfss	status,0,c
  7634  0032E2  EF75  F019         	goto	u7261
  7635  0032E6  EF77  F019         	goto	u7260
  7636  0032EA                     u7261:
  7637  0032EA  EF50  F019         	goto	l7027
  7638  0032EE                     u7260:
  7639  0032EE                     
  7640                           ; BSR set to: 0
  7641                           ;Modbus.c: 114:     printf("\r\n\n");
  7642  0032EE  0EBC               	movlw	low (STR_58+71)
  7643  0032F0  6F7D               	movwf	printf@fmt& (0+255),b
  7644  0032F2  0EF8               	movlw	high (STR_58+71)
  7645  0032F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7646  0032F6  EC2E  F01E         	call	_printf	;wreg free
  7647  0032FA  0012               	return		;funcret
  7648  0032FC                     __end_of_PrintModbus:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _ModbusRx *****************
  7652 ;; Defined at:
  7653 ;;		line 434 in file "Modbus.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      _Bool 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;Total ram usage:        1 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:   14
  7674 ;; This function calls:
  7675 ;;		_AddRxBuffToModBus
  7676 ;;		_ClearRxBuff
  7677 ;;		_EUSART1_Read
  7678 ;;		_EUSART1_is_rx_ready
  7679 ;;		_RXMode
  7680 ;;		_checkCRC
  7681 ;;		_printf
  7682 ;; This function is called by:
  7683 ;;		_main
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text34
  7688  00203E                     __ptext34:
  7689                           	opt callstack 0
  7690  00203E                     _ModbusRx:
  7691                           	opt callstack 16
  7692  00203E                     
  7693                           ;Modbus.c: 435:     RXMode();
  7694  00203E  EC1B  F01F         	call	_RXMode	;wreg free
  7695  002042                     
  7696                           ;Modbus.c: 436:     if(EUSART1_is_rx_ready()){
  7697  002042  ECA7  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  7698  002046  0900               	iorlw	0
  7699  002048  B4D8               	btfsc	status,2,c
  7700  00204A  EF29  F010         	goto	u7091
  7701  00204E  EF2B  F010         	goto	u7090
  7702  002052                     u7091:
  7703  002052  EFE0  F010         	goto	l6867
  7704  002056                     u7090:
  7705  002056                     
  7706                           ;Modbus.c: 437:         if(Debug ==1){
  7707  002056  0100               	movlb	0	; () banked
  7708  002058  05B8               	decf	_Debug& (0+255),w,b
  7709  00205A  A4D8               	btfss	status,2,c
  7710  00205C  EF32  F010         	goto	u7101
  7711  002060  EF34  F010         	goto	u7100
  7712  002064                     u7101:
  7713  002064  EF3A  F010         	goto	l6825
  7714  002068                     u7100:
  7715  002068                     
  7716                           ; BSR set to: 0
  7717                           ;Modbus.c: 438:             printf("Something in ESUART1 \r\n");
  7718  002068  0E5C               	movlw	low STR_25
  7719  00206A  6F7D               	movwf	printf@fmt& (0+255),b
  7720  00206C  0EFE               	movlw	high STR_25
  7721  00206E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7722  002070  EC2E  F01E         	call	_printf	;wreg free
  7723  002074                     l6825:
  7724                           
  7725                           ;Modbus.c: 441:             if(EUSART1_is_rx_ready()){
  7726  002074  ECA7  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  7727  002078  0900               	iorlw	0
  7728  00207A  B4D8               	btfsc	status,2,c
  7729  00207C  EF42  F010         	goto	u7111
  7730  002080  EF44  F010         	goto	u7110
  7731  002084                     u7111:
  7732  002084  EF7B  F010         	goto	l6841
  7733  002088                     u7110:
  7734  002088  EF6E  F010         	goto	l6837
  7735  00208C                     l6829:
  7736                           
  7737                           ;Modbus.c: 445:                     rxData[ByteNum] = EUSART1_Read();
  7738  00208C  EC9B  F01B         	call	_EUSART1_Read	;wreg free
  7739  002090  6E56               	movwf	??_ModbusRx^0,c
  7740  002092  0E00               	movlw	low _rxData
  7741  002094  0100               	movlb	0	; () banked
  7742  002096  25B4               	addwf	_ByteNum& (0+255),w,b
  7743  002098  6ED9               	movwf	fsr2l,c
  7744  00209A  0E05               	movlw	high _rxData
  7745  00209C  21B5               	addwfc	(_ByteNum+1)& (0+255),w,b
  7746  00209E  6EDA               	movwf	fsr2h,c
  7747  0020A0  C056  FFDF         	movff	??_ModbusRx,indf2
  7748  0020A4                     
  7749                           ; BSR set to: 0
  7750                           ;Modbus.c: 447:                     if(Debug == 1){
  7751  0020A4  05B8               	decf	_Debug& (0+255),w,b
  7752  0020A6  A4D8               	btfss	status,2,c
  7753  0020A8  EF58  F010         	goto	u7121
  7754  0020AC  EF5A  F010         	goto	u7120
  7755  0020B0                     u7121:
  7756  0020B0  EF6B  F010         	goto	l6835
  7757  0020B4                     u7120:
  7758  0020B4                     
  7759                           ; BSR set to: 0
  7760                           ;Modbus.c: 448:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  7761  0020B4  0E89               	movlw	low STR_26
  7762  0020B6  6F7D               	movwf	printf@fmt& (0+255),b
  7763  0020B8  0EFF               	movlw	high STR_26
  7764  0020BA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7765  0020BC  0E00               	movlw	low _rxData
  7766  0020BE  25B4               	addwf	_ByteNum& (0+255),w,b
  7767  0020C0  6ED9               	movwf	fsr2l,c
  7768  0020C2  0E05               	movlw	high _rxData
  7769  0020C4  21B5               	addwfc	(_ByteNum+1)& (0+255),w,b
  7770  0020C6  6EDA               	movwf	fsr2h,c
  7771  0020C8  50DF               	movf	indf2,w,c
  7772  0020CA  6E56               	movwf	??_ModbusRx^0,c
  7773  0020CC  5056               	movf	??_ModbusRx^0,w,c
  7774  0020CE  6F7F               	movwf	(?_printf+2)& (0+255),b
  7775  0020D0  6B80               	clrf	(?_printf+3)& (0+255),b
  7776  0020D2  EC2E  F01E         	call	_printf	;wreg free
  7777  0020D6                     l6835:
  7778                           
  7779                           ;Modbus.c: 450:                     ByteNum++;
  7780  0020D6  0100               	movlb	0	; () banked
  7781  0020D8  4BB4               	infsnz	_ByteNum& (0+255),f,b
  7782  0020DA  2BB5               	incf	(_ByteNum+1)& (0+255),f,b
  7783  0020DC                     l6837:
  7784                           
  7785                           ;Modbus.c: 443:                 while(EUSART1_is_rx_ready()){
  7786  0020DC  ECA7  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  7787  0020E0  0900               	iorlw	0
  7788  0020E2  A4D8               	btfss	status,2,c
  7789  0020E4  EF76  F010         	goto	u7131
  7790  0020E8  EF78  F010         	goto	u7130
  7791  0020EC                     u7131:
  7792  0020EC  EF46  F010         	goto	l6829
  7793  0020F0                     u7130:
  7794  0020F0                     
  7795                           ;Modbus.c: 453:                 RXStat = 1;
  7796  0020F0  0E01               	movlw	1
  7797  0020F2  0101               	movlb	1	; () banked
  7798  0020F4  6F40               	movwf	_RXStat& (0+255),b
  7799  0020F6                     l6841:
  7800                           
  7801                           ;Modbus.c: 456:             if(RXStat ==1){
  7802  0020F6  0101               	movlb	1	; () banked
  7803  0020F8  0540               	decf	_RXStat& (0+255),w,b
  7804  0020FA  A4D8               	btfss	status,2,c
  7805  0020FC  EF82  F010         	goto	u7141
  7806  002100  EF84  F010         	goto	u7140
  7807  002104                     u7141:
  7808  002104  EFA1  F010         	goto	l6853
  7809  002108                     u7140:
  7810  002108                     
  7811                           ; BSR set to: 1
  7812                           ;Modbus.c: 459:                 AddRxBuffToModBus();
  7813  002108  EC23  F015         	call	_AddRxBuffToModBus	;wreg free
  7814  00210C                     
  7815                           ;Modbus.c: 460:                 ClearRxBuff();
  7816  00210C  EC66  F01C         	call	_ClearRxBuff	;wreg free
  7817  002110                     
  7818                           ;Modbus.c: 461:                 RXStat = 0;
  7819  002110  0E00               	movlw	0
  7820  002112  0101               	movlb	1	; () banked
  7821  002114  6F40               	movwf	_RXStat& (0+255),b
  7822  002116                     
  7823                           ; BSR set to: 1
  7824                           ;Modbus.c: 462:                 ByteNum = 0;
  7825  002116  0E00               	movlw	0
  7826  002118  0100               	movlb	0	; () banked
  7827  00211A  6FB5               	movwf	(_ByteNum+1)& (0+255),b
  7828  00211C  0E00               	movlw	0
  7829  00211E  6FB4               	movwf	_ByteNum& (0+255),b
  7830  002120                     
  7831                           ; BSR set to: 0
  7832  002120  B883               	btfsc	131,4,c	;volatile
  7833  002122  EF95  F010         	goto	u7151
  7834  002126  EF98  F010         	goto	u7150
  7835  00212A                     u7151:
  7836  00212A  0E01               	movlw	1
  7837  00212C  EF99  F010         	goto	u7156
  7838  002130                     u7150:
  7839  002130  0E00               	movlw	0
  7840  002132                     u7156:
  7841  002132  0AFF               	xorlw	255
  7842  002134  6E56               	movwf	??_ModbusRx^0,c
  7843  002136  3A56               	swapf	??_ModbusRx^0,f,c
  7844  002138  5083               	movf	131,w,c	;volatile
  7845  00213A  1856               	xorwf	??_ModbusRx^0,w,c
  7846  00213C  0BEF               	andlw	-17
  7847  00213E  1856               	xorwf	??_ModbusRx^0,w,c
  7848  002140  6E83               	movwf	131,c	;volatile
  7849  002142                     l6853:
  7850                           
  7851                           ;Modbus.c: 467:         }while(ModDataCnt != ExpectedBytes);
  7852  002142  0101               	movlb	1	; () banked
  7853  002144  51DA               	movf	_ExpectedBytes& (0+255),w,b
  7854  002146  0100               	movlb	0	; () banked
  7855  002148  19B6               	xorwf	_ModDataCnt& (0+255),w,b
  7856  00214A  E109               	bnz	u7161
  7857  00214C  0101               	movlb	1	; () banked
  7858  00214E  51DB               	movf	(_ExpectedBytes+1)& (0+255),w,b
  7859  002150  0100               	movlb	0	; () banked
  7860  002152  19B7               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  7861  002154  A4D8               	btfss	status,2,c
  7862  002156  EFAF  F010         	goto	u7161
  7863  00215A  EFB1  F010         	goto	u7160
  7864  00215E                     u7161:
  7865  00215E  EF3A  F010         	goto	l6825
  7866  002162                     u7160:
  7867  002162                     
  7868                           ; BSR set to: 0
  7869  002162  BA83               	btfsc	131,5,c	;volatile
  7870  002164  EFB6  F010         	goto	u7171
  7871  002168  EFB9  F010         	goto	u7170
  7872  00216C                     u7171:
  7873  00216C  0E01               	movlw	1
  7874  00216E  EFBA  F010         	goto	u7176
  7875  002172                     u7170:
  7876  002172  0E00               	movlw	0
  7877  002174                     u7176:
  7878  002174  0AFF               	xorlw	255
  7879  002176  6E56               	movwf	??_ModbusRx^0,c
  7880  002178  3A56               	swapf	??_ModbusRx^0,f,c
  7881  00217A  4656               	rlncf	??_ModbusRx^0,f,c
  7882  00217C  5083               	movf	131,w,c	;volatile
  7883  00217E  1856               	xorwf	??_ModbusRx^0,w,c
  7884  002180  0BDF               	andlw	-33
  7885  002182  1856               	xorwf	??_ModbusRx^0,w,c
  7886  002184  6E83               	movwf	131,c	;volatile
  7887  002186                     
  7888                           ; BSR set to: 0
  7889                           ;Modbus.c: 472:         if(checkCRC() == 1)
  7890  002186  EC94  F011         	call	_checkCRC	;wreg free
  7891  00218A  06E8               	decf	wreg,f,c
  7892  00218C  A4D8               	btfss	status,2,c
  7893  00218E  EFCB  F010         	goto	u7181
  7894  002192  EFCD  F010         	goto	u7180
  7895  002196                     u7181:
  7896  002196  EFD6  F010         	goto	l6861
  7897  00219A                     u7180:
  7898  00219A                     
  7899                           ;Modbus.c: 473:         {;Modbus.c: 474:             printf("\r\nReceived Modbus CRC che
      +                          cked out.\r\n");
  7900  00219A  0EC7               	movlw	low STR_27
  7901  00219C  0100               	movlb	0	; () banked
  7902  00219E  6F7D               	movwf	printf@fmt& (0+255),b
  7903  0021A0  0EFB               	movlw	high STR_27
  7904  0021A2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7905  0021A4  EC2E  F01E         	call	_printf	;wreg free
  7906                           
  7907                           ;Modbus.c: 475:         }else{
  7908  0021A8  EFDD  F010         	goto	l6863
  7909  0021AC                     l6861:
  7910                           
  7911                           ;Modbus.c: 476:             printf("\r\nReceived Modbus CRC is bad.\r\n");
  7912  0021AC  0EDA               	movlw	low STR_28
  7913  0021AE  0100               	movlb	0	; () banked
  7914  0021B0  6F7D               	movwf	printf@fmt& (0+255),b
  7915  0021B2  0EFC               	movlw	high STR_28
  7916  0021B4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7917  0021B6  EC2E  F01E         	call	_printf	;wreg free
  7918  0021BA                     l6863:
  7919                           
  7920                           ;Modbus.c: 480:         return 1;
  7921  0021BA  0E01               	movlw	1
  7922  0021BC  EFE1  F010         	goto	l825
  7923  0021C0                     l6867:
  7924                           
  7925                           ;Modbus.c: 482:     return 0;
  7926  0021C0  0E00               	movlw	0
  7927  0021C2                     l825:
  7928  0021C2  0012               	return		;funcret
  7929  0021C4                     __end_of_ModbusRx:
  7930                           	opt callstack 0
  7931                           
  7932 ;; *************** function _checkCRC *****************
  7933 ;; Defined at:
  7934 ;;		line 120 in file "Modbus.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  i               2   54[BANK0 ] int 
  7939 ;;  crc             2   52[BANK0 ] unsigned int 
  7940 ;;  j               2   50[BANK0 ] int 
  7941 ;;  crcLow          2   48[BANK0 ] unsigned int 
  7942 ;;  crcHigh         2   46[BANK0 ] unsigned int 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      _Bool 
  7945 ;; Registers used:
  7946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;Total ram usage:       15 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:   13
  7959 ;; This function calls:
  7960 ;;		_printf
  7961 ;; This function is called by:
  7962 ;;		_ModbusRx
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text35
  7967  002328                     __ptext35:
  7968                           	opt callstack 0
  7969  002328                     _checkCRC:
  7970                           	opt callstack 16
  7971  002328                     
  7972                           ;Modbus.c: 121:   unsigned int crc = 0xFFFF;
  7973  002328  0100               	movlb	0	; () banked
  7974  00232A  6994               	setf	checkCRC@crc& (0+255),b
  7975  00232C  6995               	setf	(checkCRC@crc+1)& (0+255),b
  7976  00232E                     
  7977                           ; BSR set to: 0
  7978                           ;Modbus.c: 123:   unsigned int crcLow = 0;
  7979  00232E  0E00               	movlw	0
  7980  002330  6F91               	movwf	(checkCRC@crcLow+1)& (0+255),b
  7981  002332  0E00               	movlw	0
  7982  002334  6F90               	movwf	checkCRC@crcLow& (0+255),b
  7983                           
  7984                           ;Modbus.c: 124:   int i,j = 0;
  7985  002336  0E00               	movlw	0
  7986  002338  6F93               	movwf	(checkCRC@j+1)& (0+255),b
  7987  00233A  0E00               	movlw	0
  7988  00233C  6F92               	movwf	checkCRC@j& (0+255),b
  7989                           
  7990                           ;Modbus.c: 126:     for(i=0;i<ModDataCnt-2;i++){
  7991  00233E  0E00               	movlw	0
  7992  002340  6F97               	movwf	(checkCRC@i+1)& (0+255),b
  7993  002342  0E00               	movlw	0
  7994  002344  6F96               	movwf	checkCRC@i& (0+255),b
  7995  002346  EFD4  F011         	goto	l6689
  7996  00234A                     l6671:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;Modbus.c: 127:       crc ^= ModbusData[i];
  8000  00234A  0E00               	movlw	low _ModbusData
  8001  00234C  2596               	addwf	checkCRC@i& (0+255),w,b
  8002  00234E  6ED9               	movwf	fsr2l,c
  8003  002350  0E02               	movlw	high _ModbusData
  8004  002352  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8005  002354  6EDA               	movwf	fsr2h,c
  8006  002356  50DF               	movf	indf2,w,c
  8007  002358  6F89               	movwf	??_checkCRC& (0+255),b
  8008  00235A  5189               	movf	??_checkCRC& (0+255),w,b
  8009  00235C  1B94               	xorwf	checkCRC@crc& (0+255),f,b
  8010  00235E                     
  8011                           ; BSR set to: 0
  8012                           ;Modbus.c: 128:       for(j=8; j!=0; j--){
  8013  00235E  0E00               	movlw	0
  8014  002360  6F93               	movwf	(checkCRC@j+1)& (0+255),b
  8015  002362  0E08               	movlw	8
  8016  002364  6F92               	movwf	checkCRC@j& (0+255),b
  8017  002366                     l724:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;Modbus.c: 129:         if((crc & 0x0001) != 0){
  8021  002366  A194               	btfss	checkCRC@crc& (0+255),0,b
  8022  002368  EFB8  F011         	goto	u6881
  8023  00236C  EFBA  F011         	goto	u6880
  8024  002370                     u6881:
  8025  002370  EFC3  F011         	goto	l6683
  8026  002374                     u6880:
  8027  002374                     
  8028                           ; BSR set to: 0
  8029                           ;Modbus.c: 130:           crc >>= 1;
  8030  002374  90D8               	bcf	status,0,c
  8031  002376  3395               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  8032  002378  3394               	rrcf	checkCRC@crc& (0+255),f,b
  8033  00237A                     
  8034                           ; BSR set to: 0
  8035                           ;Modbus.c: 131:           crc ^= 0xA001;
  8036  00237A  0E01               	movlw	1
  8037  00237C  1B94               	xorwf	checkCRC@crc& (0+255),f,b
  8038  00237E  0EA0               	movlw	160
  8039  002380  1B95               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  8040                           
  8041                           ;Modbus.c: 132:         }
  8042  002382  EFC6  F011         	goto	l727
  8043  002386                     l6683:
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;Modbus.c: 134:           crc >>= 1;
  8047  002386  90D8               	bcf	status,0,c
  8048  002388  3395               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  8049  00238A  3394               	rrcf	checkCRC@crc& (0+255),f,b
  8050  00238C                     l727:
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;Modbus.c: 136:       }
  8054  00238C  0792               	decf	checkCRC@j& (0+255),f,b
  8055  00238E  A0D8               	btfss	status,0,c
  8056  002390  0793               	decf	(checkCRC@j+1)& (0+255),f,b
  8057  002392                     
  8058                           ; BSR set to: 0
  8059  002392  5192               	movf	checkCRC@j& (0+255),w,b
  8060  002394  1193               	iorwf	(checkCRC@j+1)& (0+255),w,b
  8061  002396  A4D8               	btfss	status,2,c
  8062  002398  EFD0  F011         	goto	u6891
  8063  00239C  EFD2  F011         	goto	u6890
  8064  0023A0                     u6891:
  8065  0023A0  EFB3  F011         	goto	l724
  8066  0023A4                     u6890:
  8067  0023A4                     
  8068                           ; BSR set to: 0
  8069                           ;Modbus.c: 137:     }
  8070  0023A4  4B96               	infsnz	checkCRC@i& (0+255),f,b
  8071  0023A6  2B97               	incf	(checkCRC@i+1)& (0+255),f,b
  8072  0023A8                     l6689:
  8073                           
  8074                           ; BSR set to: 0
  8075  0023A8  0EFE               	movlw	254
  8076  0023AA  6F89               	movwf	??_checkCRC& (0+255),b
  8077  0023AC  0EFF               	movlw	255
  8078  0023AE  6F8A               	movwf	(??_checkCRC+1)& (0+255),b
  8079  0023B0  C0B6  F08B         	movff	_ModDataCnt,??_checkCRC+2
  8080  0023B4  C0B7  F08C         	movff	_ModDataCnt+1,??_checkCRC+3
  8081  0023B8  5189               	movf	??_checkCRC& (0+255),w,b
  8082  0023BA  278B               	addwf	(??_checkCRC+2)& (0+255),f,b
  8083  0023BC  518A               	movf	(??_checkCRC+1)& (0+255),w,b
  8084  0023BE  238C               	addwfc	(??_checkCRC+3)& (0+255),f,b
  8085  0023C0  518B               	movf	(??_checkCRC+2)& (0+255),w,b
  8086  0023C2  5D96               	subwf	checkCRC@i& (0+255),w,b
  8087  0023C4  5197               	movf	(checkCRC@i+1)& (0+255),w,b
  8088  0023C6  0A80               	xorlw	128
  8089  0023C8  6F8D               	movwf	(??_checkCRC+4)& (0+255),b
  8090  0023CA  518C               	movf	(??_checkCRC+3)& (0+255),w,b
  8091  0023CC  0A80               	xorlw	128
  8092  0023CE  598D               	subwfb	(??_checkCRC+4)& (0+255),w,b
  8093  0023D0  A0D8               	btfss	status,0,c
  8094  0023D2  EFED  F011         	goto	u6901
  8095  0023D6  EFEF  F011         	goto	u6900
  8096  0023DA                     u6901:
  8097  0023DA  EFA5  F011         	goto	l6671
  8098  0023DE                     u6900:
  8099  0023DE                     
  8100                           ; BSR set to: 0
  8101                           ;Modbus.c: 139:   crcHigh = (crc & 0x00FF);
  8102  0023DE  5194               	movf	checkCRC@crc& (0+255),w,b
  8103  0023E0  6F8E               	movwf	checkCRC@crcHigh& (0+255),b
  8104  0023E2  6B8F               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  8105                           
  8106                           ;Modbus.c: 140:   crcLow = (crc & 0xFF00) >>8;
  8107  0023E4  C094  F089         	movff	checkCRC@crc,??_checkCRC
  8108  0023E8  C095  F08A         	movff	checkCRC@crc+1,??_checkCRC+1
  8109  0023EC  C08A  F089         	movff	??_checkCRC+1,??_checkCRC
  8110  0023F0  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8111  0023F2  5189               	movf	??_checkCRC& (0+255),w,b
  8112  0023F4  6F90               	movwf	checkCRC@crcLow& (0+255),b
  8113  0023F6  6B91               	clrf	(checkCRC@crcLow+1)& (0+255),b
  8114  0023F8                     
  8115                           ; BSR set to: 0
  8116                           ;Modbus.c: 142:   if(Debug == 1){
  8117  0023F8  05B8               	decf	_Debug& (0+255),w,b
  8118  0023FA  A4D8               	btfss	status,2,c
  8119  0023FC  EF02  F012         	goto	u6911
  8120  002400  EF04  F012         	goto	u6910
  8121  002404                     u6911:
  8122  002404  EF12  F012         	goto	l6697
  8123  002408                     u6910:
  8124  002408                     
  8125                           ; BSR set to: 0
  8126                           ;Modbus.c: 143:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  8127  002408  0E10               	movlw	low STR_13
  8128  00240A  6F7D               	movwf	printf@fmt& (0+255),b
  8129  00240C  0EFC               	movlw	high STR_13
  8130  00240E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8131  002410  C08E  F07F         	movff	checkCRC@crcHigh,?_printf+2
  8132  002414  C08F  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  8133  002418  C090  F081         	movff	checkCRC@crcLow,?_printf+4
  8134  00241C  C091  F082         	movff	checkCRC@crcLow+1,?_printf+5
  8135  002420  EC2E  F01E         	call	_printf	;wreg free
  8136  002424                     l6697:
  8137                           
  8138                           ;Modbus.c: 147:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  8139  002424  0E00               	movlw	low _ModbusData
  8140  002426  0100               	movlb	0	; () banked
  8141  002428  2596               	addwf	checkCRC@i& (0+255),w,b
  8142  00242A  6ED9               	movwf	fsr2l,c
  8143  00242C  0E02               	movlw	high _ModbusData
  8144  00242E  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8145  002430  6EDA               	movwf	fsr2h,c
  8146  002432  50DF               	movf	indf2,w,c
  8147  002434  6F89               	movwf	??_checkCRC& (0+255),b
  8148  002436  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8149  002438  518E               	movf	checkCRC@crcHigh& (0+255),w,b
  8150  00243A  1989               	xorwf	??_checkCRC& (0+255),w,b
  8151  00243C  E107               	bnz	u6921
  8152  00243E  518F               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  8153  002440  198A               	xorwf	(??_checkCRC+1)& (0+255),w,b
  8154  002442  A4D8               	btfss	status,2,c
  8155  002444  EF26  F012         	goto	u6921
  8156  002448  EF28  F012         	goto	u6920
  8157  00244C                     u6921:
  8158  00244C  EF40  F012         	goto	l6707
  8159  002450                     u6920:
  8160  002450                     
  8161                           ; BSR set to: 0
  8162  002450  0E01               	movlw	low (_ModbusData+1)
  8163  002452  2596               	addwf	checkCRC@i& (0+255),w,b
  8164  002454  6ED9               	movwf	fsr2l,c
  8165  002456  0E02               	movlw	high (_ModbusData+1)
  8166  002458  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8167  00245A  6EDA               	movwf	fsr2h,c
  8168  00245C  50DF               	movf	indf2,w,c
  8169  00245E  6F89               	movwf	??_checkCRC& (0+255),b
  8170  002460  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8171  002462  5190               	movf	checkCRC@crcLow& (0+255),w,b
  8172  002464  1989               	xorwf	??_checkCRC& (0+255),w,b
  8173  002466  E107               	bnz	u6931
  8174  002468  5191               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  8175  00246A  198A               	xorwf	(??_checkCRC+1)& (0+255),w,b
  8176  00246C  A4D8               	btfss	status,2,c
  8177  00246E  EF3B  F012         	goto	u6931
  8178  002472  EF3D  F012         	goto	u6930
  8179  002476                     u6931:
  8180  002476  EF40  F012         	goto	l6707
  8181  00247A                     u6930:
  8182  00247A                     
  8183                           ; BSR set to: 0
  8184                           ;Modbus.c: 148:   {;Modbus.c: 149:     return 1;
  8185  00247A  0E01               	movlw	1
  8186  00247C  EF41  F012         	goto	l731
  8187  002480                     l6707:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;Modbus.c: 152:     return 0;
  8191  002480  0E00               	movlw	0
  8192  002482                     l731:
  8193                           
  8194                           ; BSR set to: 0
  8195  002482  0012               	return		;funcret
  8196  002484                     __end_of_checkCRC:
  8197                           	opt callstack 0
  8198                           
  8199 ;; *************** function _RXMode *****************
  8200 ;; Defined at:
  8201 ;;		line 56 in file "Modbus.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		None
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;Total ram usage:        0 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    4
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_main
  8226 ;;		_ModbusRx
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           	psect	text36
  8231  003E36                     __ptext36:
  8232                           	opt callstack 0
  8233  003E36                     _RXMode:
  8234                           	opt callstack 26
  8235  003E36  9086               	bcf	134,0,c	;volatile
  8236  003E38  9683               	bcf	131,3,c	;volatile
  8237  003E3A  0012               	return		;funcret
  8238  003E3C                     __end_of_RXMode:
  8239                           	opt callstack 0
  8240                           
  8241 ;; *************** function _EUSART1_is_rx_ready *****************
  8242 ;; Defined at:
  8243 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      _Bool 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    4
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_ModbusRx
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text37
  8272  003D4E                     __ptext37:
  8273                           	opt callstack 0
  8274  003D4E                     _EUSART1_is_rx_ready:
  8275                           	opt callstack 25
  8276  003D4E                     
  8277                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
  8278  003D4E  0100               	movlb	0	; () banked
  8279  003D50  51B9               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  8280  003D52  A4D8               	btfss	status,2,c
  8281  003D54  EFAE  F01E         	goto	u4251
  8282  003D58  EFB1  F01E         	goto	u4250
  8283  003D5C                     u4251:
  8284  003D5C  0E01               	movlw	1
  8285  003D5E  EFB2  F01E         	goto	u4260
  8286  003D62                     u4250:
  8287  003D62  0E00               	movlw	0
  8288  003D64                     u4260:
  8289  003D64                     
  8290                           ; BSR set to: 0
  8291  003D64  0012               	return		;funcret
  8292  003D66                     __end_of_EUSART1_is_rx_ready:
  8293                           	opt callstack 0
  8294                           
  8295 ;; *************** function _EUSART1_Read *****************
  8296 ;; Defined at:
  8297 ;;		line 153 in file "mcc_generated_files/eusart1.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  readValue       1    4[COMRAM] unsigned char 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      unsigned char 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8315 ;;Total ram usage:        1 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    4
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_ModbusRx
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text38
  8326  003736                     __ptext38:
  8327                           	opt callstack 0
  8328  003736                     _EUSART1_Read:
  8329                           	opt callstack 25
  8330  003736                     l4875:
  8331                           
  8332                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
  8333  003736  0100               	movlb	0	; () banked
  8334  003738  51B9               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  8335  00373A  B4D8               	btfsc	status,2,c
  8336  00373C  EFA2  F01B         	goto	u4271
  8337  003740  EFA4  F01B         	goto	u4270
  8338  003744                     u4271:
  8339  003744  EF9B  F01B         	goto	l4875
  8340  003748                     u4270:
  8341  003748                     
  8342                           ; BSR set to: 0
  8343                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  8344  003748  0E00               	movlw	low _eusart1RxStatusBuffer
  8345  00374A  25BA               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  8346  00374C  6ED9               	movwf	fsr2l,c
  8347  00374E  6ADA               	clrf	fsr2h,c
  8348  003750  0E03               	movlw	high _eusart1RxStatusBuffer
  8349  003752  22DA               	addwfc	fsr2h,f,c
  8350  003754  50DF               	movf	indf2,w,c
  8351  003756  0101               	movlb	1	; () banked
  8352  003758  6F41               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8353                           
  8354                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
  8355  00375A  0E00               	movlw	low _eusart1RxBuffer
  8356  00375C  0100               	movlb	0	; () banked
  8357  00375E  25BA               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  8358  003760  6ED9               	movwf	fsr2l,c
  8359  003762  6ADA               	clrf	fsr2h,c
  8360  003764  0E04               	movlw	high _eusart1RxBuffer
  8361  003766  22DA               	addwfc	fsr2h,f,c
  8362  003768  50DF               	movf	indf2,w,c
  8363  00376A  6E05               	movwf	EUSART1_Read@readValue^0,c
  8364  00376C                     
  8365                           ; BSR set to: 0
  8366  00376C  2BBA               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  8367  00376E                     
  8368                           ; BSR set to: 0
  8369                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8370  00376E  0E63               	movlw	99
  8371  003770  65BA               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  8372  003772  EFBD  F01B         	goto	u4281
  8373  003776  EFBF  F01B         	goto	u4280
  8374  00377A                     u4281:
  8375  00377A  EFC1  F01B         	goto	l4885
  8376  00377E                     u4280:
  8377  00377E                     
  8378                           ; BSR set to: 0
  8379                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
  8380  00377E  0E00               	movlw	0
  8381  003780  6FBA               	movwf	_eusart1RxTail& (0+255),b	;volatile
  8382  003782                     l4885:
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
  8386  003782  010E               	movlb	14	; () banked
  8387  003784  9BC5               	bcf	197,5,b	;volatile
  8388  003786                     
  8389                           ; BSR set to: 14
  8390                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
  8391  003786  0100               	movlb	0	; () banked
  8392  003788  07B9               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  8393  00378A                     
  8394                           ; BSR set to: 0
  8395                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
  8396  00378A  010E               	movlb	14	; () banked
  8397  00378C  8BC5               	bsf	197,5,b	;volatile
  8398  00378E                     
  8399                           ; BSR set to: 14
  8400                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
  8401  00378E  5005               	movf	EUSART1_Read@readValue^0,w,c
  8402  003790                     
  8403                           ; BSR set to: 14
  8404  003790  0012               	return		;funcret
  8405  003792                     __end_of_EUSART1_Read:
  8406                           	opt callstack 0
  8407                           
  8408 ;; *************** function _ClearRxBuff *****************
  8409 ;; Defined at:
  8410 ;;		line 72 in file "Modbus.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  i               2    5[COMRAM] int 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;Total ram usage:        3 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    4
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_main
  8435 ;;		_ModbusRx
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text39
  8440  0038CC                     __ptext39:
  8441                           	opt callstack 0
  8442  0038CC                     _ClearRxBuff:
  8443                           	opt callstack 25
  8444  0038CC                     
  8445                           ;Modbus.c: 74:     int i = 0;
  8446  0038CC  0E00               	movlw	0
  8447  0038CE  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  8448  0038D0  0E00               	movlw	0
  8449  0038D2  6E06               	movwf	ClearRxBuff@i^0,c
  8450                           
  8451                           ;Modbus.c: 75:     for(i=0; i<ByteNum; i++ ){
  8452  0038D4  0E00               	movlw	0
  8453  0038D6  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  8454  0038D8  0E00               	movlw	0
  8455  0038DA  6E06               	movwf	ClearRxBuff@i^0,c
  8456  0038DC  EF7A  F01C         	goto	l4931
  8457  0038E0                     l4927:
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;Modbus.c: 76:         rxData[i] = 0xFF;
  8461  0038E0  0E00               	movlw	low _rxData
  8462  0038E2  2406               	addwf	ClearRxBuff@i^0,w,c
  8463  0038E4  6ED9               	movwf	fsr2l,c
  8464  0038E6  0E05               	movlw	high _rxData
  8465  0038E8  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  8466  0038EA  6EDA               	movwf	fsr2h,c
  8467  0038EC  0EFF               	movlw	255
  8468  0038EE  6EDF               	movwf	indf2,c
  8469  0038F0                     
  8470                           ; BSR set to: 0
  8471                           ;Modbus.c: 77:     }
  8472  0038F0  4A06               	infsnz	ClearRxBuff@i^0,f,c
  8473  0038F2  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  8474  0038F4                     l4931:
  8475  0038F4  0100               	movlb	0	; () banked
  8476  0038F6  51B4               	movf	_ByteNum& (0+255),w,b
  8477  0038F8  5C06               	subwf	ClearRxBuff@i^0,w,c
  8478  0038FA  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  8479  0038FC  0A80               	xorlw	128
  8480  0038FE  6E05               	movwf	??_ClearRxBuff^0,c
  8481  003900  51B5               	movf	(_ByteNum+1)& (0+255),w,b
  8482  003902  0A80               	xorlw	128
  8483  003904  5805               	subwfb	??_ClearRxBuff^0,w,c
  8484  003906  A0D8               	btfss	status,0,c
  8485  003908  EF88  F01C         	goto	u4321
  8486  00390C  EF8A  F01C         	goto	u4320
  8487  003910                     u4321:
  8488  003910  EF70  F01C         	goto	l4927
  8489  003914                     u4320:
  8490  003914                     
  8491                           ; BSR set to: 0
  8492  003914  0012               	return		;funcret
  8493  003916                     __end_of_ClearRxBuff:
  8494                           	opt callstack 0
  8495                           
  8496 ;; *************** function _AddRxBuffToModBus *****************
  8497 ;; Defined at:
  8498 ;;		line 81 in file "Modbus.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  i               2   41[BANK0 ] int 
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;Total ram usage:        3 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:   13
  8519 ;; This function calls:
  8520 ;;		_printf
  8521 ;; This function is called by:
  8522 ;;		_ModbusRx
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text40
  8527  002A46                     __ptext40:
  8528                           	opt callstack 0
  8529  002A46                     _AddRxBuffToModBus:
  8530                           	opt callstack 16
  8531  002A46                     
  8532                           ;Modbus.c: 82:     int i = 0;
  8533  002A46  0E00               	movlw	0
  8534  002A48  0100               	movlb	0	; () banked
  8535  002A4A  6F8A               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  8536  002A4C  0E00               	movlw	0
  8537  002A4E  6F89               	movwf	AddRxBuffToModBus@i& (0+255),b
  8538                           
  8539                           ;Modbus.c: 84:     for(i=0l; i<ByteNum; i++){
  8540  002A50  0E00               	movlw	0
  8541  002A52  6F8A               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  8542  002A54  0E00               	movlw	0
  8543  002A56  6F89               	movwf	AddRxBuffToModBus@i& (0+255),b
  8544  002A58  EF40  F015         	goto	l6651
  8545  002A5C                     l6645:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;Modbus.c: 85:         ModbusData[ModDataCnt] = rxData[i];
  8549  002A5C  0E00               	movlw	low _rxData
  8550  002A5E  2589               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  8551  002A60  6ED9               	movwf	fsr2l,c
  8552  002A62  0E05               	movlw	high _rxData
  8553  002A64  218A               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  8554  002A66  6EDA               	movwf	fsr2h,c
  8555  002A68  0E00               	movlw	low _ModbusData
  8556  002A6A  25B6               	addwf	_ModDataCnt& (0+255),w,b
  8557  002A6C  6EE1               	movwf	fsr1l,c
  8558  002A6E  0E02               	movlw	high _ModbusData
  8559  002A70  21B7               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  8560  002A72  6EE2               	movwf	fsr1h,c
  8561  002A74  CFDF FFE7          	movff	indf2,indf1
  8562  002A78                     
  8563                           ; BSR set to: 0
  8564                           ;Modbus.c: 86:         ModDataCnt++;
  8565  002A78  4BB6               	infsnz	_ModDataCnt& (0+255),f,b
  8566  002A7A  2BB7               	incf	(_ModDataCnt+1)& (0+255),f,b
  8567  002A7C                     
  8568                           ; BSR set to: 0
  8569                           ;Modbus.c: 87:     }
  8570  002A7C  4B89               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  8571  002A7E  2B8A               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  8572  002A80                     l6651:
  8573                           
  8574                           ; BSR set to: 0
  8575  002A80  51B4               	movf	_ByteNum& (0+255),w,b
  8576  002A82  5D89               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  8577  002A84  518A               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  8578  002A86  0A80               	xorlw	128
  8579  002A88  6E55               	movwf	??_AddRxBuffToModBus^0,c
  8580  002A8A  51B5               	movf	(_ByteNum+1)& (0+255),w,b
  8581  002A8C  0A80               	xorlw	128
  8582  002A8E  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  8583  002A90  A0D8               	btfss	status,0,c
  8584  002A92  EF4D  F015         	goto	u6841
  8585  002A96  EF4F  F015         	goto	u6840
  8586  002A9A                     u6841:
  8587  002A9A  EF2E  F015         	goto	l6645
  8588  002A9E                     u6840:
  8589  002A9E                     
  8590                           ; BSR set to: 0
  8591                           ;Modbus.c: 89:     if(Debug ==1){
  8592  002A9E  05B8               	decf	_Debug& (0+255),w,b
  8593  002AA0  A4D8               	btfss	status,2,c
  8594  002AA2  EF55  F015         	goto	u6851
  8595  002AA6  EF57  F015         	goto	u6850
  8596  002AAA                     u6851:
  8597  002AAA  EF68  F015         	goto	l6657
  8598  002AAE                     u6850:
  8599  002AAE                     
  8600                           ; BSR set to: 0
  8601                           ;Modbus.c: 90:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
  8602  002AAE  0EB2               	movlw	low STR_8
  8603  002AB0  6F7D               	movwf	printf@fmt& (0+255),b
  8604  002AB2  0EF9               	movlw	high STR_8
  8605  002AB4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8606  002AB6  EC2E  F01E         	call	_printf	;wreg free
  8607                           
  8608                           ;Modbus.c: 91:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  8609  002ABA  0E54               	movlw	low STR_9
  8610  002ABC  0100               	movlb	0	; () banked
  8611  002ABE  6F7D               	movwf	printf@fmt& (0+255),b
  8612  002AC0  0EFD               	movlw	high STR_9
  8613  002AC2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8614  002AC4  C0B6  F07F         	movff	_ModDataCnt,?_printf+2
  8615  002AC8  C0B7  F080         	movff	_ModDataCnt+1,?_printf+3
  8616  002ACC  EC2E  F01E         	call	_printf	;wreg free
  8617  002AD0                     l6657:
  8618                           
  8619                           ;Modbus.c: 94:     if(ModbusData[1] == 0x0F){
  8620  002AD0  0E0F               	movlw	15
  8621  002AD2  0102               	movlb	2	; () banked
  8622  002AD4  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  8623  002AD6  A4D8               	btfss	status,2,c
  8624  002AD8  EF70  F015         	goto	u6861
  8625  002ADC  EF72  F015         	goto	u6860
  8626  002AE0                     u6861:
  8627  002AE0  EF7B  F015         	goto	l6661
  8628  002AE4                     u6860:
  8629  002AE4                     l6659:
  8630                           
  8631                           ; BSR set to: 2
  8632                           ;Modbus.c: 95:         ExpectedBytes = ModbusData[6] + 9;
  8633  002AE4  0E09               	movlw	9
  8634  002AE6  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  8635  002AE8  0101               	movlb	1	; () banked
  8636  002AEA  6FDA               	movwf	_ExpectedBytes& (0+255),b
  8637  002AEC  6BDB               	clrf	(_ExpectedBytes+1)& (0+255),b
  8638  002AEE  0E00               	movlw	0
  8639  002AF0  23DB               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  8640                           
  8641                           ;Modbus.c: 96:     }else if (ModbusData[1] == 0x10){
  8642  002AF2  EF8B  F015         	goto	l713
  8643  002AF6                     l6661:
  8644                           
  8645                           ; BSR set to: 2
  8646  002AF6  0E10               	movlw	16
  8647  002AF8  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  8648  002AFA  A4D8               	btfss	status,2,c
  8649  002AFC  EF82  F015         	goto	u6871
  8650  002B00  EF84  F015         	goto	u6870
  8651  002B04                     u6871:
  8652  002B04  EF86  F015         	goto	l6665
  8653  002B08                     u6870:
  8654  002B08  EF72  F015         	goto	l6659
  8655  002B0C                     l6665:
  8656                           
  8657                           ; BSR set to: 2
  8658                           ;Modbus.c: 99:         ExpectedBytes = 8;
  8659  002B0C  0E00               	movlw	0
  8660  002B0E  0101               	movlb	1	; () banked
  8661  002B10  6FDB               	movwf	(_ExpectedBytes+1)& (0+255),b
  8662  002B12  0E08               	movlw	8
  8663  002B14  6FDA               	movwf	_ExpectedBytes& (0+255),b
  8664  002B16                     l713:
  8665                           
  8666                           ; BSR set to: 1
  8667  002B16  0012               	return		;funcret
  8668  002B18                     __end_of_AddRxBuffToModBus:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _ModbusFC10 *****************
  8672 ;; Defined at:
  8673 ;;		line 283 in file "Modbus.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  j               2   51[BANK0 ] int 
  8678 ;;  i               2   49[BANK0 ] int 
  8679 ;;  TempData        2   47[BANK0 ] unsigned int 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;Total ram usage:       10 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:   14
  8696 ;; This function calls:
  8697 ;;		_PrintMB400
  8698 ;;		_PrintModRespon
  8699 ;;		_UART1_Write_string
  8700 ;;		_generateCRC
  8701 ;; This function is called by:
  8702 ;;		_main
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text41
  8707  001828                     __ptext41:
  8708                           	opt callstack 0
  8709  001828                     _ModbusFC10:
  8710                           	opt callstack 16
  8711  001828                     
  8712                           ;Modbus.c: 288:     int j = 0;
  8713  001828  0E00               	movlw	0
  8714  00182A  0100               	movlb	0	; () banked
  8715  00182C  6F94               	movwf	(ModbusFC10@j+1)& (0+255),b
  8716  00182E  0E00               	movlw	0
  8717  001830  6F93               	movwf	ModbusFC10@j& (0+255),b
  8718                           
  8719                           ;Modbus.c: 289:     unsigned int TempData = 0x0000;
  8720  001832  0E00               	movlw	0
  8721  001834  6F90               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  8722  001836  0E00               	movlw	0
  8723  001838  6F8F               	movwf	ModbusFC10@TempData& (0+255),b
  8724                           
  8725                           ;Modbus.c: 291:     MBResCnt = 0;
  8726  00183A  0E00               	movlw	0
  8727  00183C  6FB3               	movwf	(_MBResCnt+1)& (0+255),b
  8728  00183E  0E00               	movlw	0
  8729  001840  6FB2               	movwf	_MBResCnt& (0+255),b
  8730  001842                     
  8731                           ; BSR set to: 0
  8732                           ;Modbus.c: 292:     MBRespon[MBResCnt] = ModbusData[0];
  8733  001842  0EAB               	movlw	low _MBRespon
  8734  001844  25B2               	addwf	_MBResCnt& (0+255),w,b
  8735  001846  6ED9               	movwf	fsr2l,c
  8736  001848  0E02               	movlw	high _MBRespon
  8737  00184A  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8738  00184C  6EDA               	movwf	fsr2h,c
  8739  00184E  C200  FFDF         	movff	_ModbusData,indf2
  8740  001852                     
  8741                           ; BSR set to: 0
  8742                           ;Modbus.c: 293:     MBResCnt++;
  8743  001852  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  8744  001854  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  8745  001856                     
  8746                           ; BSR set to: 0
  8747                           ;Modbus.c: 294:     MBRespon[MBResCnt] = ModbusData[1];
  8748  001856  0EAB               	movlw	low _MBRespon
  8749  001858  25B2               	addwf	_MBResCnt& (0+255),w,b
  8750  00185A  6ED9               	movwf	fsr2l,c
  8751  00185C  0E02               	movlw	high _MBRespon
  8752  00185E  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8753  001860  6EDA               	movwf	fsr2h,c
  8754  001862  C201  FFDF         	movff	_ModbusData+1,indf2
  8755  001866                     
  8756                           ; BSR set to: 0
  8757                           ;Modbus.c: 295:     MBResCnt++;
  8758  001866  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  8759  001868  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  8760  00186A                     
  8761                           ; BSR set to: 0
  8762                           ;Modbus.c: 296:     MBRespon[MBResCnt] = ModbusData[2];
  8763  00186A  0EAB               	movlw	low _MBRespon
  8764  00186C  25B2               	addwf	_MBResCnt& (0+255),w,b
  8765  00186E  6ED9               	movwf	fsr2l,c
  8766  001870  0E02               	movlw	high _MBRespon
  8767  001872  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8768  001874  6EDA               	movwf	fsr2h,c
  8769  001876  C202  FFDF         	movff	_ModbusData+2,indf2
  8770  00187A                     
  8771                           ; BSR set to: 0
  8772                           ;Modbus.c: 297:     MBResCnt++;
  8773  00187A  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  8774  00187C  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  8775  00187E                     
  8776                           ; BSR set to: 0
  8777                           ;Modbus.c: 298:     MBRespon[MBResCnt] = ModbusData[3];
  8778  00187E  0EAB               	movlw	low _MBRespon
  8779  001880  25B2               	addwf	_MBResCnt& (0+255),w,b
  8780  001882  6ED9               	movwf	fsr2l,c
  8781  001884  0E02               	movlw	high _MBRespon
  8782  001886  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8783  001888  6EDA               	movwf	fsr2h,c
  8784  00188A  C203  FFDF         	movff	_ModbusData+3,indf2
  8785  00188E                     
  8786                           ; BSR set to: 0
  8787                           ;Modbus.c: 299:     MBResCnt++;
  8788  00188E  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  8789  001890  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  8790  001892                     
  8791                           ; BSR set to: 0
  8792                           ;Modbus.c: 300:     MBRespon[MBResCnt] = ModbusData[4];
  8793  001892  0EAB               	movlw	low _MBRespon
  8794  001894  25B2               	addwf	_MBResCnt& (0+255),w,b
  8795  001896  6ED9               	movwf	fsr2l,c
  8796  001898  0E02               	movlw	high _MBRespon
  8797  00189A  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8798  00189C  6EDA               	movwf	fsr2h,c
  8799  00189E  C204  FFDF         	movff	_ModbusData+4,indf2
  8800  0018A2                     
  8801                           ; BSR set to: 0
  8802                           ;Modbus.c: 301:     MBResCnt++;
  8803  0018A2  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  8804  0018A4  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  8805  0018A6                     
  8806                           ; BSR set to: 0
  8807                           ;Modbus.c: 302:     MBRespon[MBResCnt] = ModbusData[5];
  8808  0018A6  0EAB               	movlw	low _MBRespon
  8809  0018A8  25B2               	addwf	_MBResCnt& (0+255),w,b
  8810  0018AA  6ED9               	movwf	fsr2l,c
  8811  0018AC  0E02               	movlw	high _MBRespon
  8812  0018AE  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8813  0018B0  6EDA               	movwf	fsr2h,c
  8814  0018B2  C205  FFDF         	movff	_ModbusData+5,indf2
  8815  0018B6                     
  8816                           ; BSR set to: 0
  8817                           ;Modbus.c: 303:     MBResCnt++;
  8818  0018B6  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  8819  0018B8  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  8820                           
  8821                           ;Modbus.c: 305:     for(i=0; i< (ModbusData[5]) ; i++ ){
  8822  0018BA  0E00               	movlw	0
  8823  0018BC  6F92               	movwf	(ModbusFC10@i+1)& (0+255),b
  8824  0018BE  0E00               	movlw	0
  8825  0018C0  6F91               	movwf	ModbusFC10@i& (0+255),b
  8826  0018C2  EF99  F00C         	goto	l6977
  8827  0018C6                     l6969:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;Modbus.c: 312:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  8831  0018C6  0E08               	movlw	low (_ModbusData+8)
  8832  0018C8  2593               	addwf	ModbusFC10@j& (0+255),w,b
  8833  0018CA  6ED9               	movwf	fsr2l,c
  8834  0018CC  0E02               	movlw	high (_ModbusData+8)
  8835  0018CE  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8836  0018D0  6EDA               	movwf	fsr2h,c
  8837  0018D2  50DF               	movf	indf2,w,c
  8838  0018D4  6F8B               	movwf	??_ModbusFC10& (0+255),b
  8839  0018D6  0E07               	movlw	low (_ModbusData+7)
  8840  0018D8  2593               	addwf	ModbusFC10@j& (0+255),w,b
  8841  0018DA  6ED9               	movwf	fsr2l,c
  8842  0018DC  0E02               	movlw	high (_ModbusData+7)
  8843  0018DE  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8844  0018E0  6EDA               	movwf	fsr2h,c
  8845  0018E2  50DF               	movf	indf2,w,c
  8846  0018E4  6F8C               	movwf	(??_ModbusFC10+1)& (0+255),b
  8847  0018E6  518C               	movf	(??_ModbusFC10+1)& (0+255),w,b
  8848  0018E8  6F8E               	movwf	(??_ModbusFC10+3)& (0+255),b
  8849  0018EA  6B8D               	clrf	(??_ModbusFC10+2)& (0+255),b
  8850  0018EC  518B               	movf	??_ModbusFC10& (0+255),w,b
  8851  0018EE  258D               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  8852  0018F0  6F8F               	movwf	ModbusFC10@TempData& (0+255),b
  8853  0018F2  0E00               	movlw	0
  8854  0018F4  218E               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  8855  0018F6  6F90               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  8856  0018F8                     
  8857                           ; BSR set to: 0
  8858                           ;Modbus.c: 313:         j = j+2;
  8859  0018F8  0E02               	movlw	2
  8860  0018FA  2593               	addwf	ModbusFC10@j& (0+255),w,b
  8861  0018FC  6F93               	movwf	ModbusFC10@j& (0+255),b
  8862  0018FE  0E00               	movlw	0
  8863  001900  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8864  001902  6F94               	movwf	(ModbusFC10@j+1)& (0+255),b
  8865  001904                     
  8866                           ; BSR set to: 0
  8867                           ;Modbus.c: 314:         MB400xx[ModbusData[3] +i] = TempData;
  8868  001904  0102               	movlb	2	; () banked
  8869  001906  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8870  001908  0100               	movlb	0	; () banked
  8871  00190A  2591               	addwf	ModbusFC10@i& (0+255),w,b
  8872  00190C  6F8B               	movwf	??_ModbusFC10& (0+255),b
  8873  00190E  0E00               	movlw	0
  8874  001910  2192               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  8875  001912  6F8C               	movwf	(??_ModbusFC10+1)& (0+255),b
  8876  001914  90D8               	bcf	status,0,c
  8877  001916  378B               	rlcf	??_ModbusFC10& (0+255),f,b
  8878  001918  378C               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  8879  00191A  0E64               	movlw	low _MB400xx
  8880  00191C  258B               	addwf	??_ModbusFC10& (0+255),w,b
  8881  00191E  6ED9               	movwf	fsr2l,c
  8882  001920  0E04               	movlw	high _MB400xx
  8883  001922  218C               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  8884  001924  6EDA               	movwf	fsr2h,c
  8885  001926  C08F  FFDE         	movff	ModbusFC10@TempData,postinc2
  8886  00192A  C090  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  8887  00192E                     
  8888                           ; BSR set to: 0
  8889                           ;Modbus.c: 315:     }
  8890  00192E  4B91               	infsnz	ModbusFC10@i& (0+255),f,b
  8891  001930  2B92               	incf	(ModbusFC10@i+1)& (0+255),f,b
  8892  001932                     l6977:
  8893                           
  8894                           ; BSR set to: 0
  8895  001932  0102               	movlb	2	; () banked
  8896  001934  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8897  001936  0100               	movlb	0	; () banked
  8898  001938  6F8B               	movwf	??_ModbusFC10& (0+255),b
  8899  00193A  6B8C               	clrf	(??_ModbusFC10+1)& (0+255),b
  8900  00193C  518B               	movf	??_ModbusFC10& (0+255),w,b
  8901  00193E  5D91               	subwf	ModbusFC10@i& (0+255),w,b
  8902  001940  5192               	movf	(ModbusFC10@i+1)& (0+255),w,b
  8903  001942  0A80               	xorlw	128
  8904  001944  6F8D               	movwf	(??_ModbusFC10+2)& (0+255),b
  8905  001946  518C               	movf	(??_ModbusFC10+1)& (0+255),w,b
  8906  001948  0A80               	xorlw	128
  8907  00194A  598D               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  8908  00194C  A0D8               	btfss	status,0,c
  8909  00194E  EFAB  F00C         	goto	u7241
  8910  001952  EFAD  F00C         	goto	u7240
  8911  001956                     u7241:
  8912  001956  EF63  F00C         	goto	l6969
  8913  00195A                     u7240:
  8914  00195A                     
  8915                           ; BSR set to: 0
  8916                           ;Modbus.c: 317:     ByteHi = generateCRC(MBResCnt, 1);
  8917  00195A  C0B2  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8918  00195E  C0B3  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8919  001962  0E01               	movlw	1
  8920  001964  6E07               	movwf	generateCRC@HiOrLo^0,c
  8921  001966  EC48  F014         	call	_generateCRC	;wreg free
  8922  00196A  C005  F0B0         	movff	?_generateCRC,_ByteHi
  8923  00196E  C006  F0B1         	movff	?_generateCRC+1,_ByteHi+1
  8924                           
  8925                           ;Modbus.c: 318:     ByteLo = generateCRC(MBResCnt, 0);
  8926  001972  C0B2  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8927  001976  C0B3  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8928  00197A  0E00               	movlw	0
  8929  00197C  6E07               	movwf	generateCRC@HiOrLo^0,c
  8930  00197E  EC48  F014         	call	_generateCRC	;wreg free
  8931  001982  C005  F1D6         	movff	?_generateCRC,_ByteLo
  8932  001986  C006  F1D7         	movff	?_generateCRC+1,_ByteLo+1
  8933  00198A                     
  8934                           ;Modbus.c: 320:     MBRespon[MBResCnt] = ByteHi;
  8935  00198A  0EAB               	movlw	low _MBRespon
  8936  00198C  0100               	movlb	0	; () banked
  8937  00198E  25B2               	addwf	_MBResCnt& (0+255),w,b
  8938  001990  6ED9               	movwf	fsr2l,c
  8939  001992  0E02               	movlw	high _MBRespon
  8940  001994  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8941  001996  6EDA               	movwf	fsr2h,c
  8942  001998  C0B0  FFDF         	movff	_ByteHi,indf2
  8943  00199C                     
  8944                           ; BSR set to: 0
  8945                           ;Modbus.c: 321:     MBRespon[MBResCnt +1] = ByteLo;
  8946  00199C  0EAC               	movlw	low (_MBRespon+1)
  8947  00199E  25B2               	addwf	_MBResCnt& (0+255),w,b
  8948  0019A0  6ED9               	movwf	fsr2l,c
  8949  0019A2  0E02               	movlw	high (_MBRespon+1)
  8950  0019A4  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8951  0019A6  6EDA               	movwf	fsr2h,c
  8952  0019A8  C1D6  FFDF         	movff	_ByteLo,indf2
  8953  0019AC                     
  8954                           ; BSR set to: 0
  8955                           ;Modbus.c: 322:     MBResCnt = MBResCnt +2;
  8956  0019AC  0E02               	movlw	2
  8957  0019AE  25B2               	addwf	_MBResCnt& (0+255),w,b
  8958  0019B0  6FB2               	movwf	_MBResCnt& (0+255),b
  8959  0019B2  0E00               	movlw	0
  8960  0019B4  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8961  0019B6  6FB3               	movwf	(_MBResCnt+1)& (0+255),b
  8962  0019B8                     
  8963                           ; BSR set to: 0
  8964                           ;Modbus.c: 324:     if(Debug==1){
  8965  0019B8  05B8               	decf	_Debug& (0+255),w,b
  8966  0019BA  A4D8               	btfss	status,2,c
  8967  0019BC  EFE2  F00C         	goto	u7251
  8968  0019C0  EFE4  F00C         	goto	u7250
  8969  0019C4                     u7251:
  8970  0019C4  EFE8  F00C         	goto	l6991
  8971  0019C8                     u7250:
  8972  0019C8                     
  8973                           ; BSR set to: 0
  8974                           ;Modbus.c: 325:         PrintMB400();
  8975  0019C8  ECEB  F019         	call	_PrintMB400	;wreg free
  8976                           
  8977                           ;Modbus.c: 326:         PrintModRespon();
  8978  0019CC  ECD6  F017         	call	_PrintModRespon	;wreg free
  8979  0019D0                     l6991:
  8980                           
  8981                           ;Modbus.c: 329:     UART1_Write_string(MBRespon,MBResCnt);
  8982  0019D0  0EAB               	movlw	low _MBRespon
  8983  0019D2  6E06               	movwf	UART1_Write_string@data^0,c
  8984  0019D4  0E02               	movlw	high _MBRespon
  8985  0019D6  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8986  0019D8  C0B2  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8987  0019DC  C0B3  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8988  0019E0  EC7E  F019         	call	_UART1_Write_string	;wreg free
  8989  0019E4  0012               	return		;funcret
  8990  0019E6                     __end_of_ModbusFC10:
  8991                           	opt callstack 0
  8992                           
  8993 ;; *************** function _PrintMB400 *****************
  8994 ;; Defined at:
  8995 ;;		line 37 in file "Modbus.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  i               2   84[COMRAM] int 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;Total ram usage:        2 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:   13
  9016 ;; This function calls:
  9017 ;;		_printf
  9018 ;; This function is called by:
  9019 ;;		_main
  9020 ;;		_ModbusFC10
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text42
  9025  0033D6                     __ptext42:
  9026                           	opt callstack 0
  9027  0033D6                     _PrintMB400:
  9028                           	opt callstack 17
  9029  0033D6                     
  9030                           ;Modbus.c: 39:     printf("UpdatedMB400 \r\n");
  9031  0033D6  0E79               	movlw	low STR_6
  9032  0033D8  0100               	movlb	0	; () banked
  9033  0033DA  6F7D               	movwf	printf@fmt& (0+255),b
  9034  0033DC  0EFF               	movlw	high STR_6
  9035  0033DE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9036  0033E0  EC2E  F01E         	call	_printf	;wreg free
  9037  0033E4                     
  9038                           ;Modbus.c: 42:     for(i=0; i<32; i++ ){
  9039  0033E4  0E00               	movlw	0
  9040  0033E6  6E56               	movwf	(PrintMB400@i+1)^0,c
  9041  0033E8  0E00               	movlw	0
  9042  0033EA  6E55               	movwf	PrintMB400@i^0,c
  9043  0033EC                     l6619:
  9044                           
  9045                           ;Modbus.c: 43:         printf("   Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  9046  0033EC  0EA8               	movlw	low STR_7
  9047  0033EE  0100               	movlb	0	; () banked
  9048  0033F0  6F7D               	movwf	printf@fmt& (0+255),b
  9049  0033F2  0EFD               	movlw	high STR_7
  9050  0033F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9051  0033F6  C055  F07F         	movff	PrintMB400@i,?_printf+2
  9052  0033FA  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  9053  0033FE  90D8               	bcf	status,0,c
  9054  003400  3455               	rlcf	PrintMB400@i^0,w,c
  9055  003402  6ED9               	movwf	fsr2l,c
  9056  003404  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  9057  003406  6EDA               	movwf	fsr2h,c
  9058  003408  0E64               	movlw	low _MB400xx
  9059  00340A  26D9               	addwf	fsr2l,f,c
  9060  00340C  0E04               	movlw	high _MB400xx
  9061  00340E  22DA               	addwfc	fsr2h,f,c
  9062  003410  CFDE F081          	movff	postinc2,?_printf+4
  9063  003414  CFDD F082          	movff	postdec2,?_printf+5
  9064  003418  EC2E  F01E         	call	_printf	;wreg free
  9065  00341C                     
  9066                           ;Modbus.c: 44:     }
  9067  00341C  4A55               	infsnz	PrintMB400@i^0,f,c
  9068  00341E  2A56               	incf	(PrintMB400@i+1)^0,f,c
  9069  003420  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  9070  003422  EF1C  F01A         	goto	u6801
  9071  003426  5056               	movf	(PrintMB400@i+1)^0,w,c
  9072  003428  E109               	bnz	u6800
  9073  00342A  0E20               	movlw	32
  9074  00342C  5C55               	subwf	PrintMB400@i^0,w,c
  9075  00342E  A0D8               	btfss	status,0,c
  9076  003430  EF1C  F01A         	goto	u6801
  9077  003434  EF1E  F01A         	goto	u6800
  9078  003438                     u6801:
  9079  003438  EFF6  F019         	goto	l6619
  9080  00343C                     u6800:
  9081  00343C  0012               	return		;funcret
  9082  00343E                     __end_of_PrintMB400:
  9083                           	opt callstack 0
  9084                           
  9085 ;; *************** function _ModbusFC03 *****************
  9086 ;; Defined at:
  9087 ;;		line 157 in file "Modbus.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;		None
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  i               2   84[COMRAM] int 
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1    wreg      void 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;Total ram usage:        6 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:   13
  9108 ;; This function calls:
  9109 ;;		_UART1_Write_string
  9110 ;;		_generateCRC
  9111 ;;		_printf
  9112 ;; This function is called by:
  9113 ;;		_main
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	text43
  9118  0006B4                     __ptext43:
  9119                           	opt callstack 0
  9120  0006B4                     _ModbusFC03:
  9121                           	opt callstack 17
  9122  0006B4                     
  9123                           ;Modbus.c: 162:     MBResCnt = 0;
  9124  0006B4  0E00               	movlw	0
  9125  0006B6  0100               	movlb	0	; () banked
  9126  0006B8  6FB3               	movwf	(_MBResCnt+1)& (0+255),b
  9127  0006BA  0E00               	movlw	0
  9128  0006BC  6FB2               	movwf	_MBResCnt& (0+255),b
  9129  0006BE                     
  9130                           ; BSR set to: 0
  9131                           ;Modbus.c: 163:     MBRespon[MBResCnt] = ModbusData[0];
  9132  0006BE  0EAB               	movlw	low _MBRespon
  9133  0006C0  25B2               	addwf	_MBResCnt& (0+255),w,b
  9134  0006C2  6ED9               	movwf	fsr2l,c
  9135  0006C4  0E02               	movlw	high _MBRespon
  9136  0006C6  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9137  0006C8  6EDA               	movwf	fsr2h,c
  9138  0006CA  C200  FFDF         	movff	_ModbusData,indf2
  9139  0006CE                     
  9140                           ; BSR set to: 0
  9141                           ;Modbus.c: 164:     MBResCnt++;
  9142  0006CE  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9143  0006D0  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9144  0006D2                     
  9145                           ; BSR set to: 0
  9146                           ;Modbus.c: 165:     MBRespon[MBResCnt] = ModbusData[1];
  9147  0006D2  0EAB               	movlw	low _MBRespon
  9148  0006D4  25B2               	addwf	_MBResCnt& (0+255),w,b
  9149  0006D6  6ED9               	movwf	fsr2l,c
  9150  0006D8  0E02               	movlw	high _MBRespon
  9151  0006DA  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9152  0006DC  6EDA               	movwf	fsr2h,c
  9153  0006DE  C201  FFDF         	movff	_ModbusData+1,indf2
  9154  0006E2                     
  9155                           ; BSR set to: 0
  9156                           ;Modbus.c: 166:     MBResCnt++;
  9157  0006E2  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9158  0006E4  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9159  0006E6                     
  9160                           ; BSR set to: 0
  9161                           ;Modbus.c: 167:     MBRespon[MBResCnt] = ModbusData[5] *2;
  9162  0006E6  0102               	movlb	2	; () banked
  9163  0006E8  5105               	movf	(_ModbusData+5)& (0+255),w,b
  9164  0006EA  0D02               	mullw	2
  9165  0006EC  0EAB               	movlw	low _MBRespon
  9166  0006EE  0100               	movlb	0	; () banked
  9167  0006F0  25B2               	addwf	_MBResCnt& (0+255),w,b
  9168  0006F2  6ED9               	movwf	fsr2l,c
  9169  0006F4  0E02               	movlw	high _MBRespon
  9170  0006F6  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9171  0006F8  6EDA               	movwf	fsr2h,c
  9172  0006FA  CFF3 FFDF          	movff	prodl,indf2
  9173  0006FE                     
  9174                           ; BSR set to: 0
  9175                           ;Modbus.c: 168:     MBResCnt++;
  9176  0006FE  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9177  000700  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9178                           
  9179                           ;Modbus.c: 172:     switch(ModbusData[2]){
  9180  000702  EFC3  F003         	goto	l6903
  9181  000706                     l6885:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;Modbus.c: 175:         {;Modbus.c: 176:             printf("Requested Circuit Data\r\n\
      +                          n");
  9185  000706  0EC3               	movlw	low STR_14
  9186  000708  6F7D               	movwf	printf@fmt& (0+255),b
  9187  00070A  0EFD               	movlw	high STR_14
  9188  00070C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9189  00070E  EC2E  F01E         	call	_printf	;wreg free
  9190                           
  9191                           ;Modbus.c: 177:             break;
  9192  000712  EFF2  F003         	goto	l6905
  9193  000716                     l6887:
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;Modbus.c: 180:         {;Modbus.c: 181:             printf("Requested Part No.\r\n\n");
  9197  000716  0EB7               	movlw	low STR_15
  9198  000718  6F7D               	movwf	printf@fmt& (0+255),b
  9199  00071A  0EFE               	movlw	high STR_15
  9200  00071C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9201  00071E  EC2E  F01E         	call	_printf	;wreg free
  9202                           
  9203                           ;Modbus.c: 182:             break;
  9204  000722  EFF2  F003         	goto	l6905
  9205  000726                     l6889:
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;Modbus.c: 185:         {;Modbus.c: 186:             printf("Requested Revision\r\n\n");
  9209  000726  0ECD               	movlw	low STR_16
  9210  000728  6F7D               	movwf	printf@fmt& (0+255),b
  9211  00072A  0EFE               	movlw	high STR_16
  9212  00072C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9213  00072E  EC2E  F01E         	call	_printf	;wreg free
  9214                           
  9215                           ;Modbus.c: 187:             break;
  9216  000732  EFF2  F003         	goto	l6905
  9217  000736                     l6891:
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;Modbus.c: 190:         {;Modbus.c: 191:             printf("Requested Serial No.\r\n\n"
      +                          );
  9221  000736  0E44               	movlw	low STR_17
  9222  000738  6F7D               	movwf	printf@fmt& (0+255),b
  9223  00073A  0EFE               	movlw	high STR_17
  9224  00073C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9225  00073E  EC2E  F01E         	call	_printf	;wreg free
  9226                           
  9227                           ;Modbus.c: 192:             break;
  9228  000742  EFF2  F003         	goto	l6905
  9229  000746                     l6893:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;Modbus.c: 195:         {;Modbus.c: 196:             printf("Requested Compile Date\r\n\
      +                          n");
  9233  000746  0EF7               	movlw	low STR_18
  9234  000748  6F7D               	movwf	printf@fmt& (0+255),b
  9235  00074A  0EFD               	movlw	high STR_18
  9236  00074C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9237  00074E  EC2E  F01E         	call	_printf	;wreg free
  9238                           
  9239                           ;Modbus.c: 197:             break;
  9240  000752  EFF2  F003         	goto	l6905
  9241  000756                     l6895:
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;Modbus.c: 200:         {;Modbus.c: 201:             printf("Requested Compile Time\r\n\
      +                          n");
  9245  000756  0EDD               	movlw	low STR_19
  9246  000758  6F7D               	movwf	printf@fmt& (0+255),b
  9247  00075A  0EFD               	movlw	high STR_19
  9248  00075C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9249  00075E  EC2E  F01E         	call	_printf	;wreg free
  9250                           
  9251                           ;Modbus.c: 202:             break;
  9252  000762  EFF2  F003         	goto	l6905
  9253  000766                     l6897:
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;Modbus.c: 205:         {;Modbus.c: 206:             printf("Requested Compiler Ver\r\n\
      +                          n");
  9257  000766  0E11               	movlw	low STR_20
  9258  000768  6F7D               	movwf	printf@fmt& (0+255),b
  9259  00076A  0EFE               	movlw	high STR_20
  9260  00076C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9261  00076E  EC2E  F01E         	call	_printf	;wreg free
  9262                           
  9263                           ;Modbus.c: 207:             break;
  9264  000772  EFF2  F003         	goto	l6905
  9265  000776                     l6899:
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;Modbus.c: 210:         {;Modbus.c: 211:             printf("Requested Analogue Inputs\r
      +                          \n\n");
  9269  000776  0E37               	movlw	low STR_21
  9270  000778  6F7D               	movwf	printf@fmt& (0+255),b
  9271  00077A  0EFD               	movlw	high STR_21
  9272  00077C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9273  00077E  EC2E  F01E         	call	_printf	;wreg free
  9274                           
  9275                           ;Modbus.c: 212:             break;
  9276  000782  EFF2  F003         	goto	l6905
  9277  000786                     l6903:
  9278                           
  9279                           ; BSR set to: 0
  9280  000786  0102               	movlb	2	; () banked
  9281  000788  5102               	movf	(_ModbusData+2)& (0+255),w,b
  9282  00078A  0100               	movlb	0	; () banked
  9283  00078C  6F89               	movwf	??_ModbusFC03& (0+255),b
  9284  00078E  6B8A               	clrf	(??_ModbusFC03+1)& (0+255),b
  9285                           
  9286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9287                           ; Switch size 1, requested type "simple"
  9288                           ; Number of cases is 1, Range of values is 0 to 0
  9289                           ; switch strategies available:
  9290                           ; Name         Instructions Cycles
  9291                           ; simple_byte            4     3 (average)
  9292                           ;	Chosen strategy is simple_byte
  9293  000790  518A               	movf	(??_ModbusFC03+1)& (0+255),w,b
  9294  000792  0A00               	xorlw	0	; case 0
  9295  000794  B4D8               	btfsc	status,2,c
  9296  000796  EFCF  F003         	goto	l7287
  9297  00079A  EFF2  F003         	goto	l6905
  9298  00079E                     l7287:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ; Switch size 1, requested type "simple"
  9302                           ; Number of cases is 8, Range of values is 0 to 7
  9303                           ; switch strategies available:
  9304                           ; Name         Instructions Cycles
  9305                           ; simple_byte           25    13 (average)
  9306                           ;	Chosen strategy is simple_byte
  9307  00079E  5189               	movf	??_ModbusFC03& (0+255),w,b
  9308  0007A0  0A00               	xorlw	0	; case 0
  9309  0007A2  B4D8               	btfsc	status,2,c
  9310  0007A4  EF83  F003         	goto	l6885
  9311  0007A8  0A01               	xorlw	1	; case 1
  9312  0007AA  B4D8               	btfsc	status,2,c
  9313  0007AC  EF8B  F003         	goto	l6887
  9314  0007B0  0A03               	xorlw	3	; case 2
  9315  0007B2  B4D8               	btfsc	status,2,c
  9316  0007B4  EF93  F003         	goto	l6889
  9317  0007B8  0A01               	xorlw	1	; case 3
  9318  0007BA  B4D8               	btfsc	status,2,c
  9319  0007BC  EF9B  F003         	goto	l6891
  9320  0007C0  0A07               	xorlw	7	; case 4
  9321  0007C2  B4D8               	btfsc	status,2,c
  9322  0007C4  EFA3  F003         	goto	l6893
  9323  0007C8  0A01               	xorlw	1	; case 5
  9324  0007CA  B4D8               	btfsc	status,2,c
  9325  0007CC  EFAB  F003         	goto	l6895
  9326  0007D0  0A03               	xorlw	3	; case 6
  9327  0007D2  B4D8               	btfsc	status,2,c
  9328  0007D4  EFB3  F003         	goto	l6897
  9329  0007D8  0A01               	xorlw	1	; case 7
  9330  0007DA  B4D8               	btfsc	status,2,c
  9331  0007DC  EFBB  F003         	goto	l6899
  9332  0007E0  EFF2  F003         	goto	l6905
  9333  0007E4                     l6905:
  9334                           
  9335                           ;Modbus.c: 217:     for(i=0; i< (ModbusData[5]) ; i++ ){
  9336  0007E4  0E00               	movlw	0
  9337  0007E6  6E56               	movwf	(ModbusFC03@i+1)^0,c
  9338  0007E8  0E00               	movlw	0
  9339  0007EA  6E55               	movwf	ModbusFC03@i^0,c
  9340  0007EC  EFF8  F004         	goto	l6927
  9341  0007F0                     l6907:
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;Modbus.c: 222:         if(ModbusData[2] == 0x03){
  9345  0007F0  0E03               	movlw	3
  9346  0007F2  0102               	movlb	2	; () banked
  9347  0007F4  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9348  0007F6  A4D8               	btfss	status,2,c
  9349  0007F8  EF00  F004         	goto	u7191
  9350  0007FC  EF02  F004         	goto	u7190
  9351  000800                     u7191:
  9352  000800  EF34  F004         	goto	l6911
  9353  000804                     u7190:
  9354  000804                     
  9355                           ; BSR set to: 2
  9356                           ;Modbus.c: 229:             ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
  9357  000804  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9358  000806  2455               	addwf	ModbusFC03@i^0,w,c
  9359  000808  0100               	movlb	0	; () banked
  9360  00080A  6F89               	movwf	??_ModbusFC03& (0+255),b
  9361  00080C  0E00               	movlw	0
  9362  00080E  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9363  000810  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9364  000812  90D8               	bcf	status,0,c
  9365  000814  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9366  000816  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9367  000818  0EB3               	movlw	low _MB303xx
  9368  00081A  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9369  00081C  6ED9               	movwf	fsr2l,c
  9370  00081E  0E01               	movlw	high _MB303xx
  9371  000820  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9372  000822  6EDA               	movwf	fsr2h,c
  9373  000824  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9374  000828  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9375  00082C  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9376  00082E  0101               	movlb	1	; () banked
  9377  000830  6FD6               	movwf	_ByteLo& (0+255),b
  9378  000832  6BD7               	clrf	(_ByteLo+1)& (0+255),b
  9379                           
  9380                           ;Modbus.c: 230:             ByteHi = MB303xx[ModbusData[3] +i] >> 8;
  9381  000834  0102               	movlb	2	; () banked
  9382  000836  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9383  000838  2455               	addwf	ModbusFC03@i^0,w,c
  9384  00083A  0100               	movlb	0	; () banked
  9385  00083C  6F89               	movwf	??_ModbusFC03& (0+255),b
  9386  00083E  0E00               	movlw	0
  9387  000840  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9388  000842  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9389  000844  90D8               	bcf	status,0,c
  9390  000846  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9391  000848  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9392  00084A  0EB3               	movlw	low _MB303xx
  9393  00084C  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9394  00084E  6ED9               	movwf	fsr2l,c
  9395  000850  0E01               	movlw	high _MB303xx
  9396  000852  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9397  000854  6EDA               	movwf	fsr2h,c
  9398  000856  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9399  00085A  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9400  00085E  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9401  000860  6FB0               	movwf	_ByteHi& (0+255),b
  9402  000862  6BB1               	clrf	(_ByteHi+1)& (0+255),b
  9403                           
  9404                           ;Modbus.c: 233:         }else if(ModbusData[2] == 0x01){
  9405  000864  EFE1  F004         	goto	l748
  9406  000868                     l6911:
  9407                           
  9408                           ; BSR set to: 2
  9409  000868  0502               	decf	(_ModbusData+2)& (0+255),w,b
  9410  00086A  A4D8               	btfss	status,2,c
  9411  00086C  EF3A  F004         	goto	u7201
  9412  000870  EF3C  F004         	goto	u7200
  9413  000874                     u7201:
  9414  000874  EF6E  F004         	goto	l6915
  9415  000878                     u7200:
  9416  000878                     
  9417                           ; BSR set to: 2
  9418                           ;Modbus.c: 240:             ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
  9419  000878  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9420  00087A  2455               	addwf	ModbusFC03@i^0,w,c
  9421  00087C  0100               	movlb	0	; () banked
  9422  00087E  6F89               	movwf	??_ModbusFC03& (0+255),b
  9423  000880  0E00               	movlw	0
  9424  000882  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9425  000884  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9426  000886  90D8               	bcf	status,0,c
  9427  000888  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9428  00088A  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9429  00088C  0E9B               	movlw	low _MB301xx
  9430  00088E  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9431  000890  6ED9               	movwf	fsr2l,c
  9432  000892  0E01               	movlw	high _MB301xx
  9433  000894  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9434  000896  6EDA               	movwf	fsr2h,c
  9435  000898  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9436  00089C  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9437  0008A0  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9438  0008A2  0101               	movlb	1	; () banked
  9439  0008A4  6FD6               	movwf	_ByteLo& (0+255),b
  9440  0008A6  6BD7               	clrf	(_ByteLo+1)& (0+255),b
  9441                           
  9442                           ;Modbus.c: 241:             ByteHi = MB301xx[ModbusData[3] +i] >> 8;
  9443  0008A8  0102               	movlb	2	; () banked
  9444  0008AA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9445  0008AC  2455               	addwf	ModbusFC03@i^0,w,c
  9446  0008AE  0100               	movlb	0	; () banked
  9447  0008B0  6F89               	movwf	??_ModbusFC03& (0+255),b
  9448  0008B2  0E00               	movlw	0
  9449  0008B4  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9450  0008B6  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9451  0008B8  90D8               	bcf	status,0,c
  9452  0008BA  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9453  0008BC  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9454  0008BE  0E9B               	movlw	low _MB301xx
  9455  0008C0  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9456  0008C2  6ED9               	movwf	fsr2l,c
  9457  0008C4  0E01               	movlw	high _MB301xx
  9458  0008C6  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9459  0008C8  6EDA               	movwf	fsr2h,c
  9460  0008CA  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9461  0008CE  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9462  0008D2  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9463  0008D4  6FB0               	movwf	_ByteHi& (0+255),b
  9464  0008D6  6BB1               	clrf	(_ByteHi+1)& (0+255),b
  9465                           
  9466                           ;Modbus.c: 243:         }
  9467  0008D8  EFE1  F004         	goto	l748
  9468  0008DC                     l6915:
  9469                           
  9470                           ; BSR set to: 2
  9471  0008DC  0E02               	movlw	2
  9472  0008DE  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9473  0008E0  A4D8               	btfss	status,2,c
  9474  0008E2  EF75  F004         	goto	u7211
  9475  0008E6  EF77  F004         	goto	u7210
  9476  0008EA                     u7211:
  9477  0008EA  EFA9  F004         	goto	l6919
  9478  0008EE                     u7210:
  9479  0008EE                     
  9480                           ; BSR set to: 2
  9481                           ;Modbus.c: 250:             ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
  9482  0008EE  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9483  0008F0  2455               	addwf	ModbusFC03@i^0,w,c
  9484  0008F2  0100               	movlb	0	; () banked
  9485  0008F4  6F89               	movwf	??_ModbusFC03& (0+255),b
  9486  0008F6  0E00               	movlw	0
  9487  0008F8  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9488  0008FA  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9489  0008FC  90D8               	bcf	status,0,c
  9490  0008FE  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9491  000900  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9492  000902  0EDC               	movlw	low _MB302xx
  9493  000904  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9494  000906  6ED9               	movwf	fsr2l,c
  9495  000908  0E01               	movlw	high _MB302xx
  9496  00090A  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9497  00090C  6EDA               	movwf	fsr2h,c
  9498  00090E  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9499  000912  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9500  000916  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9501  000918  0101               	movlb	1	; () banked
  9502  00091A  6FD6               	movwf	_ByteLo& (0+255),b
  9503  00091C  6BD7               	clrf	(_ByteLo+1)& (0+255),b
  9504                           
  9505                           ;Modbus.c: 251:             ByteHi = MB302xx[ModbusData[3] +i] >> 8;
  9506  00091E  0102               	movlb	2	; () banked
  9507  000920  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9508  000922  2455               	addwf	ModbusFC03@i^0,w,c
  9509  000924  0100               	movlb	0	; () banked
  9510  000926  6F89               	movwf	??_ModbusFC03& (0+255),b
  9511  000928  0E00               	movlw	0
  9512  00092A  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9513  00092C  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9514  00092E  90D8               	bcf	status,0,c
  9515  000930  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9516  000932  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9517  000934  0EDC               	movlw	low _MB302xx
  9518  000936  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9519  000938  6ED9               	movwf	fsr2l,c
  9520  00093A  0E01               	movlw	high _MB302xx
  9521  00093C  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9522  00093E  6EDA               	movwf	fsr2h,c
  9523  000940  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9524  000944  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9525  000948  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9526  00094A  6FB0               	movwf	_ByteHi& (0+255),b
  9527  00094C  6BB1               	clrf	(_ByteHi+1)& (0+255),b
  9528                           
  9529                           ;Modbus.c: 253:         }
  9530  00094E  EFE1  F004         	goto	l748
  9531  000952                     l6919:
  9532                           
  9533                           ; BSR set to: 2
  9534  000952  5102               	movf	(_ModbusData+2)& (0+255),w,b
  9535  000954  A4D8               	btfss	status,2,c
  9536  000956  EFAF  F004         	goto	u7221
  9537  00095A  EFB1  F004         	goto	u7220
  9538  00095E                     u7221:
  9539  00095E  EFE1  F004         	goto	l748
  9540  000962                     u7220:
  9541  000962                     
  9542                           ; BSR set to: 2
  9543                           ;Modbus.c: 255:             ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  9544  000962  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9545  000964  2455               	addwf	ModbusFC03@i^0,w,c
  9546  000966  0100               	movlb	0	; () banked
  9547  000968  6F89               	movwf	??_ModbusFC03& (0+255),b
  9548  00096A  0E00               	movlw	0
  9549  00096C  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9550  00096E  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9551  000970  90D8               	bcf	status,0,c
  9552  000972  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9553  000974  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9554  000976  0E84               	movlw	low _MB300xx
  9555  000978  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9556  00097A  6ED9               	movwf	fsr2l,c
  9557  00097C  0E03               	movlw	high _MB300xx
  9558  00097E  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9559  000980  6EDA               	movwf	fsr2h,c
  9560  000982  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9561  000986  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9562  00098A  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9563  00098C  0101               	movlb	1	; () banked
  9564  00098E  6FD6               	movwf	_ByteLo& (0+255),b
  9565  000990  6BD7               	clrf	(_ByteLo+1)& (0+255),b
  9566                           
  9567                           ;Modbus.c: 256:             ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  9568  000992  0102               	movlb	2	; () banked
  9569  000994  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9570  000996  2455               	addwf	ModbusFC03@i^0,w,c
  9571  000998  0100               	movlb	0	; () banked
  9572  00099A  6F89               	movwf	??_ModbusFC03& (0+255),b
  9573  00099C  0E00               	movlw	0
  9574  00099E  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9575  0009A0  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9576  0009A2  90D8               	bcf	status,0,c
  9577  0009A4  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9578  0009A6  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9579  0009A8  0E84               	movlw	low _MB300xx
  9580  0009AA  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9581  0009AC  6ED9               	movwf	fsr2l,c
  9582  0009AE  0E03               	movlw	high _MB300xx
  9583  0009B0  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9584  0009B2  6EDA               	movwf	fsr2h,c
  9585  0009B4  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9586  0009B8  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9587  0009BC  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9588  0009BE  6FB0               	movwf	_ByteHi& (0+255),b
  9589  0009C0  6BB1               	clrf	(_ByteHi+1)& (0+255),b
  9590  0009C2                     l748:
  9591                           
  9592                           ;Modbus.c: 260:         MBRespon[MBResCnt] = ByteHi;
  9593  0009C2  0EAB               	movlw	low _MBRespon
  9594  0009C4  0100               	movlb	0	; () banked
  9595  0009C6  25B2               	addwf	_MBResCnt& (0+255),w,b
  9596  0009C8  6ED9               	movwf	fsr2l,c
  9597  0009CA  0E02               	movlw	high _MBRespon
  9598  0009CC  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9599  0009CE  6EDA               	movwf	fsr2h,c
  9600  0009D0  C0B0  FFDF         	movff	_ByteHi,indf2
  9601  0009D4                     
  9602                           ; BSR set to: 0
  9603                           ;Modbus.c: 261:         MBResCnt++;
  9604  0009D4  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9605  0009D6  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9606  0009D8                     
  9607                           ; BSR set to: 0
  9608                           ;Modbus.c: 262:         MBRespon[MBResCnt] = ByteLo;
  9609  0009D8  0EAB               	movlw	low _MBRespon
  9610  0009DA  25B2               	addwf	_MBResCnt& (0+255),w,b
  9611  0009DC  6ED9               	movwf	fsr2l,c
  9612  0009DE  0E02               	movlw	high _MBRespon
  9613  0009E0  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9614  0009E2  6EDA               	movwf	fsr2h,c
  9615  0009E4  C1D6  FFDF         	movff	_ByteLo,indf2
  9616                           
  9617                           ;Modbus.c: 263:         MBResCnt++;
  9618  0009E8  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9619  0009EA  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9620                           
  9621                           ;Modbus.c: 265:     }
  9622  0009EC  4A55               	infsnz	ModbusFC03@i^0,f,c
  9623  0009EE  2A56               	incf	(ModbusFC03@i+1)^0,f,c
  9624  0009F0                     l6927:
  9625  0009F0  0102               	movlb	2	; () banked
  9626  0009F2  5105               	movf	(_ModbusData+5)& (0+255),w,b
  9627  0009F4  0100               	movlb	0	; () banked
  9628  0009F6  6F89               	movwf	??_ModbusFC03& (0+255),b
  9629  0009F8  6B8A               	clrf	(??_ModbusFC03+1)& (0+255),b
  9630  0009FA  5189               	movf	??_ModbusFC03& (0+255),w,b
  9631  0009FC  5C55               	subwf	ModbusFC03@i^0,w,c
  9632  0009FE  5056               	movf	(ModbusFC03@i+1)^0,w,c
  9633  000A00  0A80               	xorlw	128
  9634  000A02  6F8B               	movwf	(??_ModbusFC03+2)& (0+255),b
  9635  000A04  518A               	movf	(??_ModbusFC03+1)& (0+255),w,b
  9636  000A06  0A80               	xorlw	128
  9637  000A08  598B               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
  9638  000A0A  A0D8               	btfss	status,0,c
  9639  000A0C  EF0A  F005         	goto	u7231
  9640  000A10  EF0C  F005         	goto	u7230
  9641  000A14                     u7231:
  9642  000A14  EFF8  F003         	goto	l6907
  9643  000A18                     u7230:
  9644  000A18                     
  9645                           ; BSR set to: 0
  9646                           ;Modbus.c: 267:     ByteHi = generateCRC(MBResCnt, 1);
  9647  000A18  C0B2  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9648  000A1C  C0B3  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9649  000A20  0E01               	movlw	1
  9650  000A22  6E07               	movwf	generateCRC@HiOrLo^0,c
  9651  000A24  EC48  F014         	call	_generateCRC	;wreg free
  9652  000A28  C005  F0B0         	movff	?_generateCRC,_ByteHi
  9653  000A2C  C006  F0B1         	movff	?_generateCRC+1,_ByteHi+1
  9654                           
  9655                           ;Modbus.c: 268:     ByteLo = generateCRC(MBResCnt, 0);
  9656  000A30  C0B2  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9657  000A34  C0B3  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9658  000A38  0E00               	movlw	0
  9659  000A3A  6E07               	movwf	generateCRC@HiOrLo^0,c
  9660  000A3C  EC48  F014         	call	_generateCRC	;wreg free
  9661  000A40  C005  F1D6         	movff	?_generateCRC,_ByteLo
  9662  000A44  C006  F1D7         	movff	?_generateCRC+1,_ByteLo+1
  9663  000A48                     
  9664                           ;Modbus.c: 270:     MBRespon[MBResCnt] = ByteHi;
  9665  000A48  0EAB               	movlw	low _MBRespon
  9666  000A4A  0100               	movlb	0	; () banked
  9667  000A4C  25B2               	addwf	_MBResCnt& (0+255),w,b
  9668  000A4E  6ED9               	movwf	fsr2l,c
  9669  000A50  0E02               	movlw	high _MBRespon
  9670  000A52  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9671  000A54  6EDA               	movwf	fsr2h,c
  9672  000A56  C0B0  FFDF         	movff	_ByteHi,indf2
  9673  000A5A                     
  9674                           ; BSR set to: 0
  9675                           ;Modbus.c: 271:     MBRespon[MBResCnt +1] = ByteLo;
  9676  000A5A  0EAC               	movlw	low (_MBRespon+1)
  9677  000A5C  25B2               	addwf	_MBResCnt& (0+255),w,b
  9678  000A5E  6ED9               	movwf	fsr2l,c
  9679  000A60  0E02               	movlw	high (_MBRespon+1)
  9680  000A62  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9681  000A64  6EDA               	movwf	fsr2h,c
  9682  000A66  C1D6  FFDF         	movff	_ByteLo,indf2
  9683  000A6A                     
  9684                           ; BSR set to: 0
  9685                           ;Modbus.c: 272:     MBResCnt = MBResCnt +2;
  9686  000A6A  0E02               	movlw	2
  9687  000A6C  25B2               	addwf	_MBResCnt& (0+255),w,b
  9688  000A6E  6FB2               	movwf	_MBResCnt& (0+255),b
  9689  000A70  0E00               	movlw	0
  9690  000A72  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9691  000A74  6FB3               	movwf	(_MBResCnt+1)& (0+255),b
  9692  000A76                     
  9693                           ; BSR set to: 0
  9694                           ;Modbus.c: 278:     UART1_Write_string(MBRespon,MBResCnt);
  9695  000A76  0EAB               	movlw	low _MBRespon
  9696  000A78  6E06               	movwf	UART1_Write_string@data^0,c
  9697  000A7A  0E02               	movlw	high _MBRespon
  9698  000A7C  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9699  000A7E  C0B2  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9700  000A82  C0B3  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9701  000A86  EC7E  F019         	call	_UART1_Write_string	;wreg free
  9702  000A8A  0012               	return		;funcret
  9703  000A8C                     __end_of_ModbusFC03:
  9704                           	opt callstack 0
  9705                           
  9706 ;; *************** function _ModbusError *****************
  9707 ;; Defined at:
  9708 ;;		line 407 in file "Modbus.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  ErrorCode       2   43[BANK0 ] int 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  i               2    0        int 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;Total ram usage:        4 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:   14
  9729 ;; This function calls:
  9730 ;;		_PrintModRespon
  9731 ;;		_UART1_Write_string
  9732 ;;		_generateCRC
  9733 ;; This function is called by:
  9734 ;;		_main
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text44
  9739  002BE8                     __ptext44:
  9740                           	opt callstack 0
  9741  002BE8                     _ModbusError:
  9742                           	opt callstack 16
  9743  002BE8                     
  9744                           ;Modbus.c: 412:     MBResCnt = 0;
  9745  002BE8  0E00               	movlw	0
  9746  002BEA  0100               	movlb	0	; () banked
  9747  002BEC  6FB3               	movwf	(_MBResCnt+1)& (0+255),b
  9748  002BEE  0E00               	movlw	0
  9749  002BF0  6FB2               	movwf	_MBResCnt& (0+255),b
  9750  002BF2                     
  9751                           ; BSR set to: 0
  9752                           ;Modbus.c: 413:     MBRespon[MBResCnt] = ModbusData[0];
  9753  002BF2  0EAB               	movlw	low _MBRespon
  9754  002BF4  25B2               	addwf	_MBResCnt& (0+255),w,b
  9755  002BF6  6ED9               	movwf	fsr2l,c
  9756  002BF8  0E02               	movlw	high _MBRespon
  9757  002BFA  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9758  002BFC  6EDA               	movwf	fsr2h,c
  9759  002BFE  C200  FFDF         	movff	_ModbusData,indf2
  9760  002C02                     
  9761                           ; BSR set to: 0
  9762                           ;Modbus.c: 414:     MBResCnt++;
  9763  002C02  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9764  002C04  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9765  002C06                     
  9766                           ; BSR set to: 0
  9767                           ;Modbus.c: 415:     MBRespon[MBResCnt] = ModbusData[1] + 128;
  9768  002C06  0EAB               	movlw	low _MBRespon
  9769  002C08  25B2               	addwf	_MBResCnt& (0+255),w,b
  9770  002C0A  6ED9               	movwf	fsr2l,c
  9771  002C0C  0E02               	movlw	high _MBRespon
  9772  002C0E  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9773  002C10  6EDA               	movwf	fsr2h,c
  9774  002C12  0102               	movlb	2	; () banked
  9775  002C14  5101               	movf	(_ModbusData+1)& (0+255),w,b
  9776  002C16  0F80               	addlw	128
  9777  002C18  6EDF               	movwf	indf2,c
  9778  002C1A                     
  9779                           ; BSR set to: 2
  9780                           ;Modbus.c: 416:     MBResCnt++;
  9781  002C1A  0100               	movlb	0	; () banked
  9782  002C1C  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9783  002C1E  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9784  002C20                     
  9785                           ; BSR set to: 0
  9786                           ;Modbus.c: 417:     MBRespon[MBResCnt] = ErrorCode;
  9787  002C20  0EAB               	movlw	low _MBRespon
  9788  002C22  25B2               	addwf	_MBResCnt& (0+255),w,b
  9789  002C24  6ED9               	movwf	fsr2l,c
  9790  002C26  0E02               	movlw	high _MBRespon
  9791  002C28  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9792  002C2A  6EDA               	movwf	fsr2h,c
  9793  002C2C  C08B  FFDF         	movff	ModbusError@ErrorCode,indf2
  9794  002C30                     
  9795                           ; BSR set to: 0
  9796                           ;Modbus.c: 418:     MBResCnt++;
  9797  002C30  4BB2               	infsnz	_MBResCnt& (0+255),f,b
  9798  002C32  2BB3               	incf	(_MBResCnt+1)& (0+255),f,b
  9799  002C34                     
  9800                           ; BSR set to: 0
  9801                           ;Modbus.c: 420:     ByteHi = generateCRC(MBResCnt, 1);
  9802  002C34  C0B2  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9803  002C38  C0B3  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9804  002C3C  0E01               	movlw	1
  9805  002C3E  6E07               	movwf	generateCRC@HiOrLo^0,c
  9806  002C40  EC48  F014         	call	_generateCRC	;wreg free
  9807  002C44  C005  F0B0         	movff	?_generateCRC,_ByteHi
  9808  002C48  C006  F0B1         	movff	?_generateCRC+1,_ByteHi+1
  9809  002C4C                     
  9810                           ;Modbus.c: 421:     ByteLo = generateCRC(MBResCnt, 0);
  9811  002C4C  C0B2  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9812  002C50  C0B3  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9813  002C54  0E00               	movlw	0
  9814  002C56  6E07               	movwf	generateCRC@HiOrLo^0,c
  9815  002C58  EC48  F014         	call	_generateCRC	;wreg free
  9816  002C5C  C005  F1D6         	movff	?_generateCRC,_ByteLo
  9817  002C60  C006  F1D7         	movff	?_generateCRC+1,_ByteLo+1
  9818  002C64                     
  9819                           ;Modbus.c: 423:     MBRespon[MBResCnt] = ByteHi;
  9820  002C64  0EAB               	movlw	low _MBRespon
  9821  002C66  0100               	movlb	0	; () banked
  9822  002C68  25B2               	addwf	_MBResCnt& (0+255),w,b
  9823  002C6A  6ED9               	movwf	fsr2l,c
  9824  002C6C  0E02               	movlw	high _MBRespon
  9825  002C6E  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9826  002C70  6EDA               	movwf	fsr2h,c
  9827  002C72  C0B0  FFDF         	movff	_ByteHi,indf2
  9828  002C76                     
  9829                           ; BSR set to: 0
  9830                           ;Modbus.c: 424:     MBRespon[MBResCnt +1] = ByteLo;
  9831  002C76  0EAC               	movlw	low (_MBRespon+1)
  9832  002C78  25B2               	addwf	_MBResCnt& (0+255),w,b
  9833  002C7A  6ED9               	movwf	fsr2l,c
  9834  002C7C  0E02               	movlw	high (_MBRespon+1)
  9835  002C7E  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9836  002C80  6EDA               	movwf	fsr2h,c
  9837  002C82  C1D6  FFDF         	movff	_ByteLo,indf2
  9838  002C86                     
  9839                           ; BSR set to: 0
  9840                           ;Modbus.c: 425:     MBResCnt = MBResCnt +2;
  9841  002C86  0E02               	movlw	2
  9842  002C88  25B2               	addwf	_MBResCnt& (0+255),w,b
  9843  002C8A  6FB2               	movwf	_MBResCnt& (0+255),b
  9844  002C8C  0E00               	movlw	0
  9845  002C8E  21B3               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9846  002C90  6FB3               	movwf	(_MBResCnt+1)& (0+255),b
  9847  002C92                     
  9848                           ; BSR set to: 0
  9849                           ;Modbus.c: 427:     PrintModRespon();
  9850  002C92  ECD6  F017         	call	_PrintModRespon	;wreg free
  9851  002C96                     
  9852                           ;Modbus.c: 428:     UART1_Write_string(MBRespon,MBResCnt);
  9853  002C96  0EAB               	movlw	low _MBRespon
  9854  002C98  6E06               	movwf	UART1_Write_string@data^0,c
  9855  002C9A  0E02               	movlw	high _MBRespon
  9856  002C9C  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9857  002C9E  C0B2  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9858  002CA2  C0B3  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9859  002CA6  EC7E  F019         	call	_UART1_Write_string	;wreg free
  9860  002CAA  0012               	return		;funcret
  9861  002CAC                     __end_of_ModbusError:
  9862                           	opt callstack 0
  9863                           
  9864 ;; *************** function _generateCRC *****************
  9865 ;; Defined at:
  9866 ;;		line 335 in file "Modbus.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  MessCnt         2    4[COMRAM] int 
  9869 ;;  HiOrLo          1    6[COMRAM] _Bool 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  crc             2   17[COMRAM] unsigned int 
  9872 ;;  j               2   15[COMRAM] int 
  9873 ;;  i               2   13[COMRAM] int 
  9874 ;;  crcLow          2   11[COMRAM] unsigned int 
  9875 ;;  crcHigh         2    9[COMRAM] unsigned int 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  2    4[COMRAM] unsigned int 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9885 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9886 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9888 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9889 ;;Total ram usage:       15 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    4
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_ModbusFC03
  9896 ;;		_ModbusFC10
  9897 ;;		_ModbusError
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text45
  9902  002890                     __ptext45:
  9903                           	opt callstack 0
  9904  002890                     _generateCRC:
  9905                           	opt callstack 25
  9906  002890                     
  9907                           ;Modbus.c: 336:   unsigned int crc = 0xFFFF;
  9908  002890  6812               	setf	generateCRC@crc^0,c
  9909  002892  6813               	setf	(generateCRC@crc+1)^0,c
  9910  002894                     
  9911                           ;Modbus.c: 338:   unsigned int crcLow = 0;
  9912  002894  0E00               	movlw	0
  9913  002896  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  9914  002898  0E00               	movlw	0
  9915  00289A  6E0C               	movwf	generateCRC@crcLow^0,c
  9916                           
  9917                           ;Modbus.c: 339:   int i,j = 0;
  9918  00289C  0E00               	movlw	0
  9919  00289E  6E11               	movwf	(generateCRC@j+1)^0,c
  9920  0028A0  0E00               	movlw	0
  9921  0028A2  6E10               	movwf	generateCRC@j^0,c
  9922                           
  9923                           ;Modbus.c: 341:     for(i=0;i<MessCnt;i++){
  9924  0028A4  0E00               	movlw	0
  9925  0028A6  6E0F               	movwf	(generateCRC@i+1)^0,c
  9926  0028A8  0E00               	movlw	0
  9927  0028AA  6E0E               	movwf	generateCRC@i^0,c
  9928  0028AC  EF87  F014         	goto	l6733
  9929  0028B0                     l6715:
  9930                           
  9931                           ;Modbus.c: 342:       crc ^= MBRespon[i];
  9932  0028B0  0EAB               	movlw	low _MBRespon
  9933  0028B2  240E               	addwf	generateCRC@i^0,w,c
  9934  0028B4  6ED9               	movwf	fsr2l,c
  9935  0028B6  0E02               	movlw	high _MBRespon
  9936  0028B8  200F               	addwfc	(generateCRC@i+1)^0,w,c
  9937  0028BA  6EDA               	movwf	fsr2h,c
  9938  0028BC  50DF               	movf	indf2,w,c
  9939  0028BE  6E08               	movwf	??_generateCRC^0,c
  9940  0028C0  5008               	movf	??_generateCRC^0,w,c
  9941  0028C2  1A12               	xorwf	generateCRC@crc^0,f,c
  9942  0028C4                     
  9943                           ;Modbus.c: 343:       for(j=8; j!=0; j--){
  9944  0028C4  0E00               	movlw	0
  9945  0028C6  6E11               	movwf	(generateCRC@j+1)^0,c
  9946  0028C8  0E08               	movlw	8
  9947  0028CA  6E10               	movwf	generateCRC@j^0,c
  9948  0028CC                     l767:
  9949                           
  9950                           ;Modbus.c: 344:         if((crc & 0x0001) != 0){
  9951  0028CC  A012               	btfss	generateCRC@crc^0,0,c
  9952  0028CE  EF6B  F014         	goto	u6941
  9953  0028D2  EF6D  F014         	goto	u6940
  9954  0028D6                     u6941:
  9955  0028D6  EF76  F014         	goto	l6727
  9956  0028DA                     u6940:
  9957  0028DA                     
  9958                           ;Modbus.c: 345:           crc >>= 1;
  9959  0028DA  90D8               	bcf	status,0,c
  9960  0028DC  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  9961  0028DE  3212               	rrcf	generateCRC@crc^0,f,c
  9962  0028E0                     
  9963                           ;Modbus.c: 346:           crc ^= 0xA001;
  9964  0028E0  0E01               	movlw	1
  9965  0028E2  1A12               	xorwf	generateCRC@crc^0,f,c
  9966  0028E4  0EA0               	movlw	160
  9967  0028E6  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  9968                           
  9969                           ;Modbus.c: 347:         }
  9970  0028E8  EF79  F014         	goto	l770
  9971  0028EC                     l6727:
  9972                           
  9973                           ;Modbus.c: 349:           crc >>= 1;
  9974  0028EC  90D8               	bcf	status,0,c
  9975  0028EE  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  9976  0028F0  3212               	rrcf	generateCRC@crc^0,f,c
  9977  0028F2                     l770:
  9978                           
  9979                           ;Modbus.c: 351:       }
  9980  0028F2  0610               	decf	generateCRC@j^0,f,c
  9981  0028F4  A0D8               	btfss	status,0,c
  9982  0028F6  0611               	decf	(generateCRC@j+1)^0,f,c
  9983  0028F8  5010               	movf	generateCRC@j^0,w,c
  9984  0028FA  1011               	iorwf	(generateCRC@j+1)^0,w,c
  9985  0028FC  A4D8               	btfss	status,2,c
  9986  0028FE  EF83  F014         	goto	u6951
  9987  002902  EF85  F014         	goto	u6950
  9988  002906                     u6951:
  9989  002906  EF66  F014         	goto	l767
  9990  00290A                     u6950:
  9991  00290A                     
  9992                           ;Modbus.c: 352:     }
  9993  00290A  4A0E               	infsnz	generateCRC@i^0,f,c
  9994  00290C  2A0F               	incf	(generateCRC@i+1)^0,f,c
  9995  00290E                     l6733:
  9996  00290E  5005               	movf	generateCRC@MessCnt^0,w,c
  9997  002910  5C0E               	subwf	generateCRC@i^0,w,c
  9998  002912  500F               	movf	(generateCRC@i+1)^0,w,c
  9999  002914  0A80               	xorlw	128
 10000  002916  6E08               	movwf	??_generateCRC^0,c
 10001  002918  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 10002  00291A  0A80               	xorlw	128
 10003  00291C  5808               	subwfb	??_generateCRC^0,w,c
 10004  00291E  A0D8               	btfss	status,0,c
 10005  002920  EF94  F014         	goto	u6961
 10006  002924  EF96  F014         	goto	u6960
 10007  002928                     u6961:
 10008  002928  EF58  F014         	goto	l6715
 10009  00292C                     u6960:
 10010  00292C                     
 10011                           ;Modbus.c: 354:     crcHigh = (crc & 0x00FF);
 10012  00292C  5012               	movf	generateCRC@crc^0,w,c
 10013  00292E  6E0A               	movwf	generateCRC@crcHigh^0,c
 10014  002930  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 10015                           
 10016                           ;Modbus.c: 355:     crcLow = (crc & 0xFF00) >>8;
 10017  002932  C012  F008         	movff	generateCRC@crc,??_generateCRC
 10018  002936  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 10019  00293A  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 10020  00293E  6A09               	clrf	(??_generateCRC+1)^0,c
 10021  002940  5008               	movf	??_generateCRC^0,w,c
 10022  002942  6E0C               	movwf	generateCRC@crcLow^0,c
 10023  002944  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 10024  002946                     
 10025                           ;Modbus.c: 357:     if(HiOrLo == 1){
 10026  002946  0407               	decf	generateCRC@HiOrLo^0,w,c
 10027  002948  A4D8               	btfss	status,2,c
 10028  00294A  EFA9  F014         	goto	u6971
 10029  00294E  EFAB  F014         	goto	u6970
 10030  002952                     u6971:
 10031  002952  EFB1  F014         	goto	l772
 10032  002956                     u6970:
 10033  002956                     
 10034                           ;Modbus.c: 358:         return crcHigh;
 10035  002956  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 10036  00295A  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 10037  00295E  EFB5  F014         	goto	l773
 10038  002962                     l772:
 10039                           
 10040                           ;Modbus.c: 360:         return crcLow;
 10041  002962  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 10042  002966  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 10043  00296A                     l773:
 10044  00296A  0012               	return		;funcret
 10045  00296C                     __end_of_generateCRC:
 10046                           	opt callstack 0
 10047                           
 10048 ;; *************** function _UART1_Write_string *****************
 10049 ;; Defined at:
 10050 ;;		line 365 in file "Modbus.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  data            2    5[COMRAM] PTR unsigned char 
 10053 ;;		 -> MBRespon(75), 
 10054 ;;  data_len        2    7[COMRAM] int 
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;  i               2   10[COMRAM] int 
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  1    wreg      void 
 10059 ;; Registers used:
 10060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10070 ;;Total ram usage:        7 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:    5
 10073 ;; This function calls:
 10074 ;;		_EUSART1_Write
 10075 ;;		_EUSART1_is_tx_done
 10076 ;;		_EUSART1_is_tx_ready
 10077 ;;		_TXMode
 10078 ;; This function is called by:
 10079 ;;		_ModbusFC03
 10080 ;;		_ModbusFC10
 10081 ;;		_ModbusError
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text46
 10086  0032FC                     __ptext46:
 10087                           	opt callstack 0
 10088  0032FC                     _UART1_Write_string:
 10089                           	opt callstack 24
 10090  0032FC                     
 10091                           ;Modbus.c: 365: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 36
      +                          6: {;Modbus.c: 367:     TXMode();
 10092  0032FC  EC1E  F01F         	call	_TXMode	;wreg free
 10093  003300                     l6745:
 10094  003300  ECB3  F01E         	call	_EUSART1_is_tx_ready	;wreg free
 10095  003304  0900               	iorlw	0
 10096  003306  B4D8               	btfsc	status,2,c
 10097  003308  EF88  F019         	goto	u6981
 10098  00330C  EF8A  F019         	goto	u6980
 10099  003310                     u6981:
 10100  003310  EF80  F019         	goto	l6745
 10101  003314                     u6980:
 10102  003314                     
 10103                           ;Modbus.c: 369:     for (int i = 0; i < data_len; i++) {
 10104  003314  0E00               	movlw	0
 10105  003316  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 10106  003318  0E00               	movlw	0
 10107  00331A  6E0B               	movwf	UART1_Write_string@i^0,c
 10108  00331C  EFA5  F019         	goto	l6755
 10109  003320                     l6749:
 10110                           
 10111                           ;Modbus.c: 370:         EUSART1_Write(data[i]);
 10112  003320  500B               	movf	UART1_Write_string@i^0,w,c
 10113  003322  2406               	addwf	UART1_Write_string@data^0,w,c
 10114  003324  6ED9               	movwf	fsr2l,c
 10115  003326  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 10116  003328  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 10117  00332A  6EDA               	movwf	fsr2h,c
 10118  00332C  50DF               	movf	indf2,w,c
 10119  00332E  EC51  F01A         	call	_EUSART1_Write
 10120  003332                     l6751:
 10121  003332  ECD6  F01E         	call	_EUSART1_is_tx_done	;wreg free
 10122  003336  0900               	iorlw	0
 10123  003338  B4D8               	btfsc	status,2,c
 10124  00333A  EFA1  F019         	goto	u6991
 10125  00333E  EFA3  F019         	goto	u6990
 10126  003342                     u6991:
 10127  003342  EF99  F019         	goto	l6751
 10128  003346                     u6990:
 10129  003346                     
 10130                           ;Modbus.c: 372:     }
 10131  003346  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 10132  003348  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 10133  00334A                     l6755:
 10134  00334A  5008               	movf	UART1_Write_string@data_len^0,w,c
 10135  00334C  5C0B               	subwf	UART1_Write_string@i^0,w,c
 10136  00334E  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 10137  003350  0A80               	xorlw	128
 10138  003352  6E0A               	movwf	??_UART1_Write_string^0,c
 10139  003354  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 10140  003356  0A80               	xorlw	128
 10141  003358  580A               	subwfb	??_UART1_Write_string^0,w,c
 10142  00335A  A0D8               	btfss	status,0,c
 10143  00335C  EFB2  F019         	goto	u7001
 10144  003360  EFB4  F019         	goto	u7000
 10145  003364                     u7001:
 10146  003364  EF90  F019         	goto	l6749
 10147  003368                     u7000:
 10148  003368  0012               	return		;funcret
 10149  00336A                     __end_of_UART1_Write_string:
 10150                           	opt callstack 0
 10151                           
 10152 ;; *************** function _TXMode *****************
 10153 ;; Defined at:
 10154 ;;		line 50 in file "Modbus.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;		None
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;		None
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  1    wreg      void 
 10161 ;; Registers used:
 10162 ;;		None
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10172 ;;Total ram usage:        0 bytes
 10173 ;; Hardware stack levels used:    1
 10174 ;; Hardware stack levels required when called:    4
 10175 ;; This function calls:
 10176 ;;		Nothing
 10177 ;; This function is called by:
 10178 ;;		_UART1_Write_string
 10179 ;; This function uses a non-reentrant model
 10180 ;;
 10181                           
 10182                           	psect	text47
 10183  003E3C                     __ptext47:
 10184                           	opt callstack 0
 10185  003E3C                     _TXMode:
 10186                           	opt callstack 24
 10187  003E3C  8086               	bsf	134,0,c	;volatile
 10188  003E3E  8683               	bsf	131,3,c	;volatile
 10189  003E40  0012               	return		;funcret
 10190  003E42                     __end_of_TXMode:
 10191                           	opt callstack 0
 10192                           
 10193 ;; *************** function _EUSART1_is_tx_ready *****************
 10194 ;; Defined at:
 10195 ;;		line 134 in file "mcc_generated_files/eusart1.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;		None
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;		None
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  1    wreg      _Bool 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;Total ram usage:        0 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    4
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_UART1_Write_string
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text48
 10224  003D66                     __ptext48:
 10225                           	opt callstack 0
 10226  003D66                     _EUSART1_is_tx_ready:
 10227                           	opt callstack 24
 10228  003D66                     
 10229                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
 10230  003D66  0101               	movlb	1	; () banked
 10231  003D68  51F2               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 10232  003D6A  A4D8               	btfss	status,2,c
 10233  003D6C  EFBA  F01E         	goto	u6581
 10234  003D70  EFBD  F01E         	goto	u6580
 10235  003D74                     u6581:
 10236  003D74  0E01               	movlw	1
 10237  003D76  EFBE  F01E         	goto	u6590
 10238  003D7A                     u6580:
 10239  003D7A  0E00               	movlw	0
 10240  003D7C                     u6590:
 10241  003D7C                     
 10242                           ; BSR set to: 1
 10243  003D7C  0012               	return		;funcret
 10244  003D7E                     __end_of_EUSART1_is_tx_ready:
 10245                           	opt callstack 0
 10246                           
 10247 ;; *************** function _EUSART1_is_tx_done *****************
 10248 ;; Defined at:
 10249 ;;		line 144 in file "mcc_generated_files/eusart1.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;		None
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;		None
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      _Bool 
 10256 ;; Registers used:
 10257 ;;		wreg
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;Total ram usage:        0 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    4
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_UART1_Write_string
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text49
 10278  003DAC                     __ptext49:
 10279                           	opt callstack 0
 10280  003DAC                     _EUSART1_is_tx_done:
 10281                           	opt callstack 24
 10282  003DAC                     
 10283                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
 10284  003DAC  B29E               	btfsc	158,1,c	;volatile
 10285  003DAE  EFDB  F01E         	goto	u6601
 10286  003DB2  EFDE  F01E         	goto	u6600
 10287  003DB6                     u6601:
 10288  003DB6  0E01               	movlw	1
 10289  003DB8  EFDF  F01E         	goto	u6606
 10290  003DBC                     u6600:
 10291  003DBC  0E00               	movlw	0
 10292  003DBE                     u6606:
 10293  003DBE  0012               	return		;funcret
 10294  003DC0                     __end_of_EUSART1_is_tx_done:
 10295                           	opt callstack 0
 10296                           
 10297 ;; *************** function _EUSART1_Write *****************
 10298 ;; Defined at:
 10299 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;  txData          1    wreg     unsigned char 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  txData          1    4[COMRAM] unsigned char 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;Total ram usage:        1 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    4
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_UART1_Write_string
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text50
 10328  0034A2                     __ptext50:
 10329                           	opt callstack 0
 10330  0034A2                     _EUSART1_Write:
 10331                           	opt callstack 24
 10332                           
 10333                           ;incstack = 0
 10334                           ;EUSART1_Write@txData stored from wreg
 10335  0034A2  6E05               	movwf	EUSART1_Write@txData^0,c
 10336  0034A4                     l6477:
 10337                           
 10338                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
 10339  0034A4  0101               	movlb	1	; () banked
 10340  0034A6  51F2               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 10341  0034A8  B4D8               	btfsc	status,2,c
 10342  0034AA  EF59  F01A         	goto	u6611
 10343  0034AE  EF5B  F01A         	goto	u6610
 10344  0034B2                     u6611:
 10345  0034B2  EF52  F01A         	goto	l6477
 10346  0034B6                     u6610:
 10347  0034B6                     
 10348                           ; BSR set to: 1
 10349                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
 10350  0034B6  010E               	movlb	14	; () banked
 10351  0034B8  B9C5               	btfsc	197,4,b	;volatile
 10352  0034BA  EF61  F01A         	goto	u6621
 10353  0034BE  EF63  F01A         	goto	u6620
 10354  0034C2                     u6621:
 10355  0034C2  EF67  F01A         	goto	l471
 10356  0034C6                     u6620:
 10357  0034C6                     
 10358                           ; BSR set to: 14
 10359                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
 10360  0034C6  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 10361                           
 10362                           ;mcc_generated_files/eusart1.c: 184:     }
 10363  0034CA  EF7E  F01A         	goto	l6491
 10364  0034CE                     l471:
 10365                           
 10366                           ; BSR set to: 14
 10367                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
 10368  0034CE  99C5               	bcf	197,4,b	;volatile
 10369  0034D0                     
 10370                           ; BSR set to: 14
 10371                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
 10372  0034D0  0E20               	movlw	low _eusart1TxBuffer
 10373  0034D2  0100               	movlb	0	; () banked
 10374  0034D4  25BC               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 10375  0034D6  6ED9               	movwf	fsr2l,c
 10376  0034D8  6ADA               	clrf	fsr2h,c
 10377  0034DA  0E01               	movlw	high _eusart1TxBuffer
 10378  0034DC  22DA               	addwfc	fsr2h,f,c
 10379  0034DE  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 10380  0034E2                     
 10381                           ; BSR set to: 0
 10382  0034E2  2BBC               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 10383  0034E4                     
 10384                           ; BSR set to: 0
 10385                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 10386  0034E4  0E0F               	movlw	15
 10387  0034E6  65BC               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 10388  0034E8  EF78  F01A         	goto	u6631
 10389  0034EC  EF7A  F01A         	goto	u6630
 10390  0034F0                     u6631:
 10391  0034F0  EF7C  F01A         	goto	l6489
 10392  0034F4                     u6630:
 10393  0034F4                     
 10394                           ; BSR set to: 0
 10395                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
 10396  0034F4  0E00               	movlw	0
 10397  0034F6  6FBC               	movwf	_eusart1TxHead& (0+255),b	;volatile
 10398  0034F8                     l6489:
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
 10402  0034F8  0101               	movlb	1	; () banked
 10403  0034FA  07F2               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 10404  0034FC                     l6491:
 10405                           
 10406                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
 10407  0034FC  010E               	movlb	14	; () banked
 10408  0034FE  89C5               	bsf	197,4,b	;volatile
 10409  003500                     
 10410                           ; BSR set to: 14
 10411  003500  0012               	return		;funcret
 10412  003502                     __end_of_EUSART1_Write:
 10413                           	opt callstack 0
 10414                           
 10415 ;; *************** function _PrintModRespon *****************
 10416 ;; Defined at:
 10417 ;;		line 379 in file "Modbus.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  i               2   41[BANK0 ] int 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10434 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10435 ;;Total ram usage:        3 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:   13
 10438 ;; This function calls:
 10439 ;;		_EUSART2_is_tx_done
 10440 ;;		_EUSART2_is_tx_ready
 10441 ;;		_printf
 10442 ;; This function is called by:
 10443 ;;		_main
 10444 ;;		_ModbusFC10
 10445 ;;		_ModbusError
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text51
 10450  002FAC                     __ptext51:
 10451                           	opt callstack 0
 10452  002FAC                     _PrintModRespon:
 10453                           	opt callstack 17
 10454  002FAC                     
 10455                           ;Modbus.c: 383:     printf("Modbus Response Count %i:\r\n",MBResCnt);
 10456  002FAC  0E70               	movlw	low STR_22
 10457  002FAE  0100               	movlb	0	; () banked
 10458  002FB0  6F7D               	movwf	printf@fmt& (0+255),b
 10459  002FB2  0EFD               	movlw	high STR_22
 10460  002FB4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10461  002FB6  C0B2  F07F         	movff	_MBResCnt,?_printf+2
 10462  002FBA  C0B3  F080         	movff	_MBResCnt+1,?_printf+3
 10463  002FBE  EC2E  F01E         	call	_printf	;wreg free
 10464  002FC2                     
 10465                           ;Modbus.c: 385:     for(i=0; i< MBResCnt ; i++ ){
 10466  002FC2  0E00               	movlw	0
 10467  002FC4  0100               	movlb	0	; () banked
 10468  002FC6  6F8A               	movwf	(PrintModRespon@i+1)& (0+255),b
 10469  002FC8  0E00               	movlw	0
 10470  002FCA  6F89               	movwf	PrintModRespon@i& (0+255),b
 10471  002FCC  EF15  F018         	goto	l6639
 10472  002FD0                     l6631:
 10473  002FD0  ECBF  F01E         	call	_EUSART2_is_tx_ready	;wreg free
 10474  002FD4  0900               	iorlw	0
 10475  002FD6  B4D8               	btfsc	status,2,c
 10476  002FD8  EFF0  F017         	goto	u6811
 10477  002FDC  EFF2  F017         	goto	u6810
 10478  002FE0                     u6811:
 10479  002FE0  EFE8  F017         	goto	l6631
 10480  002FE4                     u6810:
 10481  002FE4                     
 10482                           ;Modbus.c: 387:         printf("   Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
 10483  002FE4  0E2B               	movlw	low STR_23
 10484  002FE6  0100               	movlb	0	; () banked
 10485  002FE8  6F7D               	movwf	printf@fmt& (0+255),b
 10486  002FEA  0EFE               	movlw	high STR_23
 10487  002FEC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10488  002FEE  C089  F07F         	movff	PrintModRespon@i,?_printf+2
 10489  002FF2  C08A  F080         	movff	PrintModRespon@i+1,?_printf+3
 10490  002FF6  0EAB               	movlw	low _MBRespon
 10491  002FF8  2589               	addwf	PrintModRespon@i& (0+255),w,b
 10492  002FFA  6ED9               	movwf	fsr2l,c
 10493  002FFC  0E02               	movlw	high _MBRespon
 10494  002FFE  218A               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10495  003000  6EDA               	movwf	fsr2h,c
 10496  003002  50DF               	movf	indf2,w,c
 10497  003004  6E55               	movwf	??_PrintModRespon^0,c
 10498  003006  5055               	movf	??_PrintModRespon^0,w,c
 10499  003008  6F81               	movwf	(?_printf+4)& (0+255),b
 10500  00300A  6B82               	clrf	(?_printf+5)& (0+255),b
 10501  00300C  EC2E  F01E         	call	_printf	;wreg free
 10502  003010                     l6635:
 10503  003010  ECCB  F01E         	call	_EUSART2_is_tx_done	;wreg free
 10504  003014  0900               	iorlw	0
 10505  003016  B4D8               	btfsc	status,2,c
 10506  003018  EF10  F018         	goto	u6821
 10507  00301C  EF12  F018         	goto	u6820
 10508  003020                     u6821:
 10509  003020  EF08  F018         	goto	l6635
 10510  003024                     u6820:
 10511  003024                     
 10512                           ;Modbus.c: 389:     }
 10513  003024  0100               	movlb	0	; () banked
 10514  003026  4B89               	infsnz	PrintModRespon@i& (0+255),f,b
 10515  003028  2B8A               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10516  00302A                     l6639:
 10517                           
 10518                           ; BSR set to: 0
 10519  00302A  51B2               	movf	_MBResCnt& (0+255),w,b
 10520  00302C  5D89               	subwf	PrintModRespon@i& (0+255),w,b
 10521  00302E  518A               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10522  003030  0A80               	xorlw	128
 10523  003032  6E55               	movwf	??_PrintModRespon^0,c
 10524  003034  51B3               	movf	(_MBResCnt+1)& (0+255),w,b
 10525  003036  0A80               	xorlw	128
 10526  003038  5855               	subwfb	??_PrintModRespon^0,w,c
 10527  00303A  A0D8               	btfss	status,0,c
 10528  00303C  EF22  F018         	goto	u6831
 10529  003040  EF24  F018         	goto	u6830
 10530  003044                     u6831:
 10531  003044  EFE8  F017         	goto	l6631
 10532  003048                     u6830:
 10533  003048                     
 10534                           ; BSR set to: 0
 10535                           ;Modbus.c: 391:     printf("\r\n\n");
 10536  003048  0EBC               	movlw	low (STR_58+71)
 10537  00304A  6F7D               	movwf	printf@fmt& (0+255),b
 10538  00304C  0EF8               	movlw	high (STR_58+71)
 10539  00304E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10540  003050  EC2E  F01E         	call	_printf	;wreg free
 10541  003054  0012               	return		;funcret
 10542  003056                     __end_of_PrintModRespon:
 10543                           	opt callstack 0
 10544                           
 10545 ;; *************** function _printf *****************
 10546 ;; Defined at:
 10547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 10550 ;;		 -> STR_75(12), STR_73(13), STR_72(17), STR_71(15), 
 10551 ;;		 -> STR_70(33), STR_68(38), STR_67(58), STR_66(17), 
 10552 ;;		 -> STR_65(16), STR_64(4), STR_63(32), STR_62(33), 
 10553 ;;		 -> STR_61(37), STR_60(44), STR_59(22), STR_58(75), 
 10554 ;;		 -> STR_57(53), STR_56(57), STR_55(54), STR_54(50), 
 10555 ;;		 -> STR_53(50), STR_52(40), STR_51(30), STR_50(43), 
 10556 ;;		 -> STR_49(73), STR_48(42), STR_47(36), STR_46(34), 
 10557 ;;		 -> STR_43(42), STR_42(22), STR_41(21), STR_40(20), 
 10558 ;;		 -> STR_39(19), STR_38(40), STR_28(32), STR_27(37), 
 10559 ;;		 -> STR_26(16), STR_25(24), STR_24(4), STR_23(25), 
 10560 ;;		 -> STR_22(28), STR_21(29), STR_20(26), STR_19(26), 
 10561 ;;		 -> STR_18(26), STR_17(24), STR_16(22), STR_15(22), 
 10562 ;;		 -> STR_14(26), STR_13(36), STR_12(4), STR_11(23), 
 10563 ;;		 -> STR_10(34), STR_9(28), STR_8(54), STR_7(27), 
 10564 ;;		 -> STR_6(16), STR_4(19), STR_3(28), STR_2(31), 
 10565 ;;		 -> STR_1(21), 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  ap              2   39[BANK0 ] PTR void [1]
 10568 ;;		 -> ?_printf(2), 
 10569 ;;  ret             2    0        int 
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  2   29[BANK0 ] int 
 10572 ;; Registers used:
 10573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10579 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;Total ram usage:       12 bytes
 10584 ;; Hardware stack levels used:    1
 10585 ;; Hardware stack levels required when called:   12
 10586 ;; This function calls:
 10587 ;;		_vfprintf
 10588 ;; This function is called by:
 10589 ;;		_main
 10590 ;;		_PrintMB400
 10591 ;;		_AddRxBuffToModBus
 10592 ;;		_PrintModbus
 10593 ;;		_checkCRC
 10594 ;;		_ModbusFC03
 10595 ;;		_PrintModRespon
 10596 ;;		_ModbusRx
 10597 ;;		_InitialiseString
 10598 ;;		_ReadRX232
 10599 ;;		_TogDebug
 10600 ;;		_ClearEEAddRange
 10601 ;;		_SaveCardDat
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text52
 10606  003C5C                     __ptext52:
 10607                           	opt callstack 0
 10608  003C5C                     _printf:
 10609                           	opt callstack 18
 10610  003C5C  0E7F               	movlw	low (?_printf+2)
 10611  003C5E  0100               	movlb	0	; () banked
 10612  003C60  6F87               	movwf	printf@ap& (0+255),b
 10613  003C62  0E00               	movlw	high (?_printf+2)
 10614  003C64  6F88               	movwf	(printf@ap+1)& (0+255),b
 10615  003C66                     
 10616                           ; BSR set to: 0
 10617  003C66  0E00               	movlw	0
 10618  003C68  6F77               	movwf	vfprintf@fp& (0+255),b
 10619  003C6A  0E00               	movlw	0
 10620  003C6C  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 10621  003C6E  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 10622  003C72  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 10623  003C76  0E87               	movlw	low printf@ap
 10624  003C78  6F7B               	movwf	vfprintf@ap& (0+255),b
 10625  003C7A  0E00               	movlw	high printf@ap
 10626  003C7C  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 10627  003C7E  EC1F  F01A         	call	_vfprintf	;wreg free
 10628  003C82  0012               	return		;funcret
 10629  003C84                     __end_of_printf:
 10630                           	opt callstack 0
 10631                           
 10632 ;; *************** function _vfprintf *****************
 10633 ;; Defined at:
 10634 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 10637 ;;		 -> NULL(0), 
 10638 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 10639 ;;		 -> STR_75(12), STR_73(13), STR_72(17), STR_71(15), 
 10640 ;;		 -> STR_70(33), STR_68(38), STR_67(58), STR_66(17), 
 10641 ;;		 -> STR_65(16), STR_64(4), STR_63(32), STR_62(33), 
 10642 ;;		 -> STR_61(37), STR_60(44), STR_59(22), STR_58(75), 
 10643 ;;		 -> STR_57(53), STR_56(57), STR_55(54), STR_54(50), 
 10644 ;;		 -> STR_53(50), STR_52(40), STR_51(30), STR_50(43), 
 10645 ;;		 -> STR_49(73), STR_48(42), STR_47(36), STR_46(34), 
 10646 ;;		 -> STR_43(42), STR_42(22), STR_41(21), STR_40(20), 
 10647 ;;		 -> STR_39(19), STR_38(40), STR_28(32), STR_27(37), 
 10648 ;;		 -> STR_26(16), STR_25(24), STR_24(4), STR_23(25), 
 10649 ;;		 -> STR_22(28), STR_21(29), STR_20(26), STR_19(26), 
 10650 ;;		 -> STR_18(26), STR_17(24), STR_16(22), STR_15(22), 
 10651 ;;		 -> STR_14(26), STR_13(36), STR_12(4), STR_11(23), 
 10652 ;;		 -> STR_10(34), STR_9(28), STR_8(54), STR_7(27), 
 10653 ;;		 -> STR_6(16), STR_4(19), STR_3(28), STR_2(31), 
 10654 ;;		 -> STR_1(21), 
 10655 ;;  ap              2   27[BANK0 ] PTR PTR void 
 10656 ;;		 -> printf@ap(2), 
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 10659 ;;		 -> STR_75(12), STR_73(13), STR_72(17), STR_71(15), 
 10660 ;;		 -> STR_70(33), STR_68(38), STR_67(58), STR_66(17), 
 10661 ;;		 -> STR_65(16), STR_64(4), STR_63(32), STR_62(33), 
 10662 ;;		 -> STR_61(37), STR_60(44), STR_59(22), STR_58(75), 
 10663 ;;		 -> STR_57(53), STR_56(57), STR_55(54), STR_54(50), 
 10664 ;;		 -> STR_53(50), STR_52(40), STR_51(30), STR_50(43), 
 10665 ;;		 -> STR_49(73), STR_48(42), STR_47(36), STR_46(34), 
 10666 ;;		 -> STR_43(42), STR_42(22), STR_41(21), STR_40(20), 
 10667 ;;		 -> STR_39(19), STR_38(40), STR_28(32), STR_27(37), 
 10668 ;;		 -> STR_26(16), STR_25(24), STR_24(4), STR_23(25), 
 10669 ;;		 -> STR_22(28), STR_21(29), STR_20(26), STR_19(26), 
 10670 ;;		 -> STR_18(26), STR_17(24), STR_16(22), STR_15(22), 
 10671 ;;		 -> STR_14(26), STR_13(36), STR_12(4), STR_11(23), 
 10672 ;;		 -> STR_10(34), STR_9(28), STR_8(54), STR_7(27), 
 10673 ;;		 -> STR_6(16), STR_4(19), STR_3(28), STR_2(31), 
 10674 ;;		 -> STR_1(21), 
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  2   23[BANK0 ] int 
 10677 ;; Registers used:
 10678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10684 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10687 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10688 ;;Total ram usage:        8 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; Hardware stack levels required when called:   11
 10691 ;; This function calls:
 10692 ;;		_vfpfcnvrt
 10693 ;; This function is called by:
 10694 ;;		_printf
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           
 10698                           	psect	text53
 10699  00343E                     __ptext53:
 10700                           	opt callstack 0
 10701  00343E                     _vfprintf:
 10702                           	opt callstack 18
 10703  00343E                     
 10704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10705  00343E  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 10706  003442  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10707  003446                     
 10708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10709  003446  0E00               	movlw	0
 10710  003448  0101               	movlb	1	; () banked
 10711  00344A  6F3C               	movwf	(_nout+1)& (0+255),b
 10712  00344C  0E00               	movlw	0
 10713  00344E  6F3B               	movwf	_nout& (0+255),b
 10714                           
 10715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10716  003450  EF3D  F01A         	goto	l6361
 10717  003454                     l6359:
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10721  003454  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 10722  003458  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10723  00345C  0E53               	movlw	low vfprintf@cfmt
 10724  00345E  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 10725  003460  0E00               	movlw	high vfprintf@cfmt
 10726  003462  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 10727  003464  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 10728  003468  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10729  00346C  EC95  F000         	call	_vfpfcnvrt	;wreg free
 10730  003470  5049               	movf	?_vfpfcnvrt^0,w,c
 10731  003472  0101               	movlb	1	; () banked
 10732  003474  273B               	addwf	_nout& (0+255),f,b
 10733  003476  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 10734  003478  233C               	addwfc	(_nout+1)& (0+255),f,b
 10735  00347A                     l6361:
 10736                           
 10737                           ; BSR set to: 1
 10738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10739  00347A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 10740  00347E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10741  003482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10742  003482  6AF8               	clrf	tblptru,c
 10743  003484                     	endif
 10744  003484                     	if	0	;tblptru may be non-zero
 10745  003484                     	endif
 10746  003484  0008               	tblrd		*
 10747  003486  50F5               	movf	tablat,w,c
 10748  003488  0900               	iorlw	0
 10749  00348A  A4D8               	btfss	status,2,c
 10750  00348C  EF4A  F01A         	goto	u6421
 10751  003490  EF4C  F01A         	goto	u6420
 10752  003494                     u6421:
 10753  003494  EF2A  F01A         	goto	l6359
 10754  003498                     u6420:
 10755  003498                     
 10756                           ; BSR set to: 1
 10757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10758  003498  C13B  F077         	movff	_nout,?_vfprintf
 10759  00349C  C13C  F078         	movff	_nout+1,?_vfprintf+1
 10760  0034A0                     
 10761                           ; BSR set to: 1
 10762  0034A0  0012               	return		;funcret
 10763  0034A2                     __end_of_vfprintf:
 10764                           	opt callstack 0
 10765                           
 10766 ;; *************** function _vfpfcnvrt *****************
 10767 ;; Defined at:
 10768 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 10771 ;;		 -> NULL(0), 
 10772 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 10773 ;;		 -> vfprintf@cfmt(2), 
 10774 ;;  ap              2   76[COMRAM] PTR PTR void 
 10775 ;;		 -> printf@ap(2), 
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  llu             8   15[BANK0 ] unsigned long long 
 10778 ;;  ll              8    0[BANK0 ] long long 
 10779 ;;  f               4    0        long long 
 10780 ;;  vp              3    0        PTR void 
 10781 ;;  ct              3    0        unsigned char [3]
 10782 ;;  done            2   11[BANK0 ] int 
 10783 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 10784 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1474(20), ValidateCmd@ConfName_1470(20), ValidateCmd@ConfName(20), 
 10785 ;;		 -> STR_45(9), STR_44(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 10786 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 10787 ;;  i               2    0        int 
 10788 ;;  c               1   10[BANK0 ] unsigned char 
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  2   72[COMRAM] int 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10798 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10799 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10801 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10802 ;;Total ram usage:       33 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:   10
 10805 ;; This function calls:
 10806 ;;		_atoi
 10807 ;;		_dtoa
 10808 ;;		_fputc
 10809 ;;		_isdigit
 10810 ;;		_stoa
 10811 ;;		_utoa
 10812 ;;		_xtoa
 10813 ;; This function is called by:
 10814 ;;		_vfprintf
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818                           	psect	text54
 10819  00012A                     __ptext54:
 10820                           	opt callstack 0
 10821  00012A                     _vfpfcnvrt:
 10822                           	opt callstack 18
 10823  00012A                     
 10824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10825  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10826  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10827  000132  CFDE FFF6          	movff	postinc2,tblptrl
 10828  000136  CFDD FFF7          	movff	postdec2,tblptrh
 10829  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10830  00013A  6AF8               	clrf	tblptru,c
 10831  00013C                     	endif
 10832  00013C                     	if	0	;tblptru may be non-zero
 10833  00013C                     	endif
 10834  00013C  0008               	tblrd		*
 10835  00013E  50F5               	movf	tablat,w,c
 10836  000140  0A25               	xorlw	37
 10837  000142  A4D8               	btfss	status,2,c
 10838  000144  EFA6  F000         	goto	u6251
 10839  000148  EFA8  F000         	goto	u6250
 10840  00014C                     u6251:
 10841  00014C  EF3D  F003         	goto	l6333
 10842  000150                     u6250:
 10843  000150                     
 10844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10845  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10846  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10847  000158  2ADE               	incf	postinc2,f,c
 10848  00015A  0E00               	movlw	0
 10849  00015C  22DD               	addwfc	postdec2,f,c
 10850  00015E                     
 10851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10852  00015E  0E00               	movlw	0
 10853  000160  0100               	movlb	0	; () banked
 10854  000162  6FAD               	movwf	(_width+1)& (0+255),b
 10855  000164  0E00               	movlw	0
 10856  000166  6FAC               	movwf	_width& (0+255),b
 10857  000168  C0AC  F057         	movff	_width,_flags
 10858  00016C  C0AD  F058         	movff	_width+1,_flags+1
 10859  000170                     
 10860                           ; BSR set to: 0
 10861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10862  000170  69AE               	setf	_prec& (0+255),b
 10863  000172  69AF               	setf	(_prec+1)& (0+255),b
 10864  000174                     
 10865                           ; BSR set to: 0
 10866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10867  000174  0E00               	movlw	0
 10868  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10869  000178  0E00               	movlw	0
 10870  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 10871                           
 10872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10873  00017C  EF07  F001         	goto	l6255
 10874  000180                     l6229:
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10878  000180  8057               	bsf	_flags^0,0,c
 10879  000182                     l6231:
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10883  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10884  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10885  00018A  2ADE               	incf	postinc2,f,c
 10886  00018C  0E00               	movlw	0
 10887  00018E  22DD               	addwfc	postdec2,f,c
 10888                           
 10889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10890  000190  EF07  F001         	goto	l6255
 10891  000194                     l6233:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10895  000194  8257               	bsf	_flags^0,1,c
 10896  000196  EFC1  F000         	goto	l6231
 10897  00019A                     l6237:
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10901  00019A  8457               	bsf	_flags^0,2,c
 10902  00019C  EFC1  F000         	goto	l6231
 10903  0001A0                     l6241:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10907  0001A0  8657               	bsf	_flags^0,3,c
 10908  0001A2  EFC1  F000         	goto	l6231
 10909  0001A6                     l6245:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10913  0001A6  8857               	bsf	_flags^0,4,c
 10914  0001A8  EFC1  F000         	goto	l6231
 10915  0001AC                     l6249:
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10919  0001AC  0E00               	movlw	0
 10920  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10921  0001B0  0E01               	movlw	1
 10922  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 10923                           
 10924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10925  0001B4  EF07  F001         	goto	l6255
 10926  0001B8                     l6253:
 10927                           
 10928                           ; BSR set to: 0
 10929  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10930  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10931  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
 10932  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
 10933  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10934  0001C8  6AF8               	clrf	tblptru,c
 10935  0001CA                     	endif
 10936  0001CA                     	if	0	;tblptru may be non-zero
 10937  0001CA                     	endif
 10938  0001CA  0008               	tblrd		*
 10939  0001CC  50F5               	movf	tablat,w,c
 10940  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
 10941  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 10942                           
 10943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10944                           ; Switch size 1, requested type "simple"
 10945                           ; Number of cases is 1, Range of values is 0 to 0
 10946                           ; switch strategies available:
 10947                           ; Name         Instructions Cycles
 10948                           ; simple_byte            4     3 (average)
 10949                           ;	Chosen strategy is simple_byte
 10950  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 10951  0001D4  0A00               	xorlw	0	; case 0
 10952  0001D6  B4D8               	btfsc	status,2,c
 10953  0001D8  EFF0  F000         	goto	l7289
 10954  0001DC  EFD6  F000         	goto	l6249
 10955  0001E0                     l7289:
 10956                           
 10957                           ; BSR set to: 0
 10958                           ; Switch size 1, requested type "simple"
 10959                           ; Number of cases is 5, Range of values is 32 to 48
 10960                           ; switch strategies available:
 10961                           ; Name         Instructions Cycles
 10962                           ; simple_byte           16     9 (average)
 10963                           ;	Chosen strategy is simple_byte
 10964  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
 10965  0001E2  0A20               	xorlw	32	; case 32
 10966  0001E4  B4D8               	btfsc	status,2,c
 10967  0001E6  EFD0  F000         	goto	l6241
 10968  0001EA  0A03               	xorlw	3	; case 35
 10969  0001EC  B4D8               	btfsc	status,2,c
 10970  0001EE  EFD3  F000         	goto	l6245
 10971  0001F2  0A08               	xorlw	8	; case 43
 10972  0001F4  B4D8               	btfsc	status,2,c
 10973  0001F6  EFCD  F000         	goto	l6237
 10974  0001FA  0A06               	xorlw	6	; case 45
 10975  0001FC  B4D8               	btfsc	status,2,c
 10976  0001FE  EFC0  F000         	goto	l6229
 10977  000202  0A1D               	xorlw	29	; case 48
 10978  000204  B4D8               	btfsc	status,2,c
 10979  000206  EFCA  F000         	goto	l6233
 10980  00020A  EFD6  F000         	goto	l6249
 10981  00020E                     l6255:
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10985  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 10986  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10987  000212  B4D8               	btfsc	status,2,c
 10988  000214  EF0E  F001         	goto	u6261
 10989  000218  EF10  F001         	goto	u6260
 10990  00021C                     u6261:
 10991  00021C  EFDC  F000         	goto	l6253
 10992  000220                     u6260:
 10993  000220                     
 10994                           ; BSR set to: 0
 10995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 10996  000220  A057               	btfss	_flags^0,0,c
 10997  000222  EF15  F001         	goto	u6271
 10998  000226  EF17  F001         	goto	u6270
 10999  00022A                     u6271:
 11000  00022A  EF18  F001         	goto	l6259
 11001  00022E                     u6270:
 11002  00022E                     
 11003                           ; BSR set to: 0
 11004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 11005  00022E  9257               	bcf	_flags^0,1,c
 11006  000230                     l6259:
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 11010  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11011  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11012  000238  CFDE FFF6          	movff	postinc2,tblptrl
 11013  00023C  CFDD FFF7          	movff	postdec2,tblptrh
 11014  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11015  000240  6AF8               	clrf	tblptru,c
 11016  000242                     	endif
 11017  000242                     	if	0	;tblptru may be non-zero
 11018  000242                     	endif
 11019  000242  0008               	tblrd		*
 11020  000244  50F5               	movf	tablat,w,c
 11021  000246  0A2A               	xorlw	42
 11022  000248  A4D8               	btfss	status,2,c
 11023  00024A  EF29  F001         	goto	u6281
 11024  00024E  EF2B  F001         	goto	u6280
 11025  000252                     u6281:
 11026  000252  EF54  F001         	goto	l6267
 11027  000256                     u6280:
 11028  000256                     
 11029                           ; BSR set to: 0
 11030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 11031  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11032  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11033  00025E  2ADE               	incf	postinc2,f,c
 11034  000260  0E00               	movlw	0
 11035  000262  22DD               	addwfc	postdec2,f,c
 11036                           
 11037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11038  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11039  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11040  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11041  000270  0E02               	movlw	2
 11042  000272  26DE               	addwf	postinc2,f,c
 11043  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11044  000278  0E00               	movlw	0
 11045  00027A  22DD               	addwfc	postdec2,f,c
 11046  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11047  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11048  000284  CFDE F0AC          	movff	postinc2,_width
 11049  000288  CFDD F0AD          	movff	postdec2,_width+1
 11050  00028C                     
 11051                           ; BSR set to: 0
 11052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 11053  00028C  BFAD               	btfsc	(_width+1)& (0+255),7,b
 11054  00028E  EF4D  F001         	goto	u6290
 11055  000292  EF4B  F001         	goto	u6291
 11056  000296                     u6291:
 11057  000296  EF99  F001         	goto	l6277
 11058  00029A                     u6290:
 11059  00029A                     
 11060                           ; BSR set to: 0
 11061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 11062  00029A  8057               	bsf	_flags^0,0,c
 11063                           
 11064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 11065  00029C  6DAC               	negf	_width& (0+255),b
 11066  00029E  1FAD               	comf	(_width+1)& (0+255),f,b
 11067  0002A0  B0D8               	btfsc	status,0,c
 11068  0002A2  2BAD               	incf	(_width+1)& (0+255),f,b
 11069  0002A4  EF99  F001         	goto	l6277
 11070  0002A8                     l6267:
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 11074  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11075  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11076  0002B0  CFDE F00C          	movff	postinc2,atoi@s
 11077  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
 11078  0002B8  EC8E  F00E         	call	_atoi	;wreg free
 11079  0002BC  C00C  F0AC         	movff	?_atoi,_width
 11080  0002C0  C00D  F0AD         	movff	?_atoi+1,_width+1
 11081                           
 11082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11083  0002C4  EF6B  F001         	goto	l6271
 11084  0002C8                     l6269:
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11088  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11089  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11090  0002D0  2ADE               	incf	postinc2,f,c
 11091  0002D2  0E00               	movlw	0
 11092  0002D4  22DD               	addwfc	postdec2,f,c
 11093  0002D6                     l6271:
 11094  0002D6  0ED0               	movlw	208
 11095  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
 11096  0002DA  0EFF               	movlw	255
 11097  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 11098  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11099  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11100  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
 11101  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
 11102  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11103  0002EE  6AF8               	clrf	tblptru,c
 11104  0002F0                     	endif
 11105  0002F0                     	if	0	;tblptru may be non-zero
 11106  0002F0                     	endif
 11107  0002F0  0008               	tblrd		*
 11108  0002F2  50F5               	movf	tablat,w,c
 11109  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 11110  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 11111  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
 11112  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11113  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11114  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11115  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 11116  000302  E10A               	bnz	u6300
 11117  000304  0E0A               	movlw	10
 11118  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11119  000308  A0D8               	btfss	status,0,c
 11120  00030A  EF89  F001         	goto	u6301
 11121  00030E  EF8C  F001         	goto	u6300
 11122  000312                     u6301:
 11123  000312  0E01               	movlw	1
 11124  000314  EF8D  F001         	goto	u6310
 11125  000318                     u6300:
 11126  000318  0E00               	movlw	0
 11127  00031A                     u6310:
 11128  00031A  0100               	movlb	0	; () banked
 11129  00031C  6F6D               	movwf	_vfpfcnvrt$1596& (0+255),b
 11130  00031E  6B6E               	clrf	(_vfpfcnvrt$1596+1)& (0+255),b
 11131  000320                     
 11132                           ; BSR set to: 0
 11133  000320  516D               	movf	_vfpfcnvrt$1596& (0+255),w,b
 11134  000322  116E               	iorwf	(_vfpfcnvrt$1596+1)& (0+255),w,b
 11135  000324  A4D8               	btfss	status,2,c
 11136  000326  EF97  F001         	goto	u6321
 11137  00032A  EF99  F001         	goto	u6320
 11138  00032E                     u6321:
 11139  00032E  EF64  F001         	goto	l6269
 11140  000332                     u6320:
 11141  000332                     l6277:
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11145  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11146  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11147  00033A  CFDE FFF6          	movff	postinc2,tblptrl
 11148  00033E  CFDD FFF7          	movff	postdec2,tblptrh
 11149  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11150  000342  6AF8               	clrf	tblptru,c
 11151  000344                     	endif
 11152  000344                     	if	0	;tblptru may be non-zero
 11153  000344                     	endif
 11154  000344  0008               	tblrd		*
 11155  000346  50F5               	movf	tablat,w,c
 11156  000348  0A64               	xorlw	100
 11157  00034A  B4D8               	btfsc	status,2,c
 11158  00034C  EFAA  F001         	goto	u6331
 11159  000350  EFAC  F001         	goto	u6330
 11160  000354                     u6331:
 11161  000354  EFBF  F001         	goto	l6281
 11162  000358                     u6330:
 11163  000358                     
 11164                           ; BSR set to: 0
 11165  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11166  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11167  000360  CFDE FFF6          	movff	postinc2,tblptrl
 11168  000364  CFDD FFF7          	movff	postdec2,tblptrh
 11169  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11170  000368  6AF8               	clrf	tblptru,c
 11171  00036A                     	endif
 11172  00036A                     	if	0	;tblptru may be non-zero
 11173  00036A                     	endif
 11174  00036A  0008               	tblrd		*
 11175  00036C  50F5               	movf	tablat,w,c
 11176  00036E  0A69               	xorlw	105
 11177  000370  A4D8               	btfss	status,2,c
 11178  000372  EFBD  F001         	goto	u6341
 11179  000376  EFBF  F001         	goto	u6340
 11180  00037A                     u6341:
 11181  00037A  EFFF  F001         	goto	l6287
 11182  00037E                     u6340:
 11183  00037E                     l6281:
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11187  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11188  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11189  000386  2ADE               	incf	postinc2,f,c
 11190  000388  0E00               	movlw	0
 11191  00038A  22DD               	addwfc	postdec2,f,c
 11192                           
 11193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11194  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11195  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11196  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11197  000398  0E02               	movlw	2
 11198  00039A  26DE               	addwf	postinc2,f,c
 11199  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11200  0003A0  0E00               	movlw	0
 11201  0003A2  22DD               	addwfc	postdec2,f,c
 11202  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11203  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11204  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 11205  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 11206  0003B4  0E00               	movlw	0
 11207  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 11208  0003B8  0EFF               	movlw	-1
 11209  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 11210  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 11211  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 11212  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 11213  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 11214  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 11215  0003C6                     
 11216                           ; BSR set to: 0
 11217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11218  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 11219  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11220  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 11221  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11222  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11223  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11224  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11225  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11226  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11227  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11228  0003EE  EC46  F005         	call	_dtoa	;wreg free
 11229  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 11230  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11231  0003FA  EF59  F003         	goto	l1120
 11232  0003FE                     l6287:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 11236  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11237  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11238  000406  CFDE FFF6          	movff	postinc2,tblptrl
 11239  00040A  CFDD FFF7          	movff	postdec2,tblptrh
 11240  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11241  00040E  6AF8               	clrf	tblptru,c
 11242  000410                     	endif
 11243  000410                     	if	0	;tblptru may be non-zero
 11244  000410                     	endif
 11245  000410  0008               	tblrd		*
 11246  000412  50F5               	movf	tablat,w,c
 11247  000414  0A73               	xorlw	115
 11248  000416  A4D8               	btfss	status,2,c
 11249  000418  EF10  F002         	goto	u6351
 11250  00041C  EF12  F002         	goto	u6350
 11251  000420                     u6351:
 11252  000420  EF3D  F002         	goto	l6295
 11253  000424                     u6350:
 11254  000424                     
 11255                           ; BSR set to: 0
 11256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 11257  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11258  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11259  00042C  2ADE               	incf	postinc2,f,c
 11260  00042E  0E00               	movlw	0
 11261  000430  22DD               	addwfc	postdec2,f,c
 11262                           
 11263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11264  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11265  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11266  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11267  00043E  0E02               	movlw	2
 11268  000440  26DE               	addwf	postinc2,f,c
 11269  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11270  000446  0E00               	movlw	0
 11271  000448  22DD               	addwfc	postdec2,f,c
 11272  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11273  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11274  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 11275  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 11276  00045A                     
 11277                           ; BSR set to: 0
 11278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 11279  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 11280  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11281  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 11282  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 11283  00046A  ECC1  F00D         	call	_stoa	;wreg free
 11284  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 11285  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 11286  000476  EF59  F003         	goto	l1120
 11287  00047A                     l6295:
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11291  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11292  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11293  000482  CFDE FFF6          	movff	postinc2,tblptrl
 11294  000486  CFDD FFF7          	movff	postdec2,tblptrh
 11295  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11296  00048A  6AF8               	clrf	tblptru,c
 11297  00048C                     	endif
 11298  00048C                     	if	0	;tblptru may be non-zero
 11299  00048C                     	endif
 11300  00048C  0008               	tblrd		*
 11301  00048E  50F5               	movf	tablat,w,c
 11302  000490  0A75               	xorlw	117
 11303  000492  A4D8               	btfss	status,2,c
 11304  000494  EF4E  F002         	goto	u6361
 11305  000498  EF50  F002         	goto	u6360
 11306  00049C                     u6361:
 11307  00049C  EF91  F002         	goto	l6303
 11308  0004A0                     u6360:
 11309  0004A0                     
 11310                           ; BSR set to: 0
 11311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11312  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11313  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11314  0004A8  2ADE               	incf	postinc2,f,c
 11315  0004AA  0E00               	movlw	0
 11316  0004AC  22DD               	addwfc	postdec2,f,c
 11317                           
 11318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11319  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11320  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11321  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11322  0004BA  0E02               	movlw	2
 11323  0004BC  26DE               	addwf	postinc2,f,c
 11324  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11325  0004C2  0E00               	movlw	0
 11326  0004C4  22DD               	addwfc	postdec2,f,c
 11327  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11328  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11329  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 11330  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 11331  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11332  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11333  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11334  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11335  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11336  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11337  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11338  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11339  0004EA                     
 11340                           ; BSR set to: 0
 11341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11342  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 11343  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11344  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 11345  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 11346  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 11347  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 11348  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 11349  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 11350  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 11351  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 11352  000512  EC33  F009         	call	_utoa	;wreg free
 11353  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 11354  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 11355  00051E  EF59  F003         	goto	l1120
 11356  000522                     l6303:
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11360  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11361  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11362  00052A  CFDE FFF6          	movff	postinc2,tblptrl
 11363  00052E  CFDD FFF7          	movff	postdec2,tblptrh
 11364  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11365  000532  6AF8               	clrf	tblptru,c
 11366  000534                     	endif
 11367  000534                     	if	0	;tblptru may be non-zero
 11368  000534                     	endif
 11369  000534  0008               	tblrd		*
 11370  000536  50F5               	movf	tablat,w,c
 11371  000538  0A78               	xorlw	120
 11372  00053A  B4D8               	btfsc	status,2,c
 11373  00053C  EFA2  F002         	goto	u6371
 11374  000540  EFA4  F002         	goto	u6370
 11375  000544                     u6371:
 11376  000544  EFB7  F002         	goto	l6307
 11377  000548                     u6370:
 11378  000548                     
 11379                           ; BSR set to: 0
 11380  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11381  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11382  000550  CFDE FFF6          	movff	postinc2,tblptrl
 11383  000554  CFDD FFF7          	movff	postdec2,tblptrh
 11384  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11385  000558  6AF8               	clrf	tblptru,c
 11386  00055A                     	endif
 11387  00055A                     	if	0	;tblptru may be non-zero
 11388  00055A                     	endif
 11389  00055A  0008               	tblrd		*
 11390  00055C  50F5               	movf	tablat,w,c
 11391  00055E  0A58               	xorlw	88
 11392  000560  A4D8               	btfss	status,2,c
 11393  000562  EFB5  F002         	goto	u6381
 11394  000566  EFB7  F002         	goto	u6380
 11395  00056A                     u6381:
 11396  00056A  EF06  F003         	goto	l6317
 11397  00056E                     u6380:
 11398  00056E                     l6307:
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11402  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11403  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11404  000576  CFDE FFF6          	movff	postinc2,tblptrl
 11405  00057A  CFDD FFF7          	movff	postdec2,tblptrh
 11406  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11407  00057E  6AF8               	clrf	tblptru,c
 11408  000580                     	endif
 11409  000580                     	if	0	;tblptru may be non-zero
 11410  000580                     	endif
 11411  000580  0008               	tblrd		*
 11412  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 11413  000586                     
 11414                           ; BSR set to: 0
 11415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11416  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11417  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11418  00058E  2ADE               	incf	postinc2,f,c
 11419  000590  0E00               	movlw	0
 11420  000592  22DD               	addwfc	postdec2,f,c
 11421  000594                     
 11422                           ; BSR set to: 0
 11423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11424  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11425  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11426  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11427  0005A0  0E02               	movlw	2
 11428  0005A2  26DE               	addwf	postinc2,f,c
 11429  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11430  0005A8  0E00               	movlw	0
 11431  0005AA  22DD               	addwfc	postdec2,f,c
 11432  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11433  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11434  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 11435  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 11436  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11437  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11438  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11439  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11440  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11441  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11442  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11443  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11444  0005D0                     
 11445                           ; BSR set to: 0
 11446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11447  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 11448  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11449  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 11450  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11451  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11452  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11453  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11454  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11455  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11456  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11457  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 11458  0005FC  ECB6  F006         	call	_xtoa	;wreg free
 11459  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 11460  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11461  000608  EF59  F003         	goto	l1120
 11462  00060C                     l6317:
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11466  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11467  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11468  000614  CFDE FFF6          	movff	postinc2,tblptrl
 11469  000618  CFDD FFF7          	movff	postdec2,tblptrh
 11470  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11471  00061C  6AF8               	clrf	tblptru,c
 11472  00061E                     	endif
 11473  00061E                     	if	0	;tblptru may be non-zero
 11474  00061E                     	endif
 11475  00061E  0008               	tblrd		*
 11476  000620  50F5               	movf	tablat,w,c
 11477  000622  0A25               	xorlw	37
 11478  000624  A4D8               	btfss	status,2,c
 11479  000626  EF17  F003         	goto	u6391
 11480  00062A  EF19  F003         	goto	u6390
 11481  00062E                     u6391:
 11482  00062E  EF30  F003         	goto	l6327
 11483  000632                     u6390:
 11484  000632                     
 11485                           ; BSR set to: 0
 11486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11487  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11488  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11489  00063A  2ADE               	incf	postinc2,f,c
 11490  00063C  0E00               	movlw	0
 11491  00063E  22DD               	addwfc	postdec2,f,c
 11492  000640                     
 11493                           ; BSR set to: 0
 11494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11495  000640  0E00               	movlw	0
 11496  000642  6E08               	movwf	(fputc@c+1)^0,c
 11497  000644  0E25               	movlw	37
 11498  000646  6E07               	movwf	fputc@c^0,c
 11499  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 11500  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11501  000650  EC2B  F018         	call	_fputc	;wreg free
 11502  000654                     l6323:
 11503                           
 11504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11505  000654  0E00               	movlw	0
 11506  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 11507  000658  0E01               	movlw	1
 11508  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
 11509  00065C  EF59  F003         	goto	l1120
 11510  000660                     l6327:
 11511                           
 11512                           ; BSR set to: 0
 11513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11514  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11515  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11516  000668  2ADE               	incf	postinc2,f,c
 11517  00066A  0E00               	movlw	0
 11518  00066C  22DD               	addwfc	postdec2,f,c
 11519  00066E                     
 11520                           ; BSR set to: 0
 11521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11522  00066E  0E00               	movlw	0
 11523  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 11524  000672  0E00               	movlw	0
 11525  000674  6E49               	movwf	?_vfpfcnvrt^0,c
 11526  000676  EF59  F003         	goto	l1120
 11527  00067A                     l6333:
 11528                           
 11529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11530  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11531  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11532  000682  CFDE FFF6          	movff	postinc2,tblptrl
 11533  000686  CFDD FFF7          	movff	postdec2,tblptrh
 11534  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11535  00068A  6AF8               	clrf	tblptru,c
 11536  00068C                     	endif
 11537  00068C                     	if	0	;tblptru may be non-zero
 11538  00068C                     	endif
 11539  00068C  0008               	tblrd		*
 11540  00068E  50F5               	movf	tablat,w,c
 11541  000690  6E07               	movwf	fputc@c^0,c
 11542  000692  6A08               	clrf	(fputc@c+1)^0,c
 11543  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 11544  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11545  00069C  EC2B  F018         	call	_fputc	;wreg free
 11546  0006A0                     
 11547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11548  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11549  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11550  0006A8  2ADE               	incf	postinc2,f,c
 11551  0006AA  0E00               	movlw	0
 11552  0006AC  22DD               	addwfc	postdec2,f,c
 11553  0006AE  EF2A  F003         	goto	l6323
 11554  0006B2                     l1120:
 11555  0006B2  0012               	return		;funcret
 11556  0006B4                     __end_of_vfpfcnvrt:
 11557                           	opt callstack 0
 11558                           
 11559 ;; *************** function _xtoa *****************
 11560 ;; Defined at:
 11561 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11564 ;;		 -> NULL(0), 
 11565 ;;  d               8   35[COMRAM] unsigned long long 
 11566 ;;  x               1   43[COMRAM] unsigned char 
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;  n               8   60[COMRAM] unsigned long long 
 11569 ;;  c               2   70[COMRAM] int 
 11570 ;;  i               2   68[COMRAM] int 
 11571 ;;  w               2   58[COMRAM] int 
 11572 ;;  p               2   56[COMRAM] int 
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  2   33[COMRAM] int 
 11575 ;; Registers used:
 11576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11582 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11583 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11584 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11585 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11586 ;;Total ram usage:       39 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; Hardware stack levels required when called:    9
 11589 ;; This function calls:
 11590 ;;		_isalpha
 11591 ;;		_isupper
 11592 ;;		_pad
 11593 ;;		_toupper
 11594 ;; This function is called by:
 11595 ;;		_vfpfcnvrt
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           	psect	text55
 11600  000D6C                     __ptext55:
 11601                           	opt callstack 0
 11602  000D6C                     _xtoa:
 11603                           	opt callstack 18
 11604  000D6C                     
 11605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 11606  000D6C  0100               	movlb	0	; () banked
 11607  000D6E  BFAF               	btfsc	(_prec+1)& (0+255),7,b
 11608  000D70  EFBC  F006         	goto	u6011
 11609  000D74  EFBE  F006         	goto	u6010
 11610  000D78                     u6011:
 11611  000D78  EFBF  F006         	goto	l6115
 11612  000D7C                     u6010:
 11613  000D7C                     
 11614                           ; BSR set to: 0
 11615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 11616  000D7C  9257               	bcf	_flags^0,1,c
 11617  000D7E                     l6115:
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 11621  000D7E  BFAF               	btfsc	(_prec+1)& (0+255),7,b
 11622  000D80  EFCC  F006         	goto	u6020
 11623  000D84  51AF               	movf	(_prec+1)& (0+255),w,b
 11624  000D86  E106               	bnz	u6021
 11625  000D88  05AE               	decf	_prec& (0+255),w,b
 11626  000D8A  B0D8               	btfsc	status,0,c
 11627  000D8C  EFCA  F006         	goto	u6021
 11628  000D90  EFCC  F006         	goto	u6020
 11629  000D94                     u6021:
 11630  000D94  EFD2  F006         	goto	l1066
 11631  000D98                     u6020:
 11632  000D98                     
 11633                           ; BSR set to: 0
 11634  000D98  0E00               	movlw	0
 11635  000D9A  6E3A               	movwf	(xtoa@p+1)^0,c
 11636  000D9C  0E01               	movlw	1
 11637  000D9E  6E39               	movwf	xtoa@p^0,c
 11638  000DA0  EFD6  F006         	goto	l1068
 11639  000DA4                     l1066:
 11640                           
 11641                           ; BSR set to: 0
 11642  000DA4  C0AE  F039         	movff	_prec,xtoa@p
 11643  000DA8  C0AF  F03A         	movff	_prec+1,xtoa@p+1
 11644  000DAC                     l1068:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11648  000DAC  C0AC  F03B         	movff	_width,xtoa@w
 11649  000DB0  C0AD  F03C         	movff	_width+1,xtoa@w+1
 11650                           
 11651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11652  000DB4  A857               	btfss	_flags^0,4,c
 11653  000DB6  EFDF  F006         	goto	u6031
 11654  000DBA  EFE1  F006         	goto	u6030
 11655  000DBE                     u6031:
 11656  000DBE  EFE5  F006         	goto	l6121
 11657  000DC2                     u6030:
 11658  000DC2                     
 11659                           ; BSR set to: 0
 11660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11661  000DC2  0EFE               	movlw	254
 11662  000DC4  263B               	addwf	xtoa@w^0,f,c
 11663  000DC6  0EFF               	movlw	255
 11664  000DC8  223C               	addwfc	(xtoa@w+1)^0,f,c
 11665  000DCA                     l6121:
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11669  000DCA  C024  F03D         	movff	xtoa@d,xtoa@n
 11670  000DCE  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 11671  000DD2  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 11672  000DD6  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 11673  000DDA  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 11674  000DDE  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 11675  000DE2  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 11676  000DE6  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 11677  000DEA                     
 11678                           ; BSR set to: 0
 11679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11680  000DEA  0E00               	movlw	0
 11681  000DEC  6E46               	movwf	(xtoa@i+1)^0,c
 11682  000DEE  0E1F               	movlw	31
 11683  000DF0  6E45               	movwf	xtoa@i^0,c
 11684  000DF2                     
 11685                           ; BSR set to: 0
 11686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11687  000DF2  0E00               	movlw	0
 11688  000DF4  0101               	movlb	1	; () banked
 11689  000DF6  6F62               	movwf	(_dbuf+31)& (0+255),b
 11690                           
 11691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11692  000DF8  EFB1  F007         	goto	l6157
 11693  000DFC                     l6127:
 11694                           
 11695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11696  000DFC  0645               	decf	xtoa@i^0,f,c
 11697  000DFE  A0D8               	btfss	status,0,c
 11698  000E00  0646               	decf	(xtoa@i+1)^0,f,c
 11699  000E02                     
 11700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11701  000E02  0E0F               	movlw	15
 11702  000E04  143D               	andwf	xtoa@n^0,w,c
 11703  000E06  6E47               	movwf	xtoa@c^0,c
 11704  000E08  6A48               	clrf	(xtoa@c+1)^0,c
 11705  000E0A                     
 11706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11707  000E0A  BE48               	btfsc	(xtoa@c+1)^0,7,c
 11708  000E0C  EF11  F007         	goto	u6041
 11709  000E10  5048               	movf	(xtoa@c+1)^0,w,c
 11710  000E12  E109               	bnz	u6040
 11711  000E14  0E0A               	movlw	10
 11712  000E16  5C47               	subwf	xtoa@c^0,w,c
 11713  000E18  A0D8               	btfss	status,0,c
 11714  000E1A  EF11  F007         	goto	u6041
 11715  000E1E  EF13  F007         	goto	u6040
 11716  000E22                     u6041:
 11717  000E22  EF1B  F007         	goto	l6135
 11718  000E26                     u6040:
 11719  000E26  0E57               	movlw	87
 11720  000E28  2447               	addwf	xtoa@c^0,w,c
 11721  000E2A  6E47               	movwf	xtoa@c^0,c
 11722  000E2C  0E00               	movlw	0
 11723  000E2E  2048               	addwfc	(xtoa@c+1)^0,w,c
 11724  000E30  6E48               	movwf	(xtoa@c+1)^0,c
 11725  000E32  EF21  F007         	goto	l1075
 11726  000E36                     l6135:
 11727  000E36  0E30               	movlw	48
 11728  000E38  2447               	addwf	xtoa@c^0,w,c
 11729  000E3A  6E47               	movwf	xtoa@c^0,c
 11730  000E3C  0E00               	movlw	0
 11731  000E3E  2048               	addwfc	(xtoa@c+1)^0,w,c
 11732  000E40  6E48               	movwf	(xtoa@c+1)^0,c
 11733  000E42                     l1075:
 11734  000E42  0EBF               	movlw	191
 11735  000E44  6E2D               	movwf	??_xtoa^0,c
 11736  000E46  0EFF               	movlw	255
 11737  000E48  6E2E               	movwf	(??_xtoa+1)^0,c
 11738  000E4A  502C               	movf	xtoa@x^0,w,c
 11739  000E4C  6E2F               	movwf	(??_xtoa+2)^0,c
 11740  000E4E  6A30               	clrf	(??_xtoa+3)^0,c
 11741  000E50  502D               	movf	??_xtoa^0,w,c
 11742  000E52  262F               	addwf	(??_xtoa+2)^0,f,c
 11743  000E54  502E               	movf	(??_xtoa+1)^0,w,c
 11744  000E56  2230               	addwfc	(??_xtoa+3)^0,f,c
 11745  000E58  5030               	movf	(??_xtoa+3)^0,w,c
 11746  000E5A  E10A               	bnz	u6050
 11747  000E5C  0E1A               	movlw	26
 11748  000E5E  5C2F               	subwf	(??_xtoa+2)^0,w,c
 11749  000E60  A0D8               	btfss	status,0,c
 11750  000E62  EF35  F007         	goto	u6051
 11751  000E66  EF38  F007         	goto	u6050
 11752  000E6A                     u6051:
 11753  000E6A  0E01               	movlw	1
 11754  000E6C  EF39  F007         	goto	u6060
 11755  000E70                     u6050:
 11756  000E70  0E00               	movlw	0
 11757  000E72                     u6060:
 11758  000E72  6E35               	movwf	_xtoa$1581^0,c
 11759  000E74  6A36               	clrf	(_xtoa$1581+1)^0,c
 11760  000E76  5035               	movf	_xtoa$1581^0,w,c
 11761  000E78  1036               	iorwf	(_xtoa$1581+1)^0,w,c
 11762  000E7A  B4D8               	btfsc	status,2,c
 11763  000E7C  EF42  F007         	goto	u6071
 11764  000E80  EF44  F007         	goto	u6070
 11765  000E84                     u6071:
 11766  000E84  EF74  F007         	goto	l6149
 11767  000E88                     u6070:
 11768  000E88  0E9F               	movlw	159
 11769  000E8A  6E2D               	movwf	??_xtoa^0,c
 11770  000E8C  0EFF               	movlw	255
 11771  000E8E  6E2E               	movwf	(??_xtoa+1)^0,c
 11772  000E90  0E20               	movlw	32
 11773  000E92  1047               	iorwf	xtoa@c^0,w,c
 11774  000E94  6E2F               	movwf	(??_xtoa+2)^0,c
 11775  000E96  0E00               	movlw	0
 11776  000E98  1048               	iorwf	(xtoa@c+1)^0,w,c
 11777  000E9A  6E30               	movwf	(??_xtoa+3)^0,c
 11778  000E9C  502D               	movf	??_xtoa^0,w,c
 11779  000E9E  262F               	addwf	(??_xtoa+2)^0,f,c
 11780  000EA0  502E               	movf	(??_xtoa+1)^0,w,c
 11781  000EA2  2230               	addwfc	(??_xtoa+3)^0,f,c
 11782  000EA4  5030               	movf	(??_xtoa+3)^0,w,c
 11783  000EA6  E10A               	bnz	u6080
 11784  000EA8  0E1A               	movlw	26
 11785  000EAA  5C2F               	subwf	(??_xtoa+2)^0,w,c
 11786  000EAC  A0D8               	btfss	status,0,c
 11787  000EAE  EF5B  F007         	goto	u6081
 11788  000EB2  EF5E  F007         	goto	u6080
 11789  000EB6                     u6081:
 11790  000EB6  0E01               	movlw	1
 11791  000EB8  EF5F  F007         	goto	u6090
 11792  000EBC                     u6080:
 11793  000EBC  0E00               	movlw	0
 11794  000EBE                     u6090:
 11795  000EBE  6E37               	movwf	_xtoa$1582^0,c
 11796  000EC0  6A38               	clrf	(_xtoa$1582+1)^0,c
 11797  000EC2  5037               	movf	_xtoa$1582^0,w,c
 11798  000EC4  1038               	iorwf	(_xtoa$1582+1)^0,w,c
 11799  000EC6  B4D8               	btfsc	status,2,c
 11800  000EC8  EF68  F007         	goto	u6101
 11801  000ECC  EF6A  F007         	goto	u6100
 11802  000ED0                     u6101:
 11803  000ED0  EF74  F007         	goto	l6149
 11804  000ED4                     u6100:
 11805  000ED4                     
 11806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11807  000ED4  C047  F00B         	movff	xtoa@c,toupper@c
 11808  000ED8  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 11809  000EDC  EC10  F01B         	call	_toupper	;wreg free
 11810  000EE0  C00B  F047         	movff	?_toupper,xtoa@c
 11811  000EE4  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 11812  000EE8                     l6149:
 11813                           
 11814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11815  000EE8  0E43               	movlw	low _dbuf
 11816  000EEA  2445               	addwf	xtoa@i^0,w,c
 11817  000EEC  6ED9               	movwf	fsr2l,c
 11818  000EEE  0E01               	movlw	high _dbuf
 11819  000EF0  2046               	addwfc	(xtoa@i+1)^0,w,c
 11820  000EF2  6EDA               	movwf	fsr2h,c
 11821  000EF4  C047  FFDF         	movff	xtoa@c,indf2
 11822  000EF8                     
 11823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11824  000EF8  0639               	decf	xtoa@p^0,f,c
 11825  000EFA  A0D8               	btfss	status,0,c
 11826  000EFC  063A               	decf	(xtoa@p+1)^0,f,c
 11827  000EFE                     
 11828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11829  000EFE  063B               	decf	xtoa@w^0,f,c
 11830  000F00  A0D8               	btfss	status,0,c
 11831  000F02  063C               	decf	(xtoa@w+1)^0,f,c
 11832  000F04                     
 11833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11834  000F04  C03D  F02D         	movff	xtoa@n,??_xtoa
 11835  000F08  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 11836  000F0C  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 11837  000F10  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 11838  000F14  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 11839  000F18  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 11840  000F1C  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 11841  000F20  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 11842  000F24  0E05               	movlw	5
 11843  000F26  EF9E  F007         	goto	u6110
 11844  000F2A                     u6115:
 11845  000F2A  90D8               	bcf	status,0,c
 11846  000F2C  3234               	rrcf	(??_xtoa+7)^0,f,c
 11847  000F2E  3233               	rrcf	(??_xtoa+6)^0,f,c
 11848  000F30  3232               	rrcf	(??_xtoa+5)^0,f,c
 11849  000F32  3231               	rrcf	(??_xtoa+4)^0,f,c
 11850  000F34  3230               	rrcf	(??_xtoa+3)^0,f,c
 11851  000F36  322F               	rrcf	(??_xtoa+2)^0,f,c
 11852  000F38  322E               	rrcf	(??_xtoa+1)^0,f,c
 11853  000F3A  322D               	rrcf	??_xtoa^0,f,c
 11854  000F3C                     u6110:
 11855  000F3C  2EE8               	decfsz	wreg,f,c
 11856  000F3E  EF95  F007         	goto	u6115
 11857  000F42  C02D  F03D         	movff	??_xtoa,xtoa@n
 11858  000F46  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 11859  000F4A  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 11860  000F4E  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 11861  000F52  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 11862  000F56  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 11863  000F5A  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 11864  000F5E  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 11865  000F62                     l6157:
 11866                           
 11867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11868  000F62  BE46               	btfsc	(xtoa@i+1)^0,7,c
 11869  000F64  EFBD  F007         	goto	u6121
 11870  000F68  5046               	movf	(xtoa@i+1)^0,w,c
 11871  000F6A  E109               	bnz	u6120
 11872  000F6C  0E02               	movlw	2
 11873  000F6E  5C45               	subwf	xtoa@i^0,w,c
 11874  000F70  A0D8               	btfss	status,0,c
 11875  000F72  EFBD  F007         	goto	u6121
 11876  000F76  EFBF  F007         	goto	u6120
 11877  000F7A                     u6121:
 11878  000F7A  EFEF  F007         	goto	l1089
 11879  000F7E                     u6120:
 11880  000F7E  503D               	movf	xtoa@n^0,w,c
 11881  000F80  103E               	iorwf	(xtoa@n+1)^0,w,c
 11882  000F82  103F               	iorwf	(xtoa@n+2)^0,w,c
 11883  000F84  1040               	iorwf	(xtoa@n+3)^0,w,c
 11884  000F86  1041               	iorwf	(xtoa@n+4)^0,w,c
 11885  000F88  1042               	iorwf	(xtoa@n+5)^0,w,c
 11886  000F8A  1043               	iorwf	(xtoa@n+6)^0,w,c
 11887  000F8C  1044               	iorwf	(xtoa@n+7)^0,w,c
 11888  000F8E  A4D8               	btfss	status,2,c
 11889  000F90  EFCC  F007         	goto	u6131
 11890  000F94  EFCE  F007         	goto	u6130
 11891  000F98                     u6131:
 11892  000F98  EFFE  F006         	goto	l6127
 11893  000F9C                     u6130:
 11894  000F9C  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 11895  000F9E  EFDB  F007         	goto	u6140
 11896  000FA2  503A               	movf	(xtoa@p+1)^0,w,c
 11897  000FA4  E106               	bnz	u6141
 11898  000FA6  0439               	decf	xtoa@p^0,w,c
 11899  000FA8  B0D8               	btfsc	status,0,c
 11900  000FAA  EFD9  F007         	goto	u6141
 11901  000FAE  EFDB  F007         	goto	u6140
 11902  000FB2                     u6141:
 11903  000FB2  EFFE  F006         	goto	l6127
 11904  000FB6                     u6140:
 11905  000FB6  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 11906  000FB8  EFE6  F007         	goto	u6151
 11907  000FBC  503C               	movf	(xtoa@w+1)^0,w,c
 11908  000FBE  E108               	bnz	u6150
 11909  000FC0  043B               	decf	xtoa@w^0,w,c
 11910  000FC2  A0D8               	btfss	status,0,c
 11911  000FC4  EFE6  F007         	goto	u6151
 11912  000FC8  EFE8  F007         	goto	u6150
 11913  000FCC                     u6151:
 11914  000FCC  EFEF  F007         	goto	l1089
 11915  000FD0                     u6150:
 11916  000FD0  B257               	btfsc	_flags^0,1,c
 11917  000FD2  EFED  F007         	goto	u6161
 11918  000FD6  EFEF  F007         	goto	u6160
 11919  000FDA                     u6161:
 11920  000FDA  EFFE  F006         	goto	l6127
 11921  000FDE                     u6160:
 11922  000FDE                     l1089:
 11923                           
 11924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11925  000FDE  A857               	btfss	_flags^0,4,c
 11926  000FE0  EFF4  F007         	goto	u6171
 11927  000FE4  EFF6  F007         	goto	u6170
 11928  000FE8                     u6171:
 11929  000FE8  EF0C  F008         	goto	l6173
 11930  000FEC                     u6170:
 11931  000FEC                     
 11932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11933  000FEC  0645               	decf	xtoa@i^0,f,c
 11934  000FEE  A0D8               	btfss	status,0,c
 11935  000FF0  0646               	decf	(xtoa@i+1)^0,f,c
 11936  000FF2                     
 11937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11938  000FF2  0E43               	movlw	low _dbuf
 11939  000FF4  2445               	addwf	xtoa@i^0,w,c
 11940  000FF6  6ED9               	movwf	fsr2l,c
 11941  000FF8  0E01               	movlw	high _dbuf
 11942  000FFA  2046               	addwfc	(xtoa@i+1)^0,w,c
 11943  000FFC  6EDA               	movwf	fsr2h,c
 11944  000FFE  C02C  FFDF         	movff	xtoa@x,indf2
 11945  001002                     
 11946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11947  001002  0645               	decf	xtoa@i^0,f,c
 11948  001004  A0D8               	btfss	status,0,c
 11949  001006  0646               	decf	(xtoa@i+1)^0,f,c
 11950                           
 11951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11952  001008  0E43               	movlw	low _dbuf
 11953  00100A  2445               	addwf	xtoa@i^0,w,c
 11954  00100C  6ED9               	movwf	fsr2l,c
 11955  00100E  0E01               	movlw	high _dbuf
 11956  001010  2046               	addwfc	(xtoa@i+1)^0,w,c
 11957  001012  6EDA               	movwf	fsr2h,c
 11958  001014  0E30               	movlw	48
 11959  001016  6EDF               	movwf	indf2,c
 11960  001018                     l6173:
 11961                           
 11962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11963  001018  C022  F017         	movff	xtoa@fp,pad@fp
 11964  00101C  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 11965  001020  0E43               	movlw	low _dbuf
 11966  001022  2445               	addwf	xtoa@i^0,w,c
 11967  001024  6E19               	movwf	pad@buf^0,c
 11968  001026  0E01               	movlw	high _dbuf
 11969  001028  2046               	addwfc	(xtoa@i+1)^0,w,c
 11970  00102A  6E1A               	movwf	(pad@buf+1)^0,c
 11971  00102C  C03B  F01B         	movff	xtoa@w,pad@p
 11972  001030  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 11973  001034  EC56  F016         	call	_pad	;wreg free
 11974  001038  C017  F022         	movff	?_pad,?_xtoa
 11975  00103C  C018  F023         	movff	?_pad+1,?_xtoa+1
 11976  001040  0012               	return		;funcret
 11977  001042                     __end_of_xtoa:
 11978                           	opt callstack 0
 11979                           
 11980 ;; *************** function _toupper *****************
 11981 ;; Defined at:
 11982 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;  c               2   10[COMRAM] int 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;		None
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  2   10[COMRAM] int 
 11989 ;; Registers used:
 11990 ;;		wreg, status,2, status,0
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11999 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12000 ;;Total ram usage:        8 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    5
 12003 ;; This function calls:
 12004 ;;		_islower
 12005 ;; This function is called by:
 12006 ;;		_xtoa
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text56
 12011  003620                     __ptext56:
 12012                           	opt callstack 0
 12013  003620                     _toupper:
 12014                           	opt callstack 21
 12015  003620  0E9F               	movlw	159
 12016  003622  6E0D               	movwf	??_toupper^0,c
 12017  003624  0EFF               	movlw	255
 12018  003626  6E0E               	movwf	(??_toupper+1)^0,c
 12019  003628  C00B  F00F         	movff	toupper@c,??_toupper+2
 12020  00362C  C00C  F010         	movff	toupper@c+1,??_toupper+3
 12021  003630  500D               	movf	??_toupper^0,w,c
 12022  003632  260F               	addwf	(??_toupper+2)^0,f,c
 12023  003634  500E               	movf	(??_toupper+1)^0,w,c
 12024  003636  2210               	addwfc	(??_toupper+3)^0,f,c
 12025  003638  5010               	movf	(??_toupper+3)^0,w,c
 12026  00363A  E10A               	bnz	u5420
 12027  00363C  0E1A               	movlw	26
 12028  00363E  5C0F               	subwf	(??_toupper+2)^0,w,c
 12029  003640  A0D8               	btfss	status,0,c
 12030  003642  EF25  F01B         	goto	u5421
 12031  003646  EF28  F01B         	goto	u5420
 12032  00364A                     u5421:
 12033  00364A  0E01               	movlw	1
 12034  00364C  EF29  F01B         	goto	u5430
 12035  003650                     u5420:
 12036  003650  0E00               	movlw	0
 12037  003652                     u5430:
 12038  003652  6E11               	movwf	_toupper$2170^0,c
 12039  003654  6A12               	clrf	(_toupper$2170+1)^0,c
 12040  003656  5011               	movf	_toupper$2170^0,w,c
 12041  003658  1012               	iorwf	(_toupper$2170+1)^0,w,c
 12042  00365A  B4D8               	btfsc	status,2,c
 12043  00365C  EF32  F01B         	goto	u5441
 12044  003660  EF34  F01B         	goto	u5440
 12045  003664                     u5441:
 12046  003664  EF3A  F01B         	goto	l1939
 12047  003668                     u5440:
 12048  003668  0E5F               	movlw	95
 12049  00366A  140B               	andwf	toupper@c^0,w,c
 12050  00366C  6E0B               	movwf	?_toupper^0,c
 12051  00366E  6A0C               	clrf	(?_toupper+1)^0,c
 12052  003670  EF3E  F01B         	goto	l1944
 12053  003674                     l1939:
 12054  003674  C00B  F00B         	movff	toupper@c,?_toupper
 12055  003678  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 12056  00367C                     l1944:
 12057  00367C  0012               	return		;funcret
 12058  00367E                     __end_of_toupper:
 12059                           	opt callstack 0
 12060                           
 12061 ;; *************** function _islower *****************
 12062 ;; Defined at:
 12063 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  c               2    4[COMRAM] int 
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  2    4[COMRAM] int 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12080 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12081 ;;Total ram usage:        6 bytes
 12082 ;; Hardware stack levels used:    1
 12083 ;; Hardware stack levels required when called:    4
 12084 ;; This function calls:
 12085 ;;		Nothing
 12086 ;; This function is called by:
 12087 ;;		_toupper
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text57
 12092  003B5C                     __ptext57:
 12093                           	opt callstack 0
 12094  003B5C                     _islower:
 12095                           	opt callstack 21
 12096  003B5C  0E9F               	movlw	159
 12097  003B5E  6E07               	movwf	??_islower^0,c
 12098  003B60  0EFF               	movlw	255
 12099  003B62  6E08               	movwf	(??_islower+1)^0,c
 12100  003B64  C005  F009         	movff	islower@c,??_islower+2
 12101  003B68  C006  F00A         	movff	islower@c+1,??_islower+3
 12102  003B6C  5007               	movf	??_islower^0,w,c
 12103  003B6E  2609               	addwf	(??_islower+2)^0,f,c
 12104  003B70  5008               	movf	(??_islower+1)^0,w,c
 12105  003B72  220A               	addwfc	(??_islower+3)^0,f,c
 12106  003B74  500A               	movf	(??_islower+3)^0,w,c
 12107  003B76  E10A               	bnz	u5310
 12108  003B78  0E1A               	movlw	26
 12109  003B7A  5C09               	subwf	(??_islower+2)^0,w,c
 12110  003B7C  A0D8               	btfss	status,0,c
 12111  003B7E  EFC3  F01D         	goto	u5311
 12112  003B82  EFC6  F01D         	goto	u5310
 12113  003B86                     u5311:
 12114  003B86  0E01               	movlw	1
 12115  003B88  EFC7  F01D         	goto	u5320
 12116  003B8C                     u5310:
 12117  003B8C  0E00               	movlw	0
 12118  003B8E                     u5320:
 12119  003B8E  6E05               	movwf	?_islower^0,c
 12120  003B90  6A06               	clrf	(?_islower+1)^0,c
 12121  003B92  0012               	return		;funcret
 12122  003B94                     __end_of_islower:
 12123                           	opt callstack 0
 12124                           
 12125 ;; *************** function _isupper *****************
 12126 ;; Defined at:
 12127 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;  c               2    4[COMRAM] int 
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;		None
 12132 ;; Return value:  Size  Location     Type
 12133 ;;                  2    4[COMRAM] int 
 12134 ;; Registers used:
 12135 ;;		wreg, status,2, status,0
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12145 ;;Total ram usage:        6 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:    4
 12148 ;; This function calls:
 12149 ;;		Nothing
 12150 ;; This function is called by:
 12151 ;;		_xtoa
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text58
 12156  003B94                     __ptext58:
 12157                           	opt callstack 0
 12158  003B94                     _isupper:
 12159                           	opt callstack 22
 12160  003B94  0EBF               	movlw	191
 12161  003B96  6E07               	movwf	??_isupper^0,c
 12162  003B98  0EFF               	movlw	255
 12163  003B9A  6E08               	movwf	(??_isupper+1)^0,c
 12164  003B9C  C005  F009         	movff	isupper@c,??_isupper+2
 12165  003BA0  C006  F00A         	movff	isupper@c+1,??_isupper+3
 12166  003BA4  5007               	movf	??_isupper^0,w,c
 12167  003BA6  2609               	addwf	(??_isupper+2)^0,f,c
 12168  003BA8  5008               	movf	(??_isupper+1)^0,w,c
 12169  003BAA  220A               	addwfc	(??_isupper+3)^0,f,c
 12170  003BAC  500A               	movf	(??_isupper+3)^0,w,c
 12171  003BAE  E10A               	bnz	u5380
 12172  003BB0  0E1A               	movlw	26
 12173  003BB2  5C09               	subwf	(??_isupper+2)^0,w,c
 12174  003BB4  A0D8               	btfss	status,0,c
 12175  003BB6  EFDF  F01D         	goto	u5381
 12176  003BBA  EFE2  F01D         	goto	u5380
 12177  003BBE                     u5381:
 12178  003BBE  0E01               	movlw	1
 12179  003BC0  EFE3  F01D         	goto	u5390
 12180  003BC4                     u5380:
 12181  003BC4  0E00               	movlw	0
 12182  003BC6                     u5390:
 12183  003BC6  6E05               	movwf	?_isupper^0,c
 12184  003BC8  6A06               	clrf	(?_isupper+1)^0,c
 12185  003BCA  0012               	return		;funcret
 12186  003BCC                     __end_of_isupper:
 12187                           	opt callstack 0
 12188                           
 12189 ;; *************** function _isalpha *****************
 12190 ;; Defined at:
 12191 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;  c               2    4[COMRAM] int 
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;		None
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  2    4[COMRAM] int 
 12198 ;; Registers used:
 12199 ;;		wreg, status,2, status,0
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12209 ;;Total ram usage:        6 bytes
 12210 ;; Hardware stack levels used:    1
 12211 ;; Hardware stack levels required when called:    4
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_xtoa
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text59
 12220  003AE8                     __ptext59:
 12221                           	opt callstack 0
 12222  003AE8                     _isalpha:
 12223                           	opt callstack 22
 12224  003AE8  0E9F               	movlw	159
 12225  003AEA  6E07               	movwf	??_isalpha^0,c
 12226  003AEC  0EFF               	movlw	255
 12227  003AEE  6E08               	movwf	(??_isalpha+1)^0,c
 12228  003AF0  0E20               	movlw	32
 12229  003AF2  1005               	iorwf	isalpha@c^0,w,c
 12230  003AF4  6E09               	movwf	(??_isalpha+2)^0,c
 12231  003AF6  0E00               	movlw	0
 12232  003AF8  1006               	iorwf	(isalpha@c+1)^0,w,c
 12233  003AFA  6E0A               	movwf	(??_isalpha+3)^0,c
 12234  003AFC  5007               	movf	??_isalpha^0,w,c
 12235  003AFE  2609               	addwf	(??_isalpha+2)^0,f,c
 12236  003B00  5008               	movf	(??_isalpha+1)^0,w,c
 12237  003B02  220A               	addwfc	(??_isalpha+3)^0,f,c
 12238  003B04  500A               	movf	(??_isalpha+3)^0,w,c
 12239  003B06  E10A               	bnz	u5400
 12240  003B08  0E1A               	movlw	26
 12241  003B0A  5C09               	subwf	(??_isalpha+2)^0,w,c
 12242  003B0C  A0D8               	btfss	status,0,c
 12243  003B0E  EF8B  F01D         	goto	u5401
 12244  003B12  EF8E  F01D         	goto	u5400
 12245  003B16                     u5401:
 12246  003B16  0E01               	movlw	1
 12247  003B18  EF8F  F01D         	goto	u5410
 12248  003B1C                     u5400:
 12249  003B1C  0E00               	movlw	0
 12250  003B1E                     u5410:
 12251  003B1E  6E05               	movwf	?_isalpha^0,c
 12252  003B20  6A06               	clrf	(?_isalpha+1)^0,c
 12253  003B22  0012               	return		;funcret
 12254  003B24                     __end_of_isalpha:
 12255                           	opt callstack 0
 12256                           
 12257 ;; *************** function _utoa *****************
 12258 ;; Defined at:
 12259 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12262 ;;		 -> NULL(0), 
 12263 ;;  d               8   35[COMRAM] unsigned long long 
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;  n               8   55[COMRAM] unsigned long long 
 12266 ;;  i               2   63[COMRAM] int 
 12267 ;;  w               2   53[COMRAM] int 
 12268 ;;  p               2   51[COMRAM] int 
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  2   33[COMRAM] int 
 12271 ;; Registers used:
 12272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12278 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12279 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12280 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12281 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12282 ;;Total ram usage:       32 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    9
 12285 ;; This function calls:
 12286 ;;		___lodiv
 12287 ;;		___lomod
 12288 ;;		_pad
 12289 ;; This function is called by:
 12290 ;;		_vfpfcnvrt
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           	psect	text60
 12295  001266                     __ptext60:
 12296                           	opt callstack 0
 12297  001266                     _utoa:
 12298                           	opt callstack 18
 12299  001266                     
 12300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12301  001266  0100               	movlb	0	; () banked
 12302  001268  BFAF               	btfsc	(_prec+1)& (0+255),7,b
 12303  00126A  EF39  F009         	goto	u5941
 12304  00126E  EF3B  F009         	goto	u5940
 12305  001272                     u5941:
 12306  001272  EF3C  F009         	goto	l6079
 12307  001276                     u5940:
 12308  001276                     
 12309                           ; BSR set to: 0
 12310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12311  001276  9257               	bcf	_flags^0,1,c
 12312  001278                     l6079:
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12316  001278  BFAF               	btfsc	(_prec+1)& (0+255),7,b
 12317  00127A  EF49  F009         	goto	u5950
 12318  00127E  51AF               	movf	(_prec+1)& (0+255),w,b
 12319  001280  E106               	bnz	u5951
 12320  001282  05AE               	decf	_prec& (0+255),w,b
 12321  001284  B0D8               	btfsc	status,0,c
 12322  001286  EF47  F009         	goto	u5951
 12323  00128A  EF49  F009         	goto	u5950
 12324  00128E                     u5951:
 12325  00128E  EF4F  F009         	goto	l1051
 12326  001292                     u5950:
 12327  001292                     
 12328                           ; BSR set to: 0
 12329  001292  0E00               	movlw	0
 12330  001294  6E35               	movwf	(utoa@p+1)^0,c
 12331  001296  0E01               	movlw	1
 12332  001298  6E34               	movwf	utoa@p^0,c
 12333  00129A  EF53  F009         	goto	l1053
 12334  00129E                     l1051:
 12335                           
 12336                           ; BSR set to: 0
 12337  00129E  C0AE  F034         	movff	_prec,utoa@p
 12338  0012A2  C0AF  F035         	movff	_prec+1,utoa@p+1
 12339  0012A6                     l1053:
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12343  0012A6  C0AC  F036         	movff	_width,utoa@w
 12344  0012AA  C0AD  F037         	movff	_width+1,utoa@w+1
 12345                           
 12346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12347  0012AE  C024  F038         	movff	utoa@d,utoa@n
 12348  0012B2  C025  F039         	movff	utoa@d+1,utoa@n+1
 12349  0012B6  C026  F03A         	movff	utoa@d+2,utoa@n+2
 12350  0012BA  C027  F03B         	movff	utoa@d+3,utoa@n+3
 12351  0012BE  C028  F03C         	movff	utoa@d+4,utoa@n+4
 12352  0012C2  C029  F03D         	movff	utoa@d+5,utoa@n+5
 12353  0012C6  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 12354  0012CA  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 12355  0012CE                     
 12356                           ; BSR set to: 0
 12357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12358  0012CE  0E00               	movlw	0
 12359  0012D0  6E41               	movwf	(utoa@i+1)^0,c
 12360  0012D2  0E1F               	movlw	31
 12361  0012D4  6E40               	movwf	utoa@i^0,c
 12362  0012D6                     
 12363                           ; BSR set to: 0
 12364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12365  0012D6  0E00               	movlw	0
 12366  0012D8  0101               	movlb	1	; () banked
 12367  0012DA  6F62               	movwf	(_dbuf+31)& (0+255),b
 12368                           
 12369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12370  0012DC  EFE6  F009         	goto	l6097
 12371  0012E0                     l6087:
 12372                           
 12373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12374  0012E0  0640               	decf	utoa@i^0,f,c
 12375  0012E2  A0D8               	btfss	status,0,c
 12376  0012E4  0641               	decf	(utoa@i+1)^0,f,c
 12377  0012E6                     
 12378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12379  0012E6  0E43               	movlw	low _dbuf
 12380  0012E8  2440               	addwf	utoa@i^0,w,c
 12381  0012EA  6ED9               	movwf	fsr2l,c
 12382  0012EC  0E01               	movlw	high _dbuf
 12383  0012EE  2041               	addwfc	(utoa@i+1)^0,w,c
 12384  0012F0  6EDA               	movwf	fsr2h,c
 12385  0012F2  C038  F005         	movff	utoa@n,___lomod@dividend
 12386  0012F6  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 12387  0012FA  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 12388  0012FE  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 12389  001302  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 12390  001306  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 12391  00130A  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 12392  00130E  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 12393  001312  0E0A               	movlw	10
 12394  001314  6E0D               	movwf	___lomod@divisor^0,c
 12395  001316  0E00               	movlw	0
 12396  001318  6E0E               	movwf	(___lomod@divisor+1)^0,c
 12397  00131A  0E00               	movlw	0
 12398  00131C  6E0F               	movwf	(___lomod@divisor+2)^0,c
 12399  00131E  0E00               	movlw	0
 12400  001320  6E10               	movwf	(___lomod@divisor+3)^0,c
 12401  001322  0E00               	movlw	0
 12402  001324  6E11               	movwf	(___lomod@divisor+4)^0,c
 12403  001326  0E00               	movlw	0
 12404  001328  6E12               	movwf	(___lomod@divisor+5)^0,c
 12405  00132A  0E00               	movlw	0
 12406  00132C  6E13               	movwf	(___lomod@divisor+6)^0,c
 12407  00132E  0E00               	movlw	0
 12408  001330  6E14               	movwf	(___lomod@divisor+7)^0,c
 12409  001332  EC8C  F015         	call	___lomod	;wreg free
 12410  001336  C005  F02C         	movff	?___lomod,??_utoa
 12411  00133A  C006  F02D         	movff	?___lomod+1,??_utoa+1
 12412  00133E  C007  F02E         	movff	?___lomod+2,??_utoa+2
 12413  001342  C008  F02F         	movff	?___lomod+3,??_utoa+3
 12414  001346  C009  F030         	movff	?___lomod+4,??_utoa+4
 12415  00134A  C00A  F031         	movff	?___lomod+5,??_utoa+5
 12416  00134E  C00B  F032         	movff	?___lomod+6,??_utoa+6
 12417  001352  C00C  F033         	movff	?___lomod+7,??_utoa+7
 12418  001356  502C               	movf	??_utoa^0,w,c
 12419  001358  0F30               	addlw	48
 12420  00135A  6EDF               	movwf	indf2,c
 12421  00135C                     
 12422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12423  00135C  0634               	decf	utoa@p^0,f,c
 12424  00135E  A0D8               	btfss	status,0,c
 12425  001360  0635               	decf	(utoa@p+1)^0,f,c
 12426  001362                     
 12427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12428  001362  0636               	decf	utoa@w^0,f,c
 12429  001364  A0D8               	btfss	status,0,c
 12430  001366  0637               	decf	(utoa@w+1)^0,f,c
 12431  001368                     
 12432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12433  001368  C038  F005         	movff	utoa@n,___lodiv@dividend
 12434  00136C  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 12435  001370  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 12436  001374  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 12437  001378  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 12438  00137C  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 12439  001380  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 12440  001384  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 12441  001388  0E0A               	movlw	10
 12442  00138A  6E0D               	movwf	___lodiv@divisor^0,c
 12443  00138C  0E00               	movlw	0
 12444  00138E  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 12445  001390  0E00               	movlw	0
 12446  001392  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 12447  001394  0E00               	movlw	0
 12448  001396  6E10               	movwf	(___lodiv@divisor+3)^0,c
 12449  001398  0E00               	movlw	0
 12450  00139A  6E11               	movwf	(___lodiv@divisor+4)^0,c
 12451  00139C  0E00               	movlw	0
 12452  00139E  6E12               	movwf	(___lodiv@divisor+5)^0,c
 12453  0013A0  0E00               	movlw	0
 12454  0013A2  6E13               	movwf	(___lodiv@divisor+6)^0,c
 12455  0013A4  0E00               	movlw	0
 12456  0013A6  6E14               	movwf	(___lodiv@divisor+7)^0,c
 12457  0013A8  EC62  F013         	call	___lodiv	;wreg free
 12458  0013AC  C005  F038         	movff	?___lodiv,utoa@n
 12459  0013B0  C006  F039         	movff	?___lodiv+1,utoa@n+1
 12460  0013B4  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 12461  0013B8  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 12462  0013BC  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 12463  0013C0  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 12464  0013C4  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 12465  0013C8  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 12466  0013CC                     l6097:
 12467                           
 12468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12469  0013CC  5040               	movf	utoa@i^0,w,c
 12470  0013CE  1041               	iorwf	(utoa@i+1)^0,w,c
 12471  0013D0  B4D8               	btfsc	status,2,c
 12472  0013D2  EFED  F009         	goto	u5961
 12473  0013D6  EFEF  F009         	goto	u5960
 12474  0013DA                     u5961:
 12475  0013DA  EF1F  F00A         	goto	l6107
 12476  0013DE                     u5960:
 12477  0013DE  5038               	movf	utoa@n^0,w,c
 12478  0013E0  1039               	iorwf	(utoa@n+1)^0,w,c
 12479  0013E2  103A               	iorwf	(utoa@n+2)^0,w,c
 12480  0013E4  103B               	iorwf	(utoa@n+3)^0,w,c
 12481  0013E6  103C               	iorwf	(utoa@n+4)^0,w,c
 12482  0013E8  103D               	iorwf	(utoa@n+5)^0,w,c
 12483  0013EA  103E               	iorwf	(utoa@n+6)^0,w,c
 12484  0013EC  103F               	iorwf	(utoa@n+7)^0,w,c
 12485  0013EE  A4D8               	btfss	status,2,c
 12486  0013F0  EFFC  F009         	goto	u5971
 12487  0013F4  EFFE  F009         	goto	u5970
 12488  0013F8                     u5971:
 12489  0013F8  EF70  F009         	goto	l6087
 12490  0013FC                     u5970:
 12491  0013FC  BE35               	btfsc	(utoa@p+1)^0,7,c
 12492  0013FE  EF0B  F00A         	goto	u5980
 12493  001402  5035               	movf	(utoa@p+1)^0,w,c
 12494  001404  E106               	bnz	u5981
 12495  001406  0434               	decf	utoa@p^0,w,c
 12496  001408  B0D8               	btfsc	status,0,c
 12497  00140A  EF09  F00A         	goto	u5981
 12498  00140E  EF0B  F00A         	goto	u5980
 12499  001412                     u5981:
 12500  001412  EF70  F009         	goto	l6087
 12501  001416                     u5980:
 12502  001416  BE37               	btfsc	(utoa@w+1)^0,7,c
 12503  001418  EF16  F00A         	goto	u5991
 12504  00141C  5037               	movf	(utoa@w+1)^0,w,c
 12505  00141E  E108               	bnz	u5990
 12506  001420  0436               	decf	utoa@w^0,w,c
 12507  001422  A0D8               	btfss	status,0,c
 12508  001424  EF16  F00A         	goto	u5991
 12509  001428  EF18  F00A         	goto	u5990
 12510  00142C                     u5991:
 12511  00142C  EF1F  F00A         	goto	l6107
 12512  001430                     u5990:
 12513  001430  B257               	btfsc	_flags^0,1,c
 12514  001432  EF1D  F00A         	goto	u6001
 12515  001436  EF1F  F00A         	goto	u6000
 12516  00143A                     u6001:
 12517  00143A  EF70  F009         	goto	l6087
 12518  00143E                     u6000:
 12519  00143E                     l6107:
 12520                           
 12521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12522  00143E  C022  F017         	movff	utoa@fp,pad@fp
 12523  001442  C023  F018         	movff	utoa@fp+1,pad@fp+1
 12524  001446  0E43               	movlw	low _dbuf
 12525  001448  2440               	addwf	utoa@i^0,w,c
 12526  00144A  6E19               	movwf	pad@buf^0,c
 12527  00144C  0E01               	movlw	high _dbuf
 12528  00144E  2041               	addwfc	(utoa@i+1)^0,w,c
 12529  001450  6E1A               	movwf	(pad@buf+1)^0,c
 12530  001452  C036  F01B         	movff	utoa@w,pad@p
 12531  001456  C037  F01C         	movff	utoa@w+1,pad@p+1
 12532  00145A  EC56  F016         	call	_pad	;wreg free
 12533  00145E  C017  F022         	movff	?_pad,?_utoa
 12534  001462  C018  F023         	movff	?_pad+1,?_utoa+1
 12535  001466  0012               	return		;funcret
 12536  001468                     __end_of_utoa:
 12537                           	opt callstack 0
 12538                           
 12539 ;; *************** function ___lomod *****************
 12540 ;; Defined at:
 12541 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;  dividend        8    4[COMRAM] unsigned long long 
 12544 ;;  divisor         8   12[COMRAM] unsigned long long 
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;  counter         1   20[COMRAM] unsigned char 
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  8    4[COMRAM] unsigned long long 
 12549 ;; Registers used:
 12550 ;;		wreg, status,2, status,0
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12556 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12559 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12560 ;;Total ram usage:       17 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:    4
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		_utoa
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text61
 12571  002B18                     __ptext61:
 12572                           	opt callstack 0
 12573  002B18                     ___lomod:
 12574                           	opt callstack 22
 12575  002B18  500D               	movf	___lomod@divisor^0,w,c
 12576  002B1A  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 12577  002B1C  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 12578  002B1E  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 12579  002B20  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 12580  002B22  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 12581  002B24  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 12582  002B26  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 12583  002B28  B4D8               	btfsc	status,2,c
 12584  002B2A  EF99  F015         	goto	u5641
 12585  002B2E  EF9B  F015         	goto	u5640
 12586  002B32                     u5641:
 12587  002B32  EFE3  F015         	goto	l1583
 12588  002B36                     u5640:
 12589  002B36  0E01               	movlw	1
 12590  002B38  6E15               	movwf	___lomod@counter^0,c
 12591  002B3A  EFA9  F015         	goto	l5949
 12592  002B3E                     l5947:
 12593  002B3E  90D8               	bcf	status,0,c
 12594  002B40  360D               	rlcf	___lomod@divisor^0,f,c
 12595  002B42  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 12596  002B44  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 12597  002B46  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 12598  002B48  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 12599  002B4A  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 12600  002B4C  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 12601  002B4E  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 12602  002B50  2A15               	incf	___lomod@counter^0,f,c
 12603  002B52                     l5949:
 12604  002B52  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 12605  002B54  EFAE  F015         	goto	u5651
 12606  002B58  EFB0  F015         	goto	u5650
 12607  002B5C                     u5651:
 12608  002B5C  EF9F  F015         	goto	l5947
 12609  002B60                     u5650:
 12610  002B60                     l5951:
 12611  002B60  500D               	movf	___lomod@divisor^0,w,c
 12612  002B62  5C05               	subwf	___lomod@dividend^0,w,c
 12613  002B64  500E               	movf	(___lomod@divisor+1)^0,w,c
 12614  002B66  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 12615  002B68  500F               	movf	(___lomod@divisor+2)^0,w,c
 12616  002B6A  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 12617  002B6C  5010               	movf	(___lomod@divisor+3)^0,w,c
 12618  002B6E  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 12619  002B70  5011               	movf	(___lomod@divisor+4)^0,w,c
 12620  002B72  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 12621  002B74  5012               	movf	(___lomod@divisor+5)^0,w,c
 12622  002B76  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 12623  002B78  5013               	movf	(___lomod@divisor+6)^0,w,c
 12624  002B7A  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 12625  002B7C  5014               	movf	(___lomod@divisor+7)^0,w,c
 12626  002B7E  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 12627  002B80  A0D8               	btfss	status,0,c
 12628  002B82  EFC5  F015         	goto	u5661
 12629  002B86  EFC7  F015         	goto	u5660
 12630  002B8A                     u5661:
 12631  002B8A  EFD7  F015         	goto	l5955
 12632  002B8E                     u5660:
 12633  002B8E  500D               	movf	___lomod@divisor^0,w,c
 12634  002B90  5E05               	subwf	___lomod@dividend^0,f,c
 12635  002B92  500E               	movf	(___lomod@divisor+1)^0,w,c
 12636  002B94  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 12637  002B96  500F               	movf	(___lomod@divisor+2)^0,w,c
 12638  002B98  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 12639  002B9A  5010               	movf	(___lomod@divisor+3)^0,w,c
 12640  002B9C  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 12641  002B9E  5011               	movf	(___lomod@divisor+4)^0,w,c
 12642  002BA0  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 12643  002BA2  5012               	movf	(___lomod@divisor+5)^0,w,c
 12644  002BA4  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 12645  002BA6  5013               	movf	(___lomod@divisor+6)^0,w,c
 12646  002BA8  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 12647  002BAA  5014               	movf	(___lomod@divisor+7)^0,w,c
 12648  002BAC  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 12649  002BAE                     l5955:
 12650  002BAE  90D8               	bcf	status,0,c
 12651  002BB0  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 12652  002BB2  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 12653  002BB4  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 12654  002BB6  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 12655  002BB8  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 12656  002BBA  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 12657  002BBC  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 12658  002BBE  320D               	rrcf	___lomod@divisor^0,f,c
 12659  002BC0  2E15               	decfsz	___lomod@counter^0,f,c
 12660  002BC2  EFB0  F015         	goto	l5951
 12661  002BC6                     l1583:
 12662  002BC6  C005  F005         	movff	___lomod@dividend,?___lomod
 12663  002BCA  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 12664  002BCE  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 12665  002BD2  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 12666  002BD6  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 12667  002BDA  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 12668  002BDE  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 12669  002BE2  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 12670  002BE6  0012               	return		;funcret
 12671  002BE8                     __end_of___lomod:
 12672                           	opt callstack 0
 12673                           
 12674 ;; *************** function ___lodiv *****************
 12675 ;; Defined at:
 12676 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;  dividend        8    4[COMRAM] unsigned long long 
 12679 ;;  divisor         8   12[COMRAM] unsigned long long 
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;  quotient        8   20[COMRAM] unsigned long long 
 12682 ;;  counter         1   28[COMRAM] unsigned char 
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  8    4[COMRAM] unsigned long long 
 12685 ;; Registers used:
 12686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12692 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12693 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;Total ram usage:       25 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:    4
 12699 ;; This function calls:
 12700 ;;		Nothing
 12701 ;; This function is called by:
 12702 ;;		_utoa
 12703 ;; This function uses a non-reentrant model
 12704 ;;
 12705                           
 12706                           	psect	text62
 12707  0026C4                     __ptext62:
 12708                           	opt callstack 0
 12709  0026C4                     ___lodiv:
 12710                           	opt callstack 22
 12711  0026C4  EE20  F015         	lfsr	2,___lodiv@quotient
 12712  0026C8  0E07               	movlw	7
 12713  0026CA                     u5601:
 12714  0026CA  6ADE               	clrf	postinc2,c
 12715  0026CC  06E8               	decf	wreg,f,c
 12716  0026CE  E2FD               	bc	u5601
 12717  0026D0  500D               	movf	___lodiv@divisor^0,w,c
 12718  0026D2  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 12719  0026D4  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 12720  0026D6  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 12721  0026D8  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 12722  0026DA  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 12723  0026DC  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 12724  0026DE  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 12725  0026E0  B4D8               	btfsc	status,2,c
 12726  0026E2  EF75  F013         	goto	u5611
 12727  0026E6  EF77  F013         	goto	u5610
 12728  0026EA                     u5611:
 12729  0026EA  EFC9  F013         	goto	l1573
 12730  0026EE                     u5610:
 12731  0026EE  0E01               	movlw	1
 12732  0026F0  6E1D               	movwf	___lodiv@counter^0,c
 12733  0026F2  EF85  F013         	goto	l5929
 12734  0026F6                     l5927:
 12735  0026F6  90D8               	bcf	status,0,c
 12736  0026F8  360D               	rlcf	___lodiv@divisor^0,f,c
 12737  0026FA  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 12738  0026FC  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 12739  0026FE  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 12740  002700  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 12741  002702  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 12742  002704  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 12743  002706  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 12744  002708  2A1D               	incf	___lodiv@counter^0,f,c
 12745  00270A                     l5929:
 12746  00270A  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 12747  00270C  EF8A  F013         	goto	u5621
 12748  002710  EF8C  F013         	goto	u5620
 12749  002714                     u5621:
 12750  002714  EF7B  F013         	goto	l5927
 12751  002718                     u5620:
 12752  002718                     l5931:
 12753  002718  90D8               	bcf	status,0,c
 12754  00271A  3615               	rlcf	___lodiv@quotient^0,f,c
 12755  00271C  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 12756  00271E  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 12757  002720  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 12758  002722  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 12759  002724  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 12760  002726  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 12761  002728  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 12762  00272A  500D               	movf	___lodiv@divisor^0,w,c
 12763  00272C  5C05               	subwf	___lodiv@dividend^0,w,c
 12764  00272E  500E               	movf	(___lodiv@divisor+1)^0,w,c
 12765  002730  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 12766  002732  500F               	movf	(___lodiv@divisor+2)^0,w,c
 12767  002734  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 12768  002736  5010               	movf	(___lodiv@divisor+3)^0,w,c
 12769  002738  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 12770  00273A  5011               	movf	(___lodiv@divisor+4)^0,w,c
 12771  00273C  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 12772  00273E  5012               	movf	(___lodiv@divisor+5)^0,w,c
 12773  002740  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 12774  002742  5013               	movf	(___lodiv@divisor+6)^0,w,c
 12775  002744  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 12776  002746  5014               	movf	(___lodiv@divisor+7)^0,w,c
 12777  002748  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 12778  00274A  A0D8               	btfss	status,0,c
 12779  00274C  EFAA  F013         	goto	u5631
 12780  002750  EFAC  F013         	goto	u5630
 12781  002754                     u5631:
 12782  002754  EFBD  F013         	goto	l5939
 12783  002758                     u5630:
 12784  002758  500D               	movf	___lodiv@divisor^0,w,c
 12785  00275A  5E05               	subwf	___lodiv@dividend^0,f,c
 12786  00275C  500E               	movf	(___lodiv@divisor+1)^0,w,c
 12787  00275E  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 12788  002760  500F               	movf	(___lodiv@divisor+2)^0,w,c
 12789  002762  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 12790  002764  5010               	movf	(___lodiv@divisor+3)^0,w,c
 12791  002766  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 12792  002768  5011               	movf	(___lodiv@divisor+4)^0,w,c
 12793  00276A  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 12794  00276C  5012               	movf	(___lodiv@divisor+5)^0,w,c
 12795  00276E  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 12796  002770  5013               	movf	(___lodiv@divisor+6)^0,w,c
 12797  002772  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 12798  002774  5014               	movf	(___lodiv@divisor+7)^0,w,c
 12799  002776  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 12800  002778  8015               	bsf	___lodiv@quotient^0,0,c
 12801  00277A                     l5939:
 12802  00277A  90D8               	bcf	status,0,c
 12803  00277C  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 12804  00277E  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 12805  002780  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 12806  002782  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 12807  002784  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 12808  002786  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 12809  002788  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 12810  00278A  320D               	rrcf	___lodiv@divisor^0,f,c
 12811  00278C  2E1D               	decfsz	___lodiv@counter^0,f,c
 12812  00278E  EF8C  F013         	goto	l5931
 12813  002792                     l1573:
 12814  002792  C015  F005         	movff	___lodiv@quotient,?___lodiv
 12815  002796  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 12816  00279A  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 12817  00279E  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 12818  0027A2  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 12819  0027A6  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 12820  0027AA  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 12821  0027AE  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 12822  0027B2  0012               	return		;funcret
 12823  0027B4                     __end_of___lodiv:
 12824                           	opt callstack 0
 12825                           
 12826 ;; *************** function _stoa *****************
 12827 ;; Defined at:
 12828 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 12831 ;;		 -> NULL(0), 
 12832 ;;  s               2   17[COMRAM] PTR unsigned char 
 12833 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1474(20), ValidateCmd@ConfName_1470(20), ValidateCmd@ConfName(20), 
 12834 ;;		 -> STR_45(9), STR_44(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 12835 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  nuls            7   20[COMRAM] unsigned char [7]
 12838 ;;  l               2   35[COMRAM] int 
 12839 ;;  p               2   33[COMRAM] int 
 12840 ;;  cp              2   31[COMRAM] PTR unsigned char 
 12841 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1474(20), ValidateCmd@ConfName_1470(20), 
 12842 ;;		 -> ValidateCmd@ConfName(20), STR_45(9), STR_44(12), InitialiseString@RevNum(2), 
 12843 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 12844 ;;  w               2   29[COMRAM] int 
 12845 ;;  i               2   27[COMRAM] int 
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  2   15[COMRAM] int 
 12848 ;; Registers used:
 12849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12856 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12858 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12859 ;;Total ram usage:       22 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:    7
 12862 ;; This function calls:
 12863 ;;		_fputc
 12864 ;;		_strlen
 12865 ;; This function is called by:
 12866 ;;		_vfpfcnvrt
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text63
 12871  001B82                     __ptext63:
 12872                           	opt callstack 0
 12873  001B82                     _stoa:
 12874                           	opt callstack 20
 12875  001B82                     
 12876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12877  001B82  EE21  F0BD         	lfsr	2,stoa@F1139
 12878  001B86  EE10  F015         	lfsr	1,stoa@nuls
 12879  001B8A  0E06               	movlw	6
 12880  001B8C                     u5841:
 12881  001B8C  CFDB FFE3          	movff	plusw2,plusw1
 12882  001B90  06E8               	decf	wreg,f,c
 12883  001B92  E2FC               	bc	u5841
 12884  001B94                     
 12885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 12886  001B94  C012  F020         	movff	stoa@s,stoa@cp
 12887  001B98  C013  F021         	movff	stoa@s+1,stoa@cp+1
 12888  001B9C                     
 12889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 12890  001B9C  5020               	movf	stoa@cp^0,w,c
 12891  001B9E  1021               	iorwf	(stoa@cp+1)^0,w,c
 12892  001BA0  A4D8               	btfss	status,2,c
 12893  001BA2  EFD5  F00D         	goto	u5851
 12894  001BA6  EFD7  F00D         	goto	u5850
 12895  001BAA                     u5851:
 12896  001BAA  EFDB  F00D         	goto	l6041
 12897  001BAE                     u5850:
 12898  001BAE                     
 12899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 12900  001BAE  0E15               	movlw	low stoa@nuls
 12901  001BB0  6E20               	movwf	stoa@cp^0,c
 12902  001BB2  0E00               	movlw	high stoa@nuls
 12903  001BB4  6E21               	movwf	(stoa@cp+1)^0,c
 12904  001BB6                     l6041:
 12905                           
 12906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 12907  001BB6  C020  F005         	movff	stoa@cp,strlen@s
 12908  001BBA  C021  F006         	movff	stoa@cp+1,strlen@s+1
 12909  001BBE  ECF2  F01B         	call	_strlen	;wreg free
 12910  001BC2  C005  F024         	movff	?_strlen,stoa@l
 12911  001BC6  C006  F025         	movff	?_strlen+1,stoa@l+1
 12912  001BCA                     
 12913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 12914  001BCA  C0AE  F022         	movff	_prec,stoa@p
 12915  001BCE  C0AF  F023         	movff	_prec+1,stoa@p+1
 12916  001BD2                     
 12917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 12918  001BD2  BE23               	btfsc	(stoa@p+1)^0,7,c
 12919  001BD4  EFEE  F00D         	goto	u5861
 12920  001BD8  EFF0  F00D         	goto	u5860
 12921  001BDC                     u5861:
 12922  001BDC  EF05  F00E         	goto	l1032
 12923  001BE0                     u5860:
 12924  001BE0  5024               	movf	stoa@l^0,w,c
 12925  001BE2  5C22               	subwf	stoa@p^0,w,c
 12926  001BE4  5023               	movf	(stoa@p+1)^0,w,c
 12927  001BE6  0A80               	xorlw	128
 12928  001BE8  6E14               	movwf	??_stoa^0,c
 12929  001BEA  5025               	movf	(stoa@l+1)^0,w,c
 12930  001BEC  0A80               	xorlw	128
 12931  001BEE  5814               	subwfb	??_stoa^0,w,c
 12932  001BF0  A0D8               	btfss	status,0,c
 12933  001BF2  EFFD  F00D         	goto	u5871
 12934  001BF6  EFFF  F00D         	goto	u5870
 12935  001BFA                     u5871:
 12936  001BFA  EF01  F00E         	goto	l1030
 12937  001BFE                     u5870:
 12938  001BFE  EF05  F00E         	goto	l1032
 12939  001C02                     l1030:
 12940  001C02  C022  F024         	movff	stoa@p,stoa@l
 12941  001C06  C023  F025         	movff	stoa@p+1,stoa@l+1
 12942  001C0A                     l1032:
 12943                           
 12944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 12945  001C0A  C024  F022         	movff	stoa@l,stoa@p
 12946  001C0E  C025  F023         	movff	stoa@l+1,stoa@p+1
 12947                           
 12948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 12949  001C12  C0AC  F01E         	movff	_width,stoa@w
 12950  001C16  C0AD  F01F         	movff	_width+1,stoa@w+1
 12951                           
 12952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 12953  001C1A  B057               	btfsc	_flags^0,0,c
 12954  001C1C  EF12  F00E         	goto	u5881
 12955  001C20  EF14  F00E         	goto	u5880
 12956  001C24                     u5881:
 12957  001C24  EF31  F00E         	goto	l6057
 12958  001C28                     u5880:
 12959  001C28  EF22  F00E         	goto	l6055
 12960  001C2C                     l6051:
 12961                           
 12962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 12963  001C2C  0E00               	movlw	0
 12964  001C2E  6E08               	movwf	(fputc@c+1)^0,c
 12965  001C30  0E20               	movlw	32
 12966  001C32  6E07               	movwf	fputc@c^0,c
 12967  001C34  C010  F009         	movff	stoa@fp,fputc@fp
 12968  001C38  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12969  001C3C  EC2B  F018         	call	_fputc	;wreg free
 12970  001C40                     
 12971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 12972  001C40  4A24               	infsnz	stoa@l^0,f,c
 12973  001C42  2A25               	incf	(stoa@l+1)^0,f,c
 12974  001C44                     l6055:
 12975                           
 12976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 12977  001C44  501E               	movf	stoa@w^0,w,c
 12978  001C46  5C24               	subwf	stoa@l^0,w,c
 12979  001C48  5025               	movf	(stoa@l+1)^0,w,c
 12980  001C4A  0A80               	xorlw	128
 12981  001C4C  6E14               	movwf	??_stoa^0,c
 12982  001C4E  501F               	movf	(stoa@w+1)^0,w,c
 12983  001C50  0A80               	xorlw	128
 12984  001C52  5814               	subwfb	??_stoa^0,w,c
 12985  001C54  A0D8               	btfss	status,0,c
 12986  001C56  EF2F  F00E         	goto	u5891
 12987  001C5A  EF31  F00E         	goto	u5890
 12988  001C5E                     u5891:
 12989  001C5E  EF16  F00E         	goto	l6051
 12990  001C62                     u5890:
 12991  001C62                     l6057:
 12992                           
 12993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 12994  001C62  0E00               	movlw	0
 12995  001C64  6E1D               	movwf	(stoa@i+1)^0,c
 12996  001C66  0E00               	movlw	0
 12997  001C68  6E1C               	movwf	stoa@i^0,c
 12998                           
 12999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13000  001C6A  EF56  F00E         	goto	l6065
 13001  001C6E                     l6059:
 13002                           
 13003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 13004  001C6E  C020  FFF6         	movff	stoa@cp,tblptrl
 13005  001C72  C021  FFF7         	movff	stoa@cp+1,tblptrh
 13006  001C76  0E00               	movlw	low (__mediumconst shr (0+16))
 13007  001C78  6EF8               	movwf	tblptru,c
 13008  001C7A  0E0E               	movlw	(high __ramtop+-1)
 13009  001C7C  64F7               	cpfsgt	tblptrh,c
 13010  001C7E  D003               	bra	u5907
 13011  001C80  0008               	tblrd		*
 13012  001C82  50F5               	movf	tablat,w,c
 13013  001C84  D005               	bra	u5900
 13014  001C86                     u5907:
 13015  001C86  CFF6 FFE9          	movff	tblptrl,fsr0l
 13016  001C8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13017  001C8E  50EF               	movf	indf0,w,c
 13018  001C90                     u5900:
 13019  001C90  6E14               	movwf	??_stoa^0,c
 13020  001C92  5014               	movf	??_stoa^0,w,c
 13021  001C94  6E07               	movwf	fputc@c^0,c
 13022  001C96  6A08               	clrf	(fputc@c+1)^0,c
 13023  001C98  C010  F009         	movff	stoa@fp,fputc@fp
 13024  001C9C  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13025  001CA0  EC2B  F018         	call	_fputc	;wreg free
 13026  001CA4                     
 13027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 13028  001CA4  4A20               	infsnz	stoa@cp^0,f,c
 13029  001CA6  2A21               	incf	(stoa@cp+1)^0,f,c
 13030  001CA8                     
 13031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 13032  001CA8  4A1C               	infsnz	stoa@i^0,f,c
 13033  001CAA  2A1D               	incf	(stoa@i+1)^0,f,c
 13034  001CAC                     l6065:
 13035                           
 13036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13037  001CAC  5022               	movf	stoa@p^0,w,c
 13038  001CAE  5C1C               	subwf	stoa@i^0,w,c
 13039  001CB0  501D               	movf	(stoa@i+1)^0,w,c
 13040  001CB2  0A80               	xorlw	128
 13041  001CB4  6E14               	movwf	??_stoa^0,c
 13042  001CB6  5023               	movf	(stoa@p+1)^0,w,c
 13043  001CB8  0A80               	xorlw	128
 13044  001CBA  5814               	subwfb	??_stoa^0,w,c
 13045  001CBC  A0D8               	btfss	status,0,c
 13046  001CBE  EF63  F00E         	goto	u5911
 13047  001CC2  EF65  F00E         	goto	u5910
 13048  001CC6                     u5911:
 13049  001CC6  EF37  F00E         	goto	l6059
 13050  001CCA                     u5910:
 13051  001CCA                     
 13052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 13053  001CCA  A057               	btfss	_flags^0,0,c
 13054  001CCC  EF6A  F00E         	goto	u5921
 13055  001CD0  EF6C  F00E         	goto	u5920
 13056  001CD4                     u5921:
 13057  001CD4  EF89  F00E         	goto	l1042
 13058  001CD8                     u5920:
 13059  001CD8  EF7A  F00E         	goto	l6073
 13060  001CDC                     l6069:
 13061                           
 13062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 13063  001CDC  0E00               	movlw	0
 13064  001CDE  6E08               	movwf	(fputc@c+1)^0,c
 13065  001CE0  0E20               	movlw	32
 13066  001CE2  6E07               	movwf	fputc@c^0,c
 13067  001CE4  C010  F009         	movff	stoa@fp,fputc@fp
 13068  001CE8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13069  001CEC  EC2B  F018         	call	_fputc	;wreg free
 13070  001CF0                     
 13071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 13072  001CF0  4A24               	infsnz	stoa@l^0,f,c
 13073  001CF2  2A25               	incf	(stoa@l+1)^0,f,c
 13074  001CF4                     l6073:
 13075                           
 13076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 13077  001CF4  501E               	movf	stoa@w^0,w,c
 13078  001CF6  5C24               	subwf	stoa@l^0,w,c
 13079  001CF8  5025               	movf	(stoa@l+1)^0,w,c
 13080  001CFA  0A80               	xorlw	128
 13081  001CFC  6E14               	movwf	??_stoa^0,c
 13082  001CFE  501F               	movf	(stoa@w+1)^0,w,c
 13083  001D00  0A80               	xorlw	128
 13084  001D02  5814               	subwfb	??_stoa^0,w,c
 13085  001D04  A0D8               	btfss	status,0,c
 13086  001D06  EF87  F00E         	goto	u5931
 13087  001D0A  EF89  F00E         	goto	u5930
 13088  001D0E                     u5931:
 13089  001D0E  EF6E  F00E         	goto	l6069
 13090  001D12                     u5930:
 13091  001D12                     l1042:
 13092                           
 13093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 13094  001D12  C024  F010         	movff	stoa@l,?_stoa
 13095  001D16  C025  F011         	movff	stoa@l+1,?_stoa+1
 13096  001D1A  0012               	return		;funcret
 13097  001D1C                     __end_of_stoa:
 13098                           	opt callstack 0
 13099                           
 13100 ;; *************** function _dtoa *****************
 13101 ;; Defined at:
 13102 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13105 ;;		 -> NULL(0), 
 13106 ;;  d               8   35[COMRAM] long long 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;  n               8   59[COMRAM] long long 
 13109 ;;  i               2   67[COMRAM] int 
 13110 ;;  s               2   57[COMRAM] int 
 13111 ;;  w               2   55[COMRAM] int 
 13112 ;;  p               2   53[COMRAM] int 
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  2   33[COMRAM] int 
 13115 ;; Registers used:
 13116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13117 ;; Tracked objects:
 13118 ;;		On entry : 0/0
 13119 ;;		On exit  : 0/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13122 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13123 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13124 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13125 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13126 ;;Total ram usage:       36 bytes
 13127 ;; Hardware stack levels used:    1
 13128 ;; Hardware stack levels required when called:    9
 13129 ;; This function calls:
 13130 ;;		___aodiv
 13131 ;;		___aomod
 13132 ;;		_abs
 13133 ;;		_pad
 13134 ;; This function is called by:
 13135 ;;		_vfpfcnvrt
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text64
 13140  000A8C                     __ptext64:
 13141                           	opt callstack 0
 13142  000A8C                     _dtoa:
 13143                           	opt callstack 18
 13144  000A8C                     
 13145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13146  000A8C  C024  F03C         	movff	dtoa@d,dtoa@n
 13147  000A90  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 13148  000A94  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 13149  000A98  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 13150  000A9C  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 13151  000AA0  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 13152  000AA4  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 13153  000AA8  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 13154  000AAC                     
 13155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13156  000AAC  BE43               	btfsc	(dtoa@n+7)^0,7,c
 13157  000AAE  EF5B  F005         	goto	u5691
 13158  000AB2  EF5E  F005         	goto	u5690
 13159  000AB6                     u5691:
 13160  000AB6  0E01               	movlw	1
 13161  000AB8  EF5F  F005         	goto	u5700
 13162  000ABC                     u5690:
 13163  000ABC  0E00               	movlw	0
 13164  000ABE                     u5700:
 13165  000ABE  6E3A               	movwf	dtoa@s^0,c
 13166  000AC0  6A3B               	clrf	(dtoa@s+1)^0,c
 13167                           
 13168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13169  000AC2  503A               	movf	dtoa@s^0,w,c
 13170  000AC4  103B               	iorwf	(dtoa@s+1)^0,w,c
 13171  000AC6  B4D8               	btfsc	status,2,c
 13172  000AC8  EF68  F005         	goto	u5711
 13173  000ACC  EF6A  F005         	goto	u5710
 13174  000AD0                     u5711:
 13175  000AD0  EF7A  F005         	goto	l5977
 13176  000AD4                     u5710:
 13177  000AD4                     
 13178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13179  000AD4  1E43               	comf	(dtoa@n+7)^0,f,c
 13180  000AD6  1E42               	comf	(dtoa@n+6)^0,f,c
 13181  000AD8  1E41               	comf	(dtoa@n+5)^0,f,c
 13182  000ADA  1E40               	comf	(dtoa@n+4)^0,f,c
 13183  000ADC  1E3F               	comf	(dtoa@n+3)^0,f,c
 13184  000ADE  1E3E               	comf	(dtoa@n+2)^0,f,c
 13185  000AE0  1E3D               	comf	(dtoa@n+1)^0,f,c
 13186  000AE2  6C3C               	negf	dtoa@n^0,c
 13187  000AE4  0E00               	movlw	0
 13188  000AE6  223D               	addwfc	(dtoa@n+1)^0,f,c
 13189  000AE8  223E               	addwfc	(dtoa@n+2)^0,f,c
 13190  000AEA  223F               	addwfc	(dtoa@n+3)^0,f,c
 13191  000AEC  2240               	addwfc	(dtoa@n+4)^0,f,c
 13192  000AEE  2241               	addwfc	(dtoa@n+5)^0,f,c
 13193  000AF0  2242               	addwfc	(dtoa@n+6)^0,f,c
 13194  000AF2  2243               	addwfc	(dtoa@n+7)^0,f,c
 13195  000AF4                     l5977:
 13196                           
 13197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13198  000AF4  0100               	movlb	0	; () banked
 13199  000AF6  BFAF               	btfsc	(_prec+1)& (0+255),7,b
 13200  000AF8  EF80  F005         	goto	u5721
 13201  000AFC  EF82  F005         	goto	u5720
 13202  000B00                     u5721:
 13203  000B00  EF83  F005         	goto	l5981
 13204  000B04                     u5720:
 13205  000B04                     
 13206                           ; BSR set to: 0
 13207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13208  000B04  9257               	bcf	_flags^0,1,c
 13209  000B06                     l5981:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13213  000B06  BFAF               	btfsc	(_prec+1)& (0+255),7,b
 13214  000B08  EF90  F005         	goto	u5730
 13215  000B0C  51AF               	movf	(_prec+1)& (0+255),w,b
 13216  000B0E  E106               	bnz	u5731
 13217  000B10  05AE               	decf	_prec& (0+255),w,b
 13218  000B12  B0D8               	btfsc	status,0,c
 13219  000B14  EF8E  F005         	goto	u5731
 13220  000B18  EF90  F005         	goto	u5730
 13221  000B1C                     u5731:
 13222  000B1C  EF96  F005         	goto	l1003
 13223  000B20                     u5730:
 13224  000B20                     
 13225                           ; BSR set to: 0
 13226  000B20  0E00               	movlw	0
 13227  000B22  6E37               	movwf	(dtoa@p+1)^0,c
 13228  000B24  0E01               	movlw	1
 13229  000B26  6E36               	movwf	dtoa@p^0,c
 13230  000B28  EF9A  F005         	goto	l1005
 13231  000B2C                     l1003:
 13232                           
 13233                           ; BSR set to: 0
 13234  000B2C  C0AE  F036         	movff	_prec,dtoa@p
 13235  000B30  C0AF  F037         	movff	_prec+1,dtoa@p+1
 13236  000B34                     l1005:
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13240  000B34  C0AC  F038         	movff	_width,dtoa@w
 13241  000B38  C0AD  F039         	movff	_width+1,dtoa@w+1
 13242  000B3C                     
 13243                           ; BSR set to: 0
 13244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13245  000B3C  503A               	movf	dtoa@s^0,w,c
 13246  000B3E  103B               	iorwf	(dtoa@s+1)^0,w,c
 13247  000B40  A4D8               	btfss	status,2,c
 13248  000B42  EFA5  F005         	goto	u5741
 13249  000B46  EFA7  F005         	goto	u5740
 13250  000B4A                     u5741:
 13251  000B4A  EFAE  F005         	goto	l5989
 13252  000B4E                     u5740:
 13253  000B4E                     
 13254                           ; BSR set to: 0
 13255  000B4E  A457               	btfss	_flags^0,2,c
 13256  000B50  EFAC  F005         	goto	u5751
 13257  000B54  EFAE  F005         	goto	u5750
 13258  000B58                     u5751:
 13259  000B58  EFB1  F005         	goto	l5991
 13260  000B5C                     u5750:
 13261  000B5C                     l5989:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13265  000B5C  0638               	decf	dtoa@w^0,f,c
 13266  000B5E  A0D8               	btfss	status,0,c
 13267  000B60  0639               	decf	(dtoa@w+1)^0,f,c
 13268  000B62                     l5991:
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13272  000B62  0E00               	movlw	0
 13273  000B64  6E45               	movwf	(dtoa@i+1)^0,c
 13274  000B66  0E1F               	movlw	31
 13275  000B68  6E44               	movwf	dtoa@i^0,c
 13276  000B6A                     
 13277                           ; BSR set to: 0
 13278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13279  000B6A  0E00               	movlw	0
 13280  000B6C  0101               	movlb	1	; () banked
 13281  000B6E  6F62               	movwf	(_dbuf+31)& (0+255),b
 13282                           
 13283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13284  000B70  EF36  F006         	goto	l6005
 13285  000B74                     l5995:
 13286                           
 13287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13288  000B74  0644               	decf	dtoa@i^0,f,c
 13289  000B76  A0D8               	btfss	status,0,c
 13290  000B78  0645               	decf	(dtoa@i+1)^0,f,c
 13291  000B7A                     
 13292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13293  000B7A  0E43               	movlw	low _dbuf
 13294  000B7C  2444               	addwf	dtoa@i^0,w,c
 13295  000B7E  6ED9               	movwf	fsr2l,c
 13296  000B80  0E01               	movlw	high _dbuf
 13297  000B82  2045               	addwfc	(dtoa@i+1)^0,w,c
 13298  000B84  6EDA               	movwf	fsr2h,c
 13299  000B86  C03C  F005         	movff	dtoa@n,___aomod@dividend
 13300  000B8A  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 13301  000B8E  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 13302  000B92  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 13303  000B96  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 13304  000B9A  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 13305  000B9E  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 13306  000BA2  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 13307  000BA6  0E0A               	movlw	10
 13308  000BA8  6E0D               	movwf	___aomod@divisor^0,c
 13309  000BAA  0E00               	movlw	0
 13310  000BAC  6E0E               	movwf	(___aomod@divisor+1)^0,c
 13311  000BAE  0E00               	movlw	0
 13312  000BB0  6E0F               	movwf	(___aomod@divisor+2)^0,c
 13313  000BB2  0E00               	movlw	0
 13314  000BB4  6E10               	movwf	(___aomod@divisor+3)^0,c
 13315  000BB6  0E00               	movlw	0
 13316  000BB8  6E11               	movwf	(___aomod@divisor+4)^0,c
 13317  000BBA  0E00               	movlw	0
 13318  000BBC  6E12               	movwf	(___aomod@divisor+5)^0,c
 13319  000BBE  0E00               	movlw	0
 13320  000BC0  6E13               	movwf	(___aomod@divisor+6)^0,c
 13321  000BC2  0E00               	movlw	0
 13322  000BC4  6E14               	movwf	(___aomod@divisor+7)^0,c
 13323  000BC6  ECE2  F010         	call	___aomod	;wreg free
 13324  000BCA  C005  F02C         	movff	?___aomod,??_dtoa
 13325  000BCE  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 13326  000BD2  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 13327  000BD6  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 13328  000BDA  C009  F030         	movff	?___aomod+4,??_dtoa+4
 13329  000BDE  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 13330  000BE2  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 13331  000BE6  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 13332  000BEA  C02C  F017         	movff	??_dtoa,abs@a
 13333  000BEE  C02E  F018         	movff	??_dtoa+2,abs@a+1
 13334  000BF2  EC54  F01D         	call	_abs	;wreg free
 13335  000BF6  5017               	movf	?_abs^0,w,c
 13336  000BF8  0F30               	addlw	48
 13337  000BFA  6EDF               	movwf	indf2,c
 13338  000BFC                     
 13339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13340  000BFC  0636               	decf	dtoa@p^0,f,c
 13341  000BFE  A0D8               	btfss	status,0,c
 13342  000C00  0637               	decf	(dtoa@p+1)^0,f,c
 13343  000C02                     
 13344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13345  000C02  0638               	decf	dtoa@w^0,f,c
 13346  000C04  A0D8               	btfss	status,0,c
 13347  000C06  0639               	decf	(dtoa@w+1)^0,f,c
 13348  000C08                     
 13349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13350  000C08  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 13351  000C0C  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 13352  000C10  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 13353  000C14  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 13354  000C18  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 13355  000C1C  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 13356  000C20  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 13357  000C24  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 13358  000C28  0E0A               	movlw	10
 13359  000C2A  6E0D               	movwf	___aodiv@divisor^0,c
 13360  000C2C  0E00               	movlw	0
 13361  000C2E  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 13362  000C30  0E00               	movlw	0
 13363  000C32  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 13364  000C34  0E00               	movlw	0
 13365  000C36  6E10               	movwf	(___aodiv@divisor+3)^0,c
 13366  000C38  0E00               	movlw	0
 13367  000C3A  6E11               	movwf	(___aodiv@divisor+4)^0,c
 13368  000C3C  0E00               	movlw	0
 13369  000C3E  6E12               	movwf	(___aodiv@divisor+5)^0,c
 13370  000C40  0E00               	movlw	0
 13371  000C42  6E13               	movwf	(___aodiv@divisor+6)^0,c
 13372  000C44  0E00               	movlw	0
 13373  000C46  6E14               	movwf	(___aodiv@divisor+7)^0,c
 13374  000C48  EC5B  F00F         	call	___aodiv	;wreg free
 13375  000C4C  C005  F03C         	movff	?___aodiv,dtoa@n
 13376  000C50  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 13377  000C54  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 13378  000C58  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 13379  000C5C  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 13380  000C60  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 13381  000C64  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 13382  000C68  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 13383  000C6C                     l6005:
 13384                           
 13385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13386  000C6C  BE45               	btfsc	(dtoa@i+1)^0,7,c
 13387  000C6E  EF41  F006         	goto	u5761
 13388  000C72  5045               	movf	(dtoa@i+1)^0,w,c
 13389  000C74  E108               	bnz	u5760
 13390  000C76  0444               	decf	dtoa@i^0,w,c
 13391  000C78  A0D8               	btfss	status,0,c
 13392  000C7A  EF41  F006         	goto	u5761
 13393  000C7E  EF43  F006         	goto	u5760
 13394  000C82                     u5761:
 13395  000C82  EF73  F006         	goto	l6015
 13396  000C86                     u5760:
 13397  000C86  503C               	movf	dtoa@n^0,w,c
 13398  000C88  103D               	iorwf	(dtoa@n+1)^0,w,c
 13399  000C8A  103E               	iorwf	(dtoa@n+2)^0,w,c
 13400  000C8C  103F               	iorwf	(dtoa@n+3)^0,w,c
 13401  000C8E  1040               	iorwf	(dtoa@n+4)^0,w,c
 13402  000C90  1041               	iorwf	(dtoa@n+5)^0,w,c
 13403  000C92  1042               	iorwf	(dtoa@n+6)^0,w,c
 13404  000C94  1043               	iorwf	(dtoa@n+7)^0,w,c
 13405  000C96  A4D8               	btfss	status,2,c
 13406  000C98  EF50  F006         	goto	u5771
 13407  000C9C  EF52  F006         	goto	u5770
 13408  000CA0                     u5771:
 13409  000CA0  EFBA  F005         	goto	l5995
 13410  000CA4                     u5770:
 13411  000CA4  BE37               	btfsc	(dtoa@p+1)^0,7,c
 13412  000CA6  EF5F  F006         	goto	u5780
 13413  000CAA  5037               	movf	(dtoa@p+1)^0,w,c
 13414  000CAC  E106               	bnz	u5781
 13415  000CAE  0436               	decf	dtoa@p^0,w,c
 13416  000CB0  B0D8               	btfsc	status,0,c
 13417  000CB2  EF5D  F006         	goto	u5781
 13418  000CB6  EF5F  F006         	goto	u5780
 13419  000CBA                     u5781:
 13420  000CBA  EFBA  F005         	goto	l5995
 13421  000CBE                     u5780:
 13422  000CBE  BE39               	btfsc	(dtoa@w+1)^0,7,c
 13423  000CC0  EF6A  F006         	goto	u5791
 13424  000CC4  5039               	movf	(dtoa@w+1)^0,w,c
 13425  000CC6  E108               	bnz	u5790
 13426  000CC8  0438               	decf	dtoa@w^0,w,c
 13427  000CCA  A0D8               	btfss	status,0,c
 13428  000CCC  EF6A  F006         	goto	u5791
 13429  000CD0  EF6C  F006         	goto	u5790
 13430  000CD4                     u5791:
 13431  000CD4  EF73  F006         	goto	l6015
 13432  000CD8                     u5790:
 13433  000CD8  B257               	btfsc	_flags^0,1,c
 13434  000CDA  EF71  F006         	goto	u5801
 13435  000CDE  EF73  F006         	goto	u5800
 13436  000CE2                     u5801:
 13437  000CE2  EFBA  F005         	goto	l5995
 13438  000CE6                     u5800:
 13439  000CE6                     l6015:
 13440                           
 13441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13442  000CE6  503A               	movf	dtoa@s^0,w,c
 13443  000CE8  103B               	iorwf	(dtoa@s+1)^0,w,c
 13444  000CEA  A4D8               	btfss	status,2,c
 13445  000CEC  EF7A  F006         	goto	u5811
 13446  000CF0  EF7C  F006         	goto	u5810
 13447  000CF4                     u5811:
 13448  000CF4  EF83  F006         	goto	l6019
 13449  000CF8                     u5810:
 13450  000CF8  A457               	btfss	_flags^0,2,c
 13451  000CFA  EF81  F006         	goto	u5821
 13452  000CFE  EF83  F006         	goto	u5820
 13453  000D02                     u5821:
 13454  000D02  EFA1  F006         	goto	l6029
 13455  000D06                     u5820:
 13456  000D06                     l6019:
 13457                           
 13458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13459  000D06  0644               	decf	dtoa@i^0,f,c
 13460  000D08  A0D8               	btfss	status,0,c
 13461  000D0A  0645               	decf	(dtoa@i+1)^0,f,c
 13462  000D0C                     
 13463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13464  000D0C  503A               	movf	dtoa@s^0,w,c
 13465  000D0E  103B               	iorwf	(dtoa@s+1)^0,w,c
 13466  000D10  A4D8               	btfss	status,2,c
 13467  000D12  EF8D  F006         	goto	u5831
 13468  000D16  EF8F  F006         	goto	u5830
 13469  000D1A                     u5831:
 13470  000D1A  EF95  F006         	goto	l6025
 13471  000D1E                     u5830:
 13472  000D1E  0E00               	movlw	0
 13473  000D20  6E35               	movwf	(_dtoa$1552+1)^0,c
 13474  000D22  0E2B               	movlw	43
 13475  000D24  6E34               	movwf	_dtoa$1552^0,c
 13476  000D26  EF99  F006         	goto	l6027
 13477  000D2A                     l6025:
 13478  000D2A  0E00               	movlw	0
 13479  000D2C  6E35               	movwf	(_dtoa$1552+1)^0,c
 13480  000D2E  0E2D               	movlw	45
 13481  000D30  6E34               	movwf	_dtoa$1552^0,c
 13482  000D32                     l6027:
 13483  000D32  0E43               	movlw	low _dbuf
 13484  000D34  2444               	addwf	dtoa@i^0,w,c
 13485  000D36  6ED9               	movwf	fsr2l,c
 13486  000D38  0E01               	movlw	high _dbuf
 13487  000D3A  2045               	addwfc	(dtoa@i+1)^0,w,c
 13488  000D3C  6EDA               	movwf	fsr2h,c
 13489  000D3E  C034  FFDF         	movff	_dtoa$1552,indf2
 13490  000D42                     l6029:
 13491                           
 13492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13493  000D42  C022  F017         	movff	dtoa@fp,pad@fp
 13494  000D46  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 13495  000D4A  0E43               	movlw	low _dbuf
 13496  000D4C  2444               	addwf	dtoa@i^0,w,c
 13497  000D4E  6E19               	movwf	pad@buf^0,c
 13498  000D50  0E01               	movlw	high _dbuf
 13499  000D52  2045               	addwfc	(dtoa@i+1)^0,w,c
 13500  000D54  6E1A               	movwf	(pad@buf+1)^0,c
 13501  000D56  C038  F01B         	movff	dtoa@w,pad@p
 13502  000D5A  C039  F01C         	movff	dtoa@w+1,pad@p+1
 13503  000D5E  EC56  F016         	call	_pad	;wreg free
 13504  000D62  C017  F022         	movff	?_pad,?_dtoa
 13505  000D66  C018  F023         	movff	?_pad+1,?_dtoa+1
 13506  000D6A  0012               	return		;funcret
 13507  000D6C                     __end_of_dtoa:
 13508                           	opt callstack 0
 13509                           
 13510 ;; *************** function _pad *****************
 13511 ;; Defined at:
 13512 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 13515 ;;		 -> NULL(0), 
 13516 ;;  buf             2   24[COMRAM] PTR unsigned char 
 13517 ;;		 -> dbuf(32), 
 13518 ;;  p               2   26[COMRAM] int 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;  w               2   31[COMRAM] int 
 13521 ;;  i               2   29[COMRAM] int 
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  2   22[COMRAM] int 
 13524 ;; Registers used:
 13525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13531 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13534 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13535 ;;Total ram usage:       11 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    8
 13538 ;; This function calls:
 13539 ;;		_fputc
 13540 ;;		_fputs
 13541 ;;		_strlen
 13542 ;; This function is called by:
 13543 ;;		_dtoa
 13544 ;;		_utoa
 13545 ;;		_xtoa
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           
 13549                           	psect	text65
 13550  002CAC                     __ptext65:
 13551                           	opt callstack 0
 13552  002CAC                     _pad:
 13553                           	opt callstack 18
 13554  002CAC                     
 13555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13556  002CAC  A057               	btfss	_flags^0,0,c
 13557  002CAE  EF5B  F016         	goto	u5331
 13558  002CB2  EF5D  F016         	goto	u5330
 13559  002CB6                     u5331:
 13560  002CB6  EF67  F016         	goto	l5791
 13561  002CBA                     u5330:
 13562  002CBA                     
 13563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13564  002CBA  C019  F010         	movff	pad@buf,fputs@s
 13565  002CBE  C01A  F011         	movff	pad@buf+1,fputs@s+1
 13566  002CC2  C017  F012         	movff	pad@fp,fputs@fp
 13567  002CC6  C018  F013         	movff	pad@fp+1,fputs@fp+1
 13568  002CCA  ECD1  F01C         	call	_fputs	;wreg free
 13569  002CCE                     l5791:
 13570                           
 13571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13572  002CCE  BE1C               	btfsc	(pad@p+1)^0,7,c
 13573  002CD0  EF6C  F016         	goto	u5341
 13574  002CD4  EF6E  F016         	goto	u5340
 13575  002CD8                     u5341:
 13576  002CD8  EF74  F016         	goto	l5795
 13577  002CDC                     u5340:
 13578  002CDC  C01B  F020         	movff	pad@p,pad@w
 13579  002CE0  C01C  F021         	movff	pad@p+1,pad@w+1
 13580  002CE4  EF78  F016         	goto	l992
 13581  002CE8                     l5795:
 13582  002CE8  0E00               	movlw	0
 13583  002CEA  6E21               	movwf	(pad@w+1)^0,c
 13584  002CEC  0E00               	movlw	0
 13585  002CEE  6E20               	movwf	pad@w^0,c
 13586  002CF0                     l992:
 13587                           
 13588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13589  002CF0  0E00               	movlw	0
 13590  002CF2  6E1F               	movwf	(pad@i+1)^0,c
 13591  002CF4  0E00               	movlw	0
 13592  002CF6  6E1E               	movwf	pad@i^0,c
 13593                           
 13594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13595  002CF8  EF8A  F016         	goto	l5801
 13596  002CFC                     l5797:
 13597                           
 13598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13599  002CFC  0E00               	movlw	0
 13600  002CFE  6E08               	movwf	(fputc@c+1)^0,c
 13601  002D00  0E20               	movlw	32
 13602  002D02  6E07               	movwf	fputc@c^0,c
 13603  002D04  C017  F009         	movff	pad@fp,fputc@fp
 13604  002D08  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 13605  002D0C  EC2B  F018         	call	_fputc	;wreg free
 13606  002D10                     
 13607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13608  002D10  4A1E               	infsnz	pad@i^0,f,c
 13609  002D12  2A1F               	incf	(pad@i+1)^0,f,c
 13610  002D14                     l5801:
 13611                           
 13612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13613  002D14  5020               	movf	pad@w^0,w,c
 13614  002D16  5C1E               	subwf	pad@i^0,w,c
 13615  002D18  501F               	movf	(pad@i+1)^0,w,c
 13616  002D1A  0A80               	xorlw	128
 13617  002D1C  6E1D               	movwf	??_pad^0,c
 13618  002D1E  5021               	movf	(pad@w+1)^0,w,c
 13619  002D20  0A80               	xorlw	128
 13620  002D22  581D               	subwfb	??_pad^0,w,c
 13621  002D24  A0D8               	btfss	status,0,c
 13622  002D26  EF97  F016         	goto	u5351
 13623  002D2A  EF99  F016         	goto	u5350
 13624  002D2E                     u5351:
 13625  002D2E  EF7E  F016         	goto	l5797
 13626  002D32                     u5350:
 13627  002D32                     
 13628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13629  002D32  B057               	btfsc	_flags^0,0,c
 13630  002D34  EF9E  F016         	goto	u5361
 13631  002D38  EFA0  F016         	goto	u5360
 13632  002D3C                     u5361:
 13633  002D3C  EFAA  F016         	goto	l5805
 13634  002D40                     u5360:
 13635  002D40                     
 13636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13637  002D40  C019  F010         	movff	pad@buf,fputs@s
 13638  002D44  C01A  F011         	movff	pad@buf+1,fputs@s+1
 13639  002D48  C017  F012         	movff	pad@fp,fputs@fp
 13640  002D4C  C018  F013         	movff	pad@fp+1,fputs@fp+1
 13641  002D50  ECD1  F01C         	call	_fputs	;wreg free
 13642  002D54                     l5805:
 13643                           
 13644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13645  002D54  C019  F005         	movff	pad@buf,strlen@s
 13646  002D58  C01A  F006         	movff	pad@buf+1,strlen@s+1
 13647  002D5C  ECF2  F01B         	call	_strlen	;wreg free
 13648  002D60  5020               	movf	pad@w^0,w,c
 13649  002D62  2405               	addwf	?_strlen^0,w,c
 13650  002D64  6E17               	movwf	?_pad^0,c
 13651  002D66  5021               	movf	(pad@w+1)^0,w,c
 13652  002D68  2006               	addwfc	(?_strlen+1)^0,w,c
 13653  002D6A  6E18               	movwf	(?_pad+1)^0,c
 13654  002D6C  0012               	return		;funcret
 13655  002D6E                     __end_of_pad:
 13656                           	opt callstack 0
 13657                           
 13658 ;; *************** function _strlen *****************
 13659 ;; Defined at:
 13660 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13661 ;; Parameters:    Size  Location     Type
 13662 ;;  s               2    4[COMRAM] PTR const unsigned char 
 13663 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1474(20), 
 13664 ;;		 -> ValidateCmd@ConfName_1470(20), ValidateCmd@ConfName(20), STR_45(9), STR_44(12), 
 13665 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  a               2    6[COMRAM] PTR const unsigned char 
 13668 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1474(20), 
 13669 ;;		 -> ValidateCmd@ConfName_1470(20), ValidateCmd@ConfName(20), STR_45(9), STR_44(12), 
 13670 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  2    4[COMRAM] unsigned int 
 13673 ;; Registers used:
 13674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13684 ;;Total ram usage:        4 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:    4
 13687 ;; This function calls:
 13688 ;;		Nothing
 13689 ;; This function is called by:
 13690 ;;		_ReadRX232
 13691 ;;		_SaveCardDat
 13692 ;;		_pad
 13693 ;;		_stoa
 13694 ;;		_strcat
 13695 ;; This function uses a non-reentrant model
 13696 ;;
 13697                           
 13698                           	psect	text66
 13699  0037E4                     __ptext66:
 13700                           	opt callstack 0
 13701  0037E4                     _strlen:
 13702                           	opt callstack 21
 13703  0037E4  C005  F007         	movff	strlen@s,strlen@a
 13704  0037E8  C006  F008         	movff	strlen@s+1,strlen@a+1
 13705  0037EC  EFFA  F01B         	goto	l5769
 13706  0037F0                     l5767:
 13707  0037F0  4A05               	infsnz	strlen@s^0,f,c
 13708  0037F2  2A06               	incf	(strlen@s+1)^0,f,c
 13709  0037F4                     l5769:
 13710  0037F4  C005  FFF6         	movff	strlen@s,tblptrl
 13711  0037F8  C006  FFF7         	movff	strlen@s+1,tblptrh
 13712  0037FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13713  0037FE  6EF8               	movwf	tblptru,c
 13714  003800  0E0E               	movlw	(high __ramtop+-1)
 13715  003802  64F7               	cpfsgt	tblptrh,c
 13716  003804  D003               	bra	u5287
 13717  003806  0008               	tblrd		*
 13718  003808  50F5               	movf	tablat,w,c
 13719  00380A  D005               	bra	u5280
 13720  00380C                     u5287:
 13721  00380C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13722  003810  CFF7 FFEA          	movff	tblptrh,fsr0h
 13723  003814  50EF               	movf	indf0,w,c
 13724  003816                     u5280:
 13725  003816  0900               	iorlw	0
 13726  003818  A4D8               	btfss	status,2,c
 13727  00381A  EF11  F01C         	goto	u5291
 13728  00381E  EF13  F01C         	goto	u5290
 13729  003822                     u5291:
 13730  003822  EFF8  F01B         	goto	l5767
 13731  003826                     u5290:
 13732  003826  5007               	movf	strlen@a^0,w,c
 13733  003828  5C05               	subwf	strlen@s^0,w,c
 13734  00382A  6E05               	movwf	?_strlen^0,c
 13735  00382C  5008               	movf	(strlen@a+1)^0,w,c
 13736  00382E  5806               	subwfb	(strlen@s+1)^0,w,c
 13737  003830  6E06               	movwf	(?_strlen+1)^0,c
 13738  003832  0012               	return		;funcret
 13739  003834                     __end_of_strlen:
 13740                           	opt callstack 0
 13741                           
 13742 ;; *************** function _fputs *****************
 13743 ;; Defined at:
 13744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;  s               2   15[COMRAM] PTR const unsigned char 
 13747 ;;		 -> dbuf(32), 
 13748 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 13749 ;;		 -> NULL(0), 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  i               2   20[COMRAM] int 
 13752 ;;  c               1   19[COMRAM] unsigned char 
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  2   15[COMRAM] int 
 13755 ;; Registers used:
 13756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13757 ;; Tracked objects:
 13758 ;;		On entry : 0/0
 13759 ;;		On exit  : 0/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13763 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13765 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13766 ;;Total ram usage:        7 bytes
 13767 ;; Hardware stack levels used:    1
 13768 ;; Hardware stack levels required when called:    7
 13769 ;; This function calls:
 13770 ;;		_fputc
 13771 ;; This function is called by:
 13772 ;;		_pad
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           	psect	text67
 13777  0039A2                     __ptext67:
 13778                           	opt callstack 0
 13779  0039A2                     _fputs:
 13780                           	opt callstack 18
 13781  0039A2  0E00               	movlw	0
 13782  0039A4  6E16               	movwf	(fputs@i+1)^0,c
 13783  0039A6  0E00               	movlw	0
 13784  0039A8  6E15               	movwf	fputs@i^0,c
 13785  0039AA  EFE2  F01C         	goto	l5781
 13786  0039AE                     l5777:
 13787  0039AE  C014  F007         	movff	fputs@c,fputc@c
 13788  0039B2  6A08               	clrf	(fputc@c+1)^0,c
 13789  0039B4  C012  F009         	movff	fputs@fp,fputc@fp
 13790  0039B8  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 13791  0039BC  EC2B  F018         	call	_fputc	;wreg free
 13792  0039C0  4A15               	infsnz	fputs@i^0,f,c
 13793  0039C2  2A16               	incf	(fputs@i+1)^0,f,c
 13794  0039C4                     l5781:
 13795  0039C4  5015               	movf	fputs@i^0,w,c
 13796  0039C6  2410               	addwf	fputs@s^0,w,c
 13797  0039C8  6ED9               	movwf	fsr2l,c
 13798  0039CA  5016               	movf	(fputs@i+1)^0,w,c
 13799  0039CC  2011               	addwfc	(fputs@s+1)^0,w,c
 13800  0039CE  6EDA               	movwf	fsr2h,c
 13801  0039D0  50DF               	movf	indf2,w,c
 13802  0039D2  6E14               	movwf	fputs@c^0,c
 13803  0039D4  5014               	movf	fputs@c^0,w,c
 13804  0039D6  A4D8               	btfss	status,2,c
 13805  0039D8  EFF0  F01C         	goto	u5301
 13806  0039DC  EFF2  F01C         	goto	u5300
 13807  0039E0                     u5301:
 13808  0039E0  EFD7  F01C         	goto	l5777
 13809  0039E4                     u5300:
 13810  0039E4  0012               	return		;funcret
 13811  0039E6                     __end_of_fputs:
 13812                           	opt callstack 0
 13813                           
 13814 ;; *************** function _fputc *****************
 13815 ;; Defined at:
 13816 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  c               2    6[COMRAM] int 
 13819 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 13820 ;;		 -> NULL(0), 
 13821 ;; Auto vars:     Size  Location     Type
 13822 ;;		None
 13823 ;; Return value:  Size  Location     Type
 13824 ;;                  2    6[COMRAM] int 
 13825 ;; Registers used:
 13826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13827 ;; Tracked objects:
 13828 ;;		On entry : 0/0
 13829 ;;		On exit  : 0/0
 13830 ;;		Unchanged: 0/0
 13831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13834 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13835 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13836 ;;Total ram usage:        9 bytes
 13837 ;; Hardware stack levels used:    1
 13838 ;; Hardware stack levels required when called:    6
 13839 ;; This function calls:
 13840 ;;		_putch
 13841 ;; This function is called by:
 13842 ;;		_pad
 13843 ;;		_stoa
 13844 ;;		_vfpfcnvrt
 13845 ;;		_fputs
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text68
 13850  003056                     __ptext68:
 13851                           	opt callstack 0
 13852  003056                     _fputc:
 13853                           	opt callstack 18
 13854  003056  5009               	movf	fputc@fp^0,w,c
 13855  003058  100A               	iorwf	(fputc@fp+1)^0,w,c
 13856  00305A  B4D8               	btfsc	status,2,c
 13857  00305C  EF32  F018         	goto	u5241
 13858  003060  EF34  F018         	goto	u5240
 13859  003064                     u5241:
 13860  003064  EF3D  F018         	goto	l5755
 13861  003068                     u5240:
 13862  003068  5009               	movf	fputc@fp^0,w,c
 13863  00306A  100A               	iorwf	(fputc@fp+1)^0,w,c
 13864  00306C  A4D8               	btfss	status,2,c
 13865  00306E  EF3B  F018         	goto	u5251
 13866  003072  EF3D  F018         	goto	u5250
 13867  003076                     u5251:
 13868  003076  EF42  F018         	goto	l5757
 13869  00307A                     u5250:
 13870  00307A                     l5755:
 13871  00307A  5007               	movf	fputc@c^0,w,c
 13872  00307C  EC12  F01F         	call	_putch
 13873  003080  EF75  F018         	goto	l1892
 13874  003084                     l5757:
 13875  003084  EE20 F004          	lfsr	2,4
 13876  003088  5009               	movf	fputc@fp^0,w,c
 13877  00308A  26D9               	addwf	fsr2l,f,c
 13878  00308C  500A               	movf	(fputc@fp+1)^0,w,c
 13879  00308E  22DA               	addwfc	fsr2h,f,c
 13880  003090  50DE               	movf	postinc2,w,c
 13881  003092  10DE               	iorwf	postinc2,w,c
 13882  003094  B4D8               	btfsc	status,2,c
 13883  003096  EF4F  F018         	goto	u5261
 13884  00309A  EF51  F018         	goto	u5260
 13885  00309E                     u5261:
 13886  00309E  EF6C  F018         	goto	l5761
 13887  0030A2                     u5260:
 13888  0030A2  EE20 F004          	lfsr	2,4
 13889  0030A6  5009               	movf	fputc@fp^0,w,c
 13890  0030A8  26D9               	addwf	fsr2l,f,c
 13891  0030AA  500A               	movf	(fputc@fp+1)^0,w,c
 13892  0030AC  22DA               	addwfc	fsr2h,f,c
 13893  0030AE  EE10 F002          	lfsr	1,2
 13894  0030B2  5009               	movf	fputc@fp^0,w,c
 13895  0030B4  26E1               	addwf	fsr1l,f,c
 13896  0030B6  500A               	movf	(fputc@fp+1)^0,w,c
 13897  0030B8  22E2               	addwfc	fsr1h,f,c
 13898  0030BA  50DE               	movf	postinc2,w,c
 13899  0030BC  5CE6               	subwf	postinc1,w,c
 13900  0030BE  50E6               	movf	postinc1,w,c
 13901  0030C0  0A80               	xorlw	128
 13902  0030C2  6E0F               	movwf	(??_fputc+4)^0,c
 13903  0030C4  50DE               	movf	postinc2,w,c
 13904  0030C6  0A80               	xorlw	128
 13905  0030C8  580F               	subwfb	(??_fputc+4)^0,w,c
 13906  0030CA  B0D8               	btfsc	status,0,c
 13907  0030CC  EF6A  F018         	goto	u5271
 13908  0030D0  EF6C  F018         	goto	u5270
 13909  0030D4                     u5271:
 13910  0030D4  EF75  F018         	goto	l1892
 13911  0030D8                     u5270:
 13912  0030D8                     l5761:
 13913  0030D8  EE20 F002          	lfsr	2,2
 13914  0030DC  5009               	movf	fputc@fp^0,w,c
 13915  0030DE  26D9               	addwf	fsr2l,f,c
 13916  0030E0  500A               	movf	(fputc@fp+1)^0,w,c
 13917  0030E2  22DA               	addwfc	fsr2h,f,c
 13918  0030E4  2ADE               	incf	postinc2,f,c
 13919  0030E6  0E00               	movlw	0
 13920  0030E8  22DD               	addwfc	postdec2,f,c
 13921  0030EA                     l1892:
 13922  0030EA  0012               	return		;funcret
 13923  0030EC                     __end_of_fputc:
 13924                           	opt callstack 0
 13925                           
 13926 ;; *************** function _putch *****************
 13927 ;; Defined at:
 13928 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;  txData          1    wreg     unsigned char 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  txData          1    5[COMRAM] unsigned char 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      void 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;Total ram usage:        1 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; Hardware stack levels required when called:    5
 13949 ;; This function calls:
 13950 ;;		_EUSART2_Write
 13951 ;; This function is called by:
 13952 ;;		_fputc
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           	psect	text69
 13957  003E24                     __ptext69:
 13958                           	opt callstack 0
 13959  003E24                     _putch:
 13960                           	opt callstack 18
 13961                           
 13962                           ;incstack = 0
 13963                           ;putch@txData stored from wreg
 13964  003E24  6E06               	movwf	putch@txData^0,c
 13965  003E26                     
 13966                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 13967  003E26  5006               	movf	putch@txData^0,w,c
 13968  003E28  EC81  F01A         	call	_EUSART2_Write
 13969  003E2C  0012               	return		;funcret
 13970  003E2E                     __end_of_putch:
 13971                           	opt callstack 0
 13972                           
 13973 ;; *************** function _EUSART2_Write *****************
 13974 ;; Defined at:
 13975 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;  txData          1    wreg     unsigned char 
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  txData          1    4[COMRAM] unsigned char 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  1    wreg      void 
 13982 ;; Registers used:
 13983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13993 ;;Total ram usage:        1 bytes
 13994 ;; Hardware stack levels used:    1
 13995 ;; Hardware stack levels required when called:    4
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_putch
 14000 ;;		_ReadRX232
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text70
 14005  003502                     __ptext70:
 14006                           	opt callstack 0
 14007  003502                     _EUSART2_Write:
 14008                           	opt callstack 18
 14009                           
 14010                           ;incstack = 0
 14011                           ;EUSART2_Write@txData stored from wreg
 14012  003502  6E05               	movwf	EUSART2_Write@txData^0,c
 14013  003504                     l5733:
 14014                           
 14015                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 14016  003504  0101               	movlb	1	; () banked
 14017  003506  51F3               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 14018  003508  B4D8               	btfsc	status,2,c
 14019  00350A  EF89  F01A         	goto	u5211
 14020  00350E  EF8B  F01A         	goto	u5210
 14021  003512                     u5211:
 14022  003512  EF82  F01A         	goto	l5733
 14023  003516                     u5210:
 14024  003516                     
 14025                           ; BSR set to: 1
 14026                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 14027  003516  010E               	movlb	14	; () banked
 14028  003518  BDC5               	btfsc	197,6,b	;volatile
 14029  00351A  EF91  F01A         	goto	u5221
 14030  00351E  EF93  F01A         	goto	u5220
 14031  003522                     u5221:
 14032  003522  EF97  F01A         	goto	l321
 14033  003526                     u5220:
 14034  003526                     
 14035                           ; BSR set to: 14
 14036                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 14037  003526  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 14038                           
 14039                           ;mcc_generated_files/eusart2.c: 184:     }
 14040  00352A  EFAE  F01A         	goto	l5747
 14041  00352E                     l321:
 14042                           
 14043                           ; BSR set to: 14
 14044                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 14045  00352E  9DC5               	bcf	197,6,b	;volatile
 14046  003530                     
 14047                           ; BSR set to: 14
 14048                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 14049  003530  0E64               	movlw	low _eusart2TxBuffer
 14050  003532  0100               	movlb	0	; () banked
 14051  003534  25C0               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 14052  003536  6ED9               	movwf	fsr2l,c
 14053  003538  6ADA               	clrf	fsr2h,c
 14054  00353A  0E02               	movlw	high _eusart2TxBuffer
 14055  00353C  22DA               	addwfc	fsr2h,f,c
 14056  00353E  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 14057  003542                     
 14058                           ; BSR set to: 0
 14059  003542  2BC0               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 14060  003544                     
 14061                           ; BSR set to: 0
 14062                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 14063  003544  0E1F               	movlw	31
 14064  003546  65C0               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 14065  003548  EFA8  F01A         	goto	u5231
 14066  00354C  EFAA  F01A         	goto	u5230
 14067  003550                     u5231:
 14068  003550  EFAC  F01A         	goto	l5745
 14069  003554                     u5230:
 14070  003554                     
 14071                           ; BSR set to: 0
 14072                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 14073  003554  0E00               	movlw	0
 14074  003556  6FC0               	movwf	_eusart2TxHead& (0+255),b	;volatile
 14075  003558                     l5745:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 14079  003558  0101               	movlb	1	; () banked
 14080  00355A  07F3               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14081  00355C                     l5747:
 14082                           
 14083                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 14084  00355C  010E               	movlb	14	; () banked
 14085  00355E  8DC5               	bsf	197,6,b	;volatile
 14086  003560                     
 14087                           ; BSR set to: 14
 14088  003560  0012               	return		;funcret
 14089  003562                     __end_of_EUSART2_Write:
 14090                           	opt callstack 0
 14091                           
 14092 ;; *************** function _abs *****************
 14093 ;; Defined at:
 14094 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  a               2   22[COMRAM] int 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;		None
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  2   22[COMRAM] int 
 14101 ;; Registers used:
 14102 ;;		wreg, status,2, status,0
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;Total ram usage:        4 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:    4
 14115 ;; This function calls:
 14116 ;;		Nothing
 14117 ;; This function is called by:
 14118 ;;		_dtoa
 14119 ;; This function uses a non-reentrant model
 14120 ;;
 14121                           
 14122                           	psect	text71
 14123  003AA8                     __ptext71:
 14124                           	opt callstack 0
 14125  003AA8                     _abs:
 14126                           	opt callstack 22
 14127  003AA8  BE18               	btfsc	(abs@a+1)^0,7,c
 14128  003AAA  EF61  F01D         	goto	u5370
 14129  003AAE  5018               	movf	(abs@a+1)^0,w,c
 14130  003AB0  E106               	bnz	u5371
 14131  003AB2  0417               	decf	abs@a^0,w,c
 14132  003AB4  B0D8               	btfsc	status,0,c
 14133  003AB6  EF5F  F01D         	goto	u5371
 14134  003ABA  EF61  F01D         	goto	u5370
 14135  003ABE                     u5371:
 14136  003ABE  EF6F  F01D         	goto	l1810
 14137  003AC2                     u5370:
 14138  003AC2  C017  F019         	movff	abs@a,??_abs
 14139  003AC6  C018  F01A         	movff	abs@a+1,??_abs+1
 14140  003ACA  1E19               	comf	??_abs^0,f,c
 14141  003ACC  1E1A               	comf	(??_abs+1)^0,f,c
 14142  003ACE  4A19               	infsnz	??_abs^0,f,c
 14143  003AD0  2A1A               	incf	(??_abs+1)^0,f,c
 14144  003AD2  C019  F017         	movff	??_abs,?_abs
 14145  003AD6  C01A  F018         	movff	??_abs+1,?_abs+1
 14146  003ADA  EF73  F01D         	goto	l1813
 14147  003ADE                     l1810:
 14148  003ADE  C017  F017         	movff	abs@a,?_abs
 14149  003AE2  C018  F018         	movff	abs@a+1,?_abs+1
 14150  003AE6                     l1813:
 14151  003AE6  0012               	return		;funcret
 14152  003AE8                     __end_of_abs:
 14153                           	opt callstack 0
 14154                           
 14155 ;; *************** function ___aomod *****************
 14156 ;; Defined at:
 14157 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  dividend        8    4[COMRAM] long long 
 14160 ;;  divisor         8   12[COMRAM] long long 
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;  sign            1   21[COMRAM] unsigned char 
 14163 ;;  counter         1   20[COMRAM] unsigned char 
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  8    4[COMRAM] long long 
 14166 ;; Registers used:
 14167 ;;		wreg, status,2, status,0
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14173 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14176 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14177 ;;Total ram usage:       18 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    4
 14180 ;; This function calls:
 14181 ;;		Nothing
 14182 ;; This function is called by:
 14183 ;;		_dtoa
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           	psect	text72
 14188  0021C4                     __ptext72:
 14189                           	opt callstack 0
 14190  0021C4                     ___aomod:
 14191                           	opt callstack 22
 14192  0021C4  0E00               	movlw	0
 14193  0021C6  6E16               	movwf	___aomod@sign^0,c
 14194  0021C8  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 14195  0021CA  EFEB  F010         	goto	u5540
 14196  0021CE  EFE9  F010         	goto	u5541
 14197  0021D2                     u5541:
 14198  0021D2  EFFD  F010         	goto	l5893
 14199  0021D6                     u5540:
 14200  0021D6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 14201  0021D8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 14202  0021DA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 14203  0021DC  1E09               	comf	(___aomod@dividend+4)^0,f,c
 14204  0021DE  1E08               	comf	(___aomod@dividend+3)^0,f,c
 14205  0021E0  1E07               	comf	(___aomod@dividend+2)^0,f,c
 14206  0021E2  1E06               	comf	(___aomod@dividend+1)^0,f,c
 14207  0021E4  6C05               	negf	___aomod@dividend^0,c
 14208  0021E6  0E00               	movlw	0
 14209  0021E8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 14210  0021EA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 14211  0021EC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 14212  0021EE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 14213  0021F0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 14214  0021F2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 14215  0021F4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 14216  0021F6  0E01               	movlw	1
 14217  0021F8  6E16               	movwf	___aomod@sign^0,c
 14218  0021FA                     l5893:
 14219  0021FA  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 14220  0021FC  EF04  F011         	goto	u5550
 14221  002200  EF02  F011         	goto	u5551
 14222  002204                     u5551:
 14223  002204  EF14  F011         	goto	l5897
 14224  002208                     u5550:
 14225  002208  1E14               	comf	(___aomod@divisor+7)^0,f,c
 14226  00220A  1E13               	comf	(___aomod@divisor+6)^0,f,c
 14227  00220C  1E12               	comf	(___aomod@divisor+5)^0,f,c
 14228  00220E  1E11               	comf	(___aomod@divisor+4)^0,f,c
 14229  002210  1E10               	comf	(___aomod@divisor+3)^0,f,c
 14230  002212  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 14231  002214  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 14232  002216  6C0D               	negf	___aomod@divisor^0,c
 14233  002218  0E00               	movlw	0
 14234  00221A  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 14235  00221C  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 14236  00221E  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 14237  002220  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 14238  002222  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 14239  002224  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 14240  002226  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 14241  002228                     l5897:
 14242  002228  500D               	movf	___aomod@divisor^0,w,c
 14243  00222A  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 14244  00222C  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 14245  00222E  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 14246  002230  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 14247  002232  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 14248  002234  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 14249  002236  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 14250  002238  B4D8               	btfsc	status,2,c
 14251  00223A  EF21  F011         	goto	u5561
 14252  00223E  EF23  F011         	goto	u5560
 14253  002242                     u5561:
 14254  002242  EF6B  F011         	goto	l5913
 14255  002246                     u5560:
 14256  002246  0E01               	movlw	1
 14257  002248  6E15               	movwf	___aomod@counter^0,c
 14258  00224A  EF31  F011         	goto	l5903
 14259  00224E                     l5901:
 14260  00224E  90D8               	bcf	status,0,c
 14261  002250  360D               	rlcf	___aomod@divisor^0,f,c
 14262  002252  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 14263  002254  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 14264  002256  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 14265  002258  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 14266  00225A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 14267  00225C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 14268  00225E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 14269  002260  2A15               	incf	___aomod@counter^0,f,c
 14270  002262                     l5903:
 14271  002262  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 14272  002264  EF36  F011         	goto	u5571
 14273  002268  EF38  F011         	goto	u5570
 14274  00226C                     u5571:
 14275  00226C  EF27  F011         	goto	l5901
 14276  002270                     u5570:
 14277  002270                     l5905:
 14278  002270  500D               	movf	___aomod@divisor^0,w,c
 14279  002272  5C05               	subwf	___aomod@dividend^0,w,c
 14280  002274  500E               	movf	(___aomod@divisor+1)^0,w,c
 14281  002276  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 14282  002278  500F               	movf	(___aomod@divisor+2)^0,w,c
 14283  00227A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 14284  00227C  5010               	movf	(___aomod@divisor+3)^0,w,c
 14285  00227E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 14286  002280  5011               	movf	(___aomod@divisor+4)^0,w,c
 14287  002282  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 14288  002284  5012               	movf	(___aomod@divisor+5)^0,w,c
 14289  002286  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 14290  002288  5013               	movf	(___aomod@divisor+6)^0,w,c
 14291  00228A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 14292  00228C  5014               	movf	(___aomod@divisor+7)^0,w,c
 14293  00228E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 14294  002290  A0D8               	btfss	status,0,c
 14295  002292  EF4D  F011         	goto	u5581
 14296  002296  EF4F  F011         	goto	u5580
 14297  00229A                     u5581:
 14298  00229A  EF5F  F011         	goto	l5909
 14299  00229E                     u5580:
 14300  00229E  500D               	movf	___aomod@divisor^0,w,c
 14301  0022A0  5E05               	subwf	___aomod@dividend^0,f,c
 14302  0022A2  500E               	movf	(___aomod@divisor+1)^0,w,c
 14303  0022A4  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 14304  0022A6  500F               	movf	(___aomod@divisor+2)^0,w,c
 14305  0022A8  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 14306  0022AA  5010               	movf	(___aomod@divisor+3)^0,w,c
 14307  0022AC  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 14308  0022AE  5011               	movf	(___aomod@divisor+4)^0,w,c
 14309  0022B0  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 14310  0022B2  5012               	movf	(___aomod@divisor+5)^0,w,c
 14311  0022B4  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 14312  0022B6  5013               	movf	(___aomod@divisor+6)^0,w,c
 14313  0022B8  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 14314  0022BA  5014               	movf	(___aomod@divisor+7)^0,w,c
 14315  0022BC  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 14316  0022BE                     l5909:
 14317  0022BE  90D8               	bcf	status,0,c
 14318  0022C0  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 14319  0022C2  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 14320  0022C4  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 14321  0022C6  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 14322  0022C8  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 14323  0022CA  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 14324  0022CC  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 14325  0022CE  320D               	rrcf	___aomod@divisor^0,f,c
 14326  0022D0  2E15               	decfsz	___aomod@counter^0,f,c
 14327  0022D2  EF38  F011         	goto	l5905
 14328  0022D6                     l5913:
 14329  0022D6  5016               	movf	___aomod@sign^0,w,c
 14330  0022D8  B4D8               	btfsc	status,2,c
 14331  0022DA  EF71  F011         	goto	u5591
 14332  0022DE  EF73  F011         	goto	u5590
 14333  0022E2                     u5591:
 14334  0022E2  EF83  F011         	goto	l5917
 14335  0022E6                     u5590:
 14336  0022E6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 14337  0022E8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 14338  0022EA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 14339  0022EC  1E09               	comf	(___aomod@dividend+4)^0,f,c
 14340  0022EE  1E08               	comf	(___aomod@dividend+3)^0,f,c
 14341  0022F0  1E07               	comf	(___aomod@dividend+2)^0,f,c
 14342  0022F2  1E06               	comf	(___aomod@dividend+1)^0,f,c
 14343  0022F4  6C05               	negf	___aomod@dividend^0,c
 14344  0022F6  0E00               	movlw	0
 14345  0022F8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 14346  0022FA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 14347  0022FC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 14348  0022FE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 14349  002300  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 14350  002302  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 14351  002304  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 14352  002306                     l5917:
 14353  002306  C005  F005         	movff	___aomod@dividend,?___aomod
 14354  00230A  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 14355  00230E  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 14356  002312  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 14357  002316  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 14358  00231A  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 14359  00231E  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 14360  002322  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 14361  002326  0012               	return		;funcret
 14362  002328                     __end_of___aomod:
 14363                           	opt callstack 0
 14364                           
 14365 ;; *************** function ___aodiv *****************
 14366 ;; Defined at:
 14367 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;  dividend        8    4[COMRAM] long long 
 14370 ;;  divisor         8   12[COMRAM] long long 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;  quotient        8   22[COMRAM] long long 
 14373 ;;  sign            1   21[COMRAM] unsigned char 
 14374 ;;  counter         1   20[COMRAM] unsigned char 
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  8    4[COMRAM] long long 
 14377 ;; Registers used:
 14378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14384 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14385 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14387 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14388 ;;Total ram usage:       26 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; Hardware stack levels required when called:    4
 14391 ;; This function calls:
 14392 ;;		Nothing
 14393 ;; This function is called by:
 14394 ;;		_dtoa
 14395 ;; This function uses a non-reentrant model
 14396 ;;
 14397                           
 14398                           	psect	text73
 14399  001EB6                     __ptext73:
 14400                           	opt callstack 0
 14401  001EB6                     ___aodiv:
 14402                           	opt callstack 22
 14403  001EB6  0E00               	movlw	0
 14404  001EB8  6E16               	movwf	___aodiv@sign^0,c
 14405  001EBA  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 14406  001EBC  EF64  F00F         	goto	u5470
 14407  001EC0  EF62  F00F         	goto	u5471
 14408  001EC4                     u5471:
 14409  001EC4  EF76  F00F         	goto	l5849
 14410  001EC8                     u5470:
 14411  001EC8  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 14412  001ECA  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 14413  001ECC  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 14414  001ECE  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 14415  001ED0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 14416  001ED2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 14417  001ED4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 14418  001ED6  6C0D               	negf	___aodiv@divisor^0,c
 14419  001ED8  0E00               	movlw	0
 14420  001EDA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 14421  001EDC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 14422  001EDE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 14423  001EE0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 14424  001EE2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 14425  001EE4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 14426  001EE6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 14427  001EE8  0E01               	movlw	1
 14428  001EEA  6E16               	movwf	___aodiv@sign^0,c
 14429  001EEC                     l5849:
 14430  001EEC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 14431  001EEE  EF7D  F00F         	goto	u5480
 14432  001EF2  EF7B  F00F         	goto	u5481
 14433  001EF6                     u5481:
 14434  001EF6  EF8F  F00F         	goto	l5855
 14435  001EFA                     u5480:
 14436  001EFA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 14437  001EFC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 14438  001EFE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 14439  001F00  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 14440  001F02  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 14441  001F04  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 14442  001F06  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 14443  001F08  6C05               	negf	___aodiv@dividend^0,c
 14444  001F0A  0E00               	movlw	0
 14445  001F0C  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 14446  001F0E  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 14447  001F10  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 14448  001F12  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 14449  001F14  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 14450  001F16  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 14451  001F18  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 14452  001F1A  0E01               	movlw	1
 14453  001F1C  1A16               	xorwf	___aodiv@sign^0,f,c
 14454  001F1E                     l5855:
 14455  001F1E  EE20  F017         	lfsr	2,___aodiv@quotient
 14456  001F22  0E07               	movlw	7
 14457  001F24                     u5491:
 14458  001F24  6ADE               	clrf	postinc2,c
 14459  001F26  06E8               	decf	wreg,f,c
 14460  001F28  E2FD               	bc	u5491
 14461  001F2A  500D               	movf	___aodiv@divisor^0,w,c
 14462  001F2C  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 14463  001F2E  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 14464  001F30  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 14465  001F32  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 14466  001F34  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 14467  001F36  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 14468  001F38  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 14469  001F3A  B4D8               	btfsc	status,2,c
 14470  001F3C  EFA2  F00F         	goto	u5501
 14471  001F40  EFA4  F00F         	goto	u5500
 14472  001F44                     u5501:
 14473  001F44  EFF6  F00F         	goto	l5877
 14474  001F48                     u5500:
 14475  001F48  0E01               	movlw	1
 14476  001F4A  6E15               	movwf	___aodiv@counter^0,c
 14477  001F4C  EFB2  F00F         	goto	l5863
 14478  001F50                     l5861:
 14479  001F50  90D8               	bcf	status,0,c
 14480  001F52  360D               	rlcf	___aodiv@divisor^0,f,c
 14481  001F54  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 14482  001F56  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 14483  001F58  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 14484  001F5A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 14485  001F5C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 14486  001F5E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 14487  001F60  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 14488  001F62  2A15               	incf	___aodiv@counter^0,f,c
 14489  001F64                     l5863:
 14490  001F64  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 14491  001F66  EFB7  F00F         	goto	u5511
 14492  001F6A  EFB9  F00F         	goto	u5510
 14493  001F6E                     u5511:
 14494  001F6E  EFA8  F00F         	goto	l5861
 14495  001F72                     u5510:
 14496  001F72                     l5865:
 14497  001F72  90D8               	bcf	status,0,c
 14498  001F74  3617               	rlcf	___aodiv@quotient^0,f,c
 14499  001F76  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 14500  001F78  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 14501  001F7A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 14502  001F7C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 14503  001F7E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 14504  001F80  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 14505  001F82  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 14506  001F84  500D               	movf	___aodiv@divisor^0,w,c
 14507  001F86  5C05               	subwf	___aodiv@dividend^0,w,c
 14508  001F88  500E               	movf	(___aodiv@divisor+1)^0,w,c
 14509  001F8A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 14510  001F8C  500F               	movf	(___aodiv@divisor+2)^0,w,c
 14511  001F8E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 14512  001F90  5010               	movf	(___aodiv@divisor+3)^0,w,c
 14513  001F92  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 14514  001F94  5011               	movf	(___aodiv@divisor+4)^0,w,c
 14515  001F96  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 14516  001F98  5012               	movf	(___aodiv@divisor+5)^0,w,c
 14517  001F9A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 14518  001F9C  5013               	movf	(___aodiv@divisor+6)^0,w,c
 14519  001F9E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 14520  001FA0  5014               	movf	(___aodiv@divisor+7)^0,w,c
 14521  001FA2  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 14522  001FA4  A0D8               	btfss	status,0,c
 14523  001FA6  EFD7  F00F         	goto	u5521
 14524  001FAA  EFD9  F00F         	goto	u5520
 14525  001FAE                     u5521:
 14526  001FAE  EFEA  F00F         	goto	l5873
 14527  001FB2                     u5520:
 14528  001FB2  500D               	movf	___aodiv@divisor^0,w,c
 14529  001FB4  5E05               	subwf	___aodiv@dividend^0,f,c
 14530  001FB6  500E               	movf	(___aodiv@divisor+1)^0,w,c
 14531  001FB8  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 14532  001FBA  500F               	movf	(___aodiv@divisor+2)^0,w,c
 14533  001FBC  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 14534  001FBE  5010               	movf	(___aodiv@divisor+3)^0,w,c
 14535  001FC0  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 14536  001FC2  5011               	movf	(___aodiv@divisor+4)^0,w,c
 14537  001FC4  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 14538  001FC6  5012               	movf	(___aodiv@divisor+5)^0,w,c
 14539  001FC8  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 14540  001FCA  5013               	movf	(___aodiv@divisor+6)^0,w,c
 14541  001FCC  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 14542  001FCE  5014               	movf	(___aodiv@divisor+7)^0,w,c
 14543  001FD0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 14544  001FD2  8017               	bsf	___aodiv@quotient^0,0,c
 14545  001FD4                     l5873:
 14546  001FD4  90D8               	bcf	status,0,c
 14547  001FD6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 14548  001FD8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 14549  001FDA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 14550  001FDC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 14551  001FDE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 14552  001FE0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 14553  001FE2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 14554  001FE4  320D               	rrcf	___aodiv@divisor^0,f,c
 14555  001FE6  2E15               	decfsz	___aodiv@counter^0,f,c
 14556  001FE8  EFB9  F00F         	goto	l5865
 14557  001FEC                     l5877:
 14558  001FEC  5016               	movf	___aodiv@sign^0,w,c
 14559  001FEE  B4D8               	btfsc	status,2,c
 14560  001FF0  EFFC  F00F         	goto	u5531
 14561  001FF4  EFFE  F00F         	goto	u5530
 14562  001FF8                     u5531:
 14563  001FF8  EF0E  F010         	goto	l5881
 14564  001FFC                     u5530:
 14565  001FFC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 14566  001FFE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 14567  002000  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 14568  002002  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 14569  002004  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 14570  002006  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 14571  002008  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 14572  00200A  6C17               	negf	___aodiv@quotient^0,c
 14573  00200C  0E00               	movlw	0
 14574  00200E  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 14575  002010  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 14576  002012  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 14577  002014  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 14578  002016  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 14579  002018  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 14580  00201A  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 14581  00201C                     l5881:
 14582  00201C  C017  F005         	movff	___aodiv@quotient,?___aodiv
 14583  002020  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 14584  002024  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 14585  002028  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 14586  00202C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 14587  002030  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 14588  002034  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 14589  002038  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 14590  00203C  0012               	return		;funcret
 14591  00203E                     __end_of___aodiv:
 14592                           	opt callstack 0
 14593                           
 14594 ;; *************** function _atoi *****************
 14595 ;; Defined at:
 14596 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14597 ;; Parameters:    Size  Location     Type
 14598 ;;  s               2   11[COMRAM] PTR const unsigned char 
 14599 ;;		 -> STR_75(12), STR_73(13), STR_72(17), STR_71(15), 
 14600 ;;		 -> STR_70(33), STR_68(38), STR_67(58), STR_66(17), 
 14601 ;;		 -> STR_65(16), STR_64(4), STR_63(32), STR_62(33), 
 14602 ;;		 -> STR_61(37), STR_60(44), STR_59(22), STR_58(75), 
 14603 ;;		 -> STR_57(53), STR_56(57), STR_55(54), STR_54(50), 
 14604 ;;		 -> STR_53(50), STR_52(40), STR_51(30), STR_50(43), 
 14605 ;;		 -> STR_49(73), STR_48(42), STR_47(36), STR_46(34), 
 14606 ;;		 -> STR_43(42), STR_42(22), STR_41(21), STR_40(20), 
 14607 ;;		 -> STR_39(19), STR_38(40), STR_28(32), STR_27(37), 
 14608 ;;		 -> STR_26(16), STR_25(24), STR_24(4), STR_23(25), 
 14609 ;;		 -> STR_22(28), STR_21(29), STR_20(26), STR_19(26), 
 14610 ;;		 -> STR_18(26), STR_17(24), STR_16(22), STR_15(22), 
 14611 ;;		 -> STR_14(26), STR_13(36), STR_12(4), STR_11(23), 
 14612 ;;		 -> STR_10(34), STR_9(28), STR_8(54), STR_7(27), 
 14613 ;;		 -> STR_6(16), STR_4(19), STR_3(28), STR_2(31), 
 14614 ;;		 -> STR_1(21), 
 14615 ;; Auto vars:     Size  Location     Type
 14616 ;;  n               2   24[COMRAM] int 
 14617 ;;  neg             2   17[COMRAM] int 
 14618 ;; Return value:  Size  Location     Type
 14619 ;;                  2   11[COMRAM] int 
 14620 ;; Registers used:
 14621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14622 ;; Tracked objects:
 14623 ;;		On entry : 0/0
 14624 ;;		On exit  : 0/0
 14625 ;;		Unchanged: 0/0
 14626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14628 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14629 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14630 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14631 ;;Total ram usage:       15 bytes
 14632 ;; Hardware stack levels used:    1
 14633 ;; Hardware stack levels required when called:    5
 14634 ;; This function calls:
 14635 ;;		___wmul
 14636 ;;		_isdigit
 14637 ;;		_isspace
 14638 ;; This function is called by:
 14639 ;;		_vfpfcnvrt
 14640 ;; This function uses a non-reentrant model
 14641 ;;
 14642                           
 14643                           	psect	text74
 14644  001D1C                     __ptext74:
 14645                           	opt callstack 0
 14646  001D1C                     _atoi:
 14647                           	opt callstack 22
 14648  001D1C  0E00               	movlw	0
 14649  001D1E  6E1A               	movwf	(atoi@n+1)^0,c
 14650  001D20  0E00               	movlw	0
 14651  001D22  6E19               	movwf	atoi@n^0,c
 14652  001D24  0E00               	movlw	0
 14653  001D26  6E13               	movwf	(atoi@neg+1)^0,c
 14654  001D28  0E00               	movlw	0
 14655  001D2A  6E12               	movwf	atoi@neg^0,c
 14656  001D2C  EF9A  F00E         	goto	l6181
 14657  001D30                     l6179:
 14658  001D30  4A0C               	infsnz	atoi@s^0,f,c
 14659  001D32  2A0D               	incf	(atoi@s+1)^0,f,c
 14660  001D34                     l6181:
 14661  001D34  0E01               	movlw	1
 14662  001D36  6E18               	movwf	_atoi$2057^0,c
 14663  001D38  C00C  FFF6         	movff	atoi@s,tblptrl
 14664  001D3C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14665  001D40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14666  001D40  6AF8               	clrf	tblptru,c
 14667  001D42                     	endif
 14668  001D42                     	if	0	;tblptru may be non-zero
 14669  001D42                     	endif
 14670  001D42  0008               	tblrd		*
 14671  001D44  50F5               	movf	tablat,w,c
 14672  001D46  0A20               	xorlw	32
 14673  001D48  B4D8               	btfsc	status,2,c
 14674  001D4A  EFA9  F00E         	goto	u6181
 14675  001D4E  EFAB  F00E         	goto	u6180
 14676  001D52                     u6181:
 14677  001D52  EFC9  F00E         	goto	l6189
 14678  001D56                     u6180:
 14679  001D56  0EF7               	movlw	247
 14680  001D58  6E0E               	movwf	??_atoi^0,c
 14681  001D5A  0EFF               	movlw	255
 14682  001D5C  6E0F               	movwf	(??_atoi+1)^0,c
 14683  001D5E  C00C  FFF6         	movff	atoi@s,tblptrl
 14684  001D62  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14685  001D66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14686  001D66  6AF8               	clrf	tblptru,c
 14687  001D68                     	endif
 14688  001D68                     	if	0	;tblptru may be non-zero
 14689  001D68                     	endif
 14690  001D68  0008               	tblrd		*
 14691  001D6A  50F5               	movf	tablat,w,c
 14692  001D6C  6E10               	movwf	(??_atoi+2)^0,c
 14693  001D6E  6A11               	clrf	(??_atoi+3)^0,c
 14694  001D70  500E               	movf	??_atoi^0,w,c
 14695  001D72  2610               	addwf	(??_atoi+2)^0,f,c
 14696  001D74  500F               	movf	(??_atoi+1)^0,w,c
 14697  001D76  2211               	addwfc	(??_atoi+3)^0,f,c
 14698  001D78  5011               	movf	(??_atoi+3)^0,w,c
 14699  001D7A  E109               	bnz	u6190
 14700  001D7C  0E05               	movlw	5
 14701  001D7E  5C10               	subwf	(??_atoi+2)^0,w,c
 14702  001D80  A0D8               	btfss	status,0,c
 14703  001D82  EFC5  F00E         	goto	u6191
 14704  001D86  EFC7  F00E         	goto	u6190
 14705  001D8A                     u6191:
 14706  001D8A  EFC9  F00E         	goto	l6189
 14707  001D8E                     u6190:
 14708  001D8E  0E00               	movlw	0
 14709  001D90  6E18               	movwf	_atoi$2057^0,c
 14710  001D92                     l6189:
 14711  001D92  C018  F014         	movff	_atoi$2057,_atoi$2056
 14712  001D96  6A15               	clrf	(_atoi$2056+1)^0,c
 14713  001D98  5014               	movf	_atoi$2056^0,w,c
 14714  001D9A  1015               	iorwf	(_atoi$2056+1)^0,w,c
 14715  001D9C  A4D8               	btfss	status,2,c
 14716  001D9E  EFD3  F00E         	goto	u6201
 14717  001DA2  EFD5  F00E         	goto	u6200
 14718  001DA6                     u6201:
 14719  001DA6  EF98  F00E         	goto	l6179
 14720  001DAA                     u6200:
 14721  001DAA  EFDF  F00E         	goto	l6199
 14722  001DAE                     l6195:
 14723  001DAE  0E00               	movlw	0
 14724  001DB0  6E13               	movwf	(atoi@neg+1)^0,c
 14725  001DB2  0E01               	movlw	1
 14726  001DB4  6E12               	movwf	atoi@neg^0,c
 14727  001DB6                     l6197:
 14728  001DB6  4A0C               	infsnz	atoi@s^0,f,c
 14729  001DB8  2A0D               	incf	(atoi@s+1)^0,f,c
 14730  001DBA  EF16  F00F         	goto	l6205
 14731  001DBE                     l6199:
 14732  001DBE  C00C  FFF6         	movff	atoi@s,tblptrl
 14733  001DC2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14734  001DC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14735  001DC6  6AF8               	clrf	tblptru,c
 14736  001DC8                     	endif
 14737  001DC8                     	if	0	;tblptru may be non-zero
 14738  001DC8                     	endif
 14739  001DC8  0008               	tblrd		*
 14740  001DCA  50F5               	movf	tablat,w,c
 14741  001DCC  6E0E               	movwf	??_atoi^0,c
 14742  001DCE  6A0F               	clrf	(??_atoi+1)^0,c
 14743                           
 14744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14745                           ; Switch size 1, requested type "simple"
 14746                           ; Number of cases is 1, Range of values is 0 to 0
 14747                           ; switch strategies available:
 14748                           ; Name         Instructions Cycles
 14749                           ; simple_byte            4     3 (average)
 14750                           ;	Chosen strategy is simple_byte
 14751  001DD0  500F               	movf	(??_atoi+1)^0,w,c
 14752  001DD2  0A00               	xorlw	0	; case 0
 14753  001DD4  B4D8               	btfsc	status,2,c
 14754  001DD6  EFEF  F00E         	goto	l7291
 14755  001DDA  EF16  F00F         	goto	l6205
 14756  001DDE                     l7291:
 14757                           
 14758                           ; Switch size 1, requested type "simple"
 14759                           ; Number of cases is 2, Range of values is 43 to 45
 14760                           ; switch strategies available:
 14761                           ; Name         Instructions Cycles
 14762                           ; simple_byte            7     4 (average)
 14763                           ;	Chosen strategy is simple_byte
 14764  001DDE  500E               	movf	??_atoi^0,w,c
 14765  001DE0  0A2B               	xorlw	43	; case 43
 14766  001DE2  B4D8               	btfsc	status,2,c
 14767  001DE4  EFDB  F00E         	goto	l6197
 14768  001DE8  0A06               	xorlw	6	; case 45
 14769  001DEA  B4D8               	btfsc	status,2,c
 14770  001DEC  EFD7  F00E         	goto	l6195
 14771  001DF0  EF16  F00F         	goto	l6205
 14772  001DF4                     l6201:
 14773  001DF4  C019  F005         	movff	atoi@n,___wmul@multiplier
 14774  001DF8  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 14775  001DFC  0E00               	movlw	0
 14776  001DFE  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 14777  001E00  0E0A               	movlw	10
 14778  001E02  6E07               	movwf	___wmul@multiplicand^0,c
 14779  001E04  EC55  F01E         	call	___wmul	;wreg free
 14780  001E08  C00C  FFF6         	movff	atoi@s,tblptrl
 14781  001E0C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14782  001E10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14783  001E10  6AF8               	clrf	tblptru,c
 14784  001E12                     	endif
 14785  001E12                     	if	0	;tblptru may be non-zero
 14786  001E12                     	endif
 14787  001E12  0008               	tblrd		*
 14788  001E14  50F5               	movf	tablat,w,c
 14789  001E16  5E05               	subwf	?___wmul^0,f,c
 14790  001E18  0E00               	movlw	0
 14791  001E1A  5A06               	subwfb	(?___wmul+1)^0,f,c
 14792  001E1C  0E30               	movlw	48
 14793  001E1E  2405               	addwf	?___wmul^0,w,c
 14794  001E20  6E19               	movwf	atoi@n^0,c
 14795  001E22  0E00               	movlw	0
 14796  001E24  2006               	addwfc	(?___wmul+1)^0,w,c
 14797  001E26  6E1A               	movwf	(atoi@n+1)^0,c
 14798  001E28  EFDB  F00E         	goto	l6197
 14799  001E2C                     l6205:
 14800  001E2C  0ED0               	movlw	208
 14801  001E2E  6E0E               	movwf	??_atoi^0,c
 14802  001E30  0EFF               	movlw	255
 14803  001E32  6E0F               	movwf	(??_atoi+1)^0,c
 14804  001E34  C00C  FFF6         	movff	atoi@s,tblptrl
 14805  001E38  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14806  001E3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14807  001E3C  6AF8               	clrf	tblptru,c
 14808  001E3E                     	endif
 14809  001E3E                     	if	0	;tblptru may be non-zero
 14810  001E3E                     	endif
 14811  001E3E  0008               	tblrd		*
 14812  001E40  50F5               	movf	tablat,w,c
 14813  001E42  6E10               	movwf	(??_atoi+2)^0,c
 14814  001E44  6A11               	clrf	(??_atoi+3)^0,c
 14815  001E46  500E               	movf	??_atoi^0,w,c
 14816  001E48  2610               	addwf	(??_atoi+2)^0,f,c
 14817  001E4A  500F               	movf	(??_atoi+1)^0,w,c
 14818  001E4C  2211               	addwfc	(??_atoi+3)^0,f,c
 14819  001E4E  5011               	movf	(??_atoi+3)^0,w,c
 14820  001E50  E10A               	bnz	u6210
 14821  001E52  0E0A               	movlw	10
 14822  001E54  5C10               	subwf	(??_atoi+2)^0,w,c
 14823  001E56  A0D8               	btfss	status,0,c
 14824  001E58  EF30  F00F         	goto	u6211
 14825  001E5C  EF33  F00F         	goto	u6210
 14826  001E60                     u6211:
 14827  001E60  0E01               	movlw	1
 14828  001E62  EF34  F00F         	goto	u6220
 14829  001E66                     u6210:
 14830  001E66  0E00               	movlw	0
 14831  001E68                     u6220:
 14832  001E68  6E16               	movwf	_atoi$2058^0,c
 14833  001E6A  6A17               	clrf	(_atoi$2058+1)^0,c
 14834  001E6C  5016               	movf	_atoi$2058^0,w,c
 14835  001E6E  1017               	iorwf	(_atoi$2058+1)^0,w,c
 14836  001E70  A4D8               	btfss	status,2,c
 14837  001E72  EF3D  F00F         	goto	u6231
 14838  001E76  EF3F  F00F         	goto	u6230
 14839  001E7A                     u6231:
 14840  001E7A  EFFA  F00E         	goto	l6201
 14841  001E7E                     u6230:
 14842  001E7E  5012               	movf	atoi@neg^0,w,c
 14843  001E80  1013               	iorwf	(atoi@neg+1)^0,w,c
 14844  001E82  A4D8               	btfss	status,2,c
 14845  001E84  EF46  F00F         	goto	u6241
 14846  001E88  EF48  F00F         	goto	u6240
 14847  001E8C                     u6241:
 14848  001E8C  EF56  F00F         	goto	l1841
 14849  001E90                     u6240:
 14850  001E90  C019  F00E         	movff	atoi@n,??_atoi
 14851  001E94  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 14852  001E98  1E0E               	comf	??_atoi^0,f,c
 14853  001E9A  1E0F               	comf	(??_atoi+1)^0,f,c
 14854  001E9C  4A0E               	infsnz	??_atoi^0,f,c
 14855  001E9E  2A0F               	incf	(??_atoi+1)^0,f,c
 14856  001EA0  C00E  F00C         	movff	??_atoi,?_atoi
 14857  001EA4  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 14858  001EA8  EF5A  F00F         	goto	l1844
 14859  001EAC                     l1841:
 14860  001EAC  C019  F00C         	movff	atoi@n,?_atoi
 14861  001EB0  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 14862  001EB4                     l1844:
 14863  001EB4  0012               	return		;funcret
 14864  001EB6                     __end_of_atoi:
 14865                           	opt callstack 0
 14866                           
 14867 ;; *************** function _isspace *****************
 14868 ;; Defined at:
 14869 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;  c               2    4[COMRAM] int 
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  2    4[COMRAM] int 
 14876 ;; Registers used:
 14877 ;;		wreg, status,2, status,0
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14885 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14887 ;;Total ram usage:        7 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; Hardware stack levels required when called:    4
 14890 ;; This function calls:
 14891 ;;		Nothing
 14892 ;; This function is called by:
 14893 ;;		_atoi
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text75
 14898  003792                     __ptext75:
 14899                           	opt callstack 0
 14900  003792                     _isspace:
 14901                           	opt callstack 22
 14902  003792  0E01               	movlw	1
 14903  003794  6E0B               	movwf	_isspace$2083^0,c
 14904  003796  0E20               	movlw	32
 14905  003798  1805               	xorwf	isspace@c^0,w,c
 14906  00379A  1006               	iorwf	(isspace@c+1)^0,w,c
 14907  00379C  B4D8               	btfsc	status,2,c
 14908  00379E  EFD3  F01B         	goto	u5671
 14909  0037A2  EFD5  F01B         	goto	u5670
 14910  0037A6                     u5671:
 14911  0037A6  EFEE  F01B         	goto	l5967
 14912  0037AA                     u5670:
 14913  0037AA  0EF7               	movlw	247
 14914  0037AC  6E07               	movwf	??_isspace^0,c
 14915  0037AE  0EFF               	movlw	255
 14916  0037B0  6E08               	movwf	(??_isspace+1)^0,c
 14917  0037B2  C005  F009         	movff	isspace@c,??_isspace+2
 14918  0037B6  C006  F00A         	movff	isspace@c+1,??_isspace+3
 14919  0037BA  5007               	movf	??_isspace^0,w,c
 14920  0037BC  2609               	addwf	(??_isspace+2)^0,f,c
 14921  0037BE  5008               	movf	(??_isspace+1)^0,w,c
 14922  0037C0  220A               	addwfc	(??_isspace+3)^0,f,c
 14923  0037C2  500A               	movf	(??_isspace+3)^0,w,c
 14924  0037C4  E109               	bnz	u5680
 14925  0037C6  0E05               	movlw	5
 14926  0037C8  5C09               	subwf	(??_isspace+2)^0,w,c
 14927  0037CA  A0D8               	btfss	status,0,c
 14928  0037CC  EFEA  F01B         	goto	u5681
 14929  0037D0  EFEC  F01B         	goto	u5680
 14930  0037D4                     u5681:
 14931  0037D4  EFEE  F01B         	goto	l5967
 14932  0037D8                     u5680:
 14933  0037D8  0E00               	movlw	0
 14934  0037DA  6E0B               	movwf	_isspace$2083^0,c
 14935  0037DC                     l5967:
 14936  0037DC  C00B  F005         	movff	_isspace$2083,?_isspace
 14937  0037E0  6A06               	clrf	(?_isspace+1)^0,c
 14938  0037E2  0012               	return		;funcret
 14939  0037E4                     __end_of_isspace:
 14940                           	opt callstack 0
 14941                           
 14942 ;; *************** function _isdigit *****************
 14943 ;; Defined at:
 14944 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;  c               2    4[COMRAM] int 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;		None
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  2    4[COMRAM] int 
 14951 ;; Registers used:
 14952 ;;		wreg, status,2, status,0
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14961 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14962 ;;Total ram usage:        6 bytes
 14963 ;; Hardware stack levels used:    1
 14964 ;; Hardware stack levels required when called:    4
 14965 ;; This function calls:
 14966 ;;		Nothing
 14967 ;; This function is called by:
 14968 ;;		_vfpfcnvrt
 14969 ;;		_atoi
 14970 ;; This function uses a non-reentrant model
 14971 ;;
 14972                           
 14973                           	psect	text76
 14974  003BCC                     __ptext76:
 14975                           	opt callstack 0
 14976  003BCC                     _isdigit:
 14977                           	opt callstack 23
 14978  003BCC  0ED0               	movlw	208
 14979  003BCE  6E07               	movwf	??_isdigit^0,c
 14980  003BD0  0EFF               	movlw	255
 14981  003BD2  6E08               	movwf	(??_isdigit+1)^0,c
 14982  003BD4  C005  F009         	movff	isdigit@c,??_isdigit+2
 14983  003BD8  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 14984  003BDC  5007               	movf	??_isdigit^0,w,c
 14985  003BDE  2609               	addwf	(??_isdigit+2)^0,f,c
 14986  003BE0  5008               	movf	(??_isdigit+1)^0,w,c
 14987  003BE2  220A               	addwfc	(??_isdigit+3)^0,f,c
 14988  003BE4  500A               	movf	(??_isdigit+3)^0,w,c
 14989  003BE6  E10A               	bnz	u5450
 14990  003BE8  0E0A               	movlw	10
 14991  003BEA  5C09               	subwf	(??_isdigit+2)^0,w,c
 14992  003BEC  A0D8               	btfss	status,0,c
 14993  003BEE  EFFB  F01D         	goto	u5451
 14994  003BF2  EFFE  F01D         	goto	u5450
 14995  003BF6                     u5451:
 14996  003BF6  0E01               	movlw	1
 14997  003BF8  EFFF  F01D         	goto	u5460
 14998  003BFC                     u5450:
 14999  003BFC  0E00               	movlw	0
 15000  003BFE                     u5460:
 15001  003BFE  6E05               	movwf	?_isdigit^0,c
 15002  003C00  6A06               	clrf	(?_isdigit+1)^0,c
 15003  003C02  0012               	return		;funcret
 15004  003C04                     __end_of_isdigit:
 15005                           	opt callstack 0
 15006                           
 15007 ;; *************** function ___wmul *****************
 15008 ;; Defined at:
 15009 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  multiplier      2    4[COMRAM] unsigned int 
 15012 ;;  multiplicand    2    6[COMRAM] unsigned int 
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;  product         2    8[COMRAM] unsigned int 
 15015 ;; Return value:  Size  Location     Type
 15016 ;;                  2    4[COMRAM] unsigned int 
 15017 ;; Registers used:
 15018 ;;		wreg, status,2, status,0, prodl, prodh
 15019 ;; Tracked objects:
 15020 ;;		On entry : 0/0
 15021 ;;		On exit  : 0/0
 15022 ;;		Unchanged: 0/0
 15023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15028 ;;Total ram usage:        6 bytes
 15029 ;; Hardware stack levels used:    1
 15030 ;; Hardware stack levels required when called:    4
 15031 ;; This function calls:
 15032 ;;		Nothing
 15033 ;; This function is called by:
 15034 ;;		_atoi
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           
 15038                           	psect	text77
 15039  003CAA                     __ptext77:
 15040                           	opt callstack 0
 15041  003CAA                     ___wmul:
 15042                           	opt callstack 22
 15043  003CAA  5005               	movf	___wmul@multiplier^0,w,c
 15044  003CAC  0207               	mulwf	___wmul@multiplicand^0,c
 15045  003CAE  CFF3 F009          	movff	prodl,___wmul@product
 15046  003CB2  CFF4 F00A          	movff	prodh,___wmul@product+1
 15047  003CB6  5005               	movf	___wmul@multiplier^0,w,c
 15048  003CB8  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 15049  003CBA  50F3               	movf	243,w,c
 15050  003CBC  260A               	addwf	(___wmul@product+1)^0,f,c
 15051  003CBE  5006               	movf	(___wmul@multiplier+1)^0,w,c
 15052  003CC0  0207               	mulwf	___wmul@multiplicand^0,c
 15053  003CC2  50F3               	movf	243,w,c
 15054  003CC4  260A               	addwf	(___wmul@product+1)^0,f,c
 15055  003CC6  C009  F005         	movff	___wmul@product,?___wmul
 15056  003CCA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 15057  003CCE  0012               	return		;funcret
 15058  003CD0                     __end_of___wmul:
 15059                           	opt callstack 0
 15060                           
 15061 ;; *************** function _EUSART2_is_tx_ready *****************
 15062 ;; Defined at:
 15063 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;		None
 15066 ;; Auto vars:     Size  Location     Type
 15067 ;;		None
 15068 ;; Return value:  Size  Location     Type
 15069 ;;                  1    wreg      _Bool 
 15070 ;; Registers used:
 15071 ;;		wreg, status,2
 15072 ;; Tracked objects:
 15073 ;;		On entry : 0/0
 15074 ;;		On exit  : 0/0
 15075 ;;		Unchanged: 0/0
 15076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15081 ;;Total ram usage:        0 bytes
 15082 ;; Hardware stack levels used:    1
 15083 ;; Hardware stack levels required when called:    4
 15084 ;; This function calls:
 15085 ;;		Nothing
 15086 ;; This function is called by:
 15087 ;;		_PrintModRespon
 15088 ;; This function uses a non-reentrant model
 15089 ;;
 15090                           
 15091                           	psect	text78
 15092  003D7E                     __ptext78:
 15093                           	opt callstack 0
 15094  003D7E                     _EUSART2_is_tx_ready:
 15095                           	opt callstack 25
 15096  003D7E                     
 15097                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 15098  003D7E  0101               	movlb	1	; () banked
 15099  003D80  51F3               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15100  003D82  A4D8               	btfss	status,2,c
 15101  003D84  EFC6  F01E         	goto	u4011
 15102  003D88  EFC9  F01E         	goto	u4010
 15103  003D8C                     u4011:
 15104  003D8C  0E01               	movlw	1
 15105  003D8E  EFCA  F01E         	goto	u4020
 15106  003D92                     u4010:
 15107  003D92  0E00               	movlw	0
 15108  003D94                     u4020:
 15109  003D94                     
 15110                           ; BSR set to: 1
 15111  003D94  0012               	return		;funcret
 15112  003D96                     __end_of_EUSART2_is_tx_ready:
 15113                           	opt callstack 0
 15114                           
 15115 ;; *************** function _EUSART2_is_tx_done *****************
 15116 ;; Defined at:
 15117 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;		None
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      _Bool 
 15124 ;; Registers used:
 15125 ;;		wreg
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;Total ram usage:        0 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:    4
 15138 ;; This function calls:
 15139 ;;		Nothing
 15140 ;; This function is called by:
 15141 ;;		_PrintModRespon
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text79
 15146  003D96                     __ptext79:
 15147                           	opt callstack 0
 15148  003D96                     _EUSART2_is_tx_done:
 15149                           	opt callstack 25
 15150  003D96                     
 15151                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 15152  003D96  010E               	movlb	14	; () banked
 15153  003D98  B39E               	btfsc	158,1,b	;volatile
 15154  003D9A  EFD1  F01E         	goto	u4031
 15155  003D9E  EFD4  F01E         	goto	u4030
 15156  003DA2                     u4031:
 15157  003DA2  0E01               	movlw	1
 15158  003DA4  EFD5  F01E         	goto	u4036
 15159  003DA8                     u4030:
 15160  003DA8  0E00               	movlw	0
 15161  003DAA                     u4036:
 15162  003DAA                     
 15163                           ; BSR set to: 14
 15164  003DAA  0012               	return		;funcret
 15165  003DAC                     __end_of_EUSART2_is_tx_done:
 15166                           	opt callstack 0
 15167                           
 15168 ;; *************** function _ClearModbusRespon *****************
 15169 ;; Defined at:
 15170 ;;		line 397 in file "Modbus.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;		None
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;  i               2    4[COMRAM] int 
 15175 ;; Return value:  Size  Location     Type
 15176 ;;                  1    wreg      void 
 15177 ;; Registers used:
 15178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15179 ;; Tracked objects:
 15180 ;;		On entry : 0/0
 15181 ;;		On exit  : 0/0
 15182 ;;		Unchanged: 0/0
 15183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15188 ;;Total ram usage:        2 bytes
 15189 ;; Hardware stack levels used:    1
 15190 ;; Hardware stack levels required when called:    4
 15191 ;; This function calls:
 15192 ;;		Nothing
 15193 ;; This function is called by:
 15194 ;;		_main
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text80
 15199  0039E6                     __ptext80:
 15200                           	opt callstack 0
 15201  0039E6                     _ClearModbusRespon:
 15202                           	opt callstack 26
 15203  0039E6                     
 15204                           ;Modbus.c: 398:     int i = 0;
 15205  0039E6  0E00               	movlw	0
 15206  0039E8  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 15207  0039EA  0E00               	movlw	0
 15208  0039EC  6E05               	movwf	ClearModbusRespon@i^0,c
 15209                           
 15210                           ;Modbus.c: 399:     for(i=0; i<32; i++ ){
 15211  0039EE  0E00               	movlw	0
 15212  0039F0  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 15213  0039F2  0E00               	movlw	0
 15214  0039F4  6E05               	movwf	ClearModbusRespon@i^0,c
 15215  0039F6                     l5223:
 15216                           
 15217                           ;Modbus.c: 400:         MBRespon[i] = 0xFF;
 15218  0039F6  0EAB               	movlw	low _MBRespon
 15219  0039F8  2405               	addwf	ClearModbusRespon@i^0,w,c
 15220  0039FA  6ED9               	movwf	fsr2l,c
 15221  0039FC  0E02               	movlw	high _MBRespon
 15222  0039FE  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 15223  003A00  6EDA               	movwf	fsr2h,c
 15224  003A02  0EFF               	movlw	255
 15225  003A04  6EDF               	movwf	indf2,c
 15226  003A06                     
 15227                           ;Modbus.c: 401:     }
 15228  003A06  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 15229  003A08  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 15230  003A0A  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 15231  003A0C  EF11  F01D         	goto	u4781
 15232  003A10  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 15233  003A12  E109               	bnz	u4780
 15234  003A14  0E20               	movlw	32
 15235  003A16  5C05               	subwf	ClearModbusRespon@i^0,w,c
 15236  003A18  A0D8               	btfss	status,0,c
 15237  003A1A  EF11  F01D         	goto	u4781
 15238  003A1E  EF13  F01D         	goto	u4780
 15239  003A22                     u4781:
 15240  003A22  EFFB  F01C         	goto	l5223
 15241  003A26                     u4780:
 15242  003A26  0012               	return		;funcret
 15243  003A28                     __end_of_ClearModbusRespon:
 15244                           	opt callstack 0
 15245                           
 15246 ;; *************** function _ClearModbusData *****************
 15247 ;; Defined at:
 15248 ;;		line 62 in file "Modbus.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;		None
 15251 ;; Auto vars:     Size  Location     Type
 15252 ;;  i               2    4[COMRAM] int 
 15253 ;; Return value:  Size  Location     Type
 15254 ;;                  1    wreg      void 
 15255 ;; Registers used:
 15256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15257 ;; Tracked objects:
 15258 ;;		On entry : 0/0
 15259 ;;		On exit  : 0/0
 15260 ;;		Unchanged: 0/0
 15261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;Total ram usage:        2 bytes
 15267 ;; Hardware stack levels used:    1
 15268 ;; Hardware stack levels required when called:    4
 15269 ;; This function calls:
 15270 ;;		Nothing
 15271 ;; This function is called by:
 15272 ;;		_main
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text81
 15277  003834                     __ptext81:
 15278                           	opt callstack 0
 15279  003834                     _ClearModbusData:
 15280                           	opt callstack 26
 15281  003834                     
 15282                           ;Modbus.c: 63:     int i = 0;
 15283  003834  0E00               	movlw	0
 15284  003836  6E06               	movwf	(ClearModbusData@i+1)^0,c
 15285  003838  0E00               	movlw	0
 15286  00383A  6E05               	movwf	ClearModbusData@i^0,c
 15287                           
 15288                           ;Modbus.c: 64:     for(i=0; i<99; i++ ){
 15289  00383C  0E00               	movlw	0
 15290  00383E  6E06               	movwf	(ClearModbusData@i+1)^0,c
 15291  003840  0E00               	movlw	0
 15292  003842  6E05               	movwf	ClearModbusData@i^0,c
 15293  003844                     l5453:
 15294                           
 15295                           ;Modbus.c: 65:         ModbusData[i] = 0xFF;
 15296  003844  0E00               	movlw	low _ModbusData
 15297  003846  2405               	addwf	ClearModbusData@i^0,w,c
 15298  003848  6ED9               	movwf	fsr2l,c
 15299  00384A  0E02               	movlw	high _ModbusData
 15300  00384C  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 15301  00384E  6EDA               	movwf	fsr2h,c
 15302  003850  0EFF               	movlw	255
 15303  003852  6EDF               	movwf	indf2,c
 15304  003854                     
 15305                           ;Modbus.c: 66:     }
 15306  003854  4A05               	infsnz	ClearModbusData@i^0,f,c
 15307  003856  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 15308  003858  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 15309  00385A  EF38  F01C         	goto	u4971
 15310  00385E  5006               	movf	(ClearModbusData@i+1)^0,w,c
 15311  003860  E109               	bnz	u4970
 15312  003862  0E63               	movlw	99
 15313  003864  5C05               	subwf	ClearModbusData@i^0,w,c
 15314  003866  A0D8               	btfss	status,0,c
 15315  003868  EF38  F01C         	goto	u4971
 15316  00386C  EF3A  F01C         	goto	u4970
 15317  003870                     u4971:
 15318  003870  EF22  F01C         	goto	l5453
 15319  003874                     u4970:
 15320  003874                     
 15321                           ;Modbus.c: 68:     ModDataCnt = 0;
 15322  003874  0E00               	movlw	0
 15323  003876  0100               	movlb	0	; () banked
 15324  003878  6FB7               	movwf	(_ModDataCnt+1)& (0+255),b
 15325  00387A  0E00               	movlw	0
 15326  00387C  6FB6               	movwf	_ModDataCnt& (0+255),b
 15327  00387E                     
 15328                           ; BSR set to: 0
 15329  00387E  0012               	return		;funcret
 15330  003880                     __end_of_ClearModbusData:
 15331                           	opt callstack 0
 15332                           
 15333 ;; *************** function _INTERRUPT_InterruptManager *****************
 15334 ;; Defined at:
 15335 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;		None
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;		None
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      void 
 15342 ;; Registers used:
 15343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15353 ;;Total ram usage:        4 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    3
 15356 ;; This function calls:
 15357 ;;		Absolute function
 15358 ;;		_EUSART1_Receive_ISR
 15359 ;;		_EUSART1_Transmit_ISR
 15360 ;;		_EUSART2_Receive_ISR
 15361 ;;		_EUSART2_Transmit_ISR
 15362 ;; This function is called by:
 15363 ;;		Interrupt level 2
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367                           	psect	intcode
 15368  000008                     __pintcode:
 15369                           	opt callstack 0
 15370  000008                     _INTERRUPT_InterruptManager:
 15371                           	opt callstack 15
 15372                           
 15373                           ; BSR set to: 0
 15374                           ;incstack = 0
 15375  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15376  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 15377  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15378  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 15379  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 15380  00001A                     
 15381                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 15382  00001A  ACF2               	btfss	242,6,c	;volatile
 15383  00001C  EF12  F000         	goto	i2u506_41
 15384  000020  EF14  F000         	goto	i2u506_40
 15385  000024                     i2u506_41:
 15386  000024  EF89  F000         	goto	i2l159
 15387  000028                     i2u506_40:
 15388  000028                     
 15389                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 15390  000028  010E               	movlb	14	; () banked
 15391  00002A  ADC5               	btfss	197,6,b	;volatile
 15392  00002C  EF1A  F000         	goto	i2u507_41
 15393  000030  EF1C  F000         	goto	i2u507_40
 15394  000034                     i2u507_41:
 15395  000034  EF32  F000         	goto	i2l150
 15396  000038                     i2u507_40:
 15397  000038                     
 15398                           ; BSR set to: 14
 15399  000038  ADCD               	btfss	205,6,b	;volatile
 15400  00003A  EF21  F000         	goto	i2u508_41
 15401  00003E  EF23  F000         	goto	i2u508_40
 15402  000042                     i2u508_41:
 15403  000042  EF32  F000         	goto	i2l150
 15404  000046                     i2u508_40:
 15405  000046                     
 15406                           ; BSR set to: 14
 15407                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 15408  000046  D802               	call	i2u509_48
 15409  000048  EF30  F000         	goto	i2u509_49
 15410  00004C                     i2u509_48:
 15411  00004C  0005               	push	
 15412  00004E  6EFA               	movwf	pclath,c
 15413  000050  0101               	movlb	1	; () banked
 15414  000052  51F0               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 15415  000054  6EFD               	movwf	tosl,c
 15416  000056  51F1               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 15417  000058  6EFE               	movwf	tosh,c
 15418  00005A  6AFF               	clrf	tosu,c
 15419  00005C  50FA               	movf	pclath,w,c
 15420  00005E  0012               	return		;indir
 15421  000060                     i2u509_49:
 15422                           
 15423                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 15424  000060  EF89  F000         	goto	i2l159
 15425  000064                     i2l150:
 15426                           
 15427                           ; BSR set to: 14
 15428  000064  AFC5               	btfss	197,7,b	;volatile
 15429  000066  EF37  F000         	goto	i2u510_41
 15430  00006A  EF39  F000         	goto	i2u510_40
 15431  00006E                     i2u510_41:
 15432  00006E  EF4F  F000         	goto	i2l152
 15433  000072                     i2u510_40:
 15434  000072                     
 15435                           ; BSR set to: 14
 15436  000072  AFCD               	btfss	205,7,b	;volatile
 15437  000074  EF3E  F000         	goto	i2u511_41
 15438  000078  EF40  F000         	goto	i2u511_40
 15439  00007C                     i2u511_41:
 15440  00007C  EF4F  F000         	goto	i2l152
 15441  000080                     i2u511_40:
 15442  000080                     
 15443                           ; BSR set to: 14
 15444                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 15445  000080  D802               	call	i2u512_48
 15446  000082  EF4D  F000         	goto	i2u512_49
 15447  000086                     i2u512_48:
 15448  000086  0005               	push	
 15449  000088  6EFA               	movwf	pclath,c
 15450  00008A  0101               	movlb	1	; () banked
 15451  00008C  51EE               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 15452  00008E  6EFD               	movwf	tosl,c
 15453  000090  51EF               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 15454  000092  6EFE               	movwf	tosh,c
 15455  000094  6AFF               	clrf	tosu,c
 15456  000096  50FA               	movf	pclath,w,c
 15457  000098  0012               	return		;indir
 15458  00009A                     i2u512_49:
 15459                           
 15460                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 15461  00009A  EF89  F000         	goto	i2l159
 15462  00009E                     i2l152:
 15463                           
 15464                           ; BSR set to: 14
 15465  00009E  A9C5               	btfss	197,4,b	;volatile
 15466  0000A0  EF54  F000         	goto	i2u513_41
 15467  0000A4  EF56  F000         	goto	i2u513_40
 15468  0000A8                     i2u513_41:
 15469  0000A8  EF6C  F000         	goto	i2l154
 15470  0000AC                     i2u513_40:
 15471  0000AC                     
 15472                           ; BSR set to: 14
 15473  0000AC  A9CD               	btfss	205,4,b	;volatile
 15474  0000AE  EF5B  F000         	goto	i2u514_41
 15475  0000B2  EF5D  F000         	goto	i2u514_40
 15476  0000B6                     i2u514_41:
 15477  0000B6  EF6C  F000         	goto	i2l154
 15478  0000BA                     i2u514_40:
 15479  0000BA                     
 15480                           ; BSR set to: 14
 15481                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 15482  0000BA  D802               	call	i2u515_48
 15483  0000BC  EF6A  F000         	goto	i2u515_49
 15484  0000C0                     i2u515_48:
 15485  0000C0  0005               	push	
 15486  0000C2  6EFA               	movwf	pclath,c
 15487  0000C4  0101               	movlb	1	; () banked
 15488  0000C6  51EC               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 15489  0000C8  6EFD               	movwf	tosl,c
 15490  0000CA  51ED               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 15491  0000CC  6EFE               	movwf	tosh,c
 15492  0000CE  6AFF               	clrf	tosu,c
 15493  0000D0  50FA               	movf	pclath,w,c
 15494  0000D2  0012               	return		;indir
 15495  0000D4                     i2u515_49:
 15496                           
 15497                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 15498  0000D4  EF89  F000         	goto	i2l159
 15499  0000D8                     i2l154:
 15500                           
 15501                           ; BSR set to: 14
 15502  0000D8  ABC5               	btfss	197,5,b	;volatile
 15503  0000DA  EF71  F000         	goto	i2u516_41
 15504  0000DE  EF73  F000         	goto	i2u516_40
 15505  0000E2                     i2u516_41:
 15506  0000E2  EF89  F000         	goto	i2l153
 15507  0000E6                     i2u516_40:
 15508  0000E6                     
 15509                           ; BSR set to: 14
 15510  0000E6  ABCD               	btfss	205,5,b	;volatile
 15511  0000E8  EF78  F000         	goto	i2u517_41
 15512  0000EC  EF7A  F000         	goto	i2u517_40
 15513  0000F0                     i2u517_41:
 15514  0000F0  EF89  F000         	goto	i2l153
 15515  0000F4                     i2u517_40:
 15516  0000F4                     
 15517                           ; BSR set to: 14
 15518                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 15519  0000F4  D802               	call	i2u518_48
 15520  0000F6  EF87  F000         	goto	i2u518_49
 15521  0000FA                     i2u518_48:
 15522  0000FA  0005               	push	
 15523  0000FC  6EFA               	movwf	pclath,c
 15524  0000FE  0101               	movlb	1	; () banked
 15525  000100  51EA               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 15526  000102  6EFD               	movwf	tosl,c
 15527  000104  51EB               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 15528  000106  6EFE               	movwf	tosh,c
 15529  000108  6AFF               	clrf	tosu,c
 15530  00010A  50FA               	movf	pclath,w,c
 15531  00010C  0012               	return		;indir
 15532  00010E                     i2u518_49:
 15533                           
 15534                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 15535  00010E  EF89  F000         	goto	i2l159
 15536  000112                     i2l153:
 15537  000112                     i2l159:
 15538  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 15539  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 15540  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15541  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15542  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15543  000124  0011               	retfie		f
 15544  000126                     __end_of_INTERRUPT_InterruptManager:
 15545                           	opt callstack 0
 15546                           
 15547 ;; *************** function _EUSART2_Transmit_ISR *****************
 15548 ;; Defined at:
 15549 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;		None
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      void 
 15556 ;; Registers used:
 15557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15567 ;;Total ram usage:        0 bytes
 15568 ;; Hardware stack levels used:    1
 15569 ;; This function calls:
 15570 ;;		Nothing
 15571 ;; This function is called by:
 15572 ;;		_EUSART2_Initialize
 15573 ;;		_INTERRUPT_InterruptManager
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           	psect	text83
 15578  003880                     __ptext83:
 15579                           	opt callstack 0
 15580  003880                     _EUSART2_Transmit_ISR:
 15581                           	opt callstack 17
 15582  003880                     
 15583                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 15584  003880  0E20               	movlw	32
 15585  003882  0101               	movlb	1	; () banked
 15586  003884  61F3               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 15587  003886  EF47  F01C         	goto	i2u462_41
 15588  00388A  EF49  F01C         	goto	i2u462_40
 15589  00388E                     i2u462_41:
 15590  00388E  EF63  F01C         	goto	i2l333
 15591  003892                     i2u462_40:
 15592  003892                     
 15593                           ; BSR set to: 1
 15594                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 15595  003892  0E64               	movlw	low _eusart2TxBuffer
 15596  003894  0100               	movlb	0	; () banked
 15597  003896  25BF               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 15598  003898  6ED9               	movwf	fsr2l,c
 15599  00389A  6ADA               	clrf	fsr2h,c
 15600  00389C  0E02               	movlw	high _eusart2TxBuffer
 15601  00389E  22DA               	addwfc	fsr2h,f,c
 15602  0038A0  50DF               	movf	indf2,w,c
 15603  0038A2  010E               	movlb	14	; () banked
 15604  0038A4  6F9A               	movwf	154,b	;volatile
 15605  0038A6                     
 15606                           ; BSR set to: 14
 15607  0038A6  0100               	movlb	0	; () banked
 15608  0038A8  2BBF               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 15609  0038AA                     
 15610                           ; BSR set to: 0
 15611                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 15612  0038AA  0E1F               	movlw	31
 15613  0038AC  65BF               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 15614  0038AE  EF5B  F01C         	goto	i2u463_41
 15615  0038B2  EF5D  F01C         	goto	i2u463_40
 15616  0038B6                     i2u463_41:
 15617  0038B6  EF5F  F01C         	goto	i2l5163
 15618  0038BA                     i2u463_40:
 15619  0038BA                     
 15620                           ; BSR set to: 0
 15621                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 15622  0038BA  0E00               	movlw	0
 15623  0038BC  6FBF               	movwf	_eusart2TxTail& (0+255),b	;volatile
 15624  0038BE                     i2l5163:
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 15628  0038BE  0101               	movlb	1	; () banked
 15629  0038C0  2BF3               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15630                           
 15631                           ;mcc_generated_files/eusart2.c: 220:     }
 15632  0038C2  EF65  F01C         	goto	i2l336
 15633  0038C6                     i2l333:
 15634                           
 15635                           ; BSR set to: 1
 15636                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 15637  0038C6  010E               	movlb	14	; () banked
 15638  0038C8  9DC5               	bcf	197,6,b	;volatile
 15639  0038CA                     i2l336:
 15640  0038CA  0012               	return		;funcret
 15641  0038CC                     __end_of_EUSART2_Transmit_ISR:
 15642                           	opt callstack 0
 15643                           
 15644 ;; *************** function _EUSART2_Receive_ISR *****************
 15645 ;; Defined at:
 15646 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;		None
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;		None
 15651 ;; Return value:  Size  Location     Type
 15652 ;;                  1    wreg      void 
 15653 ;; Registers used:
 15654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15655 ;; Tracked objects:
 15656 ;;		On entry : 0/0
 15657 ;;		On exit  : 0/0
 15658 ;;		Unchanged: 0/0
 15659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15664 ;;Total ram usage:        0 bytes
 15665 ;; Hardware stack levels used:    1
 15666 ;; Hardware stack levels required when called:    2
 15667 ;; This function calls:
 15668 ;;		Absolute function
 15669 ;;		_EUSART2_DefaultErrorHandler
 15670 ;;		_EUSART2_DefaultFramingErrorHandler
 15671 ;;		_EUSART2_DefaultOverrunErrorHandler
 15672 ;;		_EUSART2_RxDataHandler
 15673 ;; This function is called by:
 15674 ;;		_EUSART2_Initialize
 15675 ;;		_INTERRUPT_InterruptManager
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679                           	psect	text84
 15680  002D6E                     __ptext84:
 15681                           	opt callstack 0
 15682  002D6E                     _EUSART2_Receive_ISR:
 15683                           	opt callstack 15
 15684  002D6E                     
 15685                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 15686  002D6E  0E00               	movlw	low _eusart2RxStatusBuffer
 15687  002D70  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15688  002D72  6ED9               	movwf	fsr2l,c
 15689  002D74  6ADA               	clrf	fsr2h,c
 15690  002D76  0E01               	movlw	high _eusart2RxStatusBuffer
 15691  002D78  22DA               	addwfc	fsr2h,f,c
 15692  002D7A  0E00               	movlw	0
 15693  002D7C  6EDF               	movwf	indf2,c
 15694  002D7E                     
 15695                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 15696  002D7E  010E               	movlb	14	; () banked
 15697  002D80  A59D               	btfss	157,2,b	;volatile
 15698  002D82  EFC5  F016         	goto	i2u464_41
 15699  002D86  EFC7  F016         	goto	i2u464_40
 15700  002D8A                     i2u464_41:
 15701  002D8A  EFDB  F016         	goto	i2l5173
 15702  002D8E                     i2u464_40:
 15703  002D8E                     
 15704                           ; BSR set to: 14
 15705                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 15706  002D8E  0E00               	movlw	low _eusart2RxStatusBuffer
 15707  002D90  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15708  002D92  6ED9               	movwf	fsr2l,c
 15709  002D94  6ADA               	clrf	fsr2h,c
 15710  002D96  0E01               	movlw	high _eusart2RxStatusBuffer
 15711  002D98  22DA               	addwfc	fsr2h,f,c
 15712  002D9A  0101               	movlb	1	; () banked
 15713  002D9C  82DF               	bsf	indf2,1,c
 15714  002D9E                     
 15715                           ; BSR set to: 1
 15716                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 15717  002D9E  D802               	call	i2u465_48
 15718  002DA0  EFDB  F016         	goto	i2u465_49
 15719  002DA4                     i2u465_48:
 15720  002DA4  0005               	push	
 15721  002DA6  6EFA               	movwf	pclath,c
 15722  002DA8  51E8               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 15723  002DAA  6EFD               	movwf	tosl,c
 15724  002DAC  51E9               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 15725  002DAE  6EFE               	movwf	tosh,c
 15726  002DB0  6AFF               	clrf	tosu,c
 15727  002DB2  50FA               	movf	pclath,w,c
 15728  002DB4  0012               	return		;indir
 15729  002DB6                     i2u465_49:
 15730  002DB6                     i2l5173:
 15731                           
 15732                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 15733  002DB6  010E               	movlb	14	; () banked
 15734  002DB8  A39D               	btfss	157,1,b	;volatile
 15735  002DBA  EFE1  F016         	goto	i2u466_41
 15736  002DBE  EFE3  F016         	goto	i2u466_40
 15737  002DC2                     i2u466_41:
 15738  002DC2  EFF7  F016         	goto	i2l5179
 15739  002DC6                     i2u466_40:
 15740  002DC6                     
 15741                           ; BSR set to: 14
 15742                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 15743  002DC6  0E00               	movlw	low _eusart2RxStatusBuffer
 15744  002DC8  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15745  002DCA  6ED9               	movwf	fsr2l,c
 15746  002DCC  6ADA               	clrf	fsr2h,c
 15747  002DCE  0E01               	movlw	high _eusart2RxStatusBuffer
 15748  002DD0  22DA               	addwfc	fsr2h,f,c
 15749  002DD2  0101               	movlb	1	; () banked
 15750  002DD4  84DF               	bsf	indf2,2,c
 15751  002DD6                     
 15752                           ; BSR set to: 1
 15753                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 15754  002DD6  D802               	call	i2u467_48
 15755  002DD8  EFF7  F016         	goto	i2u467_49
 15756  002DDC                     i2u467_48:
 15757  002DDC  0005               	push	
 15758  002DDE  6EFA               	movwf	pclath,c
 15759  002DE0  51E6               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 15760  002DE2  6EFD               	movwf	tosl,c
 15761  002DE4  51E7               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 15762  002DE6  6EFE               	movwf	tosh,c
 15763  002DE8  6AFF               	clrf	tosu,c
 15764  002DEA  50FA               	movf	pclath,w,c
 15765  002DEC  0012               	return		;indir
 15766  002DEE                     i2u467_49:
 15767  002DEE                     i2l5179:
 15768                           
 15769                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 15770  002DEE  0E00               	movlw	low _eusart2RxStatusBuffer
 15771  002DF0  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15772  002DF2  6ED9               	movwf	fsr2l,c
 15773  002DF4  6ADA               	clrf	fsr2h,c
 15774  002DF6  0E01               	movlw	high _eusart2RxStatusBuffer
 15775  002DF8  22DA               	addwfc	fsr2h,f,c
 15776  002DFA  50DF               	movf	indf2,w,c
 15777  002DFC  B4D8               	btfsc	status,2,c
 15778  002DFE  EF03  F017         	goto	i2u468_41
 15779  002E02  EF05  F017         	goto	i2u468_40
 15780  002E06                     i2u468_41:
 15781  002E06  EF14  F017         	goto	i2l5183
 15782  002E0A                     i2u468_40:
 15783  002E0A                     
 15784                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 15785  002E0A  D802               	call	i2u469_48
 15786  002E0C  EF12  F017         	goto	i2u469_49
 15787  002E10                     i2u469_48:
 15788  002E10  0005               	push	
 15789  002E12  6EFA               	movwf	pclath,c
 15790  002E14  0101               	movlb	1	; () banked
 15791  002E16  51E4               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 15792  002E18  6EFD               	movwf	tosl,c
 15793  002E1A  51E5               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 15794  002E1C  6EFE               	movwf	tosh,c
 15795  002E1E  6AFF               	clrf	tosu,c
 15796  002E20  50FA               	movf	pclath,w,c
 15797  002E22  0012               	return		;indir
 15798  002E24                     i2u469_49:
 15799                           
 15800                           ;mcc_generated_files/eusart2.c: 244:     } else {
 15801  002E24  EF16  F017         	goto	i2l343
 15802  002E28                     i2l5183:
 15803                           
 15804                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 15805  002E28  EC02  F01E         	call	_EUSART2_RxDataHandler	;wreg free
 15806  002E2C                     i2l343:
 15807  002E2C  0012               	return		;funcret
 15808  002E2E                     __end_of_EUSART2_Receive_ISR:
 15809                           	opt callstack 0
 15810                           
 15811 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 15812 ;; Defined at:
 15813 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;		None
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		None
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15831 ;;Total ram usage:        0 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; This function calls:
 15834 ;;		Nothing
 15835 ;; This function is called by:
 15836 ;;		_EUSART2_Initialize
 15837 ;;		_EUSART2_Receive_ISR
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           	psect	text85
 15842  003E2E                     __ptext85:
 15843                           	opt callstack 0
 15844  003E2E                     _EUSART2_DefaultOverrunErrorHandler:
 15845                           	opt callstack 16
 15846  003E2E                     
 15847                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 15848  003E2E  010E               	movlb	14	; () banked
 15849  003E30  999D               	bcf	157,4,b	;volatile
 15850                           
 15851                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 15852  003E32  899D               	bsf	157,4,b	;volatile
 15853  003E34                     
 15854                           ; BSR set to: 14
 15855  003E34  0012               	return		;funcret
 15856  003E36                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 15857                           	opt callstack 0
 15858                           
 15859 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 15860 ;; Defined at:
 15861 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 15862 ;; Parameters:    Size  Location     Type
 15863 ;;		None
 15864 ;; Auto vars:     Size  Location     Type
 15865 ;;		None
 15866 ;; Return value:  Size  Location     Type
 15867 ;;                  1    wreg      void 
 15868 ;; Registers used:
 15869 ;;		None
 15870 ;; Tracked objects:
 15871 ;;		On entry : 0/0
 15872 ;;		On exit  : 0/0
 15873 ;;		Unchanged: 0/0
 15874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15879 ;;Total ram usage:        0 bytes
 15880 ;; Hardware stack levels used:    1
 15881 ;; This function calls:
 15882 ;;		Nothing
 15883 ;; This function is called by:
 15884 ;;		_EUSART2_Initialize
 15885 ;;		_EUSART2_Receive_ISR
 15886 ;; This function uses a non-reentrant model
 15887 ;;
 15888                           
 15889                           	psect	text86
 15890  003E58                     __ptext86:
 15891                           	opt callstack 0
 15892  003E58                     _EUSART2_DefaultFramingErrorHandler:
 15893                           	opt callstack 16
 15894  003E58  0012               	return		;funcret
 15895  003E5A                     __end_of_EUSART2_DefaultFramingErrorHandler:
 15896                           	opt callstack 0
 15897                           
 15898 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 15899 ;; Defined at:
 15900 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;		None
 15905 ;; Return value:  Size  Location     Type
 15906 ;;                  1    wreg      void 
 15907 ;; Registers used:
 15908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15918 ;;Total ram usage:        0 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:    1
 15921 ;; This function calls:
 15922 ;;		_EUSART2_RxDataHandler
 15923 ;; This function is called by:
 15924 ;;		_EUSART2_Initialize
 15925 ;;		_EUSART2_Receive_ISR
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           	psect	text87
 15930  003E42                     __ptext87:
 15931                           	opt callstack 0
 15932  003E42                     _EUSART2_DefaultErrorHandler:
 15933                           	opt callstack 15
 15934  003E42                     
 15935                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 15936  003E42  EC02  F01E         	call	_EUSART2_RxDataHandler	;wreg free
 15937  003E46  0012               	return		;funcret
 15938  003E48                     __end_of_EUSART2_DefaultErrorHandler:
 15939                           	opt callstack 0
 15940                           
 15941 ;; *************** function _EUSART2_RxDataHandler *****************
 15942 ;; Defined at:
 15943 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;		None
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;Total ram usage:        0 bytes
 15962 ;; Hardware stack levels used:    1
 15963 ;; This function calls:
 15964 ;;		Nothing
 15965 ;; This function is called by:
 15966 ;;		_EUSART2_Receive_ISR
 15967 ;;		_EUSART2_DefaultErrorHandler
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971                           	psect	text88
 15972  003C04                     __ptext88:
 15973                           	opt callstack 0
 15974  003C04                     _EUSART2_RxDataHandler:
 15975                           	opt callstack 16
 15976  003C04                     
 15977                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 15978  003C04  0E64               	movlw	low _eusart2RxBuffer
 15979  003C06  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15980  003C08  6ED9               	movwf	fsr2l,c
 15981  003C0A  6ADA               	clrf	fsr2h,c
 15982  003C0C  0E03               	movlw	high _eusart2RxBuffer
 15983  003C0E  22DA               	addwfc	fsr2h,f,c
 15984  003C10  CE99 FFDF          	movff	3737,indf2	;volatile
 15985  003C14  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 15986  003C16                     
 15987                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 15988  003C16  0E1F               	movlw	31
 15989  003C18  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 15990  003C1A  EF11  F01E         	goto	i2u404_41
 15991  003C1E  EF13  F01E         	goto	i2u404_40
 15992  003C22                     i2u404_41:
 15993  003C22  EF15  F01E         	goto	i2l4641
 15994  003C26                     i2u404_40:
 15995  003C26                     
 15996                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 15997  003C26  0E00               	movlw	0
 15998  003C28  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 15999  003C2A                     i2l4641:
 16000                           
 16001                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 16002  003C2A  0100               	movlb	0	; () banked
 16003  003C2C  2BBD               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 16004  003C2E                     
 16005                           ; BSR set to: 0
 16006  003C2E  0012               	return		;funcret
 16007  003C30                     __end_of_EUSART2_RxDataHandler:
 16008                           	opt callstack 0
 16009                           
 16010 ;; *************** function _EUSART1_Transmit_ISR *****************
 16011 ;; Defined at:
 16012 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;		None
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;		None
 16017 ;; Return value:  Size  Location     Type
 16018 ;;                  1    wreg      void 
 16019 ;; Registers used:
 16020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16021 ;; Tracked objects:
 16022 ;;		On entry : 0/0
 16023 ;;		On exit  : 0/0
 16024 ;;		Unchanged: 0/0
 16025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16030 ;;Total ram usage:        0 bytes
 16031 ;; Hardware stack levels used:    1
 16032 ;; This function calls:
 16033 ;;		Nothing
 16034 ;; This function is called by:
 16035 ;;		_EUSART1_Initialize
 16036 ;;		_INTERRUPT_InterruptManager
 16037 ;; This function uses a non-reentrant model
 16038 ;;
 16039                           
 16040                           	psect	text89
 16041  003916                     __ptext89:
 16042                           	opt callstack 0
 16043  003916                     _EUSART1_Transmit_ISR:
 16044                           	opt callstack 17
 16045  003916                     
 16046                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16047  003916  0E10               	movlw	16
 16048  003918  0101               	movlb	1	; () banked
 16049  00391A  61F2               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 16050  00391C  EF92  F01C         	goto	i2u470_41
 16051  003920  EF94  F01C         	goto	i2u470_40
 16052  003924                     i2u470_41:
 16053  003924  EFAC  F01C         	goto	i2l477
 16054  003928                     i2u470_40:
 16055  003928                     
 16056                           ; BSR set to: 1
 16057                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16058  003928  0E20               	movlw	low _eusart1TxBuffer
 16059  00392A  0100               	movlb	0	; () banked
 16060  00392C  25BB               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 16061  00392E  6ED9               	movwf	fsr2l,c
 16062  003930  6ADA               	clrf	fsr2h,c
 16063  003932  0E01               	movlw	high _eusart1TxBuffer
 16064  003934  22DA               	addwfc	fsr2h,f,c
 16065  003936  50DF               	movf	indf2,w,c
 16066  003938  6E9A               	movwf	154,c	;volatile
 16067  00393A                     
 16068                           ; BSR set to: 0
 16069  00393A  2BBB               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 16070  00393C                     
 16071                           ; BSR set to: 0
 16072                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16073  00393C  0E0F               	movlw	15
 16074  00393E  65BB               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 16075  003940  EFA4  F01C         	goto	i2u471_41
 16076  003944  EFA6  F01C         	goto	i2u471_40
 16077  003948                     i2u471_41:
 16078  003948  EFA8  F01C         	goto	i2l5195
 16079  00394C                     i2u471_40:
 16080  00394C                     
 16081                           ; BSR set to: 0
 16082                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 16083  00394C  0E00               	movlw	0
 16084  00394E  6FBB               	movwf	_eusart1TxTail& (0+255),b	;volatile
 16085  003950                     i2l5195:
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 16089  003950  0101               	movlb	1	; () banked
 16090  003952  2BF2               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 16091                           
 16092                           ;mcc_generated_files/eusart1.c: 211:     }
 16093  003954  EFAE  F01C         	goto	i2l480
 16094  003958                     i2l477:
 16095                           
 16096                           ; BSR set to: 1
 16097                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 16098  003958  010E               	movlb	14	; () banked
 16099  00395A  99C5               	bcf	197,4,b	;volatile
 16100  00395C                     i2l480:
 16101  00395C  0012               	return		;funcret
 16102  00395E                     __end_of_EUSART1_Transmit_ISR:
 16103                           	opt callstack 0
 16104                           
 16105 ;; *************** function _EUSART1_Receive_ISR *****************
 16106 ;; Defined at:
 16107 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;		None
 16110 ;; Auto vars:     Size  Location     Type
 16111 ;;		None
 16112 ;; Return value:  Size  Location     Type
 16113 ;;                  1    wreg      void 
 16114 ;; Registers used:
 16115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16116 ;; Tracked objects:
 16117 ;;		On entry : 0/0
 16118 ;;		On exit  : 0/0
 16119 ;;		Unchanged: 0/0
 16120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16125 ;;Total ram usage:        0 bytes
 16126 ;; Hardware stack levels used:    1
 16127 ;; Hardware stack levels required when called:    2
 16128 ;; This function calls:
 16129 ;;		Absolute function
 16130 ;;		_EUSART1_DefaultErrorHandler
 16131 ;;		_EUSART1_DefaultFramingErrorHandler
 16132 ;;		_EUSART1_DefaultOverrunErrorHandler
 16133 ;;		_EUSART1_RxDataHandler
 16134 ;; This function is called by:
 16135 ;;		_EUSART1_Initialize
 16136 ;;		_INTERRUPT_InterruptManager
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           	psect	text90
 16141  002E2E                     __ptext90:
 16142                           	opt callstack 0
 16143  002E2E                     _EUSART1_Receive_ISR:
 16144                           	opt callstack 15
 16145  002E2E                     
 16146                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 16147  002E2E  0E00               	movlw	low _eusart1RxStatusBuffer
 16148  002E30  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16149  002E32  6ED9               	movwf	fsr2l,c
 16150  002E34  6ADA               	clrf	fsr2h,c
 16151  002E36  0E03               	movlw	high _eusart1RxStatusBuffer
 16152  002E38  22DA               	addwfc	fsr2h,f,c
 16153  002E3A  0E00               	movlw	0
 16154  002E3C  6EDF               	movwf	indf2,c
 16155  002E3E                     
 16156                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 16157  002E3E  A49D               	btfss	157,2,c	;volatile
 16158  002E40  EF24  F017         	goto	i2u472_41
 16159  002E44  EF26  F017         	goto	i2u472_40
 16160  002E48                     i2u472_41:
 16161  002E48  EF3B  F017         	goto	i2l5205
 16162  002E4C                     i2u472_40:
 16163  002E4C                     
 16164                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 16165  002E4C  0E00               	movlw	low _eusart1RxStatusBuffer
 16166  002E4E  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16167  002E50  6ED9               	movwf	fsr2l,c
 16168  002E52  6ADA               	clrf	fsr2h,c
 16169  002E54  0E03               	movlw	high _eusart1RxStatusBuffer
 16170  002E56  22DA               	addwfc	fsr2h,f,c
 16171  002E58  0103               	movlb	3	; () banked
 16172  002E5A  82DF               	bsf	indf2,1,c
 16173  002E5C                     
 16174                           ; BSR set to: 3
 16175                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 16176  002E5C  D802               	call	i2u473_48
 16177  002E5E  EF3B  F017         	goto	i2u473_49
 16178  002E62                     i2u473_48:
 16179  002E62  0005               	push	
 16180  002E64  6EFA               	movwf	pclath,c
 16181  002E66  0101               	movlb	1	; () banked
 16182  002E68  51E2               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 16183  002E6A  6EFD               	movwf	tosl,c
 16184  002E6C  51E3               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 16185  002E6E  6EFE               	movwf	tosh,c
 16186  002E70  6AFF               	clrf	tosu,c
 16187  002E72  50FA               	movf	pclath,w,c
 16188  002E74  0012               	return		;indir
 16189  002E76                     i2u473_49:
 16190  002E76                     i2l5205:
 16191                           
 16192                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 16193  002E76  A29D               	btfss	157,1,c	;volatile
 16194  002E78  EF40  F017         	goto	i2u474_41
 16195  002E7C  EF42  F017         	goto	i2u474_40
 16196  002E80                     i2u474_41:
 16197  002E80  EF57  F017         	goto	i2l5211
 16198  002E84                     i2u474_40:
 16199  002E84                     
 16200                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 16201  002E84  0E00               	movlw	low _eusart1RxStatusBuffer
 16202  002E86  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16203  002E88  6ED9               	movwf	fsr2l,c
 16204  002E8A  6ADA               	clrf	fsr2h,c
 16205  002E8C  0E03               	movlw	high _eusart1RxStatusBuffer
 16206  002E8E  22DA               	addwfc	fsr2h,f,c
 16207  002E90  0103               	movlb	3	; () banked
 16208  002E92  84DF               	bsf	indf2,2,c
 16209  002E94                     
 16210                           ; BSR set to: 3
 16211                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 16212  002E94  D802               	call	i2u475_48
 16213  002E96  EF57  F017         	goto	i2u475_49
 16214  002E9A                     i2u475_48:
 16215  002E9A  0005               	push	
 16216  002E9C  6EFA               	movwf	pclath,c
 16217  002E9E  0101               	movlb	1	; () banked
 16218  002EA0  51E0               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 16219  002EA2  6EFD               	movwf	tosl,c
 16220  002EA4  51E1               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 16221  002EA6  6EFE               	movwf	tosh,c
 16222  002EA8  6AFF               	clrf	tosu,c
 16223  002EAA  50FA               	movf	pclath,w,c
 16224  002EAC  0012               	return		;indir
 16225  002EAE                     i2u475_49:
 16226  002EAE                     i2l5211:
 16227                           
 16228                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 16229  002EAE  0E00               	movlw	low _eusart1RxStatusBuffer
 16230  002EB0  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16231  002EB2  6ED9               	movwf	fsr2l,c
 16232  002EB4  6ADA               	clrf	fsr2h,c
 16233  002EB6  0E03               	movlw	high _eusart1RxStatusBuffer
 16234  002EB8  22DA               	addwfc	fsr2h,f,c
 16235  002EBA  50DF               	movf	indf2,w,c
 16236  002EBC  B4D8               	btfsc	status,2,c
 16237  002EBE  EF63  F017         	goto	i2u476_41
 16238  002EC2  EF65  F017         	goto	i2u476_40
 16239  002EC6                     i2u476_41:
 16240  002EC6  EF74  F017         	goto	i2l5215
 16241  002ECA                     i2u476_40:
 16242  002ECA                     
 16243                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 16244  002ECA  D802               	call	i2u477_48
 16245  002ECC  EF72  F017         	goto	i2u477_49
 16246  002ED0                     i2u477_48:
 16247  002ED0  0005               	push	
 16248  002ED2  6EFA               	movwf	pclath,c
 16249  002ED4  0101               	movlb	1	; () banked
 16250  002ED6  51DE               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 16251  002ED8  6EFD               	movwf	tosl,c
 16252  002EDA  51DF               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 16253  002EDC  6EFE               	movwf	tosh,c
 16254  002EDE  6AFF               	clrf	tosu,c
 16255  002EE0  50FA               	movf	pclath,w,c
 16256  002EE2  0012               	return		;indir
 16257  002EE4                     i2u477_49:
 16258                           
 16259                           ;mcc_generated_files/eusart1.c: 235:     } else {
 16260  002EE4  EF76  F017         	goto	i2l487
 16261  002EE8                     i2l5215:
 16262                           
 16263                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 16264  002EE8  EC18  F01E         	call	_EUSART1_RxDataHandler	;wreg free
 16265  002EEC                     i2l487:
 16266  002EEC  0012               	return		;funcret
 16267  002EEE                     __end_of_EUSART1_Receive_ISR:
 16268                           	opt callstack 0
 16269                           
 16270 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16271 ;; Defined at:
 16272 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 16273 ;; Parameters:    Size  Location     Type
 16274 ;;		None
 16275 ;; Auto vars:     Size  Location     Type
 16276 ;;		None
 16277 ;; Return value:  Size  Location     Type
 16278 ;;                  1    wreg      void 
 16279 ;; Registers used:
 16280 ;;		None
 16281 ;; Tracked objects:
 16282 ;;		On entry : 0/0
 16283 ;;		On exit  : 0/0
 16284 ;;		Unchanged: 0/0
 16285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16290 ;;Total ram usage:        0 bytes
 16291 ;; Hardware stack levels used:    1
 16292 ;; This function calls:
 16293 ;;		Nothing
 16294 ;; This function is called by:
 16295 ;;		_EUSART1_Initialize
 16296 ;;		_EUSART1_Receive_ISR
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text91
 16301  003E48                     __ptext91:
 16302                           	opt callstack 0
 16303  003E48                     _EUSART1_DefaultOverrunErrorHandler:
 16304                           	opt callstack 16
 16305  003E48                     
 16306                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 16307  003E48  989D               	bcf	157,4,c	;volatile
 16308                           
 16309                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 16310  003E4A  889D               	bsf	157,4,c	;volatile
 16311  003E4C  0012               	return		;funcret
 16312  003E4E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 16313                           	opt callstack 0
 16314                           
 16315 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16316 ;; Defined at:
 16317 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;		None
 16320 ;; Auto vars:     Size  Location     Type
 16321 ;;		None
 16322 ;; Return value:  Size  Location     Type
 16323 ;;                  1    wreg      void 
 16324 ;; Registers used:
 16325 ;;		None
 16326 ;; Tracked objects:
 16327 ;;		On entry : 0/0
 16328 ;;		On exit  : 0/0
 16329 ;;		Unchanged: 0/0
 16330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16335 ;;Total ram usage:        0 bytes
 16336 ;; Hardware stack levels used:    1
 16337 ;; This function calls:
 16338 ;;		Nothing
 16339 ;; This function is called by:
 16340 ;;		_EUSART1_Initialize
 16341 ;;		_EUSART1_Receive_ISR
 16342 ;; This function uses a non-reentrant model
 16343 ;;
 16344                           
 16345                           	psect	text92
 16346  003E5A                     __ptext92:
 16347                           	opt callstack 0
 16348  003E5A                     _EUSART1_DefaultFramingErrorHandler:
 16349                           	opt callstack 16
 16350  003E5A  0012               	return		;funcret
 16351  003E5C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 16352                           	opt callstack 0
 16353                           
 16354 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16355 ;; Defined at:
 16356 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 16357 ;; Parameters:    Size  Location     Type
 16358 ;;		None
 16359 ;; Auto vars:     Size  Location     Type
 16360 ;;		None
 16361 ;; Return value:  Size  Location     Type
 16362 ;;                  1    wreg      void 
 16363 ;; Registers used:
 16364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16365 ;; Tracked objects:
 16366 ;;		On entry : 0/0
 16367 ;;		On exit  : 0/0
 16368 ;;		Unchanged: 0/0
 16369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16374 ;;Total ram usage:        0 bytes
 16375 ;; Hardware stack levels used:    1
 16376 ;; Hardware stack levels required when called:    1
 16377 ;; This function calls:
 16378 ;;		_EUSART1_RxDataHandler
 16379 ;; This function is called by:
 16380 ;;		_EUSART1_Initialize
 16381 ;;		_EUSART1_Receive_ISR
 16382 ;; This function uses a non-reentrant model
 16383 ;;
 16384                           
 16385                           	psect	text93
 16386  003E4E                     __ptext93:
 16387                           	opt callstack 0
 16388  003E4E                     _EUSART1_DefaultErrorHandler:
 16389                           	opt callstack 15
 16390  003E4E                     
 16391                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 16392  003E4E  EC18  F01E         	call	_EUSART1_RxDataHandler	;wreg free
 16393  003E52  0012               	return		;funcret
 16394  003E54                     __end_of_EUSART1_DefaultErrorHandler:
 16395                           	opt callstack 0
 16396                           
 16397 ;; *************** function _EUSART1_RxDataHandler *****************
 16398 ;; Defined at:
 16399 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 16400 ;; Parameters:    Size  Location     Type
 16401 ;;		None
 16402 ;; Auto vars:     Size  Location     Type
 16403 ;;		None
 16404 ;; Return value:  Size  Location     Type
 16405 ;;                  1    wreg      void 
 16406 ;; Registers used:
 16407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16408 ;; Tracked objects:
 16409 ;;		On entry : 0/0
 16410 ;;		On exit  : 0/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16417 ;;Total ram usage:        0 bytes
 16418 ;; Hardware stack levels used:    1
 16419 ;; This function calls:
 16420 ;;		Nothing
 16421 ;; This function is called by:
 16422 ;;		_EUSART1_Receive_ISR
 16423 ;;		_EUSART1_DefaultErrorHandler
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           	psect	text94
 16428  003C30                     __ptext94:
 16429                           	opt callstack 0
 16430  003C30                     _EUSART1_RxDataHandler:
 16431                           	opt callstack 16
 16432  003C30                     
 16433                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16434  003C30  0E00               	movlw	low _eusart1RxBuffer
 16435  003C32  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16436  003C34  6ED9               	movwf	fsr2l,c
 16437  003C36  6ADA               	clrf	fsr2h,c
 16438  003C38  0E04               	movlw	high _eusart1RxBuffer
 16439  003C3A  22DA               	addwfc	fsr2h,f,c
 16440  003C3C  CF99 FFDF          	movff	3993,indf2	;volatile
 16441  003C40  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 16442  003C42                     
 16443                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16444  003C42  0E63               	movlw	99
 16445  003C44  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 16446  003C46  EF27  F01E         	goto	i2u411_41
 16447  003C4A  EF29  F01E         	goto	i2u411_40
 16448  003C4E                     i2u411_41:
 16449  003C4E  EF2B  F01E         	goto	i2l4687
 16450  003C52                     i2u411_40:
 16451  003C52                     
 16452                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 16453  003C52  0E00               	movlw	0
 16454  003C54  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 16455  003C56                     i2l4687:
 16456                           
 16457                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 16458  003C56  0100               	movlb	0	; () banked
 16459  003C58  2BB9               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 16460  003C5A                     
 16461                           ; BSR set to: 0
 16462  003C5A  0012               	return		;funcret
 16463  003C5C                     __end_of_EUSART1_RxDataHandler:
 16464                           	opt callstack 0
 16465                           
 16466                           	psect	text95
 16467  000000                     __ptext95:
 16468                           	opt callstack 0
 16469  000000                     
 16470                           	psect	rparam
 16471  0000                     
 16472                           	psect	temp
 16473  00005B                     btemp:
 16474                           	opt callstack 0
 16475  00005B                     	ds	1
 16476  0000                     int$flags	set	btemp
 16477  0000                     wtemp8	set	btemp+1
 16478  0000                     ttemp5	set	btemp+1
 16479  0000                     ttemp6	set	btemp+4
 16480  0000                     ttemp7	set	btemp+8
 16481                           tosu	equ	0xFFF
 16482                           tosh	equ	0xFFE
 16483                           tosl	equ	0xFFD
 16484                           stkptr	equ	0xFFC
 16485                           pclatu	equ	0xFFB
 16486                           pclath	equ	0xFFA
 16487                           pcl	equ	0xFF9
 16488                           tblptru	equ	0xFF8
 16489                           tblptrh	equ	0xFF7
 16490                           tblptrl	equ	0xFF6
 16491                           tablat	equ	0xFF5
 16492                           prodh	equ	0xFF4
 16493                           prodl	equ	0xFF3
 16494                           indf0	equ	0xFEF
 16495                           postinc0	equ	0xFEE
 16496                           postdec0	equ	0xFED
 16497                           preinc0	equ	0xFEC
 16498                           plusw0	equ	0xFEB
 16499                           fsr0h	equ	0xFEA
 16500                           fsr0l	equ	0xFE9
 16501                           wreg	equ	0xFE8
 16502                           indf1	equ	0xFE7
 16503                           postinc1	equ	0xFE6
 16504                           postdec1	equ	0xFE5
 16505                           preinc1	equ	0xFE4
 16506                           plusw1	equ	0xFE3
 16507                           fsr1h	equ	0xFE2
 16508                           fsr1l	equ	0xFE1
 16509                           bsr	equ	0xFE0
 16510                           indf2	equ	0xFDF
 16511                           postinc2	equ	0xFDE
 16512                           postdec2	equ	0xFDD
 16513                           preinc2	equ	0xFDC
 16514                           plusw2	equ	0xFDB
 16515                           fsr2h	equ	0xFDA
 16516                           fsr2l	equ	0xFD9
 16517                           status	equ	0xFD8


Data Sizes:
    Strings     1929
    Constant    0
    Data        330
    BSS         623
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     77      98
    BANK1           256      0     244
    BANK2           256      0     246
    BANK3           256      0     196
    BANK4           256     68     232
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1474(BANK4[20]), 
		 -> ValidateCmd@ConfName_1470(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), STR_45(CODE[9]), STR_44(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1474(BANK4[20]), 
		 -> ValidateCmd@ConfName_1470(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), STR_45(CODE[9]), STR_44(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_74(CODE[1]), STR_69(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_74(CODE[1]), STR_69(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_85(CODE[4]), STR_83(CODE[5]), STR_81(CODE[7]), STR_79(CODE[2]), 
		 -> STR_77(CODE[6]), STR_37(CODE[4]), STR_36(CODE[5]), STR_35(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_34(CODE[4]), STR_32(CODE[5]), STR_30(CODE[7]), Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_75(CODE[12]), STR_73(CODE[13]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[33]), STR_68(CODE[38]), STR_67(CODE[58]), STR_66(CODE[17]), 
		 -> STR_65(CODE[16]), STR_64(CODE[4]), STR_63(CODE[32]), STR_62(CODE[33]), 
		 -> STR_61(CODE[37]), STR_60(CODE[44]), STR_59(CODE[22]), STR_58(CODE[75]), 
		 -> STR_57(CODE[53]), STR_56(CODE[57]), STR_55(CODE[54]), STR_54(CODE[50]), 
		 -> STR_53(CODE[50]), STR_52(CODE[40]), STR_51(CODE[30]), STR_50(CODE[43]), 
		 -> STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), STR_46(CODE[34]), 
		 -> STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), STR_40(CODE[20]), 
		 -> STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), STR_27(CODE[37]), 
		 -> STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), STR_23(CODE[25]), 
		 -> STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[26]), STR_19(CODE[26]), 
		 -> STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), 
		 -> STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), 
		 -> STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), 
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2102_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_75(CODE[12]), STR_73(CODE[13]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[33]), STR_68(CODE[38]), STR_67(CODE[58]), STR_66(CODE[17]), 
		 -> STR_65(CODE[16]), STR_64(CODE[4]), STR_63(CODE[32]), STR_62(CODE[33]), 
		 -> STR_61(CODE[37]), STR_60(CODE[44]), STR_59(CODE[22]), STR_58(CODE[75]), 
		 -> STR_57(CODE[53]), STR_56(CODE[57]), STR_55(CODE[54]), STR_54(CODE[50]), 
		 -> STR_53(CODE[50]), STR_52(CODE[40]), STR_51(CODE[30]), STR_50(CODE[43]), 
		 -> STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), STR_46(CODE[34]), 
		 -> STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), STR_40(CODE[20]), 
		 -> STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), STR_27(CODE[37]), 
		 -> STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), STR_23(CODE[25]), 
		 -> STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[26]), STR_19(CODE[26]), 
		 -> STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), 
		 -> STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), 
		 -> STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), 
		 -> STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_75(CODE[12]), STR_73(CODE[13]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[33]), STR_68(CODE[38]), STR_67(CODE[58]), STR_66(CODE[17]), 
		 -> STR_65(CODE[16]), STR_64(CODE[4]), STR_63(CODE[32]), STR_62(CODE[33]), 
		 -> STR_61(CODE[37]), STR_60(CODE[44]), STR_59(CODE[22]), STR_58(CODE[75]), 
		 -> STR_57(CODE[53]), STR_56(CODE[57]), STR_55(CODE[54]), STR_54(CODE[50]), 
		 -> STR_53(CODE[50]), STR_52(CODE[40]), STR_51(CODE[30]), STR_50(CODE[43]), 
		 -> STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), STR_46(CODE[34]), 
		 -> STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), STR_40(CODE[20]), 
		 -> STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), STR_27(CODE[37]), 
		 -> STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), STR_23(CODE[25]), 
		 -> STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[26]), STR_19(CODE[26]), 
		 -> STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), 
		 -> STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), 
		 -> STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), 
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_75(CODE[12]), STR_73(CODE[13]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[33]), STR_68(CODE[38]), STR_67(CODE[58]), STR_66(CODE[17]), 
		 -> STR_65(CODE[16]), STR_64(CODE[4]), STR_63(CODE[32]), STR_62(CODE[33]), 
		 -> STR_61(CODE[37]), STR_60(CODE[44]), STR_59(CODE[22]), STR_58(CODE[75]), 
		 -> STR_57(CODE[53]), STR_56(CODE[57]), STR_55(CODE[54]), STR_54(CODE[50]), 
		 -> STR_53(CODE[50]), STR_52(CODE[40]), STR_51(CODE[30]), STR_50(CODE[43]), 
		 -> STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), STR_46(CODE[34]), 
		 -> STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), STR_40(CODE[20]), 
		 -> STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), STR_27(CODE[37]), 
		 -> STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), STR_23(CODE[25]), 
		 -> STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[26]), STR_19(CODE[26]), 
		 -> STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), 
		 -> STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), 
		 -> STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), 
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1474(BANK4[20]), ValidateCmd@ConfName_1470(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), 
		 -> STR_45(CODE[9]), STR_44(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1474(BANK4[20]), ValidateCmd@ConfName_1470(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), 
		 -> STR_45(CODE[9]), STR_44(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1474(BANK4[20]), ValidateCmd@ConfName_1470(BANK4[20]), 
		 -> ValidateCmd@ConfName(BANK4[20]), STR_45(CODE[9]), STR_44(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1474(BANK4[20]), ValidateCmd@ConfName_1470(BANK4[20]), ValidateCmd@ConfName(BANK4[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_37(CODE[4]), STR_36(CODE[5]), STR_35(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusFC03
    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_printf
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  717068
                                             74 BANK0      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  204764
                                              0 BANK4     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   37957
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  122967
                                             45 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   42273
                                             84 COMRAM     2     2      0
                                             41 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   38816
                                             84 COMRAM     2     2      0
                                             41 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    33    33      0   42014
                                             41 BANK0     33    33      0
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   38059
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  114458
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   38402
                                             41 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   38028
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   78551
                                             43 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   38090
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   40440
                                             84 COMRAM     2     2      0
                                             41 BANK0      4     4      0
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          4     2      2   40378
                                             43 BANK0      4     2      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1463
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     732
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   38059
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   37957
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100     44      E8      14       90.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C4      12       76.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F6      10       96.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F4       8       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4D      62       5       61.3%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4B6       6        0.0%
DATA                 0      0     4B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 21 00:28:42 2021

                      _eusart1TxBufferRemaining 01F2                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 3178  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 3D04                                             l124 3D4C  
                                           l212 3986                                             l214 3994  
                                           l302 3D1C                                             l127 3CEA  
                                           l215 39A0                                             l320 3516  
                                           l144 3E56                                             l305 3DAA  
                                           l321 352E                                             l330 3E2C  
                                           l218 3D34                                             l315 36D8  
                                           l324 3560                                             l503 3E18  
                                           l512 3DFA                                             l506 3E0E  
                                           l362 3DDC                                             l515 3E04  
                                           l371 3DD2                                             l452 3D64  
                                           l509 3E22                                             l365 3DF0  
                                           l470 34B6                                             l702 3914  
                                           l446 31FE                                             l471 34CE  
                                           l455 3DBE                                             l359 3DE6  
                                           l368 3DC8                                             l296 3282  
                                           l449 3D7C                                             l713 2B16  
                                           l465 3790                                             l474 3500  
                                           l803 3A26                                             l299 3D94  
                                           l731 2482                                             l724 2366  
                                           l806 2CAA                                             l727 238C  
                                           l719 32FA                                             l911 3B5A  
                                           l680 3E3C                                             l825 21C2  
                                           l905 25A6                                             l682 3E3E  
                                           l770 28F2                                             l762 19E4  
                                           l755 0A8A                                             l691 3E3A  
                                           l595 26BC                                             l684 3E40  
                                           l772 2962                                             l748 09C2  
                                           l940 1B80                                             l773 296A  
                                           l677 343C                                             l917 3734  
                                           l767 28CC                                             l687 3E36  
                                           l696 387E                                             l936 1826  
                                           l928 1706                                             l689 3E38  
                                           l786 3368                                             l884 1656  
                                           l798 3054                                             l894 1264  
                                           l992 2CF0                                             l995 2D32  
                                           l997 2D6C                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 3DE8         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 3DDE                                             _abs 3AA8  
                                           _pad 2CAC                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            l1003 0B2C  
                                          l1005 0B34                                            l1030 1C02  
                                          l1023 0D6A                                            l1032 1C0A  
                                          l1120 06B2                                            l1041 1CCA  
                                          l1105 0220                                            l1042 1D12  
                                          l1051 129E                                            l1131 3498  
                                          ?_abs 0017                                            l1132 34A0  
                                          l1061 1466                                            l1053 12A6  
                                          l1046 1D1A                                            l1135 3CCE  
                                          l1066 0DA4                                            l1091 1040  
                                          l1075 0E42                                            l1068 0DAC  
                                          l1262 2326                                            l1249 203C  
                                          l1089 0FDE                                            l1810 3ADE  
                                          l1900 39E4                                            l1580 27B2  
                                          l1813 3AE6                                            l1573 2792  
                                          l1590 2BE6                                            l1583 2BC6  
                                          l1841 1EAC                                            l6001 0C02  
                                          l1922 2FAA                                            l1914 3CA8  
                                          l6011 0CBE                                            l6003 0C08  
                                          l1907 3C82                                            l1844 1EB4  
                                          l1853 3C02                                            l1861 37E2  
                                          l6021 0D0C                                            l6013 0CD8  
                                          l6005 0C6C                                            l6101 13FC  
                                          l5141 3CEC                                            l1934 3832  
                                          l1950 3B92                                            l5223 39F6  
                                          l6023 0D1E                                            l6007 0C86  
                                          l6015 0CE6                                            l6103 1416  
                                          l1847 3B22                                            l6111 0D6C  
                                          l5151 3D00                                            l5143 3CF0  
                                          l1944 367C                                            l1880 288E  
                                          l1928 361E                                            l5225 3A06  
                                          l5217 39E6                                            l6201 1DF4  
                                          l6025 0D2A                                            l6017 0CF8  
                                          l6009 0CA4                                            l6041 1BB6  
                                          l6033 1B82                                            l6105 1430  
                                          l6121 0DCA                                            l6113 0D7C  
                                          l7001 2C1A                                            l5145 3CF4  
                                          l5227 3A0A                                            l6211 1E7E  
                                          l6027 0D32                                            l6019 0D06  
                                          l6051 1C2C                                            l6043 1BCA  
                                          l6035 1B94                                            l6107 143E  
                                          l1867 3BCA                                            l1939 3674  
                                          l6131 0E0A                                            l6123 0DEA  
                                          l6115 0D7E                                            l7011 2C64  
                                          l7003 2C20                                            l5147 3CF8  
                                          l1892 30EA                                            l6213 1E90  
                                          l6205 1E2C                                            l6029 0D42  
                                          l6061 1CA4                                            l6053 1C40  
                                          l6045 1BD2                                            l6037 1B9C  
                                          l6141 0E88                                            l6133 0E26  
                                          l6125 0DF2                                            l6117 0D98  
                                          l6221 0150                                            l7013 2C76  
                                          l7005 2C30                                            l7021 3284  
                                          l4621 3DD4                                            l5149 3CFC  
                                          ?_pad 0017                                            l6071 1CF0  
                                          l6063 1CA8                                            l6055 1C44  
                                          l6047 1BE0                                            l6039 1BAE  
                                          l6151 0EF8                                            l6135 0E36  
                                          l6127 0DFC                                            l6119 0DC2  
                                          l6311 0594                                            l6303 0522  
                                          l6231 0182                                            l6223 015E  
                                          l7015 2C86                                            l7007 2C34  
                                          l7031 32D0                                            l7023 3284  
                                          l4623 3DE8                                            l4615 3DCA  
                                          l4625 3D7E                                            l6209 1E6C  
                                          l6073 1CF4                                            l6065 1CAC  
                                          l6057 1C62                                            l6081 1292  
                                          l6161 0F9C                                            l6153 0EFE  
                                          l6145 0EC2                                            l6129 0E02  
                                          l6321 0640                                            l6313 05D0  
                                          l6305 0548                                            l6241 01A0  
                                          l6233 0194                                            l6225 0170  
                                          l7017 2C92                                            l7009 2C4C  
                                          l7033 32EE                                            l7025 3292  
                                          l4617 3DC0                                            l4801 3E54  
                                          l7105 1B7E                                            l7041 1A10  
                                          l7121 25AE                                            l6059 1C6E  
                                          l6091 135C                                            l6083 12CE  
                                          l6075 1266                                            l6171 1002  
                                          l6163 0FB6                                            l6155 0F04  
                                          l6147 0ED4                                            l6139 0E76  
                                          l6323 0654                                            l6307 056E  
                                          l6227 0174                                            l6219 012A  
                                          l7019 2C96                                            l7027 32A0  
                                          l4651 3E1A                                            l4643 3DFC  
                                          l4811 318A                                            l4619 3DDE  
                                          l4803 3CD0                                            l6411 36B6  
                                          l6403 367E                                            l7035 19E6  
                                          l7131 25B8                                            l7123 25B0  
                                          l5453 3844                                            l4629 3D96  
                                          l6181 1D34                                            l6069 1CDC  
                                          l6093 1362                                            l6085 12D6  
                                          l6077 1276                                            l6173 1018  
                                          l6165 0FD0                                            l6149 0EE8  
                                          l6157 0F62                                            l6309 0586  
                                          l6317 060C                                            l6261 0256  
                                          l6253 01B8                                            l6245 01A6  
                                          l6237 019A                                            l6229 0180  
                                          l6333 067A                                            l7029 32CA  
                                          l4645 3DF2                                            l4821 31AA  
                                          l4813 319A                                            l4805 3D36  
                                          l6421 36D6                                            l6413 36C6  
                                          l6405 367E                                            l6501 24C0  
                                          l7061 1A7E                                            l7037 19E6  
                                          l7141 25CA                                            l7133 25BE  
                                          l7125 25B2                                            l7117 25A8  
                                          l5455 3854                                            l5447 3834  
                                          l6183 1D38                                            l6095 1368  
                                          l6087 12E0                                            l6079 1278  
                                          l6167 0FEC                                            l6159 0F7E  
                                          l6335 06A0                                            l6319 0632  
                                          l6327 0660                                            l6271 02D6  
                                          l6263 028C                                            l6255 020E  
                                          l4647 3E10                                            l4831 31E6  
                                          l4823 31AE                                            l4815 319E  
                                          l4807 317A                                            l6431 2EEE  
                                          l6415 36CA                                            l6407 3690  
                                          l6351 35C2                                            l6511 2544  
                                          l6503 24D2                                            l7063 1A7E  
                                          l7039 1A0C                                            l7047 1A16  
                                          l7135 25C2                                            l7127 25B4  
                                          l7119 25AC                                            l5457 3858  
                                          l6193 1D98                                            l6185 1D56  
                                          l6177 1D1C                                            l5801 2D14  
                                          l6089 12E6                                            l6097 13CC  
                                          l6169 0FF2                                            l6329 066E  
                                          l6281 037E                                            l6265 029A  
                                          l6257 022E                                            l6249 01AC  
                                          l6361 347A                                            l6425 3C5C  
                                          l4649 3E06                                            l4833 31EC  
                                          l4825 31D6                                            l4817 31A2  
                                          l4809 317E                                            l4841 3200  
                                          l6433 2EF2                                            l6601 1124  
                                          l6417 36CE                                            l6409 36B4  
                                          l6353 35D2                                            l6521 2582  
                                          l6513 2548                                            l6505 24E6  
                                          l7081 1B0C                                            l7065 1AA4  
                                          l7073 1AAE                                            l7049 1A3C  
                                          l7057 1A46                                            l7145 25E2  
                                          l7153 262E                                            l7161 2670  
                                          l7137 25C6                                            l7129 25B6  
                                          l5459 3874                                            l6195 1DAE  
                                          l6187 1D8E                                            l6179 1D30  
                                          l5811 3AC2                                            l5731 3504  
                                          l5803 2D40                                            l6099 13DE  
                                          l6291 045A                                            l6283 03C6  
                                          l6275 0320                                            l6267 02A8  
                                          l6259 0230                                            l6355 343E  
                                          l6427 3C66                                            l6611 33E4  
                                          l4931 38F4                                            l4835 31F0  
                                          l4827 31DC                                            l4819 31A6  
                                          l4851 322A                                            l4843 3204  
                                          l6435 2EFA                                            l6531 1484  
                                          l6603 1132                                            l6371 3974  
                                          l6363 395E                                            l6419 36D2  
                                          l6451 27FC                                            l6443 3C84  
                                          l6523 2590                                            l6507 250A  
                                          l7091 1B3C                                            l7075 1AD4  
                                          l7059 1A6C                                            l7163 2692  
                                          l7147 25EA                                            l7155 265C  
                                          l7139 25CA                                            l6197 1DB6  
                                          l6189 1D92                                            l5901 224E  
                                          l5741 3544                                            l5733 3504  
                                          l5805 2D54                                            l5813 3B94  
                                          l5821 3620                                            l6269 02C8  
                                          l6277 0332                                            l6357 3446  
                                          l6621 341C                                            l6613 33E4  
                                          l4925 38CC                                            l6701 247A  
                                          l4837 31F6                                            l4829 31E2  
                                          l4861 324E                                            l4853 322E  
                                          l4845 3210                                            l4781 3114  
                                          l6437 2F3C                                            l6541 14CE  
                                          l6533 1492                                            l6605 1158  
                                          l6381 3984                                            l6373 3978  
                                          l6365 3966                                            l6461 286E  
                                          l6453 280C                                            l6509 2532  
                                          l6517 2554                                            l6525 259C  
                                          l7093 1B4E                                            l7077 1AE6  
                                          l7157 2664                                            l7149 2610  
                                          l5831 3BCC                                            l6199 1DBE  
                                          l5911 22D0                                            l5903 2262  
                                          l5743 3554                                            l5735 3526  
                                          l5751 3056                                            l6295 047A  
                                          l6287 03FE                                            l6279 0358  
                                          l6359 3454                                            l6631 2FD0  
                                          l6471 3DAC                                            l6711 2890  
                                          l6623 3420                                            l4927 38E0  
                                          l4839 31FA                                            l4863 327E  
                                          l4855 3232                                            l4847 3220  
                                          l4791 3154                                            l4783 3124  
                                          l6391 3D2E                                            l6383 3D1E  
                                          l6439 2F6E                                            l6551 150C  
                                          l6543 14D2                                            l6535 14AA  
                                          l6607 116A                                            l6375 397A  
                                          l6367 396C                                            l6463 2872  
                                          l6455 282C                                            l6447 27B4  
                                          l6519 2566                                            l7095 1B4E  
                                          l7079 1AE6                                            l7167 2696  
                                          l7159 2668                                            l5841 1EB6  
                                          l5905 2270                                            l5913 22D6  
                                          l5809 3AA8                                            l5745 3558  
                                          l5737 3530                                            l5761 30D8  
                                          l5753 3068                                            l5921 26C4  
                                          l5817 3AE8                                            l5825 3656  
                                          l6297 04A0                                            l6289 0424  
                                          l6641 3048                                            l6633 2FE4  
                                          l6625 2FAC                                            l6481 34D0  
                                          l6713 2894                                            l6609 33D6  
                                          l4929 38F0                                            l4881 376E  
                                          l4873 3736                                            l4857 3236  
                                          l4849 3226                                            l4793 315A  
                                          l4785 314E                                            l6393 3D30  
                                          l6385 3D24                                            l6561 159E  
                                          l6553 151C                                            l6545 14E0  
                                          l6537 14BA                                            l6529 1468  
                                          l6377 397C                                            l6369 3970  
                                          l6465 2876                                            l6449 27DA  
                                          l6457 2848                                            l6801 1788  
                                          l7097 1B74                                            l7089 1B16  
                                          l7169 26A4                                            l5835 3CAA  
                                          l7291 1DDE                                            l5851 1EFA  
                                          l5843 1EBA                                            l5915 22E6  
                                          l5907 229E                                            l5739 3542  
                                          l5747 355C                                            l5755 307A  
                                          l5771 3826                                            l5931 2718  
                                          l5923 26D0                                            l5827 3668  
                                          l6299 04EA                                            l6635 3010  
                                          l6627 2FAC                                            l6483 34E2  
                                          l6491 34FC                                            l6475 34A4  
                                          l6467 3D66                                            l6731 290A  
                                          l6723 28DA                                            l6715 28B0  
                                          l6619 33EC                                            l6651 2A80  
                                          l6643 2A46                                            l4891 378E  
                                          l4883 377E                                            l4875 3736  
                                          l6707 2480                                            l4859 3242  
                                          l4795 315C                                            l4787 3150  
                                          l4779 30EC                                            l6395 3D32  
                                          l6387 3D28                                            l6571 1646  
                                          l6563 15D0                                            l6555 1520  
                                          l6547 14E4                                            l6539 14CA  
                                          l6379 3980                                            l6459 285A  
                                          l6803 17A0                                            l6811 17F6  
                                          l5837 3CC6                                            l5861 1F50  
                                          l5853 1F1A                                            l5845 1EC8  
                                          l5917 2306                                            l5909 22BE  
                                          l5749 3E26                                            l5757 3084  
                                          l5781 39C4                                            l5765 37E4  
                                          l5941 278C                                            l5933 272A  
                                          l5925 26EE                                            l6637 3024  
                                          l6629 2FC2                                            l6485 34E4  
                                          l6477 34A4                                            l6725 28E0  
                                          l6717 28C4                                            l6733 290E  
                                          l6661 2AF6                                            l6653 2A9E  
                                          l6645 2A5C                                            l4885 3782  
                                          l4877 3748                                            l4869 3D4E  
                                          l6821 2056                                            l4797 315E  
                                          l4789 3152                                            l6389 3D2C  
                                          l6565 15F6                                            l6557 1546  
                                          l6549 14FC                                            l6581 371C  
                                          l6573 36DA                                            l6493 2484  
                                          l6813 1808                                            l6805 17A6  
                                          l7285 2646                                            l5871 1FD2  
                                          l5863 1F64                                            l5855 1F1E  
                                          l5847 1EE8                                            l5759 30A2  
                                          l5775 39A2                                            l5767 37F0  
                                          l5791 2CCE                                            l5935 2758  
                                          l5927 26F6                                            l5951 2B60  
                                          l5943 2B18                                            l5783 3B5C  
                                          l6639 302A                                            l6487 34F4  
                                          l6479 34C6                                            l6751 3332  
                                          l6743 32FC                                            l6735 292C  
                                          l6727 28EC                                            l6911 0868  
                                          l7287 079E                                            l6903 0786  
                                          l6655 2AAE                                            l6647 2A78  
                                          l4887 3786                                            l4879 376C  
                                          l6671 234A                                            l6831 20A4  
                                          l6823 2068                                            l4799 3160  
                                          l6567 1624                                            l6559 1578  
                                          l6591 10B0                                            l6583 1046  
                                          l6575 36F8                                            l6399 3D06  
                                          l6495 248C                                            l6815 181A  
                                          l6807 17CA                                            l5961 3796  
                                          l5881 201C                                            l5873 1FD4  
                                          l5865 1F72                                            l5857 1F2A  
                                          l5849 1EEC                                            l5777 39AE  
                                          l5769 37F4                                            l5793 2CDC  
                                          l5937 2778                                            l5929 270A  
                                          l5953 2B8E                                            l5945 2B36  
                                          l7289 01E0                                            l6489 34F8  
                                          l6753 3346                                            l6745 3300  
                                          l6737 2946                                            l6729 28F8  
                                          l6921 0962                                            l6913 0878  
                                          l6905 07E4                                            l6665 2B0C  
                                          l6657 2AD0                                            l6649 2A7C  
                                          l4889 378A                                            l6681 237A  
                                          l6673 235E                                            l6833 20B4  
                                          l6841 20F6                                            l6825 2074  
                                          l6817 203E                                            l6569 1628  
                                          l6593 10D4                                            l6585 1052  
                                          l6577 3704                                            l6497 24A0  
                                          l6809 17DE                                            l6761 3B3A  
                                          l5963 37AA                                            l5875 1FE6  
                                          l5867 1F84                                            l5859 1F48  
                                          l5891 21F6                                            l5779 39C0  
                                          l5795 2CE8                                            l5787 2CAC  
                                          l5971 0A8C                                            l5939 277A  
                                          l5955 2BAE                                            l5947 2B3E  
                                          l6755 334A                                            l6747 3314  
                                          l6739 2956                                            l6931 0A48  
                                          l6923 09D4                                            l6915 08DC  
                                          l6907 07F0                                            l6659 2AE4  
                                          l6691 23DE                                            l6683 2386  
                                          l6667 2328                                            l6851 2120  
                                          l6843 2108                                            l6835 20D6  
                                          l6819 2042                                            l6595 10E2  
                                          l6587 1076                                            l6579 3718  
                                          l6499 24B4                                            l6771 1660  
                                          l6763 3B4A                                            l5965 37D8  
                                          l5869 1FB2                                            l5877 1FEC  
                                          l5893 21FA                                            l5885 21C4  
                                          l5797 2CFC                                            l5789 2CBA  
                                          l5981 0B06                                            l5973 0AAC  
                                          l5957 2BC0                                            l5949 2B52  
                                          l6749 3320                                            l6933 0A5A  
                                          l6925 09D8                                            l6917 08EE  
                                          l6909 0804                                            l6693 23F8  
                                          l6685 2392                                            l6669 232E  
                                          l6861 21AC                                            l6845 210C  
                                          l6853 2142                                            l6829 208C  
                                          l6837 20DC                                            l6597 10F8  
                                          l6589 10A6                                            l6781 16DA  
                                          l6773 167E                                            l6765 3B4E  
                                          l6757 3B24                                            l5967 37DC  
                                          l5959 3792                                            l5879 1FFC  
                                          l5895 2208                                            l5887 21C8  
                                          l5799 2D10                                            l5991 0B62  
                                          l5983 0B20                                            l5975 0AD4  
                                          l6935 0A6A                                            l6919 0952  
                                          l6927 09F0                                            l6871 06B4  
                                          l6951 1866                                            l6943 1828  
                                          l6695 2408                                            l6687 23A4  
                                          l6679 2374                                            l6863 21BA  
                                          l6855 2162                                            l6847 2110  
                                          l6839 20F0                                            l6599 110E  
                                          l6791 172E                                            l6783 16E2  
                                          l6775 1692                                            l6767 1658  
                                          l6759 3B36                                            l5897 2228  
                                          l5889 21D6                                            l5993 0B6A  
                                          l5985 0B3C                                            l5977 0AF4  
                                          l6937 0A76                                            l6929 0A18  
                                          l6881 06E6                                            l6873 06BE  
                                          l6961 1892                                            l6953 186A  
                                          l6945 1842                                            l6697 2424  
                                          l6689 23A8                                            l6857 2186  
                                          l6849 2116                                            l6793 1744  
                                          l6785 16F4                                            l6777 16B2  
                                          l6769 1658                                            l5899 2246  
                                          l5995 0B74                                            l5987 0B4E  
                                          l5979 0B04                                            l6891 0736  
                                          l6883 06FE                                            l6875 06CE  
                                          l6971 18F8                                            l6963 18A2  
                                          l6955 187A                                            l6947 1852  
                                          l6699 2450                                            l6859 219A  
                                          l6867 21C0                                            l6795 1758  
                                          l6787 1706                                            l6779 16C6  
                                          l5997 0B7A                                            l5989 0B5C  
                                          l6893 0746                                            l6885 0706  
                                          l6877 06D2                                            l6981 198A  
                                          l6973 1904                                            l6965 18A6  
                                          l6957 187E                                            l6949 1856  
                                          l6797 1766                                            l6789 171A  
                                          l5999 0BFC                                            l6895 0756  
                                          l6887 0716                                            l6879 06E2  
                                          l6991 19D0                                            l6983 199C  
                                          l6975 192E                                            l6967 18B6  
                                          l6959 188E                                            l6799 1782  
                                          l6993 2BE8                                            l6897 0766  
                                          l6889 0726                                            l6985 19AC  
                                          l6969 18C6                                            l6977 1932  
                                          l6995 2BF2                                            l6899 0776  
                                          l6987 19B8                                            l6979 195A  
                                          l6997 2C02                                            l6989 19C8  
                                          l6999 2C06                                            STR_1 FEF8  
                                          STR_2 FCFA                                            STR_3 FD8C  
                                          STR_4 FF34                                            STR_5 F8BF  
                                          STR_6 FF79                                            STR_7 FDA8  
                                          STR_8 F9B2                                            STR_9 FD54  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            u4010 3D92  
                                          u4011 3D8C                                            u4020 3D94  
                                          u4030 3DA8                                            u4031 3DA2  
                                          u4036 3DAA                                            u6000 143E  
                                          u4320 3914                                            u6001 143A  
                                          u4321 3910                                            u5210 3516  
                                          u6010 0D7C                                            u4250 3D62  
                                          u5211 3512                                            u6011 0D78  
                                          u4251 3D5C                                            u5220 3526  
                                          u5300 39E4                                            u6100 0ED4  
                                          u6020 0D98                                            u4260 3D64  
                                          u5221 3522                                            u5301 39E0  
                                          u6101 0ED0                                            u6021 0D94  
                                          u5230 3554                                            u5310 3B8C  
                                          u6110 0F3C                                            u6030 0DC2  
                                          u4270 3748                                            u5231 3550  
                                          u5311 3B86                                            u6031 0DBE  
                                          u4271 3744                                            u6200 1DAA  
                                          u5240 3068                                            u5400 3B1C  
                                          u5320 3B8E                                            u6120 0F7E  
                                          u6040 0E26                                            u7000 3368  
                                          u4280 377E                                            u6201 1DA6  
                                          u5241 3064                                            u5401 3B16  
                                          u6121 0F7A                                            u6041 0E22  
                                          u7001 3364                                            u4281 377A  
                                          u6210 1E66                                            u5250 307A  
                                          u5330 2CBA                                            u5410 3B1E  
                                          u6130 0F9C                                            u6050 0E70  
                                          u7010 3B36                                            u6211 1E60  
                                          u5251 3076                                            u5331 2CB6  
                                          u6131 0F98                                            u6115 0F2A  
                                          u6051 0E6A                                            u7011 3B32  
                                          u6220 1E68                                            u5500 1F48  
                                          u5260 30A2                                            u5340 2CDC  
                                          u5420 3650                                            u6140 0FB6  
                                          u6060 0E72                                            u6300 0318  
                                          u7100 2068                                            u7020 16B2  
                                          _PMD0 000EE1                                            u5501 1F44  
                                          u5261 309E                                            u5341 2CD8  
                                          u5421 364A                                            u6141 0FB2  
                                          u6301 0312                                            u7101 2064  
                                          u7021 16AE                                            _PMD1 000EE2  
                                          u6230 1E7E                                            u5510 1F72  
                                          u5270 30D8                                            u5350 2D32  
                                          u5430 3652                                            u6150 0FD0  
                                          u6070 0E88                                            u6310 031A  
                                          u7110 2088                                            u7030 16DA  
                                          _PMD2 000EE3                                            u6231 1E7A  
                                          u5511 1F6E                                            u5271 30D4  
                                          u5351 2D2E                                            u6151 0FCC  
                                          u6071 0E84                                            u7111 2084  
                                          u7031 16D6                                            _PMD3 000EE4  
                                          u6240 1E90                                            u5520 1FB2  
                                          u5280 3816                                            u5360 2D40  
                                          u5440 3668                                            u6160 0FDE  
                                          u6080 0EBC                                            u6320 0332  
                                          u7200 0878                                            u7120 20B4  
                                          u6400 360C                                            u7040 16F4  
                                          _PMD4 000EE5                                            u6241 1E8C  
                                          u5521 1FAE                                            u5361 2D3C  
                                          u5601 26CA                                            u5441 3664  
                                          u6161 0FDA                                            u6081 0EB6  
                                          u6321 032E                                            u7201 0874  
                                          u7121 20B0                                            u7041 16F0  
                                          _PMD5 000EE6                                            u5450 3BFC  
                                          u5530 1FFC                                            u5370 3AC2  
                                          u5290 3826                                            u5610 26EE  
                                          u6170 0FEC                                            u6090 0EBE  
                                          u6330 0358                                            u6250 0150  
                                          u7210 08EE                                            u7130 20F0  
                                          u6410 361E                                            u7050 1706  
                                          u5451 3BF6                                            u5531 1FF8  
                                          u5371 3ABE                                            u5291 3822  
                                          u5611 26EA                                            u6171 0FE8  
                                          u6331 0354                                            u6251 014C  
                                          u7211 08EA                                            u7131 20EC  
                                          u6411 361A                                            u7051 1702  
                                          u5460 3BFE                                            u6180 1D56  
                                          u5540 21D6                                            u5700 0ABE  
                                          u5620 2718                                            u5380 3BC4  
                                          u6340 037E                                            u6260 0220  
                                          u6420 3498                                            u7220 0962  
                                          u7140 2108                                            u6500 2F5E  
                                          u7060 17CA                                            u6181 1D52  
                                          u5541 21D2                                            u5621 2714  
                                          u5381 3BBE                                            u6341 037A  
                                          u6261 021C                                            u6421 3494  
                                          u7221 095E                                            u7141 2104  
                                          u7061 17C6                                            u7301 1A76  
                                          u6190 1D8E                                            u5470 1EC8  
                                          u5550 2208                                            u5710 0AD4  
                                          u5630 2758                                            u5390 3BC6  
                                          u6350 0424                                            u6270 022E  
                                          u7230 0A18                                            u7150 2130  
                                          u6510 2F6E                                            u6430 3994  
                                          u7070 1808                                            u7310 1AD4  
                                          u6191 1D8A                                            u5471 1EC4  
                                          u5551 2204                                            u5287 380C  
                                          u5711 0AD0                                            u5631 2754  
                                          u6351 0420                                            u6271 022A  
                                          u7231 0A14                                            u7151 212A  
                                          u6511 2F6A                                            u6431 3990  
                                          u6407 3602                                            u7071 1804  
                                          u7311 1AD0                                            u5480 1EFA  
                                          u5560 2246                                            u5800 0CE6  
                                          u5720 0B04                                            u5640 2B36  
                                          u6360 04A0                                            u6280 0256  
                                          u6600 3DBC                                            u7240 195A  
                                          u7160 2162                                            u6520 2F90  
                                          u7080 181A                                            u5481 1EF6  
                                          u5561 2242                                            u5801 0CE2  
                                          u5721 0B00                                            u5641 2B32  
                                          u6361 049C                                            u6281 0252  
                                          u6601 3DB6                                            u7241 1956  
                                          u7161 215E                                            u7081 1816  
                                          u7321 1ADE                                            u5570 2270  
                                          u5810 0CF8                                            u5730 0B20  
                                          u5650 2B60                                            u6370 0548  
                                          u6290 029A                                            u6610 34B6  
                                          u7250 19C8                                            u7170 2172  
                                          u7090 2056                                            u6450 3D1A  
                                          u6530 27DA                                            u7330 1B3C  
                                          u5491 1F24                                            u5571 226C  
                                          u5811 0CF4                                            u5731 0B1C  
                                          u5651 2B5C                                            u6371 0544  
                                          u6291 0296                                            u6611 34B2  
                                          u7251 19C4                                            u7171 216C  
                                          u7091 2052                                            u6507 2F54  
                                          u6451 3D14                                            u6531 27D6  
                                          u7331 1B38                                            u4780 3A26  
                                          u5580 229E                                            u5820 0D06  
                                          u5740 0B4E                                            u5900 1C90  
                                          u5660 2B8E                                            u6380 056E  
                                          u6620 34C6                                            u7180 219A  
                                          u7156 2132                                            u7260 32EE  
                                          u6700 14BA                                            u6460 3D1C  
                                          u6540 27FC                                            u4781 3A22  
                                          u5581 229A                                            u5821 0D02  
                                          u5741 0B4A                                            u5661 2B8A  
                                          u6381 056A                                            u6621 34C2  
                                          u7181 2196                                            u7261 32EA  
                                          u6701 14B6                                            u6445 399E  
                                          u6541 27F8                                            u7341 1B46  
                                          u5670 37AA                                            u5590 22E6  
                                          u5830 0D1E                                            u5750 0B5C  
                                          u5910 1CCA                                            u6390 0632  
                                          u6630 34F4                                            u6606 3DBE  
                                          u7190 0804                                            u6710 150C  
                                          u6446 39A0                                            u6470 3690  
                                          u6550 2844                                            u7270 1A0C  
                                          u7350 25DE                                            u5671 37A6  
                                          u5591 22E2                                            u5831 0D1A  
                                          u5751 0B58                                            u5911 1CC6  
                                          u6391 062E                                            u6631 34F0  
                                          u7191 0800                                            u6527 2F86  
                                          u6711 1508                                            u6471 368C  
                                          u6551 2840                                            u7271 1A08  
                                          u7351 25DA                                            u5680 37D8  
                                          u5760 0C86                                            u5920 1CD8  
                                          u6800 343C                                            u7176 2174  
                                          u6720 1546                                            u6480 36C6  
                                          u6560 285A                                            u6640 24A0  
                                          u7280 1A3C                                            u7360 2692  
                                          u5681 37D4                                            u5761 0C82  
                                          u5921 1CD4                                            u5841 1B8C  
                                          u6801 3438                                            u6721 1542  
                                          u6481 36C2                                            u6561 2856  
                                          u6641 249C                                            u7281 1A38  
                                          u7361 268E                                            u4970 3874  
                                          u5770 0CA4                                            u5690 0ABC  
                                          u5930 1D12                                            u5850 1BAE  
                                          u6810 2FE4                                            u6490 2F3C  
                                          u6730 159E                                            u6570 288E  
                                          u6650 24B4                                            u7290 1A6C  
                                          u4971 3870                                            u5771 0CA0  
                                          u5691 0AB6                                            u5931 1D0E  
                                          u5907 1C86                                            u5851 1BAA  
                                          u6811 2FE0                                            u6491 2F38  
                                          u6731 159A                                            u6571 288A  
                                          u6651 24B0                                            u7291 1A68  
                                          u5780 0CBE                                            u5860 1BE0  
                                          u5940 1276                                            u6820 3024  
                                          u6580 3D7A                                            u6900 23DE  
                                          u6740 15F6                                            u6660 24D2  
                                          u5781 0CBA                                            u5861 1BDC  
                                          u5941 1272                                            u6821 3020  
                                          u6581 3D74                                            u6901 23DA  
                                          u6741 15F2                                            u6661 24CE  
                                          u5790 0CD8                                            u5870 1BFE  
                                          u5950 1292                                            u6830 3048  
                                          u6590 3D7C                                            u6910 2408  
                                          u6750 1646                                            u6670 250A  
                                          u5791 0CD4                                            u5871 1BFA  
                                          u5951 128E                                            u6831 3044  
                                          u6911 2404                                            u6495 2F2C  
                                          u6751 1642                                            u6671 2506  
                                          u5880 1C28                                            u5960 13DE  
                                          u6840 2A9E                                            u6920 2450  
                                          u6760 3734                                            u6680 2544  
                                          u5881 1C24                                            u5961 13DA  
                                          u6841 2A9A                                            u6921 244C  
                                          u6497 2F22                                            u6761 3730  
                                          u6681 2540                                            u7377 1794  
                                          u5890 1C62                                            u5970 13FC  
                                          u6850 2AAE                                            u6930 247A  
                                          u6690 2566                                            u5891 1C5E  
                                          u5971 13F8                                            u6851 2AAA  
                                          u6931 2476                                            u7387 149C  
                                          u6771 104C                                            u6691 2562  
                                          u5980 1416                                            u6940 28DA  
                                          u6860 2AE4                                            u5981 1412  
                                          u6941 28D6                                            u6861 2AE0  
                                          u7397 14EE                                            u6781 107C  
                                          u5990 1430                                            u6950 290A  
                                          u6870 2B08                                            u6790 116A  
                                          u5991 142C                                            u6951 2906  
                                          u6871 2B04                                            u6791 1166  
                                          u6960 292C                                            u6880 2374  
                                          u6961 2928                                            u6881 2370  
                                          u6970 2956                                            u6890 23A4  
                                          u6971 2952                                            u6891 23A0  
                                          u6980 3314                                            u6981 3310  
                                          u6990 3346                                            u6991 3342  
                           ValidateCmd@ConfName 04A4                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 34A2  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 3502  
                            ClearModbusRespon@i 0005                                  generateCRC@crc 0012  
                                          abs@a 0017                                            _dbuf 0143  
                                          _atoi 1D1C                                            _main 25A8  
                                          _dtoa 0A8C                                   ?_EUSART1_Read 0001  
                                          _prec 00AE                                   ?_EUSART2_Read 0001  
                                          _nout 013B                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 1B82  
                                          btemp 005B                                            _utoa 1266  
                                          _xtoa 0D6C                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 38CC                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                     __size_of_DATAEE_WriteByte 0044                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 3D4E                           _eusart1RxStatusBuffer 0300  
                               __end_of___aodiv 203E                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 2328                                           STR_10 FC56  
                                         STR_11 FE74                                           STR_12 F8BC  
                                         STR_20 FE11                                           STR_21 FD37  
                                         STR_13 FC10                                           STR_30 FFD6  
                                         STR_14 FDC3                                           STR_22 FD70  
                                         STR_31 FFEA                                           STR_15 FEB7  
                                         STR_23 FE2B                                           STR_24 F8BC  
                                         STR_32 FFEA                                           STR_40 FF0D  
                                         STR_16 FECD                                           STR_33 FFF4  
                                         STR_41 FEE3                                           STR_25 FE5C  
                                         STR_17 FE44                                   __CFG_WDTE$OFF 000000  
                                         STR_34 FFF4                                           STR_26 FF89  
                                         STR_42 FE8B                                           STR_18 FDF7  
                                         STR_50 FAAD                                           STR_35 FFD6  
                                         STR_19 FDDD                                           STR_51 FD19  
                                         STR_27 FBC7                                           STR_43 FAD8  
                                         STR_36 FFEA                                           STR_44 FFC1  
                                         STR_28 FCDA                                           STR_52 FB2C  
                                         STR_60 FA81                                           STR_37 FFF4  
                                         STR_29 FFD6                                           STR_45 FFCD  
                                         STR_61 FBA2                                           STR_53 FA4F  
                                         STR_70 FC99                                           STR_62 FC78  
                                         STR_46 FC34                                           STR_38 FB54  
                                         STR_54 FA1D                                           STR_71 FF99  
                                         STR_39 FF21                                           STR_63 FCBA  
                                         STR_47 FBEC                                           STR_55 F97C  
                                         STR_64 F8BC                                           STR_80 FFDD  
                                         STR_72 FF47                                           STR_48 FB02  
                                         STR_56 F943                                           STR_81 FFDD  
                                         STR_73 FFA8                                           STR_65 FF69  
                                         STR_57 F9E8                                           STR_49 F8C0  
                                         STR_74 F8BF                                           STR_82 FFEF  
                                         STR_66 FF58                                           STR_58 F875  
                              ?_ClearModbusData 0001                                           STR_83 FFEF  
                                         STR_75 FFB5                                           STR_59 FEA1  
                                         STR_67 F909                                           STR_84 FFF8  
                                         STR_76 FFE4                                           STR_68 FB7C  
                                         STR_69 F8BF                                           STR_77 FFE4  
                                         STR_85 FFF8                                           STR_78 FFFC  
                                         STR_79 FFFC                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 27B4  
                                         ?_xtoa 0022                                 __end_of___lomod 2BE8  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 3E52  
                                         i2l333 38C6                                           i2l350 3E58  
                                         i2l343 2E2C                                           i2l159 0112  
                                         i2l336 38CA                                           i2l353 3E34  
                                         i2l347 3C2E                                           i2l356 3E46  
                                         i2l480 395C                                           i2l491 3C5A  
                                         i2l477 3958                                           i2l494 3E5A  
                                         i2l487 2EEC                                           i2l497 3E4C  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                        CardConfigIni@readDataOdd 0018  
                                         _Debug 00B8                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 3916  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 _DATAEE_ReadByte 3D1E  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                        __size_of_CardConfigIni 01F0                                           _fputc 3056  
                               __end_of_isalpha 3B24                                           _fputs 39A2  
                               __end_of_isdigit 3C04                        SaveCardDat@dataeeAddrWrk 0099  
                               __end_of_memmove 2890                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00AC  
                                         _putch 3E24                        __size_of_ClearEEAddRange 005C  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 3B94                                 __end_of_isspace 37E4  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 3BCC                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 38CC  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00B6                                   ??_ModbusError 0056  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 367E                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 3E5C  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 3E5A  
                   __size_of_EUSART2_is_tx_done 0016                                   ??_SaveCardDat 0095  
                                checkCRC@crcLow 0090           __end_of_EUSART2_SetTxInterruptHandler 3DCA  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 3DC0  
                                  _toupper$2170 0011                                 __initialization 296C  
                                  __end_of_atoi 1EB6                      __end_of_EUSART1_Initialize 3200  
                                  __end_of_main 26C4                                    __end_of_dtoa 0D6C  
                     __size_of_InitialiseString 0224                                    __end_of_stoa 1D1C  
                                  __end_of_utoa 1468                                    __end_of_xtoa 1042  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 21C4  
                                        ??_atoi 000E                                          ??_main 00AA  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 1828                                      _ModbusFC03 06B4  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 3B5C  
                           SaveCardDat@NumBytes 0093             __end_of_EUSART2_DefaultErrorHandler 3E48  
                   _EUSART2_DefaultErrorHandler 3E42                                      _ModbusData 0200  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                          SaveCardDat@MBAddress 008F                      __end_of_EUSART2_Initialize 3284  
                      _eusart2TxBufferRemaining 01F3                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                       InitialiseString@SerialNum 009C  
                              ClearEEAddRange@i 0055                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                              __size_of_ReadRX232 0124  
                                __CFG_WDTCCS$SC 000000                                          i2l5201 2E4C  
                                        i2l5211 2EAE                                          i2l5203 2E5C  
                                        i2l5213 2ECA                                          i2l5205 2E76  
                                        i2l5215 2EE8                                          i2l5207 2E84  
                                        i2l5209 2E94                                          i2l5161 38BA  
                                        i2l5153 3880                                          i2l5171 2D9E  
                                        i2l5163 38BE                                          i2l5155 3892  
                                        i2l5181 2E0A                                          i2l5173 2DB6  
                                        i2l5165 2D6E                                          i2l5157 38A6  
                                        i2l5191 393C                                          i2l5183 2E28  
                                        i2l5175 2DC6                                          i2l5167 2D7E  
                                        i2l5159 38AA                                          i2l5193 394C  
                                        i2l5185 3916                                          i2l4641 3C2A  
                                        i2l4633 3C04                                          i2l5177 2DD6  
                                        i2l5169 2D8E                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          i2l5195 3950  
                                        i2l5187 3928                                          i2l4635 3C14  
                                        i2l5179 2DEE                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          i2l5197 2E2E  
                                        i2l5189 393A                                          i2l4637 3C16  
                                        i2l5541 0028                                          _INLVLE 000F2A  
                                        i2l5199 2E3E                                          i2l4639 3C26  
                                        i2l5551 00AC                                          i2l5543 0038  
                                        i2l4681 3C40                                          i2l5553 00BA  
                                        i2l5545 0046                                          i2l4683 3C42  
                                        i2l5555 00E6                                          i2l5547 0072  
                                        i2l5539 001A                                          i2l4685 3C52  
                                        i2l5557 00F4                                          i2l5549 0080  
                                        i2l4687 3C56                                          i2l4679 3C30  
                                        i2l4865 3E2E                                          i2l4867 3E42  
                                        _TABLAT 000FF5                                          i2l4895 3E48  
                                        i2l4897 3E4E                                   ??_ValidateCmd 0057  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 006B  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 2484                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                     ModbusFC10@i 0091  
                                   ModbusFC10@j 0093                                     ModbusFC03@i 0055  
                                        _RXMode 3E36                                          _TXMode 3E3C  
                                        _RXStat 0140                                  __CFG_PWRTE$OFF 000000  
                          __size_of_generateCRC 00DC                                          _ByteHi 00B0  
                                        _ByteLo 01D6                              _UART1_Write_string 32FC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 0089  
                                 _CardConfigIni 1468                                      _PrintMB400 33D6  
                           __end_of_ModbusError 2CAC                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 3CAA  
                                __CFG_STVREN$ON 000000                           CardConfigIni@NumBytes 0010  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           __end_of_SaveCardDat 1828                                          clear_0 29F2  
                                        clear_1 29FE                                          clear_2 2A0A  
                                        clear_3 2A16                                          clear_4 2A22  
                                        clear_5 2A2E                                          _rxData 0500  
                   _EUSART2_FramingErrorHandler 01E8                                          _printf 3C5C  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcat 3C84                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 3D36                                          _strcmp 2EEE  
                                        _strcpy 35C2                                          _strlen 37E4  
                                 _ExpectedBytes 01DA                                          fputc@c 0007  
                                _PMD_Initialize 3CD0                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_memmove 000F                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst F874  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 3880  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 34A2                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0400  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0364  
                               _eusart1TxBuffer 0120                    __size_of_EUSART2_is_rx_ready 0018  
                             _SYSTEM_Initialize 3CEC                         __size_of_PrintModRespon 00AA  
                               _eusart2TxBuffer 0264                                      __accesstop 0060  
                       __end_of__initialization 2A3C                    __size_of_EUSART2_is_tx_ready 0018  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               checkCRC@crcHigh 008E                               ??_ClearEEAddRange 0055  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 3C5C                                  ?_CardConfigIni 000A  
                           __end_of_ValidateCmd 1B82                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 336A                                    __pidataBANK2 3562  
                                  __pidataBANK3 3A28                                    __pidataBANK4 3A68  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 395E  
                                 __end_of_fputc 30EC                                   __end_of_fputs 39E6  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 3E2E  
                             __end_of_ReadRX232 25A8                          __end_of_PMD_Initialize 3CEC  
                          __end_of_EUSART1_Read 3792                            __end_of_EUSART2_Read 36DA  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 2EEE  
                           CardConfigIni@RetNum 000C                            ModbusError@ErrorCode 008B  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 3D06  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00BC  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00BA  
                                 _eusart2TxHead 00C0                                      __pbssBANK0 00AC  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                    __pbssBANK5 0500                                   _eusart2RxTail 00BE  
                                 _eusart1TxTail 00BB               _EUSART1_TxDefaultInterruptHandler 01EC  
                                 _eusart2TxTail 00BF                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 32FC                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 2BE8  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 3E24  
                                   _SaveCardDat 1658                                     ?_PrintMB400 0001  
                              _InitialiseString 1042                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         _MB300xx 0384  
                                       _MB301xx 019B                                         _MB302xx 01DC  
                                       _MB303xx 01B3                                         _MB304xx 01A9  
                                       _MB400xx 0464                                         _MB305xx 01CA  
                                       _MB306xx 01D0                                         _MB307xx 01C4  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 39E6                                  CardConfigIni@i 0016  
                                CardConfigIni@j 0014                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 3E1A  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 3E10  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 0100  
                                     ?_checkCRC 0001                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 2E2E  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                             ??_ClearModbusRespon 0005  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                   PrintMB400@i 0055                            DATAEE_WriteByte@bAdd 0005  
                                   _ValidateCmd 19E6                                         _Command 0163  
                             generateCRC@HiOrLo 0007                                      ??_ModbusRx 0056  
                                       _ByteNum 00B4                             __size_of_ModbusFC10 01BE  
                           __size_of_ModbusFC03 03D8                                 ??_CardConfigIni 0012  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                      ??_TogDebug 0055  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 1EB6                                         ___aomod 21C4  
                             generateCRC@crcLow 000C                                 __size_of___wmul 0026  
                                       ___lodiv 26C4                                         ___lomod 2B18  
                                     ?_vfprintf 0077                       __end_of_ClearModbusRespon 3A28  
                           _EUSART1_is_rx_ready 3D4E                          InitialiseString@F10710 0130  
                        InitialiseString@F10712 0284                          InitialiseString@F10714 013D  
                    __end_of_EUSART1_is_tx_done 3DC0                                         __pcinit 296C  
               __end_of_EUSART2_SetErrorHandler 3DF2                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 3D66                                         __ptext0 25A8  
                                       __ptext1 19E6                                         __ptext2 3B24  
                                       __ptext3 1658                                         __ptext4 2484  
                                       __ptext5 3C84                                         __ptext6 35C2  
                                       __ptext7 27B4                                         __ptext8 3D06  
                                       __ptext9 367E                                 __size_of_printf 0028  
                               __size_of_strcat 0026                                 __size_of_strcmp 00BE  
                               __size_of_strcpy 005E                                 __size_of_strlen 0050  
                             ReadRX232@NumChars 0089                                      ??_checkCRC 0089  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 3E36  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 3E2E  
                         _OSCILLATOR_Initialize 3D36                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 3AE8                                         _isdigit 3BCC  
                                       _memmove 27B4                              _EUSART1_Initialize 317A  
                                       _islower 3B5C                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 3792                                     _PrintModbus 3284  
                                       _isupper 3B94                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0068  
                                       _toupper 3620                            end_of_initialization 2A3C  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                _PrintModRespon 2FAC                          InitialiseString@RevNum 00A8  
                    __end_of_EUSART2_is_tx_done 3DAC                            ?_EUSART1_is_tx_ready 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 01E0  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 3E06  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 3DFC  
                                  SaveCardDat@i 009B                              _EUSART2_Initialize 3200  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 005C                           __size_of_EUSART2_Read 005C  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                                       strcmp@l 0005                                         strcmp@r 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strcpy@d 0011                                         strlen@a 0007  
                           _EUSART2_is_rx_ready 3D06                                         strcpy@s 000F  
                                       strlen@s 0005                               ValidateCmd@F10742 0297  
                             ValidateCmd@F10736 0187                               ValidateCmd@F10739 0173  
                           _EUSART2_is_tx_ready 3D7E                        ValidateCmd@ConfName_1470 04B8  
                      ValidateCmd@ConfName_1474 04CC                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                                 _ClearEEAddRange 36DA  
                        __end_of_PrintModRespon 3056                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                        __end_of_DATAEE_WriteByte 39A2  
                          ??_EUSART2_Initialize 0007                            ?_EUSART2_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                          ?_EUSART2_is_tx_ready 0001                                    _EUSART1_Read 3736  
                                  _EUSART2_Read 367E            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 3E3C                                  __end_of_TXMode 3E42  
                        UART1_Write_string@data 0006                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 3C30                    __end_of_INTERRUPT_Initialize 3E58  
                    __size_of_ClearModbusRespon 0042                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 0068                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 0060                                  __end_of___wmul 3CD0  
                        ?_OSCILLATOR_Initialize 0001                                    ??_ModbusFC10 008B  
                                  ??_ModbusFC03 0089                                  __end_of_printf 3C84  
                                __end_of_strcat 3CAA                                  __end_of_strcmp 2FAC  
                                __end_of_strcpy 3620                                       _ReadRX232 2484  
                                __end_of_strlen 3834                             start_initialization 296C  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 3AE8  
                                   __end_of_pad 2D6E                        __end_of_InitialiseString 1266  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                               ?_PrintModRespon 0001                                     putch@txData 0006  
                         ??_EUSART2_is_rx_ready 0005                           __end_of_EUSART1_Write 3502  
                   __size_of_UART1_Write_string 006E                           __end_of_EUSART2_Write 3562  
                         ??_EUSART2_is_tx_ready 0005                          fp__EUSART1_Receive_ISR 0000  
                                  ?_ModbusError 008B                __size_of_EUSART2_SetErrorHandler 000A  
                           DATAEE_ReadByte@bAdd 0005                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 3DDE  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 3DD4  
                            __end_of_ModbusFC10 19E6                              __end_of_ModbusFC03 0A8C  
                                  ?_SaveCardDat 008D                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                _SaveCardDat$2458 0097  
                             __size_of_ModbusRx 0186                                     vfprintf@fmt 0079  
                           __end_of_generateCRC 296C                                    ??_PrintMB400 0055  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                             __size_of_TogDebug 0038                           _EUSART1_RxDataHandler 3C30  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK1 0173  
                                   __pdataBANK2 0297                                     __pdataBANK3 0384  
                                   __pdataBANK4 0464                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00B9                         __end_of_ClearEEAddRange 3736  
                                _eusart2RxCount 00BD                                      ?_ReadRX232 0089  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 01EA  
                 __size_of_EUSART1_Transmit_ISR 0048                                   __pcstackBANK0 0060  
                                 __pcstackBANK4 04A4                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 015C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 2A46                             EUSART2_Write@txData 0005  
                            __end_of_PrintMB400 343E                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                                  ?_ValidateCmd 0001                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$2056 0014  
                                     _atoi$2057 0018                                       _atoi$2058 0016  
                                     __pnvBANK1 01DE                             ??_AddRxBuffToModBus 0055  
                        _PIN_MANAGER_Initialize 30EC                                       _dtoa$1552 0034  
                                     __pintcode 0008                                   __pmediumconst F874  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 01F0  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0096  
                                     checkCRC@j 0092                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 3E4E  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3E48  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01DE  
                               SaveCardDat@Conf 009D                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008D                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 2B18                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 3E1A                              _EUSART1_is_tx_done 3DAC  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 3E54  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 2890  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 01D8  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u411_40 3C52  
                                      i2u411_41 3C4E                                        i2u404_40 3C26  
                                      i2u404_41 3C22                                        i2u510_40 0072  
                                      _MBResCnt 00B2                                        i2u510_41 006E  
                                      i2u511_40 0080                                        i2u511_41 007C  
                                      i2u513_40 00AC                                        i2u512_48 0086  
                                      i2u513_41 00A8                                        i2u512_49 009A  
                                      i2u514_40 00BA                                        i2u506_40 0028  
                                      i2u514_41 00B6                                        i2u506_41 0024  
                                      i2u507_40 0038                                        i2u507_41 0034  
                                      i2u516_40 00E6                                        i2u515_48 00C0  
                                      i2u508_40 0046                                        i2u516_41 00E2  
                                      i2u515_49 00D4                                        i2u508_41 0042  
                                      i2u517_40 00F4                                        i2u517_41 00F0  
                                      _PIR3bits 000ECD                                        i2u470_40 3928  
                                      i2u462_40 3892                                        i2u509_48 004C  
                                      i2u470_41 3924                                        i2u462_41 388E  
                                      i2u509_49 0060                           __end_of_CardConfigIni 1658  
                                      i2u471_40 394C                                        i2u463_40 38BA  
                                      i2u518_48 00FA                                        i2u471_41 3948  
                                      i2u463_41 38B6                                        i2u518_49 010E  
                                      i2u472_40 2E4C                                        i2u464_40 2D8E  
                                      i2u472_41 2E48                                        i2u464_41 2D8A  
                                      i2u474_40 2E84                                        i2u473_48 2E62  
                                      i2u466_40 2DC6                                        i2u465_48 2DA4  
                                      i2u474_41 2E80                                        i2u473_49 2E76  
                                      i2u466_41 2DC2                                        i2u465_49 2DB6  
                                      i2u476_40 2ECA                                        i2u475_48 2E9A  
                                      i2u468_40 2E0A                                        i2u467_48 2DDC  
                                      i2u476_41 2EC6                                        i2u475_49 2EAE  
                                      i2u468_41 2E06                                        i2u467_49 2DEE  
                                      _PIR7bits 000ED1                                        i2u477_48 2ED0  
                                      i2u469_48 2E10                                        i2u477_49 2EE4  
                                      i2u469_49 2E24                                        _MBRespon 02AB  
                        ?_EUSART1_RxDataHandler 0001                              _EUSART2_is_tx_done 3D96  
                                     _vfpfcnvrt 012A                                       _xtoa$1581 0035  
                                     _xtoa$1582 0037                               ___wmul@multiplier 0005  
                          ??_EUSART1_is_tx_done 0005                                ?_ClearEEAddRange 0089  
                           ?_EUSART2_is_tx_done 0001                                     ??_ReadRX232 0055  
                         SaveCardDat@dataeeAddr 0091                                     checkCRC@crc 0094  
                 __size_of_EUSART2_Transmit_ISR 004C                           DATAEE_WriteByte@bData 0007  
                                  _isspace$2083 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 006A                                       copy_data0 2980  
                                     copy_data1 29A0                                       copy_data2 29C0  
                                     copy_data3 29E0                              ModbusFC10@TempData 008F  
                         ?_INTERRUPT_Initialize 0001                       CardConfigIni@readDataEven 0019  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 3DE8  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01E6  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 203E                              generateCRC@MessCnt 0005  
         __end_of_EUSART1_SetTxInterruptHandler 3DFC          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 3DF2                                        __Hrparam 0000  
                                      _TogDebug 3B24           __end_of_EUSART2_SetRxInterruptHandler 3DD4  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 3DCA  
                          __size_of_ModbusError 00C4                                      vfprintf@ap 007B  
                                      __Lrparam 0000                                      vfprintf@fp 0077  
                            __CFG_BOREN$SBORDIS 000000                            __size_of_SaveCardDat 01D0  
                       ??_OSCILLATOR_Initialize 0005                                       memmove@d1 0009  
                                     memmove@s1 000B                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 0086                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                               ReadRX232@F10718 01D4                       ??_EUSART1_SetErrorHandler 0007  
                             CardConfigIni@Name 000A                                        _checkCRC 2328  
           __end_of_EUSART1_DefaultErrorHandler 3E54                     _EUSART1_DefaultErrorHandler 3E4E  
                              ??_PrintModRespon 0055                     __end_of_EUSART1_is_rx_ready 3D66  
                                    strcat@dest 0013                            _EUSART2_ErrorHandler 01E4  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 3D7E                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 3834  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 36DA                                        __ptext11 395E  
                                      __ptext20 3E54                                        __ptext12 1042  
                                      __ptext21 3200                                        __ptext13 1468  
                                      __ptext30 3E06                                        __ptext22 3DC0  
                                      __ptext14 2EEE                                        __ptext31 3E10  
                                      __ptext23 3DCA                                        __ptext15 3D1E  
                                      __ptext40 2A46                                        __ptext32 3E1A  
                                      __ptext24 3DD4                                        __ptext16 3CEC  
                                      __ptext41 1828                                        __ptext33 3284  
                                      __ptext25 3DDE                                        __ptext17 3CD0  
                                      __ptext50 34A2                                        __ptext42 33D6  
                                      __ptext34 203E                                        __ptext26 3DE8  
                                      __ptext18 30EC                                        __ptext51 2FAC  
                                      __ptext43 06B4                                        __ptext35 2328  
                                      __ptext27 317A                                        __ptext19 3D36  
                                      __ptext60 1266                                        __ptext52 3C5C  
                                      __ptext44 2BE8                                        __ptext36 3E36  
                                      __ptext28 3DF2                                        __ptext61 2B18  
                                      __ptext53 343E                                        __ptext45 2890  
                                      __ptext37 3D4E                                        __ptext29 3DFC  
                                      __ptext70 3502                                        __ptext62 26C4  
                                      __ptext54 012A                                        __ptext46 32FC  
                                      __ptext38 3736                                        __ptext71 3AA8  
                                      __ptext63 1B82                                        __ptext55 0D6C  
                                      __ptext47 3E3C                                        __ptext39 38CC  
                                      __ptext80 39E6                                        __ptext72 21C4  
                                      __ptext64 0A8C                                        __ptext56 3620  
                                      __ptext48 3D66                                        __ptext81 3834  
                                      __ptext73 1EB6                                        __ptext65 2CAC  
                                      __ptext57 3B5C                                        __ptext49 3DAC  
                                      __ptext90 2E2E                                        __ptext74 1D1C  
                                      __ptext66 37E4                                        __ptext58 3B94  
                                      __ptext91 3E48                                        __ptext83 3880  
                                      __ptext75 3792                                        __ptext67 39A2  
                                      __ptext59 3AE8                                        __ptext92 3E5A  
                                      __ptext84 2D6E                                        __ptext76 3BCC  
                                      __ptext68 3056                                        __ptext93 3E4E  
                                      __ptext85 3E2E                                        __ptext77 3CAA  
                                      __ptext69 3E24                                        __ptext94 3C30  
                                      __ptext86 3E58                                        __ptext78 3D7E  
                                      __ptext95 0000                                        __ptext87 3E42  
                                      __ptext79 3D96                                        __ptext88 3C04  
                                      __ptext89 3916                                __size_of_isupper 0038  
                             ?_InitialiseString 0001                     DATAEE_WriteByte@GIEBitValue 0008  
                                    strcpy@dest 0009                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 0084                         ClearEEAddRange@NumBytes 008B  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 011C                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 3E5A     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 3E58                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                               ??_DATAEE_ReadByte 0007  
                          __size_of_ValidateCmd 019C                            __CFG_WDTCWS$WDTCWS_7 000000  
                       ClearEEAddRange@StartAdd 0089                                    PrintModbus@i 0089  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 01BD                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 0089                                        _rxStatus 013F  
                                      int$flags 005B                      CardConfigIni@dataeeAddrWrk 000E  
                                      _vfprintf 343E              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 3C04  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01E2  
                           _EUSART1_Receive_ISR 2E2E                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                       InitialiseString@PartNum 0089                                  _vfpfcnvrt$1596 006D  
                       InitialiseString@Partial 00A7                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 3D1E                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 3D96                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 336A                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 3E10         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 3E06                                       strcpy@src 000B  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 395E  
                                      printf@ap 0087  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 0060  
                            _eusart1RxLastError 0141                          __size_of_EUSART2_Write 0060  
                           _EUSART2_Receive_ISR 2D6E                         __end_of_ClearModbusData 3880  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 317A  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 0142                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 01EE                             __end_of_ClearRxBuff 3916  
