

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 14 11:59:50 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123  0000                     
   124                           ; Version 2.10
   125                           ; Generated 31/07/2019 GMT
   126                           ; 
   127                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F46K40 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	idataBANK0
   160  00397A                     __pidataBANK0:
   161                           	opt callstack 0
   162                           
   163                           ;initializer for _ByteLo
   164  00397A  00FF               	dw	255
   165                           
   166                           	psect	idataBANK1
   167  002CEC                     __pidataBANK1:
   168                           	opt callstack 0
   169                           
   170                           ;initializer for _MB301xx
   171  002CEC  4150               	dw	16720
   172  002CEE  3030               	dw	12336
   173  002CF0  3036               	dw	12342
   174  002CF2  3033               	dw	12339
   175  002CF4  3033               	dw	12339
   176  002CF6  2D30               	dw	11568
   177  002CF8  3200               	dw	12800
   178                           
   179                           ;initializer for _MB304xx
   180  002CFA  4155               	dw	16725
   181  002CFC  4720               	dw	18208
   182  002CFE  3039               	dw	12345
   183  002D00  3230               	dw	12848
   184  002D02  3231               	dw	12849
   185                           
   186                           ;initializer for _MB303xx
   187  002D04  3231               	dw	12849
   188  002D06  3039               	dw	12345
   189  002D08  3030               	dw	12336
   190  002D0A  3100               	dw	12544
   191                           
   192                           ;initializer for stoa@F1139
   193  002D0C  28                 	db	40
   194  002D0D  6E                 	db	110
   195  002D0E  75                 	db	117
   196  002D0F  6C                 	db	108
   197  002D10  6C                 	db	108
   198  002D11  29                 	db	41
   199  002D12  00                 	db	0
   200                           
   201                           ;initializer for _MB307xx
   202  002D13  045A               	dw	1114
   203  002D15  00F1               	dw	241
   204  002D17  01C4               	dw	452
   205                           
   206                           ;initializer for _MB305xx
   207  002D19  3137               	dw	12599
   208  002D1B  3335               	dw	13109
   209  002D1D  3439               	dw	13369
   210                           
   211                           ;initializer for _MB306xx
   212  002D1F  004D               	dw	77
   213  002D21  3030               	dw	12336
   214                           
   215                           ;initializer for ReadRX232@F10695
   216  002D23  5A                 	db	90
   217  002D24  00                 	db	0
   218                           
   219                           ;initializer for _MB302xx
   220  002D25  0004               	dw	4
   221                           
   222                           ;initializer for _MBResCRC
   223  002D27  FFFF               	dw	65535
   224                           
   225                           ;initializer for _ExpectedBytes
   226  002D29  0008               	dw	8
   227                           
   228                           ;initializer for _MBRespon
   229  002D2B  FFFF               	dw	65535
   230  002D2D  00                 	db	0
   231  002D2E  00                 	db	0
   232  002D2F  00                 	db	0
   233  002D30  00                 	db	0
   234  002D31  00                 	db	0
   235  002D32  00                 	db	0
   236  002D33  00                 	db	0
   237  002D34  00                 	db	0
   238  002D35  00                 	db	0
   239  002D36  00                 	db	0
   240  002D37  00                 	db	0
   241  002D38  00                 	db	0
   242  002D39  00                 	db	0
   243  002D3A  00                 	db	0
   244  002D3B  00                 	db	0
   245  002D3C  00                 	db	0
   246  002D3D  00                 	db	0
   247  002D3E  00                 	db	0
   248  002D3F  00                 	db	0
   249  002D40  00                 	db	0
   250  002D41  00                 	db	0
   251  002D42  00                 	db	0
   252  002D43  00                 	db	0
   253  002D44  00                 	db	0
   254  002D45  00                 	db	0
   255  002D46  00                 	db	0
   256  002D47  00                 	db	0
   257  002D48  00                 	db	0
   258  002D49  00                 	db	0
   259  002D4A  00                 	db	0
   260  002D4B  00                 	db	0
   261  002D4C  00                 	db	0
   262  002D4D  00                 	db	0
   263  002D4E  00                 	db	0
   264  002D4F  00                 	db	0
   265  002D50  00                 	db	0
   266  002D51  00                 	db	0
   267  002D52  00                 	db	0
   268  002D53  00                 	db	0
   269  002D54  00                 	db	0
   270  002D55  00                 	db	0
   271  002D56  00                 	db	0
   272  002D57  00                 	db	0
   273  002D58  00                 	db	0
   274  002D59  00                 	db	0
   275  002D5A  00                 	db	0
   276  002D5B  00                 	db	0
   277  002D5C  00                 	db	0
   278  002D5D  00                 	db	0
   279  002D5E  00                 	db	0
   280  002D5F  00                 	db	0
   281  002D60  00                 	db	0
   282  002D61  00                 	db	0
   283  002D62  00                 	db	0
   284  002D63  00                 	db	0
   285  002D64  00                 	db	0
   286  002D65  00                 	db	0
   287  002D66  00                 	db	0
   288  002D67  00                 	db	0
   289  002D68  00                 	db	0
   290  002D69  00                 	db	0
   291  002D6A  00                 	db	0
   292                           
   293                           	psect	idataBANK2
   294  002D6B                     __pidataBANK2:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for _MB300xx
   298  002D6B  0001               	dw	1
   299  002D6D  0002               	dw	2
   300  002D6F  0003               	dw	3
   301  002D71  0004               	dw	4
   302  002D73  0005               	dw	5
   303  002D75  0006               	dw	6
   304  002D77  0007               	dw	7
   305  002D79  0008               	dw	8
   306  002D7B  0009               	dw	9
   307  002D7D  000A               	dw	10
   308  002D7F  000B               	dw	11
   309  002D81  000C               	dw	12
   310  002D83  000D               	dw	13
   311  002D85  000E               	dw	14
   312  002D87  000F               	dw	15
   313  002D89  0010               	dw	16
   314  002D8B  0011               	dw	17
   315  002D8D  0012               	dw	18
   316  002D8F  0013               	dw	19
   317  002D91  0014               	dw	20
   318  002D93  0015               	dw	21
   319  002D95  0016               	dw	22
   320  002D97  0017               	dw	23
   321  002D99  0018               	dw	24
   322  002D9B  0019               	dw	25
   323  002D9D  001A               	dw	26
   324  002D9F  001B               	dw	27
   325  002DA1  001C               	dw	28
   326  002DA3  001D               	dw	29
   327  002DA5  001E               	dw	30
   328  002DA7  001F               	dw	31
   329  002DA9  0020               	dw	32
   330                           
   331                           ;initializer for ValidateCmd@F10725
   332  002DAB  52                 	db	82
   333  002DAC  65                 	db	101
   334  002DAD  76                 	db	118
   335  002DAE  69                 	db	105
   336  002DAF  73                 	db	115
   337  002DB0  69                 	db	105
   338  002DB1  6F                 	db	111
   339  002DB2  6E                 	db	110
   340  002DB3  00                 	db	0
   341  002DB4  00                 	db	0
   342  002DB5  00                 	db	0
   343  002DB6  00                 	db	0
   344  002DB7  00                 	db	0
   345  002DB8  00                 	db	0
   346  002DB9  00                 	db	0
   347  002DBA  00                 	db	0
   348  002DBB  00                 	db	0
   349  002DBC  00                 	db	0
   350  002DBD  00                 	db	0
   351  002DBE  00                 	db	0
   352                           
   353                           ;initializer for ValidateCmd@F10722
   354  002DBF  50                 	db	80
   355  002DC0  61                 	db	97
   356  002DC1  72                 	db	114
   357  002DC2  74                 	db	116
   358  002DC3  20                 	db	32
   359  002DC4  4E                 	db	78
   360  002DC5  75                 	db	117
   361  002DC6  6D                 	db	109
   362  002DC7  62                 	db	98
   363  002DC8  65                 	db	101
   364  002DC9  72                 	db	114
   365  002DCA  00                 	db	0
   366  002DCB  00                 	db	0
   367  002DCC  00                 	db	0
   368  002DCD  00                 	db	0
   369  002DCE  00                 	db	0
   370  002DCF  00                 	db	0
   371  002DD0  00                 	db	0
   372  002DD1  00                 	db	0
   373  002DD2  00                 	db	0
   374                           
   375                           ;initializer for ValidateCmd@F10719
   376  002DD3  53                 	db	83
   377  002DD4  65                 	db	101
   378  002DD5  72                 	db	114
   379  002DD6  69                 	db	105
   380  002DD7  61                 	db	97
   381  002DD8  6C                 	db	108
   382  002DD9  20                 	db	32
   383  002DDA  4E                 	db	78
   384  002DDB  75                 	db	117
   385  002DDC  6D                 	db	109
   386  002DDD  62                 	db	98
   387  002DDE  65                 	db	101
   388  002DDF  72                 	db	114
   389  002DE0  00                 	db	0
   390  002DE1  00                 	db	0
   391  002DE2  00                 	db	0
   392  002DE3  00                 	db	0
   393  002DE4  00                 	db	0
   394  002DE5  00                 	db	0
   395  002DE6  00                 	db	0
   396                           
   397                           	psect	idataBANK3
   398  0035B8                     __pidataBANK3:
   399                           	opt callstack 0
   400                           
   401                           ;initializer for _MB400xx
   402  0035B8  0020               	dw	32
   403  0035BA  001F               	dw	31
   404  0035BC  001E               	dw	30
   405  0035BE  001D               	dw	29
   406  0035C0  001C               	dw	28
   407  0035C2  001B               	dw	27
   408  0035C4  001A               	dw	26
   409  0035C6  0019               	dw	25
   410  0035C8  0018               	dw	24
   411  0035CA  0017               	dw	23
   412  0035CC  0016               	dw	22
   413  0035CE  0015               	dw	21
   414  0035D0  0014               	dw	20
   415  0035D2  0013               	dw	19
   416  0035D4  0012               	dw	18
   417  0035D6  0011               	dw	17
   418  0035D8  0010               	dw	16
   419  0035DA  000F               	dw	15
   420  0035DC  000E               	dw	14
   421  0035DE  000D               	dw	13
   422  0035E0  000C               	dw	12
   423  0035E2  000B               	dw	11
   424  0035E4  000A               	dw	10
   425  0035E6  0009               	dw	9
   426  0035E8  0008               	dw	8
   427  0035EA  0007               	dw	7
   428  0035EC  0006               	dw	6
   429  0035EE  0005               	dw	5
   430  0035F0  0004               	dw	4
   431  0035F2  0003               	dw	3
   432  0035F4  0002               	dw	2
   433  0035F6  0001               	dw	1
   434                           
   435                           	psect	nvBANK0
   436  0000BE                     __pnvBANK0:
   437                           	opt callstack 0
   438  0000BE                     _eusart1TxBufferRemaining:
   439                           	opt callstack 0
   440  0000BE                     	ds	1
   441                           
   442                           	psect	nvBANK1
   443  0001D9                     __pnvBANK1:
   444                           	opt callstack 0
   445  0001D9                     _EUSART1_ErrorHandler:
   446                           	opt callstack 0
   447  0001D9                     	ds	2
   448  0001DB                     _EUSART1_OverrunErrorHandler:
   449                           	opt callstack 0
   450  0001DB                     	ds	2
   451  0001DD                     _EUSART1_FramingErrorHandler:
   452                           	opt callstack 0
   453  0001DD                     	ds	2
   454  0001DF                     _EUSART2_ErrorHandler:
   455                           	opt callstack 0
   456  0001DF                     	ds	2
   457  0001E1                     _EUSART2_OverrunErrorHandler:
   458                           	opt callstack 0
   459  0001E1                     	ds	2
   460  0001E3                     _EUSART2_FramingErrorHandler:
   461                           	opt callstack 0
   462  0001E3                     	ds	2
   463  0001E5                     _EUSART1_RxDefaultInterruptHandler:
   464                           	opt callstack 0
   465  0001E5                     	ds	2
   466  0001E7                     _EUSART1_TxDefaultInterruptHandler:
   467                           	opt callstack 0
   468  0001E7                     	ds	2
   469  0001E9                     _EUSART2_RxDefaultInterruptHandler:
   470                           	opt callstack 0
   471  0001E9                     	ds	2
   472  0001EB                     _EUSART2_TxDefaultInterruptHandler:
   473                           	opt callstack 0
   474  0001EB                     	ds	2
   475  0001ED                     _eusart2TxBufferRemaining:
   476                           	opt callstack 0
   477  0001ED                     	ds	1
   478  0000                     _RC2REG	set	3737
   479  0000                     _RC2STAbits	set	3741
   480  0000                     _TX2REG	set	3738
   481  0000                     _TX2STAbits	set	3742
   482  0000                     _SP2BRGH	set	3740
   483  0000                     _SP2BRGL	set	3739
   484  0000                     _TX2STA	set	3742
   485  0000                     _RC2STA	set	3741
   486  0000                     _BAUD2CON	set	3743
   487  0000                     _PIR7bits	set	3793
   488  0000                     _PIR3bits	set	3789
   489  0000                     _PIE3bits	set	3781
   490  0000                     _PMD5	set	3814
   491  0000                     _PMD4	set	3813
   492  0000                     _PMD3	set	3812
   493  0000                     _PMD2	set	3811
   494  0000                     _PMD1	set	3810
   495  0000                     _PMD0	set	3809
   496  0000                     _OSCTUNE	set	3805
   497  0000                     _OSCFRQ	set	3806
   498  0000                     _OSCEN	set	3804
   499  0000                     _OSCCON3	set	3802
   500  0000                     _OSCCON1	set	3800
   501  0000                     _RX2PPS	set	3725
   502  0000                     _RC6PPS	set	3837
   503  0000                     _RB6PPS	set	3829
   504  0000                     _RX1PPS	set	3765
   505  0000                     _INLVLE	set	3882
   506  0000                     _INLVLD	set	3874
   507  0000                     _INLVLC	set	3869
   508  0000                     _INLVLB	set	3861
   509  0000                     _INLVLA	set	3853
   510  0000                     _SLRCONE	set	3883
   511  0000                     _SLRCOND	set	3875
   512  0000                     _SLRCONC	set	3870
   513  0000                     _SLRCONB	set	3862
   514  0000                     _SLRCONA	set	3854
   515  0000                     _ODCOND	set	3876
   516  0000                     _ODCONC	set	3871
   517  0000                     _ODCONB	set	3863
   518  0000                     _ODCONA	set	3855
   519  0000                     _ODCONE	set	3884
   520  0000                     _WPUC	set	3872
   521  0000                     _WPUA	set	3856
   522  0000                     _WPUB	set	3864
   523  0000                     _WPUE	set	3885
   524  0000                     _WPUD	set	3877
   525  0000                     _ANSELA	set	3857
   526  0000                     _ANSELE	set	3886
   527  0000                     _ANSELB	set	3865
   528  0000                     _ANSELC	set	3873
   529  0000                     _ANSELD	set	3878
   530  0000                     _LATDbits	set	3974
   531  0000                     _LATAbits	set	3971
   532  0000                     _RC1REG	set	3993
   533  0000                     _RC1STAbits	set	3997
   534  0000                     _TX1REG	set	3994
   535  0000                     _TX1STAbits	set	3998
   536  0000                     _SP1BRGH	set	3996
   537  0000                     _SP1BRGL	set	3995
   538  0000                     _TX1STA	set	3998
   539  0000                     _RC1STA	set	3997
   540  0000                     _BAUD1CON	set	3999
   541  0000                     _NVMDAT	set	3968
   542  0000                     _NVMADRL	set	3966
   543  0000                     _NVMADRH	set	3967
   544  0000                     _NVMCON2	set	3970
   545  0000                     _TABLAT	set	4085
   546  0000                     _TBLPTRL	set	4086
   547  0000                     _TBLPTRH	set	4087
   548  0000                     _TBLPTRU	set	4088
   549  0000                     _NVMCON1bits	set	3969
   550  0000                     _INTCONbits	set	4082
   551  0000                     _TRISD	set	3979
   552  0000                     _TRISC	set	3978
   553  0000                     _TRISB	set	3977
   554  0000                     _TRISA	set	3976
   555  0000                     _TRISE	set	3980
   556  0000                     _LATC	set	3973
   557  0000                     _LATB	set	3972
   558  0000                     _LATA	set	3971
   559  0000                     _LATD	set	3974
   560  0000                     _LATE	set	3975
   561                           
   562                           	psect	mediumconst
   563  00FB3E                     __pmediumconst:
   564                           	opt callstack 0
   565  00FB3E  00                 	db	0
   566  00FB3F                     STR_34:
   567                           
   568                           ; BSR set to: 0
   569  00FB3F  4E                 	db	78	;'N'
   570  00FB40  61                 	db	97	;'a'
   571  00FB41  6D                 	db	109	;'m'
   572  00FB42  65                 	db	101	;'e'
   573  00FB43  3A                 	db	58	;':'
   574  00FB44  20                 	db	32
   575  00FB45  25                 	db	37
   576  00FB46  73                 	db	115	;'s'
   577  00FB47  20                 	db	32
   578  00FB48  20                 	db	32
   579  00FB49  4D                 	db	77	;'M'
   580  00FB4A  42                 	db	66	;'B'
   581  00FB4B  41                 	db	65	;'A'
   582  00FB4C  64                 	db	100	;'d'
   583  00FB4D  64                 	db	100	;'d'
   584  00FB4E  72                 	db	114	;'r'
   585  00FB4F  65                 	db	101	;'e'
   586  00FB50  73                 	db	115	;'s'
   587  00FB51  73                 	db	115	;'s'
   588  00FB52  3A                 	db	58	;':'
   589  00FB53  20                 	db	32
   590  00FB54  30                 	db	48	;'0'
   591  00FB55  78                 	db	120	;'x'
   592  00FB56  25                 	db	37
   593  00FB57  30                 	db	48	;'0'
   594  00FB58  34                 	db	52	;'4'
   595  00FB59  78                 	db	120	;'x'
   596  00FB5A  20                 	db	32
   597  00FB5B  20                 	db	32
   598  00FB5C  20                 	db	32
   599  00FB5D  64                 	db	100	;'d'
   600  00FB5E  61                 	db	97	;'a'
   601  00FB5F  74                 	db	116	;'t'
   602  00FB60  61                 	db	97	;'a'
   603  00FB61  65                 	db	101	;'e'
   604  00FB62  65                 	db	101	;'e'
   605  00FB63  41                 	db	65	;'A'
   606  00FB64  64                 	db	100	;'d'
   607  00FB65  64                 	db	100	;'d'
   608  00FB66  72                 	db	114	;'r'
   609  00FB67  3A                 	db	58	;':'
   610  00FB68  20                 	db	32
   611  00FB69  30                 	db	48	;'0'
   612  00FB6A  78                 	db	120	;'x'
   613  00FB6B  25                 	db	37
   614  00FB6C  30                 	db	48	;'0'
   615  00FB6D  34                 	db	52	;'4'
   616  00FB6E  78                 	db	120	;'x'
   617  00FB6F  20                 	db	32
   618  00FB70  20                 	db	32
   619  00FB71  20                 	db	32
   620  00FB72  4E                 	db	78	;'N'
   621  00FB73  75                 	db	117	;'u'
   622  00FB74  6D                 	db	109	;'m'
   623  00FB75  42                 	db	66	;'B'
   624  00FB76  79                 	db	121	;'y'
   625  00FB77  74                 	db	116	;'t'
   626  00FB78  65                 	db	101	;'e'
   627  00FB79  73                 	db	115	;'s'
   628  00FB7A  3A                 	db	58	;':'
   629  00FB7B  20                 	db	32
   630  00FB7C  25                 	db	37
   631  00FB7D  69                 	db	105	;'i'
   632  00FB7E  20                 	db	32
   633  00FB7F  0D                 	db	13
   634  00FB80  0A                 	db	10
   635  00FB81  00                 	db	0
   636  00FB82                     STR_19:
   637                           
   638                           ; BSR set to: 0
   639  00FB82  0D                 	db	13
   640  00FB83  44                 	db	68	;'D'
   641  00FB84  61                 	db	97	;'a'
   642  00FB85  6E                 	db	110	;'n'
   643  00FB86  20                 	db	32
   644  00FB87  61                 	db	97	;'a'
   645  00FB88  6E                 	db	110	;'n'
   646  00FB89  64                 	db	100	;'d'
   647  00FB8A  20                 	db	32
   648  00FB8B  53                 	db	83	;'S'
   649  00FB8C  61                 	db	97	;'a'
   650  00FB8D  6D                 	db	109	;'m'
   651  00FB8E  27                 	db	39
   652  00FB8F  73                 	db	115	;'s'
   653  00FB90  20                 	db	32
   654  00FB91  4D                 	db	77	;'M'
   655  00FB92  6F                 	db	111	;'o'
   656  00FB93  64                 	db	100	;'d'
   657  00FB94  62                 	db	98	;'b'
   658  00FB95  75                 	db	117	;'u'
   659  00FB96  73                 	db	115	;'s'
   660  00FB97  20                 	db	32
   661  00FB98  47                 	db	71	;'G'
   662  00FB99  50                 	db	80	;'P'
   663  00FB9A  49                 	db	73	;'I'
   664  00FB9B  4F                 	db	79	;'O'
   665  00FB9C  20                 	db	32
   666  00FB9D  45                 	db	69	;'E'
   667  00FB9E  78                 	db	120	;'x'
   668  00FB9F  70                 	db	112	;'p'
   669  00FBA0  61                 	db	97	;'a'
   670  00FBA1  6E                 	db	110	;'n'
   671  00FBA2  73                 	db	115	;'s'
   672  00FBA3  69                 	db	105	;'i'
   673  00FBA4  6F                 	db	111	;'o'
   674  00FBA5  6E                 	db	110	;'n'
   675  00FBA6  20                 	db	32
   676  00FBA7  2D                 	db	45
   677  00FBA8  20                 	db	32
   678  00FBA9  41                 	db	65	;'A'
   679  00FBAA  50                 	db	80	;'P'
   680  00FBAB  30                 	db	48	;'0'
   681  00FBAC  30                 	db	48	;'0'
   682  00FBAD  30                 	db	48	;'0'
   683  00FBAE  37                 	db	55	;'7'
   684  00FBAF  30                 	db	48	;'0'
   685  00FBB0  31                 	db	49	;'1'
   686  00FBB1  32                 	db	50	;'2'
   687  00FBB2  35                 	db	53	;'5'
   688  00FBB3  2D                 	db	45
   689  00FBB4  30                 	db	48	;'0'
   690  00FBB5  31                 	db	49	;'1'
   691  00FBB6  20                 	db	32
   692  00FBB7  52                 	db	82	;'R'
   693  00FBB8  65                 	db	101	;'e'
   694  00FBB9  76                 	db	118	;'v'
   695  00FBBA  20                 	db	32
   696  00FBBB  2D                 	db	45
   697  00FBBC  0D                 	db	13
   698  00FBBD  0A                 	db	10
   699  00FBBE  00                 	db	0
   700  00FBBF                     STR_27:
   701                           
   702                           ; BSR set to: 0
   703  00FBBF  0D                 	db	13
   704  00FBC0  20                 	db	32
   705  00FBC1  20                 	db	32
   706  00FBC2  20                 	db	32
   707  00FBC3  30                 	db	48	;'0'
   708  00FBC4  78                 	db	120	;'x'
   709  00FBC5  31                 	db	49	;'1'
   710  00FBC6  30                 	db	48	;'0'
   711  00FBC7  20                 	db	32
   712  00FBC8  2D                 	db	45
   713  00FBC9  20                 	db	32
   714  00FBCA  57                 	db	87	;'W'
   715  00FBCB  72                 	db	114	;'r'
   716  00FBCC  69                 	db	105	;'i'
   717  00FBCD  74                 	db	116	;'t'
   718  00FBCE  65                 	db	101	;'e'
   719  00FBCF  20                 	db	32
   720  00FBD0  4D                 	db	77	;'M'
   721  00FBD1  75                 	db	117	;'u'
   722  00FBD2  6C                 	db	108	;'l'
   723  00FBD3  74                 	db	116	;'t'
   724  00FBD4  69                 	db	105	;'i'
   725  00FBD5  70                 	db	112	;'p'
   726  00FBD6  6C                 	db	108	;'l'
   727  00FBD7  65                 	db	101	;'e'
   728  00FBD8  20                 	db	32
   729  00FBD9  52                 	db	82	;'R'
   730  00FBDA  65                 	db	101	;'e'
   731  00FBDB  67                 	db	103	;'g'
   732  00FBDC  69                 	db	105	;'i'
   733  00FBDD  73                 	db	115	;'s'
   734  00FBDE  74                 	db	116	;'t'
   735  00FBDF  65                 	db	101	;'e'
   736  00FBE0  72                 	db	114	;'r'
   737  00FBE1  73                 	db	115	;'s'
   738  00FBE2  20                 	db	32
   739  00FBE3  28                 	db	40
   740  00FBE4  4D                 	db	77	;'M'
   741  00FBE5  61                 	db	97	;'a'
   742  00FBE6  78                 	db	120	;'x'
   743  00FBE7  20                 	db	32
   744  00FBE8  33                 	db	51	;'3'
   745  00FBE9  32                 	db	50	;'2'
   746  00FBEA  78                 	db	120	;'x'
   747  00FBEB  20                 	db	32
   748  00FBEC  31                 	db	49	;'1'
   749  00FBED  36                 	db	54	;'6'
   750  00FBEE  62                 	db	98	;'b'
   751  00FBEF  69                 	db	105	;'i'
   752  00FBF0  74                 	db	116	;'t'
   753  00FBF1  29                 	db	41
   754  00FBF2  0D                 	db	13
   755  00FBF3  0A                 	db	10
   756  00FBF4  0A                 	db	10
   757  00FBF5  00                 	db	0
   758  00FBF6                     STR_32:
   759                           
   760                           ; BSR set to: 0
   761  00FBF6  43                 	db	67	;'C'
   762  00FBF7  6C                 	db	108	;'l'
   763  00FBF8  65                 	db	101	;'e'
   764  00FBF9  61                 	db	97	;'a'
   765  00FBFA  72                 	db	114	;'r'
   766  00FBFB  69                 	db	105	;'i'
   767  00FBFC  6E                 	db	110	;'n'
   768  00FBFD  67                 	db	103	;'g'
   769  00FBFE  20                 	db	32
   770  00FBFF  45                 	db	69	;'E'
   771  00FC00  45                 	db	69	;'E'
   772  00FC01  50                 	db	80	;'P'
   773  00FC02  52                 	db	82	;'R'
   774  00FC03  4F                 	db	79	;'O'
   775  00FC04  4D                 	db	77	;'M'
   776  00FC05  20                 	db	32
   777  00FC06  66                 	db	102	;'f'
   778  00FC07  72                 	db	114	;'r'
   779  00FC08  6F                 	db	111	;'o'
   780  00FC09  6D                 	db	109	;'m'
   781  00FC0A  20                 	db	32
   782  00FC0B  41                 	db	65	;'A'
   783  00FC0C  64                 	db	100	;'d'
   784  00FC0D  64                 	db	100	;'d'
   785  00FC0E  72                 	db	114	;'r'
   786  00FC0F  65                 	db	101	;'e'
   787  00FC10  73                 	db	115	;'s'
   788  00FC11  73                 	db	115	;'s'
   789  00FC12  3A                 	db	58	;':'
   790  00FC13  20                 	db	32
   791  00FC14  30                 	db	48	;'0'
   792  00FC15  78                 	db	120	;'x'
   793  00FC16  25                 	db	37
   794  00FC17  30                 	db	48	;'0'
   795  00FC18  34                 	db	52	;'4'
   796  00FC19  78                 	db	120	;'x'
   797  00FC1A  2C                 	db	44
   798  00FC1B  20                 	db	32
   799  00FC1C  4E                 	db	78	;'N'
   800  00FC1D  75                 	db	117	;'u'
   801  00FC1E  6D                 	db	109	;'m'
   802  00FC1F  20                 	db	32
   803  00FC20  42                 	db	66	;'B'
   804  00FC21  79                 	db	121	;'y'
   805  00FC22  74                 	db	116	;'t'
   806  00FC23  65                 	db	101	;'e'
   807  00FC24  73                 	db	115	;'s'
   808  00FC25  3A                 	db	58	;':'
   809  00FC26  20                 	db	32
   810  00FC27  25                 	db	37
   811  00FC28  69                 	db	105	;'i'
   812  00FC29  20                 	db	32
   813  00FC2A  0D                 	db	13
   814  00FC2B  0A                 	db	10
   815  00FC2C  00                 	db	0
   816  00FC2D                     STR_7:
   817                           
   818                           ; BSR set to: 0
   819  00FC2D  43                 	db	67	;'C'
   820  00FC2E  6F                 	db	111	;'o'
   821  00FC2F  6D                 	db	109	;'m'
   822  00FC30  70                 	db	112	;'p'
   823  00FC31  6C                 	db	108	;'l'
   824  00FC32  65                 	db	101	;'e'
   825  00FC33  74                 	db	116	;'t'
   826  00FC34  65                 	db	101	;'e'
   827  00FC35  64                 	db	100	;'d'
   828  00FC36  20                 	db	32
   829  00FC37  41                 	db	65	;'A'
   830  00FC38  64                 	db	100	;'d'
   831  00FC39  64                 	db	100	;'d'
   832  00FC3A  69                 	db	105	;'i'
   833  00FC3B  6E                 	db	110	;'n'
   834  00FC3C  67                 	db	103	;'g'
   835  00FC3D  20                 	db	32
   836  00FC3E  72                 	db	114	;'r'
   837  00FC3F  78                 	db	120	;'x'
   838  00FC40  44                 	db	68	;'D'
   839  00FC41  61                 	db	97	;'a'
   840  00FC42  74                 	db	116	;'t'
   841  00FC43  61                 	db	97	;'a'
   842  00FC44  20                 	db	32
   843  00FC45  42                 	db	66	;'B'
   844  00FC46  75                 	db	117	;'u'
   845  00FC47  66                 	db	102	;'f'
   846  00FC48  66                 	db	102	;'f'
   847  00FC49  65                 	db	101	;'e'
   848  00FC4A  72                 	db	114	;'r'
   849  00FC4B  20                 	db	32
   850  00FC4C  74                 	db	116	;'t'
   851  00FC4D  6F                 	db	111	;'o'
   852  00FC4E  20                 	db	32
   853  00FC4F  4D                 	db	77	;'M'
   854  00FC50  6F                 	db	111	;'o'
   855  00FC51  64                 	db	100	;'d'
   856  00FC52  62                 	db	98	;'b'
   857  00FC53  75                 	db	117	;'u'
   858  00FC54  73                 	db	115	;'s'
   859  00FC55  44                 	db	68	;'D'
   860  00FC56  61                 	db	97	;'a'
   861  00FC57  74                 	db	116	;'t'
   862  00FC58  61                 	db	97	;'a'
   863  00FC59  20                 	db	32
   864  00FC5A  41                 	db	65	;'A'
   865  00FC5B  72                 	db	114	;'r'
   866  00FC5C  72                 	db	114	;'r'
   867  00FC5D  61                 	db	97	;'a'
   868  00FC5E  79                 	db	121	;'y'
   869  00FC5F  0D                 	db	13
   870  00FC60  0A                 	db	10
   871  00FC61  0A                 	db	10
   872  00FC62  00                 	db	0
   873  00FC63                     STR_26:
   874                           
   875                           ; BSR set to: 0
   876  00FC63  0D                 	db	13
   877  00FC64  20                 	db	32
   878  00FC65  20                 	db	32
   879  00FC66  20                 	db	32
   880  00FC67  30                 	db	48	;'0'
   881  00FC68  78                 	db	120	;'x'
   882  00FC69  30                 	db	48	;'0'
   883  00FC6A  33                 	db	51	;'3'
   884  00FC6B  20                 	db	32
   885  00FC6C  2D                 	db	45
   886  00FC6D  20                 	db	32
   887  00FC6E  52                 	db	82	;'R'
   888  00FC6F  65                 	db	101	;'e'
   889  00FC70  61                 	db	97	;'a'
   890  00FC71  64                 	db	100	;'d'
   891  00FC72  20                 	db	32
   892  00FC73  4D                 	db	77	;'M'
   893  00FC74  75                 	db	117	;'u'
   894  00FC75  6C                 	db	108	;'l'
   895  00FC76  74                 	db	116	;'t'
   896  00FC77  69                 	db	105	;'i'
   897  00FC78  70                 	db	112	;'p'
   898  00FC79  6C                 	db	108	;'l'
   899  00FC7A  65                 	db	101	;'e'
   900  00FC7B  20                 	db	32
   901  00FC7C  52                 	db	82	;'R'
   902  00FC7D  65                 	db	101	;'e'
   903  00FC7E  67                 	db	103	;'g'
   904  00FC7F  69                 	db	105	;'i'
   905  00FC80  73                 	db	115	;'s'
   906  00FC81  74                 	db	116	;'t'
   907  00FC82  65                 	db	101	;'e'
   908  00FC83  72                 	db	114	;'r'
   909  00FC84  73                 	db	115	;'s'
   910  00FC85  20                 	db	32
   911  00FC86  28                 	db	40
   912  00FC87  4D                 	db	77	;'M'
   913  00FC88  61                 	db	97	;'a'
   914  00FC89  78                 	db	120	;'x'
   915  00FC8A  20                 	db	32
   916  00FC8B  33                 	db	51	;'3'
   917  00FC8C  32                 	db	50	;'2'
   918  00FC8D  78                 	db	120	;'x'
   919  00FC8E  20                 	db	32
   920  00FC8F  31                 	db	49	;'1'
   921  00FC90  36                 	db	54	;'6'
   922  00FC91  62                 	db	98	;'b'
   923  00FC92  69                 	db	105	;'i'
   924  00FC93  74                 	db	116	;'t'
   925  00FC94  29                 	db	41
   926  00FC95  0D                 	db	13
   927  00FC96  0A                 	db	10
   928  00FC97  00                 	db	0
   929  00FC98                     
   930                           ; BSR set to: 0
   931  00FC98  45                 	db	69	;'E'
   932  00FC99  6E                 	db	110	;'n'
   933  00FC9A  74                 	db	116	;'t'
   934  00FC9B  65                 	db	101	;'e'
   935  00FC9C  72                 	db	114	;'r'
   936  00FC9D  20                 	db	32
   937  00FC9E  63                 	db	99	;'c'
   938  00FC9F  61                 	db	97	;'a'
   939  00FCA0  72                 	db	114	;'r'
   940  00FCA1  64                 	db	100	;'d'
   941  00FCA2  20                 	db	32
   942  00FCA3  73                 	db	115	;'s'
   943  00FCA4  65                 	db	101	;'e'
   944  00FCA5  72                 	db	114	;'r'
   945  00FCA6  69                 	db	105	;'i'
   946  00FCA7  61                 	db	97	;'a'
   947  00FCA8  6C                 	db	108	;'l'
   948  00FCA9  20                 	db	32
   949  00FCAA  6E                 	db	110	;'n'
   950  00FCAB  75                 	db	117	;'u'
   951  00FCAC  6D                 	db	109	;'m'
   952  00FCAD  62                 	db	98	;'b'
   953  00FCAE  65                 	db	101	;'e'
   954  00FCAF  72                 	db	114	;'r'
   955  00FCB0  20                 	db	32
   956  00FCB1  28                 	db	40
   957  00FCB2  6D                 	db	109	;'m'
   958  00FCB3  61                 	db	97	;'a'
   959  00FCB4  78                 	db	120	;'x'
   960  00FCB5  20                 	db	32
   961  00FCB6  38                 	db	56	;'8'
   962  00FCB7  20                 	db	32
   963  00FCB8  63                 	db	99	;'c'
   964  00FCB9  68                 	db	104	;'h'
   965  00FCBA  61                 	db	97	;'a'
   966  00FCBB  72                 	db	114	;'r'
   967  00FCBC  61                 	db	97	;'a'
   968  00FCBD  63                 	db	99	;'c'
   969  00FCBE  74                 	db	116	;'t'
   970  00FCBF  65                 	db	101	;'e'
   971  00FCC0  72                 	db	114	;'r'
   972  00FCC1  73                 	db	115	;'s'
   973  00FCC2  29                 	db	41
   974  00FCC3  3A                 	db	58	;':'
   975  00FCC4  20                 	db	32
   976  00FCC5  00                 	db	0
   977  00FCC6                     STR_22:
   978                           
   979                           ; BSR set to: 0
   980  00FCC6  0D                 	db	13
   981  00FCC7  43                 	db	67	;'C'
   982  00FCC8  6F                 	db	111	;'o'
   983  00FCC9  6D                 	db	109	;'m'
   984  00FCCA  70                 	db	112	;'p'
   985  00FCCB  69                 	db	105	;'i'
   986  00FCCC  6C                 	db	108	;'l'
   987  00FCCD  65                 	db	101	;'e'
   988  00FCCE  64                 	db	100	;'d'
   989  00FCCF  20                 	db	32
   990  00FCD0  6F                 	db	111	;'o'
   991  00FCD1  6E                 	db	110	;'n'
   992  00FCD2  20                 	db	32
   993  00FCD3  25                 	db	37
   994  00FCD4  73                 	db	115	;'s'
   995  00FCD5  20                 	db	32
   996  00FCD6  61                 	db	97	;'a'
   997  00FCD7  74                 	db	116	;'t'
   998  00FCD8  20                 	db	32
   999  00FCD9  25                 	db	37
  1000  00FCDA  73                 	db	115	;'s'
  1001  00FCDB  20                 	db	32
  1002  00FCDC  62                 	db	98	;'b'
  1003  00FCDD  79                 	db	121	;'y'
  1004  00FCDE  20                 	db	32
  1005  00FCDF  58                 	db	88	;'X'
  1006  00FCE0  43                 	db	67	;'C'
  1007  00FCE1  38                 	db	56	;'8'
  1008  00FCE2  20                 	db	32
  1009  00FCE3  76                 	db	118	;'v'
  1010  00FCE4  65                 	db	101	;'e'
  1011  00FCE5  72                 	db	114	;'r'
  1012  00FCE6  73                 	db	115	;'s'
  1013  00FCE7  69                 	db	105	;'i'
  1014  00FCE8  6F                 	db	111	;'o'
  1015  00FCE9  6E                 	db	110	;'n'
  1016  00FCEA  20                 	db	32
  1017  00FCEB  25                 	db	37
  1018  00FCEC  75                 	db	117	;'u'
  1019  00FCED  0D                 	db	13
  1020  00FCEE  0A                 	db	10
  1021  00FCEF  0A                 	db	10
  1022  00FCF0  00                 	db	0
  1023  00FCF1                     STR_35:
  1024                           
  1025                           ; BSR set to: 0
  1026  00FCF1  45                 	db	69	;'E'
  1027  00FCF2  6E                 	db	110	;'n'
  1028  00FCF3  74                 	db	116	;'t'
  1029  00FCF4  65                 	db	101	;'e'
  1030  00FCF5  72                 	db	114	;'r'
  1031  00FCF6  20                 	db	32
  1032  00FCF7  63                 	db	99	;'c'
  1033  00FCF8  61                 	db	97	;'a'
  1034  00FCF9  72                 	db	114	;'r'
  1035  00FCFA  64                 	db	100	;'d'
  1036  00FCFB  20                 	db	32
  1037  00FCFC  25                 	db	37
  1038  00FCFD  73                 	db	115	;'s'
  1039  00FCFE  20                 	db	32
  1040  00FCFF  28                 	db	40
  1041  00FD00  6D                 	db	109	;'m'
  1042  00FD01  61                 	db	97	;'a'
  1043  00FD02  78                 	db	120	;'x'
  1044  00FD03  20                 	db	32
  1045  00FD04  25                 	db	37
  1046  00FD05  69                 	db	105	;'i'
  1047  00FD06  20                 	db	32
  1048  00FD07  63                 	db	99	;'c'
  1049  00FD08  68                 	db	104	;'h'
  1050  00FD09  61                 	db	97	;'a'
  1051  00FD0A  72                 	db	114	;'r'
  1052  00FD0B  61                 	db	97	;'a'
  1053  00FD0C  63                 	db	99	;'c'
  1054  00FD0D  74                 	db	116	;'t'
  1055  00FD0E  65                 	db	101	;'e'
  1056  00FD0F  72                 	db	114	;'r'
  1057  00FD10  73                 	db	115	;'s'
  1058  00FD11  29                 	db	41
  1059  00FD12  3A                 	db	58	;':'
  1060  00FD13  20                 	db	32
  1061  00FD14  00                 	db	0
  1062  00FD15                     STR_12:
  1063                           
  1064                           ; BSR set to: 0
  1065  00FD15  63                 	db	99	;'c'
  1066  00FD16  72                 	db	114	;'r'
  1067  00FD17  63                 	db	99	;'c'
  1068  00FD18  48                 	db	72	;'H'
  1069  00FD19  69                 	db	105	;'i'
  1070  00FD1A  67                 	db	103	;'g'
  1071  00FD1B  68                 	db	104	;'h'
  1072  00FD1C  3A                 	db	58	;':'
  1073  00FD1D  20                 	db	32
  1074  00FD1E  30                 	db	48	;'0'
  1075  00FD1F  78                 	db	120	;'x'
  1076  00FD20  25                 	db	37
  1077  00FD21  30                 	db	48	;'0'
  1078  00FD22  32                 	db	50	;'2'
  1079  00FD23  78                 	db	120	;'x'
  1080  00FD24  20                 	db	32
  1081  00FD25  20                 	db	32
  1082  00FD26  63                 	db	99	;'c'
  1083  00FD27  72                 	db	114	;'r'
  1084  00FD28  63                 	db	99	;'c'
  1085  00FD29  4C                 	db	76	;'L'
  1086  00FD2A  6F                 	db	111	;'o'
  1087  00FD2B  77                 	db	119	;'w'
  1088  00FD2C  3A                 	db	58	;':'
  1089  00FD2D  20                 	db	32
  1090  00FD2E  30                 	db	48	;'0'
  1091  00FD2F  78                 	db	120	;'x'
  1092  00FD30  25                 	db	37
  1093  00FD31  30                 	db	48	;'0'
  1094  00FD32  32                 	db	50	;'2'
  1095  00FD33  78                 	db	120	;'x'
  1096  00FD34  20                 	db	32
  1097  00FD35  20                 	db	32
  1098  00FD36  0D                 	db	13
  1099  00FD37  0A                 	db	10
  1100  00FD38  00                 	db	0
  1101  00FD39                     STR_28:
  1102                           
  1103                           ; BSR set to: 0
  1104  00FD39  0D                 	db	13
  1105  00FD3A  49                 	db	73	;'I'
  1106  00FD3B  6E                 	db	110	;'n'
  1107  00FD3C  69                 	db	105	;'i'
  1108  00FD3D  74                 	db	116	;'t'
  1109  00FD3E  61                 	db	97	;'a'
  1110  00FD3F  6C                 	db	108	;'l'
  1111  00FD40  69                 	db	105	;'i'
  1112  00FD41  73                 	db	115	;'s'
  1113  00FD42  61                 	db	97	;'a'
  1114  00FD43  74                 	db	116	;'t'
  1115  00FD44  69                 	db	105	;'i'
  1116  00FD45  6F                 	db	111	;'o'
  1117  00FD46  6E                 	db	110	;'n'
  1118  00FD47  20                 	db	32
  1119  00FD48  43                 	db	67	;'C'
  1120  00FD49  6F                 	db	111	;'o'
  1121  00FD4A  6D                 	db	109	;'m'
  1122  00FD4B  70                 	db	112	;'p'
  1123  00FD4C  6C                 	db	108	;'l'
  1124  00FD4D  65                 	db	101	;'e'
  1125  00FD4E  74                 	db	116	;'t'
  1126  00FD4F  65                 	db	101	;'e'
  1127  00FD50  20                 	db	32
  1128  00FD51  2D                 	db	45
  1129  00FD52  20                 	db	32
  1130  00FD53  52                 	db	82	;'R'
  1131  00FD54  65                 	db	101	;'e'
  1132  00FD55  61                 	db	97	;'a'
  1133  00FD56  64                 	db	100	;'d'
  1134  00FD57  79                 	db	121	;'y'
  1135  00FD58  0D                 	db	13
  1136  00FD59  0A                 	db	10
  1137  00FD5A  0A                 	db	10
  1138  00FD5B  00                 	db	0
  1139  00FD5C                     STR_37:
  1140                           
  1141                           ; BSR set to: 0
  1142  00FD5C  0D                 	db	13
  1143  00FD5D  0A                 	db	10
  1144  00FD5E  45                 	db	69	;'E'
  1145  00FD5F  6E                 	db	110	;'n'
  1146  00FD60  74                 	db	116	;'t'
  1147  00FD61  65                 	db	101	;'e'
  1148  00FD62  72                 	db	114	;'r'
  1149  00FD63  65                 	db	101	;'e'
  1150  00FD64  64                 	db	100	;'d'
  1151  00FD65  3A                 	db	58	;':'
  1152  00FD66  20                 	db	32
  1153  00FD67  25                 	db	37
  1154  00FD68  73                 	db	115	;'s'
  1155  00FD69  20                 	db	32
  1156  00FD6A  0D                 	db	13
  1157  00FD6B  0A                 	db	10
  1158  00FD6C  20                 	db	32
  1159  00FD6D  43                 	db	67	;'C'
  1160  00FD6E  6F                 	db	111	;'o'
  1161  00FD6F  6E                 	db	110	;'n'
  1162  00FD70  66                 	db	102	;'f'
  1163  00FD71  69                 	db	105	;'i'
  1164  00FD72  72                 	db	114	;'r'
  1165  00FD73  6D                 	db	109	;'m'
  1166  00FD74  20                 	db	32
  1167  00FD75  20                 	db	32
  1168  00FD76  59                 	db	89	;'Y'
  1169  00FD77  7C                 	db	124
  1170  00FD78  4E                 	db	78	;'N'
  1171  00FD79  3F                 	db	63	;'?'
  1172  00FD7A  3A                 	db	58	;':'
  1173  00FD7B  20                 	db	32
  1174  00FD7C  00                 	db	0
  1175  00FD7D                     STR_9:
  1176                           
  1177                           ; BSR set to: 0
  1178  00FD7D  4D                 	db	77	;'M'
  1179  00FD7E  6F                 	db	111	;'o'
  1180  00FD7F  64                 	db	100	;'d'
  1181  00FD80  62                 	db	98	;'b'
  1182  00FD81  75                 	db	117	;'u'
  1183  00FD82  73                 	db	115	;'s'
  1184  00FD83  20                 	db	32
  1185  00FD84  44                 	db	68	;'D'
  1186  00FD85  61                 	db	97	;'a'
  1187  00FD86  74                 	db	116	;'t'
  1188  00FD87  61                 	db	97	;'a'
  1189  00FD88  20                 	db	32
  1190  00FD89  43                 	db	67	;'C'
  1191  00FD8A  61                 	db	97	;'a'
  1192  00FD8B  70                 	db	112	;'p'
  1193  00FD8C  74                 	db	116	;'t'
  1194  00FD8D  75                 	db	117	;'u'
  1195  00FD8E  72                 	db	114	;'r'
  1196  00FD8F  65                 	db	101	;'e'
  1197  00FD90  20                 	db	32
  1198  00FD91  43                 	db	67	;'C'
  1199  00FD92  6F                 	db	111	;'o'
  1200  00FD93  6D                 	db	109	;'m'
  1201  00FD94  70                 	db	112	;'p'
  1202  00FD95  6C                 	db	108	;'l'
  1203  00FD96  65                 	db	101	;'e'
  1204  00FD97  74                 	db	116	;'t'
  1205  00FD98  65                 	db	101	;'e'
  1206  00FD99  3A                 	db	58	;':'
  1207  00FD9A  0D                 	db	13
  1208  00FD9B  0A                 	db	10
  1209  00FD9C  00                 	db	0
  1210  00FD9D                     
  1211                           ; BSR set to: 0
  1212  00FD9D  4E                 	db	78	;'N'
  1213  00FD9E  0D                 	db	13
  1214  00FD9F  0A                 	db	10
  1215  00FDA0  4E                 	db	78	;'N'
  1216  00FDA1  6F                 	db	111	;'o'
  1217  00FDA2  74                 	db	116	;'t'
  1218  00FDA3  20                 	db	32
  1219  00FDA4  53                 	db	83	;'S'
  1220  00FDA5  61                 	db	97	;'a'
  1221  00FDA6  76                 	db	118	;'v'
  1222  00FDA7  69                 	db	105	;'i'
  1223  00FDA8  6E                 	db	110	;'n'
  1224  00FDA9  67                 	db	103	;'g'
  1225  00FDAA  20                 	db	32
  1226  00FDAB  53                 	db	83	;'S'
  1227  00FDAC  65                 	db	101	;'e'
  1228  00FDAD  72                 	db	114	;'r'
  1229  00FDAE  69                 	db	105	;'i'
  1230  00FDAF  61                 	db	97	;'a'
  1231  00FDB0  6C                 	db	108	;'l'
  1232  00FDB1  20                 	db	32
  1233  00FDB2  4E                 	db	78	;'N'
  1234  00FDB3  75                 	db	117	;'u'
  1235  00FDB4  6D                 	db	109	;'m'
  1236  00FDB5  62                 	db	98	;'b'
  1237  00FDB6  65                 	db	101	;'e'
  1238  00FDB7  72                 	db	114	;'r'
  1239  00FDB8  20                 	db	32
  1240  00FDB9  0D                 	db	13
  1241  00FDBA  0A                 	db	10
  1242  00FDBB  00                 	db	0
  1243  00FDBC                     STR_42:
  1244                           
  1245                           ; BSR set to: 0
  1246  00FDBC  45                 	db	69	;'E'
  1247  00FDBD  45                 	db	69	;'E'
  1248  00FDBE  50                 	db	80	;'P'
  1249  00FDBF  52                 	db	82	;'R'
  1250  00FDC0  4F                 	db	79	;'O'
  1251  00FDC1  4D                 	db	77	;'M'
  1252  00FDC2  3A                 	db	58	;':'
  1253  00FDC3  20                 	db	32
  1254  00FDC4  30                 	db	48	;'0'
  1255  00FDC5  78                 	db	120	;'x'
  1256  00FDC6  25                 	db	37
  1257  00FDC7  30                 	db	48	;'0'
  1258  00FDC8  32                 	db	50	;'2'
  1259  00FDC9  78                 	db	120	;'x'
  1260  00FDCA  20                 	db	32
  1261  00FDCB  41                 	db	65	;'A'
  1262  00FDCC  64                 	db	100	;'d'
  1263  00FDCD  64                 	db	100	;'d'
  1264  00FDCE  3A                 	db	58	;':'
  1265  00FDCF  20                 	db	32
  1266  00FDD0  30                 	db	48	;'0'
  1267  00FDD1  78                 	db	120	;'x'
  1268  00FDD2  25                 	db	37
  1269  00FDD3  30                 	db	48	;'0'
  1270  00FDD4  32                 	db	50	;'2'
  1271  00FDD5  78                 	db	120	;'x'
  1272  00FDD6  20                 	db	32
  1273  00FDD7  0D                 	db	13
  1274  00FDD8  0A                 	db	10
  1275  00FDD9  00                 	db	0
  1276  00FDDA                     STR_54:
  1277                           
  1278                           ; BSR set to: 0
  1279  00FDDA  0D                 	db	13
  1280  00FDDB  0A                 	db	10
  1281  00FDDC  20                 	db	32
  1282  00FDDD  56                 	db	86	;'V'
  1283  00FDDE  61                 	db	97	;'a'
  1284  00FDDF  6C                 	db	108	;'l'
  1285  00FDE0  69                 	db	105	;'i'
  1286  00FDE1  64                 	db	100	;'d'
  1287  00FDE2  61                 	db	97	;'a'
  1288  00FDE3  74                 	db	116	;'t'
  1289  00FDE4  69                 	db	105	;'i'
  1290  00FDE5  6E                 	db	110	;'n'
  1291  00FDE6  67                 	db	103	;'g'
  1292  00FDE7  20                 	db	32
  1293  00FDE8  43                 	db	67	;'C'
  1294  00FDE9  6F                 	db	111	;'o'
  1295  00FDEA  6D                 	db	109	;'m'
  1296  00FDEB  6D                 	db	109	;'m'
  1297  00FDEC  61                 	db	97	;'a'
  1298  00FDED  6E                 	db	110	;'n'
  1299  00FDEE  64                 	db	100	;'d'
  1300  00FDEF  3A                 	db	58	;':'
  1301  00FDF0  20                 	db	32
  1302  00FDF1  25                 	db	37
  1303  00FDF2  73                 	db	115	;'s'
  1304  00FDF3  20                 	db	32
  1305  00FDF4  0D                 	db	13
  1306  00FDF5  0A                 	db	10
  1307  00FDF6  00                 	db	0
  1308  00FDF7                     STR_25:
  1309                           
  1310                           ; BSR set to: 0
  1311  00FDF7  0D                 	db	13
  1312  00FDF8  46                 	db	70	;'F'
  1313  00FDF9  75                 	db	117	;'u'
  1314  00FDFA  6E                 	db	110	;'n'
  1315  00FDFB  63                 	db	99	;'c'
  1316  00FDFC  74                 	db	116	;'t'
  1317  00FDFD  69                 	db	105	;'i'
  1318  00FDFE  6F                 	db	111	;'o'
  1319  00FDFF  6E                 	db	110	;'n'
  1320  00FE00  20                 	db	32
  1321  00FE01  43                 	db	67	;'C'
  1322  00FE02  6F                 	db	111	;'o'
  1323  00FE03  64                 	db	100	;'d'
  1324  00FE04  65                 	db	101	;'e'
  1325  00FE05  73                 	db	115	;'s'
  1326  00FE06  20                 	db	32
  1327  00FE07  53                 	db	83	;'S'
  1328  00FE08  75                 	db	117	;'u'
  1329  00FE09  70                 	db	112	;'p'
  1330  00FE0A  70                 	db	112	;'p'
  1331  00FE0B  6F                 	db	111	;'o'
  1332  00FE0C  72                 	db	114	;'r'
  1333  00FE0D  74                 	db	116	;'t'
  1334  00FE0E  65                 	db	101	;'e'
  1335  00FE0F  64                 	db	100	;'d'
  1336  00FE10  3A                 	db	58	;':'
  1337  00FE11  0D                 	db	13
  1338  00FE12  0A                 	db	10
  1339  00FE13  00                 	db	0
  1340  00FE14                     STR_8:
  1341                           
  1342                           ; BSR set to: 0
  1343  00FE14  4D                 	db	77	;'M'
  1344  00FE15  6F                 	db	111	;'o'
  1345  00FE16  64                 	db	100	;'d'
  1346  00FE17  44                 	db	68	;'D'
  1347  00FE18  61                 	db	97	;'a'
  1348  00FE19  74                 	db	116	;'t'
  1349  00FE1A  61                 	db	97	;'a'
  1350  00FE1B  43                 	db	67	;'C'
  1351  00FE1C  6E                 	db	110	;'n'
  1352  00FE1D  74                 	db	116	;'t'
  1353  00FE1E  20                 	db	32
  1354  00FE1F  73                 	db	115	;'s'
  1355  00FE20  69                 	db	105	;'i'
  1356  00FE21  74                 	db	116	;'t'
  1357  00FE22  74                 	db	116	;'t'
  1358  00FE23  69                 	db	105	;'i'
  1359  00FE24  6E                 	db	110	;'n'
  1360  00FE25  67                 	db	103	;'g'
  1361  00FE26  20                 	db	32
  1362  00FE27  61                 	db	97	;'a'
  1363  00FE28  74                 	db	116	;'t'
  1364  00FE29  20                 	db	32
  1365  00FE2A  25                 	db	37
  1366  00FE2B  69                 	db	105	;'i'
  1367  00FE2C  0D                 	db	13
  1368  00FE2D  0A                 	db	10
  1369  00FE2E  0A                 	db	10
  1370  00FE2F  00                 	db	0
  1371  00FE30                     STR_3:
  1372                           
  1373                           ; BSR set to: 0
  1374  00FE30  55                 	db	85	;'U'
  1375  00FE31  6E                 	db	110	;'n'
  1376  00FE32  73                 	db	115	;'s'
  1377  00FE33  75                 	db	117	;'u'
  1378  00FE34  70                 	db	112	;'p'
  1379  00FE35  70                 	db	112	;'p'
  1380  00FE36  6F                 	db	111	;'o'
  1381  00FE37  72                 	db	114	;'r'
  1382  00FE38  74                 	db	116	;'t'
  1383  00FE39  65                 	db	101	;'e'
  1384  00FE3A  64                 	db	100	;'d'
  1385  00FE3B  20                 	db	32
  1386  00FE3C  46                 	db	70	;'F'
  1387  00FE3D  75                 	db	117	;'u'
  1388  00FE3E  6E                 	db	110	;'n'
  1389  00FE3F  63                 	db	99	;'c'
  1390  00FE40  74                 	db	116	;'t'
  1391  00FE41  69                 	db	105	;'i'
  1392  00FE42  6F                 	db	111	;'o'
  1393  00FE43  6E                 	db	110	;'n'
  1394  00FE44  20                 	db	32
  1395  00FE45  43                 	db	67	;'C'
  1396  00FE46  6F                 	db	111	;'o'
  1397  00FE47  64                 	db	100	;'d'
  1398  00FE48  65                 	db	101	;'e'
  1399  00FE49  0D                 	db	13
  1400  00FE4A  0A                 	db	10
  1401  00FE4B  00                 	db	0
  1402  00FE4C                     STR_38:
  1403                           
  1404                           ; BSR set to: 0
  1405  00FE4C  59                 	db	89	;'Y'
  1406  00FE4D  0D                 	db	13
  1407  00FE4E  0A                 	db	10
  1408  00FE4F  53                 	db	83	;'S'
  1409  00FE50  61                 	db	97	;'a'
  1410  00FE51  76                 	db	118	;'v'
  1411  00FE52  69                 	db	105	;'i'
  1412  00FE53  6E                 	db	110	;'n'
  1413  00FE54  67                 	db	103	;'g'
  1414  00FE55  20                 	db	32
  1415  00FE56  53                 	db	83	;'S'
  1416  00FE57  65                 	db	101	;'e'
  1417  00FE58  72                 	db	114	;'r'
  1418  00FE59  69                 	db	105	;'i'
  1419  00FE5A  61                 	db	97	;'a'
  1420  00FE5B  6C                 	db	108	;'l'
  1421  00FE5C  20                 	db	32
  1422  00FE5D  4E                 	db	78	;'N'
  1423  00FE5E  75                 	db	117	;'u'
  1424  00FE5F  6D                 	db	109	;'m'
  1425  00FE60  62                 	db	98	;'b'
  1426  00FE61  65                 	db	101	;'e'
  1427  00FE62  72                 	db	114	;'r'
  1428  00FE63  20                 	db	32
  1429  00FE64  0D                 	db	13
  1430  00FE65  0A                 	db	10
  1431  00FE66  00                 	db	0
  1432  00FE67                     STR_18:
  1433                           
  1434                           ; BSR set to: 0
  1435  00FE67  43                 	db	67	;'C'
  1436  00FE68  52                 	db	82	;'R'
  1437  00FE69  43                 	db	67	;'C'
  1438  00FE6A  20                 	db	32
  1439  00FE6B  64                 	db	100	;'d'
  1440  00FE6C  69                 	db	105	;'i'
  1441  00FE6D  64                 	db	100	;'d'
  1442  00FE6E  20                 	db	32
  1443  00FE6F  4E                 	db	78	;'N'
  1444  00FE70  4F                 	db	79	;'O'
  1445  00FE71  54                 	db	84	;'T'
  1446  00FE72  20                 	db	32
  1447  00FE73  63                 	db	99	;'c'
  1448  00FE74  68                 	db	104	;'h'
  1449  00FE75  65                 	db	101	;'e'
  1450  00FE76  63                 	db	99	;'c'
  1451  00FE77  6B                 	db	107	;'k'
  1452  00FE78  20                 	db	32
  1453  00FE79  6F                 	db	111	;'o'
  1454  00FE7A  75                 	db	117	;'u'
  1455  00FE7B  74                 	db	116	;'t'
  1456  00FE7C  2E                 	db	46
  1457  00FE7D  20                 	db	32
  1458  00FE7E  0D                 	db	13
  1459  00FE7F  0A                 	db	10
  1460  00FE80  0A                 	db	10
  1461  00FE81  00                 	db	0
  1462  00FE82                     STR_20:
  1463                           
  1464                           ; BSR set to: 0
  1465  00FE82  0D                 	db	13
  1466  00FE83  43                 	db	67	;'C'
  1467  00FE84  61                 	db	97	;'a'
  1468  00FE85  72                 	db	114	;'r'
  1469  00FE86  64                 	db	100	;'d'
  1470  00FE87  20                 	db	32
  1471  00FE88  53                 	db	83	;'S'
  1472  00FE89  65                 	db	101	;'e'
  1473  00FE8A  72                 	db	114	;'r'
  1474  00FE8B  20                 	db	32
  1475  00FE8C  4E                 	db	78	;'N'
  1476  00FE8D  6F                 	db	111	;'o'
  1477  00FE8E  2E                 	db	46
  1478  00FE8F  20                 	db	32
  1479  00FE90  32                 	db	50	;'2'
  1480  00FE91  31                 	db	49	;'1'
  1481  00FE92  30                 	db	48	;'0'
  1482  00FE93  39                 	db	57	;'9'
  1483  00FE94  30                 	db	48	;'0'
  1484  00FE95  30                 	db	48	;'0'
  1485  00FE96  32                 	db	50	;'2'
  1486  00FE97  20                 	db	32
  1487  00FE98  0D                 	db	13
  1488  00FE99  0A                 	db	10
  1489  00FE9A  00                 	db	0
  1490  00FE9B                     STR_40:
  1491                           
  1492                           ; BSR set to: 0
  1493  00FE9B  43                 	db	67	;'C'
  1494  00FE9C  68                 	db	104	;'h'
  1495  00FE9D  61                 	db	97	;'a'
  1496  00FE9E  72                 	db	114	;'r'
  1497  00FE9F  20                 	db	32
  1498  00FEA0  30                 	db	48	;'0'
  1499  00FEA1  78                 	db	120	;'x'
  1500  00FEA2  25                 	db	37
  1501  00FEA3  30                 	db	48	;'0'
  1502  00FEA4  32                 	db	50	;'2'
  1503  00FEA5  78                 	db	120	;'x'
  1504  00FEA6  20                 	db	32
  1505  00FEA7  69                 	db	105	;'i'
  1506  00FEA8  6E                 	db	110	;'n'
  1507  00FEA9  20                 	db	32
  1508  00FEAA  30                 	db	48	;'0'
  1509  00FEAB  78                 	db	120	;'x'
  1510  00FEAC  25                 	db	37
  1511  00FEAD  30                 	db	48	;'0'
  1512  00FEAE  32                 	db	50	;'2'
  1513  00FEAF  78                 	db	120	;'x'
  1514  00FEB0  20                 	db	32
  1515  00FEB1  0D                 	db	13
  1516  00FEB2  0A                 	db	10
  1517  00FEB3  00                 	db	0
  1518  00FEB4                     STR_41:
  1519                           
  1520                           ; BSR set to: 0
  1521  00FEB4  53                 	db	83	;'S'
  1522  00FEB5  65                 	db	101	;'e'
  1523  00FEB6  72                 	db	114	;'r'
  1524  00FEB7  69                 	db	105	;'i'
  1525  00FEB8  61                 	db	97	;'a'
  1526  00FEB9  6C                 	db	108	;'l'
  1527  00FEBA  20                 	db	32
  1528  00FEBB  4E                 	db	78	;'N'
  1529  00FEBC  75                 	db	117	;'u'
  1530  00FEBD  6D                 	db	109	;'m'
  1531  00FEBE  62                 	db	98	;'b'
  1532  00FEBF  65                 	db	101	;'e'
  1533  00FEC0  72                 	db	114	;'r'
  1534  00FEC1  20                 	db	32
  1535  00FEC2  53                 	db	83	;'S'
  1536  00FEC3  61                 	db	97	;'a'
  1537  00FEC4  76                 	db	118	;'v'
  1538  00FEC5  65                 	db	101	;'e'
  1539  00FEC6  64                 	db	100	;'d'
  1540  00FEC7  2E                 	db	46
  1541  00FEC8  20                 	db	32
  1542  00FEC9  0D                 	db	13
  1543  00FECA  0A                 	db	10
  1544  00FECB  00                 	db	0
  1545  00FECC                     STR_16:
  1546                           
  1547                           ; BSR set to: 0
  1548  00FECC  53                 	db	83	;'S'
  1549  00FECD  6F                 	db	111	;'o'
  1550  00FECE  6D                 	db	109	;'m'
  1551  00FECF  65                 	db	101	;'e'
  1552  00FED0  74                 	db	116	;'t'
  1553  00FED1  68                 	db	104	;'h'
  1554  00FED2  69                 	db	105	;'i'
  1555  00FED3  6E                 	db	110	;'n'
  1556  00FED4  67                 	db	103	;'g'
  1557  00FED5  20                 	db	32
  1558  00FED6  69                 	db	105	;'i'
  1559  00FED7  6E                 	db	110	;'n'
  1560  00FED8  20                 	db	32
  1561  00FED9  45                 	db	69	;'E'
  1562  00FEDA  53                 	db	83	;'S'
  1563  00FEDB  55                 	db	85	;'U'
  1564  00FEDC  41                 	db	65	;'A'
  1565  00FEDD  52                 	db	82	;'R'
  1566  00FEDE  54                 	db	84	;'T'
  1567  00FEDF  31                 	db	49	;'1'
  1568  00FEE0  20                 	db	32
  1569  00FEE1  0D                 	db	13
  1570  00FEE2  0A                 	db	10
  1571  00FEE3  00                 	db	0
  1572  00FEE4                     STR_6:
  1573                           
  1574                           ; BSR set to: 0
  1575  00FEE4  52                 	db	82	;'R'
  1576  00FEE5  65                 	db	101	;'e'
  1577  00FEE6  67                 	db	103	;'g'
  1578  00FEE7  3A                 	db	58	;':'
  1579  00FEE8  20                 	db	32
  1580  00FEE9  25                 	db	37
  1581  00FEEA  69                 	db	105	;'i'
  1582  00FEEB  20                 	db	32
  1583  00FEEC  44                 	db	68	;'D'
  1584  00FEED  61                 	db	97	;'a'
  1585  00FEEE  74                 	db	116	;'t'
  1586  00FEEF  61                 	db	97	;'a'
  1587  00FEF0  3A                 	db	58	;':'
  1588  00FEF1  20                 	db	32
  1589  00FEF2  30                 	db	48	;'0'
  1590  00FEF3  78                 	db	120	;'x'
  1591  00FEF4  25                 	db	37
  1592  00FEF5  30                 	db	48	;'0'
  1593  00FEF6  34                 	db	52	;'4'
  1594  00FEF7  78                 	db	120	;'x'
  1595  00FEF8  20                 	db	32
  1596  00FEF9  0D                 	db	13
  1597  00FEFA  0A                 	db	10
  1598  00FEFB  00                 	db	0
  1599  00FEFC                     STR_21:
  1600                           
  1601                           ; BSR set to: 0
  1602  00FEFC  0D                 	db	13
  1603  00FEFD  43                 	db	67	;'C'
  1604  00FEFE  61                 	db	97	;'a'
  1605  00FEFF  72                 	db	114	;'r'
  1606  00FF00  64                 	db	100	;'d'
  1607  00FF01  20                 	db	32
  1608  00FF02  41                 	db	65	;'A'
  1609  00FF03  64                 	db	100	;'d'
  1610  00FF04  64                 	db	100	;'d'
  1611  00FF05  72                 	db	114	;'r'
  1612  00FF06  65                 	db	101	;'e'
  1613  00FF07  73                 	db	115	;'s'
  1614  00FF08  73                 	db	115	;'s'
  1615  00FF09  2E                 	db	46
  1616  00FF0A  20                 	db	32
  1617  00FF0B  30                 	db	48	;'0'
  1618  00FF0C  78                 	db	120	;'x'
  1619  00FF0D  30                 	db	48	;'0'
  1620  00FF0E  35                 	db	53	;'5'
  1621  00FF0F  20                 	db	32
  1622  00FF10  0D                 	db	13
  1623  00FF11  0A                 	db	10
  1624  00FF12  00                 	db	0
  1625  00FF13                     STR_10:
  1626                           
  1627                           ; BSR set to: 0
  1628  00FF13  20                 	db	32
  1629  00FF14  20                 	db	32
  1630  00FF15  20                 	db	32
  1631  00FF16  42                 	db	66	;'B'
  1632  00FF17  79                 	db	121	;'y'
  1633  00FF18  74                 	db	116	;'t'
  1634  00FF19  65                 	db	101	;'e'
  1635  00FF1A  20                 	db	32
  1636  00FF1B  25                 	db	37
  1637  00FF1C  69                 	db	105	;'i'
  1638  00FF1D  20                 	db	32
  1639  00FF1E  3A                 	db	58	;':'
  1640  00FF1F  20                 	db	32
  1641  00FF20  30                 	db	48	;'0'
  1642  00FF21  78                 	db	120	;'x'
  1643  00FF22  25                 	db	37
  1644  00FF23  30                 	db	48	;'0'
  1645  00FF24  32                 	db	50	;'2'
  1646  00FF25  78                 	db	120	;'x'
  1647  00FF26  20                 	db	32
  1648  00FF27  0D                 	db	13
  1649  00FF28  0A                 	db	10
  1650  00FF29  00                 	db	0
  1651  00FF2A                     STR_17:
  1652                           
  1653                           ; BSR set to: 0
  1654  00FF2A  43                 	db	67	;'C'
  1655  00FF2B  52                 	db	82	;'R'
  1656  00FF2C  43                 	db	67	;'C'
  1657  00FF2D  20                 	db	32
  1658  00FF2E  43                 	db	67	;'C'
  1659  00FF2F  68                 	db	104	;'h'
  1660  00FF30  65                 	db	101	;'e'
  1661  00FF31  63                 	db	99	;'c'
  1662  00FF32  6B                 	db	107	;'k'
  1663  00FF33  65                 	db	101	;'e'
  1664  00FF34  64                 	db	100	;'d'
  1665  00FF35  20                 	db	32
  1666  00FF36  4F                 	db	79	;'O'
  1667  00FF37  75                 	db	117	;'u'
  1668  00FF38  74                 	db	116	;'t'
  1669  00FF39  2E                 	db	46
  1670  00FF3A  20                 	db	32
  1671  00FF3B  0D                 	db	13
  1672  00FF3C  0A                 	db	10
  1673  00FF3D  0A                 	db	10
  1674  00FF3E  00                 	db	0
  1675  00FF3F                     STR_2:
  1676                           
  1677                           ; BSR set to: 0
  1678  00FF3F  46                 	db	70	;'F'
  1679  00FF40  75                 	db	117	;'u'
  1680  00FF41  6E                 	db	110	;'n'
  1681  00FF42  63                 	db	99	;'c'
  1682  00FF43  74                 	db	116	;'t'
  1683  00FF44  69                 	db	105	;'i'
  1684  00FF45  6F                 	db	111	;'o'
  1685  00FF46  6E                 	db	110	;'n'
  1686  00FF47  20                 	db	32
  1687  00FF48  43                 	db	67	;'C'
  1688  00FF49  6F                 	db	111	;'o'
  1689  00FF4A  64                 	db	100	;'d'
  1690  00FF4B  65                 	db	101	;'e'
  1691  00FF4C  20                 	db	32
  1692  00FF4D  30                 	db	48	;'0'
  1693  00FF4E  78                 	db	120	;'x'
  1694  00FF4F  31                 	db	49	;'1'
  1695  00FF50  30                 	db	48	;'0'
  1696  00FF51  0D                 	db	13
  1697  00FF52  0A                 	db	10
  1698  00FF53  00                 	db	0
  1699  00FF54                     STR_1:
  1700                           
  1701                           ; BSR set to: 0
  1702  00FF54  46                 	db	70	;'F'
  1703  00FF55  75                 	db	117	;'u'
  1704  00FF56  6E                 	db	110	;'n'
  1705  00FF57  63                 	db	99	;'c'
  1706  00FF58  74                 	db	116	;'t'
  1707  00FF59  69                 	db	105	;'i'
  1708  00FF5A  6F                 	db	111	;'o'
  1709  00FF5B  6E                 	db	110	;'n'
  1710  00FF5C  20                 	db	32
  1711  00FF5D  43                 	db	67	;'C'
  1712  00FF5E  6F                 	db	111	;'o'
  1713  00FF5F  64                 	db	100	;'d'
  1714  00FF60  65                 	db	101	;'e'
  1715  00FF61  20                 	db	32
  1716  00FF62  30                 	db	48	;'0'
  1717  00FF63  78                 	db	120	;'x'
  1718  00FF64  30                 	db	48	;'0'
  1719  00FF65  33                 	db	51	;'3'
  1720  00FF66  0D                 	db	13
  1721  00FF67  0A                 	db	10
  1722  00FF68  00                 	db	0
  1723  00FF69                     STR_33:
  1724                           
  1725                           ; BSR set to: 0
  1726  00FF69  53                 	db	83	;'S'
  1727  00FF6A  61                 	db	97	;'a'
  1728  00FF6B  76                 	db	118	;'v'
  1729  00FF6C  69                 	db	105	;'i'
  1730  00FF6D  6E                 	db	110	;'n'
  1731  00FF6E  67                 	db	103	;'g'
  1732  00FF6F  20                 	db	32
  1733  00FF70  43                 	db	67	;'C'
  1734  00FF71  61                 	db	97	;'a'
  1735  00FF72  72                 	db	114	;'r'
  1736  00FF73  64                 	db	100	;'d'
  1737  00FF74  20                 	db	32
  1738  00FF75  44                 	db	68	;'D'
  1739  00FF76  61                 	db	97	;'a'
  1740  00FF77  74                 	db	116	;'t'
  1741  00FF78  61                 	db	97	;'a'
  1742  00FF79  0D                 	db	13
  1743  00FF7A  0A                 	db	10
  1744  00FF7B  00                 	db	0
  1745  00FF7C                     STR_13:
  1746                           
  1747                           ; BSR set to: 0
  1748  00FF7C  4D                 	db	77	;'M'
  1749  00FF7D  6F                 	db	111	;'o'
  1750  00FF7E  64                 	db	100	;'d'
  1751  00FF7F  62                 	db	98	;'b'
  1752  00FF80  75                 	db	117	;'u'
  1753  00FF81  73                 	db	115	;'s'
  1754  00FF82  20                 	db	32
  1755  00FF83  52                 	db	82	;'R'
  1756  00FF84  65                 	db	101	;'e'
  1757  00FF85  73                 	db	115	;'s'
  1758  00FF86  70                 	db	112	;'p'
  1759  00FF87  6F                 	db	111	;'o'
  1760  00FF88  6E                 	db	110	;'n'
  1761  00FF89  73                 	db	115	;'s'
  1762  00FF8A  65                 	db	101	;'e'
  1763  00FF8B  3A                 	db	58	;':'
  1764  00FF8C  0D                 	db	13
  1765  00FF8D  0A                 	db	10
  1766  00FF8E  00                 	db	0
  1767  00FF8F                     STR_39:
  1768                           
  1769                           ; BSR set to: 0
  1770  00FF8F  4E                 	db	78	;'N'
  1771  00FF90  75                 	db	117	;'u'
  1772  00FF91  6D                 	db	109	;'m'
  1773  00FF92  20                 	db	32
  1774  00FF93  43                 	db	67	;'C'
  1775  00FF94  68                 	db	104	;'h'
  1776  00FF95  61                 	db	97	;'a'
  1777  00FF96  72                 	db	114	;'r'
  1778  00FF97  73                 	db	115	;'s'
  1779  00FF98  3A                 	db	58	;':'
  1780  00FF99  20                 	db	32
  1781  00FF9A  25                 	db	37
  1782  00FF9B  69                 	db	105	;'i'
  1783  00FF9C  20                 	db	32
  1784  00FF9D  0D                 	db	13
  1785  00FF9E  0A                 	db	10
  1786  00FF9F  00                 	db	0
  1787  00FFA0                     STR_31:
  1788                           
  1789                           ; BSR set to: 0
  1790  00FFA0  44                 	db	68	;'D'
  1791  00FFA1  65                 	db	101	;'e'
  1792  00FFA2  62                 	db	98	;'b'
  1793  00FFA3  75                 	db	117	;'u'
  1794  00FFA4  67                 	db	103	;'g'
  1795  00FFA5  20                 	db	32
  1796  00FFA6  44                 	db	68	;'D'
  1797  00FFA7  69                 	db	105	;'i'
  1798  00FFA8  73                 	db	115	;'s'
  1799  00FFA9  61                 	db	97	;'a'
  1800  00FFAA  62                 	db	98	;'b'
  1801  00FFAB  6C                 	db	108	;'l'
  1802  00FFAC  65                 	db	101	;'e'
  1803  00FFAD  64                 	db	100	;'d'
  1804  00FFAE  0D                 	db	13
  1805  00FFAF  0A                 	db	10
  1806  00FFB0  00                 	db	0
  1807  00FFB1                     STR_30:
  1808                           
  1809                           ; BSR set to: 0
  1810  00FFB1  44                 	db	68	;'D'
  1811  00FFB2  65                 	db	101	;'e'
  1812  00FFB3  62                 	db	98	;'b'
  1813  00FFB4  75                 	db	117	;'u'
  1814  00FFB5  67                 	db	103	;'g'
  1815  00FFB6  20                 	db	32
  1816  00FFB7  45                 	db	69	;'E'
  1817  00FFB8  6E                 	db	110	;'n'
  1818  00FFB9  61                 	db	97	;'a'
  1819  00FFBA  62                 	db	98	;'b'
  1820  00FFBB  6C                 	db	108	;'l'
  1821  00FFBC  65                 	db	101	;'e'
  1822  00FFBD  64                 	db	100	;'d'
  1823  00FFBE  0D                 	db	13
  1824  00FFBF  0A                 	db	10
  1825  00FFC0  00                 	db	0
  1826  00FFC1                     STR_5:
  1827                           
  1828                           ; BSR set to: 0
  1829  00FFC1  55                 	db	85	;'U'
  1830  00FFC2  70                 	db	112	;'p'
  1831  00FFC3  64                 	db	100	;'d'
  1832  00FFC4  61                 	db	97	;'a'
  1833  00FFC5  74                 	db	116	;'t'
  1834  00FFC6  65                 	db	101	;'e'
  1835  00FFC7  64                 	db	100	;'d'
  1836  00FFC8  4D                 	db	77	;'M'
  1837  00FFC9  42                 	db	66	;'B'
  1838  00FFCA  34                 	db	52	;'4'
  1839  00FFCB  30                 	db	48	;'0'
  1840  00FFCC  30                 	db	48	;'0'
  1841  00FFCD  20                 	db	32
  1842  00FFCE  0D                 	db	13
  1843  00FFCF  0A                 	db	10
  1844  00FFD0  00                 	db	0
  1845  00FFD1                     STR_23:
  1846                           
  1847                           ; BSR set to: 0
  1848  00FFD1  4D                 	db	77	;'M'
  1849  00FFD2  61                 	db	97	;'a'
  1850  00FFD3  72                 	db	114	;'r'
  1851  00FFD4  20                 	db	32
  1852  00FFD5  31                 	db	49	;'1'
  1853  00FFD6  34                 	db	52	;'4'
  1854  00FFD7  20                 	db	32
  1855  00FFD8  32                 	db	50	;'2'
  1856  00FFD9  30                 	db	48	;'0'
  1857  00FFDA  32                 	db	50	;'2'
  1858  00FFDB  31                 	db	49	;'1'
  1859  00FFDC  00                 	db	0
  1860  00FFDD                     STR_24:
  1861                           
  1862                           ; BSR set to: 0
  1863  00FFDD  31                 	db	49	;'1'
  1864  00FFDE  31                 	db	49	;'1'
  1865  00FFDF  3A                 	db	58	;':'
  1866  00FFE0  35                 	db	53	;'5'
  1867  00FFE1  39                 	db	57	;'9'
  1868  00FFE2  3A                 	db	58	;':'
  1869  00FFE3  34                 	db	52	;'4'
  1870  00FFE4  32                 	db	50	;'2'
  1871  00FFE5  00                 	db	0
  1872  00FFE6                     STR_59:
  1873                           
  1874                           ; BSR set to: 0
  1875  00FFE6  73                 	db	115	;'s'
  1876  00FFE7  65                 	db	101	;'e'
  1877  00FFE8  72                 	db	114	;'r'
  1878  00FFE9  69                 	db	105	;'i'
  1879  00FFEA  61                 	db	97	;'a'
  1880  00FFEB  6C                 	db	108	;'l'
  1881  00FFEC  00                 	db	0
  1882  00FFED                     STR_55:
  1883                           
  1884                           ; BSR set to: 0
  1885  00FFED  64                 	db	100	;'d'
  1886  00FFEE  65                 	db	101	;'e'
  1887  00FFEF  62                 	db	98	;'b'
  1888  00FFF0  75                 	db	117	;'u'
  1889  00FFF1  67                 	db	103	;'g'
  1890  00FFF2  00                 	db	0
  1891  00FFF3                     STR_61:
  1892                           
  1893                           ; BSR set to: 0
  1894  00FFF3  70                 	db	112	;'p'
  1895  00FFF4  61                 	db	97	;'a'
  1896  00FFF5  72                 	db	114	;'r'
  1897  00FFF6  74                 	db	116	;'t'
  1898  00FFF7  00                 	db	0
  1899  00FFF8                     STR_63:
  1900                           
  1901                           ; BSR set to: 0
  1902  00FFF8  72                 	db	114	;'r'
  1903  00FFF9  65                 	db	101	;'e'
  1904  00FFFA  76                 	db	118	;'v'
  1905  00FFFB  00                 	db	0
  1906  00FFFC                     STR_57:
  1907                           
  1908                           ; BSR set to: 0
  1909  00FFFC  3F                 	db	63	;'?'
  1910  00FFFD  00                 	db	0
  1911  0000                     
  1912                           ; #config settings
  1913  00FFFE  00                 	db	0	; dummy byte at the end
  1914  0000                     
  1915                           	psect	cinit
  1916  002728                     __pcinit:
  1917                           	opt callstack 0
  1918  002728                     start_initialization:
  1919                           	opt callstack 0
  1920  002728                     __initialization:
  1921                           	opt callstack 0
  1922                           
  1923                           ; Initialize objects allocated to BANK3 (64 bytes)
  1924                           ; load TBLPTR registers with __pidataBANK3
  1925  002728  0EB8               	movlw	low __pidataBANK3
  1926  00272A  6EF6               	movwf	tblptrl,c
  1927  00272C  0E35               	movlw	high __pidataBANK3
  1928  00272E  6EF7               	movwf	tblptrh,c
  1929  002730  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1930  002732  6EF8               	movwf	tblptru,c
  1931  002734  EE03  F064         	lfsr	0,__pdataBANK3
  1932  002738  EE10 F040          	lfsr	1,64
  1933  00273C                     copy_data0:
  1934  00273C  0009               	tblrd		*+
  1935  00273E  CFF5 FFEE          	movff	tablat,postinc0
  1936  002742  50E5               	movf	postdec1,w,c
  1937  002744  50E1               	movf	fsr1l,w,c
  1938  002746  E1FA               	bnz	copy_data0
  1939                           
  1940                           ; Initialize objects allocated to BANK2 (124 bytes)
  1941                           ; load TBLPTR registers with __pidataBANK2
  1942  002748  0E6B               	movlw	low __pidataBANK2
  1943  00274A  6EF6               	movwf	tblptrl,c
  1944  00274C  0E2D               	movlw	high __pidataBANK2
  1945  00274E  6EF7               	movwf	tblptrh,c
  1946  002750  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1947  002752  6EF8               	movwf	tblptru,c
  1948  002754  EE02  F000         	lfsr	0,__pdataBANK2
  1949  002758  EE10 F07C          	lfsr	1,124
  1950  00275C                     copy_data1:
  1951  00275C  0009               	tblrd		*+
  1952  00275E  CFF5 FFEE          	movff	tablat,postinc0
  1953  002762  50E5               	movf	postdec1,w,c
  1954  002764  50E1               	movf	fsr1l,w,c
  1955  002766  E1FA               	bnz	copy_data1
  1956                           
  1957                           ; Initialize objects allocated to BANK1 (127 bytes)
  1958                           ; load TBLPTR registers with __pidataBANK1
  1959  002768  0EEC               	movlw	low __pidataBANK1
  1960  00276A  6EF6               	movwf	tblptrl,c
  1961  00276C  0E2C               	movlw	high __pidataBANK1
  1962  00276E  6EF7               	movwf	tblptrh,c
  1963  002770  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1964  002772  6EF8               	movwf	tblptru,c
  1965  002774  EE01  F000         	lfsr	0,__pdataBANK1
  1966  002778  EE10 F07F          	lfsr	1,127
  1967  00277C                     copy_data2:
  1968  00277C  0009               	tblrd		*+
  1969  00277E  CFF5 FFEE          	movff	tablat,postinc0
  1970  002782  50E5               	movf	postdec1,w,c
  1971  002784  50E1               	movf	fsr1l,w,c
  1972  002786  E1FA               	bnz	copy_data2
  1973                           
  1974                           ; Initialize objects allocated to BANK0 (2 bytes)
  1975                           ; load TBLPTR registers with __pidataBANK0
  1976  002788  0E7A               	movlw	low __pidataBANK0
  1977  00278A  6EF6               	movwf	tblptrl,c
  1978  00278C  0E39               	movlw	high __pidataBANK0
  1979  00278E  6EF7               	movwf	tblptrh,c
  1980  002790  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1981  002792  6EF8               	movwf	tblptru,c
  1982  002794  0009               	tblrd		*+	;fetch initializer
  1983  002796  CFF5 F0BC          	movff	tablat,__pdataBANK0
  1984  00279A  0009               	tblrd		*+	;fetch initializer
  1985  00279C  CFF5 F0BD          	movff	tablat,__pdataBANK0+1
  1986                           
  1987                           ; Clear objects allocated to BANK4 (200 bytes)
  1988  0027A0  EE04  F000         	lfsr	0,__pbssBANK4
  1989  0027A4  0EC8               	movlw	200
  1990  0027A6                     clear_0:
  1991  0027A6  6AEE               	clrf	postinc0,c
  1992  0027A8  06E8               	decf	wreg,f,c
  1993  0027AA  E1FD               	bnz	clear_0
  1994                           
  1995                           ; Clear objects allocated to BANK3 (100 bytes)
  1996  0027AC  EE03  F000         	lfsr	0,__pbssBANK3
  1997  0027B0  0E64               	movlw	100
  1998  0027B2                     clear_1:
  1999  0027B2  6AEE               	clrf	postinc0,c
  2000  0027B4  06E8               	decf	wreg,f,c
  2001  0027B6  E1FD               	bnz	clear_1
  2002                           
  2003                           ; Clear objects allocated to BANK2 (100 bytes)
  2004  0027B8  EE02  F07C         	lfsr	0,__pbssBANK2
  2005  0027BC  0E64               	movlw	100
  2006  0027BE                     clear_2:
  2007  0027BE  6AEE               	clrf	postinc0,c
  2008  0027C0  06E8               	decf	wreg,f,c
  2009  0027C2  E1FD               	bnz	clear_2
  2010                           
  2011                           ; Clear objects allocated to BANK1 (90 bytes)
  2012  0027C4  EE01  F07F         	lfsr	0,__pbssBANK1
  2013  0027C8  0E5A               	movlw	90
  2014  0027CA                     clear_3:
  2015  0027CA  6AEE               	clrf	postinc0,c
  2016  0027CC  06E8               	decf	wreg,f,c
  2017  0027CE  E1FD               	bnz	clear_3
  2018                           
  2019                           ; Clear objects allocated to BANK0 (25 bytes)
  2020  0027D0  EE00  F0A3         	lfsr	0,__pbssBANK0
  2021  0027D4  0E19               	movlw	25
  2022  0027D6                     clear_4:
  2023  0027D6  6AEE               	clrf	postinc0,c
  2024  0027D8  06E8               	decf	wreg,f,c
  2025  0027DA  E1FD               	bnz	clear_4
  2026                           
  2027                           ; Clear objects allocated to COMRAM (4 bytes)
  2028  0027DC  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2029  0027DE  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2030  0027E0  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2031  0027E2  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2032  0027E4                     end_of_initialization:
  2033                           	opt callstack 0
  2034  0027E4                     __end_of__initialization:
  2035                           	opt callstack 0
  2036  0027E4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2037  0027E6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2038  0027E8  0100               	movlb	0
  2039  0027EA  EF5C  F010         	goto	_main	;jump to C main() function
  2040                           
  2041                           	psect	bssCOMRAM
  2042  000057                     __pbssCOMRAM:
  2043                           	opt callstack 0
  2044  000057                     _flags:
  2045                           	opt callstack 0
  2046  000057                     	ds	2
  2047  000059                     _eusart1RxHead:
  2048                           	opt callstack 0
  2049  000059                     	ds	1
  2050  00005A                     _eusart2RxHead:
  2051                           	opt callstack 0
  2052  00005A                     	ds	1
  2053                           
  2054                           	psect	bssBANK0
  2055  0000A3                     __pbssBANK0:
  2056                           	opt callstack 0
  2057  0000A3                     _width:
  2058                           	opt callstack 0
  2059  0000A3                     	ds	2
  2060  0000A5                     _prec:
  2061                           	opt callstack 0
  2062  0000A5                     	ds	2
  2063  0000A7                     _ByteHi:
  2064                           	opt callstack 0
  2065  0000A7                     	ds	2
  2066  0000A9                     _MBResCnt:
  2067                           	opt callstack 0
  2068  0000A9                     	ds	2
  2069  0000AB                     _ByteNum:
  2070                           	opt callstack 0
  2071  0000AB                     	ds	2
  2072  0000AD                     _ModDataCnt:
  2073                           	opt callstack 0
  2074  0000AD                     	ds	2
  2075  0000AF                     _rxStatus:
  2076                           	opt callstack 0
  2077  0000AF                     	ds	1
  2078  0000B0                     _RXStat:
  2079                           	opt callstack 0
  2080  0000B0                     	ds	1
  2081  0000B1                     _Debug:
  2082                           	opt callstack 0
  2083  0000B1                     	ds	1
  2084  0000B2                     _eusart1RxLastError:
  2085                           	opt callstack 0
  2086  0000B2                     	ds	1
  2087  0000B3                     _eusart1RxCount:
  2088                           	opt callstack 0
  2089  0000B3                     	ds	1
  2090  0000B4                     _eusart1RxTail:
  2091                           	opt callstack 0
  2092  0000B4                     	ds	1
  2093  0000B5                     _eusart1TxTail:
  2094                           	opt callstack 0
  2095  0000B5                     	ds	1
  2096  0000B6                     _eusart1TxHead:
  2097                           	opt callstack 0
  2098  0000B6                     	ds	1
  2099  0000B7                     _eusart2RxLastError:
  2100                           	opt callstack 0
  2101  0000B7                     	ds	1
  2102  0000B8                     _eusart2RxCount:
  2103                           	opt callstack 0
  2104  0000B8                     	ds	1
  2105  0000B9                     _eusart2RxTail:
  2106                           	opt callstack 0
  2107  0000B9                     	ds	1
  2108  0000BA                     _eusart2TxTail:
  2109                           	opt callstack 0
  2110  0000BA                     	ds	1
  2111  0000BB                     _eusart2TxHead:
  2112                           	opt callstack 0
  2113  0000BB                     	ds	1
  2114                           
  2115                           	psect	dataBANK0
  2116  0000BC                     __pdataBANK0:
  2117                           	opt callstack 0
  2118  0000BC                     _ByteLo:
  2119                           	opt callstack 0
  2120  0000BC                     	ds	2
  2121                           
  2122                           	psect	bssBANK1
  2123  00017F                     __pbssBANK1:
  2124                           	opt callstack 0
  2125  00017F                     _eusart1TxBuffer:
  2126                           	opt callstack 0
  2127  00017F                     	ds	16
  2128  00018F                     _eusart2RxStatusBuffer:
  2129                           	opt callstack 0
  2130  00018F                     	ds	8
  2131  000197                     _eusart2RxBuffer:
  2132                           	opt callstack 0
  2133  000197                     	ds	8
  2134  00019F                     _eusart2TxBuffer:
  2135                           	opt callstack 0
  2136  00019F                     	ds	8
  2137  0001A7                     _nout:
  2138                           	opt callstack 0
  2139  0001A7                     	ds	2
  2140  0001A9                     _dbuf:
  2141                           	opt callstack 0
  2142  0001A9                     	ds	32
  2143  0001C9                     _Command:
  2144                           	opt callstack 0
  2145  0001C9                     	ds	16
  2146                           
  2147                           	psect	dataBANK1
  2148  000100                     __pdataBANK1:
  2149                           	opt callstack 0
  2150  000100                     _MB301xx:
  2151                           	opt callstack 0
  2152  000100                     	ds	14
  2153  00010E                     _MB304xx:
  2154                           	opt callstack 0
  2155  00010E                     	ds	10
  2156  000118                     _MB303xx:
  2157                           	opt callstack 0
  2158  000118                     	ds	8
  2159  000120                     stoa@F1139:
  2160                           	opt callstack 0
  2161  000120                     	ds	7
  2162  000127                     _MB307xx:
  2163                           	opt callstack 0
  2164  000127                     	ds	6
  2165  00012D                     _MB305xx:
  2166                           	opt callstack 0
  2167  00012D                     	ds	6
  2168  000133                     _MB306xx:
  2169                           	opt callstack 0
  2170  000133                     	ds	4
  2171  000137                     ReadRX232@F10695:
  2172                           	opt callstack 0
  2173  000137                     	ds	2
  2174  000139                     _MB302xx:
  2175                           	opt callstack 0
  2176  000139                     	ds	2
  2177  00013B                     _MBResCRC:
  2178                           	opt callstack 0
  2179  00013B                     	ds	2
  2180  00013D                     _ExpectedBytes:
  2181                           	opt callstack 0
  2182  00013D                     	ds	2
  2183  00013F                     _MBRespon:
  2184                           	opt callstack 0
  2185  00013F                     	ds	64
  2186                           
  2187                           	psect	bssBANK2
  2188  00027C                     __pbssBANK2:
  2189                           	opt callstack 0
  2190  00027C                     _ModbusData:
  2191                           	opt callstack 0
  2192  00027C                     	ds	100
  2193                           
  2194                           	psect	dataBANK2
  2195  000200                     __pdataBANK2:
  2196                           	opt callstack 0
  2197  000200                     _MB300xx:
  2198                           	opt callstack 0
  2199  000200                     	ds	64
  2200  000240                     ValidateCmd@F10725:
  2201                           	opt callstack 0
  2202  000240                     	ds	20
  2203  000254                     ValidateCmd@F10722:
  2204                           	opt callstack 0
  2205  000254                     	ds	20
  2206  000268                     ValidateCmd@F10719:
  2207                           	opt callstack 0
  2208  000268                     	ds	20
  2209                           
  2210                           	psect	bssBANK3
  2211  000300                     __pbssBANK3:
  2212                           	opt callstack 0
  2213  000300                     _eusart1RxStatusBuffer:
  2214                           	opt callstack 0
  2215  000300                     	ds	100
  2216                           
  2217                           	psect	dataBANK3
  2218  000364                     __pdataBANK3:
  2219                           	opt callstack 0
  2220  000364                     _MB400xx:
  2221                           	opt callstack 0
  2222  000364                     	ds	64
  2223                           
  2224                           	psect	bssBANK4
  2225  000400                     __pbssBANK4:
  2226                           	opt callstack 0
  2227  000400                     _rxData:
  2228                           	opt callstack 0
  2229  000400                     	ds	100
  2230  000464                     _eusart1RxBuffer:
  2231                           	opt callstack 0
  2232  000464                     	ds	100
  2233                           
  2234                           	psect	cstackBANK3
  2235  0003A4                     __pcstackBANK3:
  2236                           	opt callstack 0
  2237  0003A4                     ValidateCmd@ConfName:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 20 bytes @ 0x0
  2241  0003A4                     	ds	20
  2242  0003B8                     ValidateCmd@ConfName_1423:
  2243                           	opt callstack 0
  2244                           
  2245                           ; 20 bytes @ 0x14
  2246  0003B8                     	ds	20
  2247  0003CC                     ValidateCmd@ConfName_1427:
  2248                           	opt callstack 0
  2249                           
  2250                           ; 20 bytes @ 0x28
  2251  0003CC                     	ds	20
  2252                           
  2253                           	psect	cstackBANK0
  2254  000060                     __pcstackBANK0:
  2255                           	opt callstack 0
  2256  000060                     vfpfcnvrt@ll:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 8 bytes @ 0x0
  2260  000060                     	ds	8
  2261  000068                     vfpfcnvrt@cp:
  2262                           	opt callstack 0
  2263                           
  2264                           ; 2 bytes @ 0x8
  2265  000068                     	ds	2
  2266  00006A                     vfpfcnvrt@c:
  2267                           	opt callstack 0
  2268                           
  2269                           ; 1 bytes @ 0xA
  2270  00006A                     	ds	1
  2271  00006B                     vfpfcnvrt@done:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 2 bytes @ 0xB
  2275  00006B                     	ds	2
  2276  00006D                     _vfpfcnvrt$1546:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 2 bytes @ 0xD
  2280  00006D                     	ds	2
  2281  00006F                     vfpfcnvrt@llu:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 8 bytes @ 0xF
  2285  00006F                     	ds	8
  2286  000077                     ?_vfprintf:
  2287                           	opt callstack 0
  2288  000077                     vfprintf@fp:
  2289                           	opt callstack 0
  2290                           
  2291                           ; 2 bytes @ 0x17
  2292  000077                     	ds	2
  2293  000079                     vfprintf@fmt:
  2294                           	opt callstack 0
  2295                           
  2296                           ; 2 bytes @ 0x19
  2297  000079                     	ds	2
  2298  00007B                     vfprintf@ap:
  2299                           	opt callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x1B
  2302  00007B                     	ds	2
  2303  00007D                     ?_printf:
  2304                           	opt callstack 0
  2305  00007D                     printf@fmt:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x1D
  2309  00007D                     	ds	12
  2310  000089                     printf@ap:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x29
  2314  000089                     	ds	2
  2315  00008B                     ??_checkCRC:
  2316  00008B                     ?_ReadRX232:
  2317                           	opt callstack 0
  2318  00008B                     AddRxBuffToModBus@i:
  2319                           	opt callstack 0
  2320  00008B                     PrintModbus@i:
  2321                           	opt callstack 0
  2322  00008B                     PrintModRespon@i:
  2323                           	opt callstack 0
  2324  00008B                     ReadRX232@NumChars:
  2325                           	opt callstack 0
  2326  00008B                     ClearEEAddRange@StartAdd:
  2327                           	opt callstack 0
  2328                           
  2329                           ; 2 bytes @ 0x2B
  2330  00008B                     	ds	2
  2331  00008D                     ??_ModbusFC03:
  2332  00008D                     ??_ModbusFC10:
  2333  00008D                     ModbusError@ErrorCode:
  2334                           	opt callstack 0
  2335  00008D                     ClearEEAddRange@NumBytes:
  2336                           	opt callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x2D
  2339  00008D                     	ds	2
  2340  00008F                     ??_ModbusError:
  2341  00008F                     SaveCardDat@Name:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x2F
  2345  00008F                     	ds	1
  2346  000090                     checkCRC@crcHigh:
  2347                           	opt callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x30
  2350  000090                     	ds	1
  2351  000091                     ModbusFC03@i:
  2352                           	opt callstack 0
  2353  000091                     ModbusFC10@TempData:
  2354                           	opt callstack 0
  2355  000091                     SaveCardDat@MBAddress:
  2356                           	opt callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x31
  2359  000091                     	ds	1
  2360  000092                     checkCRC@crcLow:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x32
  2364  000092                     	ds	1
  2365  000093                     ModbusFC10@i:
  2366                           	opt callstack 0
  2367  000093                     SaveCardDat@dataeeAddr:
  2368                           	opt callstack 0
  2369                           
  2370                           ; 2 bytes @ 0x33
  2371  000093                     	ds	1
  2372  000094                     checkCRC@j:
  2373                           	opt callstack 0
  2374                           
  2375                           ; 2 bytes @ 0x34
  2376  000094                     	ds	1
  2377  000095                     ModbusFC10@j:
  2378                           	opt callstack 0
  2379  000095                     SaveCardDat@NumBytes:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x35
  2383  000095                     	ds	1
  2384  000096                     checkCRC@crc:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 2 bytes @ 0x36
  2388  000096                     	ds	1
  2389  000097                     ??_SaveCardDat:
  2390                           
  2391                           ; 1 bytes @ 0x37
  2392  000097                     	ds	1
  2393  000098                     checkCRC@i:
  2394                           	opt callstack 0
  2395                           
  2396                           ; 2 bytes @ 0x38
  2397  000098                     	ds	1
  2398  000099                     _SaveCardDat$2413:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x39
  2402  000099                     	ds	2
  2403  00009B                     SaveCardDat@readData:
  2404                           	opt callstack 0
  2405                           
  2406                           ; 1 bytes @ 0x3B
  2407  00009B                     	ds	1
  2408  00009C                     SaveCardDat@Conf:
  2409                           	opt callstack 0
  2410                           
  2411                           ; 1 bytes @ 0x3C
  2412  00009C                     	ds	1
  2413  00009D                     SaveCardDat@dataeeAddrWrk:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x3D
  2417  00009D                     	ds	2
  2418  00009F                     SaveCardDat@i:
  2419                           	opt callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x3F
  2422  00009F                     	ds	2
  2423  0000A1                     ??_main:
  2424                           
  2425                           ; 1 bytes @ 0x41
  2426  0000A1                     	ds	2
  2427                           
  2428                           	psect	cstackCOMRAM
  2429  000001                     __pcstackCOMRAM:
  2430                           	opt callstack 0
  2431  000001                     ??_INTERRUPT_InterruptManager:
  2432  000001                     
  2433                           ; 1 bytes @ 0x0
  2434  000001                     	ds	4
  2435  000005                     ??_ClearRxBuff:
  2436  000005                     ?_generateCRC:
  2437                           	opt callstack 0
  2438  000005                     ?_strlen:
  2439                           	opt callstack 0
  2440  000005                     ?_strcmp:
  2441                           	opt callstack 0
  2442  000005                     ?_isupper:
  2443                           	opt callstack 0
  2444  000005                     ?_isalpha:
  2445                           	opt callstack 0
  2446  000005                     ?_isdigit:
  2447                           	opt callstack 0
  2448  000005                     ?_isspace:
  2449                           	opt callstack 0
  2450  000005                     ?_islower:
  2451                           	opt callstack 0
  2452  000005                     ?___wmul:
  2453                           	opt callstack 0
  2454  000005                     ?___aodiv:
  2455                           	opt callstack 0
  2456  000005                     ?___aomod:
  2457                           	opt callstack 0
  2458  000005                     ?___lodiv:
  2459                           	opt callstack 0
  2460  000005                     ?___lomod:
  2461                           	opt callstack 0
  2462  000005                     EUSART2_Read@readValue:
  2463                           	opt callstack 0
  2464  000005                     EUSART2_Write@txData:
  2465                           	opt callstack 0
  2466  000005                     EUSART1_Read@readValue:
  2467                           	opt callstack 0
  2468  000005                     EUSART1_Write@txData:
  2469                           	opt callstack 0
  2470  000005                     DATAEE_WriteByte@bAdd:
  2471                           	opt callstack 0
  2472  000005                     DATAEE_ReadByte@bAdd:
  2473                           	opt callstack 0
  2474  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  2475                           	opt callstack 0
  2476  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  2477                           	opt callstack 0
  2478  000005                     EUSART2_SetErrorHandler@interruptHandler:
  2479                           	opt callstack 0
  2480  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2481                           	opt callstack 0
  2482  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2483                           	opt callstack 0
  2484  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2485                           	opt callstack 0
  2486  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2487                           	opt callstack 0
  2488  000005                     EUSART1_SetErrorHandler@interruptHandler:
  2489                           	opt callstack 0
  2490  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  2491                           	opt callstack 0
  2492  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  2493                           	opt callstack 0
  2494  000005                     ClearModbusData@i:
  2495                           	opt callstack 0
  2496  000005                     generateCRC@MessCnt:
  2497                           	opt callstack 0
  2498  000005                     ClearModbusRespon@i:
  2499                           	opt callstack 0
  2500  000005                     ___wmul@multiplier:
  2501                           	opt callstack 0
  2502  000005                     isalpha@c:
  2503                           	opt callstack 0
  2504  000005                     isdigit@c:
  2505                           	opt callstack 0
  2506  000005                     isspace@c:
  2507                           	opt callstack 0
  2508  000005                     isupper@c:
  2509                           	opt callstack 0
  2510  000005                     strcmp@l:
  2511                           	opt callstack 0
  2512  000005                     strlen@s:
  2513                           	opt callstack 0
  2514  000005                     islower@c:
  2515                           	opt callstack 0
  2516  000005                     ___aodiv@dividend:
  2517                           	opt callstack 0
  2518  000005                     ___aomod@dividend:
  2519                           	opt callstack 0
  2520  000005                     ___lodiv@dividend:
  2521                           	opt callstack 0
  2522  000005                     ___lomod@dividend:
  2523                           	opt callstack 0
  2524                           
  2525                           ; 8 bytes @ 0x4
  2526  000005                     	ds	1
  2527  000006                     putch@txData:
  2528                           	opt callstack 0
  2529  000006                     ClearRxBuff@i:
  2530                           	opt callstack 0
  2531  000006                     UART1_Write_string@data:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x5
  2535  000006                     	ds	1
  2536  000007                     ??_isupper:
  2537  000007                     ??_isalpha:
  2538  000007                     ??_isdigit:
  2539  000007                     ??_isspace:
  2540  000007                     ??_islower:
  2541  000007                     DATAEE_WriteByte@bData:
  2542                           	opt callstack 0
  2543  000007                     generateCRC@HiOrLo:
  2544                           	opt callstack 0
  2545  000007                     ___wmul@multiplicand:
  2546                           	opt callstack 0
  2547  000007                     fputc@c:
  2548                           	opt callstack 0
  2549  000007                     strcmp@r:
  2550                           	opt callstack 0
  2551  000007                     strlen@a:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x6
  2555  000007                     	ds	1
  2556  000008                     ??_generateCRC:
  2557  000008                     DATAEE_WriteByte@GIEBitValue:
  2558                           	opt callstack 0
  2559  000008                     UART1_Write_string@data_len:
  2560                           	opt callstack 0
  2561                           
  2562                           ; 2 bytes @ 0x7
  2563  000008                     	ds	1
  2564  000009                     ??_strcmp:
  2565  000009                     ___wmul@product:
  2566                           	opt callstack 0
  2567  000009                     memmove@d1:
  2568                           	opt callstack 0
  2569  000009                     fputc@fp:
  2570                           	opt callstack 0
  2571  000009                     strcpy@dest:
  2572                           	opt callstack 0
  2573                           
  2574                           ; 2 bytes @ 0x8
  2575  000009                     	ds	1
  2576  00000A                     ??_UART1_Write_string:
  2577  00000A                     generateCRC@crcHigh:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 2 bytes @ 0x9
  2581  00000A                     	ds	1
  2582  00000B                     ??_fputc:
  2583  00000B                     ?_toupper:
  2584                           	opt callstack 0
  2585  00000B                     _isspace$2033:
  2586                           	opt callstack 0
  2587  00000B                     UART1_Write_string@i:
  2588                           	opt callstack 0
  2589  00000B                     memmove@s1:
  2590                           	opt callstack 0
  2591  00000B                     strcpy@src:
  2592                           	opt callstack 0
  2593  00000B                     toupper@c:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 2 bytes @ 0xA
  2597  00000B                     	ds	1
  2598  00000C                     ?_atoi:
  2599                           	opt callstack 0
  2600  00000C                     generateCRC@crcLow:
  2601                           	opt callstack 0
  2602  00000C                     atoi@s:
  2603                           	opt callstack 0
  2604                           
  2605                           ; 2 bytes @ 0xB
  2606  00000C                     	ds	1
  2607  00000D                     ??_strcpy:
  2608  00000D                     ??_toupper:
  2609  00000D                     memmove@n:
  2610                           	opt callstack 0
  2611  00000D                     ___aodiv@divisor:
  2612                           	opt callstack 0
  2613  00000D                     ___aomod@divisor:
  2614                           	opt callstack 0
  2615  00000D                     ___lodiv@divisor:
  2616                           	opt callstack 0
  2617  00000D                     ___lomod@divisor:
  2618                           	opt callstack 0
  2619                           
  2620                           ; 8 bytes @ 0xC
  2621  00000D                     	ds	1
  2622  00000E                     ??_atoi:
  2623  00000E                     generateCRC@i:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 2 bytes @ 0xD
  2627  00000E                     	ds	1
  2628  00000F                     ??_memmove:
  2629  00000F                     strcpy@s:
  2630                           	opt callstack 0
  2631                           
  2632                           ; 2 bytes @ 0xE
  2633  00000F                     	ds	1
  2634  000010                     ?_stoa:
  2635                           	opt callstack 0
  2636  000010                     generateCRC@j:
  2637                           	opt callstack 0
  2638  000010                     stoa@fp:
  2639                           	opt callstack 0
  2640  000010                     fputs@s:
  2641                           	opt callstack 0
  2642                           
  2643                           ; 2 bytes @ 0xF
  2644  000010                     	ds	1
  2645  000011                     memmove@d:
  2646                           	opt callstack 0
  2647  000011                     strcpy@d:
  2648                           	opt callstack 0
  2649  000011                     _toupper$2120:
  2650                           	opt callstack 0
  2651                           
  2652                           ; 2 bytes @ 0x10
  2653  000011                     	ds	1
  2654  000012                     generateCRC@crc:
  2655                           	opt callstack 0
  2656  000012                     stoa@s:
  2657                           	opt callstack 0
  2658  000012                     atoi@neg:
  2659                           	opt callstack 0
  2660  000012                     fputs@fp:
  2661                           	opt callstack 0
  2662                           
  2663                           ; 2 bytes @ 0x11
  2664  000012                     	ds	1
  2665  000013                     memmove@s:
  2666                           	opt callstack 0
  2667  000013                     strcat@dest:
  2668                           	opt callstack 0
  2669                           
  2670                           ; 2 bytes @ 0x12
  2671  000013                     	ds	1
  2672  000014                     ??_stoa:
  2673  000014                     fputs@c:
  2674                           	opt callstack 0
  2675  000014                     _atoi$2006:
  2676                           	opt callstack 0
  2677                           
  2678                           ; 2 bytes @ 0x13
  2679  000014                     	ds	1
  2680  000015                     ___aodiv@counter:
  2681                           	opt callstack 0
  2682  000015                     ___aomod@counter:
  2683                           	opt callstack 0
  2684  000015                     ___lomod@counter:
  2685                           	opt callstack 0
  2686  000015                     fputs@i:
  2687                           	opt callstack 0
  2688  000015                     strcat@src:
  2689                           	opt callstack 0
  2690  000015                     stoa@nuls:
  2691                           	opt callstack 0
  2692  000015                     ___lodiv@quotient:
  2693                           	opt callstack 0
  2694                           
  2695                           ; 8 bytes @ 0x14
  2696  000015                     	ds	1
  2697  000016                     ___aodiv@sign:
  2698                           	opt callstack 0
  2699  000016                     ___aomod@sign:
  2700                           	opt callstack 0
  2701  000016                     _atoi$2008:
  2702                           	opt callstack 0
  2703                           
  2704                           ; 2 bytes @ 0x15
  2705  000016                     	ds	1
  2706  000017                     ?_abs:
  2707                           	opt callstack 0
  2708  000017                     ?_pad:
  2709                           	opt callstack 0
  2710  000017                     pad@fp:
  2711                           	opt callstack 0
  2712  000017                     abs@a:
  2713                           	opt callstack 0
  2714  000017                     ___aodiv@quotient:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 8 bytes @ 0x16
  2718  000017                     	ds	1
  2719  000018                     _atoi$2007:
  2720                           	opt callstack 0
  2721                           
  2722                           ; 1 bytes @ 0x17
  2723  000018                     	ds	1
  2724  000019                     ??_abs:
  2725  000019                     pad@buf:
  2726                           	opt callstack 0
  2727  000019                     atoi@n:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 2 bytes @ 0x18
  2731  000019                     	ds	2
  2732  00001B                     pad@p:
  2733                           	opt callstack 0
  2734                           
  2735                           ; 2 bytes @ 0x1A
  2736  00001B                     	ds	1
  2737  00001C                     stoa@i:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 2 bytes @ 0x1B
  2741  00001C                     	ds	1
  2742  00001D                     ??_pad:
  2743  00001D                     ___lodiv@counter:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 1 bytes @ 0x1C
  2747  00001D                     	ds	1
  2748  00001E                     pad@i:
  2749                           	opt callstack 0
  2750  00001E                     stoa@w:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 2 bytes @ 0x1D
  2754  00001E                     	ds	2
  2755  000020                     pad@w:
  2756                           	opt callstack 0
  2757  000020                     stoa@cp:
  2758                           	opt callstack 0
  2759                           
  2760                           ; 2 bytes @ 0x1F
  2761  000020                     	ds	2
  2762  000022                     ?_dtoa:
  2763                           	opt callstack 0
  2764  000022                     ?_utoa:
  2765                           	opt callstack 0
  2766  000022                     ?_xtoa:
  2767                           	opt callstack 0
  2768  000022                     dtoa@fp:
  2769                           	opt callstack 0
  2770  000022                     stoa@p:
  2771                           	opt callstack 0
  2772  000022                     utoa@fp:
  2773                           	opt callstack 0
  2774  000022                     xtoa@fp:
  2775                           	opt callstack 0
  2776                           
  2777                           ; 2 bytes @ 0x21
  2778  000022                     	ds	2
  2779  000024                     stoa@l:
  2780                           	opt callstack 0
  2781  000024                     dtoa@d:
  2782                           	opt callstack 0
  2783  000024                     utoa@d:
  2784                           	opt callstack 0
  2785  000024                     xtoa@d:
  2786                           	opt callstack 0
  2787                           
  2788                           ; 8 bytes @ 0x23
  2789  000024                     	ds	8
  2790  00002C                     ??_dtoa:
  2791  00002C                     ??_utoa:
  2792  00002C                     xtoa@x:
  2793                           	opt callstack 0
  2794                           
  2795                           ; 1 bytes @ 0x2B
  2796  00002C                     	ds	1
  2797  00002D                     ??_xtoa:
  2798                           
  2799                           ; 1 bytes @ 0x2C
  2800  00002D                     	ds	7
  2801  000034                     _dtoa$1502:
  2802                           	opt callstack 0
  2803  000034                     utoa@p:
  2804                           	opt callstack 0
  2805                           
  2806                           ; 2 bytes @ 0x33
  2807  000034                     	ds	1
  2808  000035                     _xtoa$1531:
  2809                           	opt callstack 0
  2810                           
  2811                           ; 2 bytes @ 0x34
  2812  000035                     	ds	1
  2813  000036                     dtoa@p:
  2814                           	opt callstack 0
  2815  000036                     utoa@w:
  2816                           	opt callstack 0
  2817                           
  2818                           ; 2 bytes @ 0x35
  2819  000036                     	ds	1
  2820  000037                     _xtoa$1532:
  2821                           	opt callstack 0
  2822                           
  2823                           ; 2 bytes @ 0x36
  2824  000037                     	ds	1
  2825  000038                     dtoa@w:
  2826                           	opt callstack 0
  2827  000038                     utoa@n:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 8 bytes @ 0x37
  2831  000038                     	ds	1
  2832  000039                     xtoa@p:
  2833                           	opt callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x38
  2836  000039                     	ds	1
  2837  00003A                     dtoa@s:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 2 bytes @ 0x39
  2841  00003A                     	ds	1
  2842  00003B                     xtoa@w:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 2 bytes @ 0x3A
  2846  00003B                     	ds	1
  2847  00003C                     dtoa@n:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 8 bytes @ 0x3B
  2851  00003C                     	ds	1
  2852  00003D                     xtoa@n:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 8 bytes @ 0x3C
  2856  00003D                     	ds	3
  2857  000040                     utoa@i:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0x3F
  2861  000040                     	ds	4
  2862  000044                     dtoa@i:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 2 bytes @ 0x43
  2866  000044                     	ds	1
  2867  000045                     xtoa@i:
  2868                           	opt callstack 0
  2869                           
  2870                           ; 2 bytes @ 0x44
  2871  000045                     	ds	2
  2872  000047                     xtoa@c:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 2 bytes @ 0x46
  2876  000047                     	ds	2
  2877  000049                     ?_vfpfcnvrt:
  2878                           	opt callstack 0
  2879  000049                     vfpfcnvrt@fp:
  2880                           	opt callstack 0
  2881                           
  2882                           ; 2 bytes @ 0x48
  2883  000049                     	ds	2
  2884  00004B                     vfpfcnvrt@fmt:
  2885                           	opt callstack 0
  2886                           
  2887                           ; 2 bytes @ 0x4A
  2888  00004B                     	ds	2
  2889  00004D                     vfpfcnvrt@ap:
  2890                           	opt callstack 0
  2891                           
  2892                           ; 2 bytes @ 0x4C
  2893  00004D                     	ds	2
  2894  00004F                     ??_vfpfcnvrt:
  2895                           
  2896                           ; 1 bytes @ 0x4E
  2897  00004F                     	ds	4
  2898  000053                     vfprintf@cfmt:
  2899                           	opt callstack 0
  2900                           
  2901                           ; 2 bytes @ 0x52
  2902  000053                     	ds	2
  2903  000055                     ??_PrintModbus:
  2904  000055                     ??_PrintModRespon:
  2905  000055                     ??_AddRxBuffToModBus:
  2906  000055                     PrintMB400@i:
  2907                           	opt callstack 0
  2908  000055                     ReadRX232@temp:
  2909                           	opt callstack 0
  2910  000055                     ClearEEAddRange@i:
  2911                           	opt callstack 0
  2912                           
  2913                           ; 2 bytes @ 0x54
  2914  000055                     	ds	1
  2915  000056                     ??_ModbusRx:
  2916                           
  2917                           ; 1 bytes @ 0x55
  2918  000056                     	ds	1
  2919  000057                     
  2920                           ; 1 bytes @ 0x56
  2921 ;;
  2922 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2923 ;;
  2924 ;; *************** function _main *****************
  2925 ;; Defined at:
  2926 ;;		line 29 in file "main.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  RXStat          1    0        _Bool 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;Total ram usage:        3 bytes
  2945 ;; Hardware stack levels required when called:   16
  2946 ;; This function calls:
  2947 ;;		_ClearModbusData
  2948 ;;		_ClearModbusRespon
  2949 ;;		_ClearRxBuff
  2950 ;;		_InitialiseString
  2951 ;;		_ModbusError
  2952 ;;		_ModbusFC03
  2953 ;;		_ModbusFC10
  2954 ;;		_ModbusRx
  2955 ;;		_PrintMB400
  2956 ;;		_PrintModbus
  2957 ;;		_RXMode
  2958 ;;		_ReadRX232
  2959 ;;		_SYSTEM_Initialize
  2960 ;;		_ValidateCmd
  2961 ;;		_printf
  2962 ;;		_strcpy
  2963 ;; This function is called by:
  2964 ;;		Startup code after reset
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text0
  2969  0020B8                     __ptext0:
  2970                           	opt callstack 0
  2971  0020B8                     _main:
  2972                           	opt callstack 15
  2973  0020B8                     
  2974                           ;main.c: 32:     SYSTEM_Initialize();
  2975  0020B8  EC1E  F01C         	call	_SYSTEM_Initialize	;wreg free
  2976  0020BC                     
  2977                           ;main.c: 39:     (INTCONbits.GIE = 1);
  2978  0020BC  8EF2               	bsf	242,7,c	;volatile
  2979  0020BE                     
  2980                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  2981  0020BE  8CF2               	bsf	242,6,c	;volatile
  2982  0020C0  9883               	bcf	131,4,c	;volatile
  2983  0020C2  9A83               	bcf	131,5,c	;volatile
  2984  0020C4  9C83               	bcf	131,6,c	;volatile
  2985  0020C6  9E83               	bcf	131,7,c	;volatile
  2986  0020C8                     
  2987                           ;main.c: 55:     InitialiseString();
  2988  0020C8  EC63  F015         	call	_InitialiseString	;wreg free
  2989  0020CC                     
  2990                           ;main.c: 58:     RXMode();
  2991  0020CC  ECAC  F01C         	call	_RXMode	;wreg free
  2992  0020D0                     
  2993                           ;main.c: 59:     ClearRxBuff();
  2994  0020D0  EC51  F01A         	call	_ClearRxBuff	;wreg free
  2995  0020D4                     
  2996                           ;main.c: 60:     ClearModbusRespon();
  2997  0020D4  ECDF  F019         	call	_ClearModbusRespon	;wreg free
  2998  0020D8                     l6826:
  2999                           
  3000                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  3001  0020D8  EC2A  F00F         	call	_ModbusRx	;wreg free
  3002  0020DC  06E8               	decf	wreg,f,c
  3003  0020DE  A4D8               	btfss	status,2,c
  3004  0020E0  EF74  F010         	goto	u6761
  3005  0020E4  EF76  F010         	goto	u6760
  3006  0020E8                     u6761:
  3007  0020E8  EFC3  F010         	goto	l6854
  3008  0020EC                     u6760:
  3009  0020EC                     
  3010                           ;main.c: 70:             if(Debug == 1){
  3011  0020EC  0100               	movlb	0	; () banked
  3012  0020EE  05B1               	decf	_Debug& (0+255),w,b
  3013  0020F0  A4D8               	btfss	status,2,c
  3014  0020F2  EF7D  F010         	goto	u6771
  3015  0020F6  EF7F  F010         	goto	u6770
  3016  0020FA                     u6771:
  3017  0020FA  EFAC  F010         	goto	l6852
  3018  0020FE                     u6770:
  3019  0020FE                     
  3020                           ; BSR set to: 0
  3021                           ;main.c: 71:                 PrintModbus();
  3022  0020FE  ECF1  F015         	call	_PrintModbus	;wreg free
  3023  002102  EFAC  F010         	goto	l6852
  3024  002106                     l6832:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;main.c: 77:                 {;main.c: 78:                     printf("Function Code 0x0
      +                          3\r\n");
  3028  002106  0E54               	movlw	low STR_1
  3029  002108  6F7D               	movwf	printf@fmt& (0+255),b
  3030  00210A  0EFF               	movlw	high STR_1
  3031  00210C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3032  00210E  ECD6  F01B         	call	_printf	;wreg free
  3033                           
  3034                           ;main.c: 81:                     ModbusFC03();
  3035  002112  ECA5  F009         	call	_ModbusFC03	;wreg free
  3036  002116                     l6834:
  3037                           
  3038                           ;main.c: 82:                     ClearModbusData();
  3039  002116  EC05  F01A         	call	_ClearModbusData	;wreg free
  3040  00211A                     
  3041                           ;main.c: 83:                     ClearModbusRespon();
  3042  00211A  ECDF  F019         	call	_ClearModbusRespon	;wreg free
  3043                           
  3044                           ;main.c: 84:                     break;
  3045  00211E  EF6C  F010         	goto	l6826
  3046  002122                     l6838:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;main.c: 87:                 {;main.c: 88:                     printf("Function Code 0x1
      +                          0\r\n");
  3050  002122  0E3F               	movlw	low STR_2
  3051  002124  6F7D               	movwf	printf@fmt& (0+255),b
  3052  002126  0EFF               	movlw	high STR_2
  3053  002128  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3054  00212A  ECD6  F01B         	call	_printf	;wreg free
  3055                           
  3056                           ;main.c: 90:                     PrintMB400();
  3057  00212E  ECE4  F017         	call	_PrintMB400	;wreg free
  3058                           
  3059                           ;main.c: 91:                     ModbusFC10();
  3060  002132  EC7F  F007         	call	_ModbusFC10	;wreg free
  3061  002136  EF8B  F010         	goto	l6834
  3062  00213A                     l6844:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;main.c: 98:                 {;main.c: 99:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  3066  00213A  0E30               	movlw	low STR_3
  3067  00213C  6F7D               	movwf	printf@fmt& (0+255),b
  3068  00213E  0EFE               	movlw	high STR_3
  3069  002140  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3070  002142  ECD6  F01B         	call	_printf	;wreg free
  3071                           
  3072                           ;main.c: 101:                     ModbusError(0x01);
  3073  002146  0E00               	movlw	0
  3074  002148  0100               	movlb	0	; () banked
  3075  00214A  6F8E               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  3076  00214C  0E01               	movlw	1
  3077  00214E  6F8D               	movwf	ModbusError@ErrorCode& (0+255),b
  3078  002150  ECE6  F010         	call	_ModbusError	;wreg free
  3079  002154  EF8B  F010         	goto	l6834
  3080  002158                     l6852:
  3081  002158  0102               	movlb	2	; () banked
  3082  00215A  517D               	movf	(_ModbusData+1)& (0+255),w,b
  3083  00215C  0100               	movlb	0	; () banked
  3084  00215E  6FA1               	movwf	??_main& (0+255),b
  3085  002160  6BA2               	clrf	(??_main+1)& (0+255),b
  3086                           
  3087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3088                           ; Switch size 1, requested type "simple"
  3089                           ; Number of cases is 1, Range of values is 0 to 0
  3090                           ; switch strategies available:
  3091                           ; Name         Instructions Cycles
  3092                           ; simple_byte            4     3 (average)
  3093                           ;	Chosen strategy is simple_byte
  3094  002162  51A2               	movf	(??_main+1)& (0+255),w,b
  3095  002164  0A00               	xorlw	0	; case 0
  3096  002166  B4D8               	btfsc	status,2,c
  3097  002168  EFB8  F010         	goto	l7020
  3098  00216C  EF9D  F010         	goto	l6844
  3099  002170                     l7020:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 2, Range of values is 3 to 16
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte            7     4 (average)
  3107                           ;	Chosen strategy is simple_byte
  3108  002170  51A1               	movf	??_main& (0+255),w,b
  3109  002172  0A03               	xorlw	3	; case 3
  3110  002174  B4D8               	btfsc	status,2,c
  3111  002176  EF83  F010         	goto	l6832
  3112  00217A  0A13               	xorlw	19	; case 16
  3113  00217C  B4D8               	btfsc	status,2,c
  3114  00217E  EF91  F010         	goto	l6838
  3115  002182  EF9D  F010         	goto	l6844
  3116  002186                     l6854:
  3117  002186  0E00               	movlw	0
  3118  002188  0100               	movlb	0	; () banked
  3119  00218A  6F8C               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  3120  00218C  0E10               	movlw	16
  3121  00218E  6F8B               	movwf	ReadRX232@NumChars& (0+255),b
  3122  002190  ECCA  F00F         	call	_ReadRX232	;wreg free
  3123  002194  0100               	movlb	0	; () banked
  3124  002196  518B               	movf	?_ReadRX232& (0+255),w,b
  3125  002198  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3126  00219A  B4D8               	btfsc	status,2,c
  3127  00219C  EFD2  F010         	goto	u6781
  3128  0021A0  EFD4  F010         	goto	u6780
  3129  0021A4                     u6781:
  3130  0021A4  EFE2  F010         	goto	l580
  3131  0021A8                     u6780:
  3132  0021A8                     
  3133                           ; BSR set to: 0
  3134                           ;main.c: 109:             if(ValidateCmd() ==1){
  3135  0021A8  EC9D  F00A         	call	_ValidateCmd	;wreg free
  3136  0021AC                     
  3137                           ;main.c: 117:              strcpy(Command, "");
  3138  0021AC  0EC9               	movlw	low _Command
  3139  0021AE  6E09               	movwf	strcpy@dest^0,c
  3140  0021B0  0E01               	movlw	high _Command
  3141  0021B2  6E0A               	movwf	(strcpy@dest+1)^0,c
  3142  0021B4  0E3E               	movlw	low (STR_17+20)
  3143  0021B6  6E0B               	movwf	strcpy@src^0,c
  3144  0021B8  0EFF               	movlw	high (STR_17+20)
  3145  0021BA  6E0C               	movwf	(strcpy@src+1)^0,c
  3146  0021BC  EC7A  F018         	call	_strcpy	;wreg free
  3147                           
  3148                           ;main.c: 119:         }else{
  3149  0021C0  EF6C  F010         	goto	l6826
  3150  0021C4                     l580:
  3151                           
  3152                           ; BSR set to: 0
  3153  0021C4  EF6C  F010         	goto	l6826
  3154  0021C8  EF93  F000         	goto	start
  3155  0021CC                     __end_of_main:
  3156                           	opt callstack 0
  3157                           
  3158 ;; *************** function _ValidateCmd *****************
  3159 ;; Defined at:
  3160 ;;		line 260 in file "RS232.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  ConfName       20   40[BANK3 ] unsigned char [20]
  3165 ;;  MaxChars        2    0        int 
  3166 ;;  ConfName       20   20[BANK3 ] unsigned char [20]
  3167 ;;  MaxChars        2    0        int 
  3168 ;;  ConfName       20    0[BANK3 ] unsigned char [20]
  3169 ;;  MaxChars        2    0        int 
  3170 ;;  i               2    0        int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      _Bool 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Locals:         0       0       0       0      68       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Totals:         0       0       0       0      68       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;Total ram usage:       68 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:   15
  3187 ;; This function calls:
  3188 ;;		_InitialiseString
  3189 ;;		_SaveCardDat
  3190 ;;		_TogDebug
  3191 ;;		_printf
  3192 ;;		_strcmp
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text1
  3199  00153A                     __ptext1:
  3200                           	opt callstack 0
  3201  00153A                     _ValidateCmd:
  3202                           	opt callstack 15
  3203  00153A                     
  3204                           ;RS232.c: 265:     printf("\r\n Validating Command: %s \r\n" , Command);
  3205  00153A  0EDA               	movlw	low STR_54
  3206  00153C  0100               	movlb	0	; () banked
  3207  00153E  6F7D               	movwf	printf@fmt& (0+255),b
  3208  001540  0EFD               	movlw	high STR_54
  3209  001542  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3210  001544  0EC9               	movlw	low _Command
  3211  001546  6F7F               	movwf	(?_printf+2)& (0+255),b
  3212  001548  0E01               	movlw	high _Command
  3213  00154A  6F80               	movwf	(?_printf+3)& (0+255),b
  3214  00154C  ECD6  F01B         	call	_printf	;wreg free
  3215  001550                     
  3216                           ;RS232.c: 267:     if(!strcmp(Command,"debug")){
  3217  001550  0EC9               	movlw	low _Command
  3218  001552  6E05               	movwf	strcmp@l^0,c
  3219  001554  0E01               	movlw	high _Command
  3220  001556  6E06               	movwf	(strcmp@l+1)^0,c
  3221  001558  0EED               	movlw	low STR_55
  3222  00155A  6E07               	movwf	strcmp@r^0,c
  3223  00155C  0EFF               	movlw	high STR_55
  3224  00155E  6E08               	movwf	(strcmp@r+1)^0,c
  3225  001560  EC70  F017         	call	_strcmp	;wreg free
  3226  001564  5005               	movf	?_strcmp^0,w,c
  3227  001566  1006               	iorwf	(?_strcmp+1)^0,w,c
  3228  001568  A4D8               	btfss	status,2,c
  3229  00156A  EFB9  F00A         	goto	u6681
  3230  00156E  EFBB  F00A         	goto	u6680
  3231  001572                     u6681:
  3232  001572  EFC0  F00A         	goto	l6748
  3233  001576                     u6680:
  3234  001576                     
  3235                           ;RS232.c: 268:         TogDebug();
  3236  001576  EC3A  F01B         	call	_TogDebug	;wreg free
  3237  00157A                     l6742:
  3238                           
  3239                           ;RS232.c: 269:         return 1;
  3240  00157A  0E01               	movlw	1
  3241  00157C  EF6B  F00B         	goto	l885
  3242  001580                     l6748:
  3243  001580  0EC9               	movlw	low _Command
  3244  001582  6E05               	movwf	strcmp@l^0,c
  3245  001584  0E01               	movlw	high _Command
  3246  001586  6E06               	movwf	(strcmp@l+1)^0,c
  3247  001588  0EFC               	movlw	low STR_57
  3248  00158A  6E07               	movwf	strcmp@r^0,c
  3249  00158C  0EFF               	movlw	high STR_57
  3250  00158E  6E08               	movwf	(strcmp@r+1)^0,c
  3251  001590  EC70  F017         	call	_strcmp	;wreg free
  3252  001594  5005               	movf	?_strcmp^0,w,c
  3253  001596  1006               	iorwf	(?_strcmp+1)^0,w,c
  3254  001598  A4D8               	btfss	status,2,c
  3255  00159A  EFD1  F00A         	goto	u6691
  3256  00159E  EFD3  F00A         	goto	u6690
  3257  0015A2                     u6691:
  3258  0015A2  EFD7  F00A         	goto	l6758
  3259  0015A6                     u6690:
  3260  0015A6                     
  3261                           ;RS232.c: 271:         InitialiseString();
  3262  0015A6  EC63  F015         	call	_InitialiseString	;wreg free
  3263  0015AA  EFBD  F00A         	goto	l6742
  3264  0015AE                     l6758:
  3265  0015AE  0EC9               	movlw	low _Command
  3266  0015B0  6E05               	movwf	strcmp@l^0,c
  3267  0015B2  0E01               	movlw	high _Command
  3268  0015B4  6E06               	movwf	(strcmp@l+1)^0,c
  3269  0015B6  0EE6               	movlw	low STR_59
  3270  0015B8  6E07               	movwf	strcmp@r^0,c
  3271  0015BA  0EFF               	movlw	high STR_59
  3272  0015BC  6E08               	movwf	(strcmp@r+1)^0,c
  3273  0015BE  EC70  F017         	call	_strcmp	;wreg free
  3274  0015C2  5005               	movf	?_strcmp^0,w,c
  3275  0015C4  1006               	iorwf	(?_strcmp+1)^0,w,c
  3276  0015C6  A4D8               	btfss	status,2,c
  3277  0015C8  EFE8  F00A         	goto	u6701
  3278  0015CC  EFEA  F00A         	goto	u6700
  3279  0015D0                     u6701:
  3280  0015D0  EF08  F00B         	goto	l6772
  3281  0015D4                     u6700:
  3282  0015D4                     
  3283                           ;RS232.c: 275:         char ConfName[20] = "Serial Number";
  3284  0015D4  EE22  F068         	lfsr	2,ValidateCmd@F10719
  3285  0015D8  EE13  F0A4         	lfsr	1,ValidateCmd@ConfName
  3286  0015DC  0E13               	movlw	19
  3287  0015DE                     u6711:
  3288  0015DE  CFDB FFE3          	movff	plusw2,plusw1
  3289  0015E2  06E8               	decf	wreg,f,c
  3290  0015E4  E2FC               	bc	u6711
  3291  0015E6                     
  3292                           ;RS232.c: 281:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  3293  0015E6  0EA4               	movlw	low ValidateCmd@ConfName
  3294  0015E8  0100               	movlb	0	; () banked
  3295  0015EA  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3296  0015EC  0E03               	movlw	high ValidateCmd@ConfName
  3297  0015EE  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3298  0015F0  0E03               	movlw	3
  3299  0015F2  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3300  0015F4  0E00               	movlw	0
  3301  0015F6  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3302  0015F8  0E03               	movlw	3
  3303  0015FA  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3304  0015FC  0E00               	movlw	0
  3305  0015FE  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3306  001600  0E00               	movlw	0
  3307  001602  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3308  001604  0E0A               	movlw	10
  3309  001606  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3310  001608  EC35  F006         	call	_SaveCardDat	;wreg free
  3311  00160C  EFBD  F00A         	goto	l6742
  3312  001610                     l6772:
  3313  001610  0EC9               	movlw	low _Command
  3314  001612  6E05               	movwf	strcmp@l^0,c
  3315  001614  0E01               	movlw	high _Command
  3316  001616  6E06               	movwf	(strcmp@l+1)^0,c
  3317  001618  0EF3               	movlw	low STR_61
  3318  00161A  6E07               	movwf	strcmp@r^0,c
  3319  00161C  0EFF               	movlw	high STR_61
  3320  00161E  6E08               	movwf	(strcmp@r+1)^0,c
  3321  001620  EC70  F017         	call	_strcmp	;wreg free
  3322  001624  5005               	movf	?_strcmp^0,w,c
  3323  001626  1006               	iorwf	(?_strcmp+1)^0,w,c
  3324  001628  A4D8               	btfss	status,2,c
  3325  00162A  EF19  F00B         	goto	u6721
  3326  00162E  EF1B  F00B         	goto	u6720
  3327  001632                     u6721:
  3328  001632  EF39  F00B         	goto	l6786
  3329  001636                     u6720:
  3330  001636                     
  3331                           ;RS232.c: 287:         char ConfName[20] = "Part Number";
  3332  001636  EE22  F054         	lfsr	2,ValidateCmd@F10722
  3333  00163A  EE13  F0B8         	lfsr	1,ValidateCmd@ConfName_1423
  3334  00163E  0E13               	movlw	19
  3335  001640                     u6731:
  3336  001640  CFDB FFE3          	movff	plusw2,plusw1
  3337  001644  06E8               	decf	wreg,f,c
  3338  001646  E2FC               	bc	u6731
  3339  001648                     
  3340                           ;RS232.c: 289:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  3341  001648  0EB8               	movlw	low ValidateCmd@ConfName_1423
  3342  00164A  0100               	movlb	0	; () banked
  3343  00164C  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3344  00164E  0E03               	movlw	high ValidateCmd@ConfName_1423
  3345  001650  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3346  001652  0E01               	movlw	1
  3347  001654  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3348  001656  0E00               	movlw	0
  3349  001658  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3350  00165A  0E01               	movlw	1
  3351  00165C  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3352  00165E  0E00               	movlw	0
  3353  001660  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3354  001662  0E00               	movlw	0
  3355  001664  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3356  001666  0E10               	movlw	16
  3357  001668  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3358  00166A  EC35  F006         	call	_SaveCardDat	;wreg free
  3359  00166E  EFBD  F00A         	goto	l6742
  3360  001672                     l6786:
  3361  001672  0EC9               	movlw	low _Command
  3362  001674  6E05               	movwf	strcmp@l^0,c
  3363  001676  0E01               	movlw	high _Command
  3364  001678  6E06               	movwf	(strcmp@l+1)^0,c
  3365  00167A  0EF8               	movlw	low STR_63
  3366  00167C  6E07               	movwf	strcmp@r^0,c
  3367  00167E  0EFF               	movlw	high STR_63
  3368  001680  6E08               	movwf	(strcmp@r+1)^0,c
  3369  001682  EC70  F017         	call	_strcmp	;wreg free
  3370  001686  5005               	movf	?_strcmp^0,w,c
  3371  001688  1006               	iorwf	(?_strcmp+1)^0,w,c
  3372  00168A  A4D8               	btfss	status,2,c
  3373  00168C  EF4A  F00B         	goto	u6741
  3374  001690  EF4C  F00B         	goto	u6740
  3375  001694                     u6741:
  3376  001694  EF6A  F00B         	goto	l6794
  3377  001698                     u6740:
  3378  001698                     
  3379                           ;RS232.c: 297:         char ConfName[20] = "Revision";
  3380  001698  EE22  F040         	lfsr	2,ValidateCmd@F10725
  3381  00169C  EE13  F0CC         	lfsr	1,ValidateCmd@ConfName_1427
  3382  0016A0  0E13               	movlw	19
  3383  0016A2                     u6751:
  3384  0016A2  CFDB FFE3          	movff	plusw2,plusw1
  3385  0016A6  06E8               	decf	wreg,f,c
  3386  0016A8  E2FC               	bc	u6751
  3387  0016AA                     
  3388                           ;RS232.c: 301:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  3389  0016AA  0ECC               	movlw	low ValidateCmd@ConfName_1427
  3390  0016AC  0100               	movlb	0	; () banked
  3391  0016AE  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3392  0016B0  0E03               	movlw	high ValidateCmd@ConfName_1427
  3393  0016B2  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3394  0016B4  0E02               	movlw	2
  3395  0016B6  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3396  0016B8  0E00               	movlw	0
  3397  0016BA  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3398  0016BC  0E02               	movlw	2
  3399  0016BE  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3400  0016C0  0E00               	movlw	0
  3401  0016C2  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3402  0016C4  0E00               	movlw	0
  3403  0016C6  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3404  0016C8  0E02               	movlw	2
  3405  0016CA  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3406  0016CC  EC35  F006         	call	_SaveCardDat	;wreg free
  3407                           
  3408                           ;RS232.c: 304:     }else{
  3409  0016D0  EF6B  F00B         	goto	l885
  3410  0016D4                     l6794:
  3411                           
  3412                           ;RS232.c: 305:         return 0;
  3413  0016D4  0E00               	movlw	0
  3414  0016D6                     l885:
  3415  0016D6  0012               	return		;funcret
  3416  0016D8                     __end_of_ValidateCmd:
  3417                           	opt callstack 0
  3418                           
  3419 ;; *************** function _strcmp *****************
  3420 ;; Defined at:
  3421 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  l               2    4[COMRAM] PTR const unsigned char 
  3424 ;;		 -> Command(16), 
  3425 ;;  r               2    6[COMRAM] PTR const unsigned char 
  3426 ;;		 -> STR_64(4), STR_62(5), STR_60(7), STR_58(2), 
  3427 ;;		 -> STR_56(6), 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  2    4[COMRAM] int 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;Total ram usage:        5 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    4
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_ValidateCmd
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text2
  3454  002EE0                     __ptext2:
  3455                           	opt callstack 0
  3456  002EE0                     _strcmp:
  3457                           	opt callstack 25
  3458  002EE0  EF76  F017         	goto	l6546
  3459  002EE4                     l6544:
  3460  002EE4  4A05               	infsnz	strcmp@l^0,f,c
  3461  002EE6  2A06               	incf	(strcmp@l+1)^0,f,c
  3462  002EE8  4A07               	infsnz	strcmp@r^0,f,c
  3463  002EEA  2A08               	incf	(strcmp@r+1)^0,f,c
  3464  002EEC                     l6546:
  3465  002EEC  C005  FFD9         	movff	strcmp@l,fsr2l
  3466  002EF0  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3467  002EF4  50DF               	movf	indf2,w,c
  3468  002EF6  6E09               	movwf	??_strcmp^0,c
  3469  002EF8  C007  FFF6         	movff	strcmp@r,tblptrl
  3470  002EFC  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3471  002F00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3472  002F00  6AF8               	clrf	tblptru,c
  3473  002F02                     	endif
  3474  002F02                     	if	0	;tblptru may be non-zero
  3475  002F02                     	endif
  3476  002F02  0008               	tblrd		*
  3477  002F04  50F5               	movf	tablat,w,c
  3478  002F06  1809               	xorwf	??_strcmp^0,w,c
  3479  002F08  A4D8               	btfss	status,2,c
  3480  002F0A  EF89  F017         	goto	u6521
  3481  002F0E  EF8B  F017         	goto	u6520
  3482  002F12                     u6521:
  3483  002F12  EF97  F017         	goto	l6550
  3484  002F16                     u6520:
  3485  002F16  C005  FFD9         	movff	strcmp@l,fsr2l
  3486  002F1A  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3487  002F1E  50DF               	movf	indf2,w,c
  3488  002F20  A4D8               	btfss	status,2,c
  3489  002F22  EF95  F017         	goto	u6531
  3490  002F26  EF97  F017         	goto	u6530
  3491  002F2A                     u6531:
  3492  002F2A  EF72  F017         	goto	l6544
  3493  002F2E                     u6530:
  3494  002F2E                     l6550:
  3495  002F2E  C005  FFD9         	movff	strcmp@l,fsr2l
  3496  002F32  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3497  002F36  50DF               	movf	indf2,w,c
  3498  002F38  6E09               	movwf	??_strcmp^0,c
  3499  002F3A  C007  FFF6         	movff	strcmp@r,tblptrl
  3500  002F3E  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3501  002F42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3502  002F42  6AF8               	clrf	tblptru,c
  3503  002F44                     	endif
  3504  002F44                     	if	0	;tblptru may be non-zero
  3505  002F44                     	endif
  3506  002F44  0008               	tblrd		*
  3507  002F46  50F5               	movf	tablat,w,c
  3508  002F48  5C09               	subwf	??_strcmp^0,w,c
  3509  002F4A  6E05               	movwf	?_strcmp^0,c
  3510  002F4C  6A06               	clrf	(?_strcmp+1)^0,c
  3511  002F4E  A0D8               	btfss	status,0,c
  3512  002F50  0606               	decf	(?_strcmp+1)^0,f,c
  3513  002F52  0012               	return		;funcret
  3514  002F54                     __end_of_strcmp:
  3515                           	opt callstack 0
  3516                           
  3517 ;; *************** function _TogDebug *****************
  3518 ;; Defined at:
  3519 ;;		line 92 in file "RS232.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:   13
  3540 ;; This function calls:
  3541 ;;		_printf
  3542 ;; This function is called by:
  3543 ;;		_ValidateCmd
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text3
  3548  003674                     __ptext3:
  3549                           	opt callstack 0
  3550  003674                     _TogDebug:
  3551                           	opt callstack 16
  3552  003674                     
  3553                           ;RS232.c: 94:     if(Debug==0){
  3554  003674  0100               	movlb	0	; () banked
  3555  003676  51B1               	movf	_Debug& (0+255),w,b
  3556  003678  A4D8               	btfss	status,2,c
  3557  00367A  EF41  F01B         	goto	u6451
  3558  00367E  EF43  F01B         	goto	u6450
  3559  003682                     u6451:
  3560  003682  EF4D  F01B         	goto	l6470
  3561  003686                     u6450:
  3562  003686                     
  3563                           ; BSR set to: 0
  3564                           ;RS232.c: 95:         Debug =1;
  3565  003686  0E01               	movlw	1
  3566  003688  6FB1               	movwf	_Debug& (0+255),b
  3567  00368A                     
  3568                           ; BSR set to: 0
  3569                           ;RS232.c: 96:         printf("Debug Enabled\r\n");
  3570  00368A  0EB1               	movlw	low STR_30
  3571  00368C  6F7D               	movwf	printf@fmt& (0+255),b
  3572  00368E  0EFF               	movlw	high STR_30
  3573  003690  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3574  003692  ECD6  F01B         	call	_printf	;wreg free
  3575                           
  3576                           ;RS232.c: 97:     }else{
  3577  003696  EF55  F01B         	goto	l838
  3578  00369A                     l6470:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;RS232.c: 98:         Debug =0;
  3582  00369A  0E00               	movlw	0
  3583  00369C  6FB1               	movwf	_Debug& (0+255),b
  3584  00369E                     
  3585                           ; BSR set to: 0
  3586                           ;RS232.c: 99:         printf("Debug Disabled\r\n");
  3587  00369E  0EA0               	movlw	low STR_31
  3588  0036A0  6F7D               	movwf	printf@fmt& (0+255),b
  3589  0036A2  0EFF               	movlw	high STR_31
  3590  0036A4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3591  0036A6  ECD6  F01B         	call	_printf	;wreg free
  3592  0036AA                     l838:
  3593  0036AA  0012               	return		;funcret
  3594  0036AC                     __end_of_TogDebug:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _SaveCardDat *****************
  3598 ;; Defined at:
  3599 ;;		line 120 in file "RS232.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  Name            2   47[BANK0 ] PTR unsigned char 
  3602 ;;		 -> ValidateCmd@ConfName_1427(20), ValidateCmd@ConfName_1423(20), ValidateCmd@ConfName(20), 
  3603 ;;  MBAddress       2   49[BANK0 ] unsigned int 
  3604 ;;  dataeeAddr      2   51[BANK0 ] unsigned short 
  3605 ;;  NumBytes        2   53[BANK0 ] int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  i               2   63[BANK0 ] int 
  3608 ;;  dataeeAddrWr    2   61[BANK0 ] unsigned short 
  3609 ;;  Conf            1   60[BANK0 ] unsigned char 
  3610 ;;  readData        1   59[BANK0 ] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3620 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;Total ram usage:       18 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:   14
  3627 ;; This function calls:
  3628 ;;		_ClearEEAddRange
  3629 ;;		_DATAEE_ReadByte
  3630 ;;		_DATAEE_WriteByte
  3631 ;;		_EUSART2_Read
  3632 ;;		_EUSART2_is_rx_ready
  3633 ;;		_ReadRX232
  3634 ;;		_printf
  3635 ;;		_strcpy
  3636 ;;		_strlen
  3637 ;; This function is called by:
  3638 ;;		_ValidateCmd
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text4
  3643  000C6A                     __ptext4:
  3644                           	opt callstack 0
  3645  000C6A                     _SaveCardDat:
  3646                           	opt callstack 15
  3647  000C6A                     
  3648                           ;RS232.c: 123:     unsigned char Conf, readData;;RS232.c: 124:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  3649  000C6A  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  3650  000C6E  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  3651  000C72                     
  3652                           ;RS232.c: 126:     printf("Saving Card Data\r\n");
  3653  000C72  0E69               	movlw	low STR_33
  3654  000C74  0100               	movlb	0	; () banked
  3655  000C76  6F7D               	movwf	printf@fmt& (0+255),b
  3656  000C78  0EFF               	movlw	high STR_33
  3657  000C7A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3658  000C7C  ECD6  F01B         	call	_printf	;wreg free
  3659  000C80                     
  3660                           ;RS232.c: 127:     printf("Name: %s  MBAddress: 0x%04x   dataeeAddr: 0x%04x   NumBytes: 
      +                          %i \r\n", Name, MBAddress, dataeeAddr, NumBytes);
  3661  000C80  0E3F               	movlw	low STR_34
  3662  000C82  0100               	movlb	0	; () banked
  3663  000C84  6F7D               	movwf	printf@fmt& (0+255),b
  3664  000C86  0EFB               	movlw	high STR_34
  3665  000C88  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3666  000C8A  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3667  000C8E  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3668  000C92  C091  F081         	movff	SaveCardDat@MBAddress,?_printf+4
  3669  000C96  C092  F082         	movff	SaveCardDat@MBAddress+1,?_printf+5
  3670  000C9A  C093  F083         	movff	SaveCardDat@dataeeAddr,?_printf+6
  3671  000C9E  C094  F084         	movff	SaveCardDat@dataeeAddr+1,?_printf+7
  3672  000CA2  C095  F085         	movff	SaveCardDat@NumBytes,?_printf+8
  3673  000CA6  C096  F086         	movff	SaveCardDat@NumBytes+1,?_printf+9
  3674  000CAA  ECD6  F01B         	call	_printf	;wreg free
  3675  000CAE                     
  3676                           ;RS232.c: 129:     printf("Enter card %s (max %i characters): ", Name, NumBytes);
  3677  000CAE  0EF1               	movlw	low STR_35
  3678  000CB0  0100               	movlb	0	; () banked
  3679  000CB2  6F7D               	movwf	printf@fmt& (0+255),b
  3680  000CB4  0EFC               	movlw	high STR_35
  3681  000CB6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3682  000CB8  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3683  000CBC  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3684  000CC0  C095  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  3685  000CC4  C096  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  3686  000CC8  ECD6  F01B         	call	_printf	;wreg free
  3687  000CCC                     
  3688                           ;RS232.c: 131:     strcpy(Command, "");
  3689  000CCC  0EC9               	movlw	low _Command
  3690  000CCE  6E09               	movwf	strcpy@dest^0,c
  3691  000CD0  0E01               	movlw	high _Command
  3692  000CD2  6E0A               	movwf	(strcpy@dest+1)^0,c
  3693  000CD4  0E3E               	movlw	low (STR_17+20)
  3694  000CD6  6E0B               	movwf	strcpy@src^0,c
  3695  000CD8  0EFF               	movlw	high (STR_17+20)
  3696  000CDA  6E0C               	movwf	(strcpy@src+1)^0,c
  3697  000CDC  EC7A  F018         	call	_strcpy	;wreg free
  3698  000CE0                     l6486:
  3699  000CE0  C095  F08B         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  3700  000CE4  C096  F08C         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  3701  000CE8  ECCA  F00F         	call	_ReadRX232	;wreg free
  3702  000CEC  0100               	movlb	0	; () banked
  3703  000CEE  518B               	movf	?_ReadRX232& (0+255),w,b
  3704  000CF0  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3705  000CF2  B4D8               	btfsc	status,2,c
  3706  000CF4  EF7E  F006         	goto	u6461
  3707  000CF8  EF80  F006         	goto	u6460
  3708  000CFC                     u6461:
  3709  000CFC  EF70  F006         	goto	l6486
  3710  000D00                     u6460:
  3711  000D00                     
  3712                           ; BSR set to: 0
  3713                           ;RS232.c: 134:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  3714  000D00  0E5C               	movlw	low STR_37
  3715  000D02  6F7D               	movwf	printf@fmt& (0+255),b
  3716  000D04  0EFD               	movlw	high STR_37
  3717  000D06  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3718  000D08  0EC9               	movlw	low _Command
  3719  000D0A  6F7F               	movwf	(?_printf+2)& (0+255),b
  3720  000D0C  0E01               	movlw	high _Command
  3721  000D0E  6F80               	movwf	(?_printf+3)& (0+255),b
  3722  000D10  ECD6  F01B         	call	_printf	;wreg free
  3723  000D14                     l6490:
  3724  000D14  EC2B  F01C         	call	_EUSART2_is_rx_ready	;wreg free
  3725  000D18  0900               	iorlw	0
  3726  000D1A  B4D8               	btfsc	status,2,c
  3727  000D1C  EF92  F006         	goto	u6471
  3728  000D20  EF94  F006         	goto	u6470
  3729  000D24                     u6471:
  3730  000D24  EF8A  F006         	goto	l6490
  3731  000D28                     u6470:
  3732  000D28                     
  3733                           ;RS232.c: 139:     Conf = EUSART2_Read();
  3734  000D28  EC36  F019         	call	_EUSART2_Read	;wreg free
  3735  000D2C  0100               	movlb	0	; () banked
  3736  000D2E  6F9C               	movwf	SaveCardDat@Conf& (0+255),b
  3737  000D30                     
  3738                           ; BSR set to: 0
  3739                           ;RS232.c: 142:     if(Conf == 0x79 || Conf == 0x59){
  3740  000D30  0E79               	movlw	121
  3741  000D32  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3742  000D34  B4D8               	btfsc	status,2,c
  3743  000D36  EF9F  F006         	goto	u6481
  3744  000D3A  EFA1  F006         	goto	u6480
  3745  000D3E                     u6481:
  3746  000D3E  EFAA  F006         	goto	l855
  3747  000D42                     u6480:
  3748  000D42                     
  3749                           ; BSR set to: 0
  3750  000D42  0E59               	movlw	89
  3751  000D44  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3752  000D46  A4D8               	btfss	status,2,c
  3753  000D48  EFA8  F006         	goto	u6491
  3754  000D4C  EFAA  F006         	goto	u6490
  3755  000D50                     u6491:
  3756  000D50  EF7E  F007         	goto	l862
  3757  000D54                     u6490:
  3758  000D54                     l855:
  3759  000D54                     
  3760                           ; BSR set to: 0
  3761                           ;RS232.c: 144:         printf("Y\r\nSaving Serial Number \r\n");
  3762  000D54  0E4C               	movlw	low STR_38
  3763  000D56  6F7D               	movwf	printf@fmt& (0+255),b
  3764  000D58  0EFE               	movlw	high STR_38
  3765  000D5A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3766  000D5C  ECD6  F01B         	call	_printf	;wreg free
  3767  000D60                     
  3768                           ;RS232.c: 145:         printf("Num Chars: %i \r\n", strlen(Command));
  3769  000D60  0EC9               	movlw	low _Command
  3770  000D62  6E05               	movwf	strlen@s^0,c
  3771  000D64  0E01               	movlw	high _Command
  3772  000D66  6E06               	movwf	(strlen@s+1)^0,c
  3773  000D68  ECB7  F019         	call	_strlen	;wreg free
  3774  000D6C  C005  F099         	movff	?_strlen,_SaveCardDat$2413
  3775  000D70  C006  F09A         	movff	?_strlen+1,_SaveCardDat$2413+1
  3776  000D74                     
  3777                           ;RS232.c: 145:         printf("Num Chars: %i \r\n", strlen(Command));
  3778  000D74  0E8F               	movlw	low STR_39
  3779  000D76  0100               	movlb	0	; () banked
  3780  000D78  6F7D               	movwf	printf@fmt& (0+255),b
  3781  000D7A  0EFF               	movlw	high STR_39
  3782  000D7C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3783  000D7E  C099  F07F         	movff	_SaveCardDat$2413,?_printf+2
  3784  000D82  C09A  F080         	movff	_SaveCardDat$2413+1,?_printf+3
  3785  000D86  ECD6  F01B         	call	_printf	;wreg free
  3786  000D8A                     
  3787                           ;RS232.c: 149:         ClearEEAddRange(dataeeAddr,NumBytes);
  3788  000D8A  C093  F08B         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  3789  000D8E  C094  F08C         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  3790  000D92  C095  F08D         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  3791  000D96  C096  F08E         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  3792  000D9A  ECA9  F018         	call	_ClearEEAddRange	;wreg free
  3793  000D9E                     
  3794                           ;RS232.c: 152:         for (i = 0; i < strlen(Command); i++){
  3795  000D9E  0E00               	movlw	0
  3796  000DA0  0100               	movlb	0	; () banked
  3797  000DA2  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  3798  000DA4  0E00               	movlw	0
  3799  000DA6  6F9F               	movwf	SaveCardDat@i& (0+255),b
  3800  000DA8  EF0C  F007         	goto	l6518
  3801  000DAC                     l6508:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;RS232.c: 153:             printf("Char 0x%02x in 0x%02x \r\n", Command[i], dataeeAddrWr
      +                          k);
  3805  000DAC  0E9B               	movlw	low STR_40
  3806  000DAE  6F7D               	movwf	printf@fmt& (0+255),b
  3807  000DB0  0EFE               	movlw	high STR_40
  3808  000DB2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3809  000DB4  0EC9               	movlw	low _Command
  3810  000DB6  259F               	addwf	SaveCardDat@i& (0+255),w,b
  3811  000DB8  6ED9               	movwf	fsr2l,c
  3812  000DBA  0E01               	movlw	high _Command
  3813  000DBC  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  3814  000DBE  6EDA               	movwf	fsr2h,c
  3815  000DC0  50DF               	movf	indf2,w,c
  3816  000DC2  6F97               	movwf	??_SaveCardDat& (0+255),b
  3817  000DC4  5197               	movf	??_SaveCardDat& (0+255),w,b
  3818  000DC6  6F7F               	movwf	(?_printf+2)& (0+255),b
  3819  000DC8  6B80               	clrf	(?_printf+3)& (0+255),b
  3820  000DCA  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  3821  000DCE  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  3822  000DD2  ECD6  F01B         	call	_printf	;wreg free
  3823  000DD6                     
  3824                           ;RS232.c: 154:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  3825  000DD6  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  3826  000DDA  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  3827  000DDE  0EC9               	movlw	low _Command
  3828  000DE0  0100               	movlb	0	; () banked
  3829  000DE2  259F               	addwf	SaveCardDat@i& (0+255),w,b
  3830  000DE4  6ED9               	movwf	fsr2l,c
  3831  000DE6  0E01               	movlw	high _Command
  3832  000DE8  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  3833  000DEA  6EDA               	movwf	fsr2h,c
  3834  000DEC  50DF               	movf	indf2,w,c
  3835  000DEE  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  3836  000DF0  EC76  F01A         	call	_DATAEE_WriteByte	;wreg free
  3837  000DF4                     
  3838                           ;RS232.c: 155:             dataeeAddrWrk++;
  3839  000DF4  0100               	movlb	0	; () banked
  3840  000DF6  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  3841  000DF8  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  3842  000DFA                     
  3843                           ; BSR set to: 0
  3844                           ;RS232.c: 156:             _delay((unsigned long)((50)*(32000000/4000.0)));
  3845  000DFA  0E03               	movlw	3
  3846  000DFC  0100               	movlb	0	; () banked
  3847  000DFE  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  3848  000E00  0E08               	movlw	8
  3849  000E02  6F97               	movwf	??_SaveCardDat& (0+255),b
  3850  000E04  0E77               	movlw	119
  3851  000E06                     u6857:
  3852  000E06  2EE8               	decfsz	wreg,f,c
  3853  000E08  D7FE               	bra	u6857
  3854  000E0A  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  3855  000E0C  D7FC               	bra	u6857
  3856  000E0E  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  3857  000E10  D7FA               	bra	u6857
  3858  000E12                     
  3859                           ;RS232.c: 157:         }
  3860  000E12  0100               	movlb	0	; () banked
  3861  000E14  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  3862  000E16  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  3863  000E18                     l6518:
  3864                           
  3865                           ; BSR set to: 0
  3866  000E18  0EC9               	movlw	low _Command
  3867  000E1A  6E05               	movwf	strlen@s^0,c
  3868  000E1C  0E01               	movlw	high _Command
  3869  000E1E  6E06               	movwf	(strlen@s+1)^0,c
  3870  000E20  ECB7  F019         	call	_strlen	;wreg free
  3871  000E24  5005               	movf	?_strlen^0,w,c
  3872  000E26  0100               	movlb	0	; () banked
  3873  000E28  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  3874  000E2A  5006               	movf	(?_strlen+1)^0,w,c
  3875  000E2C  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  3876  000E2E  A0D8               	btfss	status,0,c
  3877  000E30  EF1C  F007         	goto	u6501
  3878  000E34  EF1E  F007         	goto	u6500
  3879  000E38                     u6501:
  3880  000E38  EFD6  F006         	goto	l6508
  3881  000E3C                     u6500:
  3882  000E3C                     
  3883                           ; BSR set to: 0
  3884                           ;RS232.c: 159:         printf("Serial Number Saved. \r\n");
  3885  000E3C  0EB4               	movlw	low STR_41
  3886  000E3E  6F7D               	movwf	printf@fmt& (0+255),b
  3887  000E40  0EFE               	movlw	high STR_41
  3888  000E42  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3889  000E44  ECD6  F01B         	call	_printf	;wreg free
  3890  000E48                     
  3891                           ;RS232.c: 162:         dataeeAddrWrk = dataeeAddr;
  3892  000E48  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  3893  000E4C  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  3894  000E50                     
  3895                           ;RS232.c: 163:          _delay((unsigned long)((50)*(32000000/4000.0)));
  3896  000E50  0E03               	movlw	3
  3897  000E52  0100               	movlb	0	; () banked
  3898  000E54  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  3899  000E56  0E08               	movlw	8
  3900  000E58  6F97               	movwf	??_SaveCardDat& (0+255),b
  3901  000E5A  0E77               	movlw	119
  3902  000E5C                     u6867:
  3903  000E5C  2EE8               	decfsz	wreg,f,c
  3904  000E5E  D7FE               	bra	u6867
  3905  000E60  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  3906  000E62  D7FC               	bra	u6867
  3907  000E64  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  3908  000E66  D7FA               	bra	u6867
  3909  000E68                     
  3910                           ;RS232.c: 166:         for(i = 0; i < strlen(Command); i++){
  3911  000E68  0E00               	movlw	0
  3912  000E6A  0100               	movlb	0	; () banked
  3913  000E6C  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  3914  000E6E  0E00               	movlw	0
  3915  000E70  6F9F               	movwf	SaveCardDat@i& (0+255),b
  3916  000E72  EF62  F007         	goto	l6538
  3917  000E76                     l6528:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;RS232.c: 167:             readData = DATAEE_ReadByte(dataeeAddrWrk);
  3921  000E76  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  3922  000E7A  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  3923  000E7E  EC37  F01C         	call	_DATAEE_ReadByte	;wreg free
  3924  000E82  0100               	movlb	0	; () banked
  3925  000E84  6F9B               	movwf	SaveCardDat@readData& (0+255),b
  3926  000E86                     
  3927                           ; BSR set to: 0
  3928                           ;RS232.c: 168:             printf("EEPROM: 0x%02x Add: 0x%02x \r\n", readData,dataeeAddr
      +                          Wrk);
  3929  000E86  0EBC               	movlw	low STR_42
  3930  000E88  6F7D               	movwf	printf@fmt& (0+255),b
  3931  000E8A  0EFD               	movlw	high STR_42
  3932  000E8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3933  000E8E  C09B  F07F         	movff	SaveCardDat@readData,?_printf+2
  3934  000E92  6B80               	clrf	(?_printf+3)& (0+255),b
  3935  000E94  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  3936  000E98  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  3937  000E9C  ECD6  F01B         	call	_printf	;wreg free
  3938  000EA0                     
  3939                           ;RS232.c: 169:             dataeeAddrWrk++;
  3940  000EA0  0100               	movlb	0	; () banked
  3941  000EA2  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  3942  000EA4  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  3943  000EA6                     
  3944                           ; BSR set to: 0
  3945                           ;RS232.c: 170:             _delay((unsigned long)((50)*(32000000/4000.0)));
  3946  000EA6  0E03               	movlw	3
  3947  000EA8  0100               	movlb	0	; () banked
  3948  000EAA  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  3949  000EAC  0E08               	movlw	8
  3950  000EAE  6F97               	movwf	??_SaveCardDat& (0+255),b
  3951  000EB0  0E77               	movlw	119
  3952  000EB2                     u6877:
  3953  000EB2  2EE8               	decfsz	wreg,f,c
  3954  000EB4  D7FE               	bra	u6877
  3955  000EB6  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  3956  000EB8  D7FC               	bra	u6877
  3957  000EBA  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  3958  000EBC  D7FA               	bra	u6877
  3959  000EBE                     
  3960                           ;RS232.c: 171:         }
  3961  000EBE  0100               	movlb	0	; () banked
  3962  000EC0  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  3963  000EC2  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  3964  000EC4                     l6538:
  3965                           
  3966                           ; BSR set to: 0
  3967  000EC4  0EC9               	movlw	low _Command
  3968  000EC6  6E05               	movwf	strlen@s^0,c
  3969  000EC8  0E01               	movlw	high _Command
  3970  000ECA  6E06               	movwf	(strlen@s+1)^0,c
  3971  000ECC  ECB7  F019         	call	_strlen	;wreg free
  3972  000ED0  5005               	movf	?_strlen^0,w,c
  3973  000ED2  0100               	movlb	0	; () banked
  3974  000ED4  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  3975  000ED6  5006               	movf	(?_strlen+1)^0,w,c
  3976  000ED8  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  3977  000EDA  A0D8               	btfss	status,0,c
  3978  000EDC  EF72  F007         	goto	u6511
  3979  000EE0  EF74  F007         	goto	u6510
  3980  000EE4                     u6511:
  3981  000EE4  EF3B  F007         	goto	l6528
  3982  000EE8                     u6510:
  3983  000EE8                     
  3984                           ; BSR set to: 0
  3985                           ;RS232.c: 174:         strcpy(Command, "");
  3986  000EE8  0EC9               	movlw	low _Command
  3987  000EEA  6E09               	movwf	strcpy@dest^0,c
  3988  000EEC  0E01               	movlw	high _Command
  3989  000EEE  6E0A               	movwf	(strcpy@dest+1)^0,c
  3990  000EF0  0E3E               	movlw	low (STR_17+20)
  3991  000EF2  6E0B               	movwf	strcpy@src^0,c
  3992  000EF4  0EFF               	movlw	high (STR_17+20)
  3993  000EF6  6E0C               	movwf	(strcpy@src+1)^0,c
  3994  000EF8  EC7A  F018         	call	_strcpy	;wreg free
  3995  000EFC                     l862:
  3996  000EFC  0012               	return		;funcret
  3997  000EFE                     __end_of_SaveCardDat:
  3998                           	opt callstack 0
  3999                           
  4000 ;; *************** function _ReadRX232 *****************
  4001 ;; Defined at:
  4002 ;;		line 37 in file "RS232.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  NumChars        2   43[BANK0 ] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  temp            2   84[COMRAM] unsigned char [2]
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2   43[BANK0 ] int 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:        4 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   13
  4023 ;; This function calls:
  4024 ;;		_EUSART2_Read
  4025 ;;		_EUSART2_Write
  4026 ;;		_EUSART2_is_rx_ready
  4027 ;;		_memmove
  4028 ;;		_printf
  4029 ;;		_strcat
  4030 ;;		_strlen
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;;		_SaveCardDat
  4034 ;;		_RecSerNum
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text5
  4039  001F94                     __ptext5:
  4040                           	opt callstack 0
  4041  001F94                     _ReadRX232:
  4042                           	opt callstack 15
  4043  001F94                     
  4044                           ;RS232.c: 37: int ReadRX232(int NumChars);RS232.c: 38: {;RS232.c: 43:     char temp[2] =
      +                           {'Z','\0'};
  4045  001F94  C137  F055         	movff	ReadRX232@F10695,ReadRX232@temp
  4046  001F98  C138  F056         	movff	ReadRX232@F10695+1,ReadRX232@temp+1
  4047  001F9C                     
  4048                           ;RS232.c: 46:     if(EUSART2_is_rx_ready())
  4049  001F9C  EC2B  F01C         	call	_EUSART2_is_rx_ready	;wreg free
  4050  001FA0  0900               	iorlw	0
  4051  001FA2  B4D8               	btfsc	status,2,c
  4052  001FA4  EFD6  F00F         	goto	u6261
  4053  001FA8  EFD8  F00F         	goto	u6260
  4054  001FAC                     u6261:
  4055  001FAC  EF56  F010         	goto	l6330
  4056  001FB0                     u6260:
  4057  001FB0                     l6302:
  4058                           
  4059                           ;RS232.c: 52:              if(EUSART2_is_rx_ready())
  4060  001FB0  EC2B  F01C         	call	_EUSART2_is_rx_ready	;wreg free
  4061  001FB4  0900               	iorlw	0
  4062  001FB6  B4D8               	btfsc	status,2,c
  4063  001FB8  EFE0  F00F         	goto	u6271
  4064  001FBC  EFE2  F00F         	goto	u6270
  4065  001FC0                     u6271:
  4066  001FC0  EF32  F010         	goto	l6322
  4067  001FC4                     u6270:
  4068  001FC4                     
  4069                           ;RS232.c: 53:              {;RS232.c: 55:                 temp[0]=EUSART2_Read();
  4070  001FC4  EC36  F019         	call	_EUSART2_Read	;wreg free
  4071  001FC8  6E55               	movwf	ReadRX232@temp^0,c
  4072                           
  4073                           ;RS232.c: 58:                 EUSART2_Write(temp[0]);
  4074  001FCA  5055               	movf	ReadRX232@temp^0,w,c
  4075  001FCC  EC4A  F018         	call	_EUSART2_Write
  4076  001FD0                     
  4077                           ;RS232.c: 60:                 if(temp[0]!='\r'){
  4078  001FD0  0E0D               	movlw	13
  4079  001FD2  1855               	xorwf	ReadRX232@temp^0,w,c
  4080  001FD4  B4D8               	btfsc	status,2,c
  4081  001FD6  EFEF  F00F         	goto	u6281
  4082  001FDA  EFF1  F00F         	goto	u6280
  4083  001FDE                     u6281:
  4084  001FDE  EFFB  F00F         	goto	l6310
  4085  001FE2                     u6280:
  4086  001FE2                     
  4087                           ;RS232.c: 61:                     strcat(Command, temp);
  4088  001FE2  0EC9               	movlw	low _Command
  4089  001FE4  6E13               	movwf	strcat@dest^0,c
  4090  001FE6  0E01               	movlw	high _Command
  4091  001FE8  6E14               	movwf	(strcat@dest+1)^0,c
  4092  001FEA  0E55               	movlw	low ReadRX232@temp
  4093  001FEC  6E15               	movwf	strcat@src^0,c
  4094  001FEE  0E00               	movlw	high ReadRX232@temp
  4095  001FF0  6E16               	movwf	(strcat@src+1)^0,c
  4096  001FF2  ECEA  F01B         	call	_strcat	;wreg free
  4097  001FF6                     l6310:
  4098                           
  4099                           ;RS232.c: 64:                 if(strlen(Command)>NumChars)
  4100  001FF6  0EC9               	movlw	low _Command
  4101  001FF8  6E05               	movwf	strlen@s^0,c
  4102  001FFA  0E01               	movlw	high _Command
  4103  001FFC  6E06               	movwf	(strlen@s+1)^0,c
  4104  001FFE  ECB7  F019         	call	_strlen	;wreg free
  4105  002002  5005               	movf	?_strlen^0,w,c
  4106  002004  0100               	movlb	0	; () banked
  4107  002006  5D8B               	subwf	ReadRX232@NumChars& (0+255),w,b
  4108  002008  5006               	movf	(?_strlen+1)^0,w,c
  4109  00200A  598C               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4110  00200C  B0D8               	btfsc	status,0,c
  4111  00200E  EF0B  F010         	goto	u6291
  4112  002012  EF0D  F010         	goto	u6290
  4113  002016                     u6291:
  4114  002016  EF21  F010         	goto	l6314
  4115  00201A                     u6290:
  4116  00201A                     
  4117                           ; BSR set to: 0
  4118                           ;RS232.c: 65:                 {;RS232.c: 67:                     memmove(Command, Comman
      +                          d+1, strlen(Command));
  4119  00201A  0EC9               	movlw	low _Command
  4120  00201C  6E09               	movwf	memmove@d1^0,c
  4121  00201E  0E01               	movlw	high _Command
  4122  002020  6E0A               	movwf	(memmove@d1+1)^0,c
  4123  002022  0ECA               	movlw	low (_Command+1)
  4124  002024  6E0B               	movwf	memmove@s1^0,c
  4125  002026  0E01               	movlw	high (_Command+1)
  4126  002028  6E0C               	movwf	(memmove@s1+1)^0,c
  4127  00202A  0EC9               	movlw	low _Command
  4128  00202C  6E05               	movwf	strlen@s^0,c
  4129  00202E  0E01               	movlw	high _Command
  4130  002030  6E06               	movwf	(strlen@s+1)^0,c
  4131  002032  ECB7  F019         	call	_strlen	;wreg free
  4132  002036  C005  F00D         	movff	?_strlen,memmove@n
  4133  00203A  C006  F00E         	movff	?_strlen+1,memmove@n+1
  4134  00203E  EC55  F012         	call	_memmove	;wreg free
  4135  002042                     l6314:
  4136                           
  4137                           ;RS232.c: 71:                 if(temp[0]=='\r'){
  4138  002042  0E0D               	movlw	13
  4139  002044  1855               	xorwf	ReadRX232@temp^0,w,c
  4140  002046  A4D8               	btfss	status,2,c
  4141  002048  EF28  F010         	goto	u6301
  4142  00204C  EF2A  F010         	goto	u6300
  4143  002050                     u6301:
  4144  002050  EF32  F010         	goto	l6322
  4145  002054                     u6300:
  4146  002054                     
  4147                           ;RS232.c: 73:                     temp[0]='z';
  4148  002054  0E7A               	movlw	122
  4149  002056  6E55               	movwf	ReadRX232@temp^0,c
  4150  002058                     
  4151                           ;RS232.c: 74:                     return NumChars;
  4152  002058  C08B  F08B         	movff	ReadRX232@NumChars,?_ReadRX232
  4153  00205C  C08C  F08C         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  4154  002060  EF5B  F010         	goto	l832
  4155  002064                     l6322:
  4156                           
  4157                           ;RS232.c: 77:         }while( temp[0] !='\r' );
  4158  002064  0E0D               	movlw	13
  4159  002066  1855               	xorwf	ReadRX232@temp^0,w,c
  4160  002068  A4D8               	btfss	status,2,c
  4161  00206A  EF39  F010         	goto	u6311
  4162  00206E  EF3B  F010         	goto	u6310
  4163  002072                     u6311:
  4164  002072  EFD8  F00F         	goto	l6302
  4165  002076                     u6310:
  4166  002076                     
  4167                           ;RS232.c: 79:         Command[strlen(Command)-1] = '\0';
  4168  002076  0EC9               	movlw	low _Command
  4169  002078  6E05               	movwf	strlen@s^0,c
  4170  00207A  0E01               	movlw	high _Command
  4171  00207C  6E06               	movwf	(strlen@s+1)^0,c
  4172  00207E  ECB7  F019         	call	_strlen	;wreg free
  4173  002082  0EC8               	movlw	low (_Command+65535)
  4174  002084  2405               	addwf	?_strlen^0,w,c
  4175  002086  6ED9               	movwf	fsr2l,c
  4176  002088  0E01               	movlw	high (_Command+65535)
  4177  00208A  2006               	addwfc	(?_strlen+1)^0,w,c
  4178  00208C  6EDA               	movwf	fsr2h,c
  4179  00208E  0E00               	movlw	0
  4180  002090  6EDF               	movwf	indf2,c
  4181  002092                     
  4182                           ;RS232.c: 81:         printf("\r\n\n");
  4183  002092  0E3B               	movlw	low (STR_17+17)
  4184  002094  0100               	movlb	0	; () banked
  4185  002096  6F7D               	movwf	printf@fmt& (0+255),b
  4186  002098  0EFF               	movlw	high (STR_17+17)
  4187  00209A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4188  00209C  ECD6  F01B         	call	_printf	;wreg free
  4189  0020A0                     
  4190                           ;RS232.c: 83:         strlen(Command);
  4191  0020A0  0EC9               	movlw	low _Command
  4192  0020A2  6E05               	movwf	strlen@s^0,c
  4193  0020A4  0E01               	movlw	high _Command
  4194  0020A6  6E06               	movwf	(strlen@s+1)^0,c
  4195  0020A8  ECB7  F019         	call	_strlen	;wreg free
  4196  0020AC                     l6330:
  4197                           
  4198                           ;RS232.c: 86:     return 0;
  4199  0020AC  0E00               	movlw	0
  4200  0020AE  0100               	movlb	0	; () banked
  4201  0020B0  6F8C               	movwf	(?_ReadRX232+1)& (0+255),b
  4202  0020B2  0E00               	movlw	0
  4203  0020B4  6F8B               	movwf	?_ReadRX232& (0+255),b
  4204  0020B6                     l832:
  4205  0020B6  0012               	return		;funcret
  4206  0020B8                     __end_of_ReadRX232:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _strcat *****************
  4210 ;; Defined at:
  4211 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  dest            2   18[COMRAM] PTR unsigned char 
  4214 ;;		 -> Command(16), 
  4215 ;;  src             2   20[COMRAM] PTR const unsigned char 
  4216 ;;		 -> ReadRX232@temp(2), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  2   18[COMRAM] PTR unsigned char 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4228 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;Total ram usage:        4 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    5
  4235 ;; This function calls:
  4236 ;;		_strcpy
  4237 ;;		_strlen
  4238 ;; This function is called by:
  4239 ;;		_ReadRX232
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text6
  4244  0037D4                     __ptext6:
  4245                           	opt callstack 0
  4246  0037D4                     _strcat:
  4247                           	opt callstack 22
  4248  0037D4  C013  F005         	movff	strcat@dest,strlen@s
  4249  0037D8  C014  F006         	movff	strcat@dest+1,strlen@s+1
  4250  0037DC  ECB7  F019         	call	_strlen	;wreg free
  4251  0037E0  5005               	movf	?_strlen^0,w,c
  4252  0037E2  2413               	addwf	strcat@dest^0,w,c
  4253  0037E4  6E09               	movwf	strcpy@dest^0,c
  4254  0037E6  5006               	movf	(?_strlen+1)^0,w,c
  4255  0037E8  2014               	addwfc	(strcat@dest+1)^0,w,c
  4256  0037EA  6E0A               	movwf	(strcpy@dest+1)^0,c
  4257  0037EC  C015  F00B         	movff	strcat@src,strcpy@src
  4258  0037F0  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  4259  0037F4  EC7A  F018         	call	_strcpy	;wreg free
  4260  0037F8  0012               	return		;funcret
  4261  0037FA                     __end_of_strcat:
  4262                           	opt callstack 0
  4263                           
  4264 ;; *************** function _strcpy *****************
  4265 ;; Defined at:
  4266 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  dest            2    8[COMRAM] PTR unsigned char 
  4269 ;;		 -> Command(16), 
  4270 ;;  src             2   10[COMRAM] PTR const unsigned char 
  4271 ;;		 -> STR_52(1), STR_45(1), STR_43(1), STR_36(1), 
  4272 ;;		 -> ReadRX232@temp(2), STR_4(1), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  d               2   16[COMRAM] PTR unsigned char 
  4275 ;;		 -> Command(16), 
  4276 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4277 ;;		 -> STR_52(1), STR_45(1), STR_43(1), STR_36(1), 
  4278 ;;		 -> ReadRX232@temp(2), STR_4(1), 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  2    8[COMRAM] PTR unsigned char 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4292 ;;Total ram usage:       10 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    4
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;;		_SaveCardDat
  4300 ;;		_strcat
  4301 ;;		_RecSerNum
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text7
  4306  0030F4                     __ptext7:
  4307                           	opt callstack 0
  4308  0030F4                     _strcpy:
  4309                           	opt callstack 26
  4310  0030F4  C00B  F00F         	movff	strcpy@src,strcpy@s
  4311  0030F8  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  4312  0030FC  C009  F011         	movff	strcpy@dest,strcpy@d
  4313  003100  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  4314  003104                     l6196:
  4315  003104  500F               	movf	strcpy@s^0,w,c
  4316  003106  6E0D               	movwf	??_strcpy^0,c
  4317  003108  5010               	movf	(strcpy@s+1)^0,w,c
  4318  00310A  6E0E               	movwf	(??_strcpy+1)^0,c
  4319  00310C  4A0F               	infsnz	strcpy@s^0,f,c
  4320  00310E  2A10               	incf	(strcpy@s+1)^0,f,c
  4321  003110  C00D  FFF6         	movff	??_strcpy,tblptrl
  4322  003114  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  4323  003118  0E00               	movlw	low (__mediumconst shr (0+16))
  4324  00311A  6EF8               	movwf	tblptru,c
  4325  00311C  C011  FFD9         	movff	strcpy@d,fsr2l
  4326  003120  C012  FFDA         	movff	strcpy@d+1,fsr2h
  4327  003124  4A11               	infsnz	strcpy@d^0,f,c
  4328  003126  2A12               	incf	(strcpy@d+1)^0,f,c
  4329  003128  0E0E               	movlw	(high __ramtop+-1)
  4330  00312A  64F7               	cpfsgt	tblptrh,c
  4331  00312C  D003               	bra	u6127
  4332  00312E  0008               	tblrd		*
  4333  003130  50F5               	movf	tablat,w,c
  4334  003132  D005               	bra	u6120
  4335  003134                     u6127:
  4336  003134  CFF6 FFE9          	movff	tblptrl,fsr0l
  4337  003138  CFF7 FFEA          	movff	tblptrh,fsr0h
  4338  00313C  50EF               	movf	indf0,w,c
  4339  00313E                     u6120:
  4340  00313E  6EDF               	movwf	indf2,c
  4341  003140  50DF               	movf	indf2,w,c
  4342  003142  A4D8               	btfss	status,2,c
  4343  003144  EFA6  F018         	goto	u6131
  4344  003148  EFA8  F018         	goto	u6130
  4345  00314C                     u6131:
  4346  00314C  EF82  F018         	goto	l6196
  4347  003150                     u6130:
  4348  003150  0012               	return		;funcret
  4349  003152                     __end_of_strcpy:
  4350                           	opt callstack 0
  4351                           
  4352 ;; *************** function _memmove *****************
  4353 ;; Defined at:
  4354 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  d1              2    8[COMRAM] PTR void 
  4357 ;;		 -> Command(16), 
  4358 ;;  s1              2   10[COMRAM] PTR const void 
  4359 ;;		 -> Command(16), 
  4360 ;;  n               2   12[COMRAM] unsigned int 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  s               2   18[COMRAM] PTR const unsigned char 
  4363 ;;		 -> Command(16), 
  4364 ;;  d               2   16[COMRAM] PTR unsigned char 
  4365 ;;		 -> Command(16), 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  2    8[COMRAM] PTR void 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;Total ram usage:       12 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    4
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_ReadRX232
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text8
  4390  0024AA                     __ptext8:
  4391                           	opt callstack 0
  4392  0024AA                     _memmove:
  4393                           	opt callstack 23
  4394  0024AA  C00B  F013         	movff	memmove@s1,memmove@s
  4395  0024AE  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  4396  0024B2  C009  F011         	movff	memmove@d1,memmove@d
  4397  0024B6  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  4398  0024BA  5011               	movf	memmove@d^0,w,c
  4399  0024BC  5C13               	subwf	memmove@s^0,w,c
  4400  0024BE  5012               	movf	(memmove@d+1)^0,w,c
  4401  0024C0  5814               	subwfb	(memmove@s+1)^0,w,c
  4402  0024C2  B0D8               	btfsc	status,0,c
  4403  0024C4  EF66  F012         	goto	u6211
  4404  0024C8  EF68  F012         	goto	u6210
  4405  0024CC                     u6211:
  4406  0024CC  EF9F  F012         	goto	l6272
  4407  0024D0                     u6210:
  4408  0024D0  500D               	movf	memmove@n^0,w,c
  4409  0024D2  2413               	addwf	memmove@s^0,w,c
  4410  0024D4  6E0F               	movwf	??_memmove^0,c
  4411  0024D6  500E               	movf	(memmove@n+1)^0,w,c
  4412  0024D8  2014               	addwfc	(memmove@s+1)^0,w,c
  4413  0024DA  6E10               	movwf	(??_memmove+1)^0,c
  4414  0024DC  500F               	movf	??_memmove^0,w,c
  4415  0024DE  5C11               	subwf	memmove@d^0,w,c
  4416  0024E0  5010               	movf	(??_memmove+1)^0,w,c
  4417  0024E2  5812               	subwfb	(memmove@d+1)^0,w,c
  4418  0024E4  B0D8               	btfsc	status,0,c
  4419  0024E6  EF77  F012         	goto	u6221
  4420  0024EA  EF79  F012         	goto	u6220
  4421  0024EE                     u6221:
  4422  0024EE  EF9F  F012         	goto	l6272
  4423  0024F2                     u6220:
  4424  0024F2  500D               	movf	memmove@n^0,w,c
  4425  0024F4  2613               	addwf	memmove@s^0,f,c
  4426  0024F6  500E               	movf	(memmove@n+1)^0,w,c
  4427  0024F8  2214               	addwfc	(memmove@s+1)^0,f,c
  4428  0024FA  500D               	movf	memmove@n^0,w,c
  4429  0024FC  2611               	addwf	memmove@d^0,f,c
  4430  0024FE  500E               	movf	(memmove@n+1)^0,w,c
  4431  002500  2212               	addwfc	(memmove@d+1)^0,f,c
  4432  002502                     l6268:
  4433  002502  0613               	decf	memmove@s^0,f,c
  4434  002504  A0D8               	btfss	status,0,c
  4435  002506  0614               	decf	(memmove@s+1)^0,f,c
  4436  002508  C013  FFD9         	movff	memmove@s,fsr2l
  4437  00250C  C014  FFDA         	movff	memmove@s+1,fsr2h
  4438  002510  0611               	decf	memmove@d^0,f,c
  4439  002512  A0D8               	btfss	status,0,c
  4440  002514  0612               	decf	(memmove@d+1)^0,f,c
  4441  002516  C011  FFE1         	movff	memmove@d,fsr1l
  4442  00251A  C012  FFE2         	movff	memmove@d+1,fsr1h
  4443  00251E  CFDF FFE7          	movff	indf2,indf1
  4444  002522  060D               	decf	memmove@n^0,f,c
  4445  002524  A0D8               	btfss	status,0,c
  4446  002526  060E               	decf	(memmove@n+1)^0,f,c
  4447  002528  500D               	movf	memmove@n^0,w,c
  4448  00252A  100E               	iorwf	(memmove@n+1)^0,w,c
  4449  00252C  A4D8               	btfss	status,2,c
  4450  00252E  EF9B  F012         	goto	u6231
  4451  002532  EF9D  F012         	goto	u6230
  4452  002536                     u6231:
  4453  002536  EF81  F012         	goto	l6268
  4454  00253A                     u6230:
  4455  00253A  EFC2  F012         	goto	l1825
  4456  00253E                     l6272:
  4457  00253E  500D               	movf	memmove@n^0,w,c
  4458  002540  100E               	iorwf	(memmove@n+1)^0,w,c
  4459  002542  B4D8               	btfsc	status,2,c
  4460  002544  EFA6  F012         	goto	u6241
  4461  002548  EFA8  F012         	goto	u6240
  4462  00254C                     u6241:
  4463  00254C  EFC2  F012         	goto	l1825
  4464  002550                     u6240:
  4465  002550                     l6274:
  4466  002550  C013  FFD9         	movff	memmove@s,fsr2l
  4467  002554  C014  FFDA         	movff	memmove@s+1,fsr2h
  4468  002558  C011  FFE1         	movff	memmove@d,fsr1l
  4469  00255C  C012  FFE2         	movff	memmove@d+1,fsr1h
  4470  002560  CFDF FFE7          	movff	indf2,indf1
  4471  002564  4A13               	infsnz	memmove@s^0,f,c
  4472  002566  2A14               	incf	(memmove@s+1)^0,f,c
  4473  002568  4A11               	infsnz	memmove@d^0,f,c
  4474  00256A  2A12               	incf	(memmove@d+1)^0,f,c
  4475  00256C  060D               	decf	memmove@n^0,f,c
  4476  00256E  A0D8               	btfss	status,0,c
  4477  002570  060E               	decf	(memmove@n+1)^0,f,c
  4478  002572  500D               	movf	memmove@n^0,w,c
  4479  002574  100E               	iorwf	(memmove@n+1)^0,w,c
  4480  002576  A4D8               	btfss	status,2,c
  4481  002578  EFC0  F012         	goto	u6251
  4482  00257C  EFC2  F012         	goto	u6250
  4483  002580                     u6251:
  4484  002580  EFA8  F012         	goto	l6274
  4485  002584                     u6250:
  4486  002584                     l1825:
  4487  002584  0012               	return		;funcret
  4488  002586                     __end_of_memmove:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function _EUSART2_is_rx_ready *****************
  4492 ;; Defined at:
  4493 ;;		line 137 in file "mcc_generated_files/eusart2.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      _Bool 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_ReadRX232
  4518 ;;		_SaveCardDat
  4519 ;;		_RecSerNum
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text9
  4524  003856                     __ptext9:
  4525                           	opt callstack 0
  4526  003856                     _EUSART2_is_rx_ready:
  4527                           	opt callstack 23
  4528  003856                     
  4529                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
  4530  003856  0100               	movlb	0	; () banked
  4531  003858  51B8               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4532  00385A  A4D8               	btfss	status,2,c
  4533  00385C  EF32  F01C         	goto	u6171
  4534  003860  EF35  F01C         	goto	u6170
  4535  003864                     u6171:
  4536  003864  0E01               	movlw	1
  4537  003866  EF36  F01C         	goto	u6180
  4538  00386A                     u6170:
  4539  00386A  0E00               	movlw	0
  4540  00386C                     u6180:
  4541  00386C                     
  4542                           ; BSR set to: 0
  4543  00386C  0012               	return		;funcret
  4544  00386E                     __end_of_EUSART2_is_rx_ready:
  4545                           	opt callstack 0
  4546                           
  4547 ;; *************** function _EUSART2_Read *****************
  4548 ;; Defined at:
  4549 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  readValue       1    4[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;Total ram usage:        1 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    4
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_ReadRX232
  4574 ;;		_SaveCardDat
  4575 ;;		_getch
  4576 ;;		_RecSerNum
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text10
  4581  00326C                     __ptext10:
  4582                           	opt callstack 0
  4583  00326C                     _EUSART2_Read:
  4584                           	opt callstack 23
  4585  00326C                     l6232:
  4586                           
  4587                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
  4588  00326C  0100               	movlb	0	; () banked
  4589  00326E  51B8               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4590  003270  B4D8               	btfsc	status,2,c
  4591  003272  EF3D  F019         	goto	u6191
  4592  003276  EF3F  F019         	goto	u6190
  4593  00327A                     u6191:
  4594  00327A  EF36  F019         	goto	l6232
  4595  00327E                     u6190:
  4596  00327E                     
  4597                           ; BSR set to: 0
  4598                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  4599  00327E  0E8F               	movlw	low _eusart2RxStatusBuffer
  4600  003280  25B9               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4601  003282  6ED9               	movwf	fsr2l,c
  4602  003284  6ADA               	clrf	fsr2h,c
  4603  003286  0E01               	movlw	high _eusart2RxStatusBuffer
  4604  003288  22DA               	addwfc	fsr2h,f,c
  4605  00328A  50DF               	movf	indf2,w,c
  4606  00328C  6FB7               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  4607                           
  4608                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
  4609  00328E  0E97               	movlw	low _eusart2RxBuffer
  4610  003290  25B9               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4611  003292  6ED9               	movwf	fsr2l,c
  4612  003294  6ADA               	clrf	fsr2h,c
  4613  003296  0E01               	movlw	high _eusart2RxBuffer
  4614  003298  22DA               	addwfc	fsr2h,f,c
  4615  00329A  50DF               	movf	indf2,w,c
  4616  00329C  6E05               	movwf	EUSART2_Read@readValue^0,c
  4617  00329E                     
  4618                           ; BSR set to: 0
  4619  00329E  2BB9               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  4620  0032A0                     
  4621                           ; BSR set to: 0
  4622                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  4623  0032A0  0E07               	movlw	7
  4624  0032A2  65B9               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  4625  0032A4  EF56  F019         	goto	u6201
  4626  0032A8  EF58  F019         	goto	u6200
  4627  0032AC                     u6201:
  4628  0032AC  EF5A  F019         	goto	l6242
  4629  0032B0                     u6200:
  4630  0032B0                     
  4631                           ; BSR set to: 0
  4632                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
  4633  0032B0  0E00               	movlw	0
  4634  0032B2  6FB9               	movwf	_eusart2RxTail& (0+255),b	;volatile
  4635  0032B4                     l6242:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
  4639  0032B4  010E               	movlb	14	; () banked
  4640  0032B6  9FC5               	bcf	197,7,b	;volatile
  4641  0032B8                     
  4642                           ; BSR set to: 14
  4643                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
  4644  0032B8  0100               	movlb	0	; () banked
  4645  0032BA  07B8               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  4646  0032BC                     
  4647                           ; BSR set to: 0
  4648                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
  4649  0032BC  010E               	movlb	14	; () banked
  4650  0032BE  8FC5               	bsf	197,7,b	;volatile
  4651  0032C0                     
  4652                           ; BSR set to: 14
  4653                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
  4654  0032C0  5005               	movf	EUSART2_Read@readValue^0,w,c
  4655  0032C2                     
  4656                           ; BSR set to: 14
  4657  0032C2  0012               	return		;funcret
  4658  0032C4                     __end_of_EUSART2_Read:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _DATAEE_ReadByte *****************
  4662 ;; Defined at:
  4663 ;;		line 187 in file "mcc_generated_files/memory.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  bAdd            2    4[COMRAM] unsigned short 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      unsigned char 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4681 ;;Total ram usage:        2 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    4
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_SaveCardDat
  4688 ;;		_RecSerNum
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text11
  4693  00386E                     __ptext11:
  4694                           	opt callstack 0
  4695  00386E                     _DATAEE_ReadByte:
  4696                           	opt callstack 24
  4697  00386E                     
  4698                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  4699  00386E  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  4700  003870  0B03               	andlw	3
  4701  003872  6E7F               	movwf	127,c	;volatile
  4702  003874                     
  4703                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  4704  003874  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  4705  003878                     
  4706                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  4707  003878  0E3F               	movlw	-193
  4708  00387A  1681               	andwf	129,f,c	;volsfr
  4709  00387C                     
  4710                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  4711  00387C  8081               	bsf	129,0,c	;volsfr
  4712  00387E                     
  4713                           ;mcc_generated_files/memory.c: 193:     __nop();
  4714  00387E  F000               	nop	
  4715  003880                     
  4716                           ;mcc_generated_files/memory.c: 194:     __nop();
  4717  003880  F000               	nop	
  4718  003882                     
  4719                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  4720  003882  5080               	movf	128,w,c	;volatile
  4721  003884  0012               	return		;funcret
  4722  003886                     __end_of_DATAEE_ReadByte:
  4723                           	opt callstack 0
  4724                           
  4725 ;; *************** function _ClearEEAddRange *****************
  4726 ;; Defined at:
  4727 ;;		line 105 in file "RS232.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  StartAdd        2   43[BANK0 ] unsigned int 
  4730 ;;  NumBytes        2   45[BANK0 ] unsigned int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  i               2   84[COMRAM] int 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;Total ram usage:        6 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:   13
  4749 ;; This function calls:
  4750 ;;		_DATAEE_WriteByte
  4751 ;;		_printf
  4752 ;; This function is called by:
  4753 ;;		_SaveCardDat
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text12
  4758  003152                     __ptext12:
  4759                           	opt callstack 0
  4760  003152                     _ClearEEAddRange:
  4761                           	opt callstack 15
  4762  003152                     
  4763                           ;RS232.c: 108:     printf("Clearing EEPROM from Address: 0x%04x, Num Bytes: %i \r\n", St
      +                          artAdd, NumBytes);
  4764  003152  0EF6               	movlw	low STR_32
  4765  003154  0100               	movlb	0	; () banked
  4766  003156  6F7D               	movwf	printf@fmt& (0+255),b
  4767  003158  0EFB               	movlw	high STR_32
  4768  00315A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4769  00315C  C08B  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  4770  003160  C08C  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  4771  003164  C08D  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  4772  003168  C08E  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  4773  00316C  ECD6  F01B         	call	_printf	;wreg free
  4774  003170                     
  4775                           ;RS232.c: 112:     for(i=0; i<NumBytes; i++){
  4776  003170  0E00               	movlw	0
  4777  003172  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  4778  003174  0E00               	movlw	0
  4779  003176  6E55               	movwf	ClearEEAddRange@i^0,c
  4780  003178  EFCB  F018         	goto	l6346
  4781  00317C                     l6340:
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;RS232.c: 113:         DATAEE_WriteByte(StartAdd, 0xFF);
  4785  00317C  C08B  F005         	movff	ClearEEAddRange@StartAdd,DATAEE_WriteByte@bAdd
  4786  003180  C08C  F006         	movff	ClearEEAddRange@StartAdd+1,DATAEE_WriteByte@bAdd+1
  4787  003184  0EFF               	movlw	255
  4788  003186  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4789  003188  EC76  F01A         	call	_DATAEE_WriteByte	;wreg free
  4790  00318C                     
  4791                           ;RS232.c: 114:         StartAdd++;
  4792  00318C  0100               	movlb	0	; () banked
  4793  00318E  4B8B               	infsnz	ClearEEAddRange@StartAdd& (0+255),f,b
  4794  003190  2B8C               	incf	(ClearEEAddRange@StartAdd+1)& (0+255),f,b
  4795  003192                     
  4796                           ; BSR set to: 0
  4797                           ;RS232.c: 115:     }
  4798  003192  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  4799  003194  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  4800  003196                     l6346:
  4801  003196  0100               	movlb	0	; () banked
  4802  003198  518D               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  4803  00319A  5C55               	subwf	ClearEEAddRange@i^0,w,c
  4804  00319C  518E               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  4805  00319E  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  4806  0031A0  A0D8               	btfss	status,0,c
  4807  0031A2  EFD5  F018         	goto	u6321
  4808  0031A6  EFD7  F018         	goto	u6320
  4809  0031AA                     u6321:
  4810  0031AA  EFBE  F018         	goto	l6340
  4811  0031AE                     u6320:
  4812  0031AE                     
  4813                           ; BSR set to: 0
  4814  0031AE  0012               	return		;funcret
  4815  0031B0                     __end_of_ClearEEAddRange:
  4816                           	opt callstack 0
  4817                           
  4818 ;; *************** function _DATAEE_WriteByte *****************
  4819 ;; Defined at:
  4820 ;;		line 165 in file "mcc_generated_files/memory.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  bAdd            2    4[COMRAM] unsigned short 
  4823 ;;  bData           1    6[COMRAM] unsigned char 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;Total ram usage:        4 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    4
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_ClearEEAddRange
  4846 ;;		_SaveCardDat
  4847 ;;		_RecSerNum
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text13
  4852  0034EC                     __ptext13:
  4853                           	opt callstack 0
  4854  0034EC                     _DATAEE_WriteByte:
  4855                           	opt callstack 24
  4856  0034EC                     
  4857                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  4858  0034EC  0E00               	movlw	0
  4859  0034EE  BEF2               	btfsc	242,7,c	;volatile
  4860  0034F0  0E01               	movlw	1
  4861  0034F2  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  4862  0034F4                     
  4863                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  4864  0034F4  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  4865  0034F6  0B03               	andlw	3
  4866  0034F8  6E7F               	movwf	127,c	;volatile
  4867  0034FA                     
  4868                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  4869  0034FA  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  4870  0034FE                     
  4871                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  4872  0034FE  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  4873  003502                     
  4874                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  4875  003502  0E3F               	movlw	-193
  4876  003504  1681               	andwf	129,f,c	;volsfr
  4877  003506                     
  4878                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  4879  003506  8481               	bsf	129,2,c	;volsfr
  4880  003508                     
  4881                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  4882  003508  9EF2               	bcf	242,7,c	;volatile
  4883  00350A                     
  4884                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  4885  00350A  0E55               	movlw	85
  4886  00350C  6E82               	movwf	130,c	;volsfr
  4887  00350E                     
  4888                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  4889  00350E  0EAA               	movlw	170
  4890  003510  6E82               	movwf	130,c	;volsfr
  4891  003512                     
  4892                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  4893  003512  8281               	bsf	129,1,c	;volsfr
  4894  003514                     l212:
  4895                           
  4896                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  4897  003514  B281               	btfsc	129,1,c	;volsfr
  4898  003516  EF8F  F01A         	goto	u6151
  4899  00351A  EF91  F01A         	goto	u6150
  4900  00351E                     u6151:
  4901  00351E  EF8A  F01A         	goto	l212
  4902  003522                     u6150:
  4903  003522                     
  4904                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  4905  003522  9481               	bcf	129,2,c	;volsfr
  4906                           
  4907                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  4908  003524  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  4909  003526  D002               	bra	u6165
  4910  003528  9EF2               	bcf	242,7,c	;volatile
  4911  00352A  D001               	bra	u6166
  4912  00352C                     u6165:
  4913  00352C  8EF2               	bsf	242,7,c	;volatile
  4914  00352E                     u6166:
  4915  00352E  0012               	return		;funcret
  4916  003530                     __end_of_DATAEE_WriteByte:
  4917                           	opt callstack 0
  4918                           
  4919 ;; *************** function _InitialiseString *****************
  4920 ;; Defined at:
  4921 ;;		line 18 in file "RS232.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;		None
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4939 ;;Total ram usage:        0 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:   13
  4942 ;; This function calls:
  4943 ;;		_Initalisation
  4944 ;;		_printf
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;;		_ValidateCmd
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text14
  4952  002AC6                     __ptext14:
  4953                           	opt callstack 0
  4954  002AC6                     _InitialiseString:
  4955                           	opt callstack 16
  4956  002AC6                     
  4957                           ;RS232.c: 22:     printf("\rDan and Sam's Modbus GPIO Expansion - AP00070125-01 Rev -\r\
      +                          n");
  4958  002AC6  0E82               	movlw	low STR_19
  4959  002AC8  0100               	movlb	0	; () banked
  4960  002ACA  6F7D               	movwf	printf@fmt& (0+255),b
  4961  002ACC  0EFB               	movlw	high STR_19
  4962  002ACE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4963  002AD0  ECD6  F01B         	call	_printf	;wreg free
  4964  002AD4                     
  4965                           ;RS232.c: 24:     Initalisation();
  4966  002AD4  ECBE  F01C         	call	_Initalisation	;wreg free
  4967  002AD8                     
  4968                           ;RS232.c: 26:     printf("\rCard Ser No. 2109002 \r\n");
  4969  002AD8  0E82               	movlw	low STR_20
  4970  002ADA  0100               	movlb	0	; () banked
  4971  002ADC  6F7D               	movwf	printf@fmt& (0+255),b
  4972  002ADE  0EFE               	movlw	high STR_20
  4973  002AE0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4974  002AE2  ECD6  F01B         	call	_printf	;wreg free
  4975  002AE6                     
  4976                           ;RS232.c: 27:     printf("\rCard Address. 0x05 \r\n");
  4977  002AE6  0EFC               	movlw	low STR_21
  4978  002AE8  0100               	movlb	0	; () banked
  4979  002AEA  6F7D               	movwf	printf@fmt& (0+255),b
  4980  002AEC  0EFE               	movlw	high STR_21
  4981  002AEE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4982  002AF0  ECD6  F01B         	call	_printf	;wreg free
  4983  002AF4                     
  4984                           ;RS232.c: 28:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  4985  002AF4  0EC6               	movlw	low STR_22
  4986  002AF6  0100               	movlb	0	; () banked
  4987  002AF8  6F7D               	movwf	printf@fmt& (0+255),b
  4988  002AFA  0EFC               	movlw	high STR_22
  4989  002AFC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4990  002AFE  0ED1               	movlw	low STR_23
  4991  002B00  6F7F               	movwf	(?_printf+2)& (0+255),b
  4992  002B02  0EFF               	movlw	high STR_23
  4993  002B04  6F80               	movwf	(?_printf+3)& (0+255),b
  4994  002B06  0EDD               	movlw	low STR_24
  4995  002B08  6F81               	movwf	(?_printf+4)& (0+255),b
  4996  002B0A  0EFF               	movlw	high STR_24
  4997  002B0C  6F82               	movwf	(?_printf+5)& (0+255),b
  4998  002B0E  0E08               	movlw	8
  4999  002B10  6F84               	movwf	(?_printf+7)& (0+255),b
  5000  002B12  0E34               	movlw	52
  5001  002B14  6F83               	movwf	(?_printf+6)& (0+255),b
  5002  002B16  ECD6  F01B         	call	_printf	;wreg free
  5003  002B1A                     
  5004                           ;RS232.c: 30:     printf("\rFunction Codes Supported:\r\n");
  5005  002B1A  0EF7               	movlw	low STR_25
  5006  002B1C  0100               	movlb	0	; () banked
  5007  002B1E  6F7D               	movwf	printf@fmt& (0+255),b
  5008  002B20  0EFD               	movlw	high STR_25
  5009  002B22  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5010  002B24  ECD6  F01B         	call	_printf	;wreg free
  5011  002B28                     
  5012                           ;RS232.c: 31:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  5013  002B28  0E63               	movlw	low STR_26
  5014  002B2A  0100               	movlb	0	; () banked
  5015  002B2C  6F7D               	movwf	printf@fmt& (0+255),b
  5016  002B2E  0EFC               	movlw	high STR_26
  5017  002B30  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5018  002B32  ECD6  F01B         	call	_printf	;wreg free
  5019  002B36                     
  5020                           ;RS232.c: 32:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  5021  002B36  0EBF               	movlw	low STR_27
  5022  002B38  0100               	movlb	0	; () banked
  5023  002B3A  6F7D               	movwf	printf@fmt& (0+255),b
  5024  002B3C  0EFB               	movlw	high STR_27
  5025  002B3E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5026  002B40  ECD6  F01B         	call	_printf	;wreg free
  5027  002B44                     
  5028                           ;RS232.c: 33:     printf("\rInitalisation Complete - Ready\r\n\n");
  5029  002B44  0E39               	movlw	low STR_28
  5030  002B46  0100               	movlb	0	; () banked
  5031  002B48  6F7D               	movwf	printf@fmt& (0+255),b
  5032  002B4A  0EFD               	movlw	high STR_28
  5033  002B4C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5034  002B4E  ECD6  F01B         	call	_printf	;wreg free
  5035  002B52  0012               	return		;funcret
  5036  002B54                     __end_of_InitialiseString:
  5037                           	opt callstack 0
  5038                           
  5039 ;; *************** function _Initalisation *****************
  5040 ;; Defined at:
  5041 ;;		line 11 in file "RS232.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		None
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    4
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_InitialiseString
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text15
  5070  00397C                     __ptext15:
  5071                           	opt callstack 0
  5072  00397C                     _Initalisation:
  5073                           	opt callstack 24
  5074  00397C  0012               	return		;funcret
  5075  00397E                     __end_of_Initalisation:
  5076                           	opt callstack 0
  5077                           
  5078 ;; *************** function _SYSTEM_Initialize *****************
  5079 ;; Defined at:
  5080 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    6
  5101 ;; This function calls:
  5102 ;;		_EUSART1_Initialize
  5103 ;;		_EUSART2_Initialize
  5104 ;;		_INTERRUPT_Initialize
  5105 ;;		_OSCILLATOR_Initialize
  5106 ;;		_PIN_MANAGER_Initialize
  5107 ;;		_PMD_Initialize
  5108 ;; This function is called by:
  5109 ;;		_main
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text16
  5114  00383C                     __ptext16:
  5115                           	opt callstack 0
  5116  00383C                     _SYSTEM_Initialize:
  5117                           	opt callstack 24
  5118  00383C                     
  5119                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5120  00383C  ECBB  F01C         	call	_INTERRUPT_Initialize	;wreg free
  5121  003840                     
  5122                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5123  003840  EC10  F01C         	call	_PMD_Initialize	;wreg free
  5124  003844                     
  5125                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5126  003844  ECAA  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  5127  003848                     
  5128                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5129  003848  EC43  F01C         	call	_OSCILLATOR_Initialize	;wreg free
  5130  00384C                     
  5131                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5132  00384C  ECF4  F016         	call	_EUSART1_Initialize	;wreg free
  5133  003850                     
  5134                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  5135  003850  EC35  F016         	call	_EUSART2_Initialize	;wreg free
  5136  003854  0012               	return		;funcret
  5137  003856                     __end_of_SYSTEM_Initialize:
  5138                           	opt callstack 0
  5139                           
  5140 ;; *************** function _PMD_Initialize *****************
  5141 ;; Defined at:
  5142 ;;		line 74 in file "mcc_generated_files/mcc.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;Total ram usage:        0 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    4
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_SYSTEM_Initialize
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text17
  5171  003820                     __ptext17:
  5172                           	opt callstack 0
  5173  003820                     _PMD_Initialize:
  5174                           	opt callstack 25
  5175  003820                     
  5176                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  5177  003820  0E00               	movlw	0
  5178  003822  010E               	movlb	14	; () banked
  5179  003824  6FE1               	movwf	225,b	;volatile
  5180                           
  5181                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  5182  003826  0E00               	movlw	0
  5183  003828  6FE2               	movwf	226,b	;volatile
  5184                           
  5185                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  5186  00382A  0E00               	movlw	0
  5187  00382C  6FE3               	movwf	227,b	;volatile
  5188                           
  5189                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  5190  00382E  0E00               	movlw	0
  5191  003830  6FE4               	movwf	228,b	;volatile
  5192                           
  5193                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  5194  003832  0E00               	movlw	0
  5195  003834  6FE5               	movwf	229,b	;volatile
  5196                           
  5197                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  5198  003836  0E00               	movlw	0
  5199  003838  6FE6               	movwf	230,b	;volatile
  5200  00383A                     
  5201                           ; BSR set to: 14
  5202  00383A  0012               	return		;funcret
  5203  00383C                     __end_of_PMD_Initialize:
  5204                           	opt callstack 0
  5205                           
  5206 ;; *************** function _PIN_MANAGER_Initialize *****************
  5207 ;; Defined at:
  5208 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_SYSTEM_Initialize
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text18
  5237  002B54                     __ptext18:
  5238                           	opt callstack 0
  5239  002B54                     _PIN_MANAGER_Initialize:
  5240                           	opt callstack 25
  5241  002B54                     
  5242                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5243  002B54  0E00               	movlw	0
  5244  002B56  6E87               	movwf	135,c	;volatile
  5245                           
  5246                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5247  002B58  0E00               	movlw	0
  5248  002B5A  6E86               	movwf	134,c	;volatile
  5249                           
  5250                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5251  002B5C  0E00               	movlw	0
  5252  002B5E  6E83               	movwf	131,c	;volatile
  5253                           
  5254                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5255  002B60  0E00               	movlw	0
  5256  002B62  6E84               	movwf	132,c	;volatile
  5257                           
  5258                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5259  002B64  0E00               	movlw	0
  5260  002B66  6E85               	movwf	133,c	;volatile
  5261                           
  5262                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5263  002B68  0E07               	movlw	7
  5264  002B6A  6E8C               	movwf	140,c	;volatile
  5265                           
  5266                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  5267  002B6C  0E07               	movlw	7
  5268  002B6E  6E88               	movwf	136,c	;volatile
  5269                           
  5270                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5271  002B70  0EBF               	movlw	191
  5272  002B72  6E89               	movwf	137,c	;volatile
  5273                           
  5274                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5275  002B74  0EBF               	movlw	191
  5276  002B76  6E8A               	movwf	138,c	;volatile
  5277                           
  5278                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  5279  002B78  0EFE               	movlw	254
  5280  002B7A  6E8B               	movwf	139,c	;volatile
  5281  002B7C                     
  5282                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5283  002B7C  010F               	movlb	15	; () banked
  5284  002B7E  6926               	setf	38,b	;volatile
  5285                           
  5286                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  5287  002B80  0E3B               	movlw	59
  5288  002B82  6F21               	movwf	33,b	;volatile
  5289                           
  5290                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  5291  002B84  0E37               	movlw	55
  5292  002B86  6F19               	movwf	25,b	;volatile
  5293                           
  5294                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5295  002B88  0E07               	movlw	7
  5296  002B8A  6F2E               	movwf	46,b	;volatile
  5297  002B8C                     
  5298                           ; BSR set to: 15
  5299                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5300  002B8C  6911               	setf	17,b	;volatile
  5301                           
  5302                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5303  002B8E  0E00               	movlw	0
  5304  002B90  6F25               	movwf	37,b	;volatile
  5305                           
  5306                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5307  002B92  0E00               	movlw	0
  5308  002B94  6F2D               	movwf	45,b	;volatile
  5309                           
  5310                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5311  002B96  0E00               	movlw	0
  5312  002B98  6F18               	movwf	24,b	;volatile
  5313                           
  5314                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5315  002B9A  0E00               	movlw	0
  5316  002B9C  6F10               	movwf	16,b	;volatile
  5317                           
  5318                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5319  002B9E  0E00               	movlw	0
  5320  002BA0  6F20               	movwf	32,b	;volatile
  5321                           
  5322                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  5323  002BA2  0E00               	movlw	0
  5324  002BA4  6F2C               	movwf	44,b	;volatile
  5325                           
  5326                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  5327  002BA6  0E00               	movlw	0
  5328  002BA8  6F0F               	movwf	15,b	;volatile
  5329                           
  5330                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  5331  002BAA  0E00               	movlw	0
  5332  002BAC  6F17               	movwf	23,b	;volatile
  5333                           
  5334                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  5335  002BAE  0E00               	movlw	0
  5336  002BB0  6F1F               	movwf	31,b	;volatile
  5337                           
  5338                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  5339  002BB2  0E00               	movlw	0
  5340  002BB4  6F24               	movwf	36,b	;volatile
  5341  002BB6                     
  5342                           ; BSR set to: 15
  5343                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  5344  002BB6  690E               	setf	14,b	;volatile
  5345  002BB8                     
  5346                           ; BSR set to: 15
  5347                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  5348  002BB8  6916               	setf	22,b	;volatile
  5349  002BBA                     
  5350                           ; BSR set to: 15
  5351                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  5352  002BBA  691E               	setf	30,b	;volatile
  5353  002BBC                     
  5354                           ; BSR set to: 15
  5355                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  5356  002BBC  6923               	setf	35,b	;volatile
  5357                           
  5358                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  5359  002BBE  0E07               	movlw	7
  5360  002BC0  6F2B               	movwf	43,b	;volatile
  5361  002BC2                     
  5362                           ; BSR set to: 15
  5363                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  5364  002BC2  690D               	setf	13,b	;volatile
  5365  002BC4                     
  5366                           ; BSR set to: 15
  5367                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  5368  002BC4  6915               	setf	21,b	;volatile
  5369  002BC6                     
  5370                           ; BSR set to: 15
  5371                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  5372  002BC6  691D               	setf	29,b	;volatile
  5373  002BC8                     
  5374                           ; BSR set to: 15
  5375                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  5376  002BC8  6922               	setf	34,b	;volatile
  5377                           
  5378                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  5379  002BCA  0E0F               	movlw	15
  5380  002BCC  6F2A               	movwf	42,b	;volatile
  5381                           
  5382                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  5383  002BCE  0E17               	movlw	23
  5384  002BD0  010E               	movlb	14	; () banked
  5385  002BD2  6FB5               	movwf	181,b	;volatile
  5386                           
  5387                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  5388  002BD4  0E0B               	movlw	11
  5389  002BD6  6FF5               	movwf	245,b	;volatile
  5390                           
  5391                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  5392  002BD8  0E09               	movlw	9
  5393  002BDA  6FFD               	movwf	253,b	;volatile
  5394                           
  5395                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  5396  002BDC  0E0F               	movlw	15
  5397  002BDE  6F8D               	movwf	141,b	;volatile
  5398  002BE0                     
  5399                           ; BSR set to: 14
  5400  002BE0  0012               	return		;funcret
  5401  002BE2                     __end_of_PIN_MANAGER_Initialize:
  5402                           	opt callstack 0
  5403                           
  5404 ;; *************** function _OSCILLATOR_Initialize *****************
  5405 ;; Defined at:
  5406 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    4
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_SYSTEM_Initialize
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text19
  5435  003886                     __ptext19:
  5436                           	opt callstack 0
  5437  003886                     _OSCILLATOR_Initialize:
  5438                           	opt callstack 25
  5439  003886                     
  5440                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  5441  003886  0E60               	movlw	96
  5442  003888  010E               	movlb	14	; () banked
  5443  00388A  6FD8               	movwf	216,b	;volatile
  5444                           
  5445                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  5446  00388C  0E00               	movlw	0
  5447  00388E  6FDA               	movwf	218,b	;volatile
  5448                           
  5449                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5450  003890  0E00               	movlw	0
  5451  003892  6FDC               	movwf	220,b	;volatile
  5452                           
  5453                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  5454  003894  0E06               	movlw	6
  5455  003896  6FDE               	movwf	222,b	;volatile
  5456                           
  5457                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5458  003898  0E00               	movlw	0
  5459  00389A  6FDD               	movwf	221,b	;volatile
  5460  00389C                     
  5461                           ; BSR set to: 14
  5462  00389C  0012               	return		;funcret
  5463  00389E                     __end_of_OSCILLATOR_Initialize:
  5464                           	opt callstack 0
  5465                           
  5466 ;; *************** function _INTERRUPT_Initialize *****************
  5467 ;; Defined at:
  5468 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		None
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;Total ram usage:        0 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    4
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_SYSTEM_Initialize
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text20
  5497  003976                     __ptext20:
  5498                           	opt callstack 0
  5499  003976                     _INTERRUPT_Initialize:
  5500                           	opt callstack 25
  5501  003976                     
  5502                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  5503  003976  9AF2               	bcf	242,5,c	;volatile
  5504  003978  0012               	return		;funcret
  5505  00397A                     __end_of_INTERRUPT_Initialize:
  5506                           	opt callstack 0
  5507                           
  5508 ;; *************** function _EUSART2_Initialize *****************
  5509 ;; Defined at:
  5510 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    5
  5531 ;; This function calls:
  5532 ;;		_EUSART2_SetErrorHandler
  5533 ;;		_EUSART2_SetFramingErrorHandler
  5534 ;;		_EUSART2_SetOverrunErrorHandler
  5535 ;;		_EUSART2_SetRxInterruptHandler
  5536 ;;		_EUSART2_SetTxInterruptHandler
  5537 ;; This function is called by:
  5538 ;;		_SYSTEM_Initialize
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text21
  5543  002C6A                     __ptext21:
  5544                           	opt callstack 0
  5545  002C6A                     _EUSART2_Initialize:
  5546                           	opt callstack 24
  5547  002C6A                     
  5548                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  5549  002C6A  010E               	movlb	14	; () banked
  5550  002C6C  9FC5               	bcf	197,7,b	;volatile
  5551  002C6E                     
  5552                           ; BSR set to: 14
  5553                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  5554  002C6E  0EB0               	movlw	low _EUSART2_Receive_ISR
  5555  002C70  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  5556  002C72  0E28               	movlw	high _EUSART2_Receive_ISR
  5557  002C74  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  5558  002C76  EC76  F01C         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  5559  002C7A                     
  5560                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  5561  002C7A  010E               	movlb	14	; () banked
  5562  002C7C  9DC5               	bcf	197,6,b	;volatile
  5563                           
  5564                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  5565  002C7E  0E56               	movlw	low _EUSART2_Transmit_ISR
  5566  002C80  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  5567  002C82  0E34               	movlw	high _EUSART2_Transmit_ISR
  5568  002C84  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  5569  002C86  EC71  F01C         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  5570  002C8A                     
  5571                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  5572  002C8A  0E08               	movlw	8
  5573  002C8C  010E               	movlb	14	; () banked
  5574  002C8E  6F9F               	movwf	159,b	;volatile
  5575  002C90                     
  5576                           ; BSR set to: 14
  5577                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  5578  002C90  0E90               	movlw	144
  5579  002C92  6F9D               	movwf	157,b	;volatile
  5580  002C94                     
  5581                           ; BSR set to: 14
  5582                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  5583  002C94  0E24               	movlw	36
  5584  002C96  6F9E               	movwf	158,b	;volatile
  5585  002C98                     
  5586                           ; BSR set to: 14
  5587                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  5588  002C98  0E40               	movlw	64
  5589  002C9A  6F9B               	movwf	155,b	;volatile
  5590  002C9C                     
  5591                           ; BSR set to: 14
  5592                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  5593  002C9C  0E03               	movlw	3
  5594  002C9E  6F9C               	movwf	156,b	;volatile
  5595  002CA0                     
  5596                           ; BSR set to: 14
  5597                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  5598  002CA0  0E7E               	movlw	low _EUSART2_DefaultFramingErrorHandler
  5599  002CA2  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  5600  002CA4  0E39               	movlw	high _EUSART2_DefaultFramingErrorHandler
  5601  002CA6  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  5602  002CA8  EC80  F01C         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  5603  002CAC                     
  5604                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  5605  002CAC  0E50               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  5606  002CAE  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  5607  002CB0  0E39               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  5608  002CB2  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5609  002CB4  EC7B  F01C         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  5610  002CB8                     
  5611                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  5612  002CB8  0E64               	movlw	low _EUSART2_DefaultErrorHandler
  5613  002CBA  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  5614  002CBC  0E39               	movlw	high _EUSART2_DefaultErrorHandler
  5615  002CBE  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  5616  002CC0  EC85  F01C         	call	_EUSART2_SetErrorHandler	;wreg free
  5617                           
  5618                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  5619  002CC4  0E00               	movlw	0
  5620  002CC6  0100               	movlb	0	; () banked
  5621  002CC8  6FB7               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5622                           
  5623                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  5624  002CCA  0E00               	movlw	0
  5625  002CCC  6FBB               	movwf	_eusart2TxHead& (0+255),b	;volatile
  5626                           
  5627                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  5628  002CCE  0E00               	movlw	0
  5629  002CD0  6FBA               	movwf	_eusart2TxTail& (0+255),b	;volatile
  5630                           
  5631                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  5632  002CD2  0E08               	movlw	8
  5633  002CD4  0101               	movlb	1	; () banked
  5634  002CD6  6FED               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  5635                           
  5636                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  5637  002CD8  0E00               	movlw	0
  5638  002CDA  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  5639                           
  5640                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  5641  002CDC  0E00               	movlw	0
  5642  002CDE  0100               	movlb	0	; () banked
  5643  002CE0  6FB9               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5644                           
  5645                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  5646  002CE2  0E00               	movlw	0
  5647  002CE4  6FB8               	movwf	_eusart2RxCount& (0+255),b	;volatile
  5648  002CE6                     
  5649                           ; BSR set to: 0
  5650                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  5651  002CE6  010E               	movlb	14	; () banked
  5652  002CE8  8FC5               	bsf	197,7,b	;volatile
  5653  002CEA                     
  5654                           ; BSR set to: 14
  5655  002CEA  0012               	return		;funcret
  5656  002CEC                     __end_of_EUSART2_Initialize:
  5657                           	opt callstack 0
  5658                           
  5659 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  5660 ;; Defined at:
  5661 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5664 ;;		 -> EUSART2_Transmit_ISR(1), 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;Total ram usage:        2 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    4
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_EUSART2_Initialize
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text22
  5691  0038E2                     __ptext22:
  5692                           	opt callstack 0
  5693  0038E2                     _EUSART2_SetTxInterruptHandler:
  5694                           	opt callstack 24
  5695  0038E2                     
  5696                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5697  0038E2  C005  F1EB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  5698  0038E6  C006  F1EC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  5699  0038EA  0012               	return		;funcret
  5700  0038EC                     __end_of_EUSART2_SetTxInterruptHandler:
  5701                           	opt callstack 0
  5702                           
  5703 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  5704 ;; Defined at:
  5705 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5708 ;;		 -> EUSART2_Receive_ISR(1), 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    4
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_EUSART2_Initialize
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text23
  5735  0038EC                     __ptext23:
  5736                           	opt callstack 0
  5737  0038EC                     _EUSART2_SetRxInterruptHandler:
  5738                           	opt callstack 24
  5739  0038EC                     
  5740                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5741  0038EC  C005  F1E9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  5742  0038F0  C006  F1EA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  5743  0038F4  0012               	return		;funcret
  5744  0038F6                     __end_of_EUSART2_SetRxInterruptHandler:
  5745                           	opt callstack 0
  5746                           
  5747 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  5748 ;; Defined at:
  5749 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5752 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;Total ram usage:        2 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    4
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_EUSART2_Initialize
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text24
  5779  0038F6                     __ptext24:
  5780                           	opt callstack 0
  5781  0038F6                     _EUSART2_SetOverrunErrorHandler:
  5782                           	opt callstack 24
  5783  0038F6                     
  5784                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  5785  0038F6  C005  F1E1         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  5786  0038FA  C006  F1E2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  5787  0038FE  0012               	return		;funcret
  5788  003900                     __end_of_EUSART2_SetOverrunErrorHandler:
  5789                           	opt callstack 0
  5790                           
  5791 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  5792 ;; Defined at:
  5793 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5796 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;Total ram usage:        2 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    4
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_EUSART2_Initialize
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text25
  5823  003900                     __ptext25:
  5824                           	opt callstack 0
  5825  003900                     _EUSART2_SetFramingErrorHandler:
  5826                           	opt callstack 24
  5827  003900                     
  5828                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  5829  003900  C005  F1E3         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  5830  003904  C006  F1E4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  5831  003908  0012               	return		;funcret
  5832  00390A                     __end_of_EUSART2_SetFramingErrorHandler:
  5833                           	opt callstack 0
  5834                           
  5835 ;; *************** function _EUSART2_SetErrorHandler *****************
  5836 ;; Defined at:
  5837 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5840 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5856 ;;Total ram usage:        2 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    4
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_EUSART2_Initialize
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text26
  5867  00390A                     __ptext26:
  5868                           	opt callstack 0
  5869  00390A                     _EUSART2_SetErrorHandler:
  5870                           	opt callstack 24
  5871  00390A                     
  5872                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  5873  00390A  C005  F1DF         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  5874  00390E  C006  F1E0         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  5875  003912  0012               	return		;funcret
  5876  003914                     __end_of_EUSART2_SetErrorHandler:
  5877                           	opt callstack 0
  5878                           
  5879 ;; *************** function _EUSART1_Initialize *****************
  5880 ;; Defined at:
  5881 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    5
  5902 ;; This function calls:
  5903 ;;		_EUSART1_SetErrorHandler
  5904 ;;		_EUSART1_SetFramingErrorHandler
  5905 ;;		_EUSART1_SetOverrunErrorHandler
  5906 ;;		_EUSART1_SetRxInterruptHandler
  5907 ;;		_EUSART1_SetTxInterruptHandler
  5908 ;; This function is called by:
  5909 ;;		_SYSTEM_Initialize
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text27
  5914  002DE8                     __ptext27:
  5915                           	opt callstack 0
  5916  002DE8                     _EUSART1_Initialize:
  5917                           	opt callstack 24
  5918  002DE8                     
  5919                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  5920  002DE8  010E               	movlb	14	; () banked
  5921  002DEA  9BC5               	bcf	197,5,b	;volatile
  5922  002DEC                     
  5923                           ; BSR set to: 14
  5924                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  5925  002DEC  0E70               	movlw	low _EUSART1_Receive_ISR
  5926  002DEE  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  5927  002DF0  0E29               	movlw	high _EUSART1_Receive_ISR
  5928  002DF2  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  5929  002DF4  EC8F  F01C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  5930  002DF8                     
  5931                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  5932  002DF8  010E               	movlb	14	; () banked
  5933  002DFA  99C5               	bcf	197,4,b	;volatile
  5934                           
  5935                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  5936  002DFC  0E74               	movlw	low _EUSART1_Transmit_ISR
  5937  002DFE  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  5938  002E00  0E35               	movlw	high _EUSART1_Transmit_ISR
  5939  002E02  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  5940  002E04  EC8A  F01C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  5941  002E08                     
  5942                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  5943  002E08  0E08               	movlw	8
  5944  002E0A  6E9F               	movwf	159,c	;volatile
  5945  002E0C                     
  5946                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  5947  002E0C  0E90               	movlw	144
  5948  002E0E  6E9D               	movwf	157,c	;volatile
  5949  002E10                     
  5950                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  5951  002E10  0E24               	movlw	36
  5952  002E12  6E9E               	movwf	158,c	;volatile
  5953  002E14                     
  5954                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  5955  002E14  0E40               	movlw	64
  5956  002E16  6E9B               	movwf	155,c	;volatile
  5957  002E18                     
  5958                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  5959  002E18  0E03               	movlw	3
  5960  002E1A  6E9C               	movwf	156,c	;volatile
  5961  002E1C                     
  5962                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  5963  002E1C  0E80               	movlw	low _EUSART1_DefaultFramingErrorHandler
  5964  002E1E  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5965  002E20  0E39               	movlw	high _EUSART1_DefaultFramingErrorHandler
  5966  002E22  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5967  002E24  EC99  F01C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5968  002E28                     
  5969                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  5970  002E28  0E6A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  5971  002E2A  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5972  002E2C  0E39               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  5973  002E2E  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5974  002E30  EC94  F01C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5975  002E34                     
  5976                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  5977  002E34  0E70               	movlw	low _EUSART1_DefaultErrorHandler
  5978  002E36  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5979  002E38  0E39               	movlw	high _EUSART1_DefaultErrorHandler
  5980  002E3A  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5981  002E3C  EC9E  F01C         	call	_EUSART1_SetErrorHandler	;wreg free
  5982                           
  5983                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  5984  002E40  0E00               	movlw	0
  5985  002E42  0100               	movlb	0	; () banked
  5986  002E44  6FB2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5987                           
  5988                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  5989  002E46  0E00               	movlw	0
  5990  002E48  6FB6               	movwf	_eusart1TxHead& (0+255),b	;volatile
  5991                           
  5992                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  5993  002E4A  0E00               	movlw	0
  5994  002E4C  6FB5               	movwf	_eusart1TxTail& (0+255),b	;volatile
  5995                           
  5996                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  5997  002E4E  0E10               	movlw	16
  5998  002E50  6FBE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5999                           
  6000                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  6001  002E52  0E00               	movlw	0
  6002  002E54  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  6003                           
  6004                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  6005  002E56  0E00               	movlw	0
  6006  002E58  6FB4               	movwf	_eusart1RxTail& (0+255),b	;volatile
  6007                           
  6008                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  6009  002E5A  0E00               	movlw	0
  6010  002E5C  6FB3               	movwf	_eusart1RxCount& (0+255),b	;volatile
  6011  002E5E                     
  6012                           ; BSR set to: 0
  6013                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  6014  002E5E  010E               	movlb	14	; () banked
  6015  002E60  8BC5               	bsf	197,5,b	;volatile
  6016  002E62                     
  6017                           ; BSR set to: 14
  6018  002E62  0012               	return		;funcret
  6019  002E64                     __end_of_EUSART1_Initialize:
  6020                           	opt callstack 0
  6021                           
  6022 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6023 ;; Defined at:
  6024 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6027 ;;		 -> EUSART1_Transmit_ISR(1), 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;Total ram usage:        2 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    4
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_EUSART1_Initialize
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text28
  6054  003914                     __ptext28:
  6055                           	opt callstack 0
  6056  003914                     _EUSART1_SetTxInterruptHandler:
  6057                           	opt callstack 24
  6058  003914                     
  6059                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6060  003914  C005  F1E7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6061  003918  C006  F1E8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6062  00391C  0012               	return		;funcret
  6063  00391E                     __end_of_EUSART1_SetTxInterruptHandler:
  6064                           	opt callstack 0
  6065                           
  6066 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6067 ;; Defined at:
  6068 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6071 ;;		 -> EUSART1_Receive_ISR(1), 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;Total ram usage:        2 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    4
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_EUSART1_Initialize
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text29
  6098  00391E                     __ptext29:
  6099                           	opt callstack 0
  6100  00391E                     _EUSART1_SetRxInterruptHandler:
  6101                           	opt callstack 24
  6102  00391E                     
  6103                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6104  00391E  C005  F1E5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6105  003922  C006  F1E6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6106  003926  0012               	return		;funcret
  6107  003928                     __end_of_EUSART1_SetRxInterruptHandler:
  6108                           	opt callstack 0
  6109                           
  6110 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6111 ;; Defined at:
  6112 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6115 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;Total ram usage:        2 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    4
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_EUSART1_Initialize
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text30
  6142  003928                     __ptext30:
  6143                           	opt callstack 0
  6144  003928                     _EUSART1_SetOverrunErrorHandler:
  6145                           	opt callstack 24
  6146  003928                     
  6147                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  6148  003928  C005  F1DB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6149  00392C  C006  F1DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6150  003930  0012               	return		;funcret
  6151  003932                     __end_of_EUSART1_SetOverrunErrorHandler:
  6152                           	opt callstack 0
  6153                           
  6154 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6155 ;; Defined at:
  6156 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6159 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;Total ram usage:        2 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    4
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_EUSART1_Initialize
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text31
  6186  003932                     __ptext31:
  6187                           	opt callstack 0
  6188  003932                     _EUSART1_SetFramingErrorHandler:
  6189                           	opt callstack 24
  6190  003932                     
  6191                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  6192  003932  C005  F1DD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6193  003936  C006  F1DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6194  00393A  0012               	return		;funcret
  6195  00393C                     __end_of_EUSART1_SetFramingErrorHandler:
  6196                           	opt callstack 0
  6197                           
  6198 ;; *************** function _EUSART1_SetErrorHandler *****************
  6199 ;; Defined at:
  6200 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6203 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;Total ram usage:        2 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    4
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_EUSART1_Initialize
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text32
  6230  00393C                     __ptext32:
  6231                           	opt callstack 0
  6232  00393C                     _EUSART1_SetErrorHandler:
  6233                           	opt callstack 24
  6234  00393C                     
  6235                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  6236  00393C  C005  F1D9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6237  003940  C006  F1DA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6238  003944  0012               	return		;funcret
  6239  003946                     __end_of_EUSART1_SetErrorHandler:
  6240                           	opt callstack 0
  6241                           
  6242 ;; *************** function _PrintModbus *****************
  6243 ;; Defined at:
  6244 ;;		line 124 in file "Modbus.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  i               2   43[BANK0 ] int 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;Total ram usage:        3 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:   13
  6265 ;; This function calls:
  6266 ;;		_printf
  6267 ;; This function is called by:
  6268 ;;		_main
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text33
  6273  002BE2                     __ptext33:
  6274                           	opt callstack 0
  6275  002BE2                     _PrintModbus:
  6276                           	opt callstack 17
  6277  002BE2                     
  6278                           ;Modbus.c: 129:     printf("Modbus Data Capture Complete:\r\n");
  6279  002BE2  0E7D               	movlw	low STR_9
  6280  002BE4  0100               	movlb	0	; () banked
  6281  002BE6  6F7D               	movwf	printf@fmt& (0+255),b
  6282  002BE8  0EFD               	movlw	high STR_9
  6283  002BEA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6284  002BEC  ECD6  F01B         	call	_printf	;wreg free
  6285  002BF0                     
  6286                           ;Modbus.c: 131:     if(Debug ==1){
  6287  002BF0  0100               	movlb	0	; () banked
  6288  002BF2  05B1               	decf	_Debug& (0+255),w,b
  6289  002BF4  A4D8               	btfss	status,2,c
  6290  002BF6  EFFF  F015         	goto	u6621
  6291  002BFA  EF01  F016         	goto	u6620
  6292  002BFE                     u6621:
  6293  002BFE  EF34  F016         	goto	l701
  6294  002C02                     u6620:
  6295  002C02                     
  6296                           ; BSR set to: 0
  6297                           ;Modbus.c: 132:         for(i=0; i< ModDataCnt ; i++ ){
  6298  002C02  0E00               	movlw	0
  6299  002C04  6F8C               	movwf	(PrintModbus@i+1)& (0+255),b
  6300  002C06  0E00               	movlw	0
  6301  002C08  6F8B               	movwf	PrintModbus@i& (0+255),b
  6302  002C0A  EF1F  F016         	goto	l6614
  6303  002C0E                     l6610:
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;Modbus.c: 133:             printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  6307  002C0E  0E13               	movlw	low STR_10
  6308  002C10  6F7D               	movwf	printf@fmt& (0+255),b
  6309  002C12  0EFF               	movlw	high STR_10
  6310  002C14  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6311  002C16  C08B  F07F         	movff	PrintModbus@i,?_printf+2
  6312  002C1A  C08C  F080         	movff	PrintModbus@i+1,?_printf+3
  6313  002C1E  0E7C               	movlw	low _ModbusData
  6314  002C20  258B               	addwf	PrintModbus@i& (0+255),w,b
  6315  002C22  6ED9               	movwf	fsr2l,c
  6316  002C24  0E02               	movlw	high _ModbusData
  6317  002C26  218C               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  6318  002C28  6EDA               	movwf	fsr2h,c
  6319  002C2A  50DF               	movf	indf2,w,c
  6320  002C2C  6E55               	movwf	??_PrintModbus^0,c
  6321  002C2E  5055               	movf	??_PrintModbus^0,w,c
  6322  002C30  6F81               	movwf	(?_printf+4)& (0+255),b
  6323  002C32  6B82               	clrf	(?_printf+5)& (0+255),b
  6324  002C34  ECD6  F01B         	call	_printf	;wreg free
  6325  002C38                     
  6326                           ;Modbus.c: 134:         }
  6327  002C38  0100               	movlb	0	; () banked
  6328  002C3A  4B8B               	infsnz	PrintModbus@i& (0+255),f,b
  6329  002C3C  2B8C               	incf	(PrintModbus@i+1)& (0+255),f,b
  6330  002C3E                     l6614:
  6331                           
  6332                           ; BSR set to: 0
  6333  002C3E  51AD               	movf	_ModDataCnt& (0+255),w,b
  6334  002C40  5D8B               	subwf	PrintModbus@i& (0+255),w,b
  6335  002C42  518C               	movf	(PrintModbus@i+1)& (0+255),w,b
  6336  002C44  0A80               	xorlw	128
  6337  002C46  6E55               	movwf	??_PrintModbus^0,c
  6338  002C48  51AE               	movf	(_ModDataCnt+1)& (0+255),w,b
  6339  002C4A  0A80               	xorlw	128
  6340  002C4C  5855               	subwfb	??_PrintModbus^0,w,c
  6341  002C4E  A0D8               	btfss	status,0,c
  6342  002C50  EF2C  F016         	goto	u6631
  6343  002C54  EF2E  F016         	goto	u6630
  6344  002C58                     u6631:
  6345  002C58  EF07  F016         	goto	l6610
  6346  002C5C                     u6630:
  6347  002C5C                     
  6348                           ; BSR set to: 0
  6349                           ;Modbus.c: 135:         printf("\r\n\n");
  6350  002C5C  0E3B               	movlw	low (STR_17+17)
  6351  002C5E  6F7D               	movwf	printf@fmt& (0+255),b
  6352  002C60  0EFF               	movlw	high (STR_17+17)
  6353  002C62  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6354  002C64  ECD6  F01B         	call	_printf	;wreg free
  6355  002C68                     l701:
  6356  002C68  0012               	return		;funcret
  6357  002C6A                     __end_of_PrintModbus:
  6358                           	opt callstack 0
  6359                           
  6360 ;; *************** function _ModbusRx *****************
  6361 ;; Defined at:
  6362 ;;		line 364 in file "Modbus.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      _Bool 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6380 ;;Total ram usage:        1 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:   14
  6383 ;; This function calls:
  6384 ;;		_AddRxBuffToModBus
  6385 ;;		_ClearRxBuff
  6386 ;;		_EUSART1_Read
  6387 ;;		_EUSART1_is_rx_ready
  6388 ;;		_RXMode
  6389 ;;		_checkCRC
  6390 ;;		_printf
  6391 ;; This function is called by:
  6392 ;;		_main
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text34
  6397  001E54                     __ptext34:
  6398                           	opt callstack 0
  6399  001E54                     _ModbusRx:
  6400                           	opt callstack 16
  6401  001E54                     
  6402                           ;Modbus.c: 365:     RXMode();
  6403  001E54  ECAC  F01C         	call	_RXMode	;wreg free
  6404  001E58                     
  6405                           ;Modbus.c: 366:     if(EUSART1_is_rx_ready()){
  6406  001E58  EC4F  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  6407  001E5C  0900               	iorlw	0
  6408  001E5E  B4D8               	btfsc	status,2,c
  6409  001E60  EF34  F00F         	goto	u6541
  6410  001E64  EF36  F00F         	goto	u6540
  6411  001E68                     u6541:
  6412  001E68  EFC8  F00F         	goto	l6598
  6413  001E6C                     u6540:
  6414  001E6C                     
  6415                           ;Modbus.c: 367:         printf("Something in ESUART1 \r\n");
  6416  001E6C  0ECC               	movlw	low STR_16
  6417  001E6E  0100               	movlb	0	; () banked
  6418  001E70  6F7D               	movwf	printf@fmt& (0+255),b
  6419  001E72  0EFE               	movlw	high STR_16
  6420  001E74  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6421  001E76  ECD6  F01B         	call	_printf	;wreg free
  6422  001E7A                     l6560:
  6423                           
  6424                           ;Modbus.c: 369:             if(EUSART1_is_rx_ready()){
  6425  001E7A  EC4F  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  6426  001E7E  0900               	iorlw	0
  6427  001E80  B4D8               	btfsc	status,2,c
  6428  001E82  EF45  F00F         	goto	u6551
  6429  001E86  EF47  F00F         	goto	u6550
  6430  001E8A                     u6551:
  6431  001E8A  EF64  F00F         	goto	l6572
  6432  001E8E                     u6550:
  6433  001E8E  EF57  F00F         	goto	l6568
  6434  001E92                     l6564:
  6435                           
  6436                           ;Modbus.c: 373:                     rxData[ByteNum] = EUSART1_Read();
  6437  001E92  EC62  F019         	call	_EUSART1_Read	;wreg free
  6438  001E96  6E56               	movwf	??_ModbusRx^0,c
  6439  001E98  0E00               	movlw	low _rxData
  6440  001E9A  0100               	movlb	0	; () banked
  6441  001E9C  25AB               	addwf	_ByteNum& (0+255),w,b
  6442  001E9E  6ED9               	movwf	fsr2l,c
  6443  001EA0  0E04               	movlw	high _rxData
  6444  001EA2  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6445  001EA4  6EDA               	movwf	fsr2h,c
  6446  001EA6  C056  FFDF         	movff	??_ModbusRx,indf2
  6447  001EAA                     
  6448                           ; BSR set to: 0
  6449                           ;Modbus.c: 374:                     ByteNum++;
  6450  001EAA  4BAB               	infsnz	_ByteNum& (0+255),f,b
  6451  001EAC  2BAC               	incf	(_ByteNum+1)& (0+255),f,b
  6452  001EAE                     l6568:
  6453                           
  6454                           ;Modbus.c: 371:                 while(EUSART1_is_rx_ready()){
  6455  001EAE  EC4F  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  6456  001EB2  0900               	iorlw	0
  6457  001EB4  A4D8               	btfss	status,2,c
  6458  001EB6  EF5F  F00F         	goto	u6561
  6459  001EBA  EF61  F00F         	goto	u6560
  6460  001EBE                     u6561:
  6461  001EBE  EF49  F00F         	goto	l6564
  6462  001EC2                     u6560:
  6463  001EC2                     
  6464                           ;Modbus.c: 377:                 RXStat = 1;
  6465  001EC2  0E01               	movlw	1
  6466  001EC4  0100               	movlb	0	; () banked
  6467  001EC6  6FB0               	movwf	_RXStat& (0+255),b
  6468  001EC8                     l6572:
  6469                           
  6470                           ;Modbus.c: 380:             if(RXStat ==1){
  6471  001EC8  0100               	movlb	0	; () banked
  6472  001ECA  05B0               	decf	_RXStat& (0+255),w,b
  6473  001ECC  A4D8               	btfss	status,2,c
  6474  001ECE  EF6B  F00F         	goto	u6571
  6475  001ED2  EF6D  F00F         	goto	u6570
  6476  001ED6                     u6571:
  6477  001ED6  EF89  F00F         	goto	l6584
  6478  001EDA                     u6570:
  6479  001EDA                     
  6480                           ; BSR set to: 0
  6481                           ;Modbus.c: 383:                 AddRxBuffToModBus();
  6482  001EDA  ECC3  F012         	call	_AddRxBuffToModBus	;wreg free
  6483  001EDE                     
  6484                           ;Modbus.c: 384:                 ClearRxBuff();
  6485  001EDE  EC51  F01A         	call	_ClearRxBuff	;wreg free
  6486  001EE2                     
  6487                           ;Modbus.c: 385:                 RXStat = 0;
  6488  001EE2  0E00               	movlw	0
  6489  001EE4  0100               	movlb	0	; () banked
  6490  001EE6  6FB0               	movwf	_RXStat& (0+255),b
  6491  001EE8                     
  6492                           ; BSR set to: 0
  6493                           ;Modbus.c: 386:                 ByteNum = 0;
  6494  001EE8  0E00               	movlw	0
  6495  001EEA  6FAC               	movwf	(_ByteNum+1)& (0+255),b
  6496  001EEC  0E00               	movlw	0
  6497  001EEE  6FAB               	movwf	_ByteNum& (0+255),b
  6498  001EF0                     
  6499                           ; BSR set to: 0
  6500  001EF0  B883               	btfsc	131,4,c	;volatile
  6501  001EF2  EF7D  F00F         	goto	u6581
  6502  001EF6  EF80  F00F         	goto	u6580
  6503  001EFA                     u6581:
  6504  001EFA  0E01               	movlw	1
  6505  001EFC  EF81  F00F         	goto	u6586
  6506  001F00                     u6580:
  6507  001F00  0E00               	movlw	0
  6508  001F02                     u6586:
  6509  001F02  0AFF               	xorlw	255
  6510  001F04  6E56               	movwf	??_ModbusRx^0,c
  6511  001F06  3A56               	swapf	??_ModbusRx^0,f,c
  6512  001F08  5083               	movf	131,w,c	;volatile
  6513  001F0A  1856               	xorwf	??_ModbusRx^0,w,c
  6514  001F0C  0BEF               	andlw	-17
  6515  001F0E  1856               	xorwf	??_ModbusRx^0,w,c
  6516  001F10  6E83               	movwf	131,c	;volatile
  6517  001F12                     l6584:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;Modbus.c: 389:         }while(ModDataCnt != ExpectedBytes);
  6521  001F12  0101               	movlb	1	; () banked
  6522  001F14  513D               	movf	_ExpectedBytes& (0+255),w,b
  6523  001F16  0100               	movlb	0	; () banked
  6524  001F18  19AD               	xorwf	_ModDataCnt& (0+255),w,b
  6525  001F1A  E109               	bnz	u6591
  6526  001F1C  0101               	movlb	1	; () banked
  6527  001F1E  513E               	movf	(_ExpectedBytes+1)& (0+255),w,b
  6528  001F20  0100               	movlb	0	; () banked
  6529  001F22  19AE               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  6530  001F24  A4D8               	btfss	status,2,c
  6531  001F26  EF97  F00F         	goto	u6591
  6532  001F2A  EF99  F00F         	goto	u6590
  6533  001F2E                     u6591:
  6534  001F2E  EF3D  F00F         	goto	l6560
  6535  001F32                     u6590:
  6536  001F32                     
  6537                           ; BSR set to: 0
  6538  001F32  BA83               	btfsc	131,5,c	;volatile
  6539  001F34  EF9E  F00F         	goto	u6601
  6540  001F38  EFA1  F00F         	goto	u6600
  6541  001F3C                     u6601:
  6542  001F3C  0E01               	movlw	1
  6543  001F3E  EFA2  F00F         	goto	u6606
  6544  001F42                     u6600:
  6545  001F42  0E00               	movlw	0
  6546  001F44                     u6606:
  6547  001F44  0AFF               	xorlw	255
  6548  001F46  6E56               	movwf	??_ModbusRx^0,c
  6549  001F48  3A56               	swapf	??_ModbusRx^0,f,c
  6550  001F4A  4656               	rlncf	??_ModbusRx^0,f,c
  6551  001F4C  5083               	movf	131,w,c	;volatile
  6552  001F4E  1856               	xorwf	??_ModbusRx^0,w,c
  6553  001F50  0BDF               	andlw	-33
  6554  001F52  1856               	xorwf	??_ModbusRx^0,w,c
  6555  001F54  6E83               	movwf	131,c	;volatile
  6556  001F56                     
  6557                           ; BSR set to: 0
  6558                           ;Modbus.c: 394:         if(checkCRC() == 1)
  6559  001F56  EC7C  F00E         	call	_checkCRC	;wreg free
  6560  001F5A  06E8               	decf	wreg,f,c
  6561  001F5C  A4D8               	btfss	status,2,c
  6562  001F5E  EFB3  F00F         	goto	u6611
  6563  001F62  EFB5  F00F         	goto	u6610
  6564  001F66                     u6611:
  6565  001F66  EFBE  F00F         	goto	l6592
  6566  001F6A                     u6610:
  6567  001F6A                     
  6568                           ;Modbus.c: 395:         {;Modbus.c: 396:             printf("CRC Checked Out. \r\n\n");
  6569  001F6A  0E2A               	movlw	low STR_17
  6570  001F6C  0100               	movlb	0	; () banked
  6571  001F6E  6F7D               	movwf	printf@fmt& (0+255),b
  6572  001F70  0EFF               	movlw	high STR_17
  6573  001F72  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6574  001F74  ECD6  F01B         	call	_printf	;wreg free
  6575                           
  6576                           ;Modbus.c: 397:         }else{
  6577  001F78  EFC5  F00F         	goto	l6594
  6578  001F7C                     l6592:
  6579                           
  6580                           ;Modbus.c: 398:             printf("CRC did NOT check out. \r\n\n");
  6581  001F7C  0E67               	movlw	low STR_18
  6582  001F7E  0100               	movlb	0	; () banked
  6583  001F80  6F7D               	movwf	printf@fmt& (0+255),b
  6584  001F82  0EFE               	movlw	high STR_18
  6585  001F84  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6586  001F86  ECD6  F01B         	call	_printf	;wreg free
  6587  001F8A                     l6594:
  6588                           
  6589                           ;Modbus.c: 402:         return 1;
  6590  001F8A  0E01               	movlw	1
  6591  001F8C  EFC9  F00F         	goto	l783
  6592  001F90                     l6598:
  6593                           
  6594                           ;Modbus.c: 404:     return 0;
  6595  001F90  0E00               	movlw	0
  6596  001F92                     l783:
  6597  001F92  0012               	return		;funcret
  6598  001F94                     __end_of_ModbusRx:
  6599                           	opt callstack 0
  6600                           
  6601 ;; *************** function _checkCRC *****************
  6602 ;; Defined at:
  6603 ;;		line 141 in file "Modbus.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  i               2   56[BANK0 ] int 
  6608 ;;  crc             2   54[BANK0 ] unsigned int 
  6609 ;;  j               2   52[BANK0 ] int 
  6610 ;;  crcLow          2   50[BANK0 ] unsigned int 
  6611 ;;  crcHigh         2   48[BANK0 ] unsigned int 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      _Bool 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6625 ;;Total ram usage:       15 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:   13
  6628 ;; This function calls:
  6629 ;;		_printf
  6630 ;; This function is called by:
  6631 ;;		_ModbusRx
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text35
  6636  001CF8                     __ptext35:
  6637                           	opt callstack 0
  6638  001CF8                     _checkCRC:
  6639                           	opt callstack 16
  6640  001CF8                     
  6641                           ;Modbus.c: 142:   unsigned int crc = 0xFFFF;
  6642  001CF8  0100               	movlb	0	; () banked
  6643  001CFA  6996               	setf	checkCRC@crc& (0+255),b
  6644  001CFC  6997               	setf	(checkCRC@crc+1)& (0+255),b
  6645  001CFE                     
  6646                           ; BSR set to: 0
  6647                           ;Modbus.c: 144:   unsigned int crcLow = 0;
  6648  001CFE  0E00               	movlw	0
  6649  001D00  6F93               	movwf	(checkCRC@crcLow+1)& (0+255),b
  6650  001D02  0E00               	movlw	0
  6651  001D04  6F92               	movwf	checkCRC@crcLow& (0+255),b
  6652                           
  6653                           ;Modbus.c: 145:   int i,j = 0;
  6654  001D06  0E00               	movlw	0
  6655  001D08  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  6656  001D0A  0E00               	movlw	0
  6657  001D0C  6F94               	movwf	checkCRC@j& (0+255),b
  6658                           
  6659                           ;Modbus.c: 147:     for(i=0;i<ModDataCnt-2;i++){
  6660  001D0E  0E00               	movlw	0
  6661  001D10  6F99               	movwf	(checkCRC@i+1)& (0+255),b
  6662  001D12  0E00               	movlw	0
  6663  001D14  6F98               	movwf	checkCRC@i& (0+255),b
  6664  001D16  EFBC  F00E         	goto	l6428
  6665  001D1A                     l6410:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;Modbus.c: 148:       crc ^= ModbusData[i];
  6669  001D1A  0E7C               	movlw	low _ModbusData
  6670  001D1C  2598               	addwf	checkCRC@i& (0+255),w,b
  6671  001D1E  6ED9               	movwf	fsr2l,c
  6672  001D20  0E02               	movlw	high _ModbusData
  6673  001D22  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  6674  001D24  6EDA               	movwf	fsr2h,c
  6675  001D26  50DF               	movf	indf2,w,c
  6676  001D28  6F8B               	movwf	??_checkCRC& (0+255),b
  6677  001D2A  518B               	movf	??_checkCRC& (0+255),w,b
  6678  001D2C  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  6679  001D2E                     
  6680                           ; BSR set to: 0
  6681                           ;Modbus.c: 149:       for(j=8; j!=0; j--){
  6682  001D2E  0E00               	movlw	0
  6683  001D30  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  6684  001D32  0E08               	movlw	8
  6685  001D34  6F94               	movwf	checkCRC@j& (0+255),b
  6686  001D36                     l706:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;Modbus.c: 150:         if((crc & 0x0001) != 0){
  6690  001D36  A196               	btfss	checkCRC@crc& (0+255),0,b
  6691  001D38  EFA0  F00E         	goto	u6381
  6692  001D3C  EFA2  F00E         	goto	u6380
  6693  001D40                     u6381:
  6694  001D40  EFAB  F00E         	goto	l6422
  6695  001D44                     u6380:
  6696  001D44                     
  6697                           ; BSR set to: 0
  6698                           ;Modbus.c: 151:           crc >>= 1;
  6699  001D44  90D8               	bcf	status,0,c
  6700  001D46  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  6701  001D48  3396               	rrcf	checkCRC@crc& (0+255),f,b
  6702  001D4A                     
  6703                           ; BSR set to: 0
  6704                           ;Modbus.c: 152:           crc ^= 0xA001;
  6705  001D4A  0E01               	movlw	1
  6706  001D4C  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  6707  001D4E  0EA0               	movlw	160
  6708  001D50  1B97               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  6709                           
  6710                           ;Modbus.c: 153:         }
  6711  001D52  EFAE  F00E         	goto	l709
  6712  001D56                     l6422:
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;Modbus.c: 155:           crc >>= 1;
  6716  001D56  90D8               	bcf	status,0,c
  6717  001D58  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  6718  001D5A  3396               	rrcf	checkCRC@crc& (0+255),f,b
  6719  001D5C                     l709:
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;Modbus.c: 157:       }
  6723  001D5C  0794               	decf	checkCRC@j& (0+255),f,b
  6724  001D5E  A0D8               	btfss	status,0,c
  6725  001D60  0795               	decf	(checkCRC@j+1)& (0+255),f,b
  6726  001D62                     
  6727                           ; BSR set to: 0
  6728  001D62  5194               	movf	checkCRC@j& (0+255),w,b
  6729  001D64  1195               	iorwf	(checkCRC@j+1)& (0+255),w,b
  6730  001D66  A4D8               	btfss	status,2,c
  6731  001D68  EFB8  F00E         	goto	u6391
  6732  001D6C  EFBA  F00E         	goto	u6390
  6733  001D70                     u6391:
  6734  001D70  EF9B  F00E         	goto	l706
  6735  001D74                     u6390:
  6736  001D74                     
  6737                           ; BSR set to: 0
  6738                           ;Modbus.c: 158:     }
  6739  001D74  4B98               	infsnz	checkCRC@i& (0+255),f,b
  6740  001D76  2B99               	incf	(checkCRC@i+1)& (0+255),f,b
  6741  001D78                     l6428:
  6742                           
  6743                           ; BSR set to: 0
  6744  001D78  0EFE               	movlw	254
  6745  001D7A  6F8B               	movwf	??_checkCRC& (0+255),b
  6746  001D7C  0EFF               	movlw	255
  6747  001D7E  6F8C               	movwf	(??_checkCRC+1)& (0+255),b
  6748  001D80  C0AD  F08D         	movff	_ModDataCnt,??_checkCRC+2
  6749  001D84  C0AE  F08E         	movff	_ModDataCnt+1,??_checkCRC+3
  6750  001D88  518B               	movf	??_checkCRC& (0+255),w,b
  6751  001D8A  278D               	addwf	(??_checkCRC+2)& (0+255),f,b
  6752  001D8C  518C               	movf	(??_checkCRC+1)& (0+255),w,b
  6753  001D8E  238E               	addwfc	(??_checkCRC+3)& (0+255),f,b
  6754  001D90  518D               	movf	(??_checkCRC+2)& (0+255),w,b
  6755  001D92  5D98               	subwf	checkCRC@i& (0+255),w,b
  6756  001D94  5199               	movf	(checkCRC@i+1)& (0+255),w,b
  6757  001D96  0A80               	xorlw	128
  6758  001D98  6F8F               	movwf	(??_checkCRC+4)& (0+255),b
  6759  001D9A  518E               	movf	(??_checkCRC+3)& (0+255),w,b
  6760  001D9C  0A80               	xorlw	128
  6761  001D9E  598F               	subwfb	(??_checkCRC+4)& (0+255),w,b
  6762  001DA0  A0D8               	btfss	status,0,c
  6763  001DA2  EFD5  F00E         	goto	u6401
  6764  001DA6  EFD7  F00E         	goto	u6400
  6765  001DAA                     u6401:
  6766  001DAA  EF8D  F00E         	goto	l6410
  6767  001DAE                     u6400:
  6768  001DAE                     
  6769                           ; BSR set to: 0
  6770                           ;Modbus.c: 160:   crcHigh = (crc & 0x00FF);
  6771  001DAE  5196               	movf	checkCRC@crc& (0+255),w,b
  6772  001DB0  6F90               	movwf	checkCRC@crcHigh& (0+255),b
  6773  001DB2  6B91               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  6774                           
  6775                           ;Modbus.c: 161:   crcLow = (crc & 0xFF00) >>8;
  6776  001DB4  C096  F08B         	movff	checkCRC@crc,??_checkCRC
  6777  001DB8  C097  F08C         	movff	checkCRC@crc+1,??_checkCRC+1
  6778  001DBC  C08C  F08B         	movff	??_checkCRC+1,??_checkCRC
  6779  001DC0  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  6780  001DC2  518B               	movf	??_checkCRC& (0+255),w,b
  6781  001DC4  6F92               	movwf	checkCRC@crcLow& (0+255),b
  6782  001DC6  6B93               	clrf	(checkCRC@crcLow+1)& (0+255),b
  6783  001DC8                     
  6784                           ; BSR set to: 0
  6785                           ;Modbus.c: 163:   if(Debug == 1){
  6786  001DC8  05B1               	decf	_Debug& (0+255),w,b
  6787  001DCA  A4D8               	btfss	status,2,c
  6788  001DCC  EFEA  F00E         	goto	u6411
  6789  001DD0  EFEC  F00E         	goto	u6410
  6790  001DD4                     u6411:
  6791  001DD4  EFFA  F00E         	goto	l6436
  6792  001DD8                     u6410:
  6793  001DD8                     
  6794                           ; BSR set to: 0
  6795                           ;Modbus.c: 164:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  6796  001DD8  0E15               	movlw	low STR_12
  6797  001DDA  6F7D               	movwf	printf@fmt& (0+255),b
  6798  001DDC  0EFD               	movlw	high STR_12
  6799  001DDE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6800  001DE0  C090  F07F         	movff	checkCRC@crcHigh,?_printf+2
  6801  001DE4  C091  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  6802  001DE8  C092  F081         	movff	checkCRC@crcLow,?_printf+4
  6803  001DEC  C093  F082         	movff	checkCRC@crcLow+1,?_printf+5
  6804  001DF0  ECD6  F01B         	call	_printf	;wreg free
  6805  001DF4                     l6436:
  6806                           
  6807                           ;Modbus.c: 168:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  6808  001DF4  0E7C               	movlw	low _ModbusData
  6809  001DF6  0100               	movlb	0	; () banked
  6810  001DF8  2598               	addwf	checkCRC@i& (0+255),w,b
  6811  001DFA  6ED9               	movwf	fsr2l,c
  6812  001DFC  0E02               	movlw	high _ModbusData
  6813  001DFE  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  6814  001E00  6EDA               	movwf	fsr2h,c
  6815  001E02  50DF               	movf	indf2,w,c
  6816  001E04  6F8B               	movwf	??_checkCRC& (0+255),b
  6817  001E06  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  6818  001E08  5190               	movf	checkCRC@crcHigh& (0+255),w,b
  6819  001E0A  198B               	xorwf	??_checkCRC& (0+255),w,b
  6820  001E0C  E107               	bnz	u6421
  6821  001E0E  5191               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  6822  001E10  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  6823  001E12  A4D8               	btfss	status,2,c
  6824  001E14  EF0E  F00F         	goto	u6421
  6825  001E18  EF10  F00F         	goto	u6420
  6826  001E1C                     u6421:
  6827  001E1C  EF28  F00F         	goto	l6446
  6828  001E20                     u6420:
  6829  001E20                     
  6830                           ; BSR set to: 0
  6831  001E20  0E7D               	movlw	low (_ModbusData+1)
  6832  001E22  2598               	addwf	checkCRC@i& (0+255),w,b
  6833  001E24  6ED9               	movwf	fsr2l,c
  6834  001E26  0E02               	movlw	high (_ModbusData+1)
  6835  001E28  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  6836  001E2A  6EDA               	movwf	fsr2h,c
  6837  001E2C  50DF               	movf	indf2,w,c
  6838  001E2E  6F8B               	movwf	??_checkCRC& (0+255),b
  6839  001E30  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  6840  001E32  5192               	movf	checkCRC@crcLow& (0+255),w,b
  6841  001E34  198B               	xorwf	??_checkCRC& (0+255),w,b
  6842  001E36  E107               	bnz	u6431
  6843  001E38  5193               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  6844  001E3A  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  6845  001E3C  A4D8               	btfss	status,2,c
  6846  001E3E  EF23  F00F         	goto	u6431
  6847  001E42  EF25  F00F         	goto	u6430
  6848  001E46                     u6431:
  6849  001E46  EF28  F00F         	goto	l6446
  6850  001E4A                     u6430:
  6851  001E4A                     
  6852                           ; BSR set to: 0
  6853                           ;Modbus.c: 169:   {;Modbus.c: 170:     return 1;
  6854  001E4A  0E01               	movlw	1
  6855  001E4C  EF29  F00F         	goto	l713
  6856  001E50                     l6446:
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;Modbus.c: 173:     return 0;
  6860  001E50  0E00               	movlw	0
  6861  001E52                     l713:
  6862                           
  6863                           ; BSR set to: 0
  6864  001E52  0012               	return		;funcret
  6865  001E54                     __end_of_checkCRC:
  6866                           	opt callstack 0
  6867                           
  6868 ;; *************** function _RXMode *****************
  6869 ;; Defined at:
  6870 ;;		line 76 in file "Modbus.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;		None
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		None
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;Total ram usage:        0 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    4
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_main
  6895 ;;		_ModbusRx
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text36
  6900  003958                     __ptext36:
  6901                           	opt callstack 0
  6902  003958                     _RXMode:
  6903                           	opt callstack 26
  6904  003958  9086               	bcf	134,0,c	;volatile
  6905  00395A  9683               	bcf	131,3,c	;volatile
  6906  00395C  0012               	return		;funcret
  6907  00395E                     __end_of_RXMode:
  6908                           	opt callstack 0
  6909                           
  6910 ;; *************** function _EUSART1_is_rx_ready *****************
  6911 ;; Defined at:
  6912 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      _Bool 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    4
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_ModbusRx
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text37
  6941  00389E                     __ptext37:
  6942                           	opt callstack 0
  6943  00389E                     _EUSART1_is_rx_ready:
  6944                           	opt callstack 25
  6945  00389E                     
  6946                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  6947  00389E  0100               	movlb	0	; () banked
  6948  0038A0  51B3               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  6949  0038A2  A4D8               	btfss	status,2,c
  6950  0038A4  EF56  F01C         	goto	u3981
  6951  0038A8  EF59  F01C         	goto	u3980
  6952  0038AC                     u3981:
  6953  0038AC  0E01               	movlw	1
  6954  0038AE  EF5A  F01C         	goto	u3990
  6955  0038B2                     u3980:
  6956  0038B2  0E00               	movlw	0
  6957  0038B4                     u3990:
  6958  0038B4                     
  6959                           ; BSR set to: 0
  6960  0038B4  0012               	return		;funcret
  6961  0038B6                     __end_of_EUSART1_is_rx_ready:
  6962                           	opt callstack 0
  6963                           
  6964 ;; *************** function _EUSART1_Read *****************
  6965 ;; Defined at:
  6966 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;		None
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  readValue       1    4[COMRAM] unsigned char 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      unsigned char 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;Total ram usage:        1 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    4
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_ModbusRx
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text38
  6995  0032C4                     __ptext38:
  6996                           	opt callstack 0
  6997  0032C4                     _EUSART1_Read:
  6998                           	opt callstack 25
  6999  0032C4                     l4702:
  7000                           
  7001                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  7002  0032C4  0100               	movlb	0	; () banked
  7003  0032C6  51B3               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7004  0032C8  B4D8               	btfsc	status,2,c
  7005  0032CA  EF69  F019         	goto	u4001
  7006  0032CE  EF6B  F019         	goto	u4000
  7007  0032D2                     u4001:
  7008  0032D2  EF62  F019         	goto	l4702
  7009  0032D6                     u4000:
  7010  0032D6                     
  7011                           ; BSR set to: 0
  7012                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7013  0032D6  0E00               	movlw	low _eusart1RxStatusBuffer
  7014  0032D8  25B4               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7015  0032DA  6ED9               	movwf	fsr2l,c
  7016  0032DC  6ADA               	clrf	fsr2h,c
  7017  0032DE  0E03               	movlw	high _eusart1RxStatusBuffer
  7018  0032E0  22DA               	addwfc	fsr2h,f,c
  7019  0032E2  50DF               	movf	indf2,w,c
  7020  0032E4  6FB2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7021                           
  7022                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7023  0032E6  0E64               	movlw	low _eusart1RxBuffer
  7024  0032E8  25B4               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7025  0032EA  6ED9               	movwf	fsr2l,c
  7026  0032EC  6ADA               	clrf	fsr2h,c
  7027  0032EE  0E04               	movlw	high _eusart1RxBuffer
  7028  0032F0  22DA               	addwfc	fsr2h,f,c
  7029  0032F2  50DF               	movf	indf2,w,c
  7030  0032F4  6E05               	movwf	EUSART1_Read@readValue^0,c
  7031  0032F6                     
  7032                           ; BSR set to: 0
  7033  0032F6  2BB4               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  7034  0032F8                     
  7035                           ; BSR set to: 0
  7036                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7037  0032F8  0E63               	movlw	99
  7038  0032FA  65B4               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  7039  0032FC  EF82  F019         	goto	u4011
  7040  003300  EF84  F019         	goto	u4010
  7041  003304                     u4011:
  7042  003304  EF86  F019         	goto	l4712
  7043  003308                     u4010:
  7044  003308                     
  7045                           ; BSR set to: 0
  7046                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  7047  003308  0E00               	movlw	0
  7048  00330A  6FB4               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7049  00330C                     l4712:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  7053  00330C  010E               	movlb	14	; () banked
  7054  00330E  9BC5               	bcf	197,5,b	;volatile
  7055  003310                     
  7056                           ; BSR set to: 14
  7057                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  7058  003310  0100               	movlb	0	; () banked
  7059  003312  07B3               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7060  003314                     
  7061                           ; BSR set to: 0
  7062                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  7063  003314  010E               	movlb	14	; () banked
  7064  003316  8BC5               	bsf	197,5,b	;volatile
  7065  003318                     
  7066                           ; BSR set to: 14
  7067                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  7068  003318  5005               	movf	EUSART1_Read@readValue^0,w,c
  7069  00331A                     
  7070                           ; BSR set to: 14
  7071  00331A  0012               	return		;funcret
  7072  00331C                     __end_of_EUSART1_Read:
  7073                           	opt callstack 0
  7074                           
  7075 ;; *************** function _ClearRxBuff *****************
  7076 ;; Defined at:
  7077 ;;		line 92 in file "Modbus.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;		None
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  i               2    5[COMRAM] int 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      void 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;Total ram usage:        3 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    4
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_main
  7102 ;;		_ModbusRx
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text39
  7107  0034A2                     __ptext39:
  7108                           	opt callstack 0
  7109  0034A2                     _ClearRxBuff:
  7110                           	opt callstack 25
  7111  0034A2                     
  7112                           ;Modbus.c: 94:     int i = 0;
  7113  0034A2  0E00               	movlw	0
  7114  0034A4  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7115  0034A6  0E00               	movlw	0
  7116  0034A8  6E06               	movwf	ClearRxBuff@i^0,c
  7117                           
  7118                           ;Modbus.c: 95:     for(i=0; i<ByteNum; i++ ){
  7119  0034AA  0E00               	movlw	0
  7120  0034AC  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7121  0034AE  0E00               	movlw	0
  7122  0034B0  6E06               	movwf	ClearRxBuff@i^0,c
  7123  0034B2  EF65  F01A         	goto	l4750
  7124  0034B6                     l4746:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;Modbus.c: 96:         rxData[i] = 0xFF;
  7128  0034B6  0E00               	movlw	low _rxData
  7129  0034B8  2406               	addwf	ClearRxBuff@i^0,w,c
  7130  0034BA  6ED9               	movwf	fsr2l,c
  7131  0034BC  0E04               	movlw	high _rxData
  7132  0034BE  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  7133  0034C0  6EDA               	movwf	fsr2h,c
  7134  0034C2  0EFF               	movlw	255
  7135  0034C4  6EDF               	movwf	indf2,c
  7136  0034C6                     
  7137                           ; BSR set to: 0
  7138                           ;Modbus.c: 97:     }
  7139  0034C6  4A06               	infsnz	ClearRxBuff@i^0,f,c
  7140  0034C8  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  7141  0034CA                     l4750:
  7142  0034CA  0100               	movlb	0	; () banked
  7143  0034CC  51AB               	movf	_ByteNum& (0+255),w,b
  7144  0034CE  5C06               	subwf	ClearRxBuff@i^0,w,c
  7145  0034D0  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  7146  0034D2  0A80               	xorlw	128
  7147  0034D4  6E05               	movwf	??_ClearRxBuff^0,c
  7148  0034D6  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7149  0034D8  0A80               	xorlw	128
  7150  0034DA  5805               	subwfb	??_ClearRxBuff^0,w,c
  7151  0034DC  A0D8               	btfss	status,0,c
  7152  0034DE  EF73  F01A         	goto	u4021
  7153  0034E2  EF75  F01A         	goto	u4020
  7154  0034E6                     u4021:
  7155  0034E6  EF5B  F01A         	goto	l4746
  7156  0034EA                     u4020:
  7157  0034EA                     
  7158                           ; BSR set to: 0
  7159  0034EA  0012               	return		;funcret
  7160  0034EC                     __end_of_ClearRxBuff:
  7161                           	opt callstack 0
  7162                           
  7163 ;; *************** function _AddRxBuffToModBus *****************
  7164 ;; Defined at:
  7165 ;;		line 101 in file "Modbus.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  i               2   43[BANK0 ] int 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;Total ram usage:        3 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:   13
  7186 ;; This function calls:
  7187 ;;		_printf
  7188 ;; This function is called by:
  7189 ;;		_ModbusRx
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text40
  7194  002586                     __ptext40:
  7195                           	opt callstack 0
  7196  002586                     _AddRxBuffToModBus:
  7197                           	opt callstack 16
  7198  002586                     
  7199                           ;Modbus.c: 102:     int i = 0;
  7200  002586  0E00               	movlw	0
  7201  002588  0100               	movlb	0	; () banked
  7202  00258A  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7203  00258C  0E00               	movlw	0
  7204  00258E  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7205                           
  7206                           ;Modbus.c: 104:     for(i=0l; i<ByteNum; i++){
  7207  002590  0E00               	movlw	0
  7208  002592  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7209  002594  0E00               	movlw	0
  7210  002596  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7211  002598  EFE0  F012         	goto	l6390
  7212  00259C                     l6384:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;Modbus.c: 105:         ModbusData[ModDataCnt] = rxData[i];
  7216  00259C  0E00               	movlw	low _rxData
  7217  00259E  258B               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  7218  0025A0  6ED9               	movwf	fsr2l,c
  7219  0025A2  0E04               	movlw	high _rxData
  7220  0025A4  218C               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7221  0025A6  6EDA               	movwf	fsr2h,c
  7222  0025A8  0E7C               	movlw	low _ModbusData
  7223  0025AA  25AD               	addwf	_ModDataCnt& (0+255),w,b
  7224  0025AC  6EE1               	movwf	fsr1l,c
  7225  0025AE  0E02               	movlw	high _ModbusData
  7226  0025B0  21AE               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  7227  0025B2  6EE2               	movwf	fsr1h,c
  7228  0025B4  CFDF FFE7          	movff	indf2,indf1
  7229  0025B8                     
  7230                           ; BSR set to: 0
  7231                           ;Modbus.c: 106:         ModDataCnt++;
  7232  0025B8  4BAD               	infsnz	_ModDataCnt& (0+255),f,b
  7233  0025BA  2BAE               	incf	(_ModDataCnt+1)& (0+255),f,b
  7234  0025BC                     
  7235                           ; BSR set to: 0
  7236                           ;Modbus.c: 107:     }
  7237  0025BC  4B8B               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  7238  0025BE  2B8C               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  7239  0025C0                     l6390:
  7240                           
  7241                           ; BSR set to: 0
  7242  0025C0  51AB               	movf	_ByteNum& (0+255),w,b
  7243  0025C2  5D8B               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  7244  0025C4  518C               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7245  0025C6  0A80               	xorlw	128
  7246  0025C8  6E55               	movwf	??_AddRxBuffToModBus^0,c
  7247  0025CA  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7248  0025CC  0A80               	xorlw	128
  7249  0025CE  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  7250  0025D0  A0D8               	btfss	status,0,c
  7251  0025D2  EFED  F012         	goto	u6341
  7252  0025D6  EFEF  F012         	goto	u6340
  7253  0025DA                     u6341:
  7254  0025DA  EFCE  F012         	goto	l6384
  7255  0025DE                     u6340:
  7256  0025DE                     
  7257                           ; BSR set to: 0
  7258                           ;Modbus.c: 109:     if(Debug ==1){
  7259  0025DE  05B1               	decf	_Debug& (0+255),w,b
  7260  0025E0  A4D8               	btfss	status,2,c
  7261  0025E2  EFF5  F012         	goto	u6351
  7262  0025E6  EFF7  F012         	goto	u6350
  7263  0025EA                     u6351:
  7264  0025EA  EF08  F013         	goto	l6396
  7265  0025EE                     u6350:
  7266  0025EE                     
  7267                           ; BSR set to: 0
  7268                           ;Modbus.c: 110:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n
      +                          ");
  7269  0025EE  0E2D               	movlw	low STR_7
  7270  0025F0  6F7D               	movwf	printf@fmt& (0+255),b
  7271  0025F2  0EFC               	movlw	high STR_7
  7272  0025F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7273  0025F6  ECD6  F01B         	call	_printf	;wreg free
  7274                           
  7275                           ;Modbus.c: 111:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  7276  0025FA  0E14               	movlw	low STR_8
  7277  0025FC  0100               	movlb	0	; () banked
  7278  0025FE  6F7D               	movwf	printf@fmt& (0+255),b
  7279  002600  0EFE               	movlw	high STR_8
  7280  002602  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7281  002604  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  7282  002608  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  7283  00260C  ECD6  F01B         	call	_printf	;wreg free
  7284  002610                     l6396:
  7285                           
  7286                           ;Modbus.c: 114:     if(ModbusData[1] == 0x0F){
  7287  002610  0E0F               	movlw	15
  7288  002612  0102               	movlb	2	; () banked
  7289  002614  197D               	xorwf	(_ModbusData+1)& (0+255),w,b
  7290  002616  A4D8               	btfss	status,2,c
  7291  002618  EF10  F013         	goto	u6361
  7292  00261C  EF12  F013         	goto	u6360
  7293  002620                     u6361:
  7294  002620  EF1B  F013         	goto	l6400
  7295  002624                     u6360:
  7296  002624                     l6398:
  7297                           
  7298                           ; BSR set to: 2
  7299                           ;Modbus.c: 115:         ExpectedBytes = ModbusData[6] + 9;
  7300  002624  0E09               	movlw	9
  7301  002626  2582               	addwf	(_ModbusData+6)& (0+255),w,b
  7302  002628  0101               	movlb	1	; () banked
  7303  00262A  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7304  00262C  6B3E               	clrf	(_ExpectedBytes+1)& (0+255),b
  7305  00262E  0E00               	movlw	0
  7306  002630  233E               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  7307                           
  7308                           ;Modbus.c: 116:     }else if (ModbusData[1] == 0x10){
  7309  002632  EF2B  F013         	goto	l694
  7310  002636                     l6400:
  7311                           
  7312                           ; BSR set to: 2
  7313  002636  0E10               	movlw	16
  7314  002638  197D               	xorwf	(_ModbusData+1)& (0+255),w,b
  7315  00263A  A4D8               	btfss	status,2,c
  7316  00263C  EF22  F013         	goto	u6371
  7317  002640  EF24  F013         	goto	u6370
  7318  002644                     u6371:
  7319  002644  EF26  F013         	goto	l6404
  7320  002648                     u6370:
  7321  002648  EF12  F013         	goto	l6398
  7322  00264C                     l6404:
  7323                           
  7324                           ; BSR set to: 2
  7325                           ;Modbus.c: 119:         ExpectedBytes = 8;
  7326  00264C  0E00               	movlw	0
  7327  00264E  0101               	movlb	1	; () banked
  7328  002650  6F3E               	movwf	(_ExpectedBytes+1)& (0+255),b
  7329  002652  0E08               	movlw	8
  7330  002654  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7331  002656                     l694:
  7332                           
  7333                           ; BSR set to: 1
  7334  002656  0012               	return		;funcret
  7335  002658                     __end_of_AddRxBuffToModBus:
  7336                           	opt callstack 0
  7337                           
  7338 ;; *************** function _ModbusFC10 *****************
  7339 ;; Defined at:
  7340 ;;		line 221 in file "Modbus.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  j               2   53[BANK0 ] int 
  7345 ;;  i               2   51[BANK0 ] int 
  7346 ;;  TempData        2   49[BANK0 ] unsigned int 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;Total ram usage:       10 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:   14
  7363 ;; This function calls:
  7364 ;;		_PrintMB400
  7365 ;;		_PrintModRespon
  7366 ;;		_UART1_Write_string
  7367 ;;		_generateCRC
  7368 ;; This function is called by:
  7369 ;;		_main
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text41
  7374  000EFE                     __ptext41:
  7375                           	opt callstack 0
  7376  000EFE                     _ModbusFC10:
  7377                           	opt callstack 16
  7378  000EFE                     
  7379                           ;Modbus.c: 226:     int j = 0;
  7380  000EFE  0E00               	movlw	0
  7381  000F00  0100               	movlb	0	; () banked
  7382  000F02  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  7383  000F04  0E00               	movlw	0
  7384  000F06  6F95               	movwf	ModbusFC10@j& (0+255),b
  7385                           
  7386                           ;Modbus.c: 227:     unsigned int TempData = 0x0000;
  7387  000F08  0E00               	movlw	0
  7388  000F0A  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  7389  000F0C  0E00               	movlw	0
  7390  000F0E  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  7391                           
  7392                           ;Modbus.c: 229:     MBResCnt = 0;
  7393  000F10  0E00               	movlw	0
  7394  000F12  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7395  000F14  0E00               	movlw	0
  7396  000F16  6FA9               	movwf	_MBResCnt& (0+255),b
  7397  000F18                     
  7398                           ; BSR set to: 0
  7399                           ;Modbus.c: 230:     MBRespon[MBResCnt] = ModbusData[0];
  7400  000F18  0102               	movlb	2	; () banked
  7401  000F1A  517C               	movf	_ModbusData& (0+255),w,b
  7402  000F1C  0100               	movlb	0	; () banked
  7403  000F1E  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7404  000F20  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7405  000F22  90D8               	bcf	status,0,c
  7406  000F24  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7407  000F26  6ED9               	movwf	fsr2l,c
  7408  000F28  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7409  000F2A  6EDA               	movwf	fsr2h,c
  7410  000F2C  0E3F               	movlw	low _MBRespon
  7411  000F2E  26D9               	addwf	fsr2l,f,c
  7412  000F30  0E01               	movlw	high _MBRespon
  7413  000F32  22DA               	addwfc	fsr2h,f,c
  7414  000F34  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7415  000F38  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7416  000F3C                     
  7417                           ; BSR set to: 0
  7418                           ;Modbus.c: 231:     MBResCnt++;
  7419  000F3C  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7420  000F3E  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7421  000F40                     
  7422                           ; BSR set to: 0
  7423                           ;Modbus.c: 232:     MBRespon[MBResCnt] = ModbusData[1];
  7424  000F40  0102               	movlb	2	; () banked
  7425  000F42  517D               	movf	(_ModbusData+1)& (0+255),w,b
  7426  000F44  0100               	movlb	0	; () banked
  7427  000F46  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7428  000F48  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7429  000F4A  90D8               	bcf	status,0,c
  7430  000F4C  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7431  000F4E  6ED9               	movwf	fsr2l,c
  7432  000F50  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7433  000F52  6EDA               	movwf	fsr2h,c
  7434  000F54  0E3F               	movlw	low _MBRespon
  7435  000F56  26D9               	addwf	fsr2l,f,c
  7436  000F58  0E01               	movlw	high _MBRespon
  7437  000F5A  22DA               	addwfc	fsr2h,f,c
  7438  000F5C  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7439  000F60  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7440  000F64                     
  7441                           ; BSR set to: 0
  7442                           ;Modbus.c: 233:     MBResCnt++;
  7443  000F64  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7444  000F66  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7445  000F68                     
  7446                           ; BSR set to: 0
  7447                           ;Modbus.c: 234:     MBRespon[MBResCnt] = ModbusData[2];
  7448  000F68  0102               	movlb	2	; () banked
  7449  000F6A  517E               	movf	(_ModbusData+2)& (0+255),w,b
  7450  000F6C  0100               	movlb	0	; () banked
  7451  000F6E  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7452  000F70  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7453  000F72  90D8               	bcf	status,0,c
  7454  000F74  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7455  000F76  6ED9               	movwf	fsr2l,c
  7456  000F78  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7457  000F7A  6EDA               	movwf	fsr2h,c
  7458  000F7C  0E3F               	movlw	low _MBRespon
  7459  000F7E  26D9               	addwf	fsr2l,f,c
  7460  000F80  0E01               	movlw	high _MBRespon
  7461  000F82  22DA               	addwfc	fsr2h,f,c
  7462  000F84  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7463  000F88  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7464  000F8C                     
  7465                           ; BSR set to: 0
  7466                           ;Modbus.c: 235:     MBResCnt++;
  7467  000F8C  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7468  000F8E  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7469  000F90                     
  7470                           ; BSR set to: 0
  7471                           ;Modbus.c: 236:     MBRespon[MBResCnt] = ModbusData[3];
  7472  000F90  0102               	movlb	2	; () banked
  7473  000F92  517F               	movf	(_ModbusData+3)& (0+255),w,b
  7474  000F94  0100               	movlb	0	; () banked
  7475  000F96  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7476  000F98  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7477  000F9A  90D8               	bcf	status,0,c
  7478  000F9C  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7479  000F9E  6ED9               	movwf	fsr2l,c
  7480  000FA0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7481  000FA2  6EDA               	movwf	fsr2h,c
  7482  000FA4  0E3F               	movlw	low _MBRespon
  7483  000FA6  26D9               	addwf	fsr2l,f,c
  7484  000FA8  0E01               	movlw	high _MBRespon
  7485  000FAA  22DA               	addwfc	fsr2h,f,c
  7486  000FAC  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7487  000FB0  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7488  000FB4                     
  7489                           ; BSR set to: 0
  7490                           ;Modbus.c: 237:     MBResCnt++;
  7491  000FB4  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7492  000FB6  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7493  000FB8                     
  7494                           ; BSR set to: 0
  7495                           ;Modbus.c: 238:     MBRespon[MBResCnt] = ModbusData[4];
  7496  000FB8  0102               	movlb	2	; () banked
  7497  000FBA  5180               	movf	(_ModbusData+4)& (0+255),w,b
  7498  000FBC  0100               	movlb	0	; () banked
  7499  000FBE  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7500  000FC0  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7501  000FC2  90D8               	bcf	status,0,c
  7502  000FC4  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7503  000FC6  6ED9               	movwf	fsr2l,c
  7504  000FC8  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7505  000FCA  6EDA               	movwf	fsr2h,c
  7506  000FCC  0E3F               	movlw	low _MBRespon
  7507  000FCE  26D9               	addwf	fsr2l,f,c
  7508  000FD0  0E01               	movlw	high _MBRespon
  7509  000FD2  22DA               	addwfc	fsr2h,f,c
  7510  000FD4  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7511  000FD8  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7512  000FDC                     
  7513                           ; BSR set to: 0
  7514                           ;Modbus.c: 239:     MBResCnt++;
  7515  000FDC  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7516  000FDE  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7517  000FE0                     
  7518                           ; BSR set to: 0
  7519                           ;Modbus.c: 240:     MBRespon[MBResCnt] = ModbusData[5];
  7520  000FE0  0102               	movlb	2	; () banked
  7521  000FE2  5181               	movf	(_ModbusData+5)& (0+255),w,b
  7522  000FE4  0100               	movlb	0	; () banked
  7523  000FE6  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7524  000FE8  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7525  000FEA  90D8               	bcf	status,0,c
  7526  000FEC  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7527  000FEE  6ED9               	movwf	fsr2l,c
  7528  000FF0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7529  000FF2  6EDA               	movwf	fsr2h,c
  7530  000FF4  0E3F               	movlw	low _MBRespon
  7531  000FF6  26D9               	addwf	fsr2l,f,c
  7532  000FF8  0E01               	movlw	high _MBRespon
  7533  000FFA  22DA               	addwfc	fsr2h,f,c
  7534  000FFC  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7535  001000  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7536  001004                     
  7537                           ; BSR set to: 0
  7538                           ;Modbus.c: 241:     MBResCnt++;
  7539  001004  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7540  001006  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7541                           
  7542                           ;Modbus.c: 243:     for(i=0; i< (ModbusData[5]) ; i++ ){
  7543  001008  0E00               	movlw	0
  7544  00100A  6F94               	movwf	(ModbusFC10@i+1)& (0+255),b
  7545  00100C  0E00               	movlw	0
  7546  00100E  6F93               	movwf	ModbusFC10@i& (0+255),b
  7547  001010  EF40  F008         	goto	l6690
  7548  001014                     l6682:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;Modbus.c: 250:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  7552  001014  0E84               	movlw	low (_ModbusData+8)
  7553  001016  2595               	addwf	ModbusFC10@j& (0+255),w,b
  7554  001018  6ED9               	movwf	fsr2l,c
  7555  00101A  0E02               	movlw	high (_ModbusData+8)
  7556  00101C  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  7557  00101E  6EDA               	movwf	fsr2h,c
  7558  001020  50DF               	movf	indf2,w,c
  7559  001022  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7560  001024  0E83               	movlw	low (_ModbusData+7)
  7561  001026  2595               	addwf	ModbusFC10@j& (0+255),w,b
  7562  001028  6ED9               	movwf	fsr2l,c
  7563  00102A  0E02               	movlw	high (_ModbusData+7)
  7564  00102C  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  7565  00102E  6EDA               	movwf	fsr2h,c
  7566  001030  50DF               	movf	indf2,w,c
  7567  001032  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  7568  001034  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  7569  001036  6F90               	movwf	(??_ModbusFC10+3)& (0+255),b
  7570  001038  6B8F               	clrf	(??_ModbusFC10+2)& (0+255),b
  7571  00103A  518D               	movf	??_ModbusFC10& (0+255),w,b
  7572  00103C  258F               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  7573  00103E  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  7574  001040  0E00               	movlw	0
  7575  001042  2190               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  7576  001044  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  7577  001046                     
  7578                           ; BSR set to: 0
  7579                           ;Modbus.c: 251:         j = j+2;
  7580  001046  0E02               	movlw	2
  7581  001048  2595               	addwf	ModbusFC10@j& (0+255),w,b
  7582  00104A  6F95               	movwf	ModbusFC10@j& (0+255),b
  7583  00104C  0E00               	movlw	0
  7584  00104E  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  7585  001050  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  7586  001052                     
  7587                           ; BSR set to: 0
  7588                           ;Modbus.c: 252:         MB400xx[ModbusData[3] +i] = TempData;
  7589  001052  0102               	movlb	2	; () banked
  7590  001054  517F               	movf	(_ModbusData+3)& (0+255),w,b
  7591  001056  0100               	movlb	0	; () banked
  7592  001058  2593               	addwf	ModbusFC10@i& (0+255),w,b
  7593  00105A  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7594  00105C  0E00               	movlw	0
  7595  00105E  2194               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  7596  001060  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  7597  001062  90D8               	bcf	status,0,c
  7598  001064  378D               	rlcf	??_ModbusFC10& (0+255),f,b
  7599  001066  378E               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  7600  001068  0E64               	movlw	low _MB400xx
  7601  00106A  258D               	addwf	??_ModbusFC10& (0+255),w,b
  7602  00106C  6ED9               	movwf	fsr2l,c
  7603  00106E  0E03               	movlw	high _MB400xx
  7604  001070  218E               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  7605  001072  6EDA               	movwf	fsr2h,c
  7606  001074  C091  FFDE         	movff	ModbusFC10@TempData,postinc2
  7607  001078  C092  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  7608  00107C                     
  7609                           ; BSR set to: 0
  7610                           ;Modbus.c: 253:     }
  7611  00107C  4B93               	infsnz	ModbusFC10@i& (0+255),f,b
  7612  00107E  2B94               	incf	(ModbusFC10@i+1)& (0+255),f,b
  7613  001080                     l6690:
  7614                           
  7615                           ; BSR set to: 0
  7616  001080  0102               	movlb	2	; () banked
  7617  001082  5181               	movf	(_ModbusData+5)& (0+255),w,b
  7618  001084  0100               	movlb	0	; () banked
  7619  001086  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7620  001088  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7621  00108A  518D               	movf	??_ModbusFC10& (0+255),w,b
  7622  00108C  5D93               	subwf	ModbusFC10@i& (0+255),w,b
  7623  00108E  5194               	movf	(ModbusFC10@i+1)& (0+255),w,b
  7624  001090  0A80               	xorlw	128
  7625  001092  6F8F               	movwf	(??_ModbusFC10+2)& (0+255),b
  7626  001094  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  7627  001096  0A80               	xorlw	128
  7628  001098  598F               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  7629  00109A  A0D8               	btfss	status,0,c
  7630  00109C  EF52  F008         	goto	u6661
  7631  0010A0  EF54  F008         	goto	u6660
  7632  0010A4                     u6661:
  7633  0010A4  EF0A  F008         	goto	l6682
  7634  0010A8                     u6660:
  7635  0010A8                     
  7636                           ; BSR set to: 0
  7637                           ;Modbus.c: 255:     ByteHi = generateCRC(MBResCnt, 1);
  7638  0010A8  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  7639  0010AC  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  7640  0010B0  0E01               	movlw	1
  7641  0010B2  6E07               	movwf	generateCRC@HiOrLo^0,c
  7642  0010B4  ECE4  F011         	call	_generateCRC	;wreg free
  7643  0010B8  C005  F0A7         	movff	?_generateCRC,_ByteHi
  7644  0010BC  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  7645                           
  7646                           ;Modbus.c: 256:     ByteLo = generateCRC(MBResCnt, 0);
  7647  0010C0  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  7648  0010C4  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  7649  0010C8  0E00               	movlw	0
  7650  0010CA  6E07               	movwf	generateCRC@HiOrLo^0,c
  7651  0010CC  ECE4  F011         	call	_generateCRC	;wreg free
  7652  0010D0  C005  F0BC         	movff	?_generateCRC,_ByteLo
  7653  0010D4  C006  F0BD         	movff	?_generateCRC+1,_ByteLo+1
  7654  0010D8                     
  7655                           ;Modbus.c: 258:     MBRespon[MBResCnt] = ByteHi;
  7656  0010D8  90D8               	bcf	status,0,c
  7657  0010DA  0100               	movlb	0	; () banked
  7658  0010DC  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7659  0010DE  6ED9               	movwf	fsr2l,c
  7660  0010E0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7661  0010E2  6EDA               	movwf	fsr2h,c
  7662  0010E4  0E3F               	movlw	low _MBRespon
  7663  0010E6  26D9               	addwf	fsr2l,f,c
  7664  0010E8  0E01               	movlw	high _MBRespon
  7665  0010EA  22DA               	addwfc	fsr2h,f,c
  7666  0010EC  C0A7  FFDE         	movff	_ByteHi,postinc2
  7667  0010F0  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  7668  0010F4                     
  7669                           ; BSR set to: 0
  7670                           ;Modbus.c: 259:     MBRespon[MBResCnt +1] = ByteLo;
  7671  0010F4  90D8               	bcf	status,0,c
  7672  0010F6  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7673  0010F8  6ED9               	movwf	fsr2l,c
  7674  0010FA  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7675  0010FC  6EDA               	movwf	fsr2h,c
  7676  0010FE  0E41               	movlw	low (_MBRespon+2)
  7677  001100  26D9               	addwf	fsr2l,f,c
  7678  001102  0E01               	movlw	high (_MBRespon+2)
  7679  001104  22DA               	addwfc	fsr2h,f,c
  7680  001106  C0BC  FFDE         	movff	_ByteLo,postinc2
  7681  00110A  C0BD  FFDD         	movff	_ByteLo+1,postdec2
  7682  00110E                     
  7683                           ; BSR set to: 0
  7684                           ;Modbus.c: 260:     MBResCnt = MBResCnt +2;
  7685  00110E  0E02               	movlw	2
  7686  001110  25A9               	addwf	_MBResCnt& (0+255),w,b
  7687  001112  6FA9               	movwf	_MBResCnt& (0+255),b
  7688  001114  0E00               	movlw	0
  7689  001116  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  7690  001118  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7691  00111A                     
  7692                           ; BSR set to: 0
  7693                           ;Modbus.c: 262:     if(Debug==1){
  7694  00111A  05B1               	decf	_Debug& (0+255),w,b
  7695  00111C  A4D8               	btfss	status,2,c
  7696  00111E  EF93  F008         	goto	u6671
  7697  001122  EF95  F008         	goto	u6670
  7698  001126                     u6671:
  7699  001126  EF99  F008         	goto	l6704
  7700  00112A                     u6670:
  7701  00112A                     
  7702                           ; BSR set to: 0
  7703                           ;Modbus.c: 263:         PrintMB400();
  7704  00112A  ECE4  F017         	call	_PrintMB400	;wreg free
  7705                           
  7706                           ;Modbus.c: 264:         PrintModRespon();
  7707  00112E  EC32  F017         	call	_PrintModRespon	;wreg free
  7708  001132                     l6704:
  7709                           
  7710                           ;Modbus.c: 267:     UART1_Write_string(MBRespon,MBResCnt);
  7711  001132  0E3F               	movlw	low _MBRespon
  7712  001134  6E06               	movwf	UART1_Write_string@data^0,c
  7713  001136  0E01               	movlw	high _MBRespon
  7714  001138  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  7715  00113A  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  7716  00113E  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  7717  001142  ECAA  F017         	call	_UART1_Write_string	;wreg free
  7718  001146  0012               	return		;funcret
  7719  001148                     __end_of_ModbusFC10:
  7720                           	opt callstack 0
  7721                           
  7722 ;; *************** function _PrintMB400 *****************
  7723 ;; Defined at:
  7724 ;;		line 57 in file "Modbus.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  i               2   84[COMRAM] int 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1    wreg      void 
  7731 ;; Registers used:
  7732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;Total ram usage:        2 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:   13
  7745 ;; This function calls:
  7746 ;;		_printf
  7747 ;; This function is called by:
  7748 ;;		_main
  7749 ;;		_ModbusFC10
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text42
  7754  002FC8                     __ptext42:
  7755                           	opt callstack 0
  7756  002FC8                     _PrintMB400:
  7757                           	opt callstack 17
  7758  002FC8                     
  7759                           ;Modbus.c: 59:     printf("UpdatedMB400 \r\n");
  7760  002FC8  0EC1               	movlw	low STR_5
  7761  002FCA  0100               	movlb	0	; () banked
  7762  002FCC  6F7D               	movwf	printf@fmt& (0+255),b
  7763  002FCE  0EFF               	movlw	high STR_5
  7764  002FD0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7765  002FD2  ECD6  F01B         	call	_printf	;wreg free
  7766  002FD6                     
  7767                           ;Modbus.c: 62:     for(i=0; i<32; i++ ){
  7768  002FD6  0E00               	movlw	0
  7769  002FD8  6E56               	movwf	(PrintMB400@i+1)^0,c
  7770  002FDA  0E00               	movlw	0
  7771  002FDC  6E55               	movwf	PrintMB400@i^0,c
  7772  002FDE                     l6376:
  7773                           
  7774                           ;Modbus.c: 63:         printf("Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  7775  002FDE  0EE4               	movlw	low STR_6
  7776  002FE0  0100               	movlb	0	; () banked
  7777  002FE2  6F7D               	movwf	printf@fmt& (0+255),b
  7778  002FE4  0EFE               	movlw	high STR_6
  7779  002FE6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7780  002FE8  C055  F07F         	movff	PrintMB400@i,?_printf+2
  7781  002FEC  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  7782  002FF0  90D8               	bcf	status,0,c
  7783  002FF2  3455               	rlcf	PrintMB400@i^0,w,c
  7784  002FF4  6ED9               	movwf	fsr2l,c
  7785  002FF6  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  7786  002FF8  6EDA               	movwf	fsr2h,c
  7787  002FFA  0E64               	movlw	low _MB400xx
  7788  002FFC  26D9               	addwf	fsr2l,f,c
  7789  002FFE  0E03               	movlw	high _MB400xx
  7790  003000  22DA               	addwfc	fsr2h,f,c
  7791  003002  CFDE F081          	movff	postinc2,?_printf+4
  7792  003006  CFDD F082          	movff	postdec2,?_printf+5
  7793  00300A  ECD6  F01B         	call	_printf	;wreg free
  7794  00300E                     
  7795                           ;Modbus.c: 64:     }
  7796  00300E  4A55               	infsnz	PrintMB400@i^0,f,c
  7797  003010  2A56               	incf	(PrintMB400@i+1)^0,f,c
  7798  003012  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  7799  003014  EF15  F018         	goto	u6331
  7800  003018  5056               	movf	(PrintMB400@i+1)^0,w,c
  7801  00301A  E109               	bnz	u6330
  7802  00301C  0E20               	movlw	32
  7803  00301E  5C55               	subwf	PrintMB400@i^0,w,c
  7804  003020  A0D8               	btfss	status,0,c
  7805  003022  EF15  F018         	goto	u6331
  7806  003026  EF17  F018         	goto	u6330
  7807  00302A                     u6331:
  7808  00302A  EFEF  F017         	goto	l6376
  7809  00302E                     u6330:
  7810  00302E  0012               	return		;funcret
  7811  003030                     __end_of_PrintMB400:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function _ModbusFC03 *****************
  7815 ;; Defined at:
  7816 ;;		line 178 in file "Modbus.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  i               2   49[BANK0 ] int 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;Total ram usage:        6 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:   14
  7837 ;; This function calls:
  7838 ;;		_PrintModRespon
  7839 ;;		_UART1_Write_string
  7840 ;;		_generateCRC
  7841 ;; This function is called by:
  7842 ;;		_main
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text43
  7847  00134A                     __ptext43:
  7848                           	opt callstack 0
  7849  00134A                     _ModbusFC03:
  7850                           	opt callstack 16
  7851  00134A                     
  7852                           ;Modbus.c: 183:     MBResCnt = 0;
  7853  00134A  0E00               	movlw	0
  7854  00134C  0100               	movlb	0	; () banked
  7855  00134E  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7856  001350  0E00               	movlw	0
  7857  001352  6FA9               	movwf	_MBResCnt& (0+255),b
  7858  001354                     
  7859                           ; BSR set to: 0
  7860                           ;Modbus.c: 184:     MBRespon[MBResCnt] = ModbusData[0];
  7861  001354  0102               	movlb	2	; () banked
  7862  001356  517C               	movf	_ModbusData& (0+255),w,b
  7863  001358  0100               	movlb	0	; () banked
  7864  00135A  6F8D               	movwf	??_ModbusFC03& (0+255),b
  7865  00135C  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  7866  00135E  90D8               	bcf	status,0,c
  7867  001360  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7868  001362  6ED9               	movwf	fsr2l,c
  7869  001364  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7870  001366  6EDA               	movwf	fsr2h,c
  7871  001368  0E3F               	movlw	low _MBRespon
  7872  00136A  26D9               	addwf	fsr2l,f,c
  7873  00136C  0E01               	movlw	high _MBRespon
  7874  00136E  22DA               	addwfc	fsr2h,f,c
  7875  001370  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  7876  001374  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  7877  001378                     
  7878                           ; BSR set to: 0
  7879                           ;Modbus.c: 185:     MBResCnt++;
  7880  001378  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7881  00137A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7882  00137C                     
  7883                           ; BSR set to: 0
  7884                           ;Modbus.c: 186:     MBRespon[MBResCnt] = ModbusData[1];
  7885  00137C  0102               	movlb	2	; () banked
  7886  00137E  517D               	movf	(_ModbusData+1)& (0+255),w,b
  7887  001380  0100               	movlb	0	; () banked
  7888  001382  6F8D               	movwf	??_ModbusFC03& (0+255),b
  7889  001384  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  7890  001386  90D8               	bcf	status,0,c
  7891  001388  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7892  00138A  6ED9               	movwf	fsr2l,c
  7893  00138C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7894  00138E  6EDA               	movwf	fsr2h,c
  7895  001390  0E3F               	movlw	low _MBRespon
  7896  001392  26D9               	addwf	fsr2l,f,c
  7897  001394  0E01               	movlw	high _MBRespon
  7898  001396  22DA               	addwfc	fsr2h,f,c
  7899  001398  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  7900  00139C  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  7901  0013A0                     
  7902                           ; BSR set to: 0
  7903                           ;Modbus.c: 187:     MBResCnt++;
  7904  0013A0  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7905  0013A2  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7906  0013A4                     
  7907                           ; BSR set to: 0
  7908                           ;Modbus.c: 188:     MBRespon[MBResCnt] = ModbusData[5] *2;
  7909  0013A4  0102               	movlb	2	; () banked
  7910  0013A6  5181               	movf	(_ModbusData+5)& (0+255),w,b
  7911  0013A8  0D02               	mullw	2
  7912  0013AA  90D8               	bcf	status,0,c
  7913  0013AC  0100               	movlb	0	; () banked
  7914  0013AE  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7915  0013B0  6ED9               	movwf	fsr2l,c
  7916  0013B2  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7917  0013B4  6EDA               	movwf	fsr2h,c
  7918  0013B6  0E3F               	movlw	low _MBRespon
  7919  0013B8  26D9               	addwf	fsr2l,f,c
  7920  0013BA  0E01               	movlw	high _MBRespon
  7921  0013BC  22DA               	addwfc	fsr2h,f,c
  7922  0013BE  CFF3 FFDE          	movff	prodl,postinc2
  7923  0013C2  CFF4 FFDD          	movff	prodh,postdec2
  7924  0013C6                     
  7925                           ; BSR set to: 0
  7926                           ;Modbus.c: 189:     MBResCnt++;
  7927  0013C6  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7928  0013C8  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7929  0013CA                     
  7930                           ; BSR set to: 0
  7931                           ;Modbus.c: 190:     for(i=0; i< (ModbusData[5]) ; i++ ){
  7932  0013CA  0E00               	movlw	0
  7933  0013CC  6F92               	movwf	(ModbusFC03@i+1)& (0+255),b
  7934  0013CE  0E00               	movlw	0
  7935  0013D0  6F91               	movwf	ModbusFC03@i& (0+255),b
  7936  0013D2  EF3B  F00A         	goto	l6640
  7937  0013D6                     l6634:
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;Modbus.c: 196:         ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  7941  0013D6  0102               	movlb	2	; () banked
  7942  0013D8  517F               	movf	(_ModbusData+3)& (0+255),w,b
  7943  0013DA  0100               	movlb	0	; () banked
  7944  0013DC  2591               	addwf	ModbusFC03@i& (0+255),w,b
  7945  0013DE  6F8D               	movwf	??_ModbusFC03& (0+255),b
  7946  0013E0  0E00               	movlw	0
  7947  0013E2  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  7948  0013E4  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  7949  0013E6  90D8               	bcf	status,0,c
  7950  0013E8  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  7951  0013EA  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  7952  0013EC  0E00               	movlw	low _MB300xx
  7953  0013EE  258D               	addwf	??_ModbusFC03& (0+255),w,b
  7954  0013F0  6ED9               	movwf	fsr2l,c
  7955  0013F2  0E02               	movlw	high _MB300xx
  7956  0013F4  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  7957  0013F6  6EDA               	movwf	fsr2h,c
  7958  0013F8  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  7959  0013FC  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  7960  001400  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  7961  001402  6FBC               	movwf	_ByteLo& (0+255),b
  7962  001404  6BBD               	clrf	(_ByteLo+1)& (0+255),b
  7963                           
  7964                           ;Modbus.c: 197:         ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  7965  001406  0102               	movlb	2	; () banked
  7966  001408  517F               	movf	(_ModbusData+3)& (0+255),w,b
  7967  00140A  0100               	movlb	0	; () banked
  7968  00140C  2591               	addwf	ModbusFC03@i& (0+255),w,b
  7969  00140E  6F8D               	movwf	??_ModbusFC03& (0+255),b
  7970  001410  0E00               	movlw	0
  7971  001412  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  7972  001414  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  7973  001416  90D8               	bcf	status,0,c
  7974  001418  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  7975  00141A  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  7976  00141C  0E00               	movlw	low _MB300xx
  7977  00141E  258D               	addwf	??_ModbusFC03& (0+255),w,b
  7978  001420  6ED9               	movwf	fsr2l,c
  7979  001422  0E02               	movlw	high _MB300xx
  7980  001424  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  7981  001426  6EDA               	movwf	fsr2h,c
  7982  001428  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  7983  00142C  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  7984  001430  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  7985  001432  6FA7               	movwf	_ByteHi& (0+255),b
  7986  001434  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  7987                           
  7988                           ;Modbus.c: 198:         MBRespon[MBResCnt] = ByteHi;
  7989  001436  90D8               	bcf	status,0,c
  7990  001438  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7991  00143A  6ED9               	movwf	fsr2l,c
  7992  00143C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7993  00143E  6EDA               	movwf	fsr2h,c
  7994  001440  0E3F               	movlw	low _MBRespon
  7995  001442  26D9               	addwf	fsr2l,f,c
  7996  001444  0E01               	movlw	high _MBRespon
  7997  001446  22DA               	addwfc	fsr2h,f,c
  7998  001448  C0A7  FFDE         	movff	_ByteHi,postinc2
  7999  00144C  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8000  001450                     
  8001                           ; BSR set to: 0
  8002                           ;Modbus.c: 199:         MBResCnt++;
  8003  001450  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8004  001452  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8005  001454                     
  8006                           ; BSR set to: 0
  8007                           ;Modbus.c: 200:         MBRespon[MBResCnt] = ByteLo;
  8008  001454  90D8               	bcf	status,0,c
  8009  001456  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8010  001458  6ED9               	movwf	fsr2l,c
  8011  00145A  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8012  00145C  6EDA               	movwf	fsr2h,c
  8013  00145E  0E3F               	movlw	low _MBRespon
  8014  001460  26D9               	addwf	fsr2l,f,c
  8015  001462  0E01               	movlw	high _MBRespon
  8016  001464  22DA               	addwfc	fsr2h,f,c
  8017  001466  C0BC  FFDE         	movff	_ByteLo,postinc2
  8018  00146A  C0BD  FFDD         	movff	_ByteLo+1,postdec2
  8019                           
  8020                           ;Modbus.c: 201:         MBResCnt++;
  8021  00146E  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8022  001470  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8023                           
  8024                           ;Modbus.c: 202:     }
  8025  001472  4B91               	infsnz	ModbusFC03@i& (0+255),f,b
  8026  001474  2B92               	incf	(ModbusFC03@i+1)& (0+255),f,b
  8027  001476                     l6640:
  8028                           
  8029                           ; BSR set to: 0
  8030  001476  0102               	movlb	2	; () banked
  8031  001478  5181               	movf	(_ModbusData+5)& (0+255),w,b
  8032  00147A  0100               	movlb	0	; () banked
  8033  00147C  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8034  00147E  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8035  001480  518D               	movf	??_ModbusFC03& (0+255),w,b
  8036  001482  5D91               	subwf	ModbusFC03@i& (0+255),w,b
  8037  001484  5192               	movf	(ModbusFC03@i+1)& (0+255),w,b
  8038  001486  0A80               	xorlw	128
  8039  001488  6F8F               	movwf	(??_ModbusFC03+2)& (0+255),b
  8040  00148A  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
  8041  00148C  0A80               	xorlw	128
  8042  00148E  598F               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
  8043  001490  A0D8               	btfss	status,0,c
  8044  001492  EF4D  F00A         	goto	u6641
  8045  001496  EF4F  F00A         	goto	u6640
  8046  00149A                     u6641:
  8047  00149A  EFEB  F009         	goto	l6634
  8048  00149E                     u6640:
  8049  00149E                     
  8050                           ; BSR set to: 0
  8051                           ;Modbus.c: 204:     ByteHi = generateCRC(MBResCnt, 1);
  8052  00149E  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8053  0014A2  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8054  0014A6  0E01               	movlw	1
  8055  0014A8  6E07               	movwf	generateCRC@HiOrLo^0,c
  8056  0014AA  ECE4  F011         	call	_generateCRC	;wreg free
  8057  0014AE  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8058  0014B2  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8059                           
  8060                           ;Modbus.c: 205:     ByteLo = generateCRC(MBResCnt, 0);
  8061  0014B6  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8062  0014BA  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8063  0014BE  0E00               	movlw	0
  8064  0014C0  6E07               	movwf	generateCRC@HiOrLo^0,c
  8065  0014C2  ECE4  F011         	call	_generateCRC	;wreg free
  8066  0014C6  C005  F0BC         	movff	?_generateCRC,_ByteLo
  8067  0014CA  C006  F0BD         	movff	?_generateCRC+1,_ByteLo+1
  8068  0014CE                     
  8069                           ;Modbus.c: 207:     MBRespon[MBResCnt] = ByteHi;
  8070  0014CE  90D8               	bcf	status,0,c
  8071  0014D0  0100               	movlb	0	; () banked
  8072  0014D2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8073  0014D4  6ED9               	movwf	fsr2l,c
  8074  0014D6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8075  0014D8  6EDA               	movwf	fsr2h,c
  8076  0014DA  0E3F               	movlw	low _MBRespon
  8077  0014DC  26D9               	addwf	fsr2l,f,c
  8078  0014DE  0E01               	movlw	high _MBRespon
  8079  0014E0  22DA               	addwfc	fsr2h,f,c
  8080  0014E2  C0A7  FFDE         	movff	_ByteHi,postinc2
  8081  0014E6  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8082  0014EA                     
  8083                           ; BSR set to: 0
  8084                           ;Modbus.c: 208:     MBRespon[MBResCnt +1] = ByteLo;
  8085  0014EA  90D8               	bcf	status,0,c
  8086  0014EC  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8087  0014EE  6ED9               	movwf	fsr2l,c
  8088  0014F0  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8089  0014F2  6EDA               	movwf	fsr2h,c
  8090  0014F4  0E41               	movlw	low (_MBRespon+2)
  8091  0014F6  26D9               	addwf	fsr2l,f,c
  8092  0014F8  0E01               	movlw	high (_MBRespon+2)
  8093  0014FA  22DA               	addwfc	fsr2h,f,c
  8094  0014FC  C0BC  FFDE         	movff	_ByteLo,postinc2
  8095  001500  C0BD  FFDD         	movff	_ByteLo+1,postdec2
  8096  001504                     
  8097                           ; BSR set to: 0
  8098                           ;Modbus.c: 209:     MBResCnt = MBResCnt +2;
  8099  001504  0E02               	movlw	2
  8100  001506  25A9               	addwf	_MBResCnt& (0+255),w,b
  8101  001508  6FA9               	movwf	_MBResCnt& (0+255),b
  8102  00150A  0E00               	movlw	0
  8103  00150C  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8104  00150E  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8105  001510                     
  8106                           ; BSR set to: 0
  8107                           ;Modbus.c: 211:     if(Debug ==1){
  8108  001510  05B1               	decf	_Debug& (0+255),w,b
  8109  001512  A4D8               	btfss	status,2,c
  8110  001514  EF8E  F00A         	goto	u6651
  8111  001518  EF90  F00A         	goto	u6650
  8112  00151C                     u6651:
  8113  00151C  EF92  F00A         	goto	l6654
  8114  001520                     u6650:
  8115  001520                     
  8116                           ; BSR set to: 0
  8117                           ;Modbus.c: 212:         PrintModRespon();
  8118  001520  EC32  F017         	call	_PrintModRespon	;wreg free
  8119  001524                     l6654:
  8120                           
  8121                           ;Modbus.c: 216:     UART1_Write_string(MBRespon,MBResCnt);
  8122  001524  0E3F               	movlw	low _MBRespon
  8123  001526  6E06               	movwf	UART1_Write_string@data^0,c
  8124  001528  0E01               	movlw	high _MBRespon
  8125  00152A  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8126  00152C  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8127  001530  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8128  001534  ECAA  F017         	call	_UART1_Write_string	;wreg free
  8129  001538  0012               	return		;funcret
  8130  00153A                     __end_of_ModbusFC03:
  8131                           	opt callstack 0
  8132                           
  8133 ;; *************** function _ModbusError *****************
  8134 ;; Defined at:
  8135 ;;		line 337 in file "Modbus.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  ErrorCode       2   45[BANK0 ] int 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  i               2    0        int 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;Total ram usage:        6 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:   14
  8156 ;; This function calls:
  8157 ;;		_PrintModRespon
  8158 ;;		_UART1_Write_string
  8159 ;;		_generateCRC
  8160 ;; This function is called by:
  8161 ;;		_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text44
  8166  0021CC                     __ptext44:
  8167                           	opt callstack 0
  8168  0021CC                     _ModbusError:
  8169                           	opt callstack 16
  8170  0021CC                     
  8171                           ;Modbus.c: 342:     MBResCnt = 0;
  8172  0021CC  0E00               	movlw	0
  8173  0021CE  0100               	movlb	0	; () banked
  8174  0021D0  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8175  0021D2  0E00               	movlw	0
  8176  0021D4  6FA9               	movwf	_MBResCnt& (0+255),b
  8177  0021D6                     
  8178                           ; BSR set to: 0
  8179                           ;Modbus.c: 343:     MBRespon[MBResCnt] = ModbusData[0];
  8180  0021D6  0102               	movlb	2	; () banked
  8181  0021D8  517C               	movf	_ModbusData& (0+255),w,b
  8182  0021DA  0100               	movlb	0	; () banked
  8183  0021DC  6F8F               	movwf	??_ModbusError& (0+255),b
  8184  0021DE  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  8185  0021E0  90D8               	bcf	status,0,c
  8186  0021E2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8187  0021E4  6ED9               	movwf	fsr2l,c
  8188  0021E6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8189  0021E8  6EDA               	movwf	fsr2h,c
  8190  0021EA  0E3F               	movlw	low _MBRespon
  8191  0021EC  26D9               	addwf	fsr2l,f,c
  8192  0021EE  0E01               	movlw	high _MBRespon
  8193  0021F0  22DA               	addwfc	fsr2h,f,c
  8194  0021F2  C08F  FFDE         	movff	??_ModbusError,postinc2
  8195  0021F6  C090  FFDD         	movff	??_ModbusError+1,postdec2
  8196  0021FA                     
  8197                           ; BSR set to: 0
  8198                           ;Modbus.c: 344:     MBResCnt++;
  8199  0021FA  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8200  0021FC  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8201  0021FE                     
  8202                           ; BSR set to: 0
  8203                           ;Modbus.c: 345:     MBRespon[MBResCnt] = ModbusData[1] + 128;
  8204  0021FE  0102               	movlb	2	; () banked
  8205  002200  517D               	movf	(_ModbusData+1)& (0+255),w,b
  8206  002202  0100               	movlb	0	; () banked
  8207  002204  6F8F               	movwf	??_ModbusError& (0+255),b
  8208  002206  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  8209  002208  0E80               	movlw	128
  8210  00220A  278F               	addwf	??_ModbusError& (0+255),f,b
  8211  00220C  0E00               	movlw	0
  8212  00220E  2390               	addwfc	(??_ModbusError+1)& (0+255),f,b
  8213  002210  90D8               	bcf	status,0,c
  8214  002212  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8215  002214  6ED9               	movwf	fsr2l,c
  8216  002216  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8217  002218  6EDA               	movwf	fsr2h,c
  8218  00221A  0E3F               	movlw	low _MBRespon
  8219  00221C  26D9               	addwf	fsr2l,f,c
  8220  00221E  0E01               	movlw	high _MBRespon
  8221  002220  22DA               	addwfc	fsr2h,f,c
  8222  002222  C08F  FFDE         	movff	??_ModbusError,postinc2
  8223  002226  C090  FFDD         	movff	??_ModbusError+1,postdec2
  8224  00222A                     
  8225                           ; BSR set to: 0
  8226                           ;Modbus.c: 346:     MBResCnt++;
  8227  00222A  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8228  00222C  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8229  00222E                     
  8230                           ; BSR set to: 0
  8231                           ;Modbus.c: 347:     MBRespon[MBResCnt] = ErrorCode;
  8232  00222E  90D8               	bcf	status,0,c
  8233  002230  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8234  002232  6ED9               	movwf	fsr2l,c
  8235  002234  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8236  002236  6EDA               	movwf	fsr2h,c
  8237  002238  0E3F               	movlw	low _MBRespon
  8238  00223A  26D9               	addwf	fsr2l,f,c
  8239  00223C  0E01               	movlw	high _MBRespon
  8240  00223E  22DA               	addwfc	fsr2h,f,c
  8241  002240  C08D  FFDE         	movff	ModbusError@ErrorCode,postinc2
  8242  002244  C08E  FFDD         	movff	ModbusError@ErrorCode+1,postdec2
  8243  002248                     
  8244                           ; BSR set to: 0
  8245                           ;Modbus.c: 348:     MBResCnt++;
  8246  002248  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8247  00224A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8248  00224C                     
  8249                           ; BSR set to: 0
  8250                           ;Modbus.c: 350:     ByteHi = generateCRC(MBResCnt, 1);
  8251  00224C  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8252  002250  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8253  002254  0E01               	movlw	1
  8254  002256  6E07               	movwf	generateCRC@HiOrLo^0,c
  8255  002258  ECE4  F011         	call	_generateCRC	;wreg free
  8256  00225C  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8257  002260  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8258  002264                     
  8259                           ;Modbus.c: 351:     ByteLo = generateCRC(MBResCnt, 0);
  8260  002264  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8261  002268  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8262  00226C  0E00               	movlw	0
  8263  00226E  6E07               	movwf	generateCRC@HiOrLo^0,c
  8264  002270  ECE4  F011         	call	_generateCRC	;wreg free
  8265  002274  C005  F0BC         	movff	?_generateCRC,_ByteLo
  8266  002278  C006  F0BD         	movff	?_generateCRC+1,_ByteLo+1
  8267  00227C                     
  8268                           ;Modbus.c: 353:     MBRespon[MBResCnt] = ByteHi;
  8269  00227C  90D8               	bcf	status,0,c
  8270  00227E  0100               	movlb	0	; () banked
  8271  002280  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8272  002282  6ED9               	movwf	fsr2l,c
  8273  002284  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8274  002286  6EDA               	movwf	fsr2h,c
  8275  002288  0E3F               	movlw	low _MBRespon
  8276  00228A  26D9               	addwf	fsr2l,f,c
  8277  00228C  0E01               	movlw	high _MBRespon
  8278  00228E  22DA               	addwfc	fsr2h,f,c
  8279  002290  C0A7  FFDE         	movff	_ByteHi,postinc2
  8280  002294  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8281  002298                     
  8282                           ; BSR set to: 0
  8283                           ;Modbus.c: 354:     MBRespon[MBResCnt +1] = ByteLo;
  8284  002298  90D8               	bcf	status,0,c
  8285  00229A  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8286  00229C  6ED9               	movwf	fsr2l,c
  8287  00229E  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8288  0022A0  6EDA               	movwf	fsr2h,c
  8289  0022A2  0E41               	movlw	low (_MBRespon+2)
  8290  0022A4  26D9               	addwf	fsr2l,f,c
  8291  0022A6  0E01               	movlw	high (_MBRespon+2)
  8292  0022A8  22DA               	addwfc	fsr2h,f,c
  8293  0022AA  C0BC  FFDE         	movff	_ByteLo,postinc2
  8294  0022AE  C0BD  FFDD         	movff	_ByteLo+1,postdec2
  8295  0022B2                     
  8296                           ; BSR set to: 0
  8297                           ;Modbus.c: 355:     MBResCnt = MBResCnt +2;
  8298  0022B2  0E02               	movlw	2
  8299  0022B4  25A9               	addwf	_MBResCnt& (0+255),w,b
  8300  0022B6  6FA9               	movwf	_MBResCnt& (0+255),b
  8301  0022B8  0E00               	movlw	0
  8302  0022BA  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8303  0022BC  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8304  0022BE                     
  8305                           ; BSR set to: 0
  8306                           ;Modbus.c: 357:     PrintModRespon();
  8307  0022BE  EC32  F017         	call	_PrintModRespon	;wreg free
  8308  0022C2                     
  8309                           ;Modbus.c: 358:     UART1_Write_string(MBRespon,MBResCnt);
  8310  0022C2  0E3F               	movlw	low _MBRespon
  8311  0022C4  6E06               	movwf	UART1_Write_string@data^0,c
  8312  0022C6  0E01               	movlw	high _MBRespon
  8313  0022C8  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8314  0022CA  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8315  0022CE  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8316  0022D2  ECAA  F017         	call	_UART1_Write_string	;wreg free
  8317  0022D6  0012               	return		;funcret
  8318  0022D8                     __end_of_ModbusError:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _generateCRC *****************
  8322 ;; Defined at:
  8323 ;;		line 273 in file "Modbus.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  MessCnt         2    4[COMRAM] int 
  8326 ;;  HiOrLo          1    6[COMRAM] _Bool 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  crc             2   17[COMRAM] unsigned int 
  8329 ;;  j               2   15[COMRAM] int 
  8330 ;;  i               2   13[COMRAM] int 
  8331 ;;  crcLow          2   11[COMRAM] unsigned int 
  8332 ;;  crcHigh         2    9[COMRAM] unsigned int 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  2    4[COMRAM] unsigned int 
  8335 ;; Registers used:
  8336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8342 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8343 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;Total ram usage:       15 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    4
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_ModbusFC03
  8353 ;;		_ModbusFC10
  8354 ;;		_ModbusError
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text45
  8359  0023C8                     __ptext45:
  8360                           	opt callstack 0
  8361  0023C8                     _generateCRC:
  8362                           	opt callstack 25
  8363  0023C8                     
  8364                           ;Modbus.c: 274:   unsigned int crc = 0xFFFF;
  8365  0023C8  6812               	setf	generateCRC@crc^0,c
  8366  0023CA  6813               	setf	(generateCRC@crc+1)^0,c
  8367  0023CC                     
  8368                           ;Modbus.c: 276:   unsigned int crcLow = 0;
  8369  0023CC  0E00               	movlw	0
  8370  0023CE  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  8371  0023D0  0E00               	movlw	0
  8372  0023D2  6E0C               	movwf	generateCRC@crcLow^0,c
  8373                           
  8374                           ;Modbus.c: 277:   int i,j = 0;
  8375  0023D4  0E00               	movlw	0
  8376  0023D6  6E11               	movwf	(generateCRC@j+1)^0,c
  8377  0023D8  0E00               	movlw	0
  8378  0023DA  6E10               	movwf	generateCRC@j^0,c
  8379                           
  8380                           ;Modbus.c: 279:     for(i=0;i<MessCnt;i++){
  8381  0023DC  0E00               	movlw	0
  8382  0023DE  6E0F               	movwf	(generateCRC@i+1)^0,c
  8383  0023E0  0E00               	movlw	0
  8384  0023E2  6E0E               	movwf	generateCRC@i^0,c
  8385  0023E4  EF26  F012         	goto	l4858
  8386  0023E8                     l4840:
  8387                           
  8388                           ;Modbus.c: 280:       crc ^= MBRespon[i];
  8389  0023E8  90D8               	bcf	status,0,c
  8390  0023EA  340E               	rlcf	generateCRC@i^0,w,c
  8391  0023EC  6ED9               	movwf	fsr2l,c
  8392  0023EE  340F               	rlcf	(generateCRC@i+1)^0,w,c
  8393  0023F0  6EDA               	movwf	fsr2h,c
  8394  0023F2  0E3F               	movlw	low _MBRespon
  8395  0023F4  26D9               	addwf	fsr2l,f,c
  8396  0023F6  0E01               	movlw	high _MBRespon
  8397  0023F8  22DA               	addwfc	fsr2h,f,c
  8398  0023FA  50DE               	movf	postinc2,w,c
  8399  0023FC  1A12               	xorwf	generateCRC@crc^0,f,c
  8400  0023FE  50DD               	movf	postdec2,w,c
  8401  002400  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  8402  002402                     
  8403                           ;Modbus.c: 281:       for(j=8; j!=0; j--){
  8404  002402  0E00               	movlw	0
  8405  002404  6E11               	movwf	(generateCRC@j+1)^0,c
  8406  002406  0E08               	movlw	8
  8407  002408  6E10               	movwf	generateCRC@j^0,c
  8408  00240A                     l733:
  8409                           
  8410                           ;Modbus.c: 282:         if((crc & 0x0001) != 0){
  8411  00240A  A012               	btfss	generateCRC@crc^0,0,c
  8412  00240C  EF0A  F012         	goto	u4141
  8413  002410  EF0C  F012         	goto	u4140
  8414  002414                     u4141:
  8415  002414  EF15  F012         	goto	l4852
  8416  002418                     u4140:
  8417  002418                     
  8418                           ;Modbus.c: 283:           crc >>= 1;
  8419  002418  90D8               	bcf	status,0,c
  8420  00241A  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  8421  00241C  3212               	rrcf	generateCRC@crc^0,f,c
  8422  00241E                     
  8423                           ;Modbus.c: 284:           crc ^= 0xA001;
  8424  00241E  0E01               	movlw	1
  8425  002420  1A12               	xorwf	generateCRC@crc^0,f,c
  8426  002422  0EA0               	movlw	160
  8427  002424  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  8428                           
  8429                           ;Modbus.c: 285:         }
  8430  002426  EF18  F012         	goto	l736
  8431  00242A                     l4852:
  8432                           
  8433                           ;Modbus.c: 287:           crc >>= 1;
  8434  00242A  90D8               	bcf	status,0,c
  8435  00242C  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  8436  00242E  3212               	rrcf	generateCRC@crc^0,f,c
  8437  002430                     l736:
  8438                           
  8439                           ;Modbus.c: 289:       }
  8440  002430  0610               	decf	generateCRC@j^0,f,c
  8441  002432  A0D8               	btfss	status,0,c
  8442  002434  0611               	decf	(generateCRC@j+1)^0,f,c
  8443  002436  5010               	movf	generateCRC@j^0,w,c
  8444  002438  1011               	iorwf	(generateCRC@j+1)^0,w,c
  8445  00243A  A4D8               	btfss	status,2,c
  8446  00243C  EF22  F012         	goto	u4151
  8447  002440  EF24  F012         	goto	u4150
  8448  002444                     u4151:
  8449  002444  EF05  F012         	goto	l733
  8450  002448                     u4150:
  8451  002448                     
  8452                           ;Modbus.c: 290:     }
  8453  002448  4A0E               	infsnz	generateCRC@i^0,f,c
  8454  00244A  2A0F               	incf	(generateCRC@i+1)^0,f,c
  8455  00244C                     l4858:
  8456  00244C  5005               	movf	generateCRC@MessCnt^0,w,c
  8457  00244E  5C0E               	subwf	generateCRC@i^0,w,c
  8458  002450  500F               	movf	(generateCRC@i+1)^0,w,c
  8459  002452  0A80               	xorlw	128
  8460  002454  6E08               	movwf	??_generateCRC^0,c
  8461  002456  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
  8462  002458  0A80               	xorlw	128
  8463  00245A  5808               	subwfb	??_generateCRC^0,w,c
  8464  00245C  A0D8               	btfss	status,0,c
  8465  00245E  EF33  F012         	goto	u4161
  8466  002462  EF35  F012         	goto	u4160
  8467  002466                     u4161:
  8468  002466  EFF4  F011         	goto	l4840
  8469  00246A                     u4160:
  8470  00246A                     
  8471                           ;Modbus.c: 292:     crcHigh = (crc & 0x00FF);
  8472  00246A  5012               	movf	generateCRC@crc^0,w,c
  8473  00246C  6E0A               	movwf	generateCRC@crcHigh^0,c
  8474  00246E  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
  8475                           
  8476                           ;Modbus.c: 293:     crcLow = (crc & 0xFF00) >>8;
  8477  002470  C012  F008         	movff	generateCRC@crc,??_generateCRC
  8478  002474  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
  8479  002478  C009  F008         	movff	??_generateCRC+1,??_generateCRC
  8480  00247C  6A09               	clrf	(??_generateCRC+1)^0,c
  8481  00247E  5008               	movf	??_generateCRC^0,w,c
  8482  002480  6E0C               	movwf	generateCRC@crcLow^0,c
  8483  002482  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
  8484  002484                     
  8485                           ;Modbus.c: 295:     if(HiOrLo == 1){
  8486  002484  0407               	decf	generateCRC@HiOrLo^0,w,c
  8487  002486  A4D8               	btfss	status,2,c
  8488  002488  EF48  F012         	goto	u4171
  8489  00248C  EF4A  F012         	goto	u4170
  8490  002490                     u4171:
  8491  002490  EF50  F012         	goto	l738
  8492  002494                     u4170:
  8493  002494                     
  8494                           ;Modbus.c: 296:         return crcHigh;
  8495  002494  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
  8496  002498  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
  8497  00249C  EF54  F012         	goto	l739
  8498  0024A0                     l738:
  8499                           
  8500                           ;Modbus.c: 298:         return crcLow;
  8501  0024A0  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
  8502  0024A4  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
  8503  0024A8                     l739:
  8504  0024A8  0012               	return		;funcret
  8505  0024AA                     __end_of_generateCRC:
  8506                           	opt callstack 0
  8507                           
  8508 ;; *************** function _UART1_Write_string *****************
  8509 ;; Defined at:
  8510 ;;		line 303 in file "Modbus.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  data            2    5[COMRAM] PTR unsigned int 
  8513 ;;		 -> MBRespon(64), 
  8514 ;;  data_len        2    7[COMRAM] int 
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  i               2   10[COMRAM] int 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      void 
  8519 ;; Registers used:
  8520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8530 ;;Total ram usage:        7 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    5
  8533 ;; This function calls:
  8534 ;;		_EUSART1_Write
  8535 ;;		_EUSART1_is_tx_done
  8536 ;;		_EUSART1_is_tx_ready
  8537 ;;		_TXMode
  8538 ;; This function is called by:
  8539 ;;		_ModbusFC03
  8540 ;;		_ModbusFC10
  8541 ;;		_ModbusError
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text46
  8546  002F54                     __ptext46:
  8547                           	opt callstack 0
  8548  002F54                     _UART1_Write_string:
  8549                           	opt callstack 24
  8550  002F54                     
  8551                           ;Modbus.c: 303: void UART1_Write_string(unsigned int * data, int data_len);Modbus.c: 304
      +                          : {;Modbus.c: 305:     TXMode();
  8552  002F54  ECAF  F01C         	call	_TXMode	;wreg free
  8553  002F58                     l4884:
  8554  002F58  EC5B  F01C         	call	_EUSART1_is_tx_ready	;wreg free
  8555  002F5C  0900               	iorlw	0
  8556  002F5E  B4D8               	btfsc	status,2,c
  8557  002F60  EFB4  F017         	goto	u4191
  8558  002F64  EFB6  F017         	goto	u4190
  8559  002F68                     u4191:
  8560  002F68  EFAC  F017         	goto	l4884
  8561  002F6C                     u4190:
  8562  002F6C                     
  8563                           ;Modbus.c: 307:     for (int i = 0; i < data_len; i++) {
  8564  002F6C  0E00               	movlw	0
  8565  002F6E  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  8566  002F70  0E00               	movlw	0
  8567  002F72  6E0B               	movwf	UART1_Write_string@i^0,c
  8568  002F74  EFD4  F017         	goto	l4894
  8569  002F78                     l4888:
  8570                           
  8571                           ;Modbus.c: 308:         EUSART1_Write(data[i]);
  8572  002F78  90D8               	bcf	status,0,c
  8573  002F7A  340B               	rlcf	UART1_Write_string@i^0,w,c
  8574  002F7C  6ED9               	movwf	fsr2l,c
  8575  002F7E  340C               	rlcf	(UART1_Write_string@i+1)^0,w,c
  8576  002F80  6EDA               	movwf	fsr2h,c
  8577  002F82  5006               	movf	UART1_Write_string@data^0,w,c
  8578  002F84  26D9               	addwf	fsr2l,f,c
  8579  002F86  5007               	movf	(UART1_Write_string@data+1)^0,w,c
  8580  002F88  22DA               	addwfc	fsr2h,f,c
  8581  002F8A  50DF               	movf	indf2,w,c
  8582  002F8C  ECD8  F018         	call	_EUSART1_Write
  8583  002F90                     l4890:
  8584  002F90  EC67  F01C         	call	_EUSART1_is_tx_done	;wreg free
  8585  002F94  0900               	iorlw	0
  8586  002F96  B4D8               	btfsc	status,2,c
  8587  002F98  EFD0  F017         	goto	u4201
  8588  002F9C  EFD2  F017         	goto	u4200
  8589  002FA0                     u4201:
  8590  002FA0  EFC8  F017         	goto	l4890
  8591  002FA4                     u4200:
  8592  002FA4                     
  8593                           ;Modbus.c: 310:     }
  8594  002FA4  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  8595  002FA6  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  8596  002FA8                     l4894:
  8597  002FA8  5008               	movf	UART1_Write_string@data_len^0,w,c
  8598  002FAA  5C0B               	subwf	UART1_Write_string@i^0,w,c
  8599  002FAC  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  8600  002FAE  0A80               	xorlw	128
  8601  002FB0  6E0A               	movwf	??_UART1_Write_string^0,c
  8602  002FB2  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  8603  002FB4  0A80               	xorlw	128
  8604  002FB6  580A               	subwfb	??_UART1_Write_string^0,w,c
  8605  002FB8  A0D8               	btfss	status,0,c
  8606  002FBA  EFE1  F017         	goto	u4211
  8607  002FBE  EFE3  F017         	goto	u4210
  8608  002FC2                     u4211:
  8609  002FC2  EFBC  F017         	goto	l4888
  8610  002FC6                     u4210:
  8611  002FC6  0012               	return		;funcret
  8612  002FC8                     __end_of_UART1_Write_string:
  8613                           	opt callstack 0
  8614                           
  8615 ;; *************** function _TXMode *****************
  8616 ;; Defined at:
  8617 ;;		line 70 in file "Modbus.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		None
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8635 ;;Total ram usage:        0 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    4
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_UART1_Write_string
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text47
  8646  00395E                     __ptext47:
  8647                           	opt callstack 0
  8648  00395E                     _TXMode:
  8649                           	opt callstack 24
  8650  00395E  8086               	bsf	134,0,c	;volatile
  8651  003960  8683               	bsf	131,3,c	;volatile
  8652  003962  0012               	return		;funcret
  8653  003964                     __end_of_TXMode:
  8654                           	opt callstack 0
  8655                           
  8656 ;; *************** function _EUSART1_is_tx_ready *****************
  8657 ;; Defined at:
  8658 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      _Bool 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8676 ;;Total ram usage:        0 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    4
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_UART1_Write_string
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text48
  8687  0038B6                     __ptext48:
  8688                           	opt callstack 0
  8689  0038B6                     _EUSART1_is_tx_ready:
  8690                           	opt callstack 24
  8691  0038B6                     
  8692                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  8693  0038B6  0100               	movlb	0	; () banked
  8694  0038B8  51BE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  8695  0038BA  A4D8               	btfss	status,2,c
  8696  0038BC  EF62  F01C         	goto	u3841
  8697  0038C0  EF65  F01C         	goto	u3840
  8698  0038C4                     u3841:
  8699  0038C4  0E01               	movlw	1
  8700  0038C6  EF66  F01C         	goto	u3850
  8701  0038CA                     u3840:
  8702  0038CA  0E00               	movlw	0
  8703  0038CC                     u3850:
  8704  0038CC                     
  8705                           ; BSR set to: 0
  8706  0038CC  0012               	return		;funcret
  8707  0038CE                     __end_of_EUSART1_is_tx_ready:
  8708                           	opt callstack 0
  8709                           
  8710 ;; *************** function _EUSART1_is_tx_done *****************
  8711 ;; Defined at:
  8712 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      _Bool 
  8719 ;; Registers used:
  8720 ;;		wreg
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;Total ram usage:        0 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:    4
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_UART1_Write_string
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text49
  8741  0038CE                     __ptext49:
  8742                           	opt callstack 0
  8743  0038CE                     _EUSART1_is_tx_done:
  8744                           	opt callstack 24
  8745  0038CE                     
  8746                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
  8747  0038CE  B29E               	btfsc	158,1,c	;volatile
  8748  0038D0  EF6C  F01C         	goto	u3861
  8749  0038D4  EF6F  F01C         	goto	u3860
  8750  0038D8                     u3861:
  8751  0038D8  0E01               	movlw	1
  8752  0038DA  EF70  F01C         	goto	u3866
  8753  0038DE                     u3860:
  8754  0038DE  0E00               	movlw	0
  8755  0038E0                     u3866:
  8756  0038E0  0012               	return		;funcret
  8757  0038E2                     __end_of_EUSART1_is_tx_done:
  8758                           	opt callstack 0
  8759                           
  8760 ;; *************** function _EUSART1_Write *****************
  8761 ;; Defined at:
  8762 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  txData          1    wreg     unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  txData          1    4[COMRAM] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;Total ram usage:        1 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    4
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_UART1_Write_string
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text50
  8791  0031B0                     __ptext50:
  8792                           	opt callstack 0
  8793  0031B0                     _EUSART1_Write:
  8794                           	opt callstack 24
  8795                           
  8796                           ;incstack = 0
  8797                           ;EUSART1_Write@txData stored from wreg
  8798  0031B0  6E05               	movwf	EUSART1_Write@txData^0,c
  8799  0031B2                     l4540:
  8800                           
  8801                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  8802  0031B2  0100               	movlb	0	; () banked
  8803  0031B4  51BE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  8804  0031B6  B4D8               	btfsc	status,2,c
  8805  0031B8  EFE0  F018         	goto	u3871
  8806  0031BC  EFE2  F018         	goto	u3870
  8807  0031C0                     u3871:
  8808  0031C0  EFD9  F018         	goto	l4540
  8809  0031C4                     u3870:
  8810  0031C4                     
  8811                           ; BSR set to: 0
  8812                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  8813  0031C4  010E               	movlb	14	; () banked
  8814  0031C6  B9C5               	btfsc	197,4,b	;volatile
  8815  0031C8  EFE8  F018         	goto	u3881
  8816  0031CC  EFEA  F018         	goto	u3880
  8817  0031D0                     u3881:
  8818  0031D0  EFEE  F018         	goto	l471
  8819  0031D4                     u3880:
  8820  0031D4                     
  8821                           ; BSR set to: 14
  8822                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  8823  0031D4  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  8824                           
  8825                           ;mcc_generated_files/eusart1.c: 182:     }
  8826  0031D8  EF04  F019         	goto	l4554
  8827  0031DC                     l471:
  8828                           
  8829                           ; BSR set to: 14
  8830                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  8831  0031DC  99C5               	bcf	197,4,b	;volatile
  8832  0031DE                     
  8833                           ; BSR set to: 14
  8834                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  8835  0031DE  0E7F               	movlw	low _eusart1TxBuffer
  8836  0031E0  0100               	movlb	0	; () banked
  8837  0031E2  25B6               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  8838  0031E4  6ED9               	movwf	fsr2l,c
  8839  0031E6  6ADA               	clrf	fsr2h,c
  8840  0031E8  0E01               	movlw	high _eusart1TxBuffer
  8841  0031EA  22DA               	addwfc	fsr2h,f,c
  8842  0031EC  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  8843  0031F0                     
  8844                           ; BSR set to: 0
  8845  0031F0  2BB6               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  8846  0031F2                     
  8847                           ; BSR set to: 0
  8848                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  8849  0031F2  0E0F               	movlw	15
  8850  0031F4  65B6               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  8851  0031F6  EFFF  F018         	goto	u3891
  8852  0031FA  EF01  F019         	goto	u3890
  8853  0031FE                     u3891:
  8854  0031FE  EF03  F019         	goto	l4552
  8855  003202                     u3890:
  8856  003202                     
  8857                           ; BSR set to: 0
  8858                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  8859  003202  0E00               	movlw	0
  8860  003204  6FB6               	movwf	_eusart1TxHead& (0+255),b	;volatile
  8861  003206                     l4552:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  8865  003206  07BE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  8866  003208                     l4554:
  8867                           
  8868                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  8869  003208  010E               	movlb	14	; () banked
  8870  00320A  89C5               	bsf	197,4,b	;volatile
  8871  00320C                     
  8872                           ; BSR set to: 14
  8873  00320C  0012               	return		;funcret
  8874  00320E                     __end_of_EUSART1_Write:
  8875                           	opt callstack 0
  8876                           
  8877 ;; *************** function _PrintModRespon *****************
  8878 ;; Defined at:
  8879 ;;		line 316 in file "Modbus.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;		None
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  i               2   43[BANK0 ] int 
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8897 ;;Total ram usage:        3 bytes
  8898 ;; Hardware stack levels used:    1
  8899 ;; Hardware stack levels required when called:   13
  8900 ;; This function calls:
  8901 ;;		_printf
  8902 ;; This function is called by:
  8903 ;;		_ModbusFC03
  8904 ;;		_ModbusFC10
  8905 ;;		_ModbusError
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text51
  8910  002E64                     __ptext51:
  8911                           	opt callstack 0
  8912  002E64                     _PrintModRespon:
  8913                           	opt callstack 16
  8914  002E64                     
  8915                           ;Modbus.c: 319:     printf("Modbus Response:\r\n");
  8916  002E64  0E7C               	movlw	low STR_13
  8917  002E66  0100               	movlb	0	; () banked
  8918  002E68  6F7D               	movwf	printf@fmt& (0+255),b
  8919  002E6A  0EFF               	movlw	high STR_13
  8920  002E6C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8921  002E6E  ECD6  F01B         	call	_printf	;wreg free
  8922  002E72                     
  8923                           ;Modbus.c: 320:     for(i=0; i< MBResCnt ; i++ ){
  8924  002E72  0E00               	movlw	0
  8925  002E74  0100               	movlb	0	; () banked
  8926  002E76  6F8C               	movwf	(PrintModRespon@i+1)& (0+255),b
  8927  002E78  0E00               	movlw	0
  8928  002E7A  6F8B               	movwf	PrintModRespon@i& (0+255),b
  8929  002E7C  EF5A  F017         	goto	l6460
  8930  002E80                     l6456:
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;Modbus.c: 321:         printf("   Byte %i : 0x%02x \r\n", i, MBRespon[i]);
  8934  002E80  0E13               	movlw	low STR_10
  8935  002E82  6F7D               	movwf	printf@fmt& (0+255),b
  8936  002E84  0EFF               	movlw	high STR_10
  8937  002E86  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8938  002E88  C08B  F07F         	movff	PrintModRespon@i,?_printf+2
  8939  002E8C  C08C  F080         	movff	PrintModRespon@i+1,?_printf+3
  8940  002E90  90D8               	bcf	status,0,c
  8941  002E92  358B               	rlcf	PrintModRespon@i& (0+255),w,b
  8942  002E94  6ED9               	movwf	fsr2l,c
  8943  002E96  358C               	rlcf	(PrintModRespon@i+1)& (0+255),w,b
  8944  002E98  6EDA               	movwf	fsr2h,c
  8945  002E9A  0E3F               	movlw	low _MBRespon
  8946  002E9C  26D9               	addwf	fsr2l,f,c
  8947  002E9E  0E01               	movlw	high _MBRespon
  8948  002EA0  22DA               	addwfc	fsr2h,f,c
  8949  002EA2  CFDE F081          	movff	postinc2,?_printf+4
  8950  002EA6  CFDD F082          	movff	postdec2,?_printf+5
  8951  002EAA  ECD6  F01B         	call	_printf	;wreg free
  8952  002EAE                     
  8953                           ;Modbus.c: 322:     }
  8954  002EAE  0100               	movlb	0	; () banked
  8955  002EB0  4B8B               	infsnz	PrintModRespon@i& (0+255),f,b
  8956  002EB2  2B8C               	incf	(PrintModRespon@i+1)& (0+255),f,b
  8957  002EB4                     l6460:
  8958                           
  8959                           ; BSR set to: 0
  8960  002EB4  51A9               	movf	_MBResCnt& (0+255),w,b
  8961  002EB6  5D8B               	subwf	PrintModRespon@i& (0+255),w,b
  8962  002EB8  518C               	movf	(PrintModRespon@i+1)& (0+255),w,b
  8963  002EBA  0A80               	xorlw	128
  8964  002EBC  6E55               	movwf	??_PrintModRespon^0,c
  8965  002EBE  51AA               	movf	(_MBResCnt+1)& (0+255),w,b
  8966  002EC0  0A80               	xorlw	128
  8967  002EC2  5855               	subwfb	??_PrintModRespon^0,w,c
  8968  002EC4  A0D8               	btfss	status,0,c
  8969  002EC6  EF67  F017         	goto	u6441
  8970  002ECA  EF69  F017         	goto	u6440
  8971  002ECE                     u6441:
  8972  002ECE  EF40  F017         	goto	l6456
  8973  002ED2                     u6440:
  8974  002ED2                     
  8975                           ; BSR set to: 0
  8976                           ;Modbus.c: 323:     printf("\r\n\n");
  8977  002ED2  0E3B               	movlw	low (STR_17+17)
  8978  002ED4  6F7D               	movwf	printf@fmt& (0+255),b
  8979  002ED6  0EFF               	movlw	high (STR_17+17)
  8980  002ED8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8981  002EDA  ECD6  F01B         	call	_printf	;wreg free
  8982  002EDE  0012               	return		;funcret
  8983  002EE0                     __end_of_PrintModRespon:
  8984                           	opt callstack 0
  8985                           
  8986 ;; *************** function _printf *****************
  8987 ;; Defined at:
  8988 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  8991 ;;		 -> STR_54(29), STR_53(31), STR_51(30), STR_50(24), 
  8992 ;;		 -> STR_49(25), STR_48(17), STR_47(27), STR_46(33), 
  8993 ;;		 -> STR_44(46), STR_42(30), STR_41(24), STR_40(25), 
  8994 ;;		 -> STR_39(17), STR_38(27), STR_37(33), STR_35(36), 
  8995 ;;		 -> STR_34(67), STR_33(19), STR_32(55), STR_31(17), 
  8996 ;;		 -> STR_30(16), STR_29(4), STR_28(35), STR_27(55), 
  8997 ;;		 -> STR_26(53), STR_25(29), STR_22(43), STR_21(23), 
  8998 ;;		 -> STR_20(25), STR_19(61), STR_18(27), STR_17(21), 
  8999 ;;		 -> STR_16(24), STR_15(4), STR_14(23), STR_13(19), 
  9000 ;;		 -> STR_12(36), STR_11(4), STR_10(23), STR_9(32), 
  9001 ;;		 -> STR_8(28), STR_7(54), STR_6(24), STR_5(16), 
  9002 ;;		 -> STR_3(28), STR_2(21), STR_1(21), 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;  ap              2   41[BANK0 ] PTR void [1]
  9005 ;;		 -> ?_printf(2), 
  9006 ;;  ret             2    0        int 
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  2   29[BANK0 ] int 
  9009 ;; Registers used:
  9010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9016 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;Total ram usage:       14 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:   12
  9023 ;; This function calls:
  9024 ;;		_vfprintf
  9025 ;; This function is called by:
  9026 ;;		_main
  9027 ;;		_PrintMB400
  9028 ;;		_AddRxBuffToModBus
  9029 ;;		_PrintModbus
  9030 ;;		_checkCRC
  9031 ;;		_PrintModRespon
  9032 ;;		_ModbusRx
  9033 ;;		_InitialiseString
  9034 ;;		_ReadRX232
  9035 ;;		_TogDebug
  9036 ;;		_ClearEEAddRange
  9037 ;;		_SaveCardDat
  9038 ;;		_ValidateCmd
  9039 ;;		_RecSerNum
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text52
  9044  0037AC                     __ptext52:
  9045                           	opt callstack 0
  9046  0037AC                     _printf:
  9047                           	opt callstack 18
  9048  0037AC  0E7F               	movlw	low (?_printf+2)
  9049  0037AE  0100               	movlb	0	; () banked
  9050  0037B0  6F89               	movwf	printf@ap& (0+255),b
  9051  0037B2  0E00               	movlw	high (?_printf+2)
  9052  0037B4  6F8A               	movwf	(printf@ap+1)& (0+255),b
  9053  0037B6                     
  9054                           ; BSR set to: 0
  9055  0037B6  0E00               	movlw	0
  9056  0037B8  6F77               	movwf	vfprintf@fp& (0+255),b
  9057  0037BA  0E00               	movlw	0
  9058  0037BC  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
  9059  0037BE  C07D  F079         	movff	printf@fmt,vfprintf@fmt
  9060  0037C2  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
  9061  0037C6  0E89               	movlw	low printf@ap
  9062  0037C8  6F7B               	movwf	vfprintf@ap& (0+255),b
  9063  0037CA  0E00               	movlw	high printf@ap
  9064  0037CC  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
  9065  0037CE  EC18  F018         	call	_vfprintf	;wreg free
  9066  0037D2  0012               	return		;funcret
  9067  0037D4                     __end_of_printf:
  9068                           	opt callstack 0
  9069                           
  9070 ;; *************** function _vfprintf *****************
  9071 ;; Defined at:
  9072 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  9075 ;;		 -> NULL(0), 
  9076 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  9077 ;;		 -> STR_54(29), STR_53(31), STR_51(30), STR_50(24), 
  9078 ;;		 -> STR_49(25), STR_48(17), STR_47(27), STR_46(33), 
  9079 ;;		 -> STR_44(46), STR_42(30), STR_41(24), STR_40(25), 
  9080 ;;		 -> STR_39(17), STR_38(27), STR_37(33), STR_35(36), 
  9081 ;;		 -> STR_34(67), STR_33(19), STR_32(55), STR_31(17), 
  9082 ;;		 -> STR_30(16), STR_29(4), STR_28(35), STR_27(55), 
  9083 ;;		 -> STR_26(53), STR_25(29), STR_22(43), STR_21(23), 
  9084 ;;		 -> STR_20(25), STR_19(61), STR_18(27), STR_17(21), 
  9085 ;;		 -> STR_16(24), STR_15(4), STR_14(23), STR_13(19), 
  9086 ;;		 -> STR_12(36), STR_11(4), STR_10(23), STR_9(32), 
  9087 ;;		 -> STR_8(28), STR_7(54), STR_6(24), STR_5(16), 
  9088 ;;		 -> STR_3(28), STR_2(21), STR_1(21), 
  9089 ;;  ap              2   27[BANK0 ] PTR PTR void 
  9090 ;;		 -> printf@ap(2), 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  9093 ;;		 -> STR_54(29), STR_53(31), STR_51(30), STR_50(24), 
  9094 ;;		 -> STR_49(25), STR_48(17), STR_47(27), STR_46(33), 
  9095 ;;		 -> STR_44(46), STR_42(30), STR_41(24), STR_40(25), 
  9096 ;;		 -> STR_39(17), STR_38(27), STR_37(33), STR_35(36), 
  9097 ;;		 -> STR_34(67), STR_33(19), STR_32(55), STR_31(17), 
  9098 ;;		 -> STR_30(16), STR_29(4), STR_28(35), STR_27(55), 
  9099 ;;		 -> STR_26(53), STR_25(29), STR_22(43), STR_21(23), 
  9100 ;;		 -> STR_20(25), STR_19(61), STR_18(27), STR_17(21), 
  9101 ;;		 -> STR_16(24), STR_15(4), STR_14(23), STR_13(19), 
  9102 ;;		 -> STR_12(36), STR_11(4), STR_10(23), STR_9(32), 
  9103 ;;		 -> STR_8(28), STR_7(54), STR_6(24), STR_5(16), 
  9104 ;;		 -> STR_3(28), STR_2(21), STR_1(21), 
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  2   23[BANK0 ] int 
  9107 ;; Registers used:
  9108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9114 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;Total ram usage:        8 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; Hardware stack levels required when called:   11
  9121 ;; This function calls:
  9122 ;;		_vfpfcnvrt
  9123 ;; This function is called by:
  9124 ;;		_printf
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           	psect	text53
  9129  003030                     __ptext53:
  9130                           	opt callstack 0
  9131  003030                     _vfprintf:
  9132                           	opt callstack 18
  9133  003030                     
  9134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9135  003030  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  9136  003034  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9137  003038                     
  9138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9139  003038  0E00               	movlw	0
  9140  00303A  0101               	movlb	1	; () banked
  9141  00303C  6FA8               	movwf	(_nout+1)& (0+255),b
  9142  00303E  0E00               	movlw	0
  9143  003040  6FA7               	movwf	_nout& (0+255),b
  9144                           
  9145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9146  003042  EF36  F018         	goto	l6204
  9147  003046                     l6202:
  9148                           
  9149                           ; BSR set to: 1
  9150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9151  003046  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  9152  00304A  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9153  00304E  0E53               	movlw	low vfprintf@cfmt
  9154  003050  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  9155  003052  0E00               	movlw	high vfprintf@cfmt
  9156  003054  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9157  003056  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  9158  00305A  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9159  00305E  EC95  F000         	call	_vfpfcnvrt	;wreg free
  9160  003062  5049               	movf	?_vfpfcnvrt^0,w,c
  9161  003064  0101               	movlb	1	; () banked
  9162  003066  27A7               	addwf	_nout& (0+255),f,b
  9163  003068  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  9164  00306A  23A8               	addwfc	(_nout+1)& (0+255),f,b
  9165  00306C                     l6204:
  9166                           
  9167                           ; BSR set to: 1
  9168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9169  00306C  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  9170  003070  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9171  003074                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9172  003074  6AF8               	clrf	tblptru,c
  9173  003076                     	endif
  9174  003076                     	if	0	;tblptru may be non-zero
  9175  003076                     	endif
  9176  003076  0008               	tblrd		*
  9177  003078  50F5               	movf	tablat,w,c
  9178  00307A  0900               	iorlw	0
  9179  00307C  A4D8               	btfss	status,2,c
  9180  00307E  EF43  F018         	goto	u6141
  9181  003082  EF45  F018         	goto	u6140
  9182  003086                     u6141:
  9183  003086  EF23  F018         	goto	l6202
  9184  00308A                     u6140:
  9185  00308A                     
  9186                           ; BSR set to: 1
  9187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9188  00308A  C1A7  F077         	movff	_nout,?_vfprintf
  9189  00308E  C1A8  F078         	movff	_nout+1,?_vfprintf+1
  9190  003092                     
  9191                           ; BSR set to: 1
  9192  003092  0012               	return		;funcret
  9193  003094                     __end_of_vfprintf:
  9194                           	opt callstack 0
  9195                           
  9196 ;; *************** function _vfpfcnvrt *****************
  9197 ;; Defined at:
  9198 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  9201 ;;		 -> NULL(0), 
  9202 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  9203 ;;		 -> vfprintf@cfmt(2), 
  9204 ;;  ap              2   76[COMRAM] PTR PTR void 
  9205 ;;		 -> printf@ap(2), 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  llu             8   15[BANK0 ] unsigned long long 
  9208 ;;  ll              8    0[BANK0 ] long long 
  9209 ;;  f               4    0        long long 
  9210 ;;  vp              3    0        PTR void 
  9211 ;;  ct              3    0        unsigned char [3]
  9212 ;;  done            2   11[BANK0 ] int 
  9213 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  9214 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1427(20), ValidateCmd@ConfName_1423(20), ValidateCmd@ConfName(20), 
  9215 ;;		 -> STR_24(9), STR_23(12), Command(16), 
  9216 ;;  i               2    0        int 
  9217 ;;  c               1   10[BANK0 ] unsigned char 
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  2   72[COMRAM] int 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9227 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9229 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;Total ram usage:       33 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:   10
  9234 ;; This function calls:
  9235 ;;		_atoi
  9236 ;;		_dtoa
  9237 ;;		_fputc
  9238 ;;		_isdigit
  9239 ;;		_stoa
  9240 ;;		_utoa
  9241 ;;		_xtoa
  9242 ;; This function is called by:
  9243 ;;		_vfprintf
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text54
  9248  00012A                     __ptext54:
  9249                           	opt callstack 0
  9250  00012A                     _vfpfcnvrt:
  9251                           	opt callstack 18
  9252  00012A                     
  9253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9254  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9255  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9256  000132  CFDE FFF6          	movff	postinc2,tblptrl
  9257  000136  CFDD FFF7          	movff	postdec2,tblptrh
  9258  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9259  00013A  6AF8               	clrf	tblptru,c
  9260  00013C                     	endif
  9261  00013C                     	if	0	;tblptru may be non-zero
  9262  00013C                     	endif
  9263  00013C  0008               	tblrd		*
  9264  00013E  50F5               	movf	tablat,w,c
  9265  000140  0A25               	xorlw	37
  9266  000142  A4D8               	btfss	status,2,c
  9267  000144  EFA6  F000         	goto	u5971
  9268  000148  EFA8  F000         	goto	u5970
  9269  00014C                     u5971:
  9270  00014C  EF3D  F003         	goto	l6176
  9271  000150                     u5970:
  9272  000150                     
  9273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9274  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9275  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9276  000158  2ADE               	incf	postinc2,f,c
  9277  00015A  0E00               	movlw	0
  9278  00015C  22DD               	addwfc	postdec2,f,c
  9279  00015E                     
  9280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9281  00015E  0E00               	movlw	0
  9282  000160  0100               	movlb	0	; () banked
  9283  000162  6FA4               	movwf	(_width+1)& (0+255),b
  9284  000164  0E00               	movlw	0
  9285  000166  6FA3               	movwf	_width& (0+255),b
  9286  000168  C0A3  F057         	movff	_width,_flags
  9287  00016C  C0A4  F058         	movff	_width+1,_flags+1
  9288  000170                     
  9289                           ; BSR set to: 0
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9291  000170  69A5               	setf	_prec& (0+255),b
  9292  000172  69A6               	setf	(_prec+1)& (0+255),b
  9293  000174                     
  9294                           ; BSR set to: 0
  9295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9296  000174  0E00               	movlw	0
  9297  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9298  000178  0E00               	movlw	0
  9299  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
  9300                           
  9301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9302  00017C  EF07  F001         	goto	l6098
  9303  000180                     l6072:
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9307  000180  8057               	bsf	_flags^0,0,c
  9308  000182                     l6074:
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9312  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9313  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9314  00018A  2ADE               	incf	postinc2,f,c
  9315  00018C  0E00               	movlw	0
  9316  00018E  22DD               	addwfc	postdec2,f,c
  9317                           
  9318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9319  000190  EF07  F001         	goto	l6098
  9320  000194                     l6076:
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9324  000194  8257               	bsf	_flags^0,1,c
  9325  000196  EFC1  F000         	goto	l6074
  9326  00019A                     l6080:
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9330  00019A  8457               	bsf	_flags^0,2,c
  9331  00019C  EFC1  F000         	goto	l6074
  9332  0001A0                     l6084:
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9336  0001A0  8657               	bsf	_flags^0,3,c
  9337  0001A2  EFC1  F000         	goto	l6074
  9338  0001A6                     l6088:
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9342  0001A6  8857               	bsf	_flags^0,4,c
  9343  0001A8  EFC1  F000         	goto	l6074
  9344  0001AC                     l6092:
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9348  0001AC  0E00               	movlw	0
  9349  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9350  0001B0  0E01               	movlw	1
  9351  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
  9352                           
  9353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9354  0001B4  EF07  F001         	goto	l6098
  9355  0001B8                     l6096:
  9356                           
  9357                           ; BSR set to: 0
  9358  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9359  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9360  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  9361  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  9362  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9363  0001C8  6AF8               	clrf	tblptru,c
  9364  0001CA                     	endif
  9365  0001CA                     	if	0	;tblptru may be non-zero
  9366  0001CA                     	endif
  9367  0001CA  0008               	tblrd		*
  9368  0001CC  50F5               	movf	tablat,w,c
  9369  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  9370  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  9371                           
  9372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9373                           ; Switch size 1, requested type "simple"
  9374                           ; Number of cases is 1, Range of values is 0 to 0
  9375                           ; switch strategies available:
  9376                           ; Name         Instructions Cycles
  9377                           ; simple_byte            4     3 (average)
  9378                           ;	Chosen strategy is simple_byte
  9379  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  9380  0001D4  0A00               	xorlw	0	; case 0
  9381  0001D6  B4D8               	btfsc	status,2,c
  9382  0001D8  EFF0  F000         	goto	l7022
  9383  0001DC  EFD6  F000         	goto	l6092
  9384  0001E0                     l7022:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ; Switch size 1, requested type "simple"
  9388                           ; Number of cases is 5, Range of values is 32 to 48
  9389                           ; switch strategies available:
  9390                           ; Name         Instructions Cycles
  9391                           ; simple_byte           16     9 (average)
  9392                           ;	Chosen strategy is simple_byte
  9393  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  9394  0001E2  0A20               	xorlw	32	; case 32
  9395  0001E4  B4D8               	btfsc	status,2,c
  9396  0001E6  EFD0  F000         	goto	l6084
  9397  0001EA  0A03               	xorlw	3	; case 35
  9398  0001EC  B4D8               	btfsc	status,2,c
  9399  0001EE  EFD3  F000         	goto	l6088
  9400  0001F2  0A08               	xorlw	8	; case 43
  9401  0001F4  B4D8               	btfsc	status,2,c
  9402  0001F6  EFCD  F000         	goto	l6080
  9403  0001FA  0A06               	xorlw	6	; case 45
  9404  0001FC  B4D8               	btfsc	status,2,c
  9405  0001FE  EFC0  F000         	goto	l6072
  9406  000202  0A1D               	xorlw	29	; case 48
  9407  000204  B4D8               	btfsc	status,2,c
  9408  000206  EFCA  F000         	goto	l6076
  9409  00020A  EFD6  F000         	goto	l6092
  9410  00020E                     l6098:
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9414  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
  9415  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9416  000212  B4D8               	btfsc	status,2,c
  9417  000214  EF0E  F001         	goto	u5981
  9418  000218  EF10  F001         	goto	u5980
  9419  00021C                     u5981:
  9420  00021C  EFDC  F000         	goto	l6096
  9421  000220                     u5980:
  9422  000220                     
  9423                           ; BSR set to: 0
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9425  000220  A057               	btfss	_flags^0,0,c
  9426  000222  EF15  F001         	goto	u5991
  9427  000226  EF17  F001         	goto	u5990
  9428  00022A                     u5991:
  9429  00022A  EF18  F001         	goto	l6102
  9430  00022E                     u5990:
  9431  00022E                     
  9432                           ; BSR set to: 0
  9433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9434  00022E  9257               	bcf	_flags^0,1,c
  9435  000230                     l6102:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9439  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9440  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9441  000238  CFDE FFF6          	movff	postinc2,tblptrl
  9442  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  9443  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9444  000240  6AF8               	clrf	tblptru,c
  9445  000242                     	endif
  9446  000242                     	if	0	;tblptru may be non-zero
  9447  000242                     	endif
  9448  000242  0008               	tblrd		*
  9449  000244  50F5               	movf	tablat,w,c
  9450  000246  0A2A               	xorlw	42
  9451  000248  A4D8               	btfss	status,2,c
  9452  00024A  EF29  F001         	goto	u6001
  9453  00024E  EF2B  F001         	goto	u6000
  9454  000252                     u6001:
  9455  000252  EF54  F001         	goto	l6110
  9456  000256                     u6000:
  9457  000256                     
  9458                           ; BSR set to: 0
  9459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9460  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9461  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9462  00025E  2ADE               	incf	postinc2,f,c
  9463  000260  0E00               	movlw	0
  9464  000262  22DD               	addwfc	postdec2,f,c
  9465                           
  9466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9467  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9468  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9469  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9470  000270  0E02               	movlw	2
  9471  000272  26DE               	addwf	postinc2,f,c
  9472  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9473  000278  0E00               	movlw	0
  9474  00027A  22DD               	addwfc	postdec2,f,c
  9475  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9476  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9477  000284  CFDE F0A3          	movff	postinc2,_width
  9478  000288  CFDD F0A4          	movff	postdec2,_width+1
  9479  00028C                     
  9480                           ; BSR set to: 0
  9481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9482  00028C  BFA4               	btfsc	(_width+1)& (0+255),7,b
  9483  00028E  EF4D  F001         	goto	u6010
  9484  000292  EF4B  F001         	goto	u6011
  9485  000296                     u6011:
  9486  000296  EF99  F001         	goto	l6120
  9487  00029A                     u6010:
  9488  00029A                     
  9489                           ; BSR set to: 0
  9490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9491  00029A  8057               	bsf	_flags^0,0,c
  9492                           
  9493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9494  00029C  6DA3               	negf	_width& (0+255),b
  9495  00029E  1FA4               	comf	(_width+1)& (0+255),f,b
  9496  0002A0  B0D8               	btfsc	status,0,c
  9497  0002A2  2BA4               	incf	(_width+1)& (0+255),f,b
  9498  0002A4  EF99  F001         	goto	l6120
  9499  0002A8                     l6110:
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9503  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9504  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9505  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  9506  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  9507  0002B8  EC39  F00C         	call	_atoi	;wreg free
  9508  0002BC  C00C  F0A3         	movff	?_atoi,_width
  9509  0002C0  C00D  F0A4         	movff	?_atoi+1,_width+1
  9510                           
  9511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9512  0002C4  EF6B  F001         	goto	l6114
  9513  0002C8                     l6112:
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9517  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9518  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9519  0002D0  2ADE               	incf	postinc2,f,c
  9520  0002D2  0E00               	movlw	0
  9521  0002D4  22DD               	addwfc	postdec2,f,c
  9522  0002D6                     l6114:
  9523  0002D6  0ED0               	movlw	208
  9524  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  9525  0002DA  0EFF               	movlw	255
  9526  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  9527  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9528  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9529  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  9530  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  9531  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9532  0002EE  6AF8               	clrf	tblptru,c
  9533  0002F0                     	endif
  9534  0002F0                     	if	0	;tblptru may be non-zero
  9535  0002F0                     	endif
  9536  0002F0  0008               	tblrd		*
  9537  0002F2  50F5               	movf	tablat,w,c
  9538  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  9539  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  9540  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  9541  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  9542  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  9543  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  9544  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  9545  000302  E10A               	bnz	u6020
  9546  000304  0E0A               	movlw	10
  9547  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  9548  000308  A0D8               	btfss	status,0,c
  9549  00030A  EF89  F001         	goto	u6021
  9550  00030E  EF8C  F001         	goto	u6020
  9551  000312                     u6021:
  9552  000312  0E01               	movlw	1
  9553  000314  EF8D  F001         	goto	u6030
  9554  000318                     u6020:
  9555  000318  0E00               	movlw	0
  9556  00031A                     u6030:
  9557  00031A  0100               	movlb	0	; () banked
  9558  00031C  6F6D               	movwf	_vfpfcnvrt$1546& (0+255),b
  9559  00031E  6B6E               	clrf	(_vfpfcnvrt$1546+1)& (0+255),b
  9560  000320                     
  9561                           ; BSR set to: 0
  9562  000320  516D               	movf	_vfpfcnvrt$1546& (0+255),w,b
  9563  000322  116E               	iorwf	(_vfpfcnvrt$1546+1)& (0+255),w,b
  9564  000324  A4D8               	btfss	status,2,c
  9565  000326  EF97  F001         	goto	u6041
  9566  00032A  EF99  F001         	goto	u6040
  9567  00032E                     u6041:
  9568  00032E  EF64  F001         	goto	l6112
  9569  000332                     u6040:
  9570  000332                     l6120:
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9574  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9575  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9576  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  9577  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  9578  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9579  000342  6AF8               	clrf	tblptru,c
  9580  000344                     	endif
  9581  000344                     	if	0	;tblptru may be non-zero
  9582  000344                     	endif
  9583  000344  0008               	tblrd		*
  9584  000346  50F5               	movf	tablat,w,c
  9585  000348  0A64               	xorlw	100
  9586  00034A  B4D8               	btfsc	status,2,c
  9587  00034C  EFAA  F001         	goto	u6051
  9588  000350  EFAC  F001         	goto	u6050
  9589  000354                     u6051:
  9590  000354  EFBF  F001         	goto	l6124
  9591  000358                     u6050:
  9592  000358                     
  9593                           ; BSR set to: 0
  9594  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9595  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9596  000360  CFDE FFF6          	movff	postinc2,tblptrl
  9597  000364  CFDD FFF7          	movff	postdec2,tblptrh
  9598  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9599  000368  6AF8               	clrf	tblptru,c
  9600  00036A                     	endif
  9601  00036A                     	if	0	;tblptru may be non-zero
  9602  00036A                     	endif
  9603  00036A  0008               	tblrd		*
  9604  00036C  50F5               	movf	tablat,w,c
  9605  00036E  0A69               	xorlw	105
  9606  000370  A4D8               	btfss	status,2,c
  9607  000372  EFBD  F001         	goto	u6061
  9608  000376  EFBF  F001         	goto	u6060
  9609  00037A                     u6061:
  9610  00037A  EFFF  F001         	goto	l6130
  9611  00037E                     u6060:
  9612  00037E                     l6124:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9616  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9617  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9618  000386  2ADE               	incf	postinc2,f,c
  9619  000388  0E00               	movlw	0
  9620  00038A  22DD               	addwfc	postdec2,f,c
  9621                           
  9622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9623  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9624  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9625  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9626  000398  0E02               	movlw	2
  9627  00039A  26DE               	addwf	postinc2,f,c
  9628  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9629  0003A0  0E00               	movlw	0
  9630  0003A2  22DD               	addwfc	postdec2,f,c
  9631  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9632  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9633  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  9634  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  9635  0003B4  0E00               	movlw	0
  9636  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9637  0003B8  0EFF               	movlw	-1
  9638  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9639  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9640  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9641  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9642  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9643  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9644  0003C6                     
  9645                           ; BSR set to: 0
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9647  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  9648  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9649  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
  9650  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9651  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9652  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9653  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9654  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9655  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9656  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9657  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  9658  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  9659  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9660  0003FA  EF59  F003         	goto	l1065
  9661  0003FE                     l6130:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9665  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9666  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9667  000406  CFDE FFF6          	movff	postinc2,tblptrl
  9668  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  9669  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9670  00040E  6AF8               	clrf	tblptru,c
  9671  000410                     	endif
  9672  000410                     	if	0	;tblptru may be non-zero
  9673  000410                     	endif
  9674  000410  0008               	tblrd		*
  9675  000412  50F5               	movf	tablat,w,c
  9676  000414  0A73               	xorlw	115
  9677  000416  A4D8               	btfss	status,2,c
  9678  000418  EF10  F002         	goto	u6071
  9679  00041C  EF12  F002         	goto	u6070
  9680  000420                     u6071:
  9681  000420  EF3D  F002         	goto	l6138
  9682  000424                     u6070:
  9683  000424                     
  9684                           ; BSR set to: 0
  9685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9686  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9687  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9688  00042C  2ADE               	incf	postinc2,f,c
  9689  00042E  0E00               	movlw	0
  9690  000430  22DD               	addwfc	postdec2,f,c
  9691                           
  9692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9693  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9694  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9695  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9696  00043E  0E02               	movlw	2
  9697  000440  26DE               	addwf	postinc2,f,c
  9698  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9699  000446  0E00               	movlw	0
  9700  000448  22DD               	addwfc	postdec2,f,c
  9701  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9702  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9703  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
  9704  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
  9705  00045A                     
  9706                           ; BSR set to: 0
  9707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9708  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  9709  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9710  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
  9711  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9712  00046A  EC6C  F00B         	call	_stoa	;wreg free
  9713  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  9714  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  9715  000476  EF59  F003         	goto	l1065
  9716  00047A                     l6138:
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  9720  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9721  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9722  000482  CFDE FFF6          	movff	postinc2,tblptrl
  9723  000486  CFDD FFF7          	movff	postdec2,tblptrh
  9724  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9725  00048A  6AF8               	clrf	tblptru,c
  9726  00048C                     	endif
  9727  00048C                     	if	0	;tblptru may be non-zero
  9728  00048C                     	endif
  9729  00048C  0008               	tblrd		*
  9730  00048E  50F5               	movf	tablat,w,c
  9731  000490  0A75               	xorlw	117
  9732  000492  A4D8               	btfss	status,2,c
  9733  000494  EF4E  F002         	goto	u6081
  9734  000498  EF50  F002         	goto	u6080
  9735  00049C                     u6081:
  9736  00049C  EF91  F002         	goto	l6146
  9737  0004A0                     u6080:
  9738  0004A0                     
  9739                           ; BSR set to: 0
  9740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  9741  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9742  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9743  0004A8  2ADE               	incf	postinc2,f,c
  9744  0004AA  0E00               	movlw	0
  9745  0004AC  22DD               	addwfc	postdec2,f,c
  9746                           
  9747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9748  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9749  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9750  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9751  0004BA  0E02               	movlw	2
  9752  0004BC  26DE               	addwf	postinc2,f,c
  9753  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9754  0004C2  0E00               	movlw	0
  9755  0004C4  22DD               	addwfc	postdec2,f,c
  9756  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9757  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9758  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  9759  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  9760  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9761  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9762  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9763  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9764  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9765  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9766  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9767  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9768  0004EA                     
  9769                           ; BSR set to: 0
  9770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  9771  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  9772  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  9773  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
  9774  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  9775  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  9776  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  9777  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  9778  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  9779  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  9780  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  9781  000512  ECA4  F008         	call	_utoa	;wreg free
  9782  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  9783  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  9784  00051E  EF59  F003         	goto	l1065
  9785  000522                     l6146:
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9789  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9790  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9791  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  9792  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  9793  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9794  000532  6AF8               	clrf	tblptru,c
  9795  000534                     	endif
  9796  000534                     	if	0	;tblptru may be non-zero
  9797  000534                     	endif
  9798  000534  0008               	tblrd		*
  9799  000536  50F5               	movf	tablat,w,c
  9800  000538  0A78               	xorlw	120
  9801  00053A  B4D8               	btfsc	status,2,c
  9802  00053C  EFA2  F002         	goto	u6091
  9803  000540  EFA4  F002         	goto	u6090
  9804  000544                     u6091:
  9805  000544  EFB7  F002         	goto	l6150
  9806  000548                     u6090:
  9807  000548                     
  9808                           ; BSR set to: 0
  9809  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9810  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9811  000550  CFDE FFF6          	movff	postinc2,tblptrl
  9812  000554  CFDD FFF7          	movff	postdec2,tblptrh
  9813  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9814  000558  6AF8               	clrf	tblptru,c
  9815  00055A                     	endif
  9816  00055A                     	if	0	;tblptru may be non-zero
  9817  00055A                     	endif
  9818  00055A  0008               	tblrd		*
  9819  00055C  50F5               	movf	tablat,w,c
  9820  00055E  0A58               	xorlw	88
  9821  000560  A4D8               	btfss	status,2,c
  9822  000562  EFB5  F002         	goto	u6101
  9823  000566  EFB7  F002         	goto	u6100
  9824  00056A                     u6101:
  9825  00056A  EF06  F003         	goto	l6160
  9826  00056E                     u6100:
  9827  00056E                     l6150:
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9831  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9832  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9833  000576  CFDE FFF6          	movff	postinc2,tblptrl
  9834  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  9835  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9836  00057E  6AF8               	clrf	tblptru,c
  9837  000580                     	endif
  9838  000580                     	if	0	;tblptru may be non-zero
  9839  000580                     	endif
  9840  000580  0008               	tblrd		*
  9841  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
  9842  000586                     
  9843                           ; BSR set to: 0
  9844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9845  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9846  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9847  00058E  2ADE               	incf	postinc2,f,c
  9848  000590  0E00               	movlw	0
  9849  000592  22DD               	addwfc	postdec2,f,c
  9850  000594                     
  9851                           ; BSR set to: 0
  9852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9853  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9854  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9855  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  9856  0005A0  0E02               	movlw	2
  9857  0005A2  26DE               	addwf	postinc2,f,c
  9858  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  9859  0005A8  0E00               	movlw	0
  9860  0005AA  22DD               	addwfc	postdec2,f,c
  9861  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9862  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9863  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  9864  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  9865  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9866  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9867  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9868  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9869  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9870  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9871  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9872  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9873  0005D0                     
  9874                           ; BSR set to: 0
  9875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9876  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  9877  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9878  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
  9879  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9880  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9881  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9882  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9883  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9884  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9885  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9886  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
  9887  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  9888  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  9889  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9890  000608  EF59  F003         	goto	l1065
  9891  00060C                     l6160:
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9895  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9896  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9897  000614  CFDE FFF6          	movff	postinc2,tblptrl
  9898  000618  CFDD FFF7          	movff	postdec2,tblptrh
  9899  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9900  00061C  6AF8               	clrf	tblptru,c
  9901  00061E                     	endif
  9902  00061E                     	if	0	;tblptru may be non-zero
  9903  00061E                     	endif
  9904  00061E  0008               	tblrd		*
  9905  000620  50F5               	movf	tablat,w,c
  9906  000622  0A25               	xorlw	37
  9907  000624  A4D8               	btfss	status,2,c
  9908  000626  EF17  F003         	goto	u6111
  9909  00062A  EF19  F003         	goto	u6110
  9910  00062E                     u6111:
  9911  00062E  EF30  F003         	goto	l6170
  9912  000632                     u6110:
  9913  000632                     
  9914                           ; BSR set to: 0
  9915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9916  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9917  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9918  00063A  2ADE               	incf	postinc2,f,c
  9919  00063C  0E00               	movlw	0
  9920  00063E  22DD               	addwfc	postdec2,f,c
  9921  000640                     
  9922                           ; BSR set to: 0
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9924  000640  0E00               	movlw	0
  9925  000642  6E08               	movwf	(fputc@c+1)^0,c
  9926  000644  0E25               	movlw	37
  9927  000646  6E07               	movwf	fputc@c^0,c
  9928  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  9929  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9930  000650  EC18  F015         	call	_fputc	;wreg free
  9931  000654                     l6166:
  9932                           
  9933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9934  000654  0E00               	movlw	0
  9935  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  9936  000658  0E01               	movlw	1
  9937  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  9938  00065C  EF59  F003         	goto	l1065
  9939  000660                     l6170:
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9943  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9944  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9945  000668  2ADE               	incf	postinc2,f,c
  9946  00066A  0E00               	movlw	0
  9947  00066C  22DD               	addwfc	postdec2,f,c
  9948  00066E                     
  9949                           ; BSR set to: 0
  9950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9951  00066E  0E00               	movlw	0
  9952  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  9953  000672  0E00               	movlw	0
  9954  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  9955  000676  EF59  F003         	goto	l1065
  9956  00067A                     l6176:
  9957                           
  9958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9959  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9960  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9961  000682  CFDE FFF6          	movff	postinc2,tblptrl
  9962  000686  CFDD FFF7          	movff	postdec2,tblptrh
  9963  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9964  00068A  6AF8               	clrf	tblptru,c
  9965  00068C                     	endif
  9966  00068C                     	if	0	;tblptru may be non-zero
  9967  00068C                     	endif
  9968  00068C  0008               	tblrd		*
  9969  00068E  50F5               	movf	tablat,w,c
  9970  000690  6E07               	movwf	fputc@c^0,c
  9971  000692  6A08               	clrf	(fputc@c+1)^0,c
  9972  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  9973  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9974  00069C  EC18  F015         	call	_fputc	;wreg free
  9975  0006A0                     
  9976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9977  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9978  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9979  0006A8  2ADE               	incf	postinc2,f,c
  9980  0006AA  0E00               	movlw	0
  9981  0006AC  22DD               	addwfc	postdec2,f,c
  9982  0006AE  EF2A  F003         	goto	l6166
  9983  0006B2                     l1065:
  9984  0006B2  0012               	return		;funcret
  9985  0006B4                     __end_of_vfpfcnvrt:
  9986                           	opt callstack 0
  9987                           
  9988 ;; *************** function _xtoa *****************
  9989 ;; Defined at:
  9990 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  9993 ;;		 -> NULL(0), 
  9994 ;;  d               8   35[COMRAM] unsigned long long 
  9995 ;;  x               1   43[COMRAM] unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  n               8   60[COMRAM] unsigned long long 
  9998 ;;  c               2   70[COMRAM] int 
  9999 ;;  i               2   68[COMRAM] int 
 10000 ;;  w               2   58[COMRAM] int 
 10001 ;;  p               2   56[COMRAM] int 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  2   33[COMRAM] int 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10011 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10012 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10013 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10014 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;Total ram usage:       39 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    9
 10018 ;; This function calls:
 10019 ;;		_isalpha
 10020 ;;		_isupper
 10021 ;;		_pad
 10022 ;;		_toupper
 10023 ;; This function is called by:
 10024 ;;		_vfpfcnvrt
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text55
 10029  000994                     __ptext55:
 10030                           	opt callstack 0
 10031  000994                     _xtoa:
 10032                           	opt callstack 18
 10033  000994                     
 10034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10035  000994  0100               	movlb	0	; () banked
 10036  000996  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10037  000998  EFD0  F004         	goto	u5731
 10038  00099C  EFD2  F004         	goto	u5730
 10039  0009A0                     u5731:
 10040  0009A0  EFD3  F004         	goto	l5958
 10041  0009A4                     u5730:
 10042  0009A4                     
 10043                           ; BSR set to: 0
 10044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10045  0009A4  9257               	bcf	_flags^0,1,c
 10046  0009A6                     l5958:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10050  0009A6  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10051  0009A8  EFE0  F004         	goto	u5740
 10052  0009AC  51A6               	movf	(_prec+1)& (0+255),w,b
 10053  0009AE  E106               	bnz	u5741
 10054  0009B0  05A5               	decf	_prec& (0+255),w,b
 10055  0009B2  B0D8               	btfsc	status,0,c
 10056  0009B4  EFDE  F004         	goto	u5741
 10057  0009B8  EFE0  F004         	goto	u5740
 10058  0009BC                     u5741:
 10059  0009BC  EFE6  F004         	goto	l1011
 10060  0009C0                     u5740:
 10061  0009C0                     
 10062                           ; BSR set to: 0
 10063  0009C0  0E00               	movlw	0
 10064  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
 10065  0009C4  0E01               	movlw	1
 10066  0009C6  6E39               	movwf	xtoa@p^0,c
 10067  0009C8  EFEA  F004         	goto	l1013
 10068  0009CC                     l1011:
 10069                           
 10070                           ; BSR set to: 0
 10071  0009CC  C0A5  F039         	movff	_prec,xtoa@p
 10072  0009D0  C0A6  F03A         	movff	_prec+1,xtoa@p+1
 10073  0009D4                     l1013:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 10077  0009D4  C0A3  F03B         	movff	_width,xtoa@w
 10078  0009D8  C0A4  F03C         	movff	_width+1,xtoa@w+1
 10079                           
 10080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 10081  0009DC  A857               	btfss	_flags^0,4,c
 10082  0009DE  EFF3  F004         	goto	u5751
 10083  0009E2  EFF5  F004         	goto	u5750
 10084  0009E6                     u5751:
 10085  0009E6  EFF9  F004         	goto	l5964
 10086  0009EA                     u5750:
 10087  0009EA                     
 10088                           ; BSR set to: 0
 10089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 10090  0009EA  0EFE               	movlw	254
 10091  0009EC  263B               	addwf	xtoa@w^0,f,c
 10092  0009EE  0EFF               	movlw	255
 10093  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
 10094  0009F2                     l5964:
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 10098  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
 10099  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 10100  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 10101  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 10102  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 10103  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 10104  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 10105  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 10106  000A12                     
 10107                           ; BSR set to: 0
 10108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 10109  000A12  0E00               	movlw	0
 10110  000A14  6E46               	movwf	(xtoa@i+1)^0,c
 10111  000A16  0E1F               	movlw	31
 10112  000A18  6E45               	movwf	xtoa@i^0,c
 10113  000A1A                     
 10114                           ; BSR set to: 0
 10115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 10116  000A1A  0E00               	movlw	0
 10117  000A1C  0101               	movlb	1	; () banked
 10118  000A1E  6FC8               	movwf	(_dbuf+31)& (0+255),b
 10119                           
 10120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10121  000A20  EFC5  F005         	goto	l6000
 10122  000A24                     l5970:
 10123                           
 10124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 10125  000A24  0645               	decf	xtoa@i^0,f,c
 10126  000A26  A0D8               	btfss	status,0,c
 10127  000A28  0646               	decf	(xtoa@i+1)^0,f,c
 10128  000A2A                     
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 10130  000A2A  0E0F               	movlw	15
 10131  000A2C  143D               	andwf	xtoa@n^0,w,c
 10132  000A2E  6E47               	movwf	xtoa@c^0,c
 10133  000A30  6A48               	clrf	(xtoa@c+1)^0,c
 10134  000A32                     
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10136  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
 10137  000A34  EF25  F005         	goto	u5761
 10138  000A38  5048               	movf	(xtoa@c+1)^0,w,c
 10139  000A3A  E109               	bnz	u5760
 10140  000A3C  0E0A               	movlw	10
 10141  000A3E  5C47               	subwf	xtoa@c^0,w,c
 10142  000A40  A0D8               	btfss	status,0,c
 10143  000A42  EF25  F005         	goto	u5761
 10144  000A46  EF27  F005         	goto	u5760
 10145  000A4A                     u5761:
 10146  000A4A  EF2F  F005         	goto	l5978
 10147  000A4E                     u5760:
 10148  000A4E  0E57               	movlw	87
 10149  000A50  2447               	addwf	xtoa@c^0,w,c
 10150  000A52  6E47               	movwf	xtoa@c^0,c
 10151  000A54  0E00               	movlw	0
 10152  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
 10153  000A58  6E48               	movwf	(xtoa@c+1)^0,c
 10154  000A5A  EF35  F005         	goto	l1020
 10155  000A5E                     l5978:
 10156  000A5E  0E30               	movlw	48
 10157  000A60  2447               	addwf	xtoa@c^0,w,c
 10158  000A62  6E47               	movwf	xtoa@c^0,c
 10159  000A64  0E00               	movlw	0
 10160  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
 10161  000A68  6E48               	movwf	(xtoa@c+1)^0,c
 10162  000A6A                     l1020:
 10163  000A6A  0EBF               	movlw	191
 10164  000A6C  6E2D               	movwf	??_xtoa^0,c
 10165  000A6E  0EFF               	movlw	255
 10166  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
 10167  000A72  502C               	movf	xtoa@x^0,w,c
 10168  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
 10169  000A76  6A30               	clrf	(??_xtoa+3)^0,c
 10170  000A78  502D               	movf	??_xtoa^0,w,c
 10171  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
 10172  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
 10173  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
 10174  000A80  5030               	movf	(??_xtoa+3)^0,w,c
 10175  000A82  E10A               	bnz	u5770
 10176  000A84  0E1A               	movlw	26
 10177  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
 10178  000A88  A0D8               	btfss	status,0,c
 10179  000A8A  EF49  F005         	goto	u5771
 10180  000A8E  EF4C  F005         	goto	u5770
 10181  000A92                     u5771:
 10182  000A92  0E01               	movlw	1
 10183  000A94  EF4D  F005         	goto	u5780
 10184  000A98                     u5770:
 10185  000A98  0E00               	movlw	0
 10186  000A9A                     u5780:
 10187  000A9A  6E35               	movwf	_xtoa$1531^0,c
 10188  000A9C  6A36               	clrf	(_xtoa$1531+1)^0,c
 10189  000A9E  5035               	movf	_xtoa$1531^0,w,c
 10190  000AA0  1036               	iorwf	(_xtoa$1531+1)^0,w,c
 10191  000AA2  B4D8               	btfsc	status,2,c
 10192  000AA4  EF56  F005         	goto	u5791
 10193  000AA8  EF58  F005         	goto	u5790
 10194  000AAC                     u5791:
 10195  000AAC  EF88  F005         	goto	l5992
 10196  000AB0                     u5790:
 10197  000AB0  0E9F               	movlw	159
 10198  000AB2  6E2D               	movwf	??_xtoa^0,c
 10199  000AB4  0EFF               	movlw	255
 10200  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
 10201  000AB8  0E20               	movlw	32
 10202  000ABA  1047               	iorwf	xtoa@c^0,w,c
 10203  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
 10204  000ABE  0E00               	movlw	0
 10205  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
 10206  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
 10207  000AC4  502D               	movf	??_xtoa^0,w,c
 10208  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
 10209  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
 10210  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
 10211  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
 10212  000ACE  E10A               	bnz	u5800
 10213  000AD0  0E1A               	movlw	26
 10214  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
 10215  000AD4  A0D8               	btfss	status,0,c
 10216  000AD6  EF6F  F005         	goto	u5801
 10217  000ADA  EF72  F005         	goto	u5800
 10218  000ADE                     u5801:
 10219  000ADE  0E01               	movlw	1
 10220  000AE0  EF73  F005         	goto	u5810
 10221  000AE4                     u5800:
 10222  000AE4  0E00               	movlw	0
 10223  000AE6                     u5810:
 10224  000AE6  6E37               	movwf	_xtoa$1532^0,c
 10225  000AE8  6A38               	clrf	(_xtoa$1532+1)^0,c
 10226  000AEA  5037               	movf	_xtoa$1532^0,w,c
 10227  000AEC  1038               	iorwf	(_xtoa$1532+1)^0,w,c
 10228  000AEE  B4D8               	btfsc	status,2,c
 10229  000AF0  EF7C  F005         	goto	u5821
 10230  000AF4  EF7E  F005         	goto	u5820
 10231  000AF8                     u5821:
 10232  000AF8  EF88  F005         	goto	l5992
 10233  000AFC                     u5820:
 10234  000AFC                     
 10235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10236  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
 10237  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 10238  000B04  EC07  F019         	call	_toupper	;wreg free
 10239  000B08  C00B  F047         	movff	?_toupper,xtoa@c
 10240  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 10241  000B10                     l5992:
 10242                           
 10243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10244  000B10  0EA9               	movlw	low _dbuf
 10245  000B12  2445               	addwf	xtoa@i^0,w,c
 10246  000B14  6ED9               	movwf	fsr2l,c
 10247  000B16  0E01               	movlw	high _dbuf
 10248  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
 10249  000B1A  6EDA               	movwf	fsr2h,c
 10250  000B1C  C047  FFDF         	movff	xtoa@c,indf2
 10251  000B20                     
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10253  000B20  0639               	decf	xtoa@p^0,f,c
 10254  000B22  A0D8               	btfss	status,0,c
 10255  000B24  063A               	decf	(xtoa@p+1)^0,f,c
 10256  000B26                     
 10257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10258  000B26  063B               	decf	xtoa@w^0,f,c
 10259  000B28  A0D8               	btfss	status,0,c
 10260  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
 10261  000B2C                     
 10262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10263  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
 10264  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 10265  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 10266  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 10267  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 10268  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 10269  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 10270  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 10271  000B4C  0E05               	movlw	5
 10272  000B4E  EFB2  F005         	goto	u5830
 10273  000B52                     u5835:
 10274  000B52  90D8               	bcf	status,0,c
 10275  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
 10276  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
 10277  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
 10278  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
 10279  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
 10280  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
 10281  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
 10282  000B62  322D               	rrcf	??_xtoa^0,f,c
 10283  000B64                     u5830:
 10284  000B64  2EE8               	decfsz	wreg,f,c
 10285  000B66  EFA9  F005         	goto	u5835
 10286  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
 10287  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 10288  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 10289  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 10290  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 10291  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 10292  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 10293  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 10294  000B8A                     l6000:
 10295                           
 10296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10297  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
 10298  000B8C  EFD1  F005         	goto	u5841
 10299  000B90  5046               	movf	(xtoa@i+1)^0,w,c
 10300  000B92  E109               	bnz	u5840
 10301  000B94  0E02               	movlw	2
 10302  000B96  5C45               	subwf	xtoa@i^0,w,c
 10303  000B98  A0D8               	btfss	status,0,c
 10304  000B9A  EFD1  F005         	goto	u5841
 10305  000B9E  EFD3  F005         	goto	u5840
 10306  000BA2                     u5841:
 10307  000BA2  EF03  F006         	goto	l1034
 10308  000BA6                     u5840:
 10309  000BA6  503D               	movf	xtoa@n^0,w,c
 10310  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
 10311  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
 10312  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
 10313  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
 10314  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
 10315  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
 10316  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
 10317  000BB6  A4D8               	btfss	status,2,c
 10318  000BB8  EFE0  F005         	goto	u5851
 10319  000BBC  EFE2  F005         	goto	u5850
 10320  000BC0                     u5851:
 10321  000BC0  EF12  F005         	goto	l5970
 10322  000BC4                     u5850:
 10323  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 10324  000BC6  EFEF  F005         	goto	u5860
 10325  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
 10326  000BCC  E106               	bnz	u5861
 10327  000BCE  0439               	decf	xtoa@p^0,w,c
 10328  000BD0  B0D8               	btfsc	status,0,c
 10329  000BD2  EFED  F005         	goto	u5861
 10330  000BD6  EFEF  F005         	goto	u5860
 10331  000BDA                     u5861:
 10332  000BDA  EF12  F005         	goto	l5970
 10333  000BDE                     u5860:
 10334  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 10335  000BE0  EFFA  F005         	goto	u5871
 10336  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
 10337  000BE6  E108               	bnz	u5870
 10338  000BE8  043B               	decf	xtoa@w^0,w,c
 10339  000BEA  A0D8               	btfss	status,0,c
 10340  000BEC  EFFA  F005         	goto	u5871
 10341  000BF0  EFFC  F005         	goto	u5870
 10342  000BF4                     u5871:
 10343  000BF4  EF03  F006         	goto	l1034
 10344  000BF8                     u5870:
 10345  000BF8  B257               	btfsc	_flags^0,1,c
 10346  000BFA  EF01  F006         	goto	u5881
 10347  000BFE  EF03  F006         	goto	u5880
 10348  000C02                     u5881:
 10349  000C02  EF12  F005         	goto	l5970
 10350  000C06                     u5880:
 10351  000C06                     l1034:
 10352                           
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10354  000C06  A857               	btfss	_flags^0,4,c
 10355  000C08  EF08  F006         	goto	u5891
 10356  000C0C  EF0A  F006         	goto	u5890
 10357  000C10                     u5891:
 10358  000C10  EF20  F006         	goto	l6016
 10359  000C14                     u5890:
 10360  000C14                     
 10361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10362  000C14  0645               	decf	xtoa@i^0,f,c
 10363  000C16  A0D8               	btfss	status,0,c
 10364  000C18  0646               	decf	(xtoa@i+1)^0,f,c
 10365  000C1A                     
 10366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10367  000C1A  0EA9               	movlw	low _dbuf
 10368  000C1C  2445               	addwf	xtoa@i^0,w,c
 10369  000C1E  6ED9               	movwf	fsr2l,c
 10370  000C20  0E01               	movlw	high _dbuf
 10371  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
 10372  000C24  6EDA               	movwf	fsr2h,c
 10373  000C26  C02C  FFDF         	movff	xtoa@x,indf2
 10374  000C2A                     
 10375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10376  000C2A  0645               	decf	xtoa@i^0,f,c
 10377  000C2C  A0D8               	btfss	status,0,c
 10378  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
 10379                           
 10380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10381  000C30  0EA9               	movlw	low _dbuf
 10382  000C32  2445               	addwf	xtoa@i^0,w,c
 10383  000C34  6ED9               	movwf	fsr2l,c
 10384  000C36  0E01               	movlw	high _dbuf
 10385  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
 10386  000C3A  6EDA               	movwf	fsr2h,c
 10387  000C3C  0E30               	movlw	48
 10388  000C3E  6EDF               	movwf	indf2,c
 10389  000C40                     l6016:
 10390                           
 10391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10392  000C40  C022  F017         	movff	xtoa@fp,pad@fp
 10393  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 10394  000C48  0EA9               	movlw	low _dbuf
 10395  000C4A  2445               	addwf	xtoa@i^0,w,c
 10396  000C4C  6E19               	movwf	pad@buf^0,c
 10397  000C4E  0E01               	movlw	high _dbuf
 10398  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
 10399  000C52  6E1A               	movwf	(pad@buf+1)^0,c
 10400  000C54  C03B  F01B         	movff	xtoa@w,pad@p
 10401  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 10402  000C5C  ECF7  F013         	call	_pad	;wreg free
 10403  000C60  C017  F022         	movff	?_pad,?_xtoa
 10404  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
 10405  000C68  0012               	return		;funcret
 10406  000C6A                     __end_of_xtoa:
 10407                           	opt callstack 0
 10408                           
 10409 ;; *************** function _toupper *****************
 10410 ;; Defined at:
 10411 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  c               2   10[COMRAM] int 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;		None
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  2   10[COMRAM] int 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2, status,0
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;Total ram usage:        8 bytes
 10430 ;; Hardware stack levels used:    1
 10431 ;; Hardware stack levels required when called:    5
 10432 ;; This function calls:
 10433 ;;		_islower
 10434 ;; This function is called by:
 10435 ;;		_xtoa
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text56
 10440  00320E                     __ptext56:
 10441                           	opt callstack 0
 10442  00320E                     _toupper:
 10443                           	opt callstack 21
 10444  00320E  0E9F               	movlw	159
 10445  003210  6E0D               	movwf	??_toupper^0,c
 10446  003212  0EFF               	movlw	255
 10447  003214  6E0E               	movwf	(??_toupper+1)^0,c
 10448  003216  C00B  F00F         	movff	toupper@c,??_toupper+2
 10449  00321A  C00C  F010         	movff	toupper@c+1,??_toupper+3
 10450  00321E  500D               	movf	??_toupper^0,w,c
 10451  003220  260F               	addwf	(??_toupper+2)^0,f,c
 10452  003222  500E               	movf	(??_toupper+1)^0,w,c
 10453  003224  2210               	addwfc	(??_toupper+3)^0,f,c
 10454  003226  5010               	movf	(??_toupper+3)^0,w,c
 10455  003228  E10A               	bnz	u5140
 10456  00322A  0E1A               	movlw	26
 10457  00322C  5C0F               	subwf	(??_toupper+2)^0,w,c
 10458  00322E  A0D8               	btfss	status,0,c
 10459  003230  EF1C  F019         	goto	u5141
 10460  003234  EF1F  F019         	goto	u5140
 10461  003238                     u5141:
 10462  003238  0E01               	movlw	1
 10463  00323A  EF20  F019         	goto	u5150
 10464  00323E                     u5140:
 10465  00323E  0E00               	movlw	0
 10466  003240                     u5150:
 10467  003240  6E11               	movwf	_toupper$2120^0,c
 10468  003242  6A12               	clrf	(_toupper$2120+1)^0,c
 10469  003244  5011               	movf	_toupper$2120^0,w,c
 10470  003246  1012               	iorwf	(_toupper$2120+1)^0,w,c
 10471  003248  B4D8               	btfsc	status,2,c
 10472  00324A  EF29  F019         	goto	u5161
 10473  00324E  EF2B  F019         	goto	u5160
 10474  003252                     u5161:
 10475  003252  EF31  F019         	goto	l1884
 10476  003256                     u5160:
 10477  003256  0E5F               	movlw	95
 10478  003258  140B               	andwf	toupper@c^0,w,c
 10479  00325A  6E0B               	movwf	?_toupper^0,c
 10480  00325C  6A0C               	clrf	(?_toupper+1)^0,c
 10481  00325E  EF35  F019         	goto	l1889
 10482  003262                     l1884:
 10483  003262  C00B  F00B         	movff	toupper@c,?_toupper
 10484  003266  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 10485  00326A                     l1889:
 10486  00326A  0012               	return		;funcret
 10487  00326C                     __end_of_toupper:
 10488                           	opt callstack 0
 10489                           
 10490 ;; *************** function _islower *****************
 10491 ;; Defined at:
 10492 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  c               2    4[COMRAM] int 
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  2    4[COMRAM] int 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10510 ;;Total ram usage:        6 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:    4
 10513 ;; This function calls:
 10514 ;;		Nothing
 10515 ;; This function is called by:
 10516 ;;		_toupper
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text57
 10521  0036AC                     __ptext57:
 10522                           	opt callstack 0
 10523  0036AC                     _islower:
 10524                           	opt callstack 21
 10525  0036AC  0E9F               	movlw	159
 10526  0036AE  6E07               	movwf	??_islower^0,c
 10527  0036B0  0EFF               	movlw	255
 10528  0036B2  6E08               	movwf	(??_islower+1)^0,c
 10529  0036B4  C005  F009         	movff	islower@c,??_islower+2
 10530  0036B8  C006  F00A         	movff	islower@c+1,??_islower+3
 10531  0036BC  5007               	movf	??_islower^0,w,c
 10532  0036BE  2609               	addwf	(??_islower+2)^0,f,c
 10533  0036C0  5008               	movf	(??_islower+1)^0,w,c
 10534  0036C2  220A               	addwfc	(??_islower+3)^0,f,c
 10535  0036C4  500A               	movf	(??_islower+3)^0,w,c
 10536  0036C6  E10A               	bnz	u5030
 10537  0036C8  0E1A               	movlw	26
 10538  0036CA  5C09               	subwf	(??_islower+2)^0,w,c
 10539  0036CC  A0D8               	btfss	status,0,c
 10540  0036CE  EF6B  F01B         	goto	u5031
 10541  0036D2  EF6E  F01B         	goto	u5030
 10542  0036D6                     u5031:
 10543  0036D6  0E01               	movlw	1
 10544  0036D8  EF6F  F01B         	goto	u5040
 10545  0036DC                     u5030:
 10546  0036DC  0E00               	movlw	0
 10547  0036DE                     u5040:
 10548  0036DE  6E05               	movwf	?_islower^0,c
 10549  0036E0  6A06               	clrf	(?_islower+1)^0,c
 10550  0036E2  0012               	return		;funcret
 10551  0036E4                     __end_of_islower:
 10552                           	opt callstack 0
 10553                           
 10554 ;; *************** function _isupper *****************
 10555 ;; Defined at:
 10556 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;  c               2    4[COMRAM] int 
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;		None
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  2    4[COMRAM] int 
 10563 ;; Registers used:
 10564 ;;		wreg, status,2, status,0
 10565 ;; Tracked objects:
 10566 ;;		On entry : 0/0
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10574 ;;Total ram usage:        6 bytes
 10575 ;; Hardware stack levels used:    1
 10576 ;; Hardware stack levels required when called:    4
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		_xtoa
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           	psect	text58
 10585  0036E4                     __ptext58:
 10586                           	opt callstack 0
 10587  0036E4                     _isupper:
 10588                           	opt callstack 22
 10589  0036E4  0EBF               	movlw	191
 10590  0036E6  6E07               	movwf	??_isupper^0,c
 10591  0036E8  0EFF               	movlw	255
 10592  0036EA  6E08               	movwf	(??_isupper+1)^0,c
 10593  0036EC  C005  F009         	movff	isupper@c,??_isupper+2
 10594  0036F0  C006  F00A         	movff	isupper@c+1,??_isupper+3
 10595  0036F4  5007               	movf	??_isupper^0,w,c
 10596  0036F6  2609               	addwf	(??_isupper+2)^0,f,c
 10597  0036F8  5008               	movf	(??_isupper+1)^0,w,c
 10598  0036FA  220A               	addwfc	(??_isupper+3)^0,f,c
 10599  0036FC  500A               	movf	(??_isupper+3)^0,w,c
 10600  0036FE  E10A               	bnz	u5100
 10601  003700  0E1A               	movlw	26
 10602  003702  5C09               	subwf	(??_isupper+2)^0,w,c
 10603  003704  A0D8               	btfss	status,0,c
 10604  003706  EF87  F01B         	goto	u5101
 10605  00370A  EF8A  F01B         	goto	u5100
 10606  00370E                     u5101:
 10607  00370E  0E01               	movlw	1
 10608  003710  EF8B  F01B         	goto	u5110
 10609  003714                     u5100:
 10610  003714  0E00               	movlw	0
 10611  003716                     u5110:
 10612  003716  6E05               	movwf	?_isupper^0,c
 10613  003718  6A06               	clrf	(?_isupper+1)^0,c
 10614  00371A  0012               	return		;funcret
 10615  00371C                     __end_of_isupper:
 10616                           	opt callstack 0
 10617                           
 10618 ;; *************** function _isalpha *****************
 10619 ;; Defined at:
 10620 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;  c               2    4[COMRAM] int 
 10623 ;; Auto vars:     Size  Location     Type
 10624 ;;		None
 10625 ;; Return value:  Size  Location     Type
 10626 ;;                  2    4[COMRAM] int 
 10627 ;; Registers used:
 10628 ;;		wreg, status,2, status,0
 10629 ;; Tracked objects:
 10630 ;;		On entry : 0/0
 10631 ;;		On exit  : 0/0
 10632 ;;		Unchanged: 0/0
 10633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10638 ;;Total ram usage:        6 bytes
 10639 ;; Hardware stack levels used:    1
 10640 ;; Hardware stack levels required when called:    4
 10641 ;; This function calls:
 10642 ;;		Nothing
 10643 ;; This function is called by:
 10644 ;;		_xtoa
 10645 ;; This function uses a non-reentrant model
 10646 ;;
 10647                           
 10648                           	psect	text59
 10649  003638                     __ptext59:
 10650                           	opt callstack 0
 10651  003638                     _isalpha:
 10652                           	opt callstack 22
 10653  003638  0E9F               	movlw	159
 10654  00363A  6E07               	movwf	??_isalpha^0,c
 10655  00363C  0EFF               	movlw	255
 10656  00363E  6E08               	movwf	(??_isalpha+1)^0,c
 10657  003640  0E20               	movlw	32
 10658  003642  1005               	iorwf	isalpha@c^0,w,c
 10659  003644  6E09               	movwf	(??_isalpha+2)^0,c
 10660  003646  0E00               	movlw	0
 10661  003648  1006               	iorwf	(isalpha@c+1)^0,w,c
 10662  00364A  6E0A               	movwf	(??_isalpha+3)^0,c
 10663  00364C  5007               	movf	??_isalpha^0,w,c
 10664  00364E  2609               	addwf	(??_isalpha+2)^0,f,c
 10665  003650  5008               	movf	(??_isalpha+1)^0,w,c
 10666  003652  220A               	addwfc	(??_isalpha+3)^0,f,c
 10667  003654  500A               	movf	(??_isalpha+3)^0,w,c
 10668  003656  E10A               	bnz	u5120
 10669  003658  0E1A               	movlw	26
 10670  00365A  5C09               	subwf	(??_isalpha+2)^0,w,c
 10671  00365C  A0D8               	btfss	status,0,c
 10672  00365E  EF33  F01B         	goto	u5121
 10673  003662  EF36  F01B         	goto	u5120
 10674  003666                     u5121:
 10675  003666  0E01               	movlw	1
 10676  003668  EF37  F01B         	goto	u5130
 10677  00366C                     u5120:
 10678  00366C  0E00               	movlw	0
 10679  00366E                     u5130:
 10680  00366E  6E05               	movwf	?_isalpha^0,c
 10681  003670  6A06               	clrf	(?_isalpha+1)^0,c
 10682  003672  0012               	return		;funcret
 10683  003674                     __end_of_isalpha:
 10684                           	opt callstack 0
 10685                           
 10686 ;; *************** function _utoa *****************
 10687 ;; Defined at:
 10688 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 10691 ;;		 -> NULL(0), 
 10692 ;;  d               8   35[COMRAM] unsigned long long 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  n               8   55[COMRAM] unsigned long long 
 10695 ;;  i               2   63[COMRAM] int 
 10696 ;;  w               2   53[COMRAM] int 
 10697 ;;  p               2   51[COMRAM] int 
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  2   33[COMRAM] int 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10707 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10708 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10709 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10710 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10711 ;;Total ram usage:       32 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    9
 10714 ;; This function calls:
 10715 ;;		___lodiv
 10716 ;;		___lomod
 10717 ;;		_pad
 10718 ;; This function is called by:
 10719 ;;		_vfpfcnvrt
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           	psect	text60
 10724  001148                     __ptext60:
 10725                           	opt callstack 0
 10726  001148                     _utoa:
 10727                           	opt callstack 18
 10728  001148                     
 10729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 10730  001148  0100               	movlb	0	; () banked
 10731  00114A  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10732  00114C  EFAA  F008         	goto	u5661
 10733  001150  EFAC  F008         	goto	u5660
 10734  001154                     u5661:
 10735  001154  EFAD  F008         	goto	l5922
 10736  001158                     u5660:
 10737  001158                     
 10738                           ; BSR set to: 0
 10739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 10740  001158  9257               	bcf	_flags^0,1,c
 10741  00115A                     l5922:
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 10745  00115A  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10746  00115C  EFBA  F008         	goto	u5670
 10747  001160  51A6               	movf	(_prec+1)& (0+255),w,b
 10748  001162  E106               	bnz	u5671
 10749  001164  05A5               	decf	_prec& (0+255),w,b
 10750  001166  B0D8               	btfsc	status,0,c
 10751  001168  EFB8  F008         	goto	u5671
 10752  00116C  EFBA  F008         	goto	u5670
 10753  001170                     u5671:
 10754  001170  EFC0  F008         	goto	l996
 10755  001174                     u5670:
 10756  001174                     
 10757                           ; BSR set to: 0
 10758  001174  0E00               	movlw	0
 10759  001176  6E35               	movwf	(utoa@p+1)^0,c
 10760  001178  0E01               	movlw	1
 10761  00117A  6E34               	movwf	utoa@p^0,c
 10762  00117C  EFC4  F008         	goto	l998
 10763  001180                     l996:
 10764                           
 10765                           ; BSR set to: 0
 10766  001180  C0A5  F034         	movff	_prec,utoa@p
 10767  001184  C0A6  F035         	movff	_prec+1,utoa@p+1
 10768  001188                     l998:
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 10772  001188  C0A3  F036         	movff	_width,utoa@w
 10773  00118C  C0A4  F037         	movff	_width+1,utoa@w+1
 10774                           
 10775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 10776  001190  C024  F038         	movff	utoa@d,utoa@n
 10777  001194  C025  F039         	movff	utoa@d+1,utoa@n+1
 10778  001198  C026  F03A         	movff	utoa@d+2,utoa@n+2
 10779  00119C  C027  F03B         	movff	utoa@d+3,utoa@n+3
 10780  0011A0  C028  F03C         	movff	utoa@d+4,utoa@n+4
 10781  0011A4  C029  F03D         	movff	utoa@d+5,utoa@n+5
 10782  0011A8  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 10783  0011AC  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 10784  0011B0                     
 10785                           ; BSR set to: 0
 10786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 10787  0011B0  0E00               	movlw	0
 10788  0011B2  6E41               	movwf	(utoa@i+1)^0,c
 10789  0011B4  0E1F               	movlw	31
 10790  0011B6  6E40               	movwf	utoa@i^0,c
 10791  0011B8                     
 10792                           ; BSR set to: 0
 10793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 10794  0011B8  0E00               	movlw	0
 10795  0011BA  0101               	movlb	1	; () banked
 10796  0011BC  6FC8               	movwf	(_dbuf+31)& (0+255),b
 10797                           
 10798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10799  0011BE  EF57  F009         	goto	l5940
 10800  0011C2                     l5930:
 10801                           
 10802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 10803  0011C2  0640               	decf	utoa@i^0,f,c
 10804  0011C4  A0D8               	btfss	status,0,c
 10805  0011C6  0641               	decf	(utoa@i+1)^0,f,c
 10806  0011C8                     
 10807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 10808  0011C8  0EA9               	movlw	low _dbuf
 10809  0011CA  2440               	addwf	utoa@i^0,w,c
 10810  0011CC  6ED9               	movwf	fsr2l,c
 10811  0011CE  0E01               	movlw	high _dbuf
 10812  0011D0  2041               	addwfc	(utoa@i+1)^0,w,c
 10813  0011D2  6EDA               	movwf	fsr2h,c
 10814  0011D4  C038  F005         	movff	utoa@n,___lomod@dividend
 10815  0011D8  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 10816  0011DC  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 10817  0011E0  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 10818  0011E4  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 10819  0011E8  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 10820  0011EC  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 10821  0011F0  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 10822  0011F4  0E0A               	movlw	10
 10823  0011F6  6E0D               	movwf	___lomod@divisor^0,c
 10824  0011F8  0E00               	movlw	0
 10825  0011FA  6E0E               	movwf	(___lomod@divisor+1)^0,c
 10826  0011FC  0E00               	movlw	0
 10827  0011FE  6E0F               	movwf	(___lomod@divisor+2)^0,c
 10828  001200  0E00               	movlw	0
 10829  001202  6E10               	movwf	(___lomod@divisor+3)^0,c
 10830  001204  0E00               	movlw	0
 10831  001206  6E11               	movwf	(___lomod@divisor+4)^0,c
 10832  001208  0E00               	movlw	0
 10833  00120A  6E12               	movwf	(___lomod@divisor+5)^0,c
 10834  00120C  0E00               	movlw	0
 10835  00120E  6E13               	movwf	(___lomod@divisor+6)^0,c
 10836  001210  0E00               	movlw	0
 10837  001212  6E14               	movwf	(___lomod@divisor+7)^0,c
 10838  001214  EC2C  F013         	call	___lomod	;wreg free
 10839  001218  C005  F02C         	movff	?___lomod,??_utoa
 10840  00121C  C006  F02D         	movff	?___lomod+1,??_utoa+1
 10841  001220  C007  F02E         	movff	?___lomod+2,??_utoa+2
 10842  001224  C008  F02F         	movff	?___lomod+3,??_utoa+3
 10843  001228  C009  F030         	movff	?___lomod+4,??_utoa+4
 10844  00122C  C00A  F031         	movff	?___lomod+5,??_utoa+5
 10845  001230  C00B  F032         	movff	?___lomod+6,??_utoa+6
 10846  001234  C00C  F033         	movff	?___lomod+7,??_utoa+7
 10847  001238  502C               	movf	??_utoa^0,w,c
 10848  00123A  0F30               	addlw	48
 10849  00123C  6EDF               	movwf	indf2,c
 10850  00123E                     
 10851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 10852  00123E  0634               	decf	utoa@p^0,f,c
 10853  001240  A0D8               	btfss	status,0,c
 10854  001242  0635               	decf	(utoa@p+1)^0,f,c
 10855  001244                     
 10856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 10857  001244  0636               	decf	utoa@w^0,f,c
 10858  001246  A0D8               	btfss	status,0,c
 10859  001248  0637               	decf	(utoa@w+1)^0,f,c
 10860  00124A                     
 10861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 10862  00124A  C038  F005         	movff	utoa@n,___lodiv@dividend
 10863  00124E  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 10864  001252  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 10865  001256  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 10866  00125A  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 10867  00125E  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 10868  001262  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 10869  001266  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 10870  00126A  0E0A               	movlw	10
 10871  00126C  6E0D               	movwf	___lodiv@divisor^0,c
 10872  00126E  0E00               	movlw	0
 10873  001270  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 10874  001272  0E00               	movlw	0
 10875  001274  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 10876  001276  0E00               	movlw	0
 10877  001278  6E10               	movwf	(___lodiv@divisor+3)^0,c
 10878  00127A  0E00               	movlw	0
 10879  00127C  6E11               	movwf	(___lodiv@divisor+4)^0,c
 10880  00127E  0E00               	movlw	0
 10881  001280  6E12               	movwf	(___lodiv@divisor+5)^0,c
 10882  001282  0E00               	movlw	0
 10883  001284  6E13               	movwf	(___lodiv@divisor+6)^0,c
 10884  001286  0E00               	movlw	0
 10885  001288  6E14               	movwf	(___lodiv@divisor+7)^0,c
 10886  00128A  EC6C  F011         	call	___lodiv	;wreg free
 10887  00128E  C005  F038         	movff	?___lodiv,utoa@n
 10888  001292  C006  F039         	movff	?___lodiv+1,utoa@n+1
 10889  001296  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 10890  00129A  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 10891  00129E  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 10892  0012A2  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 10893  0012A6  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 10894  0012AA  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 10895  0012AE                     l5940:
 10896                           
 10897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10898  0012AE  5040               	movf	utoa@i^0,w,c
 10899  0012B0  1041               	iorwf	(utoa@i+1)^0,w,c
 10900  0012B2  B4D8               	btfsc	status,2,c
 10901  0012B4  EF5E  F009         	goto	u5681
 10902  0012B8  EF60  F009         	goto	u5680
 10903  0012BC                     u5681:
 10904  0012BC  EF90  F009         	goto	l5950
 10905  0012C0                     u5680:
 10906  0012C0  5038               	movf	utoa@n^0,w,c
 10907  0012C2  1039               	iorwf	(utoa@n+1)^0,w,c
 10908  0012C4  103A               	iorwf	(utoa@n+2)^0,w,c
 10909  0012C6  103B               	iorwf	(utoa@n+3)^0,w,c
 10910  0012C8  103C               	iorwf	(utoa@n+4)^0,w,c
 10911  0012CA  103D               	iorwf	(utoa@n+5)^0,w,c
 10912  0012CC  103E               	iorwf	(utoa@n+6)^0,w,c
 10913  0012CE  103F               	iorwf	(utoa@n+7)^0,w,c
 10914  0012D0  A4D8               	btfss	status,2,c
 10915  0012D2  EF6D  F009         	goto	u5691
 10916  0012D6  EF6F  F009         	goto	u5690
 10917  0012DA                     u5691:
 10918  0012DA  EFE1  F008         	goto	l5930
 10919  0012DE                     u5690:
 10920  0012DE  BE35               	btfsc	(utoa@p+1)^0,7,c
 10921  0012E0  EF7C  F009         	goto	u5700
 10922  0012E4  5035               	movf	(utoa@p+1)^0,w,c
 10923  0012E6  E106               	bnz	u5701
 10924  0012E8  0434               	decf	utoa@p^0,w,c
 10925  0012EA  B0D8               	btfsc	status,0,c
 10926  0012EC  EF7A  F009         	goto	u5701
 10927  0012F0  EF7C  F009         	goto	u5700
 10928  0012F4                     u5701:
 10929  0012F4  EFE1  F008         	goto	l5930
 10930  0012F8                     u5700:
 10931  0012F8  BE37               	btfsc	(utoa@w+1)^0,7,c
 10932  0012FA  EF87  F009         	goto	u5711
 10933  0012FE  5037               	movf	(utoa@w+1)^0,w,c
 10934  001300  E108               	bnz	u5710
 10935  001302  0436               	decf	utoa@w^0,w,c
 10936  001304  A0D8               	btfss	status,0,c
 10937  001306  EF87  F009         	goto	u5711
 10938  00130A  EF89  F009         	goto	u5710
 10939  00130E                     u5711:
 10940  00130E  EF90  F009         	goto	l5950
 10941  001312                     u5710:
 10942  001312  B257               	btfsc	_flags^0,1,c
 10943  001314  EF8E  F009         	goto	u5721
 10944  001318  EF90  F009         	goto	u5720
 10945  00131C                     u5721:
 10946  00131C  EFE1  F008         	goto	l5930
 10947  001320                     u5720:
 10948  001320                     l5950:
 10949                           
 10950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 10951  001320  C022  F017         	movff	utoa@fp,pad@fp
 10952  001324  C023  F018         	movff	utoa@fp+1,pad@fp+1
 10953  001328  0EA9               	movlw	low _dbuf
 10954  00132A  2440               	addwf	utoa@i^0,w,c
 10955  00132C  6E19               	movwf	pad@buf^0,c
 10956  00132E  0E01               	movlw	high _dbuf
 10957  001330  2041               	addwfc	(utoa@i+1)^0,w,c
 10958  001332  6E1A               	movwf	(pad@buf+1)^0,c
 10959  001334  C036  F01B         	movff	utoa@w,pad@p
 10960  001338  C037  F01C         	movff	utoa@w+1,pad@p+1
 10961  00133C  ECF7  F013         	call	_pad	;wreg free
 10962  001340  C017  F022         	movff	?_pad,?_utoa
 10963  001344  C018  F023         	movff	?_pad+1,?_utoa+1
 10964  001348  0012               	return		;funcret
 10965  00134A                     __end_of_utoa:
 10966                           	opt callstack 0
 10967                           
 10968 ;; *************** function ___lomod *****************
 10969 ;; Defined at:
 10970 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  dividend        8    4[COMRAM] unsigned long long 
 10973 ;;  divisor         8   12[COMRAM] unsigned long long 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  counter         1   20[COMRAM] unsigned char 
 10976 ;; Return value:  Size  Location     Type
 10977 ;;                  8    4[COMRAM] unsigned long long 
 10978 ;; Registers used:
 10979 ;;		wreg, status,2, status,0
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10985 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10989 ;;Total ram usage:       17 bytes
 10990 ;; Hardware stack levels used:    1
 10991 ;; Hardware stack levels required when called:    4
 10992 ;; This function calls:
 10993 ;;		Nothing
 10994 ;; This function is called by:
 10995 ;;		_utoa
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text61
 11000  002658                     __ptext61:
 11001                           	opt callstack 0
 11002  002658                     ___lomod:
 11003                           	opt callstack 22
 11004  002658  500D               	movf	___lomod@divisor^0,w,c
 11005  00265A  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 11006  00265C  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 11007  00265E  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 11008  002660  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 11009  002662  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 11010  002664  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 11011  002666  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 11012  002668  B4D8               	btfsc	status,2,c
 11013  00266A  EF39  F013         	goto	u5361
 11014  00266E  EF3B  F013         	goto	u5360
 11015  002672                     u5361:
 11016  002672  EF83  F013         	goto	l1528
 11017  002676                     u5360:
 11018  002676  0E01               	movlw	1
 11019  002678  6E15               	movwf	___lomod@counter^0,c
 11020  00267A  EF49  F013         	goto	l5792
 11021  00267E                     l5790:
 11022  00267E  90D8               	bcf	status,0,c
 11023  002680  360D               	rlcf	___lomod@divisor^0,f,c
 11024  002682  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 11025  002684  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 11026  002686  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 11027  002688  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 11028  00268A  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 11029  00268C  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 11030  00268E  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 11031  002690  2A15               	incf	___lomod@counter^0,f,c
 11032  002692                     l5792:
 11033  002692  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 11034  002694  EF4E  F013         	goto	u5371
 11035  002698  EF50  F013         	goto	u5370
 11036  00269C                     u5371:
 11037  00269C  EF3F  F013         	goto	l5790
 11038  0026A0                     u5370:
 11039  0026A0                     l5794:
 11040  0026A0  500D               	movf	___lomod@divisor^0,w,c
 11041  0026A2  5C05               	subwf	___lomod@dividend^0,w,c
 11042  0026A4  500E               	movf	(___lomod@divisor+1)^0,w,c
 11043  0026A6  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 11044  0026A8  500F               	movf	(___lomod@divisor+2)^0,w,c
 11045  0026AA  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 11046  0026AC  5010               	movf	(___lomod@divisor+3)^0,w,c
 11047  0026AE  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 11048  0026B0  5011               	movf	(___lomod@divisor+4)^0,w,c
 11049  0026B2  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 11050  0026B4  5012               	movf	(___lomod@divisor+5)^0,w,c
 11051  0026B6  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 11052  0026B8  5013               	movf	(___lomod@divisor+6)^0,w,c
 11053  0026BA  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 11054  0026BC  5014               	movf	(___lomod@divisor+7)^0,w,c
 11055  0026BE  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 11056  0026C0  A0D8               	btfss	status,0,c
 11057  0026C2  EF65  F013         	goto	u5381
 11058  0026C6  EF67  F013         	goto	u5380
 11059  0026CA                     u5381:
 11060  0026CA  EF77  F013         	goto	l5798
 11061  0026CE                     u5380:
 11062  0026CE  500D               	movf	___lomod@divisor^0,w,c
 11063  0026D0  5E05               	subwf	___lomod@dividend^0,f,c
 11064  0026D2  500E               	movf	(___lomod@divisor+1)^0,w,c
 11065  0026D4  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 11066  0026D6  500F               	movf	(___lomod@divisor+2)^0,w,c
 11067  0026D8  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 11068  0026DA  5010               	movf	(___lomod@divisor+3)^0,w,c
 11069  0026DC  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 11070  0026DE  5011               	movf	(___lomod@divisor+4)^0,w,c
 11071  0026E0  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 11072  0026E2  5012               	movf	(___lomod@divisor+5)^0,w,c
 11073  0026E4  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 11074  0026E6  5013               	movf	(___lomod@divisor+6)^0,w,c
 11075  0026E8  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 11076  0026EA  5014               	movf	(___lomod@divisor+7)^0,w,c
 11077  0026EC  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 11078  0026EE                     l5798:
 11079  0026EE  90D8               	bcf	status,0,c
 11080  0026F0  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 11081  0026F2  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 11082  0026F4  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 11083  0026F6  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 11084  0026F8  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 11085  0026FA  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 11086  0026FC  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 11087  0026FE  320D               	rrcf	___lomod@divisor^0,f,c
 11088  002700  2E15               	decfsz	___lomod@counter^0,f,c
 11089  002702  EF50  F013         	goto	l5794
 11090  002706                     l1528:
 11091  002706  C005  F005         	movff	___lomod@dividend,?___lomod
 11092  00270A  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 11093  00270E  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 11094  002712  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 11095  002716  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 11096  00271A  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 11097  00271E  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 11098  002722  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 11099  002726  0012               	return		;funcret
 11100  002728                     __end_of___lomod:
 11101                           	opt callstack 0
 11102                           
 11103 ;; *************** function ___lodiv *****************
 11104 ;; Defined at:
 11105 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  dividend        8    4[COMRAM] unsigned long long 
 11108 ;;  divisor         8   12[COMRAM] unsigned long long 
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;  quotient        8   20[COMRAM] unsigned long long 
 11111 ;;  counter         1   28[COMRAM] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  8    4[COMRAM] unsigned long long 
 11114 ;; Registers used:
 11115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11121 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11122 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11124 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11125 ;;Total ram usage:       25 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    4
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_utoa
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text62
 11136  0022D8                     __ptext62:
 11137                           	opt callstack 0
 11138  0022D8                     ___lodiv:
 11139                           	opt callstack 22
 11140  0022D8  EE20  F015         	lfsr	2,___lodiv@quotient
 11141  0022DC  0E07               	movlw	7
 11142  0022DE                     u5321:
 11143  0022DE  6ADE               	clrf	postinc2,c
 11144  0022E0  06E8               	decf	wreg,f,c
 11145  0022E2  E2FD               	bc	u5321
 11146  0022E4  500D               	movf	___lodiv@divisor^0,w,c
 11147  0022E6  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 11148  0022E8  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 11149  0022EA  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 11150  0022EC  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 11151  0022EE  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 11152  0022F0  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 11153  0022F2  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 11154  0022F4  B4D8               	btfsc	status,2,c
 11155  0022F6  EF7F  F011         	goto	u5331
 11156  0022FA  EF81  F011         	goto	u5330
 11157  0022FE                     u5331:
 11158  0022FE  EFD3  F011         	goto	l1518
 11159  002302                     u5330:
 11160  002302  0E01               	movlw	1
 11161  002304  6E1D               	movwf	___lodiv@counter^0,c
 11162  002306  EF8F  F011         	goto	l5772
 11163  00230A                     l5770:
 11164  00230A  90D8               	bcf	status,0,c
 11165  00230C  360D               	rlcf	___lodiv@divisor^0,f,c
 11166  00230E  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 11167  002310  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 11168  002312  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 11169  002314  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 11170  002316  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 11171  002318  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 11172  00231A  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 11173  00231C  2A1D               	incf	___lodiv@counter^0,f,c
 11174  00231E                     l5772:
 11175  00231E  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 11176  002320  EF94  F011         	goto	u5341
 11177  002324  EF96  F011         	goto	u5340
 11178  002328                     u5341:
 11179  002328  EF85  F011         	goto	l5770
 11180  00232C                     u5340:
 11181  00232C                     l5774:
 11182  00232C  90D8               	bcf	status,0,c
 11183  00232E  3615               	rlcf	___lodiv@quotient^0,f,c
 11184  002330  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 11185  002332  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 11186  002334  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 11187  002336  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 11188  002338  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 11189  00233A  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 11190  00233C  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 11191  00233E  500D               	movf	___lodiv@divisor^0,w,c
 11192  002340  5C05               	subwf	___lodiv@dividend^0,w,c
 11193  002342  500E               	movf	(___lodiv@divisor+1)^0,w,c
 11194  002344  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 11195  002346  500F               	movf	(___lodiv@divisor+2)^0,w,c
 11196  002348  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 11197  00234A  5010               	movf	(___lodiv@divisor+3)^0,w,c
 11198  00234C  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 11199  00234E  5011               	movf	(___lodiv@divisor+4)^0,w,c
 11200  002350  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 11201  002352  5012               	movf	(___lodiv@divisor+5)^0,w,c
 11202  002354  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 11203  002356  5013               	movf	(___lodiv@divisor+6)^0,w,c
 11204  002358  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 11205  00235A  5014               	movf	(___lodiv@divisor+7)^0,w,c
 11206  00235C  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 11207  00235E  A0D8               	btfss	status,0,c
 11208  002360  EFB4  F011         	goto	u5351
 11209  002364  EFB6  F011         	goto	u5350
 11210  002368                     u5351:
 11211  002368  EFC7  F011         	goto	l5782
 11212  00236C                     u5350:
 11213  00236C  500D               	movf	___lodiv@divisor^0,w,c
 11214  00236E  5E05               	subwf	___lodiv@dividend^0,f,c
 11215  002370  500E               	movf	(___lodiv@divisor+1)^0,w,c
 11216  002372  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 11217  002374  500F               	movf	(___lodiv@divisor+2)^0,w,c
 11218  002376  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 11219  002378  5010               	movf	(___lodiv@divisor+3)^0,w,c
 11220  00237A  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 11221  00237C  5011               	movf	(___lodiv@divisor+4)^0,w,c
 11222  00237E  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 11223  002380  5012               	movf	(___lodiv@divisor+5)^0,w,c
 11224  002382  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 11225  002384  5013               	movf	(___lodiv@divisor+6)^0,w,c
 11226  002386  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 11227  002388  5014               	movf	(___lodiv@divisor+7)^0,w,c
 11228  00238A  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 11229  00238C  8015               	bsf	___lodiv@quotient^0,0,c
 11230  00238E                     l5782:
 11231  00238E  90D8               	bcf	status,0,c
 11232  002390  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 11233  002392  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 11234  002394  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 11235  002396  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 11236  002398  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 11237  00239A  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 11238  00239C  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 11239  00239E  320D               	rrcf	___lodiv@divisor^0,f,c
 11240  0023A0  2E1D               	decfsz	___lodiv@counter^0,f,c
 11241  0023A2  EF96  F011         	goto	l5774
 11242  0023A6                     l1518:
 11243  0023A6  C015  F005         	movff	___lodiv@quotient,?___lodiv
 11244  0023AA  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 11245  0023AE  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 11246  0023B2  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 11247  0023B6  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 11248  0023BA  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 11249  0023BE  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 11250  0023C2  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 11251  0023C6  0012               	return		;funcret
 11252  0023C8                     __end_of___lodiv:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _stoa *****************
 11256 ;; Defined at:
 11257 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 11260 ;;		 -> NULL(0), 
 11261 ;;  s               2   17[COMRAM] PTR unsigned char 
 11262 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1427(20), ValidateCmd@ConfName_1423(20), ValidateCmd@ConfName(20), 
 11263 ;;		 -> STR_24(9), STR_23(12), Command(16), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  nuls            7   20[COMRAM] unsigned char [7]
 11266 ;;  l               2   35[COMRAM] int 
 11267 ;;  p               2   33[COMRAM] int 
 11268 ;;  cp              2   31[COMRAM] PTR unsigned char 
 11269 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1427(20), ValidateCmd@ConfName_1423(20), 
 11270 ;;		 -> ValidateCmd@ConfName(20), STR_24(9), STR_23(12), Command(16), 
 11271 ;;  w               2   29[COMRAM] int 
 11272 ;;  i               2   27[COMRAM] int 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  2   15[COMRAM] int 
 11275 ;; Registers used:
 11276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11283 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11285 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11286 ;;Total ram usage:       22 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    7
 11289 ;; This function calls:
 11290 ;;		_fputc
 11291 ;;		_strlen
 11292 ;; This function is called by:
 11293 ;;		_vfpfcnvrt
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text63
 11298  0016D8                     __ptext63:
 11299                           	opt callstack 0
 11300  0016D8                     _stoa:
 11301                           	opt callstack 20
 11302  0016D8                     
 11303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11304  0016D8  EE21  F020         	lfsr	2,stoa@F1139
 11305  0016DC  EE10  F015         	lfsr	1,stoa@nuls
 11306  0016E0  0E06               	movlw	6
 11307  0016E2                     u5561:
 11308  0016E2  CFDB FFE3          	movff	plusw2,plusw1
 11309  0016E6  06E8               	decf	wreg,f,c
 11310  0016E8  E2FC               	bc	u5561
 11311  0016EA                     
 11312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11313  0016EA  C012  F020         	movff	stoa@s,stoa@cp
 11314  0016EE  C013  F021         	movff	stoa@s+1,stoa@cp+1
 11315  0016F2                     
 11316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11317  0016F2  5020               	movf	stoa@cp^0,w,c
 11318  0016F4  1021               	iorwf	(stoa@cp+1)^0,w,c
 11319  0016F6  A4D8               	btfss	status,2,c
 11320  0016F8  EF80  F00B         	goto	u5571
 11321  0016FC  EF82  F00B         	goto	u5570
 11322  001700                     u5571:
 11323  001700  EF86  F00B         	goto	l5884
 11324  001704                     u5570:
 11325  001704                     
 11326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11327  001704  0E15               	movlw	low stoa@nuls
 11328  001706  6E20               	movwf	stoa@cp^0,c
 11329  001708  0E00               	movlw	high stoa@nuls
 11330  00170A  6E21               	movwf	(stoa@cp+1)^0,c
 11331  00170C                     l5884:
 11332                           
 11333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11334  00170C  C020  F005         	movff	stoa@cp,strlen@s
 11335  001710  C021  F006         	movff	stoa@cp+1,strlen@s+1
 11336  001714  ECB7  F019         	call	_strlen	;wreg free
 11337  001718  C005  F024         	movff	?_strlen,stoa@l
 11338  00171C  C006  F025         	movff	?_strlen+1,stoa@l+1
 11339  001720                     
 11340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 11341  001720  C0A5  F022         	movff	_prec,stoa@p
 11342  001724  C0A6  F023         	movff	_prec+1,stoa@p+1
 11343  001728                     
 11344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 11345  001728  BE23               	btfsc	(stoa@p+1)^0,7,c
 11346  00172A  EF99  F00B         	goto	u5581
 11347  00172E  EF9B  F00B         	goto	u5580
 11348  001732                     u5581:
 11349  001732  EFB0  F00B         	goto	l977
 11350  001736                     u5580:
 11351  001736  5024               	movf	stoa@l^0,w,c
 11352  001738  5C22               	subwf	stoa@p^0,w,c
 11353  00173A  5023               	movf	(stoa@p+1)^0,w,c
 11354  00173C  0A80               	xorlw	128
 11355  00173E  6E14               	movwf	??_stoa^0,c
 11356  001740  5025               	movf	(stoa@l+1)^0,w,c
 11357  001742  0A80               	xorlw	128
 11358  001744  5814               	subwfb	??_stoa^0,w,c
 11359  001746  A0D8               	btfss	status,0,c
 11360  001748  EFA8  F00B         	goto	u5591
 11361  00174C  EFAA  F00B         	goto	u5590
 11362  001750                     u5591:
 11363  001750  EFAC  F00B         	goto	l975
 11364  001754                     u5590:
 11365  001754  EFB0  F00B         	goto	l977
 11366  001758                     l975:
 11367  001758  C022  F024         	movff	stoa@p,stoa@l
 11368  00175C  C023  F025         	movff	stoa@p+1,stoa@l+1
 11369  001760                     l977:
 11370                           
 11371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 11372  001760  C024  F022         	movff	stoa@l,stoa@p
 11373  001764  C025  F023         	movff	stoa@l+1,stoa@p+1
 11374                           
 11375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 11376  001768  C0A3  F01E         	movff	_width,stoa@w
 11377  00176C  C0A4  F01F         	movff	_width+1,stoa@w+1
 11378                           
 11379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 11380  001770  B057               	btfsc	_flags^0,0,c
 11381  001772  EFBD  F00B         	goto	u5601
 11382  001776  EFBF  F00B         	goto	u5600
 11383  00177A                     u5601:
 11384  00177A  EFDC  F00B         	goto	l5900
 11385  00177E                     u5600:
 11386  00177E  EFCD  F00B         	goto	l5898
 11387  001782                     l5894:
 11388                           
 11389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 11390  001782  0E00               	movlw	0
 11391  001784  6E08               	movwf	(fputc@c+1)^0,c
 11392  001786  0E20               	movlw	32
 11393  001788  6E07               	movwf	fputc@c^0,c
 11394  00178A  C010  F009         	movff	stoa@fp,fputc@fp
 11395  00178E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 11396  001792  EC18  F015         	call	_fputc	;wreg free
 11397  001796                     
 11398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 11399  001796  4A24               	infsnz	stoa@l^0,f,c
 11400  001798  2A25               	incf	(stoa@l+1)^0,f,c
 11401  00179A                     l5898:
 11402                           
 11403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 11404  00179A  501E               	movf	stoa@w^0,w,c
 11405  00179C  5C24               	subwf	stoa@l^0,w,c
 11406  00179E  5025               	movf	(stoa@l+1)^0,w,c
 11407  0017A0  0A80               	xorlw	128
 11408  0017A2  6E14               	movwf	??_stoa^0,c
 11409  0017A4  501F               	movf	(stoa@w+1)^0,w,c
 11410  0017A6  0A80               	xorlw	128
 11411  0017A8  5814               	subwfb	??_stoa^0,w,c
 11412  0017AA  A0D8               	btfss	status,0,c
 11413  0017AC  EFDA  F00B         	goto	u5611
 11414  0017B0  EFDC  F00B         	goto	u5610
 11415  0017B4                     u5611:
 11416  0017B4  EFC1  F00B         	goto	l5894
 11417  0017B8                     u5610:
 11418  0017B8                     l5900:
 11419                           
 11420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 11421  0017B8  0E00               	movlw	0
 11422  0017BA  6E1D               	movwf	(stoa@i+1)^0,c
 11423  0017BC  0E00               	movlw	0
 11424  0017BE  6E1C               	movwf	stoa@i^0,c
 11425                           
 11426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11427  0017C0  EF01  F00C         	goto	l5908
 11428  0017C4                     l5902:
 11429                           
 11430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 11431  0017C4  C020  FFF6         	movff	stoa@cp,tblptrl
 11432  0017C8  C021  FFF7         	movff	stoa@cp+1,tblptrh
 11433  0017CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11434  0017CE  6EF8               	movwf	tblptru,c
 11435  0017D0  0E0E               	movlw	(high __ramtop+-1)
 11436  0017D2  64F7               	cpfsgt	tblptrh,c
 11437  0017D4  D003               	bra	u5627
 11438  0017D6  0008               	tblrd		*
 11439  0017D8  50F5               	movf	tablat,w,c
 11440  0017DA  D005               	bra	u5620
 11441  0017DC                     u5627:
 11442  0017DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 11443  0017E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 11444  0017E4  50EF               	movf	indf0,w,c
 11445  0017E6                     u5620:
 11446  0017E6  6E14               	movwf	??_stoa^0,c
 11447  0017E8  5014               	movf	??_stoa^0,w,c
 11448  0017EA  6E07               	movwf	fputc@c^0,c
 11449  0017EC  6A08               	clrf	(fputc@c+1)^0,c
 11450  0017EE  C010  F009         	movff	stoa@fp,fputc@fp
 11451  0017F2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 11452  0017F6  EC18  F015         	call	_fputc	;wreg free
 11453  0017FA                     
 11454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 11455  0017FA  4A20               	infsnz	stoa@cp^0,f,c
 11456  0017FC  2A21               	incf	(stoa@cp+1)^0,f,c
 11457  0017FE                     
 11458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 11459  0017FE  4A1C               	infsnz	stoa@i^0,f,c
 11460  001800  2A1D               	incf	(stoa@i+1)^0,f,c
 11461  001802                     l5908:
 11462                           
 11463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11464  001802  5022               	movf	stoa@p^0,w,c
 11465  001804  5C1C               	subwf	stoa@i^0,w,c
 11466  001806  501D               	movf	(stoa@i+1)^0,w,c
 11467  001808  0A80               	xorlw	128
 11468  00180A  6E14               	movwf	??_stoa^0,c
 11469  00180C  5023               	movf	(stoa@p+1)^0,w,c
 11470  00180E  0A80               	xorlw	128
 11471  001810  5814               	subwfb	??_stoa^0,w,c
 11472  001812  A0D8               	btfss	status,0,c
 11473  001814  EF0E  F00C         	goto	u5631
 11474  001818  EF10  F00C         	goto	u5630
 11475  00181C                     u5631:
 11476  00181C  EFE2  F00B         	goto	l5902
 11477  001820                     u5630:
 11478  001820                     
 11479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 11480  001820  A057               	btfss	_flags^0,0,c
 11481  001822  EF15  F00C         	goto	u5641
 11482  001826  EF17  F00C         	goto	u5640
 11483  00182A                     u5641:
 11484  00182A  EF34  F00C         	goto	l987
 11485  00182E                     u5640:
 11486  00182E  EF25  F00C         	goto	l5916
 11487  001832                     l5912:
 11488                           
 11489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 11490  001832  0E00               	movlw	0
 11491  001834  6E08               	movwf	(fputc@c+1)^0,c
 11492  001836  0E20               	movlw	32
 11493  001838  6E07               	movwf	fputc@c^0,c
 11494  00183A  C010  F009         	movff	stoa@fp,fputc@fp
 11495  00183E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 11496  001842  EC18  F015         	call	_fputc	;wreg free
 11497  001846                     
 11498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 11499  001846  4A24               	infsnz	stoa@l^0,f,c
 11500  001848  2A25               	incf	(stoa@l+1)^0,f,c
 11501  00184A                     l5916:
 11502                           
 11503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11504  00184A  501E               	movf	stoa@w^0,w,c
 11505  00184C  5C24               	subwf	stoa@l^0,w,c
 11506  00184E  5025               	movf	(stoa@l+1)^0,w,c
 11507  001850  0A80               	xorlw	128
 11508  001852  6E14               	movwf	??_stoa^0,c
 11509  001854  501F               	movf	(stoa@w+1)^0,w,c
 11510  001856  0A80               	xorlw	128
 11511  001858  5814               	subwfb	??_stoa^0,w,c
 11512  00185A  A0D8               	btfss	status,0,c
 11513  00185C  EF32  F00C         	goto	u5651
 11514  001860  EF34  F00C         	goto	u5650
 11515  001864                     u5651:
 11516  001864  EF19  F00C         	goto	l5912
 11517  001868                     u5650:
 11518  001868                     l987:
 11519                           
 11520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11521  001868  C024  F010         	movff	stoa@l,?_stoa
 11522  00186C  C025  F011         	movff	stoa@l+1,?_stoa+1
 11523  001870  0012               	return		;funcret
 11524  001872                     __end_of_stoa:
 11525                           	opt callstack 0
 11526                           
 11527 ;; *************** function _dtoa *****************
 11528 ;; Defined at:
 11529 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11532 ;;		 -> NULL(0), 
 11533 ;;  d               8   35[COMRAM] long long 
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;  n               8   59[COMRAM] long long 
 11536 ;;  i               2   67[COMRAM] int 
 11537 ;;  s               2   57[COMRAM] int 
 11538 ;;  w               2   55[COMRAM] int 
 11539 ;;  p               2   53[COMRAM] int 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  2   33[COMRAM] int 
 11542 ;; Registers used:
 11543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11549 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11550 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11551 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11552 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11553 ;;Total ram usage:       36 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    9
 11556 ;; This function calls:
 11557 ;;		___aodiv
 11558 ;;		___aomod
 11559 ;;		_abs
 11560 ;;		_pad
 11561 ;; This function is called by:
 11562 ;;		_vfpfcnvrt
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text64
 11567  0006B4                     __ptext64:
 11568                           	opt callstack 0
 11569  0006B4                     _dtoa:
 11570                           	opt callstack 18
 11571  0006B4                     
 11572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11573  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
 11574  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 11575  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 11576  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 11577  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 11578  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 11579  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 11580  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 11581  0006D4                     
 11582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11583  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
 11584  0006D6  EF6F  F003         	goto	u5411
 11585  0006DA  EF72  F003         	goto	u5410
 11586  0006DE                     u5411:
 11587  0006DE  0E01               	movlw	1
 11588  0006E0  EF73  F003         	goto	u5420
 11589  0006E4                     u5410:
 11590  0006E4  0E00               	movlw	0
 11591  0006E6                     u5420:
 11592  0006E6  6E3A               	movwf	dtoa@s^0,c
 11593  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
 11594                           
 11595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11596  0006EA  503A               	movf	dtoa@s^0,w,c
 11597  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
 11598  0006EE  B4D8               	btfsc	status,2,c
 11599  0006F0  EF7C  F003         	goto	u5431
 11600  0006F4  EF7E  F003         	goto	u5430
 11601  0006F8                     u5431:
 11602  0006F8  EF8E  F003         	goto	l5820
 11603  0006FC                     u5430:
 11604  0006FC                     
 11605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11606  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
 11607  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
 11608  000700  1E41               	comf	(dtoa@n+5)^0,f,c
 11609  000702  1E40               	comf	(dtoa@n+4)^0,f,c
 11610  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
 11611  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
 11612  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
 11613  00070A  6C3C               	negf	dtoa@n^0,c
 11614  00070C  0E00               	movlw	0
 11615  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
 11616  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
 11617  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
 11618  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
 11619  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
 11620  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
 11621  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
 11622  00071C                     l5820:
 11623                           
 11624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11625  00071C  0100               	movlb	0	; () banked
 11626  00071E  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11627  000720  EF94  F003         	goto	u5441
 11628  000724  EF96  F003         	goto	u5440
 11629  000728                     u5441:
 11630  000728  EF97  F003         	goto	l5824
 11631  00072C                     u5440:
 11632  00072C                     
 11633                           ; BSR set to: 0
 11634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11635  00072C  9257               	bcf	_flags^0,1,c
 11636  00072E                     l5824:
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11640  00072E  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11641  000730  EFA4  F003         	goto	u5450
 11642  000734  51A6               	movf	(_prec+1)& (0+255),w,b
 11643  000736  E106               	bnz	u5451
 11644  000738  05A5               	decf	_prec& (0+255),w,b
 11645  00073A  B0D8               	btfsc	status,0,c
 11646  00073C  EFA2  F003         	goto	u5451
 11647  000740  EFA4  F003         	goto	u5450
 11648  000744                     u5451:
 11649  000744  EFAA  F003         	goto	l948
 11650  000748                     u5450:
 11651  000748                     
 11652                           ; BSR set to: 0
 11653  000748  0E00               	movlw	0
 11654  00074A  6E37               	movwf	(dtoa@p+1)^0,c
 11655  00074C  0E01               	movlw	1
 11656  00074E  6E36               	movwf	dtoa@p^0,c
 11657  000750  EFAE  F003         	goto	l950
 11658  000754                     l948:
 11659                           
 11660                           ; BSR set to: 0
 11661  000754  C0A5  F036         	movff	_prec,dtoa@p
 11662  000758  C0A6  F037         	movff	_prec+1,dtoa@p+1
 11663  00075C                     l950:
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 11667  00075C  C0A3  F038         	movff	_width,dtoa@w
 11668  000760  C0A4  F039         	movff	_width+1,dtoa@w+1
 11669  000764                     
 11670                           ; BSR set to: 0
 11671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 11672  000764  503A               	movf	dtoa@s^0,w,c
 11673  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
 11674  000768  A4D8               	btfss	status,2,c
 11675  00076A  EFB9  F003         	goto	u5461
 11676  00076E  EFBB  F003         	goto	u5460
 11677  000772                     u5461:
 11678  000772  EFC2  F003         	goto	l5832
 11679  000776                     u5460:
 11680  000776                     
 11681                           ; BSR set to: 0
 11682  000776  A457               	btfss	_flags^0,2,c
 11683  000778  EFC0  F003         	goto	u5471
 11684  00077C  EFC2  F003         	goto	u5470
 11685  000780                     u5471:
 11686  000780  EFC5  F003         	goto	l5834
 11687  000784                     u5470:
 11688  000784                     l5832:
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 11692  000784  0638               	decf	dtoa@w^0,f,c
 11693  000786  A0D8               	btfss	status,0,c
 11694  000788  0639               	decf	(dtoa@w+1)^0,f,c
 11695  00078A                     l5834:
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 11699  00078A  0E00               	movlw	0
 11700  00078C  6E45               	movwf	(dtoa@i+1)^0,c
 11701  00078E  0E1F               	movlw	31
 11702  000790  6E44               	movwf	dtoa@i^0,c
 11703  000792                     
 11704                           ; BSR set to: 0
 11705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 11706  000792  0E00               	movlw	0
 11707  000794  0101               	movlb	1	; () banked
 11708  000796  6FC8               	movwf	(_dbuf+31)& (0+255),b
 11709                           
 11710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11711  000798  EF4A  F004         	goto	l5848
 11712  00079C                     l5838:
 11713                           
 11714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 11715  00079C  0644               	decf	dtoa@i^0,f,c
 11716  00079E  A0D8               	btfss	status,0,c
 11717  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
 11718  0007A2                     
 11719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 11720  0007A2  0EA9               	movlw	low _dbuf
 11721  0007A4  2444               	addwf	dtoa@i^0,w,c
 11722  0007A6  6ED9               	movwf	fsr2l,c
 11723  0007A8  0E01               	movlw	high _dbuf
 11724  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
 11725  0007AC  6EDA               	movwf	fsr2h,c
 11726  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
 11727  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 11728  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 11729  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 11730  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 11731  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 11732  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 11733  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 11734  0007CE  0E0A               	movlw	10
 11735  0007D0  6E0D               	movwf	___aomod@divisor^0,c
 11736  0007D2  0E00               	movlw	0
 11737  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
 11738  0007D6  0E00               	movlw	0
 11739  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
 11740  0007DA  0E00               	movlw	0
 11741  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
 11742  0007DE  0E00               	movlw	0
 11743  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
 11744  0007E2  0E00               	movlw	0
 11745  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
 11746  0007E6  0E00               	movlw	0
 11747  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
 11748  0007EA  0E00               	movlw	0
 11749  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
 11750  0007EE  ECCA  F00D         	call	___aomod	;wreg free
 11751  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
 11752  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 11753  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 11754  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 11755  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
 11756  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 11757  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 11758  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 11759  000812  C02C  F017         	movff	??_dtoa,abs@a
 11760  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
 11761  00081A  ECFC  F01A         	call	_abs	;wreg free
 11762  00081E  5017               	movf	?_abs^0,w,c
 11763  000820  0F30               	addlw	48
 11764  000822  6EDF               	movwf	indf2,c
 11765  000824                     
 11766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 11767  000824  0636               	decf	dtoa@p^0,f,c
 11768  000826  A0D8               	btfss	status,0,c
 11769  000828  0637               	decf	(dtoa@p+1)^0,f,c
 11770  00082A                     
 11771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 11772  00082A  0638               	decf	dtoa@w^0,f,c
 11773  00082C  A0D8               	btfss	status,0,c
 11774  00082E  0639               	decf	(dtoa@w+1)^0,f,c
 11775  000830                     
 11776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 11777  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 11778  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 11779  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 11780  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 11781  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 11782  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 11783  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 11784  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 11785  000850  0E0A               	movlw	10
 11786  000852  6E0D               	movwf	___aodiv@divisor^0,c
 11787  000854  0E00               	movlw	0
 11788  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 11789  000858  0E00               	movlw	0
 11790  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 11791  00085C  0E00               	movlw	0
 11792  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
 11793  000860  0E00               	movlw	0
 11794  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
 11795  000864  0E00               	movlw	0
 11796  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
 11797  000868  0E00               	movlw	0
 11798  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
 11799  00086C  0E00               	movlw	0
 11800  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
 11801  000870  EC06  F00D         	call	___aodiv	;wreg free
 11802  000874  C005  F03C         	movff	?___aodiv,dtoa@n
 11803  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 11804  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 11805  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 11806  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 11807  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 11808  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 11809  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 11810  000894                     l5848:
 11811                           
 11812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11813  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
 11814  000896  EF55  F004         	goto	u5481
 11815  00089A  5045               	movf	(dtoa@i+1)^0,w,c
 11816  00089C  E108               	bnz	u5480
 11817  00089E  0444               	decf	dtoa@i^0,w,c
 11818  0008A0  A0D8               	btfss	status,0,c
 11819  0008A2  EF55  F004         	goto	u5481
 11820  0008A6  EF57  F004         	goto	u5480
 11821  0008AA                     u5481:
 11822  0008AA  EF87  F004         	goto	l5858
 11823  0008AE                     u5480:
 11824  0008AE  503C               	movf	dtoa@n^0,w,c
 11825  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
 11826  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
 11827  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
 11828  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
 11829  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
 11830  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
 11831  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
 11832  0008BE  A4D8               	btfss	status,2,c
 11833  0008C0  EF64  F004         	goto	u5491
 11834  0008C4  EF66  F004         	goto	u5490
 11835  0008C8                     u5491:
 11836  0008C8  EFCE  F003         	goto	l5838
 11837  0008CC                     u5490:
 11838  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
 11839  0008CE  EF73  F004         	goto	u5500
 11840  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
 11841  0008D4  E106               	bnz	u5501
 11842  0008D6  0436               	decf	dtoa@p^0,w,c
 11843  0008D8  B0D8               	btfsc	status,0,c
 11844  0008DA  EF71  F004         	goto	u5501
 11845  0008DE  EF73  F004         	goto	u5500
 11846  0008E2                     u5501:
 11847  0008E2  EFCE  F003         	goto	l5838
 11848  0008E6                     u5500:
 11849  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
 11850  0008E8  EF7E  F004         	goto	u5511
 11851  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
 11852  0008EE  E108               	bnz	u5510
 11853  0008F0  0438               	decf	dtoa@w^0,w,c
 11854  0008F2  A0D8               	btfss	status,0,c
 11855  0008F4  EF7E  F004         	goto	u5511
 11856  0008F8  EF80  F004         	goto	u5510
 11857  0008FC                     u5511:
 11858  0008FC  EF87  F004         	goto	l5858
 11859  000900                     u5510:
 11860  000900  B257               	btfsc	_flags^0,1,c
 11861  000902  EF85  F004         	goto	u5521
 11862  000906  EF87  F004         	goto	u5520
 11863  00090A                     u5521:
 11864  00090A  EFCE  F003         	goto	l5838
 11865  00090E                     u5520:
 11866  00090E                     l5858:
 11867                           
 11868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 11869  00090E  503A               	movf	dtoa@s^0,w,c
 11870  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
 11871  000912  A4D8               	btfss	status,2,c
 11872  000914  EF8E  F004         	goto	u5531
 11873  000918  EF90  F004         	goto	u5530
 11874  00091C                     u5531:
 11875  00091C  EF97  F004         	goto	l5862
 11876  000920                     u5530:
 11877  000920  A457               	btfss	_flags^0,2,c
 11878  000922  EF95  F004         	goto	u5541
 11879  000926  EF97  F004         	goto	u5540
 11880  00092A                     u5541:
 11881  00092A  EFB5  F004         	goto	l5872
 11882  00092E                     u5540:
 11883  00092E                     l5862:
 11884                           
 11885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 11886  00092E  0644               	decf	dtoa@i^0,f,c
 11887  000930  A0D8               	btfss	status,0,c
 11888  000932  0645               	decf	(dtoa@i+1)^0,f,c
 11889  000934                     
 11890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 11891  000934  503A               	movf	dtoa@s^0,w,c
 11892  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
 11893  000938  A4D8               	btfss	status,2,c
 11894  00093A  EFA1  F004         	goto	u5551
 11895  00093E  EFA3  F004         	goto	u5550
 11896  000942                     u5551:
 11897  000942  EFA9  F004         	goto	l5868
 11898  000946                     u5550:
 11899  000946  0E00               	movlw	0
 11900  000948  6E35               	movwf	(_dtoa$1502+1)^0,c
 11901  00094A  0E2B               	movlw	43
 11902  00094C  6E34               	movwf	_dtoa$1502^0,c
 11903  00094E  EFAD  F004         	goto	l5870
 11904  000952                     l5868:
 11905  000952  0E00               	movlw	0
 11906  000954  6E35               	movwf	(_dtoa$1502+1)^0,c
 11907  000956  0E2D               	movlw	45
 11908  000958  6E34               	movwf	_dtoa$1502^0,c
 11909  00095A                     l5870:
 11910  00095A  0EA9               	movlw	low _dbuf
 11911  00095C  2444               	addwf	dtoa@i^0,w,c
 11912  00095E  6ED9               	movwf	fsr2l,c
 11913  000960  0E01               	movlw	high _dbuf
 11914  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
 11915  000964  6EDA               	movwf	fsr2h,c
 11916  000966  C034  FFDF         	movff	_dtoa$1502,indf2
 11917  00096A                     l5872:
 11918                           
 11919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 11920  00096A  C022  F017         	movff	dtoa@fp,pad@fp
 11921  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 11922  000972  0EA9               	movlw	low _dbuf
 11923  000974  2444               	addwf	dtoa@i^0,w,c
 11924  000976  6E19               	movwf	pad@buf^0,c
 11925  000978  0E01               	movlw	high _dbuf
 11926  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
 11927  00097C  6E1A               	movwf	(pad@buf+1)^0,c
 11928  00097E  C038  F01B         	movff	dtoa@w,pad@p
 11929  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
 11930  000986  ECF7  F013         	call	_pad	;wreg free
 11931  00098A  C017  F022         	movff	?_pad,?_dtoa
 11932  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
 11933  000992  0012               	return		;funcret
 11934  000994                     __end_of_dtoa:
 11935                           	opt callstack 0
 11936                           
 11937 ;; *************** function _pad *****************
 11938 ;; Defined at:
 11939 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 11942 ;;		 -> NULL(0), 
 11943 ;;  buf             2   24[COMRAM] PTR unsigned char 
 11944 ;;		 -> dbuf(32), 
 11945 ;;  p               2   26[COMRAM] int 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  w               2   31[COMRAM] int 
 11948 ;;  i               2   29[COMRAM] int 
 11949 ;; Return value:  Size  Location     Type
 11950 ;;                  2   22[COMRAM] int 
 11951 ;; Registers used:
 11952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11953 ;; Tracked objects:
 11954 ;;		On entry : 0/0
 11955 ;;		On exit  : 0/0
 11956 ;;		Unchanged: 0/0
 11957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11958 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11959 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11961 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11962 ;;Total ram usage:       11 bytes
 11963 ;; Hardware stack levels used:    1
 11964 ;; Hardware stack levels required when called:    8
 11965 ;; This function calls:
 11966 ;;		_fputc
 11967 ;;		_fputs
 11968 ;;		_strlen
 11969 ;; This function is called by:
 11970 ;;		_dtoa
 11971 ;;		_utoa
 11972 ;;		_xtoa
 11973 ;; This function uses a non-reentrant model
 11974 ;;
 11975                           
 11976                           	psect	text65
 11977  0027EE                     __ptext65:
 11978                           	opt callstack 0
 11979  0027EE                     _pad:
 11980                           	opt callstack 18
 11981  0027EE                     
 11982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11983  0027EE  A057               	btfss	_flags^0,0,c
 11984  0027F0  EFFC  F013         	goto	u5051
 11985  0027F4  EFFE  F013         	goto	u5050
 11986  0027F8                     u5051:
 11987  0027F8  EF08  F014         	goto	l5634
 11988  0027FC                     u5050:
 11989  0027FC                     
 11990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11991  0027FC  C019  F010         	movff	pad@buf,fputs@s
 11992  002800  C01A  F011         	movff	pad@buf+1,fputs@s+1
 11993  002804  C017  F012         	movff	pad@fp,fputs@fp
 11994  002808  C018  F013         	movff	pad@fp+1,fputs@fp+1
 11995  00280C  EC98  F01A         	call	_fputs	;wreg free
 11996  002810                     l5634:
 11997                           
 11998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11999  002810  BE1C               	btfsc	(pad@p+1)^0,7,c
 12000  002812  EF0D  F014         	goto	u5061
 12001  002816  EF0F  F014         	goto	u5060
 12002  00281A                     u5061:
 12003  00281A  EF15  F014         	goto	l5638
 12004  00281E                     u5060:
 12005  00281E  C01B  F020         	movff	pad@p,pad@w
 12006  002822  C01C  F021         	movff	pad@p+1,pad@w+1
 12007  002826  EF19  F014         	goto	l937
 12008  00282A                     l5638:
 12009  00282A  0E00               	movlw	0
 12010  00282C  6E21               	movwf	(pad@w+1)^0,c
 12011  00282E  0E00               	movlw	0
 12012  002830  6E20               	movwf	pad@w^0,c
 12013  002832                     l937:
 12014                           
 12015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12016  002832  0E00               	movlw	0
 12017  002834  6E1F               	movwf	(pad@i+1)^0,c
 12018  002836  0E00               	movlw	0
 12019  002838  6E1E               	movwf	pad@i^0,c
 12020                           
 12021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12022  00283A  EF2B  F014         	goto	l5644
 12023  00283E                     l5640:
 12024                           
 12025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12026  00283E  0E00               	movlw	0
 12027  002840  6E08               	movwf	(fputc@c+1)^0,c
 12028  002842  0E20               	movlw	32
 12029  002844  6E07               	movwf	fputc@c^0,c
 12030  002846  C017  F009         	movff	pad@fp,fputc@fp
 12031  00284A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12032  00284E  EC18  F015         	call	_fputc	;wreg free
 12033  002852                     
 12034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12035  002852  4A1E               	infsnz	pad@i^0,f,c
 12036  002854  2A1F               	incf	(pad@i+1)^0,f,c
 12037  002856                     l5644:
 12038                           
 12039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12040  002856  5020               	movf	pad@w^0,w,c
 12041  002858  5C1E               	subwf	pad@i^0,w,c
 12042  00285A  501F               	movf	(pad@i+1)^0,w,c
 12043  00285C  0A80               	xorlw	128
 12044  00285E  6E1D               	movwf	??_pad^0,c
 12045  002860  5021               	movf	(pad@w+1)^0,w,c
 12046  002862  0A80               	xorlw	128
 12047  002864  581D               	subwfb	??_pad^0,w,c
 12048  002866  A0D8               	btfss	status,0,c
 12049  002868  EF38  F014         	goto	u5071
 12050  00286C  EF3A  F014         	goto	u5070
 12051  002870                     u5071:
 12052  002870  EF1F  F014         	goto	l5640
 12053  002874                     u5070:
 12054  002874                     
 12055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12056  002874  B057               	btfsc	_flags^0,0,c
 12057  002876  EF3F  F014         	goto	u5081
 12058  00287A  EF41  F014         	goto	u5080
 12059  00287E                     u5081:
 12060  00287E  EF4B  F014         	goto	l5648
 12061  002882                     u5080:
 12062  002882                     
 12063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12064  002882  C019  F010         	movff	pad@buf,fputs@s
 12065  002886  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12066  00288A  C017  F012         	movff	pad@fp,fputs@fp
 12067  00288E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12068  002892  EC98  F01A         	call	_fputs	;wreg free
 12069  002896                     l5648:
 12070                           
 12071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12072  002896  C019  F005         	movff	pad@buf,strlen@s
 12073  00289A  C01A  F006         	movff	pad@buf+1,strlen@s+1
 12074  00289E  ECB7  F019         	call	_strlen	;wreg free
 12075  0028A2  5020               	movf	pad@w^0,w,c
 12076  0028A4  2405               	addwf	?_strlen^0,w,c
 12077  0028A6  6E17               	movwf	?_pad^0,c
 12078  0028A8  5021               	movf	(pad@w+1)^0,w,c
 12079  0028AA  2006               	addwfc	(?_strlen+1)^0,w,c
 12080  0028AC  6E18               	movwf	(?_pad+1)^0,c
 12081  0028AE  0012               	return		;funcret
 12082  0028B0                     __end_of_pad:
 12083                           	opt callstack 0
 12084                           
 12085 ;; *************** function _strlen *****************
 12086 ;; Defined at:
 12087 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 12088 ;; Parameters:    Size  Location     Type
 12089 ;;  s               2    4[COMRAM] PTR const unsigned char 
 12090 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1427(20), 
 12091 ;;		 -> ValidateCmd@ConfName_1423(20), ValidateCmd@ConfName(20), STR_24(9), STR_23(12), 
 12092 ;;		 -> Command(16), 
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;  a               2    6[COMRAM] PTR const unsigned char 
 12095 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1427(20), 
 12096 ;;		 -> ValidateCmd@ConfName_1423(20), ValidateCmd@ConfName(20), STR_24(9), STR_23(12), 
 12097 ;;		 -> Command(16), 
 12098 ;; Return value:  Size  Location     Type
 12099 ;;                  2    4[COMRAM] unsigned int 
 12100 ;; Registers used:
 12101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 12102 ;; Tracked objects:
 12103 ;;		On entry : 0/0
 12104 ;;		On exit  : 0/0
 12105 ;;		Unchanged: 0/0
 12106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12110 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12111 ;;Total ram usage:        4 bytes
 12112 ;; Hardware stack levels used:    1
 12113 ;; Hardware stack levels required when called:    4
 12114 ;; This function calls:
 12115 ;;		Nothing
 12116 ;; This function is called by:
 12117 ;;		_ReadRX232
 12118 ;;		_SaveCardDat
 12119 ;;		_pad
 12120 ;;		_stoa
 12121 ;;		_strcat
 12122 ;;		_RecSerNum
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           	psect	text66
 12127  00336E                     __ptext66:
 12128                           	opt callstack 0
 12129  00336E                     _strlen:
 12130                           	opt callstack 21
 12131  00336E  C005  F007         	movff	strlen@s,strlen@a
 12132  003372  C006  F008         	movff	strlen@s+1,strlen@a+1
 12133  003376  EFBF  F019         	goto	l5612
 12134  00337A                     l5610:
 12135  00337A  4A05               	infsnz	strlen@s^0,f,c
 12136  00337C  2A06               	incf	(strlen@s+1)^0,f,c
 12137  00337E                     l5612:
 12138  00337E  C005  FFF6         	movff	strlen@s,tblptrl
 12139  003382  C006  FFF7         	movff	strlen@s+1,tblptrh
 12140  003386  0E00               	movlw	low (__mediumconst shr (0+16))
 12141  003388  6EF8               	movwf	tblptru,c
 12142  00338A  0E0E               	movlw	(high __ramtop+-1)
 12143  00338C  64F7               	cpfsgt	tblptrh,c
 12144  00338E  D003               	bra	u5007
 12145  003390  0008               	tblrd		*
 12146  003392  50F5               	movf	tablat,w,c
 12147  003394  D005               	bra	u5000
 12148  003396                     u5007:
 12149  003396  CFF6 FFE9          	movff	tblptrl,fsr0l
 12150  00339A  CFF7 FFEA          	movff	tblptrh,fsr0h
 12151  00339E  50EF               	movf	indf0,w,c
 12152  0033A0                     u5000:
 12153  0033A0  0900               	iorlw	0
 12154  0033A2  A4D8               	btfss	status,2,c
 12155  0033A4  EFD6  F019         	goto	u5011
 12156  0033A8  EFD8  F019         	goto	u5010
 12157  0033AC                     u5011:
 12158  0033AC  EFBD  F019         	goto	l5610
 12159  0033B0                     u5010:
 12160  0033B0  5007               	movf	strlen@a^0,w,c
 12161  0033B2  5C05               	subwf	strlen@s^0,w,c
 12162  0033B4  6E05               	movwf	?_strlen^0,c
 12163  0033B6  5008               	movf	(strlen@a+1)^0,w,c
 12164  0033B8  5806               	subwfb	(strlen@s+1)^0,w,c
 12165  0033BA  6E06               	movwf	(?_strlen+1)^0,c
 12166  0033BC  0012               	return		;funcret
 12167  0033BE                     __end_of_strlen:
 12168                           	opt callstack 0
 12169                           
 12170 ;; *************** function _fputs *****************
 12171 ;; Defined at:
 12172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12175 ;;		 -> dbuf(32), 
 12176 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12177 ;;		 -> NULL(0), 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  i               2   20[COMRAM] int 
 12180 ;;  c               1   19[COMRAM] unsigned char 
 12181 ;; Return value:  Size  Location     Type
 12182 ;;                  2   15[COMRAM] int 
 12183 ;; Registers used:
 12184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12185 ;; Tracked objects:
 12186 ;;		On entry : 0/0
 12187 ;;		On exit  : 0/0
 12188 ;;		Unchanged: 0/0
 12189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;Total ram usage:        7 bytes
 12195 ;; Hardware stack levels used:    1
 12196 ;; Hardware stack levels required when called:    7
 12197 ;; This function calls:
 12198 ;;		_fputc
 12199 ;; This function is called by:
 12200 ;;		_pad
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text67
 12205  003530                     __ptext67:
 12206                           	opt callstack 0
 12207  003530                     _fputs:
 12208                           	opt callstack 18
 12209  003530  0E00               	movlw	0
 12210  003532  6E16               	movwf	(fputs@i+1)^0,c
 12211  003534  0E00               	movlw	0
 12212  003536  6E15               	movwf	fputs@i^0,c
 12213  003538  EFA9  F01A         	goto	l5624
 12214  00353C                     l5620:
 12215  00353C  C014  F007         	movff	fputs@c,fputc@c
 12216  003540  6A08               	clrf	(fputc@c+1)^0,c
 12217  003542  C012  F009         	movff	fputs@fp,fputc@fp
 12218  003546  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12219  00354A  EC18  F015         	call	_fputc	;wreg free
 12220  00354E  4A15               	infsnz	fputs@i^0,f,c
 12221  003550  2A16               	incf	(fputs@i+1)^0,f,c
 12222  003552                     l5624:
 12223  003552  5015               	movf	fputs@i^0,w,c
 12224  003554  2410               	addwf	fputs@s^0,w,c
 12225  003556  6ED9               	movwf	fsr2l,c
 12226  003558  5016               	movf	(fputs@i+1)^0,w,c
 12227  00355A  2011               	addwfc	(fputs@s+1)^0,w,c
 12228  00355C  6EDA               	movwf	fsr2h,c
 12229  00355E  50DF               	movf	indf2,w,c
 12230  003560  6E14               	movwf	fputs@c^0,c
 12231  003562  5014               	movf	fputs@c^0,w,c
 12232  003564  A4D8               	btfss	status,2,c
 12233  003566  EFB7  F01A         	goto	u5021
 12234  00356A  EFB9  F01A         	goto	u5020
 12235  00356E                     u5021:
 12236  00356E  EF9E  F01A         	goto	l5620
 12237  003572                     u5020:
 12238  003572  0012               	return		;funcret
 12239  003574                     __end_of_fputs:
 12240                           	opt callstack 0
 12241                           
 12242 ;; *************** function _fputc *****************
 12243 ;; Defined at:
 12244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;  c               2    6[COMRAM] int 
 12247 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12248 ;;		 -> NULL(0), 
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;		None
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  2    6[COMRAM] int 
 12253 ;; Registers used:
 12254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12262 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12263 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12264 ;;Total ram usage:        9 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; Hardware stack levels required when called:    6
 12267 ;; This function calls:
 12268 ;;		_putch
 12269 ;; This function is called by:
 12270 ;;		_pad
 12271 ;;		_stoa
 12272 ;;		_vfpfcnvrt
 12273 ;;		_fputs
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text68
 12278  002A30                     __ptext68:
 12279                           	opt callstack 0
 12280  002A30                     _fputc:
 12281                           	opt callstack 18
 12282  002A30  5009               	movf	fputc@fp^0,w,c
 12283  002A32  100A               	iorwf	(fputc@fp+1)^0,w,c
 12284  002A34  B4D8               	btfsc	status,2,c
 12285  002A36  EF1F  F015         	goto	u4961
 12286  002A3A  EF21  F015         	goto	u4960
 12287  002A3E                     u4961:
 12288  002A3E  EF2A  F015         	goto	l5598
 12289  002A42                     u4960:
 12290  002A42  5009               	movf	fputc@fp^0,w,c
 12291  002A44  100A               	iorwf	(fputc@fp+1)^0,w,c
 12292  002A46  A4D8               	btfss	status,2,c
 12293  002A48  EF28  F015         	goto	u4971
 12294  002A4C  EF2A  F015         	goto	u4970
 12295  002A50                     u4971:
 12296  002A50  EF2F  F015         	goto	l5600
 12297  002A54                     u4970:
 12298  002A54                     l5598:
 12299  002A54  5007               	movf	fputc@c^0,w,c
 12300  002A56  ECA3  F01C         	call	_putch
 12301  002A5A  EF62  F015         	goto	l1837
 12302  002A5E                     l5600:
 12303  002A5E  EE20 F004          	lfsr	2,4
 12304  002A62  5009               	movf	fputc@fp^0,w,c
 12305  002A64  26D9               	addwf	fsr2l,f,c
 12306  002A66  500A               	movf	(fputc@fp+1)^0,w,c
 12307  002A68  22DA               	addwfc	fsr2h,f,c
 12308  002A6A  50DE               	movf	postinc2,w,c
 12309  002A6C  10DE               	iorwf	postinc2,w,c
 12310  002A6E  B4D8               	btfsc	status,2,c
 12311  002A70  EF3C  F015         	goto	u4981
 12312  002A74  EF3E  F015         	goto	u4980
 12313  002A78                     u4981:
 12314  002A78  EF59  F015         	goto	l5604
 12315  002A7C                     u4980:
 12316  002A7C  EE20 F004          	lfsr	2,4
 12317  002A80  5009               	movf	fputc@fp^0,w,c
 12318  002A82  26D9               	addwf	fsr2l,f,c
 12319  002A84  500A               	movf	(fputc@fp+1)^0,w,c
 12320  002A86  22DA               	addwfc	fsr2h,f,c
 12321  002A88  EE10 F002          	lfsr	1,2
 12322  002A8C  5009               	movf	fputc@fp^0,w,c
 12323  002A8E  26E1               	addwf	fsr1l,f,c
 12324  002A90  500A               	movf	(fputc@fp+1)^0,w,c
 12325  002A92  22E2               	addwfc	fsr1h,f,c
 12326  002A94  50DE               	movf	postinc2,w,c
 12327  002A96  5CE6               	subwf	postinc1,w,c
 12328  002A98  50E6               	movf	postinc1,w,c
 12329  002A9A  0A80               	xorlw	128
 12330  002A9C  6E0F               	movwf	(??_fputc+4)^0,c
 12331  002A9E  50DE               	movf	postinc2,w,c
 12332  002AA0  0A80               	xorlw	128
 12333  002AA2  580F               	subwfb	(??_fputc+4)^0,w,c
 12334  002AA4  B0D8               	btfsc	status,0,c
 12335  002AA6  EF57  F015         	goto	u4991
 12336  002AAA  EF59  F015         	goto	u4990
 12337  002AAE                     u4991:
 12338  002AAE  EF62  F015         	goto	l1837
 12339  002AB2                     u4990:
 12340  002AB2                     l5604:
 12341  002AB2  EE20 F002          	lfsr	2,2
 12342  002AB6  5009               	movf	fputc@fp^0,w,c
 12343  002AB8  26D9               	addwf	fsr2l,f,c
 12344  002ABA  500A               	movf	(fputc@fp+1)^0,w,c
 12345  002ABC  22DA               	addwfc	fsr2h,f,c
 12346  002ABE  2ADE               	incf	postinc2,f,c
 12347  002AC0  0E00               	movlw	0
 12348  002AC2  22DD               	addwfc	postdec2,f,c
 12349  002AC4                     l1837:
 12350  002AC4  0012               	return		;funcret
 12351  002AC6                     __end_of_fputc:
 12352                           	opt callstack 0
 12353                           
 12354 ;; *************** function _putch *****************
 12355 ;; Defined at:
 12356 ;;		line 201 in file "mcc_generated_files/eusart2.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  txData          1    wreg     unsigned char 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  txData          1    5[COMRAM] unsigned char 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;Total ram usage:        1 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:    5
 12377 ;; This function calls:
 12378 ;;		_EUSART2_Write
 12379 ;; This function is called by:
 12380 ;;		_fputc
 12381 ;; This function uses a non-reentrant model
 12382 ;;
 12383                           
 12384                           	psect	text69
 12385  003946                     __ptext69:
 12386                           	opt callstack 0
 12387  003946                     _putch:
 12388                           	opt callstack 18
 12389                           
 12390                           ;incstack = 0
 12391                           ;putch@txData stored from wreg
 12392  003946  6E06               	movwf	putch@txData^0,c
 12393  003948                     
 12394                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
 12395  003948  5006               	movf	putch@txData^0,w,c
 12396  00394A  EC4A  F018         	call	_EUSART2_Write
 12397  00394E  0012               	return		;funcret
 12398  003950                     __end_of_putch:
 12399                           	opt callstack 0
 12400                           
 12401 ;; *************** function _EUSART2_Write *****************
 12402 ;; Defined at:
 12403 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  txData          1    wreg     unsigned char 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  txData          1    4[COMRAM] unsigned char 
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12421 ;;Total ram usage:        1 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:    4
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_putch
 12428 ;;		_ReadRX232
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text70
 12433  003094                     __ptext70:
 12434                           	opt callstack 0
 12435  003094                     _EUSART2_Write:
 12436                           	opt callstack 18
 12437                           
 12438                           ;incstack = 0
 12439                           ;EUSART2_Write@txData stored from wreg
 12440  003094  6E05               	movwf	EUSART2_Write@txData^0,c
 12441  003096                     l5576:
 12442                           
 12443                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 12444  003096  0101               	movlb	1	; () banked
 12445  003098  51ED               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 12446  00309A  B4D8               	btfsc	status,2,c
 12447  00309C  EF52  F018         	goto	u4931
 12448  0030A0  EF54  F018         	goto	u4930
 12449  0030A4                     u4931:
 12450  0030A4  EF4B  F018         	goto	l5576
 12451  0030A8                     u4930:
 12452  0030A8                     
 12453                           ; BSR set to: 1
 12454                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 12455  0030A8  010E               	movlb	14	; () banked
 12456  0030AA  BDC5               	btfsc	197,6,b	;volatile
 12457  0030AC  EF5A  F018         	goto	u4941
 12458  0030B0  EF5C  F018         	goto	u4940
 12459  0030B4                     u4941:
 12460  0030B4  EF60  F018         	goto	l321
 12461  0030B8                     u4940:
 12462  0030B8                     
 12463                           ; BSR set to: 14
 12464                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 12465  0030B8  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 12466                           
 12467                           ;mcc_generated_files/eusart2.c: 182:     }
 12468  0030BC  EF77  F018         	goto	l5590
 12469  0030C0                     l321:
 12470                           
 12471                           ; BSR set to: 14
 12472                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 12473  0030C0  9DC5               	bcf	197,6,b	;volatile
 12474  0030C2                     
 12475                           ; BSR set to: 14
 12476                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 12477  0030C2  0E9F               	movlw	low _eusart2TxBuffer
 12478  0030C4  0100               	movlb	0	; () banked
 12479  0030C6  25BB               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 12480  0030C8  6ED9               	movwf	fsr2l,c
 12481  0030CA  6ADA               	clrf	fsr2h,c
 12482  0030CC  0E01               	movlw	high _eusart2TxBuffer
 12483  0030CE  22DA               	addwfc	fsr2h,f,c
 12484  0030D0  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 12485  0030D4                     
 12486                           ; BSR set to: 0
 12487  0030D4  2BBB               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 12488  0030D6                     
 12489                           ; BSR set to: 0
 12490                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 12491  0030D6  0E07               	movlw	7
 12492  0030D8  65BB               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 12493  0030DA  EF71  F018         	goto	u4951
 12494  0030DE  EF73  F018         	goto	u4950
 12495  0030E2                     u4951:
 12496  0030E2  EF75  F018         	goto	l5588
 12497  0030E6                     u4950:
 12498  0030E6                     
 12499                           ; BSR set to: 0
 12500                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 12501  0030E6  0E00               	movlw	0
 12502  0030E8  6FBB               	movwf	_eusart2TxHead& (0+255),b	;volatile
 12503  0030EA                     l5588:
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 12507  0030EA  0101               	movlb	1	; () banked
 12508  0030EC  07ED               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 12509  0030EE                     l5590:
 12510                           
 12511                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 12512  0030EE  010E               	movlb	14	; () banked
 12513  0030F0  8DC5               	bsf	197,6,b	;volatile
 12514  0030F2                     
 12515                           ; BSR set to: 14
 12516  0030F2  0012               	return		;funcret
 12517  0030F4                     __end_of_EUSART2_Write:
 12518                           	opt callstack 0
 12519                           
 12520 ;; *************** function _abs *****************
 12521 ;; Defined at:
 12522 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  a               2   22[COMRAM] int 
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  2   22[COMRAM] int 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12540 ;;Total ram usage:        4 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; Hardware stack levels required when called:    4
 12543 ;; This function calls:
 12544 ;;		Nothing
 12545 ;; This function is called by:
 12546 ;;		_dtoa
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           	psect	text71
 12551  0035F8                     __ptext71:
 12552                           	opt callstack 0
 12553  0035F8                     _abs:
 12554                           	opt callstack 22
 12555  0035F8  BE18               	btfsc	(abs@a+1)^0,7,c
 12556  0035FA  EF09  F01B         	goto	u5090
 12557  0035FE  5018               	movf	(abs@a+1)^0,w,c
 12558  003600  E106               	bnz	u5091
 12559  003602  0417               	decf	abs@a^0,w,c
 12560  003604  B0D8               	btfsc	status,0,c
 12561  003606  EF07  F01B         	goto	u5091
 12562  00360A  EF09  F01B         	goto	u5090
 12563  00360E                     u5091:
 12564  00360E  EF17  F01B         	goto	l1755
 12565  003612                     u5090:
 12566  003612  C017  F019         	movff	abs@a,??_abs
 12567  003616  C018  F01A         	movff	abs@a+1,??_abs+1
 12568  00361A  1E19               	comf	??_abs^0,f,c
 12569  00361C  1E1A               	comf	(??_abs+1)^0,f,c
 12570  00361E  4A19               	infsnz	??_abs^0,f,c
 12571  003620  2A1A               	incf	(??_abs+1)^0,f,c
 12572  003622  C019  F017         	movff	??_abs,?_abs
 12573  003626  C01A  F018         	movff	??_abs+1,?_abs+1
 12574  00362A  EF1B  F01B         	goto	l1758
 12575  00362E                     l1755:
 12576  00362E  C017  F017         	movff	abs@a,?_abs
 12577  003632  C018  F018         	movff	abs@a+1,?_abs+1
 12578  003636                     l1758:
 12579  003636  0012               	return		;funcret
 12580  003638                     __end_of_abs:
 12581                           	opt callstack 0
 12582                           
 12583 ;; *************** function ___aomod *****************
 12584 ;; Defined at:
 12585 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;  dividend        8    4[COMRAM] long long 
 12588 ;;  divisor         8   12[COMRAM] long long 
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;  sign            1   21[COMRAM] unsigned char 
 12591 ;;  counter         1   20[COMRAM] unsigned char 
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  8    4[COMRAM] long long 
 12594 ;; Registers used:
 12595 ;;		wreg, status,2, status,0
 12596 ;; Tracked objects:
 12597 ;;		On entry : 0/0
 12598 ;;		On exit  : 0/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12601 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12604 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12605 ;;Total ram usage:       18 bytes
 12606 ;; Hardware stack levels used:    1
 12607 ;; Hardware stack levels required when called:    4
 12608 ;; This function calls:
 12609 ;;		Nothing
 12610 ;; This function is called by:
 12611 ;;		_dtoa
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           	psect	text72
 12616  001B94                     __ptext72:
 12617                           	opt callstack 0
 12618  001B94                     ___aomod:
 12619                           	opt callstack 22
 12620  001B94  0E00               	movlw	0
 12621  001B96  6E16               	movwf	___aomod@sign^0,c
 12622  001B98  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 12623  001B9A  EFD3  F00D         	goto	u5260
 12624  001B9E  EFD1  F00D         	goto	u5261
 12625  001BA2                     u5261:
 12626  001BA2  EFE5  F00D         	goto	l5736
 12627  001BA6                     u5260:
 12628  001BA6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 12629  001BA8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 12630  001BAA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 12631  001BAC  1E09               	comf	(___aomod@dividend+4)^0,f,c
 12632  001BAE  1E08               	comf	(___aomod@dividend+3)^0,f,c
 12633  001BB0  1E07               	comf	(___aomod@dividend+2)^0,f,c
 12634  001BB2  1E06               	comf	(___aomod@dividend+1)^0,f,c
 12635  001BB4  6C05               	negf	___aomod@dividend^0,c
 12636  001BB6  0E00               	movlw	0
 12637  001BB8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 12638  001BBA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 12639  001BBC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 12640  001BBE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 12641  001BC0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 12642  001BC2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 12643  001BC4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 12644  001BC6  0E01               	movlw	1
 12645  001BC8  6E16               	movwf	___aomod@sign^0,c
 12646  001BCA                     l5736:
 12647  001BCA  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 12648  001BCC  EFEC  F00D         	goto	u5270
 12649  001BD0  EFEA  F00D         	goto	u5271
 12650  001BD4                     u5271:
 12651  001BD4  EFFC  F00D         	goto	l5740
 12652  001BD8                     u5270:
 12653  001BD8  1E14               	comf	(___aomod@divisor+7)^0,f,c
 12654  001BDA  1E13               	comf	(___aomod@divisor+6)^0,f,c
 12655  001BDC  1E12               	comf	(___aomod@divisor+5)^0,f,c
 12656  001BDE  1E11               	comf	(___aomod@divisor+4)^0,f,c
 12657  001BE0  1E10               	comf	(___aomod@divisor+3)^0,f,c
 12658  001BE2  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 12659  001BE4  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 12660  001BE6  6C0D               	negf	___aomod@divisor^0,c
 12661  001BE8  0E00               	movlw	0
 12662  001BEA  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 12663  001BEC  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 12664  001BEE  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 12665  001BF0  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 12666  001BF2  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 12667  001BF4  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 12668  001BF6  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 12669  001BF8                     l5740:
 12670  001BF8  500D               	movf	___aomod@divisor^0,w,c
 12671  001BFA  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 12672  001BFC  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 12673  001BFE  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 12674  001C00  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 12675  001C02  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 12676  001C04  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 12677  001C06  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 12678  001C08  B4D8               	btfsc	status,2,c
 12679  001C0A  EF09  F00E         	goto	u5281
 12680  001C0E  EF0B  F00E         	goto	u5280
 12681  001C12                     u5281:
 12682  001C12  EF53  F00E         	goto	l5756
 12683  001C16                     u5280:
 12684  001C16  0E01               	movlw	1
 12685  001C18  6E15               	movwf	___aomod@counter^0,c
 12686  001C1A  EF19  F00E         	goto	l5746
 12687  001C1E                     l5744:
 12688  001C1E  90D8               	bcf	status,0,c
 12689  001C20  360D               	rlcf	___aomod@divisor^0,f,c
 12690  001C22  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 12691  001C24  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 12692  001C26  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 12693  001C28  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 12694  001C2A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 12695  001C2C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 12696  001C2E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 12697  001C30  2A15               	incf	___aomod@counter^0,f,c
 12698  001C32                     l5746:
 12699  001C32  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 12700  001C34  EF1E  F00E         	goto	u5291
 12701  001C38  EF20  F00E         	goto	u5290
 12702  001C3C                     u5291:
 12703  001C3C  EF0F  F00E         	goto	l5744
 12704  001C40                     u5290:
 12705  001C40                     l5748:
 12706  001C40  500D               	movf	___aomod@divisor^0,w,c
 12707  001C42  5C05               	subwf	___aomod@dividend^0,w,c
 12708  001C44  500E               	movf	(___aomod@divisor+1)^0,w,c
 12709  001C46  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 12710  001C48  500F               	movf	(___aomod@divisor+2)^0,w,c
 12711  001C4A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 12712  001C4C  5010               	movf	(___aomod@divisor+3)^0,w,c
 12713  001C4E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 12714  001C50  5011               	movf	(___aomod@divisor+4)^0,w,c
 12715  001C52  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 12716  001C54  5012               	movf	(___aomod@divisor+5)^0,w,c
 12717  001C56  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 12718  001C58  5013               	movf	(___aomod@divisor+6)^0,w,c
 12719  001C5A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 12720  001C5C  5014               	movf	(___aomod@divisor+7)^0,w,c
 12721  001C5E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 12722  001C60  A0D8               	btfss	status,0,c
 12723  001C62  EF35  F00E         	goto	u5301
 12724  001C66  EF37  F00E         	goto	u5300
 12725  001C6A                     u5301:
 12726  001C6A  EF47  F00E         	goto	l5752
 12727  001C6E                     u5300:
 12728  001C6E  500D               	movf	___aomod@divisor^0,w,c
 12729  001C70  5E05               	subwf	___aomod@dividend^0,f,c
 12730  001C72  500E               	movf	(___aomod@divisor+1)^0,w,c
 12731  001C74  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 12732  001C76  500F               	movf	(___aomod@divisor+2)^0,w,c
 12733  001C78  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 12734  001C7A  5010               	movf	(___aomod@divisor+3)^0,w,c
 12735  001C7C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 12736  001C7E  5011               	movf	(___aomod@divisor+4)^0,w,c
 12737  001C80  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 12738  001C82  5012               	movf	(___aomod@divisor+5)^0,w,c
 12739  001C84  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 12740  001C86  5013               	movf	(___aomod@divisor+6)^0,w,c
 12741  001C88  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 12742  001C8A  5014               	movf	(___aomod@divisor+7)^0,w,c
 12743  001C8C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 12744  001C8E                     l5752:
 12745  001C8E  90D8               	bcf	status,0,c
 12746  001C90  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 12747  001C92  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 12748  001C94  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 12749  001C96  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 12750  001C98  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 12751  001C9A  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 12752  001C9C  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 12753  001C9E  320D               	rrcf	___aomod@divisor^0,f,c
 12754  001CA0  2E15               	decfsz	___aomod@counter^0,f,c
 12755  001CA2  EF20  F00E         	goto	l5748
 12756  001CA6                     l5756:
 12757  001CA6  5016               	movf	___aomod@sign^0,w,c
 12758  001CA8  B4D8               	btfsc	status,2,c
 12759  001CAA  EF59  F00E         	goto	u5311
 12760  001CAE  EF5B  F00E         	goto	u5310
 12761  001CB2                     u5311:
 12762  001CB2  EF6B  F00E         	goto	l5760
 12763  001CB6                     u5310:
 12764  001CB6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 12765  001CB8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 12766  001CBA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 12767  001CBC  1E09               	comf	(___aomod@dividend+4)^0,f,c
 12768  001CBE  1E08               	comf	(___aomod@dividend+3)^0,f,c
 12769  001CC0  1E07               	comf	(___aomod@dividend+2)^0,f,c
 12770  001CC2  1E06               	comf	(___aomod@dividend+1)^0,f,c
 12771  001CC4  6C05               	negf	___aomod@dividend^0,c
 12772  001CC6  0E00               	movlw	0
 12773  001CC8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 12774  001CCA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 12775  001CCC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 12776  001CCE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 12777  001CD0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 12778  001CD2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 12779  001CD4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 12780  001CD6                     l5760:
 12781  001CD6  C005  F005         	movff	___aomod@dividend,?___aomod
 12782  001CDA  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 12783  001CDE  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 12784  001CE2  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 12785  001CE6  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 12786  001CEA  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 12787  001CEE  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 12788  001CF2  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 12789  001CF6  0012               	return		;funcret
 12790  001CF8                     __end_of___aomod:
 12791                           	opt callstack 0
 12792                           
 12793 ;; *************** function ___aodiv *****************
 12794 ;; Defined at:
 12795 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;  dividend        8    4[COMRAM] long long 
 12798 ;;  divisor         8   12[COMRAM] long long 
 12799 ;; Auto vars:     Size  Location     Type
 12800 ;;  quotient        8   22[COMRAM] long long 
 12801 ;;  sign            1   21[COMRAM] unsigned char 
 12802 ;;  counter         1   20[COMRAM] unsigned char 
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  8    4[COMRAM] long long 
 12805 ;; Registers used:
 12806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/0
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12812 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12813 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;Total ram usage:       26 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:    4
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_dtoa
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text73
 12827  001A0C                     __ptext73:
 12828                           	opt callstack 0
 12829  001A0C                     ___aodiv:
 12830                           	opt callstack 22
 12831  001A0C  0E00               	movlw	0
 12832  001A0E  6E16               	movwf	___aodiv@sign^0,c
 12833  001A10  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 12834  001A12  EF0F  F00D         	goto	u5190
 12835  001A16  EF0D  F00D         	goto	u5191
 12836  001A1A                     u5191:
 12837  001A1A  EF21  F00D         	goto	l5692
 12838  001A1E                     u5190:
 12839  001A1E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 12840  001A20  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 12841  001A22  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 12842  001A24  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 12843  001A26  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 12844  001A28  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 12845  001A2A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 12846  001A2C  6C0D               	negf	___aodiv@divisor^0,c
 12847  001A2E  0E00               	movlw	0
 12848  001A30  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 12849  001A32  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 12850  001A34  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 12851  001A36  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 12852  001A38  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 12853  001A3A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 12854  001A3C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 12855  001A3E  0E01               	movlw	1
 12856  001A40  6E16               	movwf	___aodiv@sign^0,c
 12857  001A42                     l5692:
 12858  001A42  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 12859  001A44  EF28  F00D         	goto	u5200
 12860  001A48  EF26  F00D         	goto	u5201
 12861  001A4C                     u5201:
 12862  001A4C  EF3A  F00D         	goto	l5698
 12863  001A50                     u5200:
 12864  001A50  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 12865  001A52  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 12866  001A54  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 12867  001A56  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 12868  001A58  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 12869  001A5A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 12870  001A5C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 12871  001A5E  6C05               	negf	___aodiv@dividend^0,c
 12872  001A60  0E00               	movlw	0
 12873  001A62  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 12874  001A64  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 12875  001A66  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 12876  001A68  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 12877  001A6A  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 12878  001A6C  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 12879  001A6E  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 12880  001A70  0E01               	movlw	1
 12881  001A72  1A16               	xorwf	___aodiv@sign^0,f,c
 12882  001A74                     l5698:
 12883  001A74  EE20  F017         	lfsr	2,___aodiv@quotient
 12884  001A78  0E07               	movlw	7
 12885  001A7A                     u5211:
 12886  001A7A  6ADE               	clrf	postinc2,c
 12887  001A7C  06E8               	decf	wreg,f,c
 12888  001A7E  E2FD               	bc	u5211
 12889  001A80  500D               	movf	___aodiv@divisor^0,w,c
 12890  001A82  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 12891  001A84  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 12892  001A86  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 12893  001A88  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 12894  001A8A  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 12895  001A8C  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 12896  001A8E  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 12897  001A90  B4D8               	btfsc	status,2,c
 12898  001A92  EF4D  F00D         	goto	u5221
 12899  001A96  EF4F  F00D         	goto	u5220
 12900  001A9A                     u5221:
 12901  001A9A  EFA1  F00D         	goto	l5720
 12902  001A9E                     u5220:
 12903  001A9E  0E01               	movlw	1
 12904  001AA0  6E15               	movwf	___aodiv@counter^0,c
 12905  001AA2  EF5D  F00D         	goto	l5706
 12906  001AA6                     l5704:
 12907  001AA6  90D8               	bcf	status,0,c
 12908  001AA8  360D               	rlcf	___aodiv@divisor^0,f,c
 12909  001AAA  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 12910  001AAC  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 12911  001AAE  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 12912  001AB0  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 12913  001AB2  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 12914  001AB4  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 12915  001AB6  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 12916  001AB8  2A15               	incf	___aodiv@counter^0,f,c
 12917  001ABA                     l5706:
 12918  001ABA  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 12919  001ABC  EF62  F00D         	goto	u5231
 12920  001AC0  EF64  F00D         	goto	u5230
 12921  001AC4                     u5231:
 12922  001AC4  EF53  F00D         	goto	l5704
 12923  001AC8                     u5230:
 12924  001AC8                     l5708:
 12925  001AC8  90D8               	bcf	status,0,c
 12926  001ACA  3617               	rlcf	___aodiv@quotient^0,f,c
 12927  001ACC  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 12928  001ACE  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 12929  001AD0  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 12930  001AD2  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 12931  001AD4  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 12932  001AD6  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 12933  001AD8  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 12934  001ADA  500D               	movf	___aodiv@divisor^0,w,c
 12935  001ADC  5C05               	subwf	___aodiv@dividend^0,w,c
 12936  001ADE  500E               	movf	(___aodiv@divisor+1)^0,w,c
 12937  001AE0  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 12938  001AE2  500F               	movf	(___aodiv@divisor+2)^0,w,c
 12939  001AE4  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 12940  001AE6  5010               	movf	(___aodiv@divisor+3)^0,w,c
 12941  001AE8  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 12942  001AEA  5011               	movf	(___aodiv@divisor+4)^0,w,c
 12943  001AEC  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 12944  001AEE  5012               	movf	(___aodiv@divisor+5)^0,w,c
 12945  001AF0  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 12946  001AF2  5013               	movf	(___aodiv@divisor+6)^0,w,c
 12947  001AF4  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 12948  001AF6  5014               	movf	(___aodiv@divisor+7)^0,w,c
 12949  001AF8  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 12950  001AFA  A0D8               	btfss	status,0,c
 12951  001AFC  EF82  F00D         	goto	u5241
 12952  001B00  EF84  F00D         	goto	u5240
 12953  001B04                     u5241:
 12954  001B04  EF95  F00D         	goto	l5716
 12955  001B08                     u5240:
 12956  001B08  500D               	movf	___aodiv@divisor^0,w,c
 12957  001B0A  5E05               	subwf	___aodiv@dividend^0,f,c
 12958  001B0C  500E               	movf	(___aodiv@divisor+1)^0,w,c
 12959  001B0E  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 12960  001B10  500F               	movf	(___aodiv@divisor+2)^0,w,c
 12961  001B12  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 12962  001B14  5010               	movf	(___aodiv@divisor+3)^0,w,c
 12963  001B16  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 12964  001B18  5011               	movf	(___aodiv@divisor+4)^0,w,c
 12965  001B1A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 12966  001B1C  5012               	movf	(___aodiv@divisor+5)^0,w,c
 12967  001B1E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 12968  001B20  5013               	movf	(___aodiv@divisor+6)^0,w,c
 12969  001B22  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 12970  001B24  5014               	movf	(___aodiv@divisor+7)^0,w,c
 12971  001B26  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 12972  001B28  8017               	bsf	___aodiv@quotient^0,0,c
 12973  001B2A                     l5716:
 12974  001B2A  90D8               	bcf	status,0,c
 12975  001B2C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 12976  001B2E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 12977  001B30  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 12978  001B32  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 12979  001B34  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 12980  001B36  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 12981  001B38  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 12982  001B3A  320D               	rrcf	___aodiv@divisor^0,f,c
 12983  001B3C  2E15               	decfsz	___aodiv@counter^0,f,c
 12984  001B3E  EF64  F00D         	goto	l5708
 12985  001B42                     l5720:
 12986  001B42  5016               	movf	___aodiv@sign^0,w,c
 12987  001B44  B4D8               	btfsc	status,2,c
 12988  001B46  EFA7  F00D         	goto	u5251
 12989  001B4A  EFA9  F00D         	goto	u5250
 12990  001B4E                     u5251:
 12991  001B4E  EFB9  F00D         	goto	l5724
 12992  001B52                     u5250:
 12993  001B52  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 12994  001B54  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 12995  001B56  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 12996  001B58  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 12997  001B5A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 12998  001B5C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 12999  001B5E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 13000  001B60  6C17               	negf	___aodiv@quotient^0,c
 13001  001B62  0E00               	movlw	0
 13002  001B64  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 13003  001B66  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 13004  001B68  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 13005  001B6A  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 13006  001B6C  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 13007  001B6E  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 13008  001B70  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 13009  001B72                     l5724:
 13010  001B72  C017  F005         	movff	___aodiv@quotient,?___aodiv
 13011  001B76  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 13012  001B7A  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 13013  001B7E  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 13014  001B82  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 13015  001B86  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 13016  001B8A  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 13017  001B8E  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 13018  001B92  0012               	return		;funcret
 13019  001B94                     __end_of___aodiv:
 13020                           	opt callstack 0
 13021                           
 13022 ;; *************** function _atoi *****************
 13023 ;; Defined at:
 13024 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13025 ;; Parameters:    Size  Location     Type
 13026 ;;  s               2   11[COMRAM] PTR const unsigned char 
 13027 ;;		 -> STR_54(29), STR_53(31), STR_51(30), STR_50(24), 
 13028 ;;		 -> STR_49(25), STR_48(17), STR_47(27), STR_46(33), 
 13029 ;;		 -> STR_44(46), STR_42(30), STR_41(24), STR_40(25), 
 13030 ;;		 -> STR_39(17), STR_38(27), STR_37(33), STR_35(36), 
 13031 ;;		 -> STR_34(67), STR_33(19), STR_32(55), STR_31(17), 
 13032 ;;		 -> STR_30(16), STR_29(4), STR_28(35), STR_27(55), 
 13033 ;;		 -> STR_26(53), STR_25(29), STR_22(43), STR_21(23), 
 13034 ;;		 -> STR_20(25), STR_19(61), STR_18(27), STR_17(21), 
 13035 ;;		 -> STR_16(24), STR_15(4), STR_14(23), STR_13(19), 
 13036 ;;		 -> STR_12(36), STR_11(4), STR_10(23), STR_9(32), 
 13037 ;;		 -> STR_8(28), STR_7(54), STR_6(24), STR_5(16), 
 13038 ;;		 -> STR_3(28), STR_2(21), STR_1(21), 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;  n               2   24[COMRAM] int 
 13041 ;;  neg             2   17[COMRAM] int 
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  2   11[COMRAM] int 
 13044 ;; Registers used:
 13045 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13052 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13054 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13055 ;;Total ram usage:       15 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; Hardware stack levels required when called:    5
 13058 ;; This function calls:
 13059 ;;		___wmul
 13060 ;;		_isdigit
 13061 ;;		_isspace
 13062 ;; This function is called by:
 13063 ;;		_vfpfcnvrt
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text74
 13068  001872                     __ptext74:
 13069                           	opt callstack 0
 13070  001872                     _atoi:
 13071                           	opt callstack 22
 13072  001872  0E00               	movlw	0
 13073  001874  6E1A               	movwf	(atoi@n+1)^0,c
 13074  001876  0E00               	movlw	0
 13075  001878  6E19               	movwf	atoi@n^0,c
 13076  00187A  0E00               	movlw	0
 13077  00187C  6E13               	movwf	(atoi@neg+1)^0,c
 13078  00187E  0E00               	movlw	0
 13079  001880  6E12               	movwf	atoi@neg^0,c
 13080  001882  EF45  F00C         	goto	l6024
 13081  001886                     l6022:
 13082  001886  4A0C               	infsnz	atoi@s^0,f,c
 13083  001888  2A0D               	incf	(atoi@s+1)^0,f,c
 13084  00188A                     l6024:
 13085  00188A  0E01               	movlw	1
 13086  00188C  6E18               	movwf	_atoi$2007^0,c
 13087  00188E  C00C  FFF6         	movff	atoi@s,tblptrl
 13088  001892  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13089  001896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13090  001896  6AF8               	clrf	tblptru,c
 13091  001898                     	endif
 13092  001898                     	if	0	;tblptru may be non-zero
 13093  001898                     	endif
 13094  001898  0008               	tblrd		*
 13095  00189A  50F5               	movf	tablat,w,c
 13096  00189C  0A20               	xorlw	32
 13097  00189E  B4D8               	btfsc	status,2,c
 13098  0018A0  EF54  F00C         	goto	u5901
 13099  0018A4  EF56  F00C         	goto	u5900
 13100  0018A8                     u5901:
 13101  0018A8  EF74  F00C         	goto	l6032
 13102  0018AC                     u5900:
 13103  0018AC  0EF7               	movlw	247
 13104  0018AE  6E0E               	movwf	??_atoi^0,c
 13105  0018B0  0EFF               	movlw	255
 13106  0018B2  6E0F               	movwf	(??_atoi+1)^0,c
 13107  0018B4  C00C  FFF6         	movff	atoi@s,tblptrl
 13108  0018B8  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13109  0018BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13110  0018BC  6AF8               	clrf	tblptru,c
 13111  0018BE                     	endif
 13112  0018BE                     	if	0	;tblptru may be non-zero
 13113  0018BE                     	endif
 13114  0018BE  0008               	tblrd		*
 13115  0018C0  50F5               	movf	tablat,w,c
 13116  0018C2  6E10               	movwf	(??_atoi+2)^0,c
 13117  0018C4  6A11               	clrf	(??_atoi+3)^0,c
 13118  0018C6  500E               	movf	??_atoi^0,w,c
 13119  0018C8  2610               	addwf	(??_atoi+2)^0,f,c
 13120  0018CA  500F               	movf	(??_atoi+1)^0,w,c
 13121  0018CC  2211               	addwfc	(??_atoi+3)^0,f,c
 13122  0018CE  5011               	movf	(??_atoi+3)^0,w,c
 13123  0018D0  E109               	bnz	u5910
 13124  0018D2  0E05               	movlw	5
 13125  0018D4  5C10               	subwf	(??_atoi+2)^0,w,c
 13126  0018D6  A0D8               	btfss	status,0,c
 13127  0018D8  EF70  F00C         	goto	u5911
 13128  0018DC  EF72  F00C         	goto	u5910
 13129  0018E0                     u5911:
 13130  0018E0  EF74  F00C         	goto	l6032
 13131  0018E4                     u5910:
 13132  0018E4  0E00               	movlw	0
 13133  0018E6  6E18               	movwf	_atoi$2007^0,c
 13134  0018E8                     l6032:
 13135  0018E8  C018  F014         	movff	_atoi$2007,_atoi$2006
 13136  0018EC  6A15               	clrf	(_atoi$2006+1)^0,c
 13137  0018EE  5014               	movf	_atoi$2006^0,w,c
 13138  0018F0  1015               	iorwf	(_atoi$2006+1)^0,w,c
 13139  0018F2  A4D8               	btfss	status,2,c
 13140  0018F4  EF7E  F00C         	goto	u5921
 13141  0018F8  EF80  F00C         	goto	u5920
 13142  0018FC                     u5921:
 13143  0018FC  EF43  F00C         	goto	l6022
 13144  001900                     u5920:
 13145  001900  EF8A  F00C         	goto	l6042
 13146  001904                     l6038:
 13147  001904  0E00               	movlw	0
 13148  001906  6E13               	movwf	(atoi@neg+1)^0,c
 13149  001908  0E01               	movlw	1
 13150  00190A  6E12               	movwf	atoi@neg^0,c
 13151  00190C                     l6040:
 13152  00190C  4A0C               	infsnz	atoi@s^0,f,c
 13153  00190E  2A0D               	incf	(atoi@s+1)^0,f,c
 13154  001910  EFC1  F00C         	goto	l6048
 13155  001914                     l6042:
 13156  001914  C00C  FFF6         	movff	atoi@s,tblptrl
 13157  001918  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13158  00191C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13159  00191C  6AF8               	clrf	tblptru,c
 13160  00191E                     	endif
 13161  00191E                     	if	0	;tblptru may be non-zero
 13162  00191E                     	endif
 13163  00191E  0008               	tblrd		*
 13164  001920  50F5               	movf	tablat,w,c
 13165  001922  6E0E               	movwf	??_atoi^0,c
 13166  001924  6A0F               	clrf	(??_atoi+1)^0,c
 13167                           
 13168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13169                           ; Switch size 1, requested type "simple"
 13170                           ; Number of cases is 1, Range of values is 0 to 0
 13171                           ; switch strategies available:
 13172                           ; Name         Instructions Cycles
 13173                           ; simple_byte            4     3 (average)
 13174                           ;	Chosen strategy is simple_byte
 13175  001926  500F               	movf	(??_atoi+1)^0,w,c
 13176  001928  0A00               	xorlw	0	; case 0
 13177  00192A  B4D8               	btfsc	status,2,c
 13178  00192C  EF9A  F00C         	goto	l7024
 13179  001930  EFC1  F00C         	goto	l6048
 13180  001934                     l7024:
 13181                           
 13182                           ; Switch size 1, requested type "simple"
 13183                           ; Number of cases is 2, Range of values is 43 to 45
 13184                           ; switch strategies available:
 13185                           ; Name         Instructions Cycles
 13186                           ; simple_byte            7     4 (average)
 13187                           ;	Chosen strategy is simple_byte
 13188  001934  500E               	movf	??_atoi^0,w,c
 13189  001936  0A2B               	xorlw	43	; case 43
 13190  001938  B4D8               	btfsc	status,2,c
 13191  00193A  EF86  F00C         	goto	l6040
 13192  00193E  0A06               	xorlw	6	; case 45
 13193  001940  B4D8               	btfsc	status,2,c
 13194  001942  EF82  F00C         	goto	l6038
 13195  001946  EFC1  F00C         	goto	l6048
 13196  00194A                     l6044:
 13197  00194A  C019  F005         	movff	atoi@n,___wmul@multiplier
 13198  00194E  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 13199  001952  0E00               	movlw	0
 13200  001954  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 13201  001956  0E0A               	movlw	10
 13202  001958  6E07               	movwf	___wmul@multiplicand^0,c
 13203  00195A  ECFD  F01B         	call	___wmul	;wreg free
 13204  00195E  C00C  FFF6         	movff	atoi@s,tblptrl
 13205  001962  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13206  001966                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13207  001966  6AF8               	clrf	tblptru,c
 13208  001968                     	endif
 13209  001968                     	if	0	;tblptru may be non-zero
 13210  001968                     	endif
 13211  001968  0008               	tblrd		*
 13212  00196A  50F5               	movf	tablat,w,c
 13213  00196C  5E05               	subwf	?___wmul^0,f,c
 13214  00196E  0E00               	movlw	0
 13215  001970  5A06               	subwfb	(?___wmul+1)^0,f,c
 13216  001972  0E30               	movlw	48
 13217  001974  2405               	addwf	?___wmul^0,w,c
 13218  001976  6E19               	movwf	atoi@n^0,c
 13219  001978  0E00               	movlw	0
 13220  00197A  2006               	addwfc	(?___wmul+1)^0,w,c
 13221  00197C  6E1A               	movwf	(atoi@n+1)^0,c
 13222  00197E  EF86  F00C         	goto	l6040
 13223  001982                     l6048:
 13224  001982  0ED0               	movlw	208
 13225  001984  6E0E               	movwf	??_atoi^0,c
 13226  001986  0EFF               	movlw	255
 13227  001988  6E0F               	movwf	(??_atoi+1)^0,c
 13228  00198A  C00C  FFF6         	movff	atoi@s,tblptrl
 13229  00198E  C00D  FFF7         	movff	atoi@s+1,tblptrh
 13230  001992                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13231  001992  6AF8               	clrf	tblptru,c
 13232  001994                     	endif
 13233  001994                     	if	0	;tblptru may be non-zero
 13234  001994                     	endif
 13235  001994  0008               	tblrd		*
 13236  001996  50F5               	movf	tablat,w,c
 13237  001998  6E10               	movwf	(??_atoi+2)^0,c
 13238  00199A  6A11               	clrf	(??_atoi+3)^0,c
 13239  00199C  500E               	movf	??_atoi^0,w,c
 13240  00199E  2610               	addwf	(??_atoi+2)^0,f,c
 13241  0019A0  500F               	movf	(??_atoi+1)^0,w,c
 13242  0019A2  2211               	addwfc	(??_atoi+3)^0,f,c
 13243  0019A4  5011               	movf	(??_atoi+3)^0,w,c
 13244  0019A6  E10A               	bnz	u5930
 13245  0019A8  0E0A               	movlw	10
 13246  0019AA  5C10               	subwf	(??_atoi+2)^0,w,c
 13247  0019AC  A0D8               	btfss	status,0,c
 13248  0019AE  EFDB  F00C         	goto	u5931
 13249  0019B2  EFDE  F00C         	goto	u5930
 13250  0019B6                     u5931:
 13251  0019B6  0E01               	movlw	1
 13252  0019B8  EFDF  F00C         	goto	u5940
 13253  0019BC                     u5930:
 13254  0019BC  0E00               	movlw	0
 13255  0019BE                     u5940:
 13256  0019BE  6E16               	movwf	_atoi$2008^0,c
 13257  0019C0  6A17               	clrf	(_atoi$2008+1)^0,c
 13258  0019C2  5016               	movf	_atoi$2008^0,w,c
 13259  0019C4  1017               	iorwf	(_atoi$2008+1)^0,w,c
 13260  0019C6  A4D8               	btfss	status,2,c
 13261  0019C8  EFE8  F00C         	goto	u5951
 13262  0019CC  EFEA  F00C         	goto	u5950
 13263  0019D0                     u5951:
 13264  0019D0  EFA5  F00C         	goto	l6044
 13265  0019D4                     u5950:
 13266  0019D4  5012               	movf	atoi@neg^0,w,c
 13267  0019D6  1013               	iorwf	(atoi@neg+1)^0,w,c
 13268  0019D8  A4D8               	btfss	status,2,c
 13269  0019DA  EFF1  F00C         	goto	u5961
 13270  0019DE  EFF3  F00C         	goto	u5960
 13271  0019E2                     u5961:
 13272  0019E2  EF01  F00D         	goto	l1786
 13273  0019E6                     u5960:
 13274  0019E6  C019  F00E         	movff	atoi@n,??_atoi
 13275  0019EA  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 13276  0019EE  1E0E               	comf	??_atoi^0,f,c
 13277  0019F0  1E0F               	comf	(??_atoi+1)^0,f,c
 13278  0019F2  4A0E               	infsnz	??_atoi^0,f,c
 13279  0019F4  2A0F               	incf	(??_atoi+1)^0,f,c
 13280  0019F6  C00E  F00C         	movff	??_atoi,?_atoi
 13281  0019FA  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 13282  0019FE  EF05  F00D         	goto	l1789
 13283  001A02                     l1786:
 13284  001A02  C019  F00C         	movff	atoi@n,?_atoi
 13285  001A06  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 13286  001A0A                     l1789:
 13287  001A0A  0012               	return		;funcret
 13288  001A0C                     __end_of_atoi:
 13289                           	opt callstack 0
 13290                           
 13291 ;; *************** function _isspace *****************
 13292 ;; Defined at:
 13293 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  c               2    4[COMRAM] int 
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;		None
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  2    4[COMRAM] int 
 13300 ;; Registers used:
 13301 ;;		wreg, status,2, status,0
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13309 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13310 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13311 ;;Total ram usage:        7 bytes
 13312 ;; Hardware stack levels used:    1
 13313 ;; Hardware stack levels required when called:    4
 13314 ;; This function calls:
 13315 ;;		Nothing
 13316 ;; This function is called by:
 13317 ;;		_atoi
 13318 ;; This function uses a non-reentrant model
 13319 ;;
 13320                           
 13321                           	psect	text75
 13322  00331C                     __ptext75:
 13323                           	opt callstack 0
 13324  00331C                     _isspace:
 13325                           	opt callstack 22
 13326  00331C  0E01               	movlw	1
 13327  00331E  6E0B               	movwf	_isspace$2033^0,c
 13328  003320  0E20               	movlw	32
 13329  003322  1805               	xorwf	isspace@c^0,w,c
 13330  003324  1006               	iorwf	(isspace@c+1)^0,w,c
 13331  003326  B4D8               	btfsc	status,2,c
 13332  003328  EF98  F019         	goto	u5391
 13333  00332C  EF9A  F019         	goto	u5390
 13334  003330                     u5391:
 13335  003330  EFB3  F019         	goto	l5810
 13336  003334                     u5390:
 13337  003334  0EF7               	movlw	247
 13338  003336  6E07               	movwf	??_isspace^0,c
 13339  003338  0EFF               	movlw	255
 13340  00333A  6E08               	movwf	(??_isspace+1)^0,c
 13341  00333C  C005  F009         	movff	isspace@c,??_isspace+2
 13342  003340  C006  F00A         	movff	isspace@c+1,??_isspace+3
 13343  003344  5007               	movf	??_isspace^0,w,c
 13344  003346  2609               	addwf	(??_isspace+2)^0,f,c
 13345  003348  5008               	movf	(??_isspace+1)^0,w,c
 13346  00334A  220A               	addwfc	(??_isspace+3)^0,f,c
 13347  00334C  500A               	movf	(??_isspace+3)^0,w,c
 13348  00334E  E109               	bnz	u5400
 13349  003350  0E05               	movlw	5
 13350  003352  5C09               	subwf	(??_isspace+2)^0,w,c
 13351  003354  A0D8               	btfss	status,0,c
 13352  003356  EFAF  F019         	goto	u5401
 13353  00335A  EFB1  F019         	goto	u5400
 13354  00335E                     u5401:
 13355  00335E  EFB3  F019         	goto	l5810
 13356  003362                     u5400:
 13357  003362  0E00               	movlw	0
 13358  003364  6E0B               	movwf	_isspace$2033^0,c
 13359  003366                     l5810:
 13360  003366  C00B  F005         	movff	_isspace$2033,?_isspace
 13361  00336A  6A06               	clrf	(?_isspace+1)^0,c
 13362  00336C  0012               	return		;funcret
 13363  00336E                     __end_of_isspace:
 13364                           	opt callstack 0
 13365                           
 13366 ;; *************** function _isdigit *****************
 13367 ;; Defined at:
 13368 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;  c               2    4[COMRAM] int 
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;		None
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  2    4[COMRAM] int 
 13375 ;; Registers used:
 13376 ;;		wreg, status,2, status,0
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13384 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13386 ;;Total ram usage:        6 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    4
 13389 ;; This function calls:
 13390 ;;		Nothing
 13391 ;; This function is called by:
 13392 ;;		_vfpfcnvrt
 13393 ;;		_atoi
 13394 ;; This function uses a non-reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text76
 13398  00371C                     __ptext76:
 13399                           	opt callstack 0
 13400  00371C                     _isdigit:
 13401                           	opt callstack 23
 13402  00371C  0ED0               	movlw	208
 13403  00371E  6E07               	movwf	??_isdigit^0,c
 13404  003720  0EFF               	movlw	255
 13405  003722  6E08               	movwf	(??_isdigit+1)^0,c
 13406  003724  C005  F009         	movff	isdigit@c,??_isdigit+2
 13407  003728  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 13408  00372C  5007               	movf	??_isdigit^0,w,c
 13409  00372E  2609               	addwf	(??_isdigit+2)^0,f,c
 13410  003730  5008               	movf	(??_isdigit+1)^0,w,c
 13411  003732  220A               	addwfc	(??_isdigit+3)^0,f,c
 13412  003734  500A               	movf	(??_isdigit+3)^0,w,c
 13413  003736  E10A               	bnz	u5170
 13414  003738  0E0A               	movlw	10
 13415  00373A  5C09               	subwf	(??_isdigit+2)^0,w,c
 13416  00373C  A0D8               	btfss	status,0,c
 13417  00373E  EFA3  F01B         	goto	u5171
 13418  003742  EFA6  F01B         	goto	u5170
 13419  003746                     u5171:
 13420  003746  0E01               	movlw	1
 13421  003748  EFA7  F01B         	goto	u5180
 13422  00374C                     u5170:
 13423  00374C  0E00               	movlw	0
 13424  00374E                     u5180:
 13425  00374E  6E05               	movwf	?_isdigit^0,c
 13426  003750  6A06               	clrf	(?_isdigit+1)^0,c
 13427  003752  0012               	return		;funcret
 13428  003754                     __end_of_isdigit:
 13429                           	opt callstack 0
 13430                           
 13431 ;; *************** function ___wmul *****************
 13432 ;; Defined at:
 13433 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  multiplier      2    4[COMRAM] unsigned int 
 13436 ;;  multiplicand    2    6[COMRAM] unsigned int 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;  product         2    8[COMRAM] unsigned int 
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  2    4[COMRAM] unsigned int 
 13441 ;; Registers used:
 13442 ;;		wreg, status,2, status,0, prodl, prodh
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13452 ;;Total ram usage:        6 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; Hardware stack levels required when called:    4
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_atoi
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           	psect	text77
 13463  0037FA                     __ptext77:
 13464                           	opt callstack 0
 13465  0037FA                     ___wmul:
 13466                           	opt callstack 22
 13467  0037FA  5005               	movf	___wmul@multiplier^0,w,c
 13468  0037FC  0207               	mulwf	___wmul@multiplicand^0,c
 13469  0037FE  CFF3 F009          	movff	prodl,___wmul@product
 13470  003802  CFF4 F00A          	movff	prodh,___wmul@product+1
 13471  003806  5005               	movf	___wmul@multiplier^0,w,c
 13472  003808  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 13473  00380A  50F3               	movf	243,w,c
 13474  00380C  260A               	addwf	(___wmul@product+1)^0,f,c
 13475  00380E  5006               	movf	(___wmul@multiplier+1)^0,w,c
 13476  003810  0207               	mulwf	___wmul@multiplicand^0,c
 13477  003812  50F3               	movf	243,w,c
 13478  003814  260A               	addwf	(___wmul@product+1)^0,f,c
 13479  003816  C009  F005         	movff	___wmul@product,?___wmul
 13480  00381A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 13481  00381E  0012               	return		;funcret
 13482  003820                     __end_of___wmul:
 13483                           	opt callstack 0
 13484                           
 13485 ;; *************** function _ClearModbusRespon *****************
 13486 ;; Defined at:
 13487 ;;		line 327 in file "Modbus.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;  i               2    4[COMRAM] int 
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13505 ;;Total ram usage:        2 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:    4
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_main
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text78
 13516  0033BE                     __ptext78:
 13517                           	opt callstack 0
 13518  0033BE                     _ClearModbusRespon:
 13519                           	opt callstack 26
 13520  0033BE                     
 13521                           ;Modbus.c: 328:     int i = 0;
 13522  0033BE  0E00               	movlw	0
 13523  0033C0  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 13524  0033C2  0E00               	movlw	0
 13525  0033C4  6E05               	movwf	ClearModbusRespon@i^0,c
 13526                           
 13527                           ;Modbus.c: 329:     for(i=0; i<32; i++ ){
 13528  0033C6  0E00               	movlw	0
 13529  0033C8  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 13530  0033CA  0E00               	movlw	0
 13531  0033CC  6E05               	movwf	ClearModbusRespon@i^0,c
 13532  0033CE                     l5068:
 13533                           
 13534                           ;Modbus.c: 330:         MBRespon[i] = 0xFFFF;
 13535  0033CE  90D8               	bcf	status,0,c
 13536  0033D0  3405               	rlcf	ClearModbusRespon@i^0,w,c
 13537  0033D2  6ED9               	movwf	fsr2l,c
 13538  0033D4  3406               	rlcf	(ClearModbusRespon@i+1)^0,w,c
 13539  0033D6  6EDA               	movwf	fsr2h,c
 13540  0033D8  0E3F               	movlw	low _MBRespon
 13541  0033DA  26D9               	addwf	fsr2l,f,c
 13542  0033DC  0E01               	movlw	high _MBRespon
 13543  0033DE  22DA               	addwfc	fsr2h,f,c
 13544  0033E0  0EFF               	movlw	255
 13545  0033E2  6EDE               	movwf	postinc2,c
 13546  0033E4  0EFF               	movlw	255
 13547  0033E6  6EDD               	movwf	postdec2,c
 13548  0033E8                     
 13549                           ;Modbus.c: 331:     }
 13550  0033E8  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 13551  0033EA  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 13552  0033EC  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 13553  0033EE  EF02  F01A         	goto	u4471
 13554  0033F2  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 13555  0033F4  E109               	bnz	u4470
 13556  0033F6  0E20               	movlw	32
 13557  0033F8  5C05               	subwf	ClearModbusRespon@i^0,w,c
 13558  0033FA  A0D8               	btfss	status,0,c
 13559  0033FC  EF02  F01A         	goto	u4471
 13560  003400  EF04  F01A         	goto	u4470
 13561  003404                     u4471:
 13562  003404  EFE7  F019         	goto	l5068
 13563  003408                     u4470:
 13564  003408  0012               	return		;funcret
 13565  00340A                     __end_of_ClearModbusRespon:
 13566                           	opt callstack 0
 13567                           
 13568 ;; *************** function _ClearModbusData *****************
 13569 ;; Defined at:
 13570 ;;		line 82 in file "Modbus.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;		None
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;  i               2    4[COMRAM] int 
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  1    wreg      void 
 13577 ;; Registers used:
 13578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13588 ;;Total ram usage:        2 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; Hardware stack levels required when called:    4
 13591 ;; This function calls:
 13592 ;;		Nothing
 13593 ;; This function is called by:
 13594 ;;		_main
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text79
 13599  00340A                     __ptext79:
 13600                           	opt callstack 0
 13601  00340A                     _ClearModbusData:
 13602                           	opt callstack 26
 13603  00340A                     
 13604                           ;Modbus.c: 83:     int i = 0;
 13605  00340A  0E00               	movlw	0
 13606  00340C  6E06               	movwf	(ClearModbusData@i+1)^0,c
 13607  00340E  0E00               	movlw	0
 13608  003410  6E05               	movwf	ClearModbusData@i^0,c
 13609                           
 13610                           ;Modbus.c: 84:     for(i=0; i<99; i++ ){
 13611  003412  0E00               	movlw	0
 13612  003414  6E06               	movwf	(ClearModbusData@i+1)^0,c
 13613  003416  0E00               	movlw	0
 13614  003418  6E05               	movwf	ClearModbusData@i^0,c
 13615  00341A                     l5182:
 13616                           
 13617                           ;Modbus.c: 85:         ModbusData[i] = 0xFF;
 13618  00341A  0E7C               	movlw	low _ModbusData
 13619  00341C  2405               	addwf	ClearModbusData@i^0,w,c
 13620  00341E  6ED9               	movwf	fsr2l,c
 13621  003420  0E02               	movlw	high _ModbusData
 13622  003422  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 13623  003424  6EDA               	movwf	fsr2h,c
 13624  003426  0EFF               	movlw	255
 13625  003428  6EDF               	movwf	indf2,c
 13626  00342A                     
 13627                           ;Modbus.c: 86:     }
 13628  00342A  4A05               	infsnz	ClearModbusData@i^0,f,c
 13629  00342C  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 13630  00342E  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 13631  003430  EF23  F01A         	goto	u4601
 13632  003434  5006               	movf	(ClearModbusData@i+1)^0,w,c
 13633  003436  E109               	bnz	u4600
 13634  003438  0E63               	movlw	99
 13635  00343A  5C05               	subwf	ClearModbusData@i^0,w,c
 13636  00343C  A0D8               	btfss	status,0,c
 13637  00343E  EF23  F01A         	goto	u4601
 13638  003442  EF25  F01A         	goto	u4600
 13639  003446                     u4601:
 13640  003446  EF0D  F01A         	goto	l5182
 13641  00344A                     u4600:
 13642  00344A                     
 13643                           ;Modbus.c: 88:     ModDataCnt = 0;
 13644  00344A  0E00               	movlw	0
 13645  00344C  0100               	movlb	0	; () banked
 13646  00344E  6FAE               	movwf	(_ModDataCnt+1)& (0+255),b
 13647  003450  0E00               	movlw	0
 13648  003452  6FAD               	movwf	_ModDataCnt& (0+255),b
 13649  003454                     
 13650                           ; BSR set to: 0
 13651  003454  0012               	return		;funcret
 13652  003456                     __end_of_ClearModbusData:
 13653                           	opt callstack 0
 13654                           
 13655 ;; *************** function _INTERRUPT_InterruptManager *****************
 13656 ;; Defined at:
 13657 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;		None
 13660 ;; Auto vars:     Size  Location     Type
 13661 ;;		None
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  1    wreg      void 
 13664 ;; Registers used:
 13665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13674 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13675 ;;Total ram usage:        4 bytes
 13676 ;; Hardware stack levels used:    1
 13677 ;; Hardware stack levels required when called:    3
 13678 ;; This function calls:
 13679 ;;		Absolute function
 13680 ;;		_EUSART1_Receive_ISR
 13681 ;;		_EUSART1_Transmit_ISR
 13682 ;;		_EUSART2_Receive_ISR
 13683 ;;		_EUSART2_Transmit_ISR
 13684 ;; This function is called by:
 13685 ;;		Interrupt level 2
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           	psect	intcode
 13690  000008                     __pintcode:
 13691                           	opt callstack 0
 13692  000008                     _INTERRUPT_InterruptManager:
 13693                           	opt callstack 15
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;incstack = 0
 13697  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13698  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13699  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13700  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13701  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13702  00001A                     
 13703                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13704  00001A  ACF2               	btfss	242,6,c	;volatile
 13705  00001C  EF12  F000         	goto	i2u471_41
 13706  000020  EF14  F000         	goto	i2u471_40
 13707  000024                     i2u471_41:
 13708  000024  EF89  F000         	goto	i2l159
 13709  000028                     i2u471_40:
 13710  000028                     
 13711                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 13712  000028  010E               	movlb	14	; () banked
 13713  00002A  ADC5               	btfss	197,6,b	;volatile
 13714  00002C  EF1A  F000         	goto	i2u472_41
 13715  000030  EF1C  F000         	goto	i2u472_40
 13716  000034                     i2u472_41:
 13717  000034  EF32  F000         	goto	i2l150
 13718  000038                     i2u472_40:
 13719  000038                     
 13720                           ; BSR set to: 14
 13721  000038  ADCD               	btfss	205,6,b	;volatile
 13722  00003A  EF21  F000         	goto	i2u473_41
 13723  00003E  EF23  F000         	goto	i2u473_40
 13724  000042                     i2u473_41:
 13725  000042  EF32  F000         	goto	i2l150
 13726  000046                     i2u473_40:
 13727  000046                     
 13728                           ; BSR set to: 14
 13729                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 13730  000046  D802               	call	i2u474_48
 13731  000048  EF30  F000         	goto	i2u474_49
 13732  00004C                     i2u474_48:
 13733  00004C  0005               	push	
 13734  00004E  6EFA               	movwf	pclath,c
 13735  000050  0101               	movlb	1	; () banked
 13736  000052  51EB               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 13737  000054  6EFD               	movwf	tosl,c
 13738  000056  51EC               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 13739  000058  6EFE               	movwf	tosh,c
 13740  00005A  6AFF               	clrf	tosu,c
 13741  00005C  50FA               	movf	pclath,w,c
 13742  00005E  0012               	return		;indir
 13743  000060                     i2u474_49:
 13744                           
 13745                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13746  000060  EF89  F000         	goto	i2l159
 13747  000064                     i2l150:
 13748                           
 13749                           ; BSR set to: 14
 13750  000064  AFC5               	btfss	197,7,b	;volatile
 13751  000066  EF37  F000         	goto	i2u475_41
 13752  00006A  EF39  F000         	goto	i2u475_40
 13753  00006E                     i2u475_41:
 13754  00006E  EF4F  F000         	goto	i2l152
 13755  000072                     i2u475_40:
 13756  000072                     
 13757                           ; BSR set to: 14
 13758  000072  AFCD               	btfss	205,7,b	;volatile
 13759  000074  EF3E  F000         	goto	i2u476_41
 13760  000078  EF40  F000         	goto	i2u476_40
 13761  00007C                     i2u476_41:
 13762  00007C  EF4F  F000         	goto	i2l152
 13763  000080                     i2u476_40:
 13764  000080                     
 13765                           ; BSR set to: 14
 13766                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 13767  000080  D802               	call	i2u477_48
 13768  000082  EF4D  F000         	goto	i2u477_49
 13769  000086                     i2u477_48:
 13770  000086  0005               	push	
 13771  000088  6EFA               	movwf	pclath,c
 13772  00008A  0101               	movlb	1	; () banked
 13773  00008C  51E9               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 13774  00008E  6EFD               	movwf	tosl,c
 13775  000090  51EA               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 13776  000092  6EFE               	movwf	tosh,c
 13777  000094  6AFF               	clrf	tosu,c
 13778  000096  50FA               	movf	pclath,w,c
 13779  000098  0012               	return		;indir
 13780  00009A                     i2u477_49:
 13781                           
 13782                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13783  00009A  EF89  F000         	goto	i2l159
 13784  00009E                     i2l152:
 13785                           
 13786                           ; BSR set to: 14
 13787  00009E  A9C5               	btfss	197,4,b	;volatile
 13788  0000A0  EF54  F000         	goto	i2u478_41
 13789  0000A4  EF56  F000         	goto	i2u478_40
 13790  0000A8                     i2u478_41:
 13791  0000A8  EF6C  F000         	goto	i2l154
 13792  0000AC                     i2u478_40:
 13793  0000AC                     
 13794                           ; BSR set to: 14
 13795  0000AC  A9CD               	btfss	205,4,b	;volatile
 13796  0000AE  EF5B  F000         	goto	i2u479_41
 13797  0000B2  EF5D  F000         	goto	i2u479_40
 13798  0000B6                     i2u479_41:
 13799  0000B6  EF6C  F000         	goto	i2l154
 13800  0000BA                     i2u479_40:
 13801  0000BA                     
 13802                           ; BSR set to: 14
 13803                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 13804  0000BA  D802               	call	i2u480_48
 13805  0000BC  EF6A  F000         	goto	i2u480_49
 13806  0000C0                     i2u480_48:
 13807  0000C0  0005               	push	
 13808  0000C2  6EFA               	movwf	pclath,c
 13809  0000C4  0101               	movlb	1	; () banked
 13810  0000C6  51E7               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 13811  0000C8  6EFD               	movwf	tosl,c
 13812  0000CA  51E8               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 13813  0000CC  6EFE               	movwf	tosh,c
 13814  0000CE  6AFF               	clrf	tosu,c
 13815  0000D0  50FA               	movf	pclath,w,c
 13816  0000D2  0012               	return		;indir
 13817  0000D4                     i2u480_49:
 13818                           
 13819                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 13820  0000D4  EF89  F000         	goto	i2l159
 13821  0000D8                     i2l154:
 13822                           
 13823                           ; BSR set to: 14
 13824  0000D8  ABC5               	btfss	197,5,b	;volatile
 13825  0000DA  EF71  F000         	goto	i2u481_41
 13826  0000DE  EF73  F000         	goto	i2u481_40
 13827  0000E2                     i2u481_41:
 13828  0000E2  EF89  F000         	goto	i2l153
 13829  0000E6                     i2u481_40:
 13830  0000E6                     
 13831                           ; BSR set to: 14
 13832  0000E6  ABCD               	btfss	205,5,b	;volatile
 13833  0000E8  EF78  F000         	goto	i2u482_41
 13834  0000EC  EF7A  F000         	goto	i2u482_40
 13835  0000F0                     i2u482_41:
 13836  0000F0  EF89  F000         	goto	i2l153
 13837  0000F4                     i2u482_40:
 13838  0000F4                     
 13839                           ; BSR set to: 14
 13840                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 13841  0000F4  D802               	call	i2u483_48
 13842  0000F6  EF87  F000         	goto	i2u483_49
 13843  0000FA                     i2u483_48:
 13844  0000FA  0005               	push	
 13845  0000FC  6EFA               	movwf	pclath,c
 13846  0000FE  0101               	movlb	1	; () banked
 13847  000100  51E5               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 13848  000102  6EFD               	movwf	tosl,c
 13849  000104  51E6               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 13850  000106  6EFE               	movwf	tosh,c
 13851  000108  6AFF               	clrf	tosu,c
 13852  00010A  50FA               	movf	pclath,w,c
 13853  00010C  0012               	return		;indir
 13854  00010E                     i2u483_49:
 13855                           
 13856                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 13857  00010E  EF89  F000         	goto	i2l159
 13858  000112                     i2l153:
 13859  000112                     i2l159:
 13860  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13861  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13862  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13863  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13864  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13865  000124  0011               	retfie		f
 13866  000126                     __end_of_INTERRUPT_InterruptManager:
 13867                           	opt callstack 0
 13868                           
 13869 ;; *************** function _EUSART2_Transmit_ISR *****************
 13870 ;; Defined at:
 13871 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;		None
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;		None
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      void 
 13878 ;; Registers used:
 13879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13880 ;; Tracked objects:
 13881 ;;		On entry : 0/0
 13882 ;;		On exit  : 0/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13889 ;;Total ram usage:        0 bytes
 13890 ;; Hardware stack levels used:    1
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_EUSART2_Initialize
 13895 ;;		_INTERRUPT_InterruptManager
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899                           	psect	text81
 13900  003456                     __ptext81:
 13901                           	opt callstack 0
 13902  003456                     _EUSART2_Transmit_ISR:
 13903                           	opt callstack 17
 13904  003456                     
 13905                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 13906  003456  0E08               	movlw	8
 13907  003458  0101               	movlb	1	; () banked
 13908  00345A  61ED               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 13909  00345C  EF32  F01A         	goto	i2u431_41
 13910  003460  EF34  F01A         	goto	i2u431_40
 13911  003464                     i2u431_41:
 13912  003464  EF4E  F01A         	goto	i2l333
 13913  003468                     i2u431_40:
 13914  003468                     
 13915                           ; BSR set to: 1
 13916                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 13917  003468  0E9F               	movlw	low _eusart2TxBuffer
 13918  00346A  0100               	movlb	0	; () banked
 13919  00346C  25BA               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 13920  00346E  6ED9               	movwf	fsr2l,c
 13921  003470  6ADA               	clrf	fsr2h,c
 13922  003472  0E01               	movlw	high _eusart2TxBuffer
 13923  003474  22DA               	addwfc	fsr2h,f,c
 13924  003476  50DF               	movf	indf2,w,c
 13925  003478  010E               	movlb	14	; () banked
 13926  00347A  6F9A               	movwf	154,b	;volatile
 13927  00347C                     
 13928                           ; BSR set to: 14
 13929  00347C  0100               	movlb	0	; () banked
 13930  00347E  2BBA               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 13931  003480                     
 13932                           ; BSR set to: 0
 13933                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 13934  003480  0E07               	movlw	7
 13935  003482  65BA               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 13936  003484  EF46  F01A         	goto	i2u432_41
 13937  003488  EF48  F01A         	goto	i2u432_40
 13938  00348C                     i2u432_41:
 13939  00348C  EF4A  F01A         	goto	i2l5008
 13940  003490                     i2u432_40:
 13941  003490                     
 13942                           ; BSR set to: 0
 13943                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
 13944  003490  0E00               	movlw	0
 13945  003492  6FBA               	movwf	_eusart2TxTail& (0+255),b	;volatile
 13946  003494                     i2l5008:
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
 13950  003494  0101               	movlb	1	; () banked
 13951  003496  2BED               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13952                           
 13953                           ;mcc_generated_files/eusart2.c: 218:     }
 13954  003498  EF50  F01A         	goto	i2l336
 13955  00349C                     i2l333:
 13956                           
 13957                           ; BSR set to: 1
 13958                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
 13959  00349C  010E               	movlb	14	; () banked
 13960  00349E  9DC5               	bcf	197,6,b	;volatile
 13961  0034A0                     i2l336:
 13962  0034A0  0012               	return		;funcret
 13963  0034A2                     __end_of_EUSART2_Transmit_ISR:
 13964                           	opt callstack 0
 13965                           
 13966 ;; *************** function _EUSART2_Receive_ISR *****************
 13967 ;; Defined at:
 13968 ;;		line 225 in file "mcc_generated_files/eusart2.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;		None
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;		None
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13977 ;; Tracked objects:
 13978 ;;		On entry : 0/0
 13979 ;;		On exit  : 0/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13986 ;;Total ram usage:        0 bytes
 13987 ;; Hardware stack levels used:    1
 13988 ;; Hardware stack levels required when called:    2
 13989 ;; This function calls:
 13990 ;;		Absolute function
 13991 ;;		_EUSART2_DefaultErrorHandler
 13992 ;;		_EUSART2_DefaultFramingErrorHandler
 13993 ;;		_EUSART2_DefaultOverrunErrorHandler
 13994 ;;		_EUSART2_RxDataHandler
 13995 ;; This function is called by:
 13996 ;;		_EUSART2_Initialize
 13997 ;;		_INTERRUPT_InterruptManager
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           	psect	text82
 14002  0028B0                     __ptext82:
 14003                           	opt callstack 0
 14004  0028B0                     _EUSART2_Receive_ISR:
 14005                           	opt callstack 15
 14006  0028B0                     
 14007                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 14008  0028B0  0E8F               	movlw	low _eusart2RxStatusBuffer
 14009  0028B2  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14010  0028B4  6ED9               	movwf	fsr2l,c
 14011  0028B6  6ADA               	clrf	fsr2h,c
 14012  0028B8  0E01               	movlw	high _eusart2RxStatusBuffer
 14013  0028BA  22DA               	addwfc	fsr2h,f,c
 14014  0028BC  0E00               	movlw	0
 14015  0028BE  6EDF               	movwf	indf2,c
 14016  0028C0                     
 14017                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
 14018  0028C0  010E               	movlb	14	; () banked
 14019  0028C2  A59D               	btfss	157,2,b	;volatile
 14020  0028C4  EF66  F014         	goto	i2u433_41
 14021  0028C8  EF68  F014         	goto	i2u433_40
 14022  0028CC                     i2u433_41:
 14023  0028CC  EF7C  F014         	goto	i2l5018
 14024  0028D0                     i2u433_40:
 14025  0028D0                     
 14026                           ; BSR set to: 14
 14027                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 14028  0028D0  0E8F               	movlw	low _eusart2RxStatusBuffer
 14029  0028D2  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14030  0028D4  6ED9               	movwf	fsr2l,c
 14031  0028D6  6ADA               	clrf	fsr2h,c
 14032  0028D8  0E01               	movlw	high _eusart2RxStatusBuffer
 14033  0028DA  22DA               	addwfc	fsr2h,f,c
 14034  0028DC  0101               	movlb	1	; () banked
 14035  0028DE  82DF               	bsf	indf2,1,c
 14036  0028E0                     
 14037                           ; BSR set to: 1
 14038                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
 14039  0028E0  D802               	call	i2u434_48
 14040  0028E2  EF7C  F014         	goto	i2u434_49
 14041  0028E6                     i2u434_48:
 14042  0028E6  0005               	push	
 14043  0028E8  6EFA               	movwf	pclath,c
 14044  0028EA  51E3               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 14045  0028EC  6EFD               	movwf	tosl,c
 14046  0028EE  51E4               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 14047  0028F0  6EFE               	movwf	tosh,c
 14048  0028F2  6AFF               	clrf	tosu,c
 14049  0028F4  50FA               	movf	pclath,w,c
 14050  0028F6  0012               	return		;indir
 14051  0028F8                     i2u434_49:
 14052  0028F8                     i2l5018:
 14053                           
 14054                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
 14055  0028F8  010E               	movlb	14	; () banked
 14056  0028FA  A39D               	btfss	157,1,b	;volatile
 14057  0028FC  EF82  F014         	goto	i2u435_41
 14058  002900  EF84  F014         	goto	i2u435_40
 14059  002904                     i2u435_41:
 14060  002904  EF98  F014         	goto	i2l5024
 14061  002908                     i2u435_40:
 14062  002908                     
 14063                           ; BSR set to: 14
 14064                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 14065  002908  0E8F               	movlw	low _eusart2RxStatusBuffer
 14066  00290A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14067  00290C  6ED9               	movwf	fsr2l,c
 14068  00290E  6ADA               	clrf	fsr2h,c
 14069  002910  0E01               	movlw	high _eusart2RxStatusBuffer
 14070  002912  22DA               	addwfc	fsr2h,f,c
 14071  002914  0101               	movlb	1	; () banked
 14072  002916  84DF               	bsf	indf2,2,c
 14073  002918                     
 14074                           ; BSR set to: 1
 14075                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
 14076  002918  D802               	call	i2u436_48
 14077  00291A  EF98  F014         	goto	i2u436_49
 14078  00291E                     i2u436_48:
 14079  00291E  0005               	push	
 14080  002920  6EFA               	movwf	pclath,c
 14081  002922  51E1               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 14082  002924  6EFD               	movwf	tosl,c
 14083  002926  51E2               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 14084  002928  6EFE               	movwf	tosh,c
 14085  00292A  6AFF               	clrf	tosu,c
 14086  00292C  50FA               	movf	pclath,w,c
 14087  00292E  0012               	return		;indir
 14088  002930                     i2u436_49:
 14089  002930                     i2l5024:
 14090                           
 14091                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 14092  002930  0E8F               	movlw	low _eusart2RxStatusBuffer
 14093  002932  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14094  002934  6ED9               	movwf	fsr2l,c
 14095  002936  6ADA               	clrf	fsr2h,c
 14096  002938  0E01               	movlw	high _eusart2RxStatusBuffer
 14097  00293A  22DA               	addwfc	fsr2h,f,c
 14098  00293C  50DF               	movf	indf2,w,c
 14099  00293E  B4D8               	btfsc	status,2,c
 14100  002940  EFA4  F014         	goto	i2u437_41
 14101  002944  EFA6  F014         	goto	i2u437_40
 14102  002948                     i2u437_41:
 14103  002948  EFB5  F014         	goto	i2l5028
 14104  00294C                     i2u437_40:
 14105  00294C                     
 14106                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
 14107  00294C  D802               	call	i2u438_48
 14108  00294E  EFB3  F014         	goto	i2u438_49
 14109  002952                     i2u438_48:
 14110  002952  0005               	push	
 14111  002954  6EFA               	movwf	pclath,c
 14112  002956  0101               	movlb	1	; () banked
 14113  002958  51DF               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 14114  00295A  6EFD               	movwf	tosl,c
 14115  00295C  51E0               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 14116  00295E  6EFE               	movwf	tosh,c
 14117  002960  6AFF               	clrf	tosu,c
 14118  002962  50FA               	movf	pclath,w,c
 14119  002964  0012               	return		;indir
 14120  002966                     i2u438_49:
 14121                           
 14122                           ;mcc_generated_files/eusart2.c: 242:     } else {
 14123  002966  EFB7  F014         	goto	i2l343
 14124  00296A                     i2l5028:
 14125                           
 14126                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
 14127  00296A  ECAA  F01B         	call	_EUSART2_RxDataHandler	;wreg free
 14128  00296E                     i2l343:
 14129  00296E  0012               	return		;funcret
 14130  002970                     __end_of_EUSART2_Receive_ISR:
 14131                           	opt callstack 0
 14132                           
 14133 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 14134 ;; Defined at:
 14135 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 14136 ;; Parameters:    Size  Location     Type
 14137 ;;		None
 14138 ;; Auto vars:     Size  Location     Type
 14139 ;;		None
 14140 ;; Return value:  Size  Location     Type
 14141 ;;                  1    wreg      void 
 14142 ;; Registers used:
 14143 ;;		None
 14144 ;; Tracked objects:
 14145 ;;		On entry : 0/0
 14146 ;;		On exit  : 0/0
 14147 ;;		Unchanged: 0/0
 14148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;Total ram usage:        0 bytes
 14154 ;; Hardware stack levels used:    1
 14155 ;; This function calls:
 14156 ;;		Nothing
 14157 ;; This function is called by:
 14158 ;;		_EUSART2_Initialize
 14159 ;;		_EUSART2_Receive_ISR
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163                           	psect	text83
 14164  003950                     __ptext83:
 14165                           	opt callstack 0
 14166  003950                     _EUSART2_DefaultOverrunErrorHandler:
 14167                           	opt callstack 16
 14168  003950                     
 14169                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
 14170  003950  010E               	movlb	14	; () banked
 14171  003952  999D               	bcf	157,4,b	;volatile
 14172                           
 14173                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
 14174  003954  899D               	bsf	157,4,b	;volatile
 14175  003956                     
 14176                           ; BSR set to: 14
 14177  003956  0012               	return		;funcret
 14178  003958                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 14179                           	opt callstack 0
 14180                           
 14181 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 14182 ;; Defined at:
 14183 ;;		line 259 in file "mcc_generated_files/eusart2.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;		None
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;		None
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  1    wreg      void 
 14190 ;; Registers used:
 14191 ;;		None
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14201 ;;Total ram usage:        0 bytes
 14202 ;; Hardware stack levels used:    1
 14203 ;; This function calls:
 14204 ;;		Nothing
 14205 ;; This function is called by:
 14206 ;;		_EUSART2_Initialize
 14207 ;;		_EUSART2_Receive_ISR
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211                           	psect	text84
 14212  00397E                     __ptext84:
 14213                           	opt callstack 0
 14214  00397E                     _EUSART2_DefaultFramingErrorHandler:
 14215                           	opt callstack 16
 14216  00397E  0012               	return		;funcret
 14217  003980                     __end_of_EUSART2_DefaultFramingErrorHandler:
 14218                           	opt callstack 0
 14219                           
 14220 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 14221 ;; Defined at:
 14222 ;;		line 269 in file "mcc_generated_files/eusart2.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;		None
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;		None
 14227 ;; Return value:  Size  Location     Type
 14228 ;;                  1    wreg      void 
 14229 ;; Registers used:
 14230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14240 ;;Total ram usage:        0 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; Hardware stack levels required when called:    1
 14243 ;; This function calls:
 14244 ;;		_EUSART2_RxDataHandler
 14245 ;; This function is called by:
 14246 ;;		_EUSART2_Initialize
 14247 ;;		_EUSART2_Receive_ISR
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           	psect	text85
 14252  003964                     __ptext85:
 14253                           	opt callstack 0
 14254  003964                     _EUSART2_DefaultErrorHandler:
 14255                           	opt callstack 15
 14256  003964                     
 14257                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
 14258  003964  ECAA  F01B         	call	_EUSART2_RxDataHandler	;wreg free
 14259  003968  0012               	return		;funcret
 14260  00396A                     __end_of_EUSART2_DefaultErrorHandler:
 14261                           	opt callstack 0
 14262                           
 14263 ;; *************** function _EUSART2_RxDataHandler *****************
 14264 ;; Defined at:
 14265 ;;		line 249 in file "mcc_generated_files/eusart2.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;		None
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;		None
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  1    wreg      void 
 14272 ;; Registers used:
 14273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;Total ram usage:        0 bytes
 14284 ;; Hardware stack levels used:    1
 14285 ;; This function calls:
 14286 ;;		Nothing
 14287 ;; This function is called by:
 14288 ;;		_EUSART2_Receive_ISR
 14289 ;;		_EUSART2_DefaultErrorHandler
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text86
 14294  003754                     __ptext86:
 14295                           	opt callstack 0
 14296  003754                     _EUSART2_RxDataHandler:
 14297                           	opt callstack 16
 14298  003754                     
 14299                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 14300  003754  0E97               	movlw	low _eusart2RxBuffer
 14301  003756  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 14302  003758  6ED9               	movwf	fsr2l,c
 14303  00375A  6ADA               	clrf	fsr2h,c
 14304  00375C  0E01               	movlw	high _eusart2RxBuffer
 14305  00375E  22DA               	addwfc	fsr2h,f,c
 14306  003760  CE99 FFDF          	movff	3737,indf2	;volatile
 14307  003764  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 14308  003766                     
 14309                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 14310  003766  0E07               	movlw	7
 14311  003768  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 14312  00376A  EFB9  F01B         	goto	i2u383_41
 14313  00376E  EFBB  F01B         	goto	i2u383_40
 14314  003772                     i2u383_41:
 14315  003772  EFBD  F01B         	goto	i2l4518
 14316  003776                     i2u383_40:
 14317  003776                     
 14318                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
 14319  003776  0E00               	movlw	0
 14320  003778  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 14321  00377A                     i2l4518:
 14322                           
 14323                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
 14324  00377A  0100               	movlb	0	; () banked
 14325  00377C  2BB8               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 14326  00377E                     
 14327                           ; BSR set to: 0
 14328  00377E  0012               	return		;funcret
 14329  003780                     __end_of_EUSART2_RxDataHandler:
 14330                           	opt callstack 0
 14331                           
 14332 ;; *************** function _EUSART1_Transmit_ISR *****************
 14333 ;; Defined at:
 14334 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;		None
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;		None
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  1    wreg      void 
 14341 ;; Registers used:
 14342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14352 ;;Total ram usage:        0 bytes
 14353 ;; Hardware stack levels used:    1
 14354 ;; This function calls:
 14355 ;;		Nothing
 14356 ;; This function is called by:
 14357 ;;		_EUSART1_Initialize
 14358 ;;		_INTERRUPT_InterruptManager
 14359 ;; This function uses a non-reentrant model
 14360 ;;
 14361                           
 14362                           	psect	text87
 14363  003574                     __ptext87:
 14364                           	opt callstack 0
 14365  003574                     _EUSART1_Transmit_ISR:
 14366                           	opt callstack 17
 14367  003574                     
 14368                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 14369  003574  0E10               	movlw	16
 14370  003576  0100               	movlb	0	; () banked
 14371  003578  61BE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 14372  00357A  EFC1  F01A         	goto	i2u439_41
 14373  00357E  EFC3  F01A         	goto	i2u439_40
 14374  003582                     i2u439_41:
 14375  003582  EFD9  F01A         	goto	i2l477
 14376  003586                     i2u439_40:
 14377  003586                     
 14378                           ; BSR set to: 0
 14379                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 14380  003586  0E7F               	movlw	low _eusart1TxBuffer
 14381  003588  25B5               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 14382  00358A  6ED9               	movwf	fsr2l,c
 14383  00358C  6ADA               	clrf	fsr2h,c
 14384  00358E  0E01               	movlw	high _eusart1TxBuffer
 14385  003590  22DA               	addwfc	fsr2h,f,c
 14386  003592  50DF               	movf	indf2,w,c
 14387  003594  6E9A               	movwf	154,c	;volatile
 14388  003596                     
 14389                           ; BSR set to: 0
 14390  003596  2BB5               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 14391  003598                     
 14392                           ; BSR set to: 0
 14393                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 14394  003598  0E0F               	movlw	15
 14395  00359A  65B5               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 14396  00359C  EFD2  F01A         	goto	i2u440_41
 14397  0035A0  EFD4  F01A         	goto	i2u440_40
 14398  0035A4                     i2u440_41:
 14399  0035A4  EFD6  F01A         	goto	i2l5040
 14400  0035A8                     i2u440_40:
 14401  0035A8                     
 14402                           ; BSR set to: 0
 14403                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 14404  0035A8  0E00               	movlw	0
 14405  0035AA  6FB5               	movwf	_eusart1TxTail& (0+255),b	;volatile
 14406  0035AC                     i2l5040:
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 14410  0035AC  2BBE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 14411                           
 14412                           ;mcc_generated_files/eusart1.c: 209:     }
 14413  0035AE  EFDB  F01A         	goto	i2l480
 14414  0035B2                     i2l477:
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 14418  0035B2  010E               	movlb	14	; () banked
 14419  0035B4  99C5               	bcf	197,4,b	;volatile
 14420  0035B6                     i2l480:
 14421  0035B6  0012               	return		;funcret
 14422  0035B8                     __end_of_EUSART1_Transmit_ISR:
 14423                           	opt callstack 0
 14424                           
 14425 ;; *************** function _EUSART1_Receive_ISR *****************
 14426 ;; Defined at:
 14427 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;		None
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;		None
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  1    wreg      void 
 14434 ;; Registers used:
 14435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/0
 14438 ;;		On exit  : 0/0
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14445 ;;Total ram usage:        0 bytes
 14446 ;; Hardware stack levels used:    1
 14447 ;; Hardware stack levels required when called:    2
 14448 ;; This function calls:
 14449 ;;		Absolute function
 14450 ;;		_EUSART1_DefaultErrorHandler
 14451 ;;		_EUSART1_DefaultFramingErrorHandler
 14452 ;;		_EUSART1_DefaultOverrunErrorHandler
 14453 ;;		_EUSART1_RxDataHandler
 14454 ;; This function is called by:
 14455 ;;		_EUSART1_Initialize
 14456 ;;		_INTERRUPT_InterruptManager
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text88
 14461  002970                     __ptext88:
 14462                           	opt callstack 0
 14463  002970                     _EUSART1_Receive_ISR:
 14464                           	opt callstack 15
 14465  002970                     
 14466                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 14467  002970  0E00               	movlw	low _eusart1RxStatusBuffer
 14468  002972  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14469  002974  6ED9               	movwf	fsr2l,c
 14470  002976  6ADA               	clrf	fsr2h,c
 14471  002978  0E03               	movlw	high _eusart1RxStatusBuffer
 14472  00297A  22DA               	addwfc	fsr2h,f,c
 14473  00297C  0E00               	movlw	0
 14474  00297E  6EDF               	movwf	indf2,c
 14475  002980                     
 14476                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 14477  002980  A49D               	btfss	157,2,c	;volatile
 14478  002982  EFC5  F014         	goto	i2u441_41
 14479  002986  EFC7  F014         	goto	i2u441_40
 14480  00298A                     i2u441_41:
 14481  00298A  EFDC  F014         	goto	i2l5050
 14482  00298E                     i2u441_40:
 14483  00298E                     
 14484                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 14485  00298E  0E00               	movlw	low _eusart1RxStatusBuffer
 14486  002990  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14487  002992  6ED9               	movwf	fsr2l,c
 14488  002994  6ADA               	clrf	fsr2h,c
 14489  002996  0E03               	movlw	high _eusart1RxStatusBuffer
 14490  002998  22DA               	addwfc	fsr2h,f,c
 14491  00299A  0103               	movlb	3	; () banked
 14492  00299C  82DF               	bsf	indf2,1,c
 14493  00299E                     
 14494                           ; BSR set to: 3
 14495                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 14496  00299E  D802               	call	i2u442_48
 14497  0029A0  EFDC  F014         	goto	i2u442_49
 14498  0029A4                     i2u442_48:
 14499  0029A4  0005               	push	
 14500  0029A6  6EFA               	movwf	pclath,c
 14501  0029A8  0101               	movlb	1	; () banked
 14502  0029AA  51DD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 14503  0029AC  6EFD               	movwf	tosl,c
 14504  0029AE  51DE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 14505  0029B0  6EFE               	movwf	tosh,c
 14506  0029B2  6AFF               	clrf	tosu,c
 14507  0029B4  50FA               	movf	pclath,w,c
 14508  0029B6  0012               	return		;indir
 14509  0029B8                     i2u442_49:
 14510  0029B8                     i2l5050:
 14511                           
 14512                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 14513  0029B8  A29D               	btfss	157,1,c	;volatile
 14514  0029BA  EFE1  F014         	goto	i2u443_41
 14515  0029BE  EFE3  F014         	goto	i2u443_40
 14516  0029C2                     i2u443_41:
 14517  0029C2  EFF8  F014         	goto	i2l5056
 14518  0029C6                     i2u443_40:
 14519  0029C6                     
 14520                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 14521  0029C6  0E00               	movlw	low _eusart1RxStatusBuffer
 14522  0029C8  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14523  0029CA  6ED9               	movwf	fsr2l,c
 14524  0029CC  6ADA               	clrf	fsr2h,c
 14525  0029CE  0E03               	movlw	high _eusart1RxStatusBuffer
 14526  0029D0  22DA               	addwfc	fsr2h,f,c
 14527  0029D2  0103               	movlb	3	; () banked
 14528  0029D4  84DF               	bsf	indf2,2,c
 14529  0029D6                     
 14530                           ; BSR set to: 3
 14531                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 14532  0029D6  D802               	call	i2u444_48
 14533  0029D8  EFF8  F014         	goto	i2u444_49
 14534  0029DC                     i2u444_48:
 14535  0029DC  0005               	push	
 14536  0029DE  6EFA               	movwf	pclath,c
 14537  0029E0  0101               	movlb	1	; () banked
 14538  0029E2  51DB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 14539  0029E4  6EFD               	movwf	tosl,c
 14540  0029E6  51DC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 14541  0029E8  6EFE               	movwf	tosh,c
 14542  0029EA  6AFF               	clrf	tosu,c
 14543  0029EC  50FA               	movf	pclath,w,c
 14544  0029EE  0012               	return		;indir
 14545  0029F0                     i2u444_49:
 14546  0029F0                     i2l5056:
 14547                           
 14548                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 14549  0029F0  0E00               	movlw	low _eusart1RxStatusBuffer
 14550  0029F2  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14551  0029F4  6ED9               	movwf	fsr2l,c
 14552  0029F6  6ADA               	clrf	fsr2h,c
 14553  0029F8  0E03               	movlw	high _eusart1RxStatusBuffer
 14554  0029FA  22DA               	addwfc	fsr2h,f,c
 14555  0029FC  50DF               	movf	indf2,w,c
 14556  0029FE  B4D8               	btfsc	status,2,c
 14557  002A00  EF04  F015         	goto	i2u445_41
 14558  002A04  EF06  F015         	goto	i2u445_40
 14559  002A08                     i2u445_41:
 14560  002A08  EF15  F015         	goto	i2l5060
 14561  002A0C                     i2u445_40:
 14562  002A0C                     
 14563                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 14564  002A0C  D802               	call	i2u446_48
 14565  002A0E  EF13  F015         	goto	i2u446_49
 14566  002A12                     i2u446_48:
 14567  002A12  0005               	push	
 14568  002A14  6EFA               	movwf	pclath,c
 14569  002A16  0101               	movlb	1	; () banked
 14570  002A18  51D9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 14571  002A1A  6EFD               	movwf	tosl,c
 14572  002A1C  51DA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 14573  002A1E  6EFE               	movwf	tosh,c
 14574  002A20  6AFF               	clrf	tosu,c
 14575  002A22  50FA               	movf	pclath,w,c
 14576  002A24  0012               	return		;indir
 14577  002A26                     i2u446_49:
 14578                           
 14579                           ;mcc_generated_files/eusart1.c: 233:     } else {
 14580  002A26  EF17  F015         	goto	i2l487
 14581  002A2A                     i2l5060:
 14582                           
 14583                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 14584  002A2A  ECC0  F01B         	call	_EUSART1_RxDataHandler	;wreg free
 14585  002A2E                     i2l487:
 14586  002A2E  0012               	return		;funcret
 14587  002A30                     __end_of_EUSART1_Receive_ISR:
 14588                           	opt callstack 0
 14589                           
 14590 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 14591 ;; Defined at:
 14592 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;		None
 14595 ;; Auto vars:     Size  Location     Type
 14596 ;;		None
 14597 ;; Return value:  Size  Location     Type
 14598 ;;                  1    wreg      void 
 14599 ;; Registers used:
 14600 ;;		None
 14601 ;; Tracked objects:
 14602 ;;		On entry : 0/0
 14603 ;;		On exit  : 0/0
 14604 ;;		Unchanged: 0/0
 14605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14610 ;;Total ram usage:        0 bytes
 14611 ;; Hardware stack levels used:    1
 14612 ;; This function calls:
 14613 ;;		Nothing
 14614 ;; This function is called by:
 14615 ;;		_EUSART1_Initialize
 14616 ;;		_EUSART1_Receive_ISR
 14617 ;; This function uses a non-reentrant model
 14618 ;;
 14619                           
 14620                           	psect	text89
 14621  00396A                     __ptext89:
 14622                           	opt callstack 0
 14623  00396A                     _EUSART1_DefaultOverrunErrorHandler:
 14624                           	opt callstack 16
 14625  00396A                     
 14626                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 14627  00396A  989D               	bcf	157,4,c	;volatile
 14628                           
 14629                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 14630  00396C  889D               	bsf	157,4,c	;volatile
 14631  00396E  0012               	return		;funcret
 14632  003970                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 14633                           	opt callstack 0
 14634                           
 14635 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 14636 ;; Defined at:
 14637 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 14638 ;; Parameters:    Size  Location     Type
 14639 ;;		None
 14640 ;; Auto vars:     Size  Location     Type
 14641 ;;		None
 14642 ;; Return value:  Size  Location     Type
 14643 ;;                  1    wreg      void 
 14644 ;; Registers used:
 14645 ;;		None
 14646 ;; Tracked objects:
 14647 ;;		On entry : 0/0
 14648 ;;		On exit  : 0/0
 14649 ;;		Unchanged: 0/0
 14650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14655 ;;Total ram usage:        0 bytes
 14656 ;; Hardware stack levels used:    1
 14657 ;; This function calls:
 14658 ;;		Nothing
 14659 ;; This function is called by:
 14660 ;;		_EUSART1_Initialize
 14661 ;;		_EUSART1_Receive_ISR
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           	psect	text90
 14666  003980                     __ptext90:
 14667                           	opt callstack 0
 14668  003980                     _EUSART1_DefaultFramingErrorHandler:
 14669                           	opt callstack 16
 14670  003980  0012               	return		;funcret
 14671  003982                     __end_of_EUSART1_DefaultFramingErrorHandler:
 14672                           	opt callstack 0
 14673                           
 14674 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 14675 ;; Defined at:
 14676 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;		None
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;		None
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  1    wreg      void 
 14683 ;; Registers used:
 14684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/0
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14694 ;;Total ram usage:        0 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:    1
 14697 ;; This function calls:
 14698 ;;		_EUSART1_RxDataHandler
 14699 ;; This function is called by:
 14700 ;;		_EUSART1_Initialize
 14701 ;;		_EUSART1_Receive_ISR
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text91
 14706  003970                     __ptext91:
 14707                           	opt callstack 0
 14708  003970                     _EUSART1_DefaultErrorHandler:
 14709                           	opt callstack 15
 14710  003970                     
 14711                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 14712  003970  ECC0  F01B         	call	_EUSART1_RxDataHandler	;wreg free
 14713  003974  0012               	return		;funcret
 14714  003976                     __end_of_EUSART1_DefaultErrorHandler:
 14715                           	opt callstack 0
 14716                           
 14717 ;; *************** function _EUSART1_RxDataHandler *****************
 14718 ;; Defined at:
 14719 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;		None
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;		None
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  1    wreg      void 
 14726 ;; Registers used:
 14727 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14737 ;;Total ram usage:        0 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; This function calls:
 14740 ;;		Nothing
 14741 ;; This function is called by:
 14742 ;;		_EUSART1_Receive_ISR
 14743 ;;		_EUSART1_DefaultErrorHandler
 14744 ;; This function uses a non-reentrant model
 14745 ;;
 14746                           
 14747                           	psect	text92
 14748  003780                     __ptext92:
 14749                           	opt callstack 0
 14750  003780                     _EUSART1_RxDataHandler:
 14751                           	opt callstack 16
 14752  003780                     
 14753                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 14754  003780  0E64               	movlw	low _eusart1RxBuffer
 14755  003782  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 14756  003784  6ED9               	movwf	fsr2l,c
 14757  003786  6ADA               	clrf	fsr2h,c
 14758  003788  0E04               	movlw	high _eusart1RxBuffer
 14759  00378A  22DA               	addwfc	fsr2h,f,c
 14760  00378C  CF99 FFDF          	movff	3993,indf2	;volatile
 14761  003790  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 14762  003792                     
 14763                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 14764  003792  0E63               	movlw	99
 14765  003794  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 14766  003796  EFCF  F01B         	goto	i2u390_41
 14767  00379A  EFD1  F01B         	goto	i2u390_40
 14768  00379E                     i2u390_41:
 14769  00379E  EFD3  F01B         	goto	i2l4564
 14770  0037A2                     i2u390_40:
 14771  0037A2                     
 14772                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 14773  0037A2  0E00               	movlw	0
 14774  0037A4  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 14775  0037A6                     i2l4564:
 14776                           
 14777                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 14778  0037A6  0100               	movlb	0	; () banked
 14779  0037A8  2BB3               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 14780  0037AA                     
 14781                           ; BSR set to: 0
 14782  0037AA  0012               	return		;funcret
 14783  0037AC                     __end_of_EUSART1_RxDataHandler:
 14784                           	opt callstack 0
 14785                           
 14786                           	psect	text93
 14787  000000                     __ptext93:
 14788                           	opt callstack 0
 14789  000000                     
 14790                           	psect	rparam
 14791  0000                     
 14792                           	psect	temp
 14793  00005B                     btemp:
 14794                           	opt callstack 0
 14795  00005B                     	ds	1
 14796  0000                     int$flags	set	btemp
 14797  0000                     wtemp8	set	btemp+1
 14798  0000                     ttemp5	set	btemp+1
 14799  0000                     ttemp6	set	btemp+4
 14800  0000                     ttemp7	set	btemp+8
 14801                           tosu	equ	0xFFF
 14802                           tosh	equ	0xFFE
 14803                           tosl	equ	0xFFD
 14804                           stkptr	equ	0xFFC
 14805                           pclatu	equ	0xFFB
 14806                           pclath	equ	0xFFA
 14807                           pcl	equ	0xFF9
 14808                           tblptru	equ	0xFF8
 14809                           tblptrh	equ	0xFF7
 14810                           tblptrl	equ	0xFF6
 14811                           tablat	equ	0xFF5
 14812                           prodh	equ	0xFF4
 14813                           prodl	equ	0xFF3
 14814                           indf0	equ	0xFEF
 14815                           postinc0	equ	0xFEE
 14816                           postdec0	equ	0xFED
 14817                           preinc0	equ	0xFEC
 14818                           plusw0	equ	0xFEB
 14819                           fsr0h	equ	0xFEA
 14820                           fsr0l	equ	0xFE9
 14821                           wreg	equ	0xFE8
 14822                           indf1	equ	0xFE7
 14823                           postinc1	equ	0xFE6
 14824                           postdec1	equ	0xFE5
 14825                           preinc1	equ	0xFE4
 14826                           plusw1	equ	0xFE3
 14827                           fsr1h	equ	0xFE2
 14828                           fsr1l	equ	0xFE1
 14829                           bsr	equ	0xFE0
 14830                           indf2	equ	0xFDF
 14831                           postinc2	equ	0xFDE
 14832                           postdec2	equ	0xFDD
 14833                           preinc2	equ	0xFDC
 14834                           plusw2	equ	0xFDB
 14835                           fsr2h	equ	0xFDA
 14836                           fsr2l	equ	0xFD9
 14837                           status	equ	0xFD8


Data Sizes:
    Strings     1215
    Constant    0
    Data        317
    BSS         519
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     68      96
    BANK1           256      0     238
    BANK2           256      0     224
    BANK3           256     68     232
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1427(BANK3[20]), 
		 -> ValidateCmd@ConfName_1423(BANK3[20]), ValidateCmd@ConfName(BANK3[20]), STR_24(CODE[9]), STR_23(CODE[12]), 
		 -> Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1427(BANK3[20]), 
		 -> ValidateCmd@ConfName_1423(BANK3[20]), ValidateCmd@ConfName(BANK3[20]), STR_24(CODE[9]), STR_23(CODE[12]), 
		 -> Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_52(CODE[1]), STR_45(CODE[1]), STR_43(CODE[1]), STR_36(CODE[1]), 
		 -> ReadRX232@temp(COMRAM[2]), STR_4(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_52(CODE[1]), STR_45(CODE[1]), STR_43(CODE[1]), STR_36(CODE[1]), 
		 -> ReadRX232@temp(COMRAM[2]), STR_4(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_64(CODE[4]), STR_62(CODE[5]), STR_60(CODE[7]), STR_58(CODE[2]), 
		 -> STR_56(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_54(CODE[29]), STR_53(CODE[31]), STR_51(CODE[30]), STR_50(CODE[24]), 
		 -> STR_49(CODE[25]), STR_48(CODE[17]), STR_47(CODE[27]), STR_46(CODE[33]), 
		 -> STR_44(CODE[46]), STR_42(CODE[30]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[17]), STR_38(CODE[27]), STR_37(CODE[33]), STR_35(CODE[36]), 
		 -> STR_34(CODE[67]), STR_33(CODE[19]), STR_32(CODE[55]), STR_31(CODE[17]), 
		 -> STR_30(CODE[16]), STR_29(CODE[4]), STR_28(CODE[35]), STR_27(CODE[55]), 
		 -> STR_26(CODE[53]), STR_25(CODE[29]), STR_22(CODE[43]), STR_21(CODE[23]), 
		 -> STR_20(CODE[25]), STR_19(CODE[61]), STR_18(CODE[27]), STR_17(CODE[21]), 
		 -> STR_16(CODE[24]), STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[19]), 
		 -> STR_12(CODE[36]), STR_11(CODE[4]), STR_10(CODE[23]), STR_9(CODE[32]), 
		 -> STR_8(CODE[28]), STR_7(CODE[54]), STR_6(CODE[24]), STR_5(CODE[16]), 
		 -> STR_3(CODE[28]), STR_2(CODE[21]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2052_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_54(CODE[29]), STR_53(CODE[31]), STR_51(CODE[30]), STR_50(CODE[24]), 
		 -> STR_49(CODE[25]), STR_48(CODE[17]), STR_47(CODE[27]), STR_46(CODE[33]), 
		 -> STR_44(CODE[46]), STR_42(CODE[30]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[17]), STR_38(CODE[27]), STR_37(CODE[33]), STR_35(CODE[36]), 
		 -> STR_34(CODE[67]), STR_33(CODE[19]), STR_32(CODE[55]), STR_31(CODE[17]), 
		 -> STR_30(CODE[16]), STR_29(CODE[4]), STR_28(CODE[35]), STR_27(CODE[55]), 
		 -> STR_26(CODE[53]), STR_25(CODE[29]), STR_22(CODE[43]), STR_21(CODE[23]), 
		 -> STR_20(CODE[25]), STR_19(CODE[61]), STR_18(CODE[27]), STR_17(CODE[21]), 
		 -> STR_16(CODE[24]), STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[19]), 
		 -> STR_12(CODE[36]), STR_11(CODE[4]), STR_10(CODE[23]), STR_9(CODE[32]), 
		 -> STR_8(CODE[28]), STR_7(CODE[54]), STR_6(CODE[24]), STR_5(CODE[16]), 
		 -> STR_3(CODE[28]), STR_2(CODE[21]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_54(CODE[29]), STR_53(CODE[31]), STR_51(CODE[30]), STR_50(CODE[24]), 
		 -> STR_49(CODE[25]), STR_48(CODE[17]), STR_47(CODE[27]), STR_46(CODE[33]), 
		 -> STR_44(CODE[46]), STR_42(CODE[30]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[17]), STR_38(CODE[27]), STR_37(CODE[33]), STR_35(CODE[36]), 
		 -> STR_34(CODE[67]), STR_33(CODE[19]), STR_32(CODE[55]), STR_31(CODE[17]), 
		 -> STR_30(CODE[16]), STR_29(CODE[4]), STR_28(CODE[35]), STR_27(CODE[55]), 
		 -> STR_26(CODE[53]), STR_25(CODE[29]), STR_22(CODE[43]), STR_21(CODE[23]), 
		 -> STR_20(CODE[25]), STR_19(CODE[61]), STR_18(CODE[27]), STR_17(CODE[21]), 
		 -> STR_16(CODE[24]), STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[19]), 
		 -> STR_12(CODE[36]), STR_11(CODE[4]), STR_10(CODE[23]), STR_9(CODE[32]), 
		 -> STR_8(CODE[28]), STR_7(CODE[54]), STR_6(CODE[24]), STR_5(CODE[16]), 
		 -> STR_3(CODE[28]), STR_2(CODE[21]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 67
		 -> STR_54(CODE[29]), STR_53(CODE[31]), STR_51(CODE[30]), STR_50(CODE[24]), 
		 -> STR_49(CODE[25]), STR_48(CODE[17]), STR_47(CODE[27]), STR_46(CODE[33]), 
		 -> STR_44(CODE[46]), STR_42(CODE[30]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[17]), STR_38(CODE[27]), STR_37(CODE[33]), STR_35(CODE[36]), 
		 -> STR_34(CODE[67]), STR_33(CODE[19]), STR_32(CODE[55]), STR_31(CODE[17]), 
		 -> STR_30(CODE[16]), STR_29(CODE[4]), STR_28(CODE[35]), STR_27(CODE[55]), 
		 -> STR_26(CODE[53]), STR_25(CODE[29]), STR_22(CODE[43]), STR_21(CODE[23]), 
		 -> STR_20(CODE[25]), STR_19(CODE[61]), STR_18(CODE[27]), STR_17(CODE[21]), 
		 -> STR_16(CODE[24]), STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[19]), 
		 -> STR_12(CODE[36]), STR_11(CODE[4]), STR_10(CODE[23]), STR_9(CODE[32]), 
		 -> STR_8(CODE[28]), STR_7(CODE[54]), STR_6(CODE[24]), STR_5(CODE[16]), 
		 -> STR_3(CODE[28]), STR_2(CODE[21]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1427(BANK3[20]), ValidateCmd@ConfName_1423(BANK3[20]), ValidateCmd@ConfName(BANK3[20]), 
		 -> STR_24(CODE[9]), STR_23(CODE[12]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1427(BANK3[20]), ValidateCmd@ConfName_1423(BANK3[20]), ValidateCmd@ConfName(BANK3[20]), 
		 -> STR_24(CODE[9]), STR_23(CODE[12]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1427(BANK3[20]), ValidateCmd@ConfName_1423(BANK3[20]), 
		 -> ValidateCmd@ConfName(BANK3[20]), STR_24(CODE[9]), STR_23(CODE[12]), Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1427(BANK3[20]), ValidateCmd@ConfName_1423(BANK3[20]), ValidateCmd@ConfName(BANK3[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    UART1_Write_string@data	PTR unsigned int  size(2) Largest target is 64
		 -> MBRespon(BANK1[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _ValidateCmd->_SaveCardDat
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  714386
                                             65 BANK0      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  241903
                                              0 BANK3     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1061
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   38137
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  126206
                                             47 BANK0     18    10      8
                    _ClearEEAddRange
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   43623
                                             84 COMRAM     2     2      0
                                             43 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2797
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4    1217
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   39151
                                             84 COMRAM     2     2      0
                                             43 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     667
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                     0     0      0   38137
                      _Initalisation
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Initalisation                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   38239
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  114998
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   38582
                                             43 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   38208
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   78474
                                             45 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   38270
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   40099
                                             45 BANK0      6     6      0
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          6     4      2   40121
                                             45 BANK0      6     4      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1168
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     590
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PrintModRespon                                       3     3      0   38239
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   38137
                                             29 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33802
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   33239
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    8147
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7529
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3722
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8383
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    6117
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2    1300
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _Initalisation
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _PrintModRespon
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _Initalisation
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_ReadByte
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     44      E8      12       90.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E0      10       87.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      EE       8       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      60       5       60.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     438       6        0.0%
DATA                 0      0     438       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 14 11:59:50 2021

                      _eusart1TxBufferRemaining 00BE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 2BE0  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 3854                                             l124 389C  
                                           l212 3514                                             l214 3522  
                                           l302 386C                                             l127 383A  
                                           l215 352E                                             l320 30A8  
                                           l144 3978                                             l321 30C0  
                                           l330 394E                                             l218 3884  
                                           l315 32C2                                             l324 30F2  
                                           l503 393A                                             l512 391C  
                                           l506 3930                                             l362 38FE  
                                           l515 3926                                             l371 38F4  
                                           l452 38B4                                             l701 2C68  
                                           l509 3944                                             l365 3912  
                                           l470 31C4                                             l446 2E62  
                                           l471 31DC                                             l455 38E0  
                                           l359 3908                                             l368 38EA  
                                           l296 2CEA                                             l449 38CC  
                                           l721 1538                                             l465 331A  
                                           l713 1E52                                             l474 320C  
                                           l706 1D36                                             l580 21C4  
                                           l661 395E                                             l733 240A  
                                           l709 1D5C                                             l821 2B52  
                                           l670 395A                                             l663 3960  
                                           l752 2FC6                                             l736 2430  
                                           l728 1146                                             l672 395C  
                                           l832 20B6                                             l665 3962  
                                           l738 24A0                                             l658 302E  
                                           l818 397C                                             l763 3408  
                                           l739 24A8                                             l683 34EA  
                                           l940 2874                                             l668 3958  
                                           l844 31AE                                             l677 3454  
                                           l942 28AE                                             l950 075C  
                                           l758 2EDE                                             l766 22D6  
                                           l694 2656                                             l862 0EFC  
                                           l838 36AA                                             l783 1F92  
                                           l855 0D54                                             l937 2832  
                                           l948 0754                                             l885 16D6  
                                           l991 1870                                             l975 1758  
                                           l968 0992                                             l977 1760  
                                           l986 1820                                             l987 1868  
                                           l996 1180                                             l998 1188  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 390A  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 3900  
                                           _abs 35F8                                             _pad 27EE  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1011 09CC                                            l1020 0A6A  
                                          l1013 09D4                                            l1006 1348  
                                          l1034 0C06                                            l1050 0220  
                                          ?_abs 0017                                            l1036 0C68  
                                          l1207 1CF6                                            l1080 381E  
                                          l1065 06B2                                            l1076 308A  
                                          l1077 3092                                            l1194 1B92  
                                          l1525 23C6                                            l1518 23A6  
                                          l1535 2726                                            l1528 2706  
                                          l1812 371A                                            l1806 336C  
                                          l6000 0B8A                                            l1825 2584  
                                          l6010 0C14                                            l6002 0BA6  
                                          l1755 362E                                            l6020 1872  
                                          l6012 0C1A                                            l6004 0BC4  
                                          l6100 022E                                            l1852 37D2  
                                          l4500 38EC                                            l1837 2AC4  
                                          l1845 3572                                            l5070 33E8  
                                          l5062 33BE                                            l6030 18E4  
                                          l6022 1886                                            l1758 3636  
                                          l6014 0C2A                                            l6006 0BDE  
                                          l6110 02A8                                            l6102 0230  
                                          l4502 38E2                                            l5072 33EC  
                                          l6040 190C                                            l6032 18E8  
                                          l6024 188A                                            l1792 3672  
                                          l6016 0C40                                            l6008 0BF8  
                                          l6112 02C8                                            l6120 0332  
                                          l6104 0256                                            l6200 3038  
                                          l4520 391E                                            l4504 3900  
                                          l1873 3150                                            l1786 1A02  
                                          l6042 1914                                            l6026 188E  
                                          l6130 03FE                                            l6122 0358  
                                          l6114 02D6                                            l6106 028C  
                                          l6202 3046                                            l4530 38B6  
                                          l4522 3914                                            l4506 38F6  
                                          l6210 34FA                                            l1859 37F8  
                                          l1867 2F52                                            l5068 33CE  
                                          l6052 19C2                                            l6044 194A  
                                          l6036 18EE                                            l6028 18AC  
                                          l1884 3262                                            l6140 04A0  
                                          l6132 0424                                            l6124 037E  
                                          l6108 029A                                            l6204 306C  
                                          l4540 31B2                                            l4700 32C4  
                                          l4524 3932                                            l4508 390A  
                                          l4620 2B8C                                            l6220 350A  
                                          l6212 34FE                                            l6300 1F9C  
                                          l7020 2170                                            l1789 1A0A  
                                          l5182 341A                                            l1798 3752  
                                          l6054 19D4                                            l6038 1904  
                                          l6150 056E                                            l6142 04EA  
                                          l6134 045A                                            l6126 03C6  
                                          l6118 0320                                            l7022 01E0  
                                          l6070 0174                                            l6062 012A  
                                          l4550 3202                                            l4542 31D4  
                                          l4534 38CE                                            l4710 3308  
                                          l4702 32C4                                            l4526 3928  
                                          l4630 2BC2                                            l4622 2BB6  
                                          l6222 350E                                            l6214 3502  
                                          l6206 34EC                                            l6230 326C  
                                          l6310 1FF6                                            l6302 1FB0  
                                          ?_pad 0017                                            l1879 33BC  
                                          l1895 36E2                                            l5184 342A  
                                          l5176 340A                                            l6056 19E6  
                                          l7024 1934                                            l6048 1982  
                                          l5600 2A5E                                            l6152 0586  
                                          l6160 060C                                            l6080 019A  
                                          l6072 0180                                            l6064 0150  
                                          l4552 3206                                            l4544 31DE  
                                          l6400 2636                                            l4712 330C  
                                          l4704 32D6                                            l4528 393C  
                                          l4632 2BC4                                            l4624 2BB8  
                                          l4616 2B54                                            l4640 3820  
                                          l6224 3512                                            l6216 3506  
                                          l6208 34F4                                            l6240 32B0  
                                          l6232 326C                                            l6312 201A  
                                          l6304 1FC4                                            l1889 326A  
                                          l5186 342E                                            l5602 2A7C  
                                          l5610 337A                                            l6162 0632  
                                          l6170 0660                                            l6154 0594  
                                          l6146 0522                                            l6138 047A  
                                          l6074 0182                                            l6066 015E  
                                          l4546 31F0                                            l4554 3208  
                                          l4538 31B2                                            l4714 3310  
                                          l4706 32F6                                            l6410 1D1A  
                                          l4650 2E08                                            l4642 3886  
                                          l4634 2BC6                                            l4626 2BBA  
                                          l4618 2B7C                                            l6218 3508  
                                          l6242 32B4                                            l6234 327E  
                                          l6226 3856                                            l6314 2042  
                                          l6306 1FD0                                            l6322 2064  
                                          l6330 20AC                                            l5188 344A  
                                          l5700 1A80                                            l5604 2AB2  
                                          l5620 353C                                            l5612 337E  
                                          l6172 066E                                            l6164 0640  
                                          l6156 05D0                                            l6148 0548  
                                          l6092 01AC                                            l6084 01A0  
                                          l6076 0194                                            l6068 0170  
                                          l6252 37AC                                            l4548 31F2  
                                          l6404 264C                                            l4716 3314  
                                          l4708 32F8                                            l6420 1D4A  
                                          l6412 1D2E                                            l4660 2E1C  
                                          l4652 2E0C                                            l4644 2DE8  
                                          l4636 2BC8                                            l4628 2BBC  
                                          l6340 317C                                            l6244 32B8  
                                          l6236 329E                                            l6324 2076  
                                          l6316 2054                                            l6308 1FE2  
                                          l6500 0D60                                            l5710 1ADA  
                                          l5702 1A9E                                            l5622 354E  
                                          l5614 33B0                                            l5630 27EE  
                                          l6166 0654                                            l6254 37B6  
                                          l4750 34CA                                            l4718 3318  
                                          l6430 1DAE                                            l6422 1D56  
                                          l6406 1CF8                                            l4662 2E28  
                                          l4654 2E10                                            l4646 2DEC  
                                          l4670 2C6E                                            l4638 3976  
                                          l6350 2AD4                                            l6342 318C  
                                          l6334 3152                                            l6246 32BC  
                                          l6238 32A0                                            l6270 2522  
                                          l6262 24AA                                            l6326 2092  
                                          l6318 2058                                            l6510 0DD6  
                                          l6502 0D74                                            l5712 1B08  
                                          l5704 1AA6                                            l5720 1B42  
                                          l5624 3552                                            l5608 336E  
                                          l5640 283E                                            l5632 27FC  
                                          l5800 2700                                            l6096 01B8  
                                          l6088 01A6                                            l6176 067A  
                                          l4840 23E8                                            l4744 34A2  
                                          l6440 1E4A                                            l6432 1DC8  
                                          l6424 1D62                                            l6408 1CFE  
                                          l4664 2E34                                            l4656 2E14  
                                          l4648 2DF8                                            l4680 2C98  
                                          l4672 2C7A                                            l6360 2B28  
                                          l6352 2AD8                                            l6344 3192  
                                          l6336 3170                                            l6248 32C0  
                                          l6280 256C                                            l6264 24D0  
                                          l6272 253E                                            l6328 20A0  
                                          l6520 0E3C                                            l6512 0DF4  
                                          l6504 0D8A                                            l5810 3366  
                                          l5802 331C                                            l5722 1B52  
                                          l5714 1B28                                            l5706 1ABA  
                                          l5730 1B98                                            l5618 3530  
                                          l5642 2852                                            l5634 2810  
                                          l5626 36AC                                            l6178 06A0  
                                          l6098 020E                                            l6450 2E64  
                                          l4850 241E                                            l4842 2402  
                                          l6370 2FD6                                            l4746 34B6  
                                          l6434 1DD8                                            l6426 1D74  
                                          l6418 1D44                                            l6610 2C0E  
                                          l6602 2BE2                                            l4666 2E5E  
                                          l4658 2E18                                            l4690 2CE6  
                                          l4682 2C9C                                            l4674 2C8A  
                                          l6362 2B36                                            l6354 2AE6  
                                          l6346 3196                                            l6338 3170  
                                          l6290 387E                                            l6282 386E  
                                          l6274 2550                                            l6266 24F2  
                                          l6194 30F4                                            l6258 37D4  
                                          l6530 0E86                                            l6522 0E48  
                                          l6514 0DFA                                            l6506 0D9E  
                                          l5804 3320                                            l5724 1B72  
                                          l5716 1B2A                                            l5708 1AC8  
                                          l5740 1BF8                                            l5732 1BA6  
                                          l5652 35F8                                            l5580 30C2  
                                          l5644 2856                                            l5636 281E  
                                          l5820 071C                                            l5900 17B8  
                                          l5660 3638                                            l6460 2EB4  
                                          l6452 2E64                                            l4860 246A  
                                          l4852 242A                                            l4836 23C8  
                                          l6620 1354                                            l6380 3012  
                                          l6700 111A                                            l4748 34C6  
                                          l6436 1DF4                                            l6428 1D78  
                                          l6612 2C38                                            l6604 2BE2  
                                          l4684 2CA0                                            l4676 2C90  
                                          l4668 2C6A                                            l6364 2B44  
                                          l6356 2AF4                                            l6348 2AC6  
                                          l6292 3880                                            l6284 3874  
                                          l6276 2564                                            l6268 2502  
                                          l6196 3104                                            l6540 0EE8  
                                          l6532 0EA0                                            l6524 0E50  
                                          l6516 0E12                                            l6508 0DAC  
                                          l5806 3334                                            l5718 1B3C  
                                          l5750 1C6E                                            l5742 1C16  
                                          l5734 1BC6                                            l5654 3612  
                                          l5582 30D4                                            l5590 30EE  
                                          l5574 3096                                            l5646 2882  
                                          l5638 282A                                            l5830 0776  
                                          l5822 072C                                            l5814 06B4  
                                          l5902 17C4                                            l5670 3256  
                                          l6198 3030                                            l6462 2ED2  
                                          l6454 2E72                                            l4862 2484  
                                          l4854 2436                                            l4838 23CC  
                                          l6710 21FA                                            l6630 13C6  
                                          l6622 1378                                            l6366 2FC8  
                                          l6702 112A                                            l6390 25C0  
                                          l6382 2586                                            l6438 1E20  
                                          l6446 1E50                                            l6614 2C3E  
                                          l6606 2BF0                                            l4686 2CAC  
                                          l4678 2C94                                            l6358 2B1A  
                                          l6294 3882                                            l6286 3878  
                                          l6278 2568                                            l6534 0EA6  
                                          l6526 0E68                                            l6518 0E18  
                                          l6470 369A                                            l6550 2F2E  
                                          l6542 2EE0                                            l5680 3816  
                                          l5808 3362                                            l5760 1CD6  
                                          l5752 1C8E                                            l5744 1C1E  
                                          l5736 1BCA                                            l5728 1B94  
                                          l5584 30D6                                            l5576 3096  
                                          l5592 3948                                            l5648 2896  
                                          l5840 07A2                                            l5832 0784  
                                          l5824 072E                                            l5816 06D4  
                                          l5912 1832                                            l5904 17FA  
                                          l5920 1158                                            l5656 36E4  
                                          l5664 320E                                            l6456 2E80  
                                          l4864 2494                                            l4856 2448  
                                          l4848 2418                                            l6720 224C  
                                          l6712 21FE                                            l6640 1476  
                                          l6632 13CA                                            l6624 137C  
                                          l6376 2FDE                                            l6368 2FD6  
                                          l6704 1132                                            l6392 25DE  
                                          l6384 259C                                            l4696 389E  
                                          l6560 1E7A                                            l6616 2C5C  
                                          l6608 2C02                                            l4688 2CB8  
                                          l6288 387C                                            l6536 0EBE  
                                          l6528 0E76                                            l6480 0C80  
                                          l6472 369E                                            l6464 3674  
                                          l6544 2EE4                                            l5674 371C  
                                          l5690 1A3E                                            l5754 1CA0  
                                          l5746 1C32                                            l5738 1BD8  
                                          l5586 30E6                                            l5578 30B8  
                                          l5594 2A30                                            l5850 08AE  
                                          l5842 0824                                            l5834 078A  
                                          l5826 0748                                            l5818 06FC  
                                          l5914 1846                                            l5906 17FE  
                                          l5770 230A                                            l5930 11C2  
                                          l5922 115A                                            l6458 2EAE  
                                          l4890 2F90                                            l4882 2F54  
                                          l4858 244C                                            l6730 22BE  
                                          l6722 2264                                            l6714 222A  
                                          l6706 21CC                                            l6650 1510  
                                          l6642 149E                                            l6634 13D6  
                                          l6626 13A0                                            l6618 134A  
                                          l6378 300E                                            l6394 25EE  
                                          l6386 25B8                                            l6570 1EC2  
                                          l6554 1E54                                            l6298 1F94  
                                          l6538 0EC4                                            l6490 0D14  
                                          l6482 0CAE                                            l6474 0C6A  
                                          l6466 3686                                            l6546 2EEC  
                                          l6810 20C2                                            l6802 20B8  
                                          l5692 1A42                                            l5684 1A0C  
                                          l5748 1C40                                            l5756 1CA6  
                                          l5588 30EA                                            l5596 2A42  
                                          l5860 0920                                            l5852 08CC  
                                          l5844 082A                                            l5836 0792  
                                          l5828 0764                                            l5916 184A  
                                          l5908 1802                                            l5780 238C  
                                          l5772 231E                                            l5764 22D8  
                                          l5932 11C8                                            l5940 12AE  
                                          l5924 1174                                            l5668 3244  
                                          l4892 2FA4                                            l4884 2F58  
                                          l6732 22C2                                            l6724 227C  
                                          l6716 222E                                            l6708 21D6  
                                          l6652 1520                                            l6644 14CE  
                                          l6636 1450                                            l6628 13A4  
                                          l6660 0F3C                                            l6396 2610  
                                          l6388 25BC                                            l6580 1EE8  
                                          l6564 1E92                                            l6572 1EC8  
                                          l6556 1E58                                            l6492 0D28  
                                          l6484 0CCC                                            l6476 0C6A  
                                          l6468 368A                                            l6548 2F16  
                                          l6740 1576                                            l6820 20D0  
                                          l6812 20C4                                            l6804 20BC  
                                          l5678 37FA                                            l5694 1A50  
                                          l5686 1A10                                            l5758 1CB6  
                                          l5598 2A54                                            l5870 095A  
                                          l5862 092E                                            l5854 08E6  
                                          l5846 0830                                            l5838 079C  
                                          l5782 238E                                            l5774 232C  
                                          l5766 22E4                                            l5790 267E  
                                          l5942 12C0                                            l5950 1320  
                                          l5934 123E                                            l5926 11B0  
                                          l5918 1148                                            l4894 2FA8  
                                          l4886 2F6C                                            l6726 2298  
                                          l6718 2248                                            l6654 1524  
                                          l6646 14EA                                            l6638 1454  
                                          l6670 0F90                                            l6662 0F40  
                                          l6398 2624                                            l6590 1F6A  
                                          l6582 1EF0                                            l6574 1EDA  
                                          l6566 1EAA                                            l6558 1E6C  
                                          l4990 3844                                            l6494 0D30  
                                          l6486 0CE0                                            l6478 0C72  
                                          l6750 15A6                                            l6742 157A  
                                          l6734 153A                                            l6830 20FE  
                                          l6822 20D4                                            l6814 20C6  
                                          l6806 20BE                                            l5696 1A70  
                                          l5688 1A1E                                            l5864 0934  
                                          l5872 096A                                            l5856 0900  
                                          l5848 0894                                            l5880 16F2  
                                          l5784 23A0                                            l5776 233E  
                                          l5768 2302                                            l5792 2692  
                                          l5944 12DE                                            l5936 1244  
                                          l5928 11B8                                            l5960 09C0  
                                          l4888 2F78                                            l6728 22B2  
                                          l6648 1504                                            l6680 1004  
                                          l6672 0FB4                                            l6664 0F64  
                                          l6656 0EFE                                            l6592 1F7C  
                                          l6576 1EDE                                            l6584 1F12  
                                          l6568 1EAE                                            l4992 3848  
                                          l6496 0D42                                            l6488 0D00  
                                          l6760 15D4                                            l6736 153A  
                                          l6832 2106                                            l6824 20D8  
                                          l6816 20C8                                            l6808 20C0  
                                          l5698 1A74                                            l5866 0946  
                                          l5858 090E                                            l5890 1736  
                                          l5882 1704                                            l5778 236C  
                                          l5794 26A0                                            l5786 2658  
                                          l5946 12F8                                            l5938 124A  
                                          l5970 0A24                                            l5962 09EA  
                                          l5954 0994                                            l6682 1014  
                                          l6690 1080                                            l6674 0FB8  
                                          l6666 0F68                                            l6658 0F18  
                                          l6594 1F8A                                            l6586 1F32  
                                          l6578 1EE2                                            l4994 384C  
                                          l4986 383C                                            l6498 0D54  
                                          l6762 15E6                                            l6738 1550  
                                          l6834 2116                                            l6826 20D8  
                                          l6818 20CC                                            l5868 0952  
                                          l5884 170C                                            l5876 16D8  
                                          l5796 26CE                                            l5788 2676  
                                          l5948 1312                                            l5972 0A2A  
                                          l5964 09F2                                            l5956 09A4  
                                          l6692 10A8                                            l6684 1046  
                                          l6676 0FDC                                            l6668 0F8C  
                                          l6588 1F56                                            l4996 3850  
                                          l4988 3840                                            l6764 15E6  
                                          l6772 1610                                            l6748 1580  
                                          l6860 21AC                                            l6844 213A  
                                          l6836 211A                                            l6852 2158  
                                          l6828 20EC                                            l5894 1782  
                                          l5886 1720                                            l5878 16EA  
                                          l5798 26EE                                            l5990 0AFC  
                                          l5982 0A9E                                            l5974 0A32  
                                          l5966 0A12                                            l5958 09A6  
                                          l6694 10D8                                            l6686 1052  
                                          l6678 0FE0                                            l6598 1F90  
                                          l6790 16AA                                            l6774 1636  
                                          l6758 15AE                                            l6838 2122  
                                          l6854 2186                                            l5896 1796  
                                          l5888 1728                                            l5984 0AB0  
                                          l5992 0B10                                            l5976 0A4E  
                                          l5968 0A1A                                            l6696 10F4  
                                          l6688 107C                                            l6792 16AA  
                                          l6776 1648                                            l6856 21A8  
                                          l5898 179A                                            l5994 0B20  
                                          l5978 0A5E                                            l6698 110E  
                                          l6794 16D4                                            l6778 1648  
                                          l6786 1672                                            l5996 0B26  
                                          l5988 0AEA                                            l6788 1698  
                                          l5998 0B2C                                            STR_1 FF54  
                                          STR_2 FF3F                                            STR_3 FE30  
                                          STR_4 FF3E                                            STR_5 FFC1  
                                          STR_6 FEE4                                            STR_7 FC2D  
                                          STR_8 FE14                                            STR_9 FD7D  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            u4000 32D6  
                                          _LATD 000F86                                            u4001 32D2  
                                          _LATE 000F87                                            u4010 3308  
                                          u4011 3304                                            u4020 34EA  
                                          u4021 34E6                                            u5000 33A0  
                                          u4200 2FA4                                            u4201 2FA0  
                                          u5010 33B0                                            u4210 2FC6  
                                          u5011 33AC                                            u4211 2FC2  
                                          u5020 3572                                            u5100 3714  
                                          u4140 2418                                            u5021 356E  
                                          u5101 370E                                            u4141 2414  
                                          u5110 3716                                            u5030 36DC  
                                          u4150 2448                                            u5007 3396  
                                          u5031 36D6                                            u4151 2444  
                                          u5200 1A50                                            u5120 366C  
                                          u5040 36DE                                            u6000 0256  
                                          u4160 246A                                            u5201 1A4C  
                                          u5121 3666                                            u6001 0252  
                                          u4161 2466                                            u5050 27FC  
                                          u5130 366E                                            u6010 029A  
                                          u4170 2494                                            u5211 1A7A  
                                          u5051 27F8                                            u6011 0296  
                                          u4171 2490                                            u5220 1A9E  
                                          u5300 1C6E                                            u5060 281E  
                                          u5140 323E                                            u6100 056E  
                                          u6020 0318                                            u5221 1A9A  
                                          u5301 1C6A                                            u5061 281A  
                                          u5141 3238                                            u6101 056A  
                                          u6021 0312                                            u5230 1AC8  
                                          u5310 1CB6                                            u5070 2874  
                                          u5150 3240                                            u6110 0632  
                                          u6030 031A                                            u4190 2F6C  
                                          u5231 1AC4                                            u5311 1CB2  
                                          u5071 2870                                            u6111 062E  
                                          u4191 2F68                                            u4600 344A  
                                          u5400 3362                                            u5240 1B08  
                                          u5080 2882                                            u5160 3256  
                                          u6040 0332                                            u6200 32B0  
                                          u6120 313E                                            u4601 3446  
                                          u5401 335E                                            u5241 1B04  
                                          u5081 287E                                            u5321 22DE  
                                          u5161 3252                                            u6041 032E  
                                          u6201 32AC                                            u5170 374C  
                                          u5250 1B52                                            u5090 3612  
                                          u5410 06E4                                            u5330 2302  
                                          u6050 0358                                            u6210 24D0  
                                          u6130 3150                                            u5171 3746  
                                          u5251 1B4E                                            u5091 360E  
                                          u5411 06DE                                            u5331 22FE  
                                          u6051 0354                                            u6211 24CC  
                                          u6131 314C                                            u5180 374E  
                                          u5260 1BA6                                            u5500 08E6  
                                          u5420 06E6                                            u5340 232C  
                                          u6060 037E                                            u6140 308A  
                                          u6220 24F2                                            u6300 2054  
                                          _PMD0 000EE1                                            u5261 1BA2  
                                          u5501 08E2                                            u5341 2328  
                                          u6061 037A                                            u6141 3086  
                                          u6221 24EE                                            u6301 2050  
                                          _PMD1 000EE2                                            u4470 3408  
                                          u5190 1A1E                                            u5270 1BD8  
                                          u5510 0900                                            u5430 06FC  
                                          u5350 236C                                            u6070 0424  
                                          u6150 3522                                            u6230 253A  
                                          u6310 2076                                            _PMD2 000EE3  
                                          u4471 3404                                            u5191 1A1A  
                                          u5271 1BD4                                            u5511 08FC  
                                          u5431 06F8                                            u5351 2368  
                                          u6071 0420                                            u6151 351E  
                                          u6231 2536                                            u6127 3134  
                                          u6311 2072                                            _PMD3 000EE4  
                                          u5280 1C16                                            u5520 090E  
                                          u5440 072C                                            u5600 177E  
                                          u5360 2676                                            u6080 04A0  
                                          u3840 38CA                                            u6400 1DAE  
                                          u6320 31AE                                            u6240 2550  
                                          _PMD4 000EE5                                            u5281 1C12  
                                          u5521 090A                                            u5441 0728  
                                          u5601 177A                                            u5361 2672  
                                          u6081 049C                                            u3841 38C4  
                                          u6401 1DAA                                            u6321 31AA  
                                          u6241 254C                                            _PMD5 000EE6  
                                          u5290 1C40                                            u5530 0920  
                                          u5450 0748                                            u5610 17B8  
                                          u5370 26A0                                            u6090 0548  
                                          u3850 38CC                                            u6330 302E  
                                          u6410 1DD8                                            u6170 386A  
                                          u6250 2584                                            u5291 1C3C  
                                          u5531 091C                                            u5451 0744  
                                          u5611 17B4                                            u5371 269C  
                                          u6091 0544                                            u6331 302A  
                                          u6411 1DD4                                            u6171 3864  
                                          u6251 2580                                            u5540 092E  
                                          u5460 0776                                            u5620 17E6  
                                          u5380 26CE                                            u5700 12F8  
                                          u3860 38DE                                            u6340 25DE  
                                          u6420 1E20                                            u6180 386C  
                                          u6260 1FB0                                            u6500 0E3C  
                                          u5541 092A                                            u5461 0772  
                                          u5381 26CA                                            u5701 12F4  
                                          u3861 38D8                                            u6341 25DA  
                                          u6421 1E1C                                            u6165 352C  
                                          u6261 1FAC                                            u6501 0E38  
                                          u5390 3334                                            u5550 0946  
                                          u5470 0784                                            u5630 1820  
                                          u5710 1312                                            u3870 31C4  
                                          u6350 25EE                                            u6430 1E4A  
                                          u6166 352E                                            u6190 327E  
                                          u6270 1FC4                                            u6510 0EE8  
                                          u5391 3330                                            u5551 0942  
                                          u5471 0780                                            u5631 181C  
                                          u5711 130E                                            u3871 31C0  
                                          u6351 25EA                                            u6431 1E46  
                                          u6191 327A                                            u6271 1FC0  
                                          u6511 0EE4                                            u5480 08AE  
                                          u5640 182E                                            u5720 1320  
                                          u5800 0AE4                                            u6440 2ED2  
                                          u3880 31D4                                            u6360 2624  
                                          u6600 1F42                                            u6280 1FE2  
                                          u6520 2F16                                            u5481 08AA  
                                          u5641 182A                                            u5561 16E2  
                                          u5721 131C                                            u5801 0ADE  
                                          u6441 2ECE                                            u3881 31D0  
                                          u6361 2620                                            u6601 1F3C  
                                          u6281 1FDE                                            u6521 2F12  
                                          u4930 30A8                                            u5490 08CC  
                                          u5650 1868                                            u5570 1704  
                                          u5810 0AE6                                            u5730 09A4  
                                          u3890 3202                                            u3866 38E0  
                                          u6370 2648                                            u6610 1F6A  
                                          u6290 201A                                            u6450 3686  
                                          u6530 2F2E                                            u4931 30A4  
                                          u5491 08C8                                            u5651 1864  
                                          u5627 17DC                                            u5571 1700  
                                          u5731 09A0                                            u3891 31FE  
                                          u6371 2644                                            u6611 1F66  
                                          u6291 2016                                            u6451 3682  
                                          u6531 2F2A                                            u5900 18AC  
                                          u4940 30B8                                            u5580 1736  
                                          u5660 1158                                            u5820 0AFC  
                                          u5740 09C0                                            u3980 38B2  
                                          u6380 1D44                                            u6540 1E6C  
                                          u6620 2C02                                            u6460 0D00  
                                          u6700 15D4                                            u5901 18A8  
                                          u4941 30B4                                            u5581 1732  
                                          u5661 1154                                            u5821 0AF8  
                                          u5741 09BC                                            u3981 38AC  
                                          u6381 1D40                                            u6541 1E68  
                                          u6621 2BFE                                            u6461 0CFC  
                                          u6701 15D0                                            u5910 18E4  
                                          u4950 30E6                                            u5590 1754  
                                          u5670 1174                                            u5830 0B64  
                                          u5750 09EA                                            u3990 38B4  
                                          u6390 1D74                                            u6606 1F44  
                                          u6550 1E8E                                            u6630 2C5C  
                                          u6470 0D28                                            u5911 18E0  
                                          u4951 30E2                                            u5591 1750  
                                          u5671 1170                                            u5751 09E6  
                                          u6391 1D70                                            u6551 1E8A  
                                          u6631 2C58                                            u6471 0D24  
                                          u6711 15DE                                            u5920 1900  
                                          u4960 2A42                                            u5680 12C0  
                                          u5840 0BA6                                            u5760 0A4E  
                                          u6640 149E                                            u6560 1EC2  
                                          u6480 0D42                                            u6720 1636  
                                          u5921 18FC                                            u4961 2A3E  
                                          u5681 12BC                                            u5841 0BA2  
                                          u5761 0A4A                                            u6641 149A  
                                          u6561 1EBE                                            u6481 0D3E  
                                          u6721 1632                                            u5930 19BC  
                                          u4970 2A54                                            u5690 12DE  
                                          u5850 0BC4                                            u5770 0A98  
                                          u6650 1520                                            u6570 1EDA  
                                          u6490 0D54                                            u5931 19B6  
                                          u4971 2A50                                            u5691 12DA  
                                          u5851 0BC0                                            u5835 0B52  
                                          u5771 0A92                                            u6651 151C  
                                          u6571 1ED6                                            u6491 0D50  
                                          u6731 1640                                            u5940 19BE  
                                          u4980 2A7C                                            u5860 0BDE  
                                          u5780 0A9A                                            u6660 10A8  
                                          u6580 1F00                                            u6740 1698  
                                          u4981 2A78                                            u5861 0BDA  
                                          u6661 10A4                                            u6581 1EFA  
                                          u6741 1694                                            u5950 19D4  
                                          u4990 2AB2                                            u5870 0BF8  
                                          u5790 0AB0                                            u6670 112A  
                                          u6590 1F32                                            u5951 19D0  
                                          u4991 2AAE                                            u5871 0BF4  
                                          u5791 0AAC                                            u6671 1126  
                                          u6591 1F2E                                            u6751 16A2  
                                          u5960 19E6                                            u5880 0C06  
                                          u6680 1576                                            u6760 20EC  
                                          u5961 19E2                                            u5881 0C02  
                                          u6681 1572                                            u6761 20E8  
                                          u5890 0C14                                            u5970 0150  
                                          u6586 1F02                                            u6690 15A6  
                                          u6770 20FE                                            u5891 0C10  
                                          u5971 014C                                            u6691 15A2  
                                          u6771 20FA                                            u5980 0220  
                                          u6780 21A8                                            u5981 021C  
                                          u6781 21A4                                            u5990 022E  
                                          u5991 022A                                            u6857 0E06  
                                          u6867 0E5C                                            u6877 0EB2  
                           ValidateCmd@ConfName 03A4                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 31B0  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 3094  
                            ClearModbusRespon@i 0005                                  generateCRC@crc 0012  
                                          abs@a 0017                                            _dbuf 01A9  
                                          _atoi 1872                                            _main 20B8  
                                          _dtoa 06B4                                   ?_EUSART1_Read 0001  
                                          _prec 00A5                                   ?_EUSART2_Read 0001  
                                          _nout 01A7                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 16D8  
                                          btemp 005B                                            _utoa 1148  
                                          _xtoa 0994                          __size_of_Initalisation 0002  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 34A2  
                                 __CFG_CSWEN$ON 000000                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                       __size_of_DATAEE_WriteByte 0044  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 389E  
                         _eusart1RxStatusBuffer 0300                                 __end_of___aodiv 1B94  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1CF8  
                                         STR_10 FF13                                           STR_11 FF3B  
                                         STR_20 FE82                                           STR_12 FD15  
                                         STR_13 FF7C                                           STR_21 FEFC  
                                         STR_14 FF13                                           STR_30 FFB1  
                                         STR_22 FCC6                                           STR_15 FF3B  
                                         STR_23 FFD1                                           STR_31 FFA0  
                                         STR_24 FFDD                                           STR_16 FECC  
                                         STR_40 FE9B                                           STR_32 FBF6  
                                         STR_33 FF69                                           STR_17 FF2A  
                                         STR_41 FEB4                                           STR_25 FDF7  
                                 __CFG_WDTE$OFF 000000                                           STR_18 FE67  
                                         STR_42 FDBC                                           STR_26 FC63  
                                         STR_34 FB3F                                           STR_43 FF3E  
                                         STR_35 FCF1                                           STR_27 FBBF  
                                         STR_19 FB82                                           STR_36 FF3E  
                                         STR_60 FFE6                                           STR_28 FD39  
                                         STR_44 FC98                                           STR_29 FF3B  
                                         STR_61 FFF3                                           STR_53 FD9D  
                                         STR_37 FD5C                                           STR_62 FFF3  
                                         STR_38 FE4C                                           STR_54 FDDA  
                                         STR_63 FFF8                                           STR_55 FFED  
                                         STR_39 FF8F                                           STR_56 FFED  
                                         STR_64 FFF8                                           STR_57 FFFC  
                                         STR_58 FFFC                                ?_ClearModbusData 0001  
                                         STR_59 FFE6                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 23C8  
                                         ?_xtoa 0022                                 __end_of___lomod 2728  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 3974  
                                         i2l333 349C                                           i2l350 397E  
                                         i2l343 296E                                           i2l159 0112  
                                         i2l336 34A0                                           i2l353 3956  
                                         i2l347 377E                                           i2l356 3968  
                                         i2l480 35B6                                           i2l491 37AA  
                                         i2l477 35B2                                           i2l494 3980  
                                         i2l487 2A2E                                           i2l497 396E  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 00B1  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 3574                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 386E                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                                           _fputc 2A30  
                               __end_of_isalpha 3674                                           _fputs 3530  
                               __end_of_isdigit 3754                        SaveCardDat@dataeeAddrWrk 009D  
                               __end_of_memmove 2586                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00A3  
                                         _putch 3946                        __size_of_ClearEEAddRange 005E  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 36E4                                 __end_of_isspace 336E  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 371C                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 34A2  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00AD                                   ??_ModbusError 008F  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 326C                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 3982  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 3980  
                                 ??_SaveCardDat 0097                                  checkCRC@crcLow 0092  
                                  _toupper$2120 0011           __end_of_EUSART2_SetTxInterruptHandler 38EC  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 38E2  
                               __initialization 2728                                    __end_of_atoi 1A0C  
                    __end_of_EUSART1_Initialize 2E64                                    __end_of_main 21CC  
                                  __end_of_dtoa 0994                       __size_of_InitialiseString 008E  
                                  __end_of_stoa 1872                                    __end_of_utoa 134A  
                                  __end_of_xtoa 0C6A                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 1F94                                          ??_atoi 000E  
                                        ??_main 00A1                                          ??_dtoa 002C  
                                        ??_stoa 0014                                      _ModbusFC10 0EFE  
                                    _ModbusFC03 134A                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
                              __end_of_TogDebug 36AC                                   _Initalisation 397C  
                           SaveCardDat@NumBytes 0095             __end_of_EUSART2_DefaultErrorHandler 396A  
                   _EUSART2_DefaultErrorHandler 3964                                      _ModbusData 027C  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                          SaveCardDat@MBAddress 0091                      __end_of_EUSART2_Initialize 2CEC  
                      _eusart2TxBufferRemaining 01ED                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                ClearEEAddRange@i 0055  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                            __size_of_ReadRX232 0124                                  __CFG_WDTCCS$SC 000000  
                                        i2l5000 3468                                          i2l5010 28B0  
                                        i2l5002 347C                                          i2l5020 2908  
                                        i2l5012 28C0                                          i2l5004 3480  
                                        i2l5030 3574                                          i2l5022 2918  
                                        i2l5014 28D0                                          i2l5006 3490  
                                        i2l5040 35AC                                          i2l5032 3586  
                                        i2l5024 2930                                          i2l5016 28E0  
                                        i2l5008 3494                                          i2l5050 29B8  
                                        i2l5042 2970                                          i2l5034 3596  
                                        i2l5026 294C                                          i2l5018 28F8  
                                        i2l5060 2A2A                                          i2l5052 29C6  
                                        i2l5044 2980                                          i2l5036 3598  
                                        i2l5028 296A                                          i2l5054 29D6  
                                        i2l5046 298E                                          i2l5038 35A8  
                                        i2l4510 3754                                          i2l5056 29F0  
                                        i2l5048 299E                                          i2l4512 3764  
                                        i2l5058 2A0C                                          i2l4514 3766  
                                        i2l4516 3776                                          i2l5340 0072  
                                        i2l5332 001A                                          i2l4518 377A  
                                        i2l5350 00F4                                          i2l5342 0080  
                                        i2l5334 0028                                          i2l4560 3792  
                                        i2l5344 00AC                                          i2l5336 0038  
                                        _INLVLA 000F0D                                          i2l4562 37A2  
                                        i2l4722 396A                                          i2l5346 00BA  
                                        i2l5338 0046                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l4564 37A6  
                                        i2l4556 3780                                          i2l4724 3970  
                                        i2l5348 00E6                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l4558 3790  
                                        i2l4692 3950                                          i2l4694 3964  
                                        _TABLAT 000FF5                                          i2l4998 3456  
                                 ??_ValidateCmd 0057                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 006B                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 1E54  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 0093                                     ModbusFC10@j 0095  
                                   ModbusFC03@i 0091                                          _RXMode 3958  
                                        _TXMode 395E                                          _RXStat 00B0  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00E2  
                                        _ByteHi 00A7                                          _ByteLo 00BC  
                            _UART1_Write_string 2F54                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 008B                                      _PrintMB400 2FC8  
                           __end_of_ModbusError 22D8                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 37FA  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 0015  
                                     ??___lomod 0015                             ?_UART1_Write_string 0006  
                      ?_EUSART1_SetErrorHandler 0005                             SaveCardDat@readData 009B  
                           __end_of_SaveCardDat 0EFE                                          clear_0 27A6  
                                        clear_1 27B2                                          clear_2 27BE  
                                        clear_3 27CA                                          clear_4 27D6  
                                        _rxData 0400                     _EUSART2_FramingErrorHandler 01E3  
                                        _printf 37AC                                          pad@buf 0019  
                                 ReadRX232@temp 0055                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                  ?_Initalisation 0001  
                                        _strcat 37D4                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 3886                                          _strcmp 2EE0  
                                        _strcpy 30F4                                          _strlen 336E  
                                 _ExpectedBytes 013D                                          fputc@c 0007  
                                _PMD_Initialize 3820                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_memmove 000F                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FB3E  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 3456  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 3094                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0464  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0197  
                               _eusart1TxBuffer 017F                    __size_of_EUSART2_is_rx_ready 0018  
                             _SYSTEM_Initialize 383C                         __size_of_PrintModRespon 007C  
                               _eusart2TxBuffer 019F                                      __accesstop 0060  
                       __end_of__initialization 27E4                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 0090  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 37AC  
                           __end_of_ValidateCmd 16D8                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 397A                                    __pidataBANK1 2CEC  
                                  __pidataBANK2 2D6B                                    __pidataBANK3 35B8  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 34EC  
                                 __end_of_fputc 2AC6                                   __end_of_fputs 3574  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 3950  
                             __end_of_ReadRX232 20B8                          __end_of_PMD_Initialize 383C  
                          __end_of_EUSART1_Read 331C                            __end_of_EUSART2_Read 32C4  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 2A30  
                          ModbusError@ErrorCode 008D                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 3856                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 00B6                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 00B4                                   _eusart2TxHead 00BB  
                                    __pbssBANK0 00A3                                      __pbssBANK1 017F  
                                    __pbssBANK2 027C                                      __pbssBANK3 0300  
                                    __pbssBANK4 0400                                   _eusart2RxTail 00B9  
                                 _eusart1TxTail 00B5               _EUSART1_TxDefaultInterruptHandler 01E7  
                                 _eusart2TxTail 00BA                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 2C6A                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 21CC  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 3946  
                                   _SaveCardDat 0C6A                                     ?_PrintMB400 0001  
                              _InitialiseString 2AC6                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                 ??_Initalisation 0005  
                                       _MB300xx 0200                                         _MB301xx 0100  
                                       _MB302xx 0139                                         _MB303xx 0118  
                                       _MB304xx 010E                                         _MB400xx 0364  
                                       _MB305xx 012D                                         _MB306xx 0133  
                                       _MB307xx 0127                                         ?_printf 007D  
                               ?_PMD_Initialize 0001                               _ClearModbusRespon 33BE  
                                       ?_strcat 0013                                         ?_strcmp 0005  
                                       ?_strcpy 0009                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 393C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 3932                                ?_DATAEE_ReadByte 0005  
                         _eusart2RxStatusBuffer 018F                                       ?_checkCRC 0001  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 2970                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 153A  
                                       _Command 01C9                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00AB  
                           __size_of_ModbusFC10 024A                             __size_of_ModbusFC03 01F0  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                      ??_TogDebug 0055  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 1A0C                                         ___aomod 1B94  
                             generateCRC@crcLow 000C                                 __size_of___wmul 0026  
                                       ___lodiv 22D8                                         ___lomod 2658  
                                     ?_vfprintf 0077                       __end_of_ClearModbusRespon 340A  
                           _EUSART1_is_rx_ready 389E                      __end_of_EUSART1_is_tx_done 38E2  
                                       __pcinit 2728                 __end_of_EUSART2_SetErrorHandler 3914  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 38B6  
                                       __ptext0 20B8                                         __ptext1 153A  
                                       __ptext2 2EE0                                         __ptext3 3674  
                                       __ptext4 0C6A                                         __ptext5 1F94  
                                       __ptext6 37D4                                         __ptext7 30F4  
                                       __ptext8 24AA                                         __ptext9 3856  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 0074                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 008B  
                                    ??_checkCRC 008B           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 3958     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 3950                           _OSCILLATOR_Initialize 3886  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 3638  
                                       _isdigit 371C                                         _memmove 24AA  
                            _EUSART1_Initialize 2DE8                                         _islower 36AC  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 331C  
                                   _PrintModbus 2BE2                                         _isupper 36E4  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 004C  
                           __size_of_PrintMB400 0068                                         _toupper 320E  
                          end_of_initialization 27E4                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 2E64  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01DB                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 3928          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 391E                                    SaveCardDat@i 009F  
                            _EUSART2_Initialize 2C6A                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                                         strcmp@l 0005  
                                       strcmp@r 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0011  
                                       strlen@a 0007                             _EUSART2_is_rx_ready 3856  
                                       strcpy@s 000F                                         strlen@s 0005  
                             ValidateCmd@F10722 0254                               ValidateCmd@F10725 0240  
                             ValidateCmd@F10719 0268                        ValidateCmd@ConfName_1423 03B8  
                      ValidateCmd@ConfName_1427 03CC                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                                 _ClearEEAddRange 3152  
                        __end_of_PrintModRespon 2EE0                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                        __end_of_DATAEE_WriteByte 3530  
                          ??_EUSART2_Initialize 0007                            ?_EUSART2_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                                  _EUSART1_Read 32C4                                    _EUSART2_Read 326C  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 395E  
                                __end_of_TXMode 3964                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 3780  
                  __end_of_INTERRUPT_Initialize 397A                      __size_of_ClearModbusRespon 004C  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 3820                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008D                                    ??_ModbusFC03 008D  
                                __end_of_printf 37D4                                  __end_of_strcat 37FA  
                                __end_of_strcmp 2F54                                  __end_of_strcpy 3152  
                                     _ReadRX232 1F94                                  __end_of_strlen 33BE  
                           start_initialization 2728                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 3638                                     __end_of_pad 28B0  
                      __end_of_InitialiseString 2B54   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 320E                     __size_of_UART1_Write_string 0074  
                         __end_of_EUSART2_Write 30F4                          fp__EUSART1_Receive_ISR 0000  
                                  ?_ModbusError 008D                __size_of_EUSART2_SetErrorHandler 000A  
                           DATAEE_ReadByte@bAdd 0005                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 3900  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 38F6  
                            __end_of_ModbusFC10 1148                              __end_of_ModbusFC03 153A  
                                  ?_SaveCardDat 008F                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                _SaveCardDat$2413 0099  
                             __size_of_ModbusRx 0140                                     vfprintf@fmt 0079  
                           __end_of_generateCRC 24AA                                    ??_PrintMB400 0055  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                             __size_of_TogDebug 0038                           _EUSART1_RxDataHandler 3780  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00BC  
                                   __pdataBANK1 0100                                     __pdataBANK2 0200  
                                   __pdataBANK3 0364                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00B3                         __end_of_ClearEEAddRange 31B0  
                                _eusart2RxCount 00B8                                      ?_ReadRX232 008B  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 01E5  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 0060  
                                 __pcstackBANK3 03A4                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 015C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 2586                             EUSART2_Write@txData 0005  
                            __end_of_PrintMB400 3030                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                                  ?_ValidateCmd 0001                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$2006 0014  
                                     _atoi$2007 0018                                       _atoi$2008 0016  
                                     __pnvBANK0 00BE                                       __pnvBANK1 01D9  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 2B54  
                                     _dtoa$1502 0034                                       __pintcode 0008  
                                 __pmediumconst FB3E                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 01EB                    ??_INTERRUPT_InterruptManager 0001  
                         __end_of_Initalisation 397E                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0098  
                                     checkCRC@j 0094                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 3970  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 396A  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01D9  
                               SaveCardDat@Conf 009C                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008F                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 2658                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 393C                              _EUSART1_is_tx_done 38CE  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 3976  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 23C8  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 013B  
           __size_of_INTERRUPT_InterruptManager 011E                                        _MBResCnt 00A9  
                                      i2u431_40 3468                                        i2u431_41 3464  
                                      i2u440_40 35A8                                        i2u432_40 3490  
                                      i2u440_41 35A4                                        i2u432_41 348C  
                                      i2u441_40 298E                                        i2u433_40 28D0  
                                      i2u441_41 298A                                        i2u433_41 28CC  
                                      i2u443_40 29C6                                        i2u442_48 29A4  
                                      i2u435_40 2908                                        i2u434_48 28E6  
                                      i2u443_41 29C2                                        i2u442_49 29B8  
                                      i2u435_41 2904                                        i2u434_49 28F8  
                                      i2u445_40 2A0C                                        i2u444_48 29DC  
                                      i2u437_40 294C                                        i2u436_48 291E  
                                      i2u445_41 2A08                                        i2u444_49 29F0  
                                      i2u437_41 2948                                        i2u436_49 2930  
                                      _PIR3bits 000ECD                                        i2u390_40 37A2  
                                      i2u390_41 379E                                        i2u446_48 2A12  
                                      i2u439_40 3586                                        i2u383_40 3776  
                                      i2u438_48 2952                                        i2u471_40 0028  
                                      i2u446_49 2A26                                        i2u439_41 3582  
                                      i2u383_41 3772                                        i2u438_49 2966  
                                      i2u471_41 0024                                        i2u472_40 0038  
                                      i2u472_41 0034                                        i2u481_40 00E6  
                                      i2u480_48 00C0                                        i2u473_40 0046  
                                      i2u481_41 00E2                                        i2u480_49 00D4  
                                      i2u473_41 0042                                        i2u482_40 00F4  
                                      i2u482_41 00F0                                        i2u475_40 0072  
                                      i2u474_48 004C                                        i2u475_41 006E  
                                      i2u474_49 0060                                        i2u483_48 00FA  
                                      i2u476_40 0080                                        i2u483_49 010E  
                                      i2u476_41 007C                                        _PIR7bits 000ED1  
                                      i2u478_40 00AC                                        i2u477_48 0086  
                                      i2u478_41 00A8                                        i2u477_49 009A  
                                      i2u479_40 00BA                                        i2u479_41 00B6  
                                      _MBRespon 013F                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 012A                                       _xtoa$1531 0035  
                                     _xtoa$1532 0037                               ___wmul@multiplier 0005  
                          ??_EUSART1_is_tx_done 0005                                ?_ClearEEAddRange 008B  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0093  
                                   checkCRC@crc 0096                   __size_of_EUSART2_Transmit_ISR 004C  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2033 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 273C                                       copy_data1 275C  
                                     copy_data2 277C                              ModbusFC10@TempData 0091  
                         ?_INTERRUPT_Initialize 0001                               ?_DATAEE_WriteByte 0005  
                       _EUSART2_SetErrorHandler 390A                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 01E1                              ??_DATAEE_WriteByte 0008  
                                      _ModbusRx 1E54                              generateCRC@MessCnt 0005  
         __end_of_EUSART1_SetTxInterruptHandler 391E          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 3914                                        __Hrparam 0000  
                                      _TogDebug 3674           __end_of_EUSART2_SetRxInterruptHandler 38F6  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 38EC  
                          __size_of_ModbusError 010C                                      vfprintf@ap 007B  
                                      __Lrparam 0000                                      vfprintf@fp 0077  
                            __CFG_BOREN$SBORDIS 000000                            __size_of_SaveCardDat 0294  
                       ??_OSCILLATOR_Initialize 0005                                       memmove@d1 0009  
                                     memmove@s1 000B                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                               ReadRX232@F10695 0137                       ??_EUSART1_SetErrorHandler 0007  
                                      _checkCRC 1CF8             __end_of_EUSART1_DefaultErrorHandler 3976  
                   _EUSART1_DefaultErrorHandler 3970                                ??_PrintModRespon 0055  
                   __end_of_EUSART1_is_rx_ready 38B6                                      strcat@dest 0013  
                          _EUSART2_ErrorHandler 01DF                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 38CE  
                    __size_of_AddRxBuffToModBus 00D2                                __size_of_memmove 00DC  
                               _ClearModbusData 340A                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 326C  
                                      __ptext11 386E                                        __ptext20 3976  
                                      __ptext12 3152                                        __ptext21 2C6A  
                                      __ptext13 34EC                                        __ptext30 3928  
                                      __ptext22 38E2                                        __ptext14 2AC6  
                                      __ptext31 3932                                        __ptext23 38EC  
                                      __ptext15 397C                                        __ptext40 2586  
                                      __ptext32 393C                                        __ptext24 38F6  
                                      __ptext16 383C                                        __ptext41 0EFE  
                                      __ptext33 2BE2                                        __ptext25 3900  
                                      __ptext17 3820                                        __ptext50 31B0  
                                      __ptext42 2FC8                                        __ptext34 1E54  
                                      __ptext26 390A                                        __ptext18 2B54  
                                      __ptext51 2E64                                        __ptext43 134A  
                                      __ptext35 1CF8                                        __ptext27 2DE8  
                                      __ptext19 3886                                        __ptext60 1148  
                                      __ptext52 37AC                                        __ptext44 21CC  
                                      __ptext36 3958                                        __ptext28 3914  
                                      __ptext61 2658                                        __ptext53 3030  
                                      __ptext45 23C8                                        __ptext37 389E  
                                      __ptext29 391E                                        __ptext70 3094  
                                      __ptext62 22D8                                        __ptext54 012A  
                                      __ptext46 2F54                                        __ptext38 32C4  
                                      __ptext71 35F8                                        __ptext63 16D8  
                                      __ptext55 0994                                        __ptext47 395E  
                                      __ptext39 34A2                                        __ptext72 1B94  
                                      __ptext64 06B4                                        __ptext56 320E  
                                      __ptext48 38B6                                        __ptext81 3456  
                                      __ptext73 1A0C                                        __ptext65 27EE  
                                      __ptext57 36AC                                        __ptext49 38CE  
                                      __ptext90 3980                                        __ptext82 28B0  
                                      __ptext74 1872                                        __ptext66 336E  
                                      __ptext58 36E4                                        __ptext91 3970  
                                      __ptext83 3950                                        __ptext75 331C  
                                      __ptext67 3530                                        __ptext59 3638  
                                      __ptext92 3780                                        __ptext84 397E  
                                      __ptext76 371C                                        __ptext68 2A30  
                                      __ptext93 0000                                        __ptext85 3964  
                                      __ptext77 37FA                                        __ptext69 3946  
                                      __ptext86 3754                                        __ptext78 33BE  
                                      __ptext87 3574                                        __ptext79 340A  
                                      __ptext88 2970                                        __ptext89 396A  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 0082  
                       ClearEEAddRange@NumBytes 008D                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 0114  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 3980  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 397E  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019E  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008B  
                                  PrintModbus@i 008B            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 0120  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                 PrintModRespon@i 008B  
                                      _rxStatus 00AF                                        int$flags 005B  
                                      _vfprintf 3030              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 3754  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01DD  
                           _EUSART1_Receive_ISR 2970                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                                _vfpfcnvrt$1546 006D                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 386E                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 2FC8  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                                      memmove@d 0011                                        memmove@n 000D  
                                      memmove@s 0013                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 0088                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                                       strcat@src 0015  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 3932  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 3928  
                                     strcpy@src 000B                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 35B8                                        printf@ap 0089  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 005E                              _eusart1RxLastError 00B2  
                        __size_of_EUSART2_Write 0060                             _EUSART2_Receive_ISR 28B0  
                       __end_of_ClearModbusData 3456                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 2BE2                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00B7  
                                  ?_generateCRC 0005                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 01E9  
                           __end_of_ClearRxBuff 34EC  
