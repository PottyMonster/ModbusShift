

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 01 18:12:53 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F46K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataBANK1
   114  002902                     __pidataBANK1:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _data1
   118  002902  11                 	db	17
   119  002903  03                 	db	3
   120  002904  06                 	db	6
   121  002905  AE                 	db	174
   122  002906  41                 	db	65
   123  002907  56                 	db	86
   124  002908  52                 	db	82
   125  002909  43                 	db	67
   126  00290A  40                 	db	64
   127  00290B  49                 	db	73
   128  00290C  AD                 	db	173
   129                           
   130                           	psect	nvBANK0
   131  0000E6                     __pnvBANK0:
   132                           	opt callstack 0
   133  0000E6                     _EUSART1_ErrorHandler:
   134                           	opt callstack 0
   135  0000E6                     	ds	2
   136  0000E8                     _EUSART1_OverrunErrorHandler:
   137                           	opt callstack 0
   138  0000E8                     	ds	2
   139  0000EA                     _EUSART1_FramingErrorHandler:
   140                           	opt callstack 0
   141  0000EA                     	ds	2
   142  0000EC                     _EUSART2_ErrorHandler:
   143                           	opt callstack 0
   144  0000EC                     	ds	2
   145  0000EE                     _EUSART2_OverrunErrorHandler:
   146                           	opt callstack 0
   147  0000EE                     	ds	2
   148  0000F0                     _EUSART2_FramingErrorHandler:
   149                           	opt callstack 0
   150  0000F0                     	ds	2
   151  0000F2                     _EUSART1_RxDefaultInterruptHandler:
   152                           	opt callstack 0
   153  0000F2                     	ds	2
   154  0000F4                     _EUSART1_TxDefaultInterruptHandler:
   155                           	opt callstack 0
   156  0000F4                     	ds	2
   157  0000F6                     _EUSART2_RxDefaultInterruptHandler:
   158                           	opt callstack 0
   159  0000F6                     	ds	2
   160  0000F8                     _EUSART2_TxDefaultInterruptHandler:
   161                           	opt callstack 0
   162  0000F8                     	ds	2
   163  0000FA                     _eusart1TxBufferRemaining:
   164                           	opt callstack 0
   165  0000FA                     	ds	1
   166  0000FB                     _eusart2TxBufferRemaining:
   167                           	opt callstack 0
   168  0000FB                     	ds	1
   169  0000                     _RC2REG	set	3737
   170  0000                     _RC2STAbits	set	3741
   171  0000                     _TX2REG	set	3738
   172  0000                     _TX2STAbits	set	3742
   173  0000                     _SP2BRGH	set	3740
   174  0000                     _SP2BRGL	set	3739
   175  0000                     _TX2STA	set	3742
   176  0000                     _RC2STA	set	3741
   177  0000                     _BAUD2CON	set	3743
   178  0000                     _PIR7bits	set	3793
   179  0000                     _PIR3bits	set	3789
   180  0000                     _PIE3bits	set	3781
   181  0000                     _PMD5	set	3814
   182  0000                     _PMD4	set	3813
   183  0000                     _PMD3	set	3812
   184  0000                     _PMD2	set	3811
   185  0000                     _PMD1	set	3810
   186  0000                     _PMD0	set	3809
   187  0000                     _OSCTUNE	set	3805
   188  0000                     _OSCFRQ	set	3806
   189  0000                     _OSCEN	set	3804
   190  0000                     _OSCCON3	set	3802
   191  0000                     _OSCCON1	set	3800
   192  0000                     _RX2PPS	set	3725
   193  0000                     _RC6PPS	set	3837
   194  0000                     _RB6PPS	set	3829
   195  0000                     _RX1PPS	set	3765
   196  0000                     _INLVLE	set	3882
   197  0000                     _INLVLD	set	3874
   198  0000                     _INLVLC	set	3869
   199  0000                     _INLVLB	set	3861
   200  0000                     _INLVLA	set	3853
   201  0000                     _SLRCONE	set	3883
   202  0000                     _SLRCOND	set	3875
   203  0000                     _SLRCONC	set	3870
   204  0000                     _SLRCONB	set	3862
   205  0000                     _SLRCONA	set	3854
   206  0000                     _ODCOND	set	3876
   207  0000                     _ODCONC	set	3871
   208  0000                     _ODCONB	set	3863
   209  0000                     _ODCONA	set	3855
   210  0000                     _ODCONE	set	3884
   211  0000                     _WPUC	set	3872
   212  0000                     _WPUA	set	3856
   213  0000                     _WPUB	set	3864
   214  0000                     _WPUE	set	3885
   215  0000                     _WPUD	set	3877
   216  0000                     _ANSELA	set	3857
   217  0000                     _ANSELE	set	3886
   218  0000                     _ANSELB	set	3865
   219  0000                     _ANSELC	set	3873
   220  0000                     _ANSELD	set	3878
   221  0000                     _LATAbits	set	3971
   222  0000                     _LATDbits	set	3974
   223  0000                     _RC1REG	set	3993
   224  0000                     _RC1STAbits	set	3997
   225  0000                     _TX1REG	set	3994
   226  0000                     _TX1STAbits	set	3998
   227  0000                     _SP1BRGH	set	3996
   228  0000                     _SP1BRGL	set	3995
   229  0000                     _TX1STA	set	3998
   230  0000                     _RC1STA	set	3997
   231  0000                     _BAUD1CON	set	3999
   232  0000                     _NVMDAT	set	3968
   233  0000                     _NVMADRL	set	3966
   234  0000                     _NVMADRH	set	3967
   235  0000                     _NVMCON2	set	3970
   236  0000                     _TABLAT	set	4085
   237  0000                     _TBLPTRL	set	4086
   238  0000                     _TBLPTRH	set	4087
   239  0000                     _TBLPTRU	set	4088
   240  0000                     _NVMCON1bits	set	3969
   241  0000                     _INTCONbits	set	4082
   242  0000                     _TRISD	set	3979
   243  0000                     _TRISC	set	3978
   244  0000                     _TRISB	set	3977
   245  0000                     _TRISA	set	3976
   246  0000                     _TRISE	set	3980
   247  0000                     _LATC	set	3973
   248  0000                     _LATB	set	3972
   249  0000                     _LATA	set	3971
   250  0000                     _LATD	set	3974
   251  0000                     _LATE	set	3975
   252                           
   253                           	psect	smallconst
   254  000F00                     __psmallconst:
   255                           	opt callstack 0
   256  000F00  00                 	db	0
   257  000F01                     STR_1:
   258                           
   259                           ; BSR set to: 0
   260  000F01  42                 	db	66	;'B'
   261  000F02  79                 	db	121	;'y'
   262  000F03  74                 	db	116	;'t'
   263  000F04  65                 	db	101	;'e'
   264  000F05  20                 	db	32
   265  000F06  25                 	db	37
   266  000F07  69                 	db	105	;'i'
   267  000F08  2E                 	db	46
   268  000F09  20                 	db	32
   269  000F0A  56                 	db	86	;'V'
   270  000F0B  61                 	db	97	;'a'
   271  000F0C  6C                 	db	108	;'l'
   272  000F0D  3A                 	db	58	;':'
   273  000F0E  20                 	db	32
   274  000F0F  30                 	db	48	;'0'
   275  000F10  78                 	db	120	;'x'
   276  000F11  25                 	db	37
   277  000F12  30                 	db	48	;'0'
   278  000F13  32                 	db	50	;'2'
   279  000F14  78                 	db	120	;'x'
   280  000F15  20                 	db	32
   281  000F16  0D                 	db	13
   282  000F17  0A                 	db	10
   283  000F18  00                 	db	0
   284  000F19                     STR_2:
   285                           
   286                           ; BSR set to: 0
   287  000F19  49                 	db	73	;'I'
   288  000F1A  6E                 	db	110	;'n'
   289  000F1B  69                 	db	105	;'i'
   290  000F1C  74                 	db	116	;'t'
   291  000F1D  61                 	db	97	;'a'
   292  000F1E  6C                 	db	108	;'l'
   293  000F1F  69                 	db	105	;'i'
   294  000F20  73                 	db	115	;'s'
   295  000F21  65                 	db	101	;'e'
   296  000F22  64                 	db	100	;'d'
   297  000F23  0D                 	db	13
   298  000F24  0A                 	db	10
   299  000F25  0A                 	db	10
   300  000F26  00                 	db	0
   301                           
   302                           ; #config settings
   303  000F27  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  002538                     __pcinit:
   307                           	opt callstack 0
   308  002538                     start_initialization:
   309                           	opt callstack 0
   310  002538                     __initialization:
   311                           	opt callstack 0
   312                           
   313                           ; Initialize objects allocated to BANK1 (11 bytes)
   314                           ; load TBLPTR registers with __pidataBANK1
   315  002538  0E02               	movlw	low __pidataBANK1
   316  00253A  6EF6               	movwf	tblptrl,c
   317  00253C  0E29               	movlw	high __pidataBANK1
   318  00253E  6EF7               	movwf	tblptrh,c
   319  002540  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   320  002542  6EF8               	movwf	tblptru,c
   321  002544  EE01  F084         	lfsr	0,__pdataBANK1
   322  002548  EE10 F00B          	lfsr	1,11
   323  00254C                     copy_data0:
   324  00254C  0009               	tblrd		*+
   325  00254E  CFF5 FFEE          	movff	tablat,postinc0
   326  002552  50E5               	movf	postdec1,w,c
   327  002554  50E1               	movf	fsr1l,w,c
   328  002556  E1FA               	bnz	copy_data0
   329                           
   330                           ; Clear objects allocated to BANK1 (132 bytes)
   331  002558  EE01  F000         	lfsr	0,__pbssBANK1
   332  00255C  0E84               	movlw	132
   333  00255E                     clear_0:
   334  00255E  6AEE               	clrf	postinc0,c
   335  002560  06E8               	decf	wreg,f,c
   336  002562  E1FD               	bnz	clear_0
   337                           
   338                           ; Clear objects allocated to BANK0 (94 bytes)
   339  002564  EE00  F060         	lfsr	0,__pbssBANK0
   340  002568  0E5E               	movlw	94
   341  00256A                     clear_1:
   342  00256A  6AEE               	clrf	postinc0,c
   343  00256C  06E8               	decf	wreg,f,c
   344  00256E  E1FD               	bnz	clear_1
   345                           
   346                           ; Clear objects allocated to COMRAM (4 bytes)
   347  002570  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   348  002572  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   349  002574  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   350  002576  6A57               	clrf	__pbssCOMRAM& (0+255),c
   351  002578                     end_of_initialization:
   352                           	opt callstack 0
   353  002578                     __end_of__initialization:
   354                           	opt callstack 0
   355  002578  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   356  00257A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   357  00257C  0100               	movlb	0
   358  00257E  EFE5  F00E         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMRAM
   361  000057                     __pbssCOMRAM:
   362                           	opt callstack 0
   363  000057                     _flags:
   364                           	opt callstack 0
   365  000057                     	ds	2
   366  000059                     _eusart1RxHead:
   367                           	opt callstack 0
   368  000059                     	ds	1
   369  00005A                     _eusart2RxHead:
   370                           	opt callstack 0
   371  00005A                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  000060                     __pbssBANK0:
   375                           	opt callstack 0
   376  000060                     _eusart1RxStatusBuffer:
   377                           	opt callstack 0
   378  000060                     	ds	16
   379  000070                     _eusart1RxBuffer:
   380                           	opt callstack 0
   381  000070                     	ds	16
   382  000080                     _eusart1TxBuffer:
   383                           	opt callstack 0
   384  000080                     	ds	16
   385  000090                     _eusart2RxStatusBuffer:
   386                           	opt callstack 0
   387  000090                     	ds	8
   388  000098                     _eusart2RxBuffer:
   389                           	opt callstack 0
   390  000098                     	ds	8
   391  0000A0                     _eusart2TxBuffer:
   392                           	opt callstack 0
   393  0000A0                     	ds	8
   394  0000A8                     _nout:
   395                           	opt callstack 0
   396  0000A8                     	ds	2
   397  0000AA                     _width:
   398                           	opt callstack 0
   399  0000AA                     	ds	2
   400  0000AC                     _prec:
   401                           	opt callstack 0
   402  0000AC                     	ds	2
   403  0000AE                     _ByteNum:
   404                           	opt callstack 0
   405  0000AE                     	ds	2
   406  0000B0                     _loop:
   407                           	opt callstack 0
   408  0000B0                     	ds	2
   409  0000B2                     _rxStatus:
   410                           	opt callstack 0
   411  0000B2                     	ds	1
   412  0000B3                     _Debug:
   413                           	opt callstack 0
   414  0000B3                     	ds	1
   415  0000B4                     _eusart1RxLastError:
   416                           	opt callstack 0
   417  0000B4                     	ds	1
   418  0000B5                     _eusart1RxCount:
   419                           	opt callstack 0
   420  0000B5                     	ds	1
   421  0000B6                     _eusart1RxTail:
   422                           	opt callstack 0
   423  0000B6                     	ds	1
   424  0000B7                     _eusart1TxTail:
   425                           	opt callstack 0
   426  0000B7                     	ds	1
   427  0000B8                     _eusart1TxHead:
   428                           	opt callstack 0
   429  0000B8                     	ds	1
   430  0000B9                     _eusart2RxLastError:
   431                           	opt callstack 0
   432  0000B9                     	ds	1
   433  0000BA                     _eusart2RxCount:
   434                           	opt callstack 0
   435  0000BA                     	ds	1
   436  0000BB                     _eusart2RxTail:
   437                           	opt callstack 0
   438  0000BB                     	ds	1
   439  0000BC                     _eusart2TxTail:
   440                           	opt callstack 0
   441  0000BC                     	ds	1
   442  0000BD                     _eusart2TxHead:
   443                           	opt callstack 0
   444  0000BD                     	ds	1
   445                           
   446                           	psect	bssBANK1
   447  000100                     __pbssBANK1:
   448                           	opt callstack 0
   449  000100                     _rxData:
   450                           	opt callstack 0
   451  000100                     	ds	100
   452  000164                     _dbuf:
   453                           	opt callstack 0
   454  000164                     	ds	32
   455                           
   456                           	psect	dataBANK1
   457  000184                     __pdataBANK1:
   458                           	opt callstack 0
   459  000184                     _data1:
   460                           	opt callstack 0
   461  000184                     	ds	11
   462                           
   463                           	psect	cstackBANK0
   464  0000BE                     __pcstackBANK0:
   465                           	opt callstack 0
   466  0000BE                     vfpfcnvrt@ll:
   467                           	opt callstack 0
   468                           
   469                           ; 8 bytes @ 0x0
   470  0000BE                     	ds	8
   471  0000C6                     vfpfcnvrt@llu:
   472                           	opt callstack 0
   473                           
   474                           ; 8 bytes @ 0x8
   475  0000C6                     	ds	8
   476  0000CE                     vfpfcnvrt@done:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x10
   480  0000CE                     	ds	2
   481  0000D0                     _vfpfcnvrt$1234:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x12
   485  0000D0                     	ds	2
   486  0000D2                     vfpfcnvrt@c:
   487                           	opt callstack 0
   488                           
   489                           ; 1 bytes @ 0x14
   490  0000D2                     	ds	1
   491  0000D3                     ?_vfprintf:
   492                           	opt callstack 0
   493  0000D3                     vfprintf@fp:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x15
   497  0000D3                     	ds	2
   498  0000D5                     vfprintf@fmt:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x17
   502  0000D5                     	ds	2
   503  0000D7                     vfprintf@ap:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x19
   507  0000D7                     	ds	2
   508  0000D9                     ?_printf:
   509                           	opt callstack 0
   510  0000D9                     printf@fmt:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x1B
   514  0000D9                     	ds	8
   515  0000E1                     printf@ap:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x23
   519  0000E1                     	ds	2
   520  0000E3                     PrintRXBuff@i:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x25
   524  0000E3                     	ds	2
   525  0000E5                     main@RXStat:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x27
   529  0000E5                     	ds	1
   530                           
   531                           	psect	cstackCOMRAM
   532  000001                     __pcstackCOMRAM:
   533                           	opt callstack 0
   534  000001                     ??_INTERRUPT_InterruptManager:
   535  000001                     
   536                           ; 1 bytes @ 0x0
   537  000001                     	ds	4
   538  000005                     ??_ClearRxBuff:
   539  000005                     ?_strlen:
   540                           	opt callstack 0
   541  000005                     ?_isupper:
   542                           	opt callstack 0
   543  000005                     ?_isalpha:
   544                           	opt callstack 0
   545  000005                     ?_isdigit:
   546                           	opt callstack 0
   547  000005                     ?_isspace:
   548                           	opt callstack 0
   549  000005                     ?_islower:
   550                           	opt callstack 0
   551  000005                     ?___wmul:
   552                           	opt callstack 0
   553  000005                     ?___aodiv:
   554                           	opt callstack 0
   555  000005                     ?___aomod:
   556                           	opt callstack 0
   557  000005                     EUSART2_Write@txData:
   558                           	opt callstack 0
   559  000005                     EUSART1_Read@readValue:
   560                           	opt callstack 0
   561  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   562                           	opt callstack 0
   563  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   564                           	opt callstack 0
   565  000005                     EUSART2_SetErrorHandler@interruptHandler:
   566                           	opt callstack 0
   567  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   568                           	opt callstack 0
   569  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   570                           	opt callstack 0
   571  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   572                           	opt callstack 0
   573  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   574                           	opt callstack 0
   575  000005                     EUSART1_SetErrorHandler@interruptHandler:
   576                           	opt callstack 0
   577  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   578                           	opt callstack 0
   579  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   580                           	opt callstack 0
   581  000005                     ___wmul@multiplier:
   582                           	opt callstack 0
   583  000005                     isalpha@c:
   584                           	opt callstack 0
   585  000005                     isdigit@c:
   586                           	opt callstack 0
   587  000005                     isspace@c:
   588                           	opt callstack 0
   589  000005                     isupper@c:
   590                           	opt callstack 0
   591  000005                     strlen@s:
   592                           	opt callstack 0
   593  000005                     islower@c:
   594                           	opt callstack 0
   595  000005                     ___aodiv@dividend:
   596                           	opt callstack 0
   597  000005                     ___aomod@dividend:
   598                           	opt callstack 0
   599                           
   600                           ; 8 bytes @ 0x4
   601  000005                     	ds	1
   602  000006                     putch@txData:
   603                           	opt callstack 0
   604  000006                     ClearRxBuff@i:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x5
   608  000006                     	ds	1
   609  000007                     ??_isupper:
   610  000007                     ??_isalpha:
   611  000007                     ??_isdigit:
   612  000007                     ??_isspace:
   613  000007                     ??_islower:
   614  000007                     ___wmul@multiplicand:
   615                           	opt callstack 0
   616  000007                     fputc@c:
   617                           	opt callstack 0
   618  000007                     strlen@a:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x6
   622  000007                     	ds	2
   623  000009                     ___wmul@product:
   624                           	opt callstack 0
   625  000009                     fputc@fp:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x8
   629  000009                     	ds	2
   630  00000B                     ??_fputc:
   631  00000B                     ?_toupper:
   632                           	opt callstack 0
   633  00000B                     _isspace$1719:
   634                           	opt callstack 0
   635  00000B                     toupper@c:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0xA
   639  00000B                     	ds	1
   640  00000C                     ?_atoi:
   641                           	opt callstack 0
   642  00000C                     atoi@s:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0xB
   646  00000C                     	ds	1
   647  00000D                     ??_toupper:
   648  00000D                     ___aodiv@divisor:
   649                           	opt callstack 0
   650  00000D                     ___aomod@divisor:
   651                           	opt callstack 0
   652                           
   653                           ; 8 bytes @ 0xC
   654  00000D                     	ds	1
   655  00000E                     ??_atoi:
   656                           
   657                           ; 1 bytes @ 0xD
   658  00000E                     	ds	2
   659  000010                     fputs@s:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xF
   663  000010                     	ds	1
   664  000011                     _toupper$1784:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x10
   668  000011                     	ds	1
   669  000012                     atoi@neg:
   670                           	opt callstack 0
   671  000012                     fputs@fp:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x11
   675  000012                     	ds	2
   676  000014                     fputs@c:
   677                           	opt callstack 0
   678  000014                     _atoi$1692:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x13
   682  000014                     	ds	1
   683  000015                     ___aodiv@counter:
   684                           	opt callstack 0
   685  000015                     ___aomod@counter:
   686                           	opt callstack 0
   687  000015                     fputs@i:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x14
   691  000015                     	ds	1
   692  000016                     ___aodiv@sign:
   693                           	opt callstack 0
   694  000016                     ___aomod@sign:
   695                           	opt callstack 0
   696  000016                     _atoi$1694:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x15
   700  000016                     	ds	1
   701  000017                     ?_abs:
   702                           	opt callstack 0
   703  000017                     ?_pad:
   704                           	opt callstack 0
   705  000017                     pad@fp:
   706                           	opt callstack 0
   707  000017                     abs@a:
   708                           	opt callstack 0
   709  000017                     ___aodiv@quotient:
   710                           	opt callstack 0
   711                           
   712                           ; 8 bytes @ 0x16
   713  000017                     	ds	1
   714  000018                     _atoi$1693:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0x17
   718  000018                     	ds	1
   719  000019                     ??_abs:
   720  000019                     pad@buf:
   721                           	opt callstack 0
   722  000019                     atoi@n:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x18
   726  000019                     	ds	2
   727  00001B                     pad@p:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x1A
   731  00001B                     	ds	2
   732  00001D                     ??_pad:
   733                           
   734                           ; 1 bytes @ 0x1C
   735  00001D                     	ds	1
   736  00001E                     pad@i:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x1D
   740  00001E                     	ds	2
   741  000020                     pad@w:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x1F
   745  000020                     	ds	2
   746  000022                     ?_dtoa:
   747                           	opt callstack 0
   748  000022                     ?_xtoa:
   749                           	opt callstack 0
   750  000022                     dtoa@fp:
   751                           	opt callstack 0
   752  000022                     xtoa@fp:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x21
   756  000022                     	ds	2
   757  000024                     dtoa@d:
   758                           	opt callstack 0
   759  000024                     xtoa@d:
   760                           	opt callstack 0
   761                           
   762                           ; 8 bytes @ 0x23
   763  000024                     	ds	8
   764  00002C                     ??_dtoa:
   765  00002C                     xtoa@x:
   766                           	opt callstack 0
   767                           
   768                           ; 1 bytes @ 0x2B
   769  00002C                     	ds	1
   770  00002D                     ??_xtoa:
   771                           
   772                           ; 1 bytes @ 0x2C
   773  00002D                     	ds	7
   774  000034                     _dtoa$1208:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x33
   778  000034                     	ds	1
   779  000035                     _xtoa$1219:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x34
   783  000035                     	ds	1
   784  000036                     dtoa@p:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x35
   788  000036                     	ds	1
   789  000037                     _xtoa$1220:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x36
   793  000037                     	ds	1
   794  000038                     dtoa@w:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x37
   798  000038                     	ds	1
   799  000039                     xtoa@p:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x38
   803  000039                     	ds	1
   804  00003A                     dtoa@s:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x39
   808  00003A                     	ds	1
   809  00003B                     xtoa@w:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x3A
   813  00003B                     	ds	1
   814  00003C                     dtoa@n:
   815                           	opt callstack 0
   816                           
   817                           ; 8 bytes @ 0x3B
   818  00003C                     	ds	1
   819  00003D                     xtoa@n:
   820                           	opt callstack 0
   821                           
   822                           ; 8 bytes @ 0x3C
   823  00003D                     	ds	7
   824  000044                     dtoa@i:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x43
   828  000044                     	ds	1
   829  000045                     xtoa@i:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x44
   833  000045                     	ds	2
   834  000047                     xtoa@c:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x46
   838  000047                     	ds	2
   839  000049                     ?_vfpfcnvrt:
   840                           	opt callstack 0
   841  000049                     vfpfcnvrt@fp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x48
   845  000049                     	ds	2
   846  00004B                     vfpfcnvrt@fmt:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x4A
   850  00004B                     	ds	2
   851  00004D                     vfpfcnvrt@ap:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x4C
   855  00004D                     	ds	2
   856  00004F                     ??_vfpfcnvrt:
   857                           
   858                           ; 1 bytes @ 0x4E
   859  00004F                     	ds	4
   860  000053                     vfprintf@cfmt:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x52
   864  000053                     	ds	2
   865  000055                     ??_PrintRXBuff:
   866                           
   867                           ; 1 bytes @ 0x54
   868  000055                     	ds	1
   869  000056                     ??_main:
   870                           
   871                           ; 1 bytes @ 0x55
   872  000056                     	ds	1
   873                           
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 65 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  RXStat          1   39[BANK0 ] _Bool 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   896 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   897 ;;Total ram usage:        2 bytes
   898 ;; Hardware stack levels required when called:   14
   899 ;; This function calls:
   900 ;;		_ClearRxBuff
   901 ;;		_EUSART1_Read
   902 ;;		_EUSART1_is_rx_ready
   903 ;;		_PrintRXBuff
   904 ;;		_RXMode
   905 ;;		_SYSTEM_Initialize
   906 ;;		_printf
   907 ;; This function is called by:
   908 ;;		Startup code after reset
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text0
   913  001DCA                     __ptext0:
   914                           	opt callstack 0
   915  001DCA                     _main:
   916                           	opt callstack 17
   917  001DCA                     
   918                           ;main.c: 68:     SYSTEM_Initialize();
   919  001DCA  EC5C  F014         	call	_SYSTEM_Initialize	;wreg free
   920  001DCE                     
   921                           ;main.c: 75:     (INTCONbits.GIE = 1);
   922  001DCE  8EF2               	bsf	242,7,c	;volatile
   923  001DD0                     
   924                           ;main.c: 81:     (INTCONbits.PEIE = 1);
   925  001DD0  8CF2               	bsf	242,6,c	;volatile
   926  001DD2  9883               	bcf	131,4,c	;volatile
   927  001DD4  9A83               	bcf	131,5,c	;volatile
   928  001DD6  9C83               	bcf	131,6,c	;volatile
   929  001DD8  9E83               	bcf	131,7,c	;volatile
   930  001DDA                     
   931                           ;main.c: 96:     printf("Initalised\r\n\n");
   932  001DDA  0E19               	movlw	low STR_2
   933  001DDC  0100               	movlb	0	; () banked
   934  001DDE  6FD9               	movwf	printf@fmt& (0+255),b
   935  001DE0  0E0F               	movlw	high STR_2
   936  001DE2  6FDA               	movwf	(printf@fmt+1)& (0+255),b
   937  001DE4  EC27  F014         	call	_printf	;wreg free
   938  001DE8                     
   939                           ;main.c: 98:     RXMode();
   940  001DE8  ECC2  F014         	call	_RXMode	;wreg free
   941  001DEC                     
   942                           ;main.c: 99:     ClearRxBuff();
   943  001DEC  ECC1  F012         	call	_ClearRxBuff	;wreg free
   944  001DF0                     
   945                           ;main.c: 100:     PrintRXBuff();
   946  001DF0  EC84  F011         	call	_PrintRXBuff	;wreg free
   947  001DF4                     
   948                           ;main.c: 102:     _Bool RXStat = 0;
   949  001DF4  0E00               	movlw	0
   950  001DF6  0100               	movlb	0	; () banked
   951  001DF8  6FE5               	movwf	main@RXStat& (0+255),b
   952  001DFA                     l3570:
   953                           
   954                           ; BSR set to: 0
   955                           ;main.c: 105:     {;main.c: 106:         if(EUSART1_is_rx_ready()){
   956  001DFA  EC75  F014         	call	_EUSART1_is_rx_ready	;wreg free
   957  001DFE  0900               	iorlw	0
   958  001E00  B4D8               	btfsc	status,2,c
   959  001E02  EF05  F00F         	goto	u2911
   960  001E06  EF07  F00F         	goto	u2910
   961  001E0A                     u2911:
   962  001E0A  EF2D  F00F         	goto	l3584
   963  001E0E                     u2910:
   964  001E0E  EF20  F00F         	goto	l3580
   965  001E12                     l3574:
   966                           
   967                           ;main.c: 113:                 rxData[ByteNum] = EUSART1_Read();
   968  001E12  EC47  F012         	call	_EUSART1_Read	;wreg free
   969  001E16  6E56               	movwf	??_main^0,c
   970  001E18  0E00               	movlw	low _rxData
   971  001E1A  0100               	movlb	0	; () banked
   972  001E1C  25AE               	addwf	_ByteNum& (0+255),w,b
   973  001E1E  6ED9               	movwf	fsr2l,c
   974  001E20  0E01               	movlw	high _rxData
   975  001E22  21AF               	addwfc	(_ByteNum+1)& (0+255),w,b
   976  001E24  6EDA               	movwf	fsr2h,c
   977  001E26  C056  FFDF         	movff	??_main,indf2
   978  001E2A                     
   979                           ; BSR set to: 0
   980                           ;main.c: 114:                 _delay((unsigned long)((2)*(32000000/4000.0)));
   981  001E2A  0E15               	movlw	21
   982  001E2C  6E56               	movwf	??_main^0,c
   983  001E2E  0EC6               	movlw	198
   984  001E30                     u2957:
   985  001E30  2EE8               	decfsz	wreg,f,c
   986  001E32  D7FE               	bra	u2957
   987  001E34  2E56               	decfsz	??_main^0,f,c
   988  001E36  D7FC               	bra	u2957
   989  001E38  D000               	nop2	
   990  001E3A                     
   991                           ;main.c: 115:                 ByteNum++;
   992  001E3A  0100               	movlb	0	; () banked
   993  001E3C  4BAE               	infsnz	_ByteNum& (0+255),f,b
   994  001E3E  2BAF               	incf	(_ByteNum+1)& (0+255),f,b
   995  001E40                     l3580:
   996                           
   997                           ;main.c: 111:             while(EUSART1_is_rx_ready()){
   998  001E40  EC75  F014         	call	_EUSART1_is_rx_ready	;wreg free
   999  001E44  0900               	iorlw	0
  1000  001E46  A4D8               	btfss	status,2,c
  1001  001E48  EF28  F00F         	goto	u2921
  1002  001E4C  EF2A  F00F         	goto	u2920
  1003  001E50                     u2921:
  1004  001E50  EF09  F00F         	goto	l3574
  1005  001E54                     u2920:
  1006  001E54                     
  1007                           ;main.c: 118:             RXStat = 1;
  1008  001E54  0E01               	movlw	1
  1009  001E56  0100               	movlb	0	; () banked
  1010  001E58  6FE5               	movwf	main@RXStat& (0+255),b
  1011  001E5A                     l3584:
  1012                           
  1013                           ;main.c: 121:         if(RXStat ==1){
  1014  001E5A  0100               	movlb	0	; () banked
  1015  001E5C  05E5               	decf	main@RXStat& (0+255),w,b
  1016  001E5E  A4D8               	btfss	status,2,c
  1017  001E60  EF34  F00F         	goto	u2931
  1018  001E64  EF36  F00F         	goto	u2930
  1019  001E68                     u2931:
  1020  001E68  EFFD  F00E         	goto	l3570
  1021  001E6C                     u2930:
  1022  001E6C                     
  1023                           ; BSR set to: 0
  1024                           ;main.c: 123:             PrintRXBuff();
  1025  001E6C  EC84  F011         	call	_PrintRXBuff	;wreg free
  1026  001E70                     
  1027                           ;main.c: 124:             ClearRxBuff();
  1028  001E70  ECC1  F012         	call	_ClearRxBuff	;wreg free
  1029  001E74                     
  1030                           ;main.c: 125:             RXStat = 0;
  1031  001E74  0E00               	movlw	0
  1032  001E76  0100               	movlb	0	; () banked
  1033  001E78  6FE5               	movwf	main@RXStat& (0+255),b
  1034  001E7A                     
  1035                           ; BSR set to: 0
  1036                           ;main.c: 126:             ByteNum = 0;
  1037  001E7A  0E00               	movlw	0
  1038  001E7C  6FAF               	movwf	(_ByteNum+1)& (0+255),b
  1039  001E7E  0E00               	movlw	0
  1040  001E80  6FAE               	movwf	_ByteNum& (0+255),b
  1041  001E82                     
  1042                           ; BSR set to: 0
  1043  001E82  B883               	btfsc	131,4,c	;volatile
  1044  001E84  EF46  F00F         	goto	u2941
  1045  001E88  EF49  F00F         	goto	u2940
  1046  001E8C                     u2941:
  1047  001E8C  0E01               	movlw	1
  1048  001E8E  EF4A  F00F         	goto	u2946
  1049  001E92                     u2940:
  1050  001E92  0E00               	movlw	0
  1051  001E94                     u2946:
  1052  001E94  0AFF               	xorlw	255
  1053  001E96  6E56               	movwf	??_main^0,c
  1054  001E98  3A56               	swapf	??_main^0,f,c
  1055  001E9A  5083               	movf	131,w,c	;volatile
  1056  001E9C  1856               	xorwf	??_main^0,w,c
  1057  001E9E  0BEF               	andlw	-17
  1058  001EA0  1856               	xorwf	??_main^0,w,c
  1059  001EA2  6E83               	movwf	131,c	;volatile
  1060  001EA4  EFFD  F00E         	goto	l3570
  1061  001EA8  EF93  F000         	goto	start
  1062  001EAC                     __end_of_main:
  1063                           	opt callstack 0
  1064                           
  1065 ;; *************** function _SYSTEM_Initialize *****************
  1066 ;; Defined at:
  1067 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    6
  1088 ;; This function calls:
  1089 ;;		_EUSART1_Initialize
  1090 ;;		_EUSART2_Initialize
  1091 ;;		_INTERRUPT_Initialize
  1092 ;;		_OSCILLATOR_Initialize
  1093 ;;		_PIN_MANAGER_Initialize
  1094 ;;		_PMD_Initialize
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text1
  1101  0028B8                     __ptext1:
  1102                           	opt callstack 0
  1103  0028B8                     _SYSTEM_Initialize:
  1104                           	opt callstack 24
  1105  0028B8                     
  1106                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1107  0028B8  ECCE  F014         	call	_INTERRUPT_Initialize	;wreg free
  1108  0028BC                     
  1109                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1110  0028BC  EC4E  F014         	call	_PMD_Initialize	;wreg free
  1111  0028C0                     
  1112                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1113  0028C0  ECC0  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1114  0028C4                     
  1115                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1116  0028C4  EC69  F014         	call	_OSCILLATOR_Initialize	;wreg free
  1117  0028C8                     
  1118                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1119  0028C8  EC46  F011         	call	_EUSART1_Initialize	;wreg free
  1120  0028CC                     
  1121                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1122  0028CC  EC07  F011         	call	_EUSART2_Initialize	;wreg free
  1123  0028D0  0012               	return		;funcret
  1124  0028D2                     __end_of_SYSTEM_Initialize:
  1125                           	opt callstack 0
  1126                           
  1127 ;; *************** function _PMD_Initialize *****************
  1128 ;; Defined at:
  1129 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    4
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_SYSTEM_Initialize
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text2
  1158  00289C                     __ptext2:
  1159                           	opt callstack 0
  1160  00289C                     _PMD_Initialize:
  1161                           	opt callstack 25
  1162  00289C                     
  1163                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1164  00289C  0E00               	movlw	0
  1165  00289E  010E               	movlb	14	; () banked
  1166  0028A0  6FE1               	movwf	225,b	;volatile
  1167                           
  1168                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1169  0028A2  0E00               	movlw	0
  1170  0028A4  6FE2               	movwf	226,b	;volatile
  1171                           
  1172                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1173  0028A6  0E00               	movlw	0
  1174  0028A8  6FE3               	movwf	227,b	;volatile
  1175                           
  1176                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1177  0028AA  0E00               	movlw	0
  1178  0028AC  6FE4               	movwf	228,b	;volatile
  1179                           
  1180                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1181  0028AE  0E00               	movlw	0
  1182  0028B0  6FE5               	movwf	229,b	;volatile
  1183                           
  1184                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1185  0028B2  0E00               	movlw	0
  1186  0028B4  6FE6               	movwf	230,b	;volatile
  1187  0028B6                     
  1188                           ; BSR set to: 14
  1189  0028B6  0012               	return		;funcret
  1190  0028B8                     __end_of_PMD_Initialize:
  1191                           	opt callstack 0
  1192                           
  1193 ;; *************** function _PIN_MANAGER_Initialize *****************
  1194 ;; Defined at:
  1195 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    4
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_SYSTEM_Initialize
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text3
  1224  002180                     __ptext3:
  1225                           	opt callstack 0
  1226  002180                     _PIN_MANAGER_Initialize:
  1227                           	opt callstack 25
  1228  002180                     
  1229                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1230  002180  0E00               	movlw	0
  1231  002182  6E87               	movwf	135,c	;volatile
  1232                           
  1233                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1234  002184  0E00               	movlw	0
  1235  002186  6E86               	movwf	134,c	;volatile
  1236                           
  1237                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1238  002188  0E00               	movlw	0
  1239  00218A  6E83               	movwf	131,c	;volatile
  1240                           
  1241                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1242  00218C  0E00               	movlw	0
  1243  00218E  6E84               	movwf	132,c	;volatile
  1244                           
  1245                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1246  002190  0E00               	movlw	0
  1247  002192  6E85               	movwf	133,c	;volatile
  1248                           
  1249                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1250  002194  0E07               	movlw	7
  1251  002196  6E8C               	movwf	140,c	;volatile
  1252                           
  1253                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1254  002198  0E07               	movlw	7
  1255  00219A  6E88               	movwf	136,c	;volatile
  1256                           
  1257                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1258  00219C  0EBF               	movlw	191
  1259  00219E  6E89               	movwf	137,c	;volatile
  1260                           
  1261                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1262  0021A0  0EBF               	movlw	191
  1263  0021A2  6E8A               	movwf	138,c	;volatile
  1264                           
  1265                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1266  0021A4  0EFE               	movlw	254
  1267  0021A6  6E8B               	movwf	139,c	;volatile
  1268  0021A8                     
  1269                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1270  0021A8  010F               	movlb	15	; () banked
  1271  0021AA  6926               	setf	38,b	;volatile
  1272                           
  1273                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1274  0021AC  0E3B               	movlw	59
  1275  0021AE  6F21               	movwf	33,b	;volatile
  1276                           
  1277                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1278  0021B0  0E37               	movlw	55
  1279  0021B2  6F19               	movwf	25,b	;volatile
  1280                           
  1281                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1282  0021B4  0E07               	movlw	7
  1283  0021B6  6F2E               	movwf	46,b	;volatile
  1284  0021B8                     
  1285                           ; BSR set to: 15
  1286                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1287  0021B8  6911               	setf	17,b	;volatile
  1288                           
  1289                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1290  0021BA  0E00               	movlw	0
  1291  0021BC  6F25               	movwf	37,b	;volatile
  1292                           
  1293                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1294  0021BE  0E00               	movlw	0
  1295  0021C0  6F2D               	movwf	45,b	;volatile
  1296                           
  1297                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1298  0021C2  0E00               	movlw	0
  1299  0021C4  6F18               	movwf	24,b	;volatile
  1300                           
  1301                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1302  0021C6  0E00               	movlw	0
  1303  0021C8  6F10               	movwf	16,b	;volatile
  1304                           
  1305                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1306  0021CA  0E00               	movlw	0
  1307  0021CC  6F20               	movwf	32,b	;volatile
  1308                           
  1309                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1310  0021CE  0E00               	movlw	0
  1311  0021D0  6F2C               	movwf	44,b	;volatile
  1312                           
  1313                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1314  0021D2  0E00               	movlw	0
  1315  0021D4  6F0F               	movwf	15,b	;volatile
  1316                           
  1317                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1318  0021D6  0E00               	movlw	0
  1319  0021D8  6F17               	movwf	23,b	;volatile
  1320                           
  1321                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1322  0021DA  0E00               	movlw	0
  1323  0021DC  6F1F               	movwf	31,b	;volatile
  1324                           
  1325                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1326  0021DE  0E00               	movlw	0
  1327  0021E0  6F24               	movwf	36,b	;volatile
  1328  0021E2                     
  1329                           ; BSR set to: 15
  1330                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1331  0021E2  690E               	setf	14,b	;volatile
  1332  0021E4                     
  1333                           ; BSR set to: 15
  1334                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1335  0021E4  6916               	setf	22,b	;volatile
  1336  0021E6                     
  1337                           ; BSR set to: 15
  1338                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1339  0021E6  691E               	setf	30,b	;volatile
  1340  0021E8                     
  1341                           ; BSR set to: 15
  1342                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1343  0021E8  6923               	setf	35,b	;volatile
  1344                           
  1345                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1346  0021EA  0E07               	movlw	7
  1347  0021EC  6F2B               	movwf	43,b	;volatile
  1348  0021EE                     
  1349                           ; BSR set to: 15
  1350                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1351  0021EE  690D               	setf	13,b	;volatile
  1352  0021F0                     
  1353                           ; BSR set to: 15
  1354                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1355  0021F0  6915               	setf	21,b	;volatile
  1356  0021F2                     
  1357                           ; BSR set to: 15
  1358                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1359  0021F2  691D               	setf	29,b	;volatile
  1360  0021F4                     
  1361                           ; BSR set to: 15
  1362                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1363  0021F4  6922               	setf	34,b	;volatile
  1364                           
  1365                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1366  0021F6  0E0F               	movlw	15
  1367  0021F8  6F2A               	movwf	42,b	;volatile
  1368                           
  1369                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1370  0021FA  0E17               	movlw	23
  1371  0021FC  010E               	movlb	14	; () banked
  1372  0021FE  6FB5               	movwf	181,b	;volatile
  1373                           
  1374                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1375  002200  0E0B               	movlw	11
  1376  002202  6FF5               	movwf	245,b	;volatile
  1377                           
  1378                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1379  002204  0E09               	movlw	9
  1380  002206  6FFD               	movwf	253,b	;volatile
  1381                           
  1382                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1383  002208  0E0F               	movlw	15
  1384  00220A  6F8D               	movwf	141,b	;volatile
  1385  00220C                     
  1386                           ; BSR set to: 14
  1387  00220C  0012               	return		;funcret
  1388  00220E                     __end_of_PIN_MANAGER_Initialize:
  1389                           	opt callstack 0
  1390                           
  1391 ;; *************** function _OSCILLATOR_Initialize *****************
  1392 ;; Defined at:
  1393 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    4
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_SYSTEM_Initialize
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text4
  1422  0028D2                     __ptext4:
  1423                           	opt callstack 0
  1424  0028D2                     _OSCILLATOR_Initialize:
  1425                           	opt callstack 25
  1426  0028D2                     
  1427                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1428  0028D2  0E60               	movlw	96
  1429  0028D4  010E               	movlb	14	; () banked
  1430  0028D6  6FD8               	movwf	216,b	;volatile
  1431                           
  1432                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1433  0028D8  0E00               	movlw	0
  1434  0028DA  6FDA               	movwf	218,b	;volatile
  1435                           
  1436                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1437  0028DC  0E00               	movlw	0
  1438  0028DE  6FDC               	movwf	220,b	;volatile
  1439                           
  1440                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1441  0028E0  0E06               	movlw	6
  1442  0028E2  6FDE               	movwf	222,b	;volatile
  1443                           
  1444                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1445  0028E4  0E00               	movlw	0
  1446  0028E6  6FDD               	movwf	221,b	;volatile
  1447  0028E8                     
  1448                           ; BSR set to: 14
  1449  0028E8  0012               	return		;funcret
  1450  0028EA                     __end_of_OSCILLATOR_Initialize:
  1451                           	opt callstack 0
  1452                           
  1453 ;; *************** function _INTERRUPT_Initialize *****************
  1454 ;; Defined at:
  1455 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		None
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    4
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_SYSTEM_Initialize
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text5
  1484  00299C                     __ptext5:
  1485                           	opt callstack 0
  1486  00299C                     _INTERRUPT_Initialize:
  1487                           	opt callstack 25
  1488  00299C                     
  1489                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1490  00299C  9AF2               	bcf	242,5,c	;volatile
  1491  00299E  0012               	return		;funcret
  1492  0029A0                     __end_of_INTERRUPT_Initialize:
  1493                           	opt callstack 0
  1494                           
  1495 ;; *************** function _EUSART2_Initialize *****************
  1496 ;; Defined at:
  1497 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    5
  1518 ;; This function calls:
  1519 ;;		_EUSART2_SetErrorHandler
  1520 ;;		_EUSART2_SetFramingErrorHandler
  1521 ;;		_EUSART2_SetOverrunErrorHandler
  1522 ;;		_EUSART2_SetRxInterruptHandler
  1523 ;;		_EUSART2_SetTxInterruptHandler
  1524 ;; This function is called by:
  1525 ;;		_SYSTEM_Initialize
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text6
  1530  00220E                     __ptext6:
  1531                           	opt callstack 0
  1532  00220E                     _EUSART2_Initialize:
  1533                           	opt callstack 24
  1534  00220E                     
  1535                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  1536  00220E  010E               	movlb	14	; () banked
  1537  002210  9FC5               	bcf	197,7,b	;volatile
  1538  002212                     
  1539                           ; BSR set to: 14
  1540                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  1541  002212  0E6E               	movlw	low _EUSART2_Receive_ISR
  1542  002214  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  1543  002216  0E1F               	movlw	high _EUSART2_Receive_ISR
  1544  002218  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  1545  00221A  EC8C  F014         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  1546  00221E                     
  1547                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  1548  00221E  010E               	movlb	14	; () banked
  1549  002220  9DC5               	bcf	197,6,b	;volatile
  1550                           
  1551                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  1552  002222  0ECC               	movlw	low _EUSART2_Transmit_ISR
  1553  002224  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  1554  002226  0E25               	movlw	high _EUSART2_Transmit_ISR
  1555  002228  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  1556  00222A  EC87  F014         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  1557  00222E                     
  1558                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  1559  00222E  0E08               	movlw	8
  1560  002230  010E               	movlb	14	; () banked
  1561  002232  6F9F               	movwf	159,b	;volatile
  1562  002234                     
  1563                           ; BSR set to: 14
  1564                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  1565  002234  0E90               	movlw	144
  1566  002236  6F9D               	movwf	157,b	;volatile
  1567  002238                     
  1568                           ; BSR set to: 14
  1569                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  1570  002238  0E24               	movlw	36
  1571  00223A  6F9E               	movwf	158,b	;volatile
  1572  00223C                     
  1573                           ; BSR set to: 14
  1574                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  1575  00223C  0E40               	movlw	64
  1576  00223E  6F9B               	movwf	155,b	;volatile
  1577  002240                     
  1578                           ; BSR set to: 14
  1579                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  1580  002240  0E03               	movlw	3
  1581  002242  6F9C               	movwf	156,b	;volatile
  1582  002244                     
  1583                           ; BSR set to: 14
  1584                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  1585  002244  0EA0               	movlw	low _EUSART2_DefaultFramingErrorHandler
  1586  002246  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  1587  002248  0E29               	movlw	high _EUSART2_DefaultFramingErrorHandler
  1588  00224A  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  1589  00224C  EC96  F014         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  1590  002250                     
  1591                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  1592  002250  0E7C               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  1593  002252  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  1594  002254  0E29               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  1595  002256  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1596  002258  EC91  F014         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  1597  00225C                     
  1598                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  1599  00225C  0E8A               	movlw	low _EUSART2_DefaultErrorHandler
  1600  00225E  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  1601  002260  0E29               	movlw	high _EUSART2_DefaultErrorHandler
  1602  002262  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  1603  002264  EC9B  F014         	call	_EUSART2_SetErrorHandler	;wreg free
  1604                           
  1605                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  1606  002268  0E00               	movlw	0
  1607  00226A  0100               	movlb	0	; () banked
  1608  00226C  6FB9               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  1609                           
  1610                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  1611  00226E  0E00               	movlw	0
  1612  002270  6FBD               	movwf	_eusart2TxHead& (0+255),b	;volatile
  1613                           
  1614                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  1615  002272  0E00               	movlw	0
  1616  002274  6FBC               	movwf	_eusart2TxTail& (0+255),b	;volatile
  1617                           
  1618                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  1619  002276  0E08               	movlw	8
  1620  002278  6FFB               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  1621                           
  1622                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  1623  00227A  0E00               	movlw	0
  1624  00227C  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  1625                           
  1626                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  1627  00227E  0E00               	movlw	0
  1628  002280  6FBB               	movwf	_eusart2RxTail& (0+255),b	;volatile
  1629                           
  1630                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  1631  002282  0E00               	movlw	0
  1632  002284  6FBA               	movwf	_eusart2RxCount& (0+255),b	;volatile
  1633  002286                     
  1634                           ; BSR set to: 0
  1635                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  1636  002286  010E               	movlb	14	; () banked
  1637  002288  8FC5               	bsf	197,7,b	;volatile
  1638  00228A                     
  1639                           ; BSR set to: 14
  1640  00228A  0012               	return		;funcret
  1641  00228C                     __end_of_EUSART2_Initialize:
  1642                           	opt callstack 0
  1643                           
  1644 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  1645 ;; Defined at:
  1646 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1649 ;;		 -> EUSART2_Transmit_ISR(1), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    4
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_EUSART2_Initialize
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text7
  1676  00290E                     __ptext7:
  1677                           	opt callstack 0
  1678  00290E                     _EUSART2_SetTxInterruptHandler:
  1679                           	opt callstack 24
  1680  00290E                     
  1681                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1682  00290E  C005  F0F8         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  1683  002912  C006  F0F9         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  1684  002916  0012               	return		;funcret
  1685  002918                     __end_of_EUSART2_SetTxInterruptHandler:
  1686                           	opt callstack 0
  1687                           
  1688 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  1689 ;; Defined at:
  1690 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1693 ;;		 -> EUSART2_Receive_ISR(1), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    4
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_EUSART2_Initialize
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text8
  1720  002918                     __ptext8:
  1721                           	opt callstack 0
  1722  002918                     _EUSART2_SetRxInterruptHandler:
  1723                           	opt callstack 24
  1724  002918                     
  1725                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1726  002918  C005  F0F6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  1727  00291C  C006  F0F7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  1728  002920  0012               	return		;funcret
  1729  002922                     __end_of_EUSART2_SetRxInterruptHandler:
  1730                           	opt callstack 0
  1731                           
  1732 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  1733 ;; Defined at:
  1734 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1737 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;Total ram usage:        2 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    4
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_EUSART2_Initialize
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text9
  1764  002922                     __ptext9:
  1765                           	opt callstack 0
  1766  002922                     _EUSART2_SetOverrunErrorHandler:
  1767                           	opt callstack 24
  1768  002922                     
  1769                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  1770  002922  C005  F0EE         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  1771  002926  C006  F0EF         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  1772  00292A  0012               	return		;funcret
  1773  00292C                     __end_of_EUSART2_SetOverrunErrorHandler:
  1774                           	opt callstack 0
  1775                           
  1776 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  1777 ;; Defined at:
  1778 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1781 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;Total ram usage:        2 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    4
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_EUSART2_Initialize
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text10
  1808  00292C                     __ptext10:
  1809                           	opt callstack 0
  1810  00292C                     _EUSART2_SetFramingErrorHandler:
  1811                           	opt callstack 24
  1812  00292C                     
  1813                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  1814  00292C  C005  F0F0         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  1815  002930  C006  F0F1         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  1816  002934  0012               	return		;funcret
  1817  002936                     __end_of_EUSART2_SetFramingErrorHandler:
  1818                           	opt callstack 0
  1819                           
  1820 ;; *************** function _EUSART2_SetErrorHandler *****************
  1821 ;; Defined at:
  1822 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1825 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;Total ram usage:        2 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    4
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_EUSART2_Initialize
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text11
  1852  002936                     __ptext11:
  1853                           	opt callstack 0
  1854  002936                     _EUSART2_SetErrorHandler:
  1855                           	opt callstack 24
  1856  002936                     
  1857                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  1858  002936  C005  F0EC         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  1859  00293A  C006  F0ED         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  1860  00293E  0012               	return		;funcret
  1861  002940                     __end_of_EUSART2_SetErrorHandler:
  1862                           	opt callstack 0
  1863                           
  1864 ;; *************** function _EUSART1_Initialize *****************
  1865 ;; Defined at:
  1866 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    5
  1887 ;; This function calls:
  1888 ;;		_EUSART1_SetErrorHandler
  1889 ;;		_EUSART1_SetFramingErrorHandler
  1890 ;;		_EUSART1_SetOverrunErrorHandler
  1891 ;;		_EUSART1_SetRxInterruptHandler
  1892 ;;		_EUSART1_SetTxInterruptHandler
  1893 ;; This function is called by:
  1894 ;;		_SYSTEM_Initialize
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text12
  1899  00228C                     __ptext12:
  1900                           	opt callstack 0
  1901  00228C                     _EUSART1_Initialize:
  1902                           	opt callstack 24
  1903  00228C                     
  1904                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  1905  00228C  010E               	movlb	14	; () banked
  1906  00228E  9BC5               	bcf	197,5,b	;volatile
  1907  002290                     
  1908                           ; BSR set to: 14
  1909                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1910  002290  0E2E               	movlw	low _EUSART1_Receive_ISR
  1911  002292  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1912  002294  0E20               	movlw	high _EUSART1_Receive_ISR
  1913  002296  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1914  002298  ECA5  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1915  00229C                     
  1916                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  1917  00229C  010E               	movlb	14	; () banked
  1918  00229E  99C5               	bcf	197,4,b	;volatile
  1919                           
  1920                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1921  0022A0  0E58               	movlw	low _EUSART1_Transmit_ISR
  1922  0022A2  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  1923  0022A4  0E26               	movlw	high _EUSART1_Transmit_ISR
  1924  0022A6  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  1925  0022A8  ECA0  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1926  0022AC                     
  1927                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  1928  0022AC  0E08               	movlw	8
  1929  0022AE  6E9F               	movwf	159,c	;volatile
  1930  0022B0                     
  1931                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  1932  0022B0  0E90               	movlw	144
  1933  0022B2  6E9D               	movwf	157,c	;volatile
  1934  0022B4                     
  1935                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  1936  0022B4  0E24               	movlw	36
  1937  0022B6  6E9E               	movwf	158,c	;volatile
  1938  0022B8                     
  1939                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  1940  0022B8  0E40               	movlw	64
  1941  0022BA  6E9B               	movwf	155,c	;volatile
  1942  0022BC                     
  1943                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  1944  0022BC  0E03               	movlw	3
  1945  0022BE  6E9C               	movwf	156,c	;volatile
  1946  0022C0                     
  1947                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1948  0022C0  0EA2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1949  0022C2  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1950  0022C4  0E29               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1951  0022C6  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1952  0022C8  ECAF  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1953  0022CC                     
  1954                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1955  0022CC  0E90               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1956  0022CE  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1957  0022D0  0E29               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1958  0022D2  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1959  0022D4  ECAA  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1960  0022D8                     
  1961                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1962  0022D8  0E96               	movlw	low _EUSART1_DefaultErrorHandler
  1963  0022DA  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1964  0022DC  0E29               	movlw	high _EUSART1_DefaultErrorHandler
  1965  0022DE  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1966  0022E0  ECB4  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  1967                           
  1968                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  1969  0022E4  0E00               	movlw	0
  1970  0022E6  0100               	movlb	0	; () banked
  1971  0022E8  6FB4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  1972                           
  1973                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  1974  0022EA  0E00               	movlw	0
  1975  0022EC  6FB8               	movwf	_eusart1TxHead& (0+255),b	;volatile
  1976                           
  1977                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  1978  0022EE  0E00               	movlw	0
  1979  0022F0  6FB7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  1980                           
  1981                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  1982  0022F2  0E10               	movlw	16
  1983  0022F4  6FFA               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  1984                           
  1985                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  1986  0022F6  0E00               	movlw	0
  1987  0022F8  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  1988                           
  1989                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  1990  0022FA  0E00               	movlw	0
  1991  0022FC  6FB6               	movwf	_eusart1RxTail& (0+255),b	;volatile
  1992                           
  1993                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  1994  0022FE  0E00               	movlw	0
  1995  002300  6FB5               	movwf	_eusart1RxCount& (0+255),b	;volatile
  1996  002302                     
  1997                           ; BSR set to: 0
  1998                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  1999  002302  010E               	movlb	14	; () banked
  2000  002304  8BC5               	bsf	197,5,b	;volatile
  2001  002306                     
  2002                           ; BSR set to: 14
  2003  002306  0012               	return		;funcret
  2004  002308                     __end_of_EUSART1_Initialize:
  2005                           	opt callstack 0
  2006                           
  2007 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2008 ;; Defined at:
  2009 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2012 ;;		 -> EUSART1_Transmit_ISR(1), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    4
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_EUSART1_Initialize
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text13
  2039  002940                     __ptext13:
  2040                           	opt callstack 0
  2041  002940                     _EUSART1_SetTxInterruptHandler:
  2042                           	opt callstack 24
  2043  002940                     
  2044                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2045  002940  C005  F0F4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2046  002944  C006  F0F5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2047  002948  0012               	return		;funcret
  2048  00294A                     __end_of_EUSART1_SetTxInterruptHandler:
  2049                           	opt callstack 0
  2050                           
  2051 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2052 ;; Defined at:
  2053 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2056 ;;		 -> EUSART1_Receive_ISR(1), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    4
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_EUSART1_Initialize
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text14
  2083  00294A                     __ptext14:
  2084                           	opt callstack 0
  2085  00294A                     _EUSART1_SetRxInterruptHandler:
  2086                           	opt callstack 24
  2087  00294A                     
  2088                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2089  00294A  C005  F0F2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2090  00294E  C006  F0F3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2091  002952  0012               	return		;funcret
  2092  002954                     __end_of_EUSART1_SetRxInterruptHandler:
  2093                           	opt callstack 0
  2094                           
  2095 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2096 ;; Defined at:
  2097 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2100 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;Total ram usage:        2 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    4
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_EUSART1_Initialize
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text15
  2127  002954                     __ptext15:
  2128                           	opt callstack 0
  2129  002954                     _EUSART1_SetOverrunErrorHandler:
  2130                           	opt callstack 24
  2131  002954                     
  2132                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2133  002954  C005  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2134  002958  C006  F0E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2135  00295C  0012               	return		;funcret
  2136  00295E                     __end_of_EUSART1_SetOverrunErrorHandler:
  2137                           	opt callstack 0
  2138                           
  2139 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2140 ;; Defined at:
  2141 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2144 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;Total ram usage:        2 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    4
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_EUSART1_Initialize
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text16
  2171  00295E                     __ptext16:
  2172                           	opt callstack 0
  2173  00295E                     _EUSART1_SetFramingErrorHandler:
  2174                           	opt callstack 24
  2175  00295E                     
  2176                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2177  00295E  C005  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2178  002962  C006  F0EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2179  002966  0012               	return		;funcret
  2180  002968                     __end_of_EUSART1_SetFramingErrorHandler:
  2181                           	opt callstack 0
  2182                           
  2183 ;; *************** function _EUSART1_SetErrorHandler *****************
  2184 ;; Defined at:
  2185 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2188 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;Total ram usage:        2 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    4
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_EUSART1_Initialize
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text17
  2215  002968                     __ptext17:
  2216                           	opt callstack 0
  2217  002968                     _EUSART1_SetErrorHandler:
  2218                           	opt callstack 24
  2219  002968                     
  2220                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2221  002968  C005  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2222  00296C  C006  F0E7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2223  002970  0012               	return		;funcret
  2224  002972                     __end_of_EUSART1_SetErrorHandler:
  2225                           	opt callstack 0
  2226                           
  2227 ;; *************** function _RXMode *****************
  2228 ;; Defined at:
  2229 ;;		line 40 in file "main.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		None
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text18
  2258  002984                     __ptext18:
  2259                           	opt callstack 0
  2260  002984                     _RXMode:
  2261                           	opt callstack 26
  2262  002984  9086               	bcf	134,0,c	;volatile
  2263  002986  9683               	bcf	131,3,c	;volatile
  2264  002988  0012               	return		;funcret
  2265  00298A                     __end_of_RXMode:
  2266                           	opt callstack 0
  2267                           
  2268 ;; *************** function _PrintRXBuff *****************
  2269 ;; Defined at:
  2270 ;;		line 55 in file "main.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  i               2   37[BANK0 ] int 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;Total ram usage:        3 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:   13
  2291 ;; This function calls:
  2292 ;;		_printf
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text19
  2299  002308                     __ptext19:
  2300                           	opt callstack 0
  2301  002308                     _PrintRXBuff:
  2302                           	opt callstack 17
  2303  002308                     
  2304                           ;main.c: 57:     int i=0;
  2305  002308  0E00               	movlw	0
  2306  00230A  0100               	movlb	0	; () banked
  2307  00230C  6FE4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2308  00230E  0E00               	movlw	0
  2309  002310  6FE3               	movwf	PrintRXBuff@i& (0+255),b
  2310                           
  2311                           ;main.c: 59:     for(i=0; i< ByteNum ; i++ ){
  2312  002312  0E00               	movlw	0
  2313  002314  6FE4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2314  002316  0E00               	movlw	0
  2315  002318  6FE3               	movwf	PrintRXBuff@i& (0+255),b
  2316  00231A  EFA7  F011         	goto	l3544
  2317  00231E                     l3540:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;main.c: 60:         printf("Byte %i. Val: 0x%02x \r\n", i, rxData[i]);
  2321  00231E  0E01               	movlw	low STR_1
  2322  002320  6FD9               	movwf	printf@fmt& (0+255),b
  2323  002322  0E0F               	movlw	high STR_1
  2324  002324  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  2325  002326  C0E3  F0DB         	movff	PrintRXBuff@i,?_printf+2
  2326  00232A  C0E4  F0DC         	movff	PrintRXBuff@i+1,?_printf+3
  2327  00232E  0E00               	movlw	low _rxData
  2328  002330  25E3               	addwf	PrintRXBuff@i& (0+255),w,b
  2329  002332  6ED9               	movwf	fsr2l,c
  2330  002334  0E01               	movlw	high _rxData
  2331  002336  21E4               	addwfc	(PrintRXBuff@i+1)& (0+255),w,b
  2332  002338  6EDA               	movwf	fsr2h,c
  2333  00233A  50DF               	movf	indf2,w,c
  2334  00233C  6E55               	movwf	??_PrintRXBuff^0,c
  2335  00233E  5055               	movf	??_PrintRXBuff^0,w,c
  2336  002340  6FDD               	movwf	(?_printf+4)& (0+255),b
  2337  002342  6BDE               	clrf	(?_printf+5)& (0+255),b
  2338  002344  EC27  F014         	call	_printf	;wreg free
  2339  002348                     
  2340                           ;main.c: 61:     }
  2341  002348  0100               	movlb	0	; () banked
  2342  00234A  4BE3               	infsnz	PrintRXBuff@i& (0+255),f,b
  2343  00234C  2BE4               	incf	(PrintRXBuff@i+1)& (0+255),f,b
  2344  00234E                     l3544:
  2345                           
  2346                           ; BSR set to: 0
  2347  00234E  51AE               	movf	_ByteNum& (0+255),w,b
  2348  002350  5DE3               	subwf	PrintRXBuff@i& (0+255),w,b
  2349  002352  51E4               	movf	(PrintRXBuff@i+1)& (0+255),w,b
  2350  002354  0A80               	xorlw	128
  2351  002356  6E55               	movwf	??_PrintRXBuff^0,c
  2352  002358  51AF               	movf	(_ByteNum+1)& (0+255),w,b
  2353  00235A  0A80               	xorlw	128
  2354  00235C  5855               	subwfb	??_PrintRXBuff^0,w,c
  2355  00235E  A0D8               	btfss	status,0,c
  2356  002360  EFB4  F011         	goto	u2901
  2357  002364  EFB6  F011         	goto	u2900
  2358  002368                     u2901:
  2359  002368  EF8F  F011         	goto	l3540
  2360  00236C                     u2900:
  2361  00236C                     
  2362                           ; BSR set to: 0
  2363  00236C  0012               	return		;funcret
  2364  00236E                     __end_of_PrintRXBuff:
  2365                           	opt callstack 0
  2366                           
  2367 ;; *************** function _printf *****************
  2368 ;; Defined at:
  2369 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  2372 ;;		 -> STR_2(14), STR_1(24), 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  ap              2   35[BANK0 ] PTR void [1]
  2375 ;;		 -> ?_printf(2), 
  2376 ;;  ret             2    0        int 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2   27[BANK0 ] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2386 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;Total ram usage:       10 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:   12
  2393 ;; This function calls:
  2394 ;;		_vfprintf
  2395 ;; This function is called by:
  2396 ;;		_PrintRXBuff
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text20
  2402  00284E                     __ptext20:
  2403                           	opt callstack 0
  2404  00284E                     _printf:
  2405                           	opt callstack 18
  2406  00284E  0EDB               	movlw	low (?_printf+2)
  2407  002850  0100               	movlb	0	; () banked
  2408  002852  6FE1               	movwf	printf@ap& (0+255),b
  2409  002854  0E00               	movlw	high (?_printf+2)
  2410  002856  6FE2               	movwf	(printf@ap+1)& (0+255),b
  2411  002858                     
  2412                           ; BSR set to: 0
  2413  002858  0E00               	movlw	0
  2414  00285A  6FD3               	movwf	vfprintf@fp& (0+255),b
  2415  00285C  0E00               	movlw	0
  2416  00285E  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2417  002860  C0D9  F0D5         	movff	printf@fmt,vfprintf@fmt
  2418  002864  C0DA  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  2419  002868  0EE1               	movlw	low printf@ap
  2420  00286A  6FD7               	movwf	vfprintf@ap& (0+255),b
  2421  00286C  0E00               	movlw	high printf@ap
  2422  00286E  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2423  002870  ECB7  F011         	call	_vfprintf	;wreg free
  2424  002874  0012               	return		;funcret
  2425  002876                     __end_of_printf:
  2426                           	opt callstack 0
  2427                           
  2428 ;; *************** function _vfprintf *****************
  2429 ;; Defined at:
  2430 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2433 ;;		 -> NULL(0), 
  2434 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2435 ;;		 -> STR_2(14), STR_1(24), 
  2436 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2437 ;;		 -> printf@ap(2), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2440 ;;		 -> STR_2(14), STR_1(24), 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2   21[BANK0 ] int 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2450 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;Total ram usage:        8 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:   11
  2457 ;; This function calls:
  2458 ;;		_vfpfcnvrt
  2459 ;; This function is called by:
  2460 ;;		_printf
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text21
  2465  00236E                     __ptext21:
  2466                           	opt callstack 0
  2467  00236E                     _vfprintf:
  2468                           	opt callstack 18
  2469  00236E                     
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2471  00236E  C0D5  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2472  002372  C0D6  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2473  002376                     
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2475  002376  0E00               	movlw	0
  2476  002378  0100               	movlb	0	; () banked
  2477  00237A  6FA9               	movwf	(_nout+1)& (0+255),b
  2478  00237C  0E00               	movlw	0
  2479  00237E  6FA8               	movwf	_nout& (0+255),b
  2480                           
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2482  002380  EFD5  F011         	goto	l3530
  2483  002384                     l3528:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2487  002384  C0D3  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2488  002388  C0D4  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2489  00238C  0E53               	movlw	low vfprintf@cfmt
  2490  00238E  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2491  002390  0E00               	movlw	high vfprintf@cfmt
  2492  002392  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2493  002394  C0D7  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2494  002398  C0D8  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2495  00239C  EC94  F007         	call	_vfpfcnvrt	;wreg free
  2496  0023A0  5049               	movf	?_vfpfcnvrt^0,w,c
  2497  0023A2  0100               	movlb	0	; () banked
  2498  0023A4  27A8               	addwf	_nout& (0+255),f,b
  2499  0023A6  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2500  0023A8  23A9               	addwfc	(_nout+1)& (0+255),f,b
  2501  0023AA                     l3530:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2505  0023AA  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2506  0023AE  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2507  0023B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2508  0023B2  6AF8               	clrf	tblptru,c
  2509  0023B4                     	endif
  2510  0023B4                     	if	0	;tblptru may be non-zero
  2511  0023B4                     	endif
  2512  0023B4  0008               	tblrd		*
  2513  0023B6  50F5               	movf	tablat,w,c
  2514  0023B8  0900               	iorlw	0
  2515  0023BA  A4D8               	btfss	status,2,c
  2516  0023BC  EFE2  F011         	goto	u2891
  2517  0023C0  EFE4  F011         	goto	u2890
  2518  0023C4                     u2891:
  2519  0023C4  EFC2  F011         	goto	l3528
  2520  0023C8                     u2890:
  2521  0023C8                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2524  0023C8  C0A8  F0D3         	movff	_nout,?_vfprintf
  2525  0023CC  C0A9  F0D4         	movff	_nout+1,?_vfprintf+1
  2526  0023D0                     
  2527                           ; BSR set to: 0
  2528  0023D0  0012               	return		;funcret
  2529  0023D2                     __end_of_vfprintf:
  2530                           	opt callstack 0
  2531                           
  2532 ;; *************** function _vfpfcnvrt *****************
  2533 ;; Defined at:
  2534 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2537 ;;		 -> NULL(0), 
  2538 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2539 ;;		 -> vfprintf@cfmt(2), 
  2540 ;;  ap              2   76[COMRAM] PTR PTR void 
  2541 ;;		 -> printf@ap(2), 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  llu             8    8[BANK0 ] unsigned long long 
  2544 ;;  ll              8    0[BANK0 ] long long 
  2545 ;;  f               4    0        long long 
  2546 ;;  vp              3    0        PTR void 
  2547 ;;  ct              3    0        unsigned char [3]
  2548 ;;  cp              3    0        PTR unsigned char 
  2549 ;;  done            2   16[BANK0 ] int 
  2550 ;;  i               2    0        int 
  2551 ;;  c               1   20[BANK0 ] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2   72[COMRAM] int 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2561 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;Total ram usage:       31 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:   10
  2568 ;; This function calls:
  2569 ;;		_atoi
  2570 ;;		_dtoa
  2571 ;;		_fputc
  2572 ;;		_isdigit
  2573 ;;		_xtoa
  2574 ;; This function is called by:
  2575 ;;		_vfprintf
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text22
  2580  000F28                     __ptext22:
  2581                           	opt callstack 0
  2582  000F28                     _vfpfcnvrt:
  2583                           	opt callstack 18
  2584  000F28                     
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2586  000F28  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2587  000F2C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2588  000F30  CFDE FFF6          	movff	postinc2,tblptrl
  2589  000F34  CFDD FFF7          	movff	postdec2,tblptrh
  2590  000F38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2591  000F38  6AF8               	clrf	tblptru,c
  2592  000F3A                     	endif
  2593  000F3A                     	if	0	;tblptru may be non-zero
  2594  000F3A                     	endif
  2595  000F3A  0008               	tblrd		*
  2596  000F3C  50F5               	movf	tablat,w,c
  2597  000F3E  0A25               	xorlw	37
  2598  000F40  A4D8               	btfss	status,2,c
  2599  000F42  EFA5  F007         	goto	u2281
  2600  000F46  EFA7  F007         	goto	u2280
  2601  000F4A                     u2281:
  2602  000F4A  EFAA  F009         	goto	l3058
  2603  000F4E                     u2280:
  2604  000F4E                     
  2605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2606  000F4E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2607  000F52  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2608  000F56  2ADE               	incf	postinc2,f,c
  2609  000F58  0E00               	movlw	0
  2610  000F5A  22DD               	addwfc	postdec2,f,c
  2611  000F5C                     
  2612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2613  000F5C  0E00               	movlw	0
  2614  000F5E  0100               	movlb	0	; () banked
  2615  000F60  6FAB               	movwf	(_width+1)& (0+255),b
  2616  000F62  0E00               	movlw	0
  2617  000F64  6FAA               	movwf	_width& (0+255),b
  2618  000F66  C0AA  F057         	movff	_width,_flags
  2619  000F6A  C0AB  F058         	movff	_width+1,_flags+1
  2620  000F6E                     
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2623  000F6E  69AC               	setf	_prec& (0+255),b
  2624  000F70  69AD               	setf	(_prec+1)& (0+255),b
  2625  000F72                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2628  000F72  0E00               	movlw	0
  2629  000F74  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2630  000F76  0E00               	movlw	0
  2631  000F78  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2632                           
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2634  000F7A  EF06  F008         	goto	l2996
  2635  000F7E                     l2970:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2639  000F7E  8057               	bsf	_flags^0,0,c
  2640  000F80                     l2972:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2644  000F80  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2645  000F84  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2646  000F88  2ADE               	incf	postinc2,f,c
  2647  000F8A  0E00               	movlw	0
  2648  000F8C  22DD               	addwfc	postdec2,f,c
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2651  000F8E  EF06  F008         	goto	l2996
  2652  000F92                     l2974:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2656  000F92  8257               	bsf	_flags^0,1,c
  2657  000F94  EFC0  F007         	goto	l2972
  2658  000F98                     l2978:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2662  000F98  8457               	bsf	_flags^0,2,c
  2663  000F9A  EFC0  F007         	goto	l2972
  2664  000F9E                     l2982:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2668  000F9E  8657               	bsf	_flags^0,3,c
  2669  000FA0  EFC0  F007         	goto	l2972
  2670  000FA4                     l2986:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2674  000FA4  8857               	bsf	_flags^0,4,c
  2675  000FA6  EFC0  F007         	goto	l2972
  2676  000FAA                     l2990:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2680  000FAA  0E00               	movlw	0
  2681  000FAC  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2682  000FAE  0E01               	movlw	1
  2683  000FB0  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2686  000FB2  EF06  F008         	goto	l2996
  2687  000FB6                     l2994:
  2688                           
  2689                           ; BSR set to: 0
  2690  000FB6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2691  000FBA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2692  000FBE  CFDE FFF6          	movff	postinc2,tblptrl
  2693  000FC2  CFDD FFF7          	movff	postdec2,tblptrh
  2694  000FC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2695  000FC6  6AF8               	clrf	tblptru,c
  2696  000FC8                     	endif
  2697  000FC8                     	if	0	;tblptru may be non-zero
  2698  000FC8                     	endif
  2699  000FC8  0008               	tblrd		*
  2700  000FCA  50F5               	movf	tablat,w,c
  2701  000FCC  6E4F               	movwf	??_vfpfcnvrt^0,c
  2702  000FCE  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  2703                           
  2704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 1, Range of values is 0 to 0
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte            4     3 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711  000FD0  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2712  000FD2  0A00               	xorlw	0	; case 0
  2713  000FD4  B4D8               	btfsc	status,2,c
  2714  000FD6  EFEF  F007         	goto	l3666
  2715  000FDA  EFD5  F007         	goto	l2990
  2716  000FDE                     l3666:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 5, Range of values is 32 to 48
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte           16     9 (average)
  2724                           ;	Chosen strategy is simple_byte
  2725  000FDE  504F               	movf	??_vfpfcnvrt^0,w,c
  2726  000FE0  0A20               	xorlw	32	; case 32
  2727  000FE2  B4D8               	btfsc	status,2,c
  2728  000FE4  EFCF  F007         	goto	l2982
  2729  000FE8  0A03               	xorlw	3	; case 35
  2730  000FEA  B4D8               	btfsc	status,2,c
  2731  000FEC  EFD2  F007         	goto	l2986
  2732  000FF0  0A08               	xorlw	8	; case 43
  2733  000FF2  B4D8               	btfsc	status,2,c
  2734  000FF4  EFCC  F007         	goto	l2978
  2735  000FF8  0A06               	xorlw	6	; case 45
  2736  000FFA  B4D8               	btfsc	status,2,c
  2737  000FFC  EFBF  F007         	goto	l2970
  2738  001000  0A1D               	xorlw	29	; case 48
  2739  001002  B4D8               	btfsc	status,2,c
  2740  001004  EFC9  F007         	goto	l2974
  2741  001008  EFD5  F007         	goto	l2990
  2742  00100C                     l2996:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2746  00100C  51CE               	movf	vfpfcnvrt@done& (0+255),w,b
  2747  00100E  11CF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2748  001010  B4D8               	btfsc	status,2,c
  2749  001012  EF0D  F008         	goto	u2291
  2750  001016  EF0F  F008         	goto	u2290
  2751  00101A                     u2291:
  2752  00101A  EFDB  F007         	goto	l2994
  2753  00101E                     u2290:
  2754  00101E                     
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2757  00101E  A057               	btfss	_flags^0,0,c
  2758  001020  EF14  F008         	goto	u2301
  2759  001024  EF16  F008         	goto	u2300
  2760  001028                     u2301:
  2761  001028  EF17  F008         	goto	l3000
  2762  00102C                     u2300:
  2763  00102C                     
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2766  00102C  9257               	bcf	_flags^0,1,c
  2767  00102E                     l3000:
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2771  00102E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2772  001032  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2773  001036  CFDE FFF6          	movff	postinc2,tblptrl
  2774  00103A  CFDD FFF7          	movff	postdec2,tblptrh
  2775  00103E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2776  00103E  6AF8               	clrf	tblptru,c
  2777  001040                     	endif
  2778  001040                     	if	0	;tblptru may be non-zero
  2779  001040                     	endif
  2780  001040  0008               	tblrd		*
  2781  001042  50F5               	movf	tablat,w,c
  2782  001044  0A2A               	xorlw	42
  2783  001046  A4D8               	btfss	status,2,c
  2784  001048  EF28  F008         	goto	u2311
  2785  00104C  EF2A  F008         	goto	u2310
  2786  001050                     u2311:
  2787  001050  EF53  F008         	goto	l3008
  2788  001054                     u2310:
  2789  001054                     
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2792  001054  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2793  001058  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2794  00105C  2ADE               	incf	postinc2,f,c
  2795  00105E  0E00               	movlw	0
  2796  001060  22DD               	addwfc	postdec2,f,c
  2797                           
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2799  001062  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2800  001066  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2801  00106A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2802  00106E  0E02               	movlw	2
  2803  001070  26DE               	addwf	postinc2,f,c
  2804  001072  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2805  001076  0E00               	movlw	0
  2806  001078  22DD               	addwfc	postdec2,f,c
  2807  00107A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2808  00107E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2809  001082  CFDE F0AA          	movff	postinc2,_width
  2810  001086  CFDD F0AB          	movff	postdec2,_width+1
  2811  00108A                     
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2814  00108A  BFAB               	btfsc	(_width+1)& (0+255),7,b
  2815  00108C  EF4C  F008         	goto	u2320
  2816  001090  EF4A  F008         	goto	u2321
  2817  001094                     u2321:
  2818  001094  EF98  F008         	goto	l3018
  2819  001098                     u2320:
  2820  001098                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2823  001098  8057               	bsf	_flags^0,0,c
  2824                           
  2825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2826  00109A  6DAA               	negf	_width& (0+255),b
  2827  00109C  1FAB               	comf	(_width+1)& (0+255),f,b
  2828  00109E  B0D8               	btfsc	status,0,c
  2829  0010A0  2BAB               	incf	(_width+1)& (0+255),f,b
  2830  0010A2  EF98  F008         	goto	l3018
  2831  0010A6                     l3008:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2835  0010A6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836  0010AA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837  0010AE  CFDE F00C          	movff	postinc2,atoi@s
  2838  0010B2  CFDD F00D          	movff	postdec2,atoi@s+1
  2839  0010B6  ECA2  F00C         	call	_atoi	;wreg free
  2840  0010BA  C00C  F0AA         	movff	?_atoi,_width
  2841  0010BE  C00D  F0AB         	movff	?_atoi+1,_width+1
  2842                           
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2844  0010C2  EF6A  F008         	goto	l3012
  2845  0010C6                     l3010:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2849  0010C6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850  0010CA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  0010CE  2ADE               	incf	postinc2,f,c
  2852  0010D0  0E00               	movlw	0
  2853  0010D2  22DD               	addwfc	postdec2,f,c
  2854  0010D4                     l3012:
  2855  0010D4  0ED0               	movlw	208
  2856  0010D6  6E4F               	movwf	??_vfpfcnvrt^0,c
  2857  0010D8  0EFF               	movlw	255
  2858  0010DA  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2859  0010DC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2860  0010E0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2861  0010E4  CFDE FFF6          	movff	postinc2,tblptrl
  2862  0010E8  CFDD FFF7          	movff	postdec2,tblptrh
  2863  0010EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2864  0010EC  6AF8               	clrf	tblptru,c
  2865  0010EE                     	endif
  2866  0010EE                     	if	0	;tblptru may be non-zero
  2867  0010EE                     	endif
  2868  0010EE  0008               	tblrd		*
  2869  0010F0  50F5               	movf	tablat,w,c
  2870  0010F2  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2871  0010F4  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2872  0010F6  504F               	movf	??_vfpfcnvrt^0,w,c
  2873  0010F8  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2874  0010FA  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2875  0010FC  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2876  0010FE  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2877  001100  E10A               	bnz	u2330
  2878  001102  0E0A               	movlw	10
  2879  001104  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2880  001106  A0D8               	btfss	status,0,c
  2881  001108  EF88  F008         	goto	u2331
  2882  00110C  EF8B  F008         	goto	u2330
  2883  001110                     u2331:
  2884  001110  0E01               	movlw	1
  2885  001112  EF8C  F008         	goto	u2340
  2886  001116                     u2330:
  2887  001116  0E00               	movlw	0
  2888  001118                     u2340:
  2889  001118  0100               	movlb	0	; () banked
  2890  00111A  6FD0               	movwf	_vfpfcnvrt$1234& (0+255),b
  2891  00111C  6BD1               	clrf	(_vfpfcnvrt$1234+1)& (0+255),b
  2892  00111E                     
  2893                           ; BSR set to: 0
  2894  00111E  51D0               	movf	_vfpfcnvrt$1234& (0+255),w,b
  2895  001120  11D1               	iorwf	(_vfpfcnvrt$1234+1)& (0+255),w,b
  2896  001122  A4D8               	btfss	status,2,c
  2897  001124  EF96  F008         	goto	u2351
  2898  001128  EF98  F008         	goto	u2350
  2899  00112C                     u2351:
  2900  00112C  EF63  F008         	goto	l3010
  2901  001130                     u2350:
  2902  001130                     l3018:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2906  001130  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2907  001134  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2908  001138  CFDE FFF6          	movff	postinc2,tblptrl
  2909  00113C  CFDD FFF7          	movff	postdec2,tblptrh
  2910  001140                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2911  001140  6AF8               	clrf	tblptru,c
  2912  001142                     	endif
  2913  001142                     	if	0	;tblptru may be non-zero
  2914  001142                     	endif
  2915  001142  0008               	tblrd		*
  2916  001144  50F5               	movf	tablat,w,c
  2917  001146  0A64               	xorlw	100
  2918  001148  B4D8               	btfsc	status,2,c
  2919  00114A  EFA9  F008         	goto	u2361
  2920  00114E  EFAB  F008         	goto	u2360
  2921  001152                     u2361:
  2922  001152  EFBE  F008         	goto	l3022
  2923  001156                     u2360:
  2924  001156                     
  2925                           ; BSR set to: 0
  2926  001156  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2927  00115A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2928  00115E  CFDE FFF6          	movff	postinc2,tblptrl
  2929  001162  CFDD FFF7          	movff	postdec2,tblptrh
  2930  001166                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2931  001166  6AF8               	clrf	tblptru,c
  2932  001168                     	endif
  2933  001168                     	if	0	;tblptru may be non-zero
  2934  001168                     	endif
  2935  001168  0008               	tblrd		*
  2936  00116A  50F5               	movf	tablat,w,c
  2937  00116C  0A69               	xorlw	105
  2938  00116E  A4D8               	btfss	status,2,c
  2939  001170  EFBC  F008         	goto	u2371
  2940  001174  EFBE  F008         	goto	u2370
  2941  001178                     u2371:
  2942  001178  EFFE  F008         	goto	l3028
  2943  00117C                     u2370:
  2944  00117C                     l3022:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2948  00117C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949  001180  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950  001184  2ADE               	incf	postinc2,f,c
  2951  001186  0E00               	movlw	0
  2952  001188  22DD               	addwfc	postdec2,f,c
  2953                           
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2955  00118A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2956  00118E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2957  001192  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2958  001196  0E02               	movlw	2
  2959  001198  26DE               	addwf	postinc2,f,c
  2960  00119A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2961  00119E  0E00               	movlw	0
  2962  0011A0  22DD               	addwfc	postdec2,f,c
  2963  0011A2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2964  0011A6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2965  0011AA  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2966  0011AE  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2967  0011B2  0E00               	movlw	0
  2968  0011B4  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2969  0011B6  0EFF               	movlw	-1
  2970  0011B8  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2971  0011BA  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2972  0011BC  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2973  0011BE  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2974  0011C0  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2975  0011C2  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2976  0011C4                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2979  0011C4  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  2980  0011C8  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2981  0011CC  C0BE  F024         	movff	vfpfcnvrt@ll,dtoa@d
  2982  0011D0  C0BF  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2983  0011D4  C0C0  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2984  0011D8  C0C1  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2985  0011DC  C0C2  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2986  0011E0  C0C3  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2987  0011E4  C0C4  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2988  0011E8  C0C5  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2989  0011EC  ECC7  F009         	call	_dtoa	;wreg free
  2990  0011F0  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  2991  0011F4  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2992  0011F8  EFC6  F009         	goto	l728
  2993  0011FC                     l3028:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2997  0011FC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2998  001200  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2999  001204  CFDE FFF6          	movff	postinc2,tblptrl
  3000  001208  CFDD FFF7          	movff	postdec2,tblptrh
  3001  00120C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3002  00120C  6AF8               	clrf	tblptru,c
  3003  00120E                     	endif
  3004  00120E                     	if	0	;tblptru may be non-zero
  3005  00120E                     	endif
  3006  00120E  0008               	tblrd		*
  3007  001210  50F5               	movf	tablat,w,c
  3008  001212  0A78               	xorlw	120
  3009  001214  B4D8               	btfsc	status,2,c
  3010  001216  EF0F  F009         	goto	u2381
  3011  00121A  EF11  F009         	goto	u2380
  3012  00121E                     u2381:
  3013  00121E  EF24  F009         	goto	l3032
  3014  001222                     u2380:
  3015  001222                     
  3016                           ; BSR set to: 0
  3017  001222  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3018  001226  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3019  00122A  CFDE FFF6          	movff	postinc2,tblptrl
  3020  00122E  CFDD FFF7          	movff	postdec2,tblptrh
  3021  001232                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3022  001232  6AF8               	clrf	tblptru,c
  3023  001234                     	endif
  3024  001234                     	if	0	;tblptru may be non-zero
  3025  001234                     	endif
  3026  001234  0008               	tblrd		*
  3027  001236  50F5               	movf	tablat,w,c
  3028  001238  0A58               	xorlw	88
  3029  00123A  A4D8               	btfss	status,2,c
  3030  00123C  EF22  F009         	goto	u2391
  3031  001240  EF24  F009         	goto	u2390
  3032  001244                     u2391:
  3033  001244  EF73  F009         	goto	l3042
  3034  001248                     u2390:
  3035  001248                     l3032:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3039  001248  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3040  00124C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3041  001250  CFDE FFF6          	movff	postinc2,tblptrl
  3042  001254  CFDD FFF7          	movff	postdec2,tblptrh
  3043  001258                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3044  001258  6AF8               	clrf	tblptru,c
  3045  00125A                     	endif
  3046  00125A                     	if	0	;tblptru may be non-zero
  3047  00125A                     	endif
  3048  00125A  0008               	tblrd		*
  3049  00125C  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  3050  001260                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3053  001260  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3054  001264  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3055  001268  2ADE               	incf	postinc2,f,c
  3056  00126A  0E00               	movlw	0
  3057  00126C  22DD               	addwfc	postdec2,f,c
  3058  00126E                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3061  00126E  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3062  001272  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3063  001276  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3064  00127A  0E02               	movlw	2
  3065  00127C  26DE               	addwf	postinc2,f,c
  3066  00127E  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3067  001282  0E00               	movlw	0
  3068  001284  22DD               	addwfc	postdec2,f,c
  3069  001286  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3070  00128A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3071  00128E  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3072  001292  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3073  001296  C051  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3074  00129A  C052  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3075  00129E  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3076  0012A0  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3077  0012A2  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3078  0012A4  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3079  0012A6  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3080  0012A8  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3081  0012AA                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3084  0012AA  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3085  0012AE  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3086  0012B2  C0C6  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3087  0012B6  C0C7  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3088  0012BA  C0C8  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3089  0012BE  C0C9  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3090  0012C2  C0CA  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3091  0012C6  C0CB  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3092  0012CA  C0CC  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3093  0012CE  C0CD  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3094  0012D2  C0D2  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3095  0012D6  EC37  F00B         	call	_xtoa	;wreg free
  3096  0012DA  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3097  0012DE  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3098  0012E2  EFC6  F009         	goto	l728
  3099  0012E6                     l3042:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3103  0012E6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3104  0012EA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3105  0012EE  CFDE FFF6          	movff	postinc2,tblptrl
  3106  0012F2  CFDD FFF7          	movff	postdec2,tblptrh
  3107  0012F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3108  0012F6  6AF8               	clrf	tblptru,c
  3109  0012F8                     	endif
  3110  0012F8                     	if	0	;tblptru may be non-zero
  3111  0012F8                     	endif
  3112  0012F8  0008               	tblrd		*
  3113  0012FA  50F5               	movf	tablat,w,c
  3114  0012FC  0A25               	xorlw	37
  3115  0012FE  A4D8               	btfss	status,2,c
  3116  001300  EF84  F009         	goto	u2401
  3117  001304  EF86  F009         	goto	u2400
  3118  001308                     u2401:
  3119  001308  EF9D  F009         	goto	l3052
  3120  00130C                     u2400:
  3121  00130C                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3124  00130C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3125  001310  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3126  001314  2ADE               	incf	postinc2,f,c
  3127  001316  0E00               	movlw	0
  3128  001318  22DD               	addwfc	postdec2,f,c
  3129  00131A                     
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3132  00131A  0E00               	movlw	0
  3133  00131C  6E08               	movwf	(fputc@c+1)^0,c
  3134  00131E  0E25               	movlw	37
  3135  001320  6E07               	movwf	fputc@c^0,c
  3136  001322  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3137  001326  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3138  00132A  EC75  F010         	call	_fputc	;wreg free
  3139  00132E                     l3048:
  3140                           
  3141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3142  00132E  0E00               	movlw	0
  3143  001330  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3144  001332  0E01               	movlw	1
  3145  001334  6E49               	movwf	?_vfpfcnvrt^0,c
  3146  001336  EFC6  F009         	goto	l728
  3147  00133A                     l3052:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3151  00133A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3152  00133E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3153  001342  2ADE               	incf	postinc2,f,c
  3154  001344  0E00               	movlw	0
  3155  001346  22DD               	addwfc	postdec2,f,c
  3156  001348                     
  3157                           ; BSR set to: 0
  3158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3159  001348  0E00               	movlw	0
  3160  00134A  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3161  00134C  0E00               	movlw	0
  3162  00134E  6E49               	movwf	?_vfpfcnvrt^0,c
  3163  001350  EFC6  F009         	goto	l728
  3164  001354                     l3058:
  3165                           
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3167  001354  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3168  001358  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3169  00135C  CFDE FFF6          	movff	postinc2,tblptrl
  3170  001360  CFDD FFF7          	movff	postdec2,tblptrh
  3171  001364                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3172  001364  6AF8               	clrf	tblptru,c
  3173  001366                     	endif
  3174  001366                     	if	0	;tblptru may be non-zero
  3175  001366                     	endif
  3176  001366  0008               	tblrd		*
  3177  001368  50F5               	movf	tablat,w,c
  3178  00136A  6E07               	movwf	fputc@c^0,c
  3179  00136C  6A08               	clrf	(fputc@c+1)^0,c
  3180  00136E  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3181  001372  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3182  001376  EC75  F010         	call	_fputc	;wreg free
  3183  00137A                     
  3184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3185  00137A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3186  00137E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3187  001382  2ADE               	incf	postinc2,f,c
  3188  001384  0E00               	movlw	0
  3189  001386  22DD               	addwfc	postdec2,f,c
  3190  001388  EF97  F009         	goto	l3048
  3191  00138C                     l728:
  3192  00138C  0012               	return		;funcret
  3193  00138E                     __end_of_vfpfcnvrt:
  3194                           	opt callstack 0
  3195                           
  3196 ;; *************** function _xtoa *****************
  3197 ;; Defined at:
  3198 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3201 ;;		 -> NULL(0), 
  3202 ;;  d               8   35[COMRAM] unsigned long long 
  3203 ;;  x               1   43[COMRAM] unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  n               8   60[COMRAM] unsigned long long 
  3206 ;;  c               2   70[COMRAM] int 
  3207 ;;  i               2   68[COMRAM] int 
  3208 ;;  w               2   58[COMRAM] int 
  3209 ;;  p               2   56[COMRAM] int 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2   33[COMRAM] int 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3219 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3220 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;Total ram usage:       39 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    9
  3226 ;; This function calls:
  3227 ;;		_isalpha
  3228 ;;		_isupper
  3229 ;;		_pad
  3230 ;;		_toupper
  3231 ;; This function is called by:
  3232 ;;		_vfpfcnvrt
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text23
  3237  00166E                     __ptext23:
  3238                           	opt callstack 0
  3239  00166E                     _xtoa:
  3240                           	opt callstack 18
  3241  00166E                     
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3243  00166E  0100               	movlb	0	; () banked
  3244  001670  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3245  001672  EF3D  F00B         	goto	u2041
  3246  001676  EF3F  F00B         	goto	u2040
  3247  00167A                     u2041:
  3248  00167A  EF40  F00B         	goto	l2856
  3249  00167E                     u2040:
  3250  00167E                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3253  00167E  9257               	bcf	_flags^0,1,c
  3254  001680                     l2856:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3258  001680  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3259  001682  EF4D  F00B         	goto	u2050
  3260  001686  51AD               	movf	(_prec+1)& (0+255),w,b
  3261  001688  E106               	bnz	u2051
  3262  00168A  05AC               	decf	_prec& (0+255),w,b
  3263  00168C  B0D8               	btfsc	status,0,c
  3264  00168E  EF4B  F00B         	goto	u2051
  3265  001692  EF4D  F00B         	goto	u2050
  3266  001696                     u2051:
  3267  001696  EF53  F00B         	goto	l674
  3268  00169A                     u2050:
  3269  00169A                     
  3270                           ; BSR set to: 0
  3271  00169A  0E00               	movlw	0
  3272  00169C  6E3A               	movwf	(xtoa@p+1)^0,c
  3273  00169E  0E01               	movlw	1
  3274  0016A0  6E39               	movwf	xtoa@p^0,c
  3275  0016A2  EF57  F00B         	goto	l676
  3276  0016A6                     l674:
  3277                           
  3278                           ; BSR set to: 0
  3279  0016A6  C0AC  F039         	movff	_prec,xtoa@p
  3280  0016AA  C0AD  F03A         	movff	_prec+1,xtoa@p+1
  3281  0016AE                     l676:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3285  0016AE  C0AA  F03B         	movff	_width,xtoa@w
  3286  0016B2  C0AB  F03C         	movff	_width+1,xtoa@w+1
  3287                           
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3289  0016B6  A857               	btfss	_flags^0,4,c
  3290  0016B8  EF60  F00B         	goto	u2061
  3291  0016BC  EF62  F00B         	goto	u2060
  3292  0016C0                     u2061:
  3293  0016C0  EF66  F00B         	goto	l2862
  3294  0016C4                     u2060:
  3295  0016C4                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3298  0016C4  0EFE               	movlw	254
  3299  0016C6  263B               	addwf	xtoa@w^0,f,c
  3300  0016C8  0EFF               	movlw	255
  3301  0016CA  223C               	addwfc	(xtoa@w+1)^0,f,c
  3302  0016CC                     l2862:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3306  0016CC  C024  F03D         	movff	xtoa@d,xtoa@n
  3307  0016D0  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3308  0016D4  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3309  0016D8  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3310  0016DC  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3311  0016E0  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3312  0016E4  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3313  0016E8  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3314  0016EC                     
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3317  0016EC  0E00               	movlw	0
  3318  0016EE  6E46               	movwf	(xtoa@i+1)^0,c
  3319  0016F0  0E1F               	movlw	31
  3320  0016F2  6E45               	movwf	xtoa@i^0,c
  3321  0016F4                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3324  0016F4  0E00               	movlw	0
  3325  0016F6  0101               	movlb	1	; () banked
  3326  0016F8  6F83               	movwf	(_dbuf+31)& (0+255),b
  3327                           
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3329  0016FA  EF32  F00C         	goto	l2898
  3330  0016FE                     l2868:
  3331                           
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3333  0016FE  0645               	decf	xtoa@i^0,f,c
  3334  001700  A0D8               	btfss	status,0,c
  3335  001702  0646               	decf	(xtoa@i+1)^0,f,c
  3336  001704                     
  3337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3338  001704  0E0F               	movlw	15
  3339  001706  143D               	andwf	xtoa@n^0,w,c
  3340  001708  6E47               	movwf	xtoa@c^0,c
  3341  00170A  6A48               	clrf	(xtoa@c+1)^0,c
  3342  00170C                     
  3343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3344  00170C  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3345  00170E  EF92  F00B         	goto	u2071
  3346  001712  5048               	movf	(xtoa@c+1)^0,w,c
  3347  001714  E109               	bnz	u2070
  3348  001716  0E0A               	movlw	10
  3349  001718  5C47               	subwf	xtoa@c^0,w,c
  3350  00171A  A0D8               	btfss	status,0,c
  3351  00171C  EF92  F00B         	goto	u2071
  3352  001720  EF94  F00B         	goto	u2070
  3353  001724                     u2071:
  3354  001724  EF9C  F00B         	goto	l2876
  3355  001728                     u2070:
  3356  001728  0E57               	movlw	87
  3357  00172A  2447               	addwf	xtoa@c^0,w,c
  3358  00172C  6E47               	movwf	xtoa@c^0,c
  3359  00172E  0E00               	movlw	0
  3360  001730  2048               	addwfc	(xtoa@c+1)^0,w,c
  3361  001732  6E48               	movwf	(xtoa@c+1)^0,c
  3362  001734  EFA2  F00B         	goto	l683
  3363  001738                     l2876:
  3364  001738  0E30               	movlw	48
  3365  00173A  2447               	addwf	xtoa@c^0,w,c
  3366  00173C  6E47               	movwf	xtoa@c^0,c
  3367  00173E  0E00               	movlw	0
  3368  001740  2048               	addwfc	(xtoa@c+1)^0,w,c
  3369  001742  6E48               	movwf	(xtoa@c+1)^0,c
  3370  001744                     l683:
  3371  001744  0EBF               	movlw	191
  3372  001746  6E2D               	movwf	??_xtoa^0,c
  3373  001748  0EFF               	movlw	255
  3374  00174A  6E2E               	movwf	(??_xtoa+1)^0,c
  3375  00174C  502C               	movf	xtoa@x^0,w,c
  3376  00174E  6E2F               	movwf	(??_xtoa+2)^0,c
  3377  001750  6A30               	clrf	(??_xtoa+3)^0,c
  3378  001752  502D               	movf	??_xtoa^0,w,c
  3379  001754  262F               	addwf	(??_xtoa+2)^0,f,c
  3380  001756  502E               	movf	(??_xtoa+1)^0,w,c
  3381  001758  2230               	addwfc	(??_xtoa+3)^0,f,c
  3382  00175A  5030               	movf	(??_xtoa+3)^0,w,c
  3383  00175C  E10A               	bnz	u2080
  3384  00175E  0E1A               	movlw	26
  3385  001760  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3386  001762  A0D8               	btfss	status,0,c
  3387  001764  EFB6  F00B         	goto	u2081
  3388  001768  EFB9  F00B         	goto	u2080
  3389  00176C                     u2081:
  3390  00176C  0E01               	movlw	1
  3391  00176E  EFBA  F00B         	goto	u2090
  3392  001772                     u2080:
  3393  001772  0E00               	movlw	0
  3394  001774                     u2090:
  3395  001774  6E35               	movwf	_xtoa$1219^0,c
  3396  001776  6A36               	clrf	(_xtoa$1219+1)^0,c
  3397  001778  5035               	movf	_xtoa$1219^0,w,c
  3398  00177A  1036               	iorwf	(_xtoa$1219+1)^0,w,c
  3399  00177C  B4D8               	btfsc	status,2,c
  3400  00177E  EFC3  F00B         	goto	u2101
  3401  001782  EFC5  F00B         	goto	u2100
  3402  001786                     u2101:
  3403  001786  EFF5  F00B         	goto	l2890
  3404  00178A                     u2100:
  3405  00178A  0E9F               	movlw	159
  3406  00178C  6E2D               	movwf	??_xtoa^0,c
  3407  00178E  0EFF               	movlw	255
  3408  001790  6E2E               	movwf	(??_xtoa+1)^0,c
  3409  001792  0E20               	movlw	32
  3410  001794  1047               	iorwf	xtoa@c^0,w,c
  3411  001796  6E2F               	movwf	(??_xtoa+2)^0,c
  3412  001798  0E00               	movlw	0
  3413  00179A  1048               	iorwf	(xtoa@c+1)^0,w,c
  3414  00179C  6E30               	movwf	(??_xtoa+3)^0,c
  3415  00179E  502D               	movf	??_xtoa^0,w,c
  3416  0017A0  262F               	addwf	(??_xtoa+2)^0,f,c
  3417  0017A2  502E               	movf	(??_xtoa+1)^0,w,c
  3418  0017A4  2230               	addwfc	(??_xtoa+3)^0,f,c
  3419  0017A6  5030               	movf	(??_xtoa+3)^0,w,c
  3420  0017A8  E10A               	bnz	u2110
  3421  0017AA  0E1A               	movlw	26
  3422  0017AC  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3423  0017AE  A0D8               	btfss	status,0,c
  3424  0017B0  EFDC  F00B         	goto	u2111
  3425  0017B4  EFDF  F00B         	goto	u2110
  3426  0017B8                     u2111:
  3427  0017B8  0E01               	movlw	1
  3428  0017BA  EFE0  F00B         	goto	u2120
  3429  0017BE                     u2110:
  3430  0017BE  0E00               	movlw	0
  3431  0017C0                     u2120:
  3432  0017C0  6E37               	movwf	_xtoa$1220^0,c
  3433  0017C2  6A38               	clrf	(_xtoa$1220+1)^0,c
  3434  0017C4  5037               	movf	_xtoa$1220^0,w,c
  3435  0017C6  1038               	iorwf	(_xtoa$1220+1)^0,w,c
  3436  0017C8  B4D8               	btfsc	status,2,c
  3437  0017CA  EFE9  F00B         	goto	u2131
  3438  0017CE  EFEB  F00B         	goto	u2130
  3439  0017D2                     u2131:
  3440  0017D2  EFF5  F00B         	goto	l2890
  3441  0017D6                     u2130:
  3442  0017D6                     
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3444  0017D6  C047  F00B         	movff	xtoa@c,toupper@c
  3445  0017DA  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3446  0017DE  ECE9  F011         	call	_toupper	;wreg free
  3447  0017E2  C00B  F047         	movff	?_toupper,xtoa@c
  3448  0017E6  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3449  0017EA                     l2890:
  3450                           
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3452  0017EA  0E64               	movlw	low _dbuf
  3453  0017EC  2445               	addwf	xtoa@i^0,w,c
  3454  0017EE  6ED9               	movwf	fsr2l,c
  3455  0017F0  0E01               	movlw	high _dbuf
  3456  0017F2  2046               	addwfc	(xtoa@i+1)^0,w,c
  3457  0017F4  6EDA               	movwf	fsr2h,c
  3458  0017F6  C047  FFDF         	movff	xtoa@c,indf2
  3459  0017FA                     
  3460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3461  0017FA  0639               	decf	xtoa@p^0,f,c
  3462  0017FC  A0D8               	btfss	status,0,c
  3463  0017FE  063A               	decf	(xtoa@p+1)^0,f,c
  3464  001800                     
  3465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3466  001800  063B               	decf	xtoa@w^0,f,c
  3467  001802  A0D8               	btfss	status,0,c
  3468  001804  063C               	decf	(xtoa@w+1)^0,f,c
  3469  001806                     
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3471  001806  C03D  F02D         	movff	xtoa@n,??_xtoa
  3472  00180A  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3473  00180E  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3474  001812  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3475  001816  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3476  00181A  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3477  00181E  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3478  001822  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3479  001826  0E05               	movlw	5
  3480  001828  EF1F  F00C         	goto	u2140
  3481  00182C                     u2145:
  3482  00182C  90D8               	bcf	status,0,c
  3483  00182E  3234               	rrcf	(??_xtoa+7)^0,f,c
  3484  001830  3233               	rrcf	(??_xtoa+6)^0,f,c
  3485  001832  3232               	rrcf	(??_xtoa+5)^0,f,c
  3486  001834  3231               	rrcf	(??_xtoa+4)^0,f,c
  3487  001836  3230               	rrcf	(??_xtoa+3)^0,f,c
  3488  001838  322F               	rrcf	(??_xtoa+2)^0,f,c
  3489  00183A  322E               	rrcf	(??_xtoa+1)^0,f,c
  3490  00183C  322D               	rrcf	??_xtoa^0,f,c
  3491  00183E                     u2140:
  3492  00183E  2EE8               	decfsz	wreg,f,c
  3493  001840  EF16  F00C         	goto	u2145
  3494  001844  C02D  F03D         	movff	??_xtoa,xtoa@n
  3495  001848  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3496  00184C  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3497  001850  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3498  001854  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3499  001858  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3500  00185C  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3501  001860  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3502  001864                     l2898:
  3503                           
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3505  001864  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3506  001866  EF3E  F00C         	goto	u2151
  3507  00186A  5046               	movf	(xtoa@i+1)^0,w,c
  3508  00186C  E109               	bnz	u2150
  3509  00186E  0E02               	movlw	2
  3510  001870  5C45               	subwf	xtoa@i^0,w,c
  3511  001872  A0D8               	btfss	status,0,c
  3512  001874  EF3E  F00C         	goto	u2151
  3513  001878  EF40  F00C         	goto	u2150
  3514  00187C                     u2151:
  3515  00187C  EF70  F00C         	goto	l697
  3516  001880                     u2150:
  3517  001880  503D               	movf	xtoa@n^0,w,c
  3518  001882  103E               	iorwf	(xtoa@n+1)^0,w,c
  3519  001884  103F               	iorwf	(xtoa@n+2)^0,w,c
  3520  001886  1040               	iorwf	(xtoa@n+3)^0,w,c
  3521  001888  1041               	iorwf	(xtoa@n+4)^0,w,c
  3522  00188A  1042               	iorwf	(xtoa@n+5)^0,w,c
  3523  00188C  1043               	iorwf	(xtoa@n+6)^0,w,c
  3524  00188E  1044               	iorwf	(xtoa@n+7)^0,w,c
  3525  001890  A4D8               	btfss	status,2,c
  3526  001892  EF4D  F00C         	goto	u2161
  3527  001896  EF4F  F00C         	goto	u2160
  3528  00189A                     u2161:
  3529  00189A  EF7F  F00B         	goto	l2868
  3530  00189E                     u2160:
  3531  00189E  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3532  0018A0  EF5C  F00C         	goto	u2170
  3533  0018A4  503A               	movf	(xtoa@p+1)^0,w,c
  3534  0018A6  E106               	bnz	u2171
  3535  0018A8  0439               	decf	xtoa@p^0,w,c
  3536  0018AA  B0D8               	btfsc	status,0,c
  3537  0018AC  EF5A  F00C         	goto	u2171
  3538  0018B0  EF5C  F00C         	goto	u2170
  3539  0018B4                     u2171:
  3540  0018B4  EF7F  F00B         	goto	l2868
  3541  0018B8                     u2170:
  3542  0018B8  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3543  0018BA  EF67  F00C         	goto	u2181
  3544  0018BE  503C               	movf	(xtoa@w+1)^0,w,c
  3545  0018C0  E108               	bnz	u2180
  3546  0018C2  043B               	decf	xtoa@w^0,w,c
  3547  0018C4  A0D8               	btfss	status,0,c
  3548  0018C6  EF67  F00C         	goto	u2181
  3549  0018CA  EF69  F00C         	goto	u2180
  3550  0018CE                     u2181:
  3551  0018CE  EF70  F00C         	goto	l697
  3552  0018D2                     u2180:
  3553  0018D2  B257               	btfsc	_flags^0,1,c
  3554  0018D4  EF6E  F00C         	goto	u2191
  3555  0018D8  EF70  F00C         	goto	u2190
  3556  0018DC                     u2191:
  3557  0018DC  EF7F  F00B         	goto	l2868
  3558  0018E0                     u2190:
  3559  0018E0                     l697:
  3560                           
  3561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3562  0018E0  A857               	btfss	_flags^0,4,c
  3563  0018E2  EF75  F00C         	goto	u2201
  3564  0018E6  EF77  F00C         	goto	u2200
  3565  0018EA                     u2201:
  3566  0018EA  EF8D  F00C         	goto	l2914
  3567  0018EE                     u2200:
  3568  0018EE                     
  3569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3570  0018EE  0645               	decf	xtoa@i^0,f,c
  3571  0018F0  A0D8               	btfss	status,0,c
  3572  0018F2  0646               	decf	(xtoa@i+1)^0,f,c
  3573  0018F4                     
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3575  0018F4  0E64               	movlw	low _dbuf
  3576  0018F6  2445               	addwf	xtoa@i^0,w,c
  3577  0018F8  6ED9               	movwf	fsr2l,c
  3578  0018FA  0E01               	movlw	high _dbuf
  3579  0018FC  2046               	addwfc	(xtoa@i+1)^0,w,c
  3580  0018FE  6EDA               	movwf	fsr2h,c
  3581  001900  C02C  FFDF         	movff	xtoa@x,indf2
  3582  001904                     
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3584  001904  0645               	decf	xtoa@i^0,f,c
  3585  001906  A0D8               	btfss	status,0,c
  3586  001908  0646               	decf	(xtoa@i+1)^0,f,c
  3587                           
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3589  00190A  0E64               	movlw	low _dbuf
  3590  00190C  2445               	addwf	xtoa@i^0,w,c
  3591  00190E  6ED9               	movwf	fsr2l,c
  3592  001910  0E01               	movlw	high _dbuf
  3593  001912  2046               	addwfc	(xtoa@i+1)^0,w,c
  3594  001914  6EDA               	movwf	fsr2h,c
  3595  001916  0E30               	movlw	48
  3596  001918  6EDF               	movwf	indf2,c
  3597  00191A                     l2914:
  3598                           
  3599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3600  00191A  C022  F017         	movff	xtoa@fp,pad@fp
  3601  00191E  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3602  001922  0E64               	movlw	low _dbuf
  3603  001924  2445               	addwf	xtoa@i^0,w,c
  3604  001926  6E19               	movwf	pad@buf^0,c
  3605  001928  0E01               	movlw	high _dbuf
  3606  00192A  2046               	addwfc	(xtoa@i+1)^0,w,c
  3607  00192C  6E1A               	movwf	(pad@buf+1)^0,c
  3608  00192E  C03B  F01B         	movff	xtoa@w,pad@p
  3609  001932  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3610  001936  EC56  F00F         	call	_pad	;wreg free
  3611  00193A  C017  F022         	movff	?_pad,?_xtoa
  3612  00193E  C018  F023         	movff	?_pad+1,?_xtoa+1
  3613  001942  0012               	return		;funcret
  3614  001944                     __end_of_xtoa:
  3615                           	opt callstack 0
  3616                           
  3617 ;; *************** function _toupper *****************
  3618 ;; Defined at:
  3619 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  c               2   10[COMRAM] int 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   10[COMRAM] int 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;Total ram usage:        8 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    5
  3640 ;; This function calls:
  3641 ;;		_islower
  3642 ;; This function is called by:
  3643 ;;		_xtoa
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text24
  3648  0023D2                     __ptext24:
  3649                           	opt callstack 0
  3650  0023D2                     _toupper:
  3651                           	opt callstack 21
  3652  0023D2  0E9F               	movlw	159
  3653  0023D4  6E0D               	movwf	??_toupper^0,c
  3654  0023D6  0EFF               	movlw	255
  3655  0023D8  6E0E               	movwf	(??_toupper+1)^0,c
  3656  0023DA  C00B  F00F         	movff	toupper@c,??_toupper+2
  3657  0023DE  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3658  0023E2  500D               	movf	??_toupper^0,w,c
  3659  0023E4  260F               	addwf	(??_toupper+2)^0,f,c
  3660  0023E6  500E               	movf	(??_toupper+1)^0,w,c
  3661  0023E8  2210               	addwfc	(??_toupper+3)^0,f,c
  3662  0023EA  5010               	movf	(??_toupper+3)^0,w,c
  3663  0023EC  E10A               	bnz	u1690
  3664  0023EE  0E1A               	movlw	26
  3665  0023F0  5C0F               	subwf	(??_toupper+2)^0,w,c
  3666  0023F2  A0D8               	btfss	status,0,c
  3667  0023F4  EFFE  F011         	goto	u1691
  3668  0023F8  EF01  F012         	goto	u1690
  3669  0023FC                     u1691:
  3670  0023FC  0E01               	movlw	1
  3671  0023FE  EF02  F012         	goto	u1700
  3672  002402                     u1690:
  3673  002402  0E00               	movlw	0
  3674  002404                     u1700:
  3675  002404  6E11               	movwf	_toupper$1784^0,c
  3676  002406  6A12               	clrf	(_toupper$1784+1)^0,c
  3677  002408  5011               	movf	_toupper$1784^0,w,c
  3678  00240A  1012               	iorwf	(_toupper$1784+1)^0,w,c
  3679  00240C  B4D8               	btfsc	status,2,c
  3680  00240E  EF0B  F012         	goto	u1711
  3681  002412  EF0D  F012         	goto	u1710
  3682  002416                     u1711:
  3683  002416  EF13  F012         	goto	l1514
  3684  00241A                     u1710:
  3685  00241A  0E5F               	movlw	95
  3686  00241C  140B               	andwf	toupper@c^0,w,c
  3687  00241E  6E0B               	movwf	?_toupper^0,c
  3688  002420  6A0C               	clrf	(?_toupper+1)^0,c
  3689  002422  EF17  F012         	goto	l1519
  3690  002426                     l1514:
  3691  002426  C00B  F00B         	movff	toupper@c,?_toupper
  3692  00242A  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3693  00242E                     l1519:
  3694  00242E  0012               	return		;funcret
  3695  002430                     __end_of_toupper:
  3696                           	opt callstack 0
  3697                           
  3698 ;; *************** function _islower *****************
  3699 ;; Defined at:
  3700 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  c               2    4[COMRAM] int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2    4[COMRAM] int 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;Total ram usage:        6 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    4
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_toupper
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text25
  3729  002718                     __ptext25:
  3730                           	opt callstack 0
  3731  002718                     _islower:
  3732                           	opt callstack 21
  3733  002718  0E9F               	movlw	159
  3734  00271A  6E07               	movwf	??_islower^0,c
  3735  00271C  0EFF               	movlw	255
  3736  00271E  6E08               	movwf	(??_islower+1)^0,c
  3737  002720  C005  F009         	movff	islower@c,??_islower+2
  3738  002724  C006  F00A         	movff	islower@c+1,??_islower+3
  3739  002728  5007               	movf	??_islower^0,w,c
  3740  00272A  2609               	addwf	(??_islower+2)^0,f,c
  3741  00272C  5008               	movf	(??_islower+1)^0,w,c
  3742  00272E  220A               	addwfc	(??_islower+3)^0,f,c
  3743  002730  500A               	movf	(??_islower+3)^0,w,c
  3744  002732  E10A               	bnz	u1580
  3745  002734  0E1A               	movlw	26
  3746  002736  5C09               	subwf	(??_islower+2)^0,w,c
  3747  002738  A0D8               	btfss	status,0,c
  3748  00273A  EFA1  F013         	goto	u1581
  3749  00273E  EFA4  F013         	goto	u1580
  3750  002742                     u1581:
  3751  002742  0E01               	movlw	1
  3752  002744  EFA5  F013         	goto	u1590
  3753  002748                     u1580:
  3754  002748  0E00               	movlw	0
  3755  00274A                     u1590:
  3756  00274A  6E05               	movwf	?_islower^0,c
  3757  00274C  6A06               	clrf	(?_islower+1)^0,c
  3758  00274E  0012               	return		;funcret
  3759  002750                     __end_of_islower:
  3760                           	opt callstack 0
  3761                           
  3762 ;; *************** function _isupper *****************
  3763 ;; Defined at:
  3764 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  c               2    4[COMRAM] int 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    4[COMRAM] int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;Total ram usage:        6 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    4
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_xtoa
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text26
  3793  002750                     __ptext26:
  3794                           	opt callstack 0
  3795  002750                     _isupper:
  3796                           	opt callstack 22
  3797  002750  0EBF               	movlw	191
  3798  002752  6E07               	movwf	??_isupper^0,c
  3799  002754  0EFF               	movlw	255
  3800  002756  6E08               	movwf	(??_isupper+1)^0,c
  3801  002758  C005  F009         	movff	isupper@c,??_isupper+2
  3802  00275C  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3803  002760  5007               	movf	??_isupper^0,w,c
  3804  002762  2609               	addwf	(??_isupper+2)^0,f,c
  3805  002764  5008               	movf	(??_isupper+1)^0,w,c
  3806  002766  220A               	addwfc	(??_isupper+3)^0,f,c
  3807  002768  500A               	movf	(??_isupper+3)^0,w,c
  3808  00276A  E10A               	bnz	u1650
  3809  00276C  0E1A               	movlw	26
  3810  00276E  5C09               	subwf	(??_isupper+2)^0,w,c
  3811  002770  A0D8               	btfss	status,0,c
  3812  002772  EFBD  F013         	goto	u1651
  3813  002776  EFC0  F013         	goto	u1650
  3814  00277A                     u1651:
  3815  00277A  0E01               	movlw	1
  3816  00277C  EFC1  F013         	goto	u1660
  3817  002780                     u1650:
  3818  002780  0E00               	movlw	0
  3819  002782                     u1660:
  3820  002782  6E05               	movwf	?_isupper^0,c
  3821  002784  6A06               	clrf	(?_isupper+1)^0,c
  3822  002786  0012               	return		;funcret
  3823  002788                     __end_of_isupper:
  3824                           	opt callstack 0
  3825                           
  3826 ;; *************** function _isalpha *****************
  3827 ;; Defined at:
  3828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  c               2    4[COMRAM] int 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    4[COMRAM] int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;Total ram usage:        6 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    4
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_xtoa
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text27
  3857  0026DC                     __ptext27:
  3858                           	opt callstack 0
  3859  0026DC                     _isalpha:
  3860                           	opt callstack 22
  3861  0026DC  0E9F               	movlw	159
  3862  0026DE  6E07               	movwf	??_isalpha^0,c
  3863  0026E0  0EFF               	movlw	255
  3864  0026E2  6E08               	movwf	(??_isalpha+1)^0,c
  3865  0026E4  0E20               	movlw	32
  3866  0026E6  1005               	iorwf	isalpha@c^0,w,c
  3867  0026E8  6E09               	movwf	(??_isalpha+2)^0,c
  3868  0026EA  0E00               	movlw	0
  3869  0026EC  1006               	iorwf	(isalpha@c+1)^0,w,c
  3870  0026EE  6E0A               	movwf	(??_isalpha+3)^0,c
  3871  0026F0  5007               	movf	??_isalpha^0,w,c
  3872  0026F2  2609               	addwf	(??_isalpha+2)^0,f,c
  3873  0026F4  5008               	movf	(??_isalpha+1)^0,w,c
  3874  0026F6  220A               	addwfc	(??_isalpha+3)^0,f,c
  3875  0026F8  500A               	movf	(??_isalpha+3)^0,w,c
  3876  0026FA  E10A               	bnz	u1670
  3877  0026FC  0E1A               	movlw	26
  3878  0026FE  5C09               	subwf	(??_isalpha+2)^0,w,c
  3879  002700  A0D8               	btfss	status,0,c
  3880  002702  EF85  F013         	goto	u1671
  3881  002706  EF88  F013         	goto	u1670
  3882  00270A                     u1671:
  3883  00270A  0E01               	movlw	1
  3884  00270C  EF89  F013         	goto	u1680
  3885  002710                     u1670:
  3886  002710  0E00               	movlw	0
  3887  002712                     u1680:
  3888  002712  6E05               	movwf	?_isalpha^0,c
  3889  002714  6A06               	clrf	(?_isalpha+1)^0,c
  3890  002716  0012               	return		;funcret
  3891  002718                     __end_of_isalpha:
  3892                           	opt callstack 0
  3893                           
  3894 ;; *************** function _dtoa *****************
  3895 ;; Defined at:
  3896 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3899 ;;		 -> NULL(0), 
  3900 ;;  d               8   35[COMRAM] long long 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  n               8   59[COMRAM] long long 
  3903 ;;  i               2   67[COMRAM] int 
  3904 ;;  s               2   57[COMRAM] int 
  3905 ;;  w               2   55[COMRAM] int 
  3906 ;;  p               2   53[COMRAM] int 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2   33[COMRAM] int 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3916 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;Total ram usage:       36 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    9
  3923 ;; This function calls:
  3924 ;;		___aodiv
  3925 ;;		___aomod
  3926 ;;		_abs
  3927 ;;		_pad
  3928 ;; This function is called by:
  3929 ;;		_vfpfcnvrt
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text28
  3934  00138E                     __ptext28:
  3935                           	opt callstack 0
  3936  00138E                     _dtoa:
  3937                           	opt callstack 18
  3938  00138E                     
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3940  00138E  C024  F03C         	movff	dtoa@d,dtoa@n
  3941  001392  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3942  001396  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3943  00139A  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3944  00139E  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3945  0013A2  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3946  0013A6  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3947  0013AA  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  3948  0013AE                     
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3950  0013AE  BE43               	btfsc	(dtoa@n+7)^0,7,c
  3951  0013B0  EFDC  F009         	goto	u1891
  3952  0013B4  EFDF  F009         	goto	u1890
  3953  0013B8                     u1891:
  3954  0013B8  0E01               	movlw	1
  3955  0013BA  EFE0  F009         	goto	u1900
  3956  0013BE                     u1890:
  3957  0013BE  0E00               	movlw	0
  3958  0013C0                     u1900:
  3959  0013C0  6E3A               	movwf	dtoa@s^0,c
  3960  0013C2  6A3B               	clrf	(dtoa@s+1)^0,c
  3961                           
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3963  0013C4  503A               	movf	dtoa@s^0,w,c
  3964  0013C6  103B               	iorwf	(dtoa@s+1)^0,w,c
  3965  0013C8  B4D8               	btfsc	status,2,c
  3966  0013CA  EFE9  F009         	goto	u1911
  3967  0013CE  EFEB  F009         	goto	u1910
  3968  0013D2                     u1911:
  3969  0013D2  EFFB  F009         	goto	l2796
  3970  0013D6                     u1910:
  3971  0013D6                     
  3972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3973  0013D6  1E43               	comf	(dtoa@n+7)^0,f,c
  3974  0013D8  1E42               	comf	(dtoa@n+6)^0,f,c
  3975  0013DA  1E41               	comf	(dtoa@n+5)^0,f,c
  3976  0013DC  1E40               	comf	(dtoa@n+4)^0,f,c
  3977  0013DE  1E3F               	comf	(dtoa@n+3)^0,f,c
  3978  0013E0  1E3E               	comf	(dtoa@n+2)^0,f,c
  3979  0013E2  1E3D               	comf	(dtoa@n+1)^0,f,c
  3980  0013E4  6C3C               	negf	dtoa@n^0,c
  3981  0013E6  0E00               	movlw	0
  3982  0013E8  223D               	addwfc	(dtoa@n+1)^0,f,c
  3983  0013EA  223E               	addwfc	(dtoa@n+2)^0,f,c
  3984  0013EC  223F               	addwfc	(dtoa@n+3)^0,f,c
  3985  0013EE  2240               	addwfc	(dtoa@n+4)^0,f,c
  3986  0013F0  2241               	addwfc	(dtoa@n+5)^0,f,c
  3987  0013F2  2242               	addwfc	(dtoa@n+6)^0,f,c
  3988  0013F4  2243               	addwfc	(dtoa@n+7)^0,f,c
  3989  0013F6                     l2796:
  3990                           
  3991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3992  0013F6  0100               	movlb	0	; () banked
  3993  0013F8  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3994  0013FA  EF01  F00A         	goto	u1921
  3995  0013FE  EF03  F00A         	goto	u1920
  3996  001402                     u1921:
  3997  001402  EF04  F00A         	goto	l2800
  3998  001406                     u1920:
  3999  001406                     
  4000                           ; BSR set to: 0
  4001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4002  001406  9257               	bcf	_flags^0,1,c
  4003  001408                     l2800:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4007  001408  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  4008  00140A  EF11  F00A         	goto	u1930
  4009  00140E  51AD               	movf	(_prec+1)& (0+255),w,b
  4010  001410  E106               	bnz	u1931
  4011  001412  05AC               	decf	_prec& (0+255),w,b
  4012  001414  B0D8               	btfsc	status,0,c
  4013  001416  EF0F  F00A         	goto	u1931
  4014  00141A  EF11  F00A         	goto	u1930
  4015  00141E                     u1931:
  4016  00141E  EF17  F00A         	goto	l649
  4017  001422                     u1930:
  4018  001422                     
  4019                           ; BSR set to: 0
  4020  001422  0E00               	movlw	0
  4021  001424  6E37               	movwf	(dtoa@p+1)^0,c
  4022  001426  0E01               	movlw	1
  4023  001428  6E36               	movwf	dtoa@p^0,c
  4024  00142A  EF1B  F00A         	goto	l651
  4025  00142E                     l649:
  4026                           
  4027                           ; BSR set to: 0
  4028  00142E  C0AC  F036         	movff	_prec,dtoa@p
  4029  001432  C0AD  F037         	movff	_prec+1,dtoa@p+1
  4030  001436                     l651:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4034  001436  C0AA  F038         	movff	_width,dtoa@w
  4035  00143A  C0AB  F039         	movff	_width+1,dtoa@w+1
  4036  00143E                     
  4037                           ; BSR set to: 0
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4039  00143E  503A               	movf	dtoa@s^0,w,c
  4040  001440  103B               	iorwf	(dtoa@s+1)^0,w,c
  4041  001442  A4D8               	btfss	status,2,c
  4042  001444  EF26  F00A         	goto	u1941
  4043  001448  EF28  F00A         	goto	u1940
  4044  00144C                     u1941:
  4045  00144C  EF2F  F00A         	goto	l2808
  4046  001450                     u1940:
  4047  001450                     
  4048                           ; BSR set to: 0
  4049  001450  A457               	btfss	_flags^0,2,c
  4050  001452  EF2D  F00A         	goto	u1951
  4051  001456  EF2F  F00A         	goto	u1950
  4052  00145A                     u1951:
  4053  00145A  EF32  F00A         	goto	l2810
  4054  00145E                     u1950:
  4055  00145E                     l2808:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4059  00145E  0638               	decf	dtoa@w^0,f,c
  4060  001460  A0D8               	btfss	status,0,c
  4061  001462  0639               	decf	(dtoa@w+1)^0,f,c
  4062  001464                     l2810:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4066  001464  0E00               	movlw	0
  4067  001466  6E45               	movwf	(dtoa@i+1)^0,c
  4068  001468  0E1F               	movlw	31
  4069  00146A  6E44               	movwf	dtoa@i^0,c
  4070  00146C                     
  4071                           ; BSR set to: 0
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4073  00146C  0E00               	movlw	0
  4074  00146E  0101               	movlb	1	; () banked
  4075  001470  6F83               	movwf	(_dbuf+31)& (0+255),b
  4076                           
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4078  001472  EFB7  F00A         	goto	l2824
  4079  001476                     l2814:
  4080                           
  4081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4082  001476  0644               	decf	dtoa@i^0,f,c
  4083  001478  A0D8               	btfss	status,0,c
  4084  00147A  0645               	decf	(dtoa@i+1)^0,f,c
  4085  00147C                     
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4087  00147C  0E64               	movlw	low _dbuf
  4088  00147E  2444               	addwf	dtoa@i^0,w,c
  4089  001480  6ED9               	movwf	fsr2l,c
  4090  001482  0E01               	movlw	high _dbuf
  4091  001484  2045               	addwfc	(dtoa@i+1)^0,w,c
  4092  001486  6EDA               	movwf	fsr2h,c
  4093  001488  C03C  F005         	movff	dtoa@n,___aomod@dividend
  4094  00148C  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  4095  001490  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  4096  001494  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  4097  001498  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  4098  00149C  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  4099  0014A0  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  4100  0014A4  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  4101  0014A8  0E0A               	movlw	10
  4102  0014AA  6E0D               	movwf	___aomod@divisor^0,c
  4103  0014AC  0E00               	movlw	0
  4104  0014AE  6E0E               	movwf	(___aomod@divisor+1)^0,c
  4105  0014B0  0E00               	movlw	0
  4106  0014B2  6E0F               	movwf	(___aomod@divisor+2)^0,c
  4107  0014B4  0E00               	movlw	0
  4108  0014B6  6E10               	movwf	(___aomod@divisor+3)^0,c
  4109  0014B8  0E00               	movlw	0
  4110  0014BA  6E11               	movwf	(___aomod@divisor+4)^0,c
  4111  0014BC  0E00               	movlw	0
  4112  0014BE  6E12               	movwf	(___aomod@divisor+5)^0,c
  4113  0014C0  0E00               	movlw	0
  4114  0014C2  6E13               	movwf	(___aomod@divisor+6)^0,c
  4115  0014C4  0E00               	movlw	0
  4116  0014C6  6E14               	movwf	(___aomod@divisor+7)^0,c
  4117  0014C8  EC33  F00E         	call	___aomod	;wreg free
  4118  0014CC  C005  F02C         	movff	?___aomod,??_dtoa
  4119  0014D0  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  4120  0014D4  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  4121  0014D8  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  4122  0014DC  C009  F030         	movff	?___aomod+4,??_dtoa+4
  4123  0014E0  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  4124  0014E4  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  4125  0014E8  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  4126  0014EC  C02C  F017         	movff	??_dtoa,abs@a
  4127  0014F0  C02E  F018         	movff	??_dtoa+2,abs@a+1
  4128  0014F4  EC4E  F013         	call	_abs	;wreg free
  4129  0014F8  5017               	movf	?_abs^0,w,c
  4130  0014FA  0F30               	addlw	48
  4131  0014FC  6EDF               	movwf	indf2,c
  4132  0014FE                     
  4133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4134  0014FE  0636               	decf	dtoa@p^0,f,c
  4135  001500  A0D8               	btfss	status,0,c
  4136  001502  0637               	decf	(dtoa@p+1)^0,f,c
  4137  001504                     
  4138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4139  001504  0638               	decf	dtoa@w^0,f,c
  4140  001506  A0D8               	btfss	status,0,c
  4141  001508  0639               	decf	(dtoa@w+1)^0,f,c
  4142  00150A                     
  4143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4144  00150A  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  4145  00150E  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  4146  001512  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  4147  001516  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  4148  00151A  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  4149  00151E  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  4150  001522  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  4151  001526  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  4152  00152A  0E0A               	movlw	10
  4153  00152C  6E0D               	movwf	___aodiv@divisor^0,c
  4154  00152E  0E00               	movlw	0
  4155  001530  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  4156  001532  0E00               	movlw	0
  4157  001534  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  4158  001536  0E00               	movlw	0
  4159  001538  6E10               	movwf	(___aodiv@divisor+3)^0,c
  4160  00153A  0E00               	movlw	0
  4161  00153C  6E11               	movwf	(___aodiv@divisor+4)^0,c
  4162  00153E  0E00               	movlw	0
  4163  001540  6E12               	movwf	(___aodiv@divisor+5)^0,c
  4164  001542  0E00               	movlw	0
  4165  001544  6E13               	movwf	(___aodiv@divisor+6)^0,c
  4166  001546  0E00               	movlw	0
  4167  001548  6E14               	movwf	(___aodiv@divisor+7)^0,c
  4168  00154A  EC6F  F00D         	call	___aodiv	;wreg free
  4169  00154E  C005  F03C         	movff	?___aodiv,dtoa@n
  4170  001552  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  4171  001556  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  4172  00155A  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  4173  00155E  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  4174  001562  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  4175  001566  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  4176  00156A  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  4177  00156E                     l2824:
  4178                           
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4180  00156E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  4181  001570  EFC2  F00A         	goto	u1961
  4182  001574  5045               	movf	(dtoa@i+1)^0,w,c
  4183  001576  E108               	bnz	u1960
  4184  001578  0444               	decf	dtoa@i^0,w,c
  4185  00157A  A0D8               	btfss	status,0,c
  4186  00157C  EFC2  F00A         	goto	u1961
  4187  001580  EFC4  F00A         	goto	u1960
  4188  001584                     u1961:
  4189  001584  EFF4  F00A         	goto	l2834
  4190  001588                     u1960:
  4191  001588  503C               	movf	dtoa@n^0,w,c
  4192  00158A  103D               	iorwf	(dtoa@n+1)^0,w,c
  4193  00158C  103E               	iorwf	(dtoa@n+2)^0,w,c
  4194  00158E  103F               	iorwf	(dtoa@n+3)^0,w,c
  4195  001590  1040               	iorwf	(dtoa@n+4)^0,w,c
  4196  001592  1041               	iorwf	(dtoa@n+5)^0,w,c
  4197  001594  1042               	iorwf	(dtoa@n+6)^0,w,c
  4198  001596  1043               	iorwf	(dtoa@n+7)^0,w,c
  4199  001598  A4D8               	btfss	status,2,c
  4200  00159A  EFD1  F00A         	goto	u1971
  4201  00159E  EFD3  F00A         	goto	u1970
  4202  0015A2                     u1971:
  4203  0015A2  EF3B  F00A         	goto	l2814
  4204  0015A6                     u1970:
  4205  0015A6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  4206  0015A8  EFE0  F00A         	goto	u1980
  4207  0015AC  5037               	movf	(dtoa@p+1)^0,w,c
  4208  0015AE  E106               	bnz	u1981
  4209  0015B0  0436               	decf	dtoa@p^0,w,c
  4210  0015B2  B0D8               	btfsc	status,0,c
  4211  0015B4  EFDE  F00A         	goto	u1981
  4212  0015B8  EFE0  F00A         	goto	u1980
  4213  0015BC                     u1981:
  4214  0015BC  EF3B  F00A         	goto	l2814
  4215  0015C0                     u1980:
  4216  0015C0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  4217  0015C2  EFEB  F00A         	goto	u1991
  4218  0015C6  5039               	movf	(dtoa@w+1)^0,w,c
  4219  0015C8  E108               	bnz	u1990
  4220  0015CA  0438               	decf	dtoa@w^0,w,c
  4221  0015CC  A0D8               	btfss	status,0,c
  4222  0015CE  EFEB  F00A         	goto	u1991
  4223  0015D2  EFED  F00A         	goto	u1990
  4224  0015D6                     u1991:
  4225  0015D6  EFF4  F00A         	goto	l2834
  4226  0015DA                     u1990:
  4227  0015DA  B257               	btfsc	_flags^0,1,c
  4228  0015DC  EFF2  F00A         	goto	u2001
  4229  0015E0  EFF4  F00A         	goto	u2000
  4230  0015E4                     u2001:
  4231  0015E4  EF3B  F00A         	goto	l2814
  4232  0015E8                     u2000:
  4233  0015E8                     l2834:
  4234                           
  4235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4236  0015E8  503A               	movf	dtoa@s^0,w,c
  4237  0015EA  103B               	iorwf	(dtoa@s+1)^0,w,c
  4238  0015EC  A4D8               	btfss	status,2,c
  4239  0015EE  EFFB  F00A         	goto	u2011
  4240  0015F2  EFFD  F00A         	goto	u2010
  4241  0015F6                     u2011:
  4242  0015F6  EF04  F00B         	goto	l2838
  4243  0015FA                     u2010:
  4244  0015FA  A457               	btfss	_flags^0,2,c
  4245  0015FC  EF02  F00B         	goto	u2021
  4246  001600  EF04  F00B         	goto	u2020
  4247  001604                     u2021:
  4248  001604  EF22  F00B         	goto	l2848
  4249  001608                     u2020:
  4250  001608                     l2838:
  4251                           
  4252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4253  001608  0644               	decf	dtoa@i^0,f,c
  4254  00160A  A0D8               	btfss	status,0,c
  4255  00160C  0645               	decf	(dtoa@i+1)^0,f,c
  4256  00160E                     
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4258  00160E  503A               	movf	dtoa@s^0,w,c
  4259  001610  103B               	iorwf	(dtoa@s+1)^0,w,c
  4260  001612  A4D8               	btfss	status,2,c
  4261  001614  EF0E  F00B         	goto	u2031
  4262  001618  EF10  F00B         	goto	u2030
  4263  00161C                     u2031:
  4264  00161C  EF16  F00B         	goto	l2844
  4265  001620                     u2030:
  4266  001620  0E00               	movlw	0
  4267  001622  6E35               	movwf	(_dtoa$1208+1)^0,c
  4268  001624  0E2B               	movlw	43
  4269  001626  6E34               	movwf	_dtoa$1208^0,c
  4270  001628  EF1A  F00B         	goto	l2846
  4271  00162C                     l2844:
  4272  00162C  0E00               	movlw	0
  4273  00162E  6E35               	movwf	(_dtoa$1208+1)^0,c
  4274  001630  0E2D               	movlw	45
  4275  001632  6E34               	movwf	_dtoa$1208^0,c
  4276  001634                     l2846:
  4277  001634  0E64               	movlw	low _dbuf
  4278  001636  2444               	addwf	dtoa@i^0,w,c
  4279  001638  6ED9               	movwf	fsr2l,c
  4280  00163A  0E01               	movlw	high _dbuf
  4281  00163C  2045               	addwfc	(dtoa@i+1)^0,w,c
  4282  00163E  6EDA               	movwf	fsr2h,c
  4283  001640  C034  FFDF         	movff	_dtoa$1208,indf2
  4284  001644                     l2848:
  4285                           
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4287  001644  C022  F017         	movff	dtoa@fp,pad@fp
  4288  001648  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  4289  00164C  0E64               	movlw	low _dbuf
  4290  00164E  2444               	addwf	dtoa@i^0,w,c
  4291  001650  6E19               	movwf	pad@buf^0,c
  4292  001652  0E01               	movlw	high _dbuf
  4293  001654  2045               	addwfc	(dtoa@i+1)^0,w,c
  4294  001656  6E1A               	movwf	(pad@buf+1)^0,c
  4295  001658  C038  F01B         	movff	dtoa@w,pad@p
  4296  00165C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  4297  001660  EC56  F00F         	call	_pad	;wreg free
  4298  001664  C017  F022         	movff	?_pad,?_dtoa
  4299  001668  C018  F023         	movff	?_pad+1,?_dtoa+1
  4300  00166C  0012               	return		;funcret
  4301  00166E                     __end_of_dtoa:
  4302                           	opt callstack 0
  4303                           
  4304 ;; *************** function _pad *****************
  4305 ;; Defined at:
  4306 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4309 ;;		 -> NULL(0), 
  4310 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4311 ;;		 -> dbuf(32), 
  4312 ;;  p               2   26[COMRAM] int 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  w               2   31[COMRAM] int 
  4315 ;;  i               2   29[COMRAM] int 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2   22[COMRAM] int 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4325 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4326 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4328 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;Total ram usage:       11 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    8
  4332 ;; This function calls:
  4333 ;;		_fputc
  4334 ;;		_fputs
  4335 ;;		_strlen
  4336 ;; This function is called by:
  4337 ;;		_dtoa
  4338 ;;		_xtoa
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text29
  4343  001EAC                     __ptext29:
  4344                           	opt callstack 0
  4345  001EAC                     _pad:
  4346                           	opt callstack 18
  4347  001EAC                     
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4349  001EAC  A057               	btfss	_flags^0,0,c
  4350  001EAE  EF5B  F00F         	goto	u1601
  4351  001EB2  EF5D  F00F         	goto	u1600
  4352  001EB6                     u1601:
  4353  001EB6  EF67  F00F         	goto	l2648
  4354  001EBA                     u1600:
  4355  001EBA                     
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4357  001EBA  C019  F010         	movff	pad@buf,fputs@s
  4358  001EBE  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4359  001EC2  C017  F012         	movff	pad@fp,fputs@fp
  4360  001EC6  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4361  001ECA  EC0A  F013         	call	_fputs	;wreg free
  4362  001ECE                     l2648:
  4363                           
  4364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4365  001ECE  BE1C               	btfsc	(pad@p+1)^0,7,c
  4366  001ED0  EF6C  F00F         	goto	u1611
  4367  001ED4  EF6E  F00F         	goto	u1610
  4368  001ED8                     u1611:
  4369  001ED8  EF74  F00F         	goto	l2652
  4370  001EDC                     u1610:
  4371  001EDC  C01B  F020         	movff	pad@p,pad@w
  4372  001EE0  C01C  F021         	movff	pad@p+1,pad@w+1
  4373  001EE4  EF78  F00F         	goto	l638
  4374  001EE8                     l2652:
  4375  001EE8  0E00               	movlw	0
  4376  001EEA  6E21               	movwf	(pad@w+1)^0,c
  4377  001EEC  0E00               	movlw	0
  4378  001EEE  6E20               	movwf	pad@w^0,c
  4379  001EF0                     l638:
  4380                           
  4381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4382  001EF0  0E00               	movlw	0
  4383  001EF2  6E1F               	movwf	(pad@i+1)^0,c
  4384  001EF4  0E00               	movlw	0
  4385  001EF6  6E1E               	movwf	pad@i^0,c
  4386                           
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4388  001EF8  EF8A  F00F         	goto	l2658
  4389  001EFC                     l2654:
  4390                           
  4391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4392  001EFC  0E00               	movlw	0
  4393  001EFE  6E08               	movwf	(fputc@c+1)^0,c
  4394  001F00  0E20               	movlw	32
  4395  001F02  6E07               	movwf	fputc@c^0,c
  4396  001F04  C017  F009         	movff	pad@fp,fputc@fp
  4397  001F08  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4398  001F0C  EC75  F010         	call	_fputc	;wreg free
  4399  001F10                     
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4401  001F10  4A1E               	infsnz	pad@i^0,f,c
  4402  001F12  2A1F               	incf	(pad@i+1)^0,f,c
  4403  001F14                     l2658:
  4404                           
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4406  001F14  5020               	movf	pad@w^0,w,c
  4407  001F16  5C1E               	subwf	pad@i^0,w,c
  4408  001F18  501F               	movf	(pad@i+1)^0,w,c
  4409  001F1A  0A80               	xorlw	128
  4410  001F1C  6E1D               	movwf	??_pad^0,c
  4411  001F1E  5021               	movf	(pad@w+1)^0,w,c
  4412  001F20  0A80               	xorlw	128
  4413  001F22  581D               	subwfb	??_pad^0,w,c
  4414  001F24  A0D8               	btfss	status,0,c
  4415  001F26  EF97  F00F         	goto	u1621
  4416  001F2A  EF99  F00F         	goto	u1620
  4417  001F2E                     u1621:
  4418  001F2E  EF7E  F00F         	goto	l2654
  4419  001F32                     u1620:
  4420  001F32                     
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4422  001F32  B057               	btfsc	_flags^0,0,c
  4423  001F34  EF9E  F00F         	goto	u1631
  4424  001F38  EFA0  F00F         	goto	u1630
  4425  001F3C                     u1631:
  4426  001F3C  EFAA  F00F         	goto	l2662
  4427  001F40                     u1630:
  4428  001F40                     
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4430  001F40  C019  F010         	movff	pad@buf,fputs@s
  4431  001F44  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4432  001F48  C017  F012         	movff	pad@fp,fputs@fp
  4433  001F4C  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4434  001F50  EC0A  F013         	call	_fputs	;wreg free
  4435  001F54                     l2662:
  4436                           
  4437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4438  001F54  C019  F005         	movff	pad@buf,strlen@s
  4439  001F58  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4440  001F5C  ECE0  F013         	call	_strlen	;wreg free
  4441  001F60  5020               	movf	pad@w^0,w,c
  4442  001F62  2405               	addwf	?_strlen^0,w,c
  4443  001F64  6E17               	movwf	?_pad^0,c
  4444  001F66  5021               	movf	(pad@w+1)^0,w,c
  4445  001F68  2006               	addwfc	(?_strlen+1)^0,w,c
  4446  001F6A  6E18               	movwf	(?_pad+1)^0,c
  4447  001F6C  0012               	return		;funcret
  4448  001F6E                     __end_of_pad:
  4449                           	opt callstack 0
  4450                           
  4451 ;; *************** function _strlen *****************
  4452 ;; Defined at:
  4453 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4456 ;;		 -> dbuf(32), 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4459 ;;		 -> dbuf(32), 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  2    4[COMRAM] unsigned int 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;Total ram usage:        4 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    4
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_pad
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text30
  4484  0027C0                     __ptext30:
  4485                           	opt callstack 0
  4486  0027C0                     _strlen:
  4487                           	opt callstack 21
  4488  0027C0  C005  F007         	movff	strlen@s,strlen@a
  4489  0027C4  C006  F008         	movff	strlen@s+1,strlen@a+1
  4490  0027C8  EFE8  F013         	goto	l2634
  4491  0027CC                     l2632:
  4492  0027CC  4A05               	infsnz	strlen@s^0,f,c
  4493  0027CE  2A06               	incf	(strlen@s+1)^0,f,c
  4494  0027D0                     l2634:
  4495  0027D0  C005  FFD9         	movff	strlen@s,fsr2l
  4496  0027D4  C006  FFDA         	movff	strlen@s+1,fsr2h
  4497  0027D8  50DF               	movf	indf2,w,c
  4498  0027DA  A4D8               	btfss	status,2,c
  4499  0027DC  EFF2  F013         	goto	u1571
  4500  0027E0  EFF4  F013         	goto	u1570
  4501  0027E4                     u1571:
  4502  0027E4  EFE6  F013         	goto	l2632
  4503  0027E8                     u1570:
  4504  0027E8  5007               	movf	strlen@a^0,w,c
  4505  0027EA  5C05               	subwf	strlen@s^0,w,c
  4506  0027EC  6E05               	movwf	?_strlen^0,c
  4507  0027EE  5008               	movf	(strlen@a+1)^0,w,c
  4508  0027F0  5806               	subwfb	(strlen@s+1)^0,w,c
  4509  0027F2  6E06               	movwf	(?_strlen+1)^0,c
  4510  0027F4  0012               	return		;funcret
  4511  0027F6                     __end_of_strlen:
  4512                           	opt callstack 0
  4513                           
  4514 ;; *************** function _fputs *****************
  4515 ;; Defined at:
  4516 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4519 ;;		 -> dbuf(32), 
  4520 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4521 ;;		 -> NULL(0), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  i               2   20[COMRAM] int 
  4524 ;;  c               1   19[COMRAM] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2   15[COMRAM] int 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4538 ;;Total ram usage:        7 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    7
  4541 ;; This function calls:
  4542 ;;		_fputc
  4543 ;; This function is called by:
  4544 ;;		_pad
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text31
  4549  002614                     __ptext31:
  4550                           	opt callstack 0
  4551  002614                     _fputs:
  4552                           	opt callstack 18
  4553  002614  0E00               	movlw	0
  4554  002616  6E16               	movwf	(fputs@i+1)^0,c
  4555  002618  0E00               	movlw	0
  4556  00261A  6E15               	movwf	fputs@i^0,c
  4557  00261C  EF1B  F013         	goto	l2628
  4558  002620                     l2624:
  4559  002620  C014  F007         	movff	fputs@c,fputc@c
  4560  002624  6A08               	clrf	(fputc@c+1)^0,c
  4561  002626  C012  F009         	movff	fputs@fp,fputc@fp
  4562  00262A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4563  00262E  EC75  F010         	call	_fputc	;wreg free
  4564  002632  4A15               	infsnz	fputs@i^0,f,c
  4565  002634  2A16               	incf	(fputs@i+1)^0,f,c
  4566  002636                     l2628:
  4567  002636  5015               	movf	fputs@i^0,w,c
  4568  002638  2410               	addwf	fputs@s^0,w,c
  4569  00263A  6ED9               	movwf	fsr2l,c
  4570  00263C  5016               	movf	(fputs@i+1)^0,w,c
  4571  00263E  2011               	addwfc	(fputs@s+1)^0,w,c
  4572  002640  6EDA               	movwf	fsr2h,c
  4573  002642  50DF               	movf	indf2,w,c
  4574  002644  6E14               	movwf	fputs@c^0,c
  4575  002646  5014               	movf	fputs@c^0,w,c
  4576  002648  A4D8               	btfss	status,2,c
  4577  00264A  EF29  F013         	goto	u1561
  4578  00264E  EF2B  F013         	goto	u1560
  4579  002652                     u1561:
  4580  002652  EF10  F013         	goto	l2624
  4581  002656                     u1560:
  4582  002656  0012               	return		;funcret
  4583  002658                     __end_of_fputs:
  4584                           	opt callstack 0
  4585                           
  4586 ;; *************** function _fputc *****************
  4587 ;; Defined at:
  4588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  c               2    6[COMRAM] int 
  4591 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4592 ;;		 -> NULL(0), 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    6[COMRAM] int 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;Total ram usage:        9 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    6
  4611 ;; This function calls:
  4612 ;;		_putch
  4613 ;; This function is called by:
  4614 ;;		_pad
  4615 ;;		_vfpfcnvrt
  4616 ;;		_fputs
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text32
  4621  0020EA                     __ptext32:
  4622                           	opt callstack 0
  4623  0020EA                     _fputc:
  4624                           	opt callstack 18
  4625  0020EA  5009               	movf	fputc@fp^0,w,c
  4626  0020EC  100A               	iorwf	(fputc@fp+1)^0,w,c
  4627  0020EE  B4D8               	btfsc	status,2,c
  4628  0020F0  EF7C  F010         	goto	u1521
  4629  0020F4  EF7E  F010         	goto	u1520
  4630  0020F8                     u1521:
  4631  0020F8  EF87  F010         	goto	l2612
  4632  0020FC                     u1520:
  4633  0020FC  5009               	movf	fputc@fp^0,w,c
  4634  0020FE  100A               	iorwf	(fputc@fp+1)^0,w,c
  4635  002100  A4D8               	btfss	status,2,c
  4636  002102  EF85  F010         	goto	u1531
  4637  002106  EF87  F010         	goto	u1530
  4638  00210A                     u1531:
  4639  00210A  EF8C  F010         	goto	l2614
  4640  00210E                     u1530:
  4641  00210E                     l2612:
  4642  00210E  5007               	movf	fputc@c^0,w,c
  4643  002110  ECB9  F014         	call	_putch
  4644  002114  EFBF  F010         	goto	l1488
  4645  002118                     l2614:
  4646  002118  EE20 F004          	lfsr	2,4
  4647  00211C  5009               	movf	fputc@fp^0,w,c
  4648  00211E  26D9               	addwf	fsr2l,f,c
  4649  002120  500A               	movf	(fputc@fp+1)^0,w,c
  4650  002122  22DA               	addwfc	fsr2h,f,c
  4651  002124  50DE               	movf	postinc2,w,c
  4652  002126  10DE               	iorwf	postinc2,w,c
  4653  002128  B4D8               	btfsc	status,2,c
  4654  00212A  EF99  F010         	goto	u1541
  4655  00212E  EF9B  F010         	goto	u1540
  4656  002132                     u1541:
  4657  002132  EFB6  F010         	goto	l2618
  4658  002136                     u1540:
  4659  002136  EE20 F004          	lfsr	2,4
  4660  00213A  5009               	movf	fputc@fp^0,w,c
  4661  00213C  26D9               	addwf	fsr2l,f,c
  4662  00213E  500A               	movf	(fputc@fp+1)^0,w,c
  4663  002140  22DA               	addwfc	fsr2h,f,c
  4664  002142  EE10 F002          	lfsr	1,2
  4665  002146  5009               	movf	fputc@fp^0,w,c
  4666  002148  26E1               	addwf	fsr1l,f,c
  4667  00214A  500A               	movf	(fputc@fp+1)^0,w,c
  4668  00214C  22E2               	addwfc	fsr1h,f,c
  4669  00214E  50DE               	movf	postinc2,w,c
  4670  002150  5CE6               	subwf	postinc1,w,c
  4671  002152  50E6               	movf	postinc1,w,c
  4672  002154  0A80               	xorlw	128
  4673  002156  6E0F               	movwf	(??_fputc+4)^0,c
  4674  002158  50DE               	movf	postinc2,w,c
  4675  00215A  0A80               	xorlw	128
  4676  00215C  580F               	subwfb	(??_fputc+4)^0,w,c
  4677  00215E  B0D8               	btfsc	status,0,c
  4678  002160  EFB4  F010         	goto	u1551
  4679  002164  EFB6  F010         	goto	u1550
  4680  002168                     u1551:
  4681  002168  EFBF  F010         	goto	l1488
  4682  00216C                     u1550:
  4683  00216C                     l2618:
  4684  00216C  EE20 F002          	lfsr	2,2
  4685  002170  5009               	movf	fputc@fp^0,w,c
  4686  002172  26D9               	addwf	fsr2l,f,c
  4687  002174  500A               	movf	(fputc@fp+1)^0,w,c
  4688  002176  22DA               	addwfc	fsr2h,f,c
  4689  002178  2ADE               	incf	postinc2,f,c
  4690  00217A  0E00               	movlw	0
  4691  00217C  22DD               	addwfc	postdec2,f,c
  4692  00217E                     l1488:
  4693  00217E  0012               	return		;funcret
  4694  002180                     __end_of_fputc:
  4695                           	opt callstack 0
  4696                           
  4697 ;; *************** function _putch *****************
  4698 ;; Defined at:
  4699 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  txData          1    wreg     unsigned char 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  txData          1    5[COMRAM] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4717 ;;Total ram usage:        1 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    5
  4720 ;; This function calls:
  4721 ;;		_EUSART2_Write
  4722 ;; This function is called by:
  4723 ;;		_fputc
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text33
  4728  002972                     __ptext33:
  4729                           	opt callstack 0
  4730  002972                     _putch:
  4731                           	opt callstack 18
  4732                           
  4733                           ;incstack = 0
  4734                           ;putch@txData stored from wreg
  4735  002972  6E06               	movwf	putch@txData^0,c
  4736  002974                     
  4737                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  4738  002974  5006               	movf	putch@txData^0,w,c
  4739  002976  EC18  F012         	call	_EUSART2_Write
  4740  00297A  0012               	return		;funcret
  4741  00297C                     __end_of_putch:
  4742                           	opt callstack 0
  4743                           
  4744 ;; *************** function _EUSART2_Write *****************
  4745 ;; Defined at:
  4746 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  txData          1    wreg     unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  txData          1    4[COMRAM] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4764 ;;Total ram usage:        1 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    4
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_putch
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text34
  4775  002430                     __ptext34:
  4776                           	opt callstack 0
  4777  002430                     _EUSART2_Write:
  4778                           	opt callstack 18
  4779                           
  4780                           ;incstack = 0
  4781                           ;EUSART2_Write@txData stored from wreg
  4782  002430  6E05               	movwf	EUSART2_Write@txData^0,c
  4783  002432                     l2590:
  4784                           
  4785                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  4786  002432  0100               	movlb	0	; () banked
  4787  002434  51FB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  4788  002436  B4D8               	btfsc	status,2,c
  4789  002438  EF20  F012         	goto	u1491
  4790  00243C  EF22  F012         	goto	u1490
  4791  002440                     u1491:
  4792  002440  EF19  F012         	goto	l2590
  4793  002444                     u1490:
  4794  002444                     
  4795                           ; BSR set to: 0
  4796                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  4797  002444  010E               	movlb	14	; () banked
  4798  002446  BDC5               	btfsc	197,6,b	;volatile
  4799  002448  EF28  F012         	goto	u1501
  4800  00244C  EF2A  F012         	goto	u1500
  4801  002450                     u1501:
  4802  002450  EF2E  F012         	goto	l321
  4803  002454                     u1500:
  4804  002454                     
  4805                           ; BSR set to: 14
  4806                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  4807  002454  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  4808                           
  4809                           ;mcc_generated_files/eusart2.c: 182:     }
  4810  002458  EF44  F012         	goto	l2604
  4811  00245C                     l321:
  4812                           
  4813                           ; BSR set to: 14
  4814                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  4815  00245C  9DC5               	bcf	197,6,b	;volatile
  4816  00245E                     
  4817                           ; BSR set to: 14
  4818                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  4819  00245E  0EA0               	movlw	low _eusart2TxBuffer
  4820  002460  0100               	movlb	0	; () banked
  4821  002462  25BD               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  4822  002464  6ED9               	movwf	fsr2l,c
  4823  002466  6ADA               	clrf	fsr2h,c
  4824  002468  0E00               	movlw	high _eusart2TxBuffer
  4825  00246A  22DA               	addwfc	fsr2h,f,c
  4826  00246C  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  4827  002470                     
  4828                           ; BSR set to: 0
  4829  002470  2BBD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  4830  002472                     
  4831                           ; BSR set to: 0
  4832                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  4833  002472  0E07               	movlw	7
  4834  002474  65BD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  4835  002476  EF3F  F012         	goto	u1511
  4836  00247A  EF41  F012         	goto	u1510
  4837  00247E                     u1511:
  4838  00247E  EF43  F012         	goto	l2602
  4839  002482                     u1510:
  4840  002482                     
  4841                           ; BSR set to: 0
  4842                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  4843  002482  0E00               	movlw	0
  4844  002484  6FBD               	movwf	_eusart2TxHead& (0+255),b	;volatile
  4845  002486                     l2602:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  4849  002486  07FB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  4850  002488                     l2604:
  4851                           
  4852                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  4853  002488  010E               	movlb	14	; () banked
  4854  00248A  8DC5               	bsf	197,6,b	;volatile
  4855  00248C                     
  4856                           ; BSR set to: 14
  4857  00248C  0012               	return		;funcret
  4858  00248E                     __end_of_EUSART2_Write:
  4859                           	opt callstack 0
  4860                           
  4861 ;; *************** function _abs *****************
  4862 ;; Defined at:
  4863 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  a               2   22[COMRAM] int 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  2   22[COMRAM] int 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;Total ram usage:        4 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    4
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_dtoa
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text35
  4892  00269C                     __ptext35:
  4893                           	opt callstack 0
  4894  00269C                     _abs:
  4895                           	opt callstack 22
  4896  00269C  BE18               	btfsc	(abs@a+1)^0,7,c
  4897  00269E  EF5B  F013         	goto	u1640
  4898  0026A2  5018               	movf	(abs@a+1)^0,w,c
  4899  0026A4  E106               	bnz	u1641
  4900  0026A6  0417               	decf	abs@a^0,w,c
  4901  0026A8  B0D8               	btfsc	status,0,c
  4902  0026AA  EF59  F013         	goto	u1641
  4903  0026AE  EF5B  F013         	goto	u1640
  4904  0026B2                     u1641:
  4905  0026B2  EF69  F013         	goto	l1416
  4906  0026B6                     u1640:
  4907  0026B6  C017  F019         	movff	abs@a,??_abs
  4908  0026BA  C018  F01A         	movff	abs@a+1,??_abs+1
  4909  0026BE  1E19               	comf	??_abs^0,f,c
  4910  0026C0  1E1A               	comf	(??_abs+1)^0,f,c
  4911  0026C2  4A19               	infsnz	??_abs^0,f,c
  4912  0026C4  2A1A               	incf	(??_abs+1)^0,f,c
  4913  0026C6  C019  F017         	movff	??_abs,?_abs
  4914  0026CA  C01A  F018         	movff	??_abs+1,?_abs+1
  4915  0026CE  EF6D  F013         	goto	l1419
  4916  0026D2                     l1416:
  4917  0026D2  C017  F017         	movff	abs@a,?_abs
  4918  0026D6  C018  F018         	movff	abs@a+1,?_abs+1
  4919  0026DA                     l1419:
  4920  0026DA  0012               	return		;funcret
  4921  0026DC                     __end_of_abs:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function ___aomod *****************
  4925 ;; Defined at:
  4926 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  dividend        8    4[COMRAM] long long 
  4929 ;;  divisor         8   12[COMRAM] long long 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  sign            1   21[COMRAM] unsigned char 
  4932 ;;  counter         1   20[COMRAM] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  8    4[COMRAM] long long 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4942 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;Total ram usage:       18 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    4
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_dtoa
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text36
  4957  001C66                     __ptext36:
  4958                           	opt callstack 0
  4959  001C66                     ___aomod:
  4960                           	opt callstack 22
  4961  001C66  0E00               	movlw	0
  4962  001C68  6E16               	movwf	___aomod@sign^0,c
  4963  001C6A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4964  001C6C  EF3C  F00E         	goto	u1810
  4965  001C70  EF3A  F00E         	goto	u1811
  4966  001C74                     u1811:
  4967  001C74  EF4E  F00E         	goto	l2750
  4968  001C78                     u1810:
  4969  001C78  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4970  001C7A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4971  001C7C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4972  001C7E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4973  001C80  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4974  001C82  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4975  001C84  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4976  001C86  6C05               	negf	___aomod@dividend^0,c
  4977  001C88  0E00               	movlw	0
  4978  001C8A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4979  001C8C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4980  001C8E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4981  001C90  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4982  001C92  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4983  001C94  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4984  001C96  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4985  001C98  0E01               	movlw	1
  4986  001C9A  6E16               	movwf	___aomod@sign^0,c
  4987  001C9C                     l2750:
  4988  001C9C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4989  001C9E  EF55  F00E         	goto	u1820
  4990  001CA2  EF53  F00E         	goto	u1821
  4991  001CA6                     u1821:
  4992  001CA6  EF65  F00E         	goto	l2754
  4993  001CAA                     u1820:
  4994  001CAA  1E14               	comf	(___aomod@divisor+7)^0,f,c
  4995  001CAC  1E13               	comf	(___aomod@divisor+6)^0,f,c
  4996  001CAE  1E12               	comf	(___aomod@divisor+5)^0,f,c
  4997  001CB0  1E11               	comf	(___aomod@divisor+4)^0,f,c
  4998  001CB2  1E10               	comf	(___aomod@divisor+3)^0,f,c
  4999  001CB4  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  5000  001CB6  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  5001  001CB8  6C0D               	negf	___aomod@divisor^0,c
  5002  001CBA  0E00               	movlw	0
  5003  001CBC  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  5004  001CBE  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  5005  001CC0  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  5006  001CC2  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  5007  001CC4  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  5008  001CC6  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  5009  001CC8  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  5010  001CCA                     l2754:
  5011  001CCA  500D               	movf	___aomod@divisor^0,w,c
  5012  001CCC  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  5013  001CCE  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  5014  001CD0  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  5015  001CD2  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  5016  001CD4  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  5017  001CD6  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  5018  001CD8  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  5019  001CDA  B4D8               	btfsc	status,2,c
  5020  001CDC  EF72  F00E         	goto	u1831
  5021  001CE0  EF74  F00E         	goto	u1830
  5022  001CE4                     u1831:
  5023  001CE4  EFBC  F00E         	goto	l2770
  5024  001CE8                     u1830:
  5025  001CE8  0E01               	movlw	1
  5026  001CEA  6E15               	movwf	___aomod@counter^0,c
  5027  001CEC  EF82  F00E         	goto	l2760
  5028  001CF0                     l2758:
  5029  001CF0  90D8               	bcf	status,0,c
  5030  001CF2  360D               	rlcf	___aomod@divisor^0,f,c
  5031  001CF4  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  5032  001CF6  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  5033  001CF8  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  5034  001CFA  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  5035  001CFC  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  5036  001CFE  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  5037  001D00  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  5038  001D02  2A15               	incf	___aomod@counter^0,f,c
  5039  001D04                     l2760:
  5040  001D04  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  5041  001D06  EF87  F00E         	goto	u1841
  5042  001D0A  EF89  F00E         	goto	u1840
  5043  001D0E                     u1841:
  5044  001D0E  EF78  F00E         	goto	l2758
  5045  001D12                     u1840:
  5046  001D12                     l2762:
  5047  001D12  500D               	movf	___aomod@divisor^0,w,c
  5048  001D14  5C05               	subwf	___aomod@dividend^0,w,c
  5049  001D16  500E               	movf	(___aomod@divisor+1)^0,w,c
  5050  001D18  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  5051  001D1A  500F               	movf	(___aomod@divisor+2)^0,w,c
  5052  001D1C  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  5053  001D1E  5010               	movf	(___aomod@divisor+3)^0,w,c
  5054  001D20  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  5055  001D22  5011               	movf	(___aomod@divisor+4)^0,w,c
  5056  001D24  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  5057  001D26  5012               	movf	(___aomod@divisor+5)^0,w,c
  5058  001D28  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  5059  001D2A  5013               	movf	(___aomod@divisor+6)^0,w,c
  5060  001D2C  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  5061  001D2E  5014               	movf	(___aomod@divisor+7)^0,w,c
  5062  001D30  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  5063  001D32  A0D8               	btfss	status,0,c
  5064  001D34  EF9E  F00E         	goto	u1851
  5065  001D38  EFA0  F00E         	goto	u1850
  5066  001D3C                     u1851:
  5067  001D3C  EFB0  F00E         	goto	l2766
  5068  001D40                     u1850:
  5069  001D40  500D               	movf	___aomod@divisor^0,w,c
  5070  001D42  5E05               	subwf	___aomod@dividend^0,f,c
  5071  001D44  500E               	movf	(___aomod@divisor+1)^0,w,c
  5072  001D46  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  5073  001D48  500F               	movf	(___aomod@divisor+2)^0,w,c
  5074  001D4A  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  5075  001D4C  5010               	movf	(___aomod@divisor+3)^0,w,c
  5076  001D4E  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  5077  001D50  5011               	movf	(___aomod@divisor+4)^0,w,c
  5078  001D52  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  5079  001D54  5012               	movf	(___aomod@divisor+5)^0,w,c
  5080  001D56  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  5081  001D58  5013               	movf	(___aomod@divisor+6)^0,w,c
  5082  001D5A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  5083  001D5C  5014               	movf	(___aomod@divisor+7)^0,w,c
  5084  001D5E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  5085  001D60                     l2766:
  5086  001D60  90D8               	bcf	status,0,c
  5087  001D62  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  5088  001D64  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  5089  001D66  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  5090  001D68  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  5091  001D6A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  5092  001D6C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  5093  001D6E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  5094  001D70  320D               	rrcf	___aomod@divisor^0,f,c
  5095  001D72  2E15               	decfsz	___aomod@counter^0,f,c
  5096  001D74  EF89  F00E         	goto	l2762
  5097  001D78                     l2770:
  5098  001D78  5016               	movf	___aomod@sign^0,w,c
  5099  001D7A  B4D8               	btfsc	status,2,c
  5100  001D7C  EFC2  F00E         	goto	u1861
  5101  001D80  EFC4  F00E         	goto	u1860
  5102  001D84                     u1861:
  5103  001D84  EFD4  F00E         	goto	l2774
  5104  001D88                     u1860:
  5105  001D88  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5106  001D8A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5107  001D8C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5108  001D8E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5109  001D90  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5110  001D92  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5111  001D94  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5112  001D96  6C05               	negf	___aomod@dividend^0,c
  5113  001D98  0E00               	movlw	0
  5114  001D9A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5115  001D9C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5116  001D9E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5117  001DA0  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5118  001DA2  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5119  001DA4  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5120  001DA6  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5121  001DA8                     l2774:
  5122  001DA8  C005  F005         	movff	___aomod@dividend,?___aomod
  5123  001DAC  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  5124  001DB0  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  5125  001DB4  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  5126  001DB8  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  5127  001DBC  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  5128  001DC0  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  5129  001DC4  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  5130  001DC8  0012               	return		;funcret
  5131  001DCA                     __end_of___aomod:
  5132                           	opt callstack 0
  5133                           
  5134 ;; *************** function ___aodiv *****************
  5135 ;; Defined at:
  5136 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  dividend        8    4[COMRAM] long long 
  5139 ;;  divisor         8   12[COMRAM] long long 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  quotient        8   22[COMRAM] long long 
  5142 ;;  sign            1   21[COMRAM] unsigned char 
  5143 ;;  counter         1   20[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  8    4[COMRAM] long long 
  5146 ;; Registers used:
  5147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5153 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5154 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;Total ram usage:       26 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    4
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_dtoa
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text37
  5168  001ADE                     __ptext37:
  5169                           	opt callstack 0
  5170  001ADE                     ___aodiv:
  5171                           	opt callstack 22
  5172  001ADE  0E00               	movlw	0
  5173  001AE0  6E16               	movwf	___aodiv@sign^0,c
  5174  001AE2  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  5175  001AE4  EF78  F00D         	goto	u1740
  5176  001AE8  EF76  F00D         	goto	u1741
  5177  001AEC                     u1741:
  5178  001AEC  EF8A  F00D         	goto	l2706
  5179  001AF0                     u1740:
  5180  001AF0  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  5181  001AF2  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  5182  001AF4  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  5183  001AF6  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  5184  001AF8  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  5185  001AFA  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  5186  001AFC  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  5187  001AFE  6C0D               	negf	___aodiv@divisor^0,c
  5188  001B00  0E00               	movlw	0
  5189  001B02  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  5190  001B04  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  5191  001B06  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  5192  001B08  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  5193  001B0A  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  5194  001B0C  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  5195  001B0E  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  5196  001B10  0E01               	movlw	1
  5197  001B12  6E16               	movwf	___aodiv@sign^0,c
  5198  001B14                     l2706:
  5199  001B14  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  5200  001B16  EF91  F00D         	goto	u1750
  5201  001B1A  EF8F  F00D         	goto	u1751
  5202  001B1E                     u1751:
  5203  001B1E  EFA3  F00D         	goto	l2712
  5204  001B22                     u1750:
  5205  001B22  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  5206  001B24  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  5207  001B26  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  5208  001B28  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  5209  001B2A  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  5210  001B2C  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  5211  001B2E  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  5212  001B30  6C05               	negf	___aodiv@dividend^0,c
  5213  001B32  0E00               	movlw	0
  5214  001B34  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  5215  001B36  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  5216  001B38  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  5217  001B3A  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  5218  001B3C  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  5219  001B3E  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  5220  001B40  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  5221  001B42  0E01               	movlw	1
  5222  001B44  1A16               	xorwf	___aodiv@sign^0,f,c
  5223  001B46                     l2712:
  5224  001B46  EE20  F017         	lfsr	2,___aodiv@quotient
  5225  001B4A  0E07               	movlw	7
  5226  001B4C                     u1761:
  5227  001B4C  6ADE               	clrf	postinc2,c
  5228  001B4E  06E8               	decf	wreg,f,c
  5229  001B50  E2FD               	bc	u1761
  5230  001B52  500D               	movf	___aodiv@divisor^0,w,c
  5231  001B54  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  5232  001B56  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  5233  001B58  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  5234  001B5A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  5235  001B5C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  5236  001B5E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  5237  001B60  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  5238  001B62  B4D8               	btfsc	status,2,c
  5239  001B64  EFB6  F00D         	goto	u1771
  5240  001B68  EFB8  F00D         	goto	u1770
  5241  001B6C                     u1771:
  5242  001B6C  EF0A  F00E         	goto	l2734
  5243  001B70                     u1770:
  5244  001B70  0E01               	movlw	1
  5245  001B72  6E15               	movwf	___aodiv@counter^0,c
  5246  001B74  EFC6  F00D         	goto	l2720
  5247  001B78                     l2718:
  5248  001B78  90D8               	bcf	status,0,c
  5249  001B7A  360D               	rlcf	___aodiv@divisor^0,f,c
  5250  001B7C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  5251  001B7E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  5252  001B80  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  5253  001B82  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  5254  001B84  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  5255  001B86  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  5256  001B88  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  5257  001B8A  2A15               	incf	___aodiv@counter^0,f,c
  5258  001B8C                     l2720:
  5259  001B8C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  5260  001B8E  EFCB  F00D         	goto	u1781
  5261  001B92  EFCD  F00D         	goto	u1780
  5262  001B96                     u1781:
  5263  001B96  EFBC  F00D         	goto	l2718
  5264  001B9A                     u1780:
  5265  001B9A                     l2722:
  5266  001B9A  90D8               	bcf	status,0,c
  5267  001B9C  3617               	rlcf	___aodiv@quotient^0,f,c
  5268  001B9E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  5269  001BA0  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  5270  001BA2  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  5271  001BA4  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  5272  001BA6  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  5273  001BA8  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  5274  001BAA  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  5275  001BAC  500D               	movf	___aodiv@divisor^0,w,c
  5276  001BAE  5C05               	subwf	___aodiv@dividend^0,w,c
  5277  001BB0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5278  001BB2  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  5279  001BB4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5280  001BB6  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  5281  001BB8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5282  001BBA  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  5283  001BBC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5284  001BBE  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  5285  001BC0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5286  001BC2  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  5287  001BC4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5288  001BC6  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  5289  001BC8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5290  001BCA  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  5291  001BCC  A0D8               	btfss	status,0,c
  5292  001BCE  EFEB  F00D         	goto	u1791
  5293  001BD2  EFED  F00D         	goto	u1790
  5294  001BD6                     u1791:
  5295  001BD6  EFFE  F00D         	goto	l2730
  5296  001BDA                     u1790:
  5297  001BDA  500D               	movf	___aodiv@divisor^0,w,c
  5298  001BDC  5E05               	subwf	___aodiv@dividend^0,f,c
  5299  001BDE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5300  001BE0  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5301  001BE2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5302  001BE4  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5303  001BE6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5304  001BE8  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5305  001BEA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5306  001BEC  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5307  001BEE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5308  001BF0  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5309  001BF2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5310  001BF4  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5311  001BF6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5312  001BF8  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5313  001BFA  8017               	bsf	___aodiv@quotient^0,0,c
  5314  001BFC                     l2730:
  5315  001BFC  90D8               	bcf	status,0,c
  5316  001BFE  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5317  001C00  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5318  001C02  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5319  001C04  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5320  001C06  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5321  001C08  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5322  001C0A  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5323  001C0C  320D               	rrcf	___aodiv@divisor^0,f,c
  5324  001C0E  2E15               	decfsz	___aodiv@counter^0,f,c
  5325  001C10  EFCD  F00D         	goto	l2722
  5326  001C14                     l2734:
  5327  001C14  5016               	movf	___aodiv@sign^0,w,c
  5328  001C16  B4D8               	btfsc	status,2,c
  5329  001C18  EF10  F00E         	goto	u1801
  5330  001C1C  EF12  F00E         	goto	u1800
  5331  001C20                     u1801:
  5332  001C20  EF22  F00E         	goto	l2738
  5333  001C24                     u1800:
  5334  001C24  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5335  001C26  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5336  001C28  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5337  001C2A  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5338  001C2C  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5339  001C2E  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5340  001C30  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5341  001C32  6C17               	negf	___aodiv@quotient^0,c
  5342  001C34  0E00               	movlw	0
  5343  001C36  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5344  001C38  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5345  001C3A  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5346  001C3C  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5347  001C3E  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5348  001C40  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5349  001C42  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5350  001C44                     l2738:
  5351  001C44  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5352  001C48  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5353  001C4C  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5354  001C50  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5355  001C54  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5356  001C58  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5357  001C5C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5358  001C60  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5359  001C64  0012               	return		;funcret
  5360  001C66                     __end_of___aodiv:
  5361                           	opt callstack 0
  5362                           
  5363 ;; *************** function _atoi *****************
  5364 ;; Defined at:
  5365 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5368 ;;		 -> STR_2(14), STR_1(24), 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  n               2   24[COMRAM] int 
  5371 ;;  neg             2   17[COMRAM] int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  2   11[COMRAM] int 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5384 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5385 ;;Total ram usage:       15 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    5
  5388 ;; This function calls:
  5389 ;;		___wmul
  5390 ;;		_isdigit
  5391 ;;		_isspace
  5392 ;; This function is called by:
  5393 ;;		_vfpfcnvrt
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text38
  5398  001944                     __ptext38:
  5399                           	opt callstack 0
  5400  001944                     _atoi:
  5401                           	opt callstack 22
  5402  001944  0E00               	movlw	0
  5403  001946  6E1A               	movwf	(atoi@n+1)^0,c
  5404  001948  0E00               	movlw	0
  5405  00194A  6E19               	movwf	atoi@n^0,c
  5406  00194C  0E00               	movlw	0
  5407  00194E  6E13               	movwf	(atoi@neg+1)^0,c
  5408  001950  0E00               	movlw	0
  5409  001952  6E12               	movwf	atoi@neg^0,c
  5410  001954  EFAE  F00C         	goto	l2922
  5411  001958                     l2920:
  5412  001958  4A0C               	infsnz	atoi@s^0,f,c
  5413  00195A  2A0D               	incf	(atoi@s+1)^0,f,c
  5414  00195C                     l2922:
  5415  00195C  0E01               	movlw	1
  5416  00195E  6E18               	movwf	_atoi$1693^0,c
  5417  001960  C00C  FFF6         	movff	atoi@s,tblptrl
  5418  001964  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5419  001968                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5420  001968  6AF8               	clrf	tblptru,c
  5421  00196A                     	endif
  5422  00196A                     	if	0	;tblptru may be non-zero
  5423  00196A                     	endif
  5424  00196A  0008               	tblrd		*
  5425  00196C  50F5               	movf	tablat,w,c
  5426  00196E  0A20               	xorlw	32
  5427  001970  B4D8               	btfsc	status,2,c
  5428  001972  EFBD  F00C         	goto	u2211
  5429  001976  EFBF  F00C         	goto	u2210
  5430  00197A                     u2211:
  5431  00197A  EFDD  F00C         	goto	l2930
  5432  00197E                     u2210:
  5433  00197E  0EF7               	movlw	247
  5434  001980  6E0E               	movwf	??_atoi^0,c
  5435  001982  0EFF               	movlw	255
  5436  001984  6E0F               	movwf	(??_atoi+1)^0,c
  5437  001986  C00C  FFF6         	movff	atoi@s,tblptrl
  5438  00198A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5439  00198E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5440  00198E  6AF8               	clrf	tblptru,c
  5441  001990                     	endif
  5442  001990                     	if	0	;tblptru may be non-zero
  5443  001990                     	endif
  5444  001990  0008               	tblrd		*
  5445  001992  50F5               	movf	tablat,w,c
  5446  001994  6E10               	movwf	(??_atoi+2)^0,c
  5447  001996  6A11               	clrf	(??_atoi+3)^0,c
  5448  001998  500E               	movf	??_atoi^0,w,c
  5449  00199A  2610               	addwf	(??_atoi+2)^0,f,c
  5450  00199C  500F               	movf	(??_atoi+1)^0,w,c
  5451  00199E  2211               	addwfc	(??_atoi+3)^0,f,c
  5452  0019A0  5011               	movf	(??_atoi+3)^0,w,c
  5453  0019A2  E109               	bnz	u2220
  5454  0019A4  0E05               	movlw	5
  5455  0019A6  5C10               	subwf	(??_atoi+2)^0,w,c
  5456  0019A8  A0D8               	btfss	status,0,c
  5457  0019AA  EFD9  F00C         	goto	u2221
  5458  0019AE  EFDB  F00C         	goto	u2220
  5459  0019B2                     u2221:
  5460  0019B2  EFDD  F00C         	goto	l2930
  5461  0019B6                     u2220:
  5462  0019B6  0E00               	movlw	0
  5463  0019B8  6E18               	movwf	_atoi$1693^0,c
  5464  0019BA                     l2930:
  5465  0019BA  C018  F014         	movff	_atoi$1693,_atoi$1692
  5466  0019BE  6A15               	clrf	(_atoi$1692+1)^0,c
  5467  0019C0  5014               	movf	_atoi$1692^0,w,c
  5468  0019C2  1015               	iorwf	(_atoi$1692+1)^0,w,c
  5469  0019C4  A4D8               	btfss	status,2,c
  5470  0019C6  EFE7  F00C         	goto	u2231
  5471  0019CA  EFE9  F00C         	goto	u2230
  5472  0019CE                     u2231:
  5473  0019CE  EFAC  F00C         	goto	l2920
  5474  0019D2                     u2230:
  5475  0019D2  EFF3  F00C         	goto	l2940
  5476  0019D6                     l2936:
  5477  0019D6  0E00               	movlw	0
  5478  0019D8  6E13               	movwf	(atoi@neg+1)^0,c
  5479  0019DA  0E01               	movlw	1
  5480  0019DC  6E12               	movwf	atoi@neg^0,c
  5481  0019DE                     l2938:
  5482  0019DE  4A0C               	infsnz	atoi@s^0,f,c
  5483  0019E0  2A0D               	incf	(atoi@s+1)^0,f,c
  5484  0019E2  EF2A  F00D         	goto	l2946
  5485  0019E6                     l2940:
  5486  0019E6  C00C  FFF6         	movff	atoi@s,tblptrl
  5487  0019EA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5488  0019EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5489  0019EE  6AF8               	clrf	tblptru,c
  5490  0019F0                     	endif
  5491  0019F0                     	if	0	;tblptru may be non-zero
  5492  0019F0                     	endif
  5493  0019F0  0008               	tblrd		*
  5494  0019F2  50F5               	movf	tablat,w,c
  5495  0019F4  6E0E               	movwf	??_atoi^0,c
  5496  0019F6  6A0F               	clrf	(??_atoi+1)^0,c
  5497                           
  5498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5499                           ; Switch size 1, requested type "simple"
  5500                           ; Number of cases is 1, Range of values is 0 to 0
  5501                           ; switch strategies available:
  5502                           ; Name         Instructions Cycles
  5503                           ; simple_byte            4     3 (average)
  5504                           ;	Chosen strategy is simple_byte
  5505  0019F8  500F               	movf	(??_atoi+1)^0,w,c
  5506  0019FA  0A00               	xorlw	0	; case 0
  5507  0019FC  B4D8               	btfsc	status,2,c
  5508  0019FE  EF03  F00D         	goto	l3668
  5509  001A02  EF2A  F00D         	goto	l2946
  5510  001A06                     l3668:
  5511                           
  5512                           ; Switch size 1, requested type "simple"
  5513                           ; Number of cases is 2, Range of values is 43 to 45
  5514                           ; switch strategies available:
  5515                           ; Name         Instructions Cycles
  5516                           ; simple_byte            7     4 (average)
  5517                           ;	Chosen strategy is simple_byte
  5518  001A06  500E               	movf	??_atoi^0,w,c
  5519  001A08  0A2B               	xorlw	43	; case 43
  5520  001A0A  B4D8               	btfsc	status,2,c
  5521  001A0C  EFEF  F00C         	goto	l2938
  5522  001A10  0A06               	xorlw	6	; case 45
  5523  001A12  B4D8               	btfsc	status,2,c
  5524  001A14  EFEB  F00C         	goto	l2936
  5525  001A18  EF2A  F00D         	goto	l2946
  5526  001A1C                     l2942:
  5527  001A1C  C019  F005         	movff	atoi@n,___wmul@multiplier
  5528  001A20  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5529  001A24  0E00               	movlw	0
  5530  001A26  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5531  001A28  0E0A               	movlw	10
  5532  001A2A  6E07               	movwf	___wmul@multiplicand^0,c
  5533  001A2C  EC3B  F014         	call	___wmul	;wreg free
  5534  001A30  C00C  FFF6         	movff	atoi@s,tblptrl
  5535  001A34  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5536  001A38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5537  001A38  6AF8               	clrf	tblptru,c
  5538  001A3A                     	endif
  5539  001A3A                     	if	0	;tblptru may be non-zero
  5540  001A3A                     	endif
  5541  001A3A  0008               	tblrd		*
  5542  001A3C  50F5               	movf	tablat,w,c
  5543  001A3E  5E05               	subwf	?___wmul^0,f,c
  5544  001A40  0E00               	movlw	0
  5545  001A42  5A06               	subwfb	(?___wmul+1)^0,f,c
  5546  001A44  0E30               	movlw	48
  5547  001A46  2405               	addwf	?___wmul^0,w,c
  5548  001A48  6E19               	movwf	atoi@n^0,c
  5549  001A4A  0E00               	movlw	0
  5550  001A4C  2006               	addwfc	(?___wmul+1)^0,w,c
  5551  001A4E  6E1A               	movwf	(atoi@n+1)^0,c
  5552  001A50  EFEF  F00C         	goto	l2938
  5553  001A54                     l2946:
  5554  001A54  0ED0               	movlw	208
  5555  001A56  6E0E               	movwf	??_atoi^0,c
  5556  001A58  0EFF               	movlw	255
  5557  001A5A  6E0F               	movwf	(??_atoi+1)^0,c
  5558  001A5C  C00C  FFF6         	movff	atoi@s,tblptrl
  5559  001A60  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5560  001A64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5561  001A64  6AF8               	clrf	tblptru,c
  5562  001A66                     	endif
  5563  001A66                     	if	0	;tblptru may be non-zero
  5564  001A66                     	endif
  5565  001A66  0008               	tblrd		*
  5566  001A68  50F5               	movf	tablat,w,c
  5567  001A6A  6E10               	movwf	(??_atoi+2)^0,c
  5568  001A6C  6A11               	clrf	(??_atoi+3)^0,c
  5569  001A6E  500E               	movf	??_atoi^0,w,c
  5570  001A70  2610               	addwf	(??_atoi+2)^0,f,c
  5571  001A72  500F               	movf	(??_atoi+1)^0,w,c
  5572  001A74  2211               	addwfc	(??_atoi+3)^0,f,c
  5573  001A76  5011               	movf	(??_atoi+3)^0,w,c
  5574  001A78  E10A               	bnz	u2240
  5575  001A7A  0E0A               	movlw	10
  5576  001A7C  5C10               	subwf	(??_atoi+2)^0,w,c
  5577  001A7E  A0D8               	btfss	status,0,c
  5578  001A80  EF44  F00D         	goto	u2241
  5579  001A84  EF47  F00D         	goto	u2240
  5580  001A88                     u2241:
  5581  001A88  0E01               	movlw	1
  5582  001A8A  EF48  F00D         	goto	u2250
  5583  001A8E                     u2240:
  5584  001A8E  0E00               	movlw	0
  5585  001A90                     u2250:
  5586  001A90  6E16               	movwf	_atoi$1694^0,c
  5587  001A92  6A17               	clrf	(_atoi$1694+1)^0,c
  5588  001A94  5016               	movf	_atoi$1694^0,w,c
  5589  001A96  1017               	iorwf	(_atoi$1694+1)^0,w,c
  5590  001A98  A4D8               	btfss	status,2,c
  5591  001A9A  EF51  F00D         	goto	u2261
  5592  001A9E  EF53  F00D         	goto	u2260
  5593  001AA2                     u2261:
  5594  001AA2  EF0E  F00D         	goto	l2942
  5595  001AA6                     u2260:
  5596  001AA6  5012               	movf	atoi@neg^0,w,c
  5597  001AA8  1013               	iorwf	(atoi@neg+1)^0,w,c
  5598  001AAA  A4D8               	btfss	status,2,c
  5599  001AAC  EF5A  F00D         	goto	u2271
  5600  001AB0  EF5C  F00D         	goto	u2270
  5601  001AB4                     u2271:
  5602  001AB4  EF6A  F00D         	goto	l1447
  5603  001AB8                     u2270:
  5604  001AB8  C019  F00E         	movff	atoi@n,??_atoi
  5605  001ABC  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5606  001AC0  1E0E               	comf	??_atoi^0,f,c
  5607  001AC2  1E0F               	comf	(??_atoi+1)^0,f,c
  5608  001AC4  4A0E               	infsnz	??_atoi^0,f,c
  5609  001AC6  2A0F               	incf	(??_atoi+1)^0,f,c
  5610  001AC8  C00E  F00C         	movff	??_atoi,?_atoi
  5611  001ACC  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5612  001AD0  EF6E  F00D         	goto	l1450
  5613  001AD4                     l1447:
  5614  001AD4  C019  F00C         	movff	atoi@n,?_atoi
  5615  001AD8  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5616  001ADC                     l1450:
  5617  001ADC  0012               	return		;funcret
  5618  001ADE                     __end_of_atoi:
  5619                           	opt callstack 0
  5620                           
  5621 ;; *************** function _isspace *****************
  5622 ;; Defined at:
  5623 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  c               2    4[COMRAM] int 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  2    4[COMRAM] int 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;Total ram usage:        7 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    4
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_atoi
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text39
  5652  0024E6                     __ptext39:
  5653                           	opt callstack 0
  5654  0024E6                     _isspace:
  5655                           	opt callstack 22
  5656  0024E6  0E01               	movlw	1
  5657  0024E8  6E0B               	movwf	_isspace$1719^0,c
  5658  0024EA  0E20               	movlw	32
  5659  0024EC  1805               	xorwf	isspace@c^0,w,c
  5660  0024EE  1006               	iorwf	(isspace@c+1)^0,w,c
  5661  0024F0  B4D8               	btfsc	status,2,c
  5662  0024F2  EF7D  F012         	goto	u1871
  5663  0024F6  EF7F  F012         	goto	u1870
  5664  0024FA                     u1871:
  5665  0024FA  EF98  F012         	goto	l2786
  5666  0024FE                     u1870:
  5667  0024FE  0EF7               	movlw	247
  5668  002500  6E07               	movwf	??_isspace^0,c
  5669  002502  0EFF               	movlw	255
  5670  002504  6E08               	movwf	(??_isspace+1)^0,c
  5671  002506  C005  F009         	movff	isspace@c,??_isspace+2
  5672  00250A  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5673  00250E  5007               	movf	??_isspace^0,w,c
  5674  002510  2609               	addwf	(??_isspace+2)^0,f,c
  5675  002512  5008               	movf	(??_isspace+1)^0,w,c
  5676  002514  220A               	addwfc	(??_isspace+3)^0,f,c
  5677  002516  500A               	movf	(??_isspace+3)^0,w,c
  5678  002518  E109               	bnz	u1880
  5679  00251A  0E05               	movlw	5
  5680  00251C  5C09               	subwf	(??_isspace+2)^0,w,c
  5681  00251E  A0D8               	btfss	status,0,c
  5682  002520  EF94  F012         	goto	u1881
  5683  002524  EF96  F012         	goto	u1880
  5684  002528                     u1881:
  5685  002528  EF98  F012         	goto	l2786
  5686  00252C                     u1880:
  5687  00252C  0E00               	movlw	0
  5688  00252E  6E0B               	movwf	_isspace$1719^0,c
  5689  002530                     l2786:
  5690  002530  C00B  F005         	movff	_isspace$1719,?_isspace
  5691  002534  6A06               	clrf	(?_isspace+1)^0,c
  5692  002536  0012               	return		;funcret
  5693  002538                     __end_of_isspace:
  5694                           	opt callstack 0
  5695                           
  5696 ;; *************** function _isdigit *****************
  5697 ;; Defined at:
  5698 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  c               2    4[COMRAM] int 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  2    4[COMRAM] int 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5715 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;Total ram usage:        6 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    4
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_vfpfcnvrt
  5723 ;;		_atoi
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text40
  5728  002788                     __ptext40:
  5729                           	opt callstack 0
  5730  002788                     _isdigit:
  5731                           	opt callstack 23
  5732  002788  0ED0               	movlw	208
  5733  00278A  6E07               	movwf	??_isdigit^0,c
  5734  00278C  0EFF               	movlw	255
  5735  00278E  6E08               	movwf	(??_isdigit+1)^0,c
  5736  002790  C005  F009         	movff	isdigit@c,??_isdigit+2
  5737  002794  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5738  002798  5007               	movf	??_isdigit^0,w,c
  5739  00279A  2609               	addwf	(??_isdigit+2)^0,f,c
  5740  00279C  5008               	movf	(??_isdigit+1)^0,w,c
  5741  00279E  220A               	addwfc	(??_isdigit+3)^0,f,c
  5742  0027A0  500A               	movf	(??_isdigit+3)^0,w,c
  5743  0027A2  E10A               	bnz	u1720
  5744  0027A4  0E0A               	movlw	10
  5745  0027A6  5C09               	subwf	(??_isdigit+2)^0,w,c
  5746  0027A8  A0D8               	btfss	status,0,c
  5747  0027AA  EFD9  F013         	goto	u1721
  5748  0027AE  EFDC  F013         	goto	u1720
  5749  0027B2                     u1721:
  5750  0027B2  0E01               	movlw	1
  5751  0027B4  EFDD  F013         	goto	u1730
  5752  0027B8                     u1720:
  5753  0027B8  0E00               	movlw	0
  5754  0027BA                     u1730:
  5755  0027BA  6E05               	movwf	?_isdigit^0,c
  5756  0027BC  6A06               	clrf	(?_isdigit+1)^0,c
  5757  0027BE  0012               	return		;funcret
  5758  0027C0                     __end_of_isdigit:
  5759                           	opt callstack 0
  5760                           
  5761 ;; *************** function ___wmul *****************
  5762 ;; Defined at:
  5763 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  multiplier      2    4[COMRAM] unsigned int 
  5766 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  product         2    8[COMRAM] unsigned int 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  2    4[COMRAM] unsigned int 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0, prodl, prodh
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5782 ;;Total ram usage:        6 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    4
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_atoi
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text41
  5793  002876                     __ptext41:
  5794                           	opt callstack 0
  5795  002876                     ___wmul:
  5796                           	opt callstack 22
  5797  002876  5005               	movf	___wmul@multiplier^0,w,c
  5798  002878  0207               	mulwf	___wmul@multiplicand^0,c
  5799  00287A  CFF3 F009          	movff	prodl,___wmul@product
  5800  00287E  CFF4 F00A          	movff	prodh,___wmul@product+1
  5801  002882  5005               	movf	___wmul@multiplier^0,w,c
  5802  002884  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5803  002886  50F3               	movf	243,w,c
  5804  002888  260A               	addwf	(___wmul@product+1)^0,f,c
  5805  00288A  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5806  00288C  0207               	mulwf	___wmul@multiplicand^0,c
  5807  00288E  50F3               	movf	243,w,c
  5808  002890  260A               	addwf	(___wmul@product+1)^0,f,c
  5809  002892  C009  F005         	movff	___wmul@product,?___wmul
  5810  002896  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5811  00289A  0012               	return		;funcret
  5812  00289C                     __end_of___wmul:
  5813                           	opt callstack 0
  5814                           
  5815 ;; *************** function _EUSART1_is_rx_ready *****************
  5816 ;; Defined at:
  5817 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      _Bool 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    4
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text42
  5846  0028EA                     __ptext42:
  5847                           	opt callstack 0
  5848  0028EA                     _EUSART1_is_rx_ready:
  5849                           	opt callstack 26
  5850  0028EA                     
  5851                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  5852  0028EA  0100               	movlb	0	; () banked
  5853  0028EC  51B5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5854  0028EE  A4D8               	btfss	status,2,c
  5855  0028F0  EF7C  F014         	goto	u2541
  5856  0028F4  EF7F  F014         	goto	u2540
  5857  0028F8                     u2541:
  5858  0028F8  0E01               	movlw	1
  5859  0028FA  EF80  F014         	goto	u2550
  5860  0028FE                     u2540:
  5861  0028FE  0E00               	movlw	0
  5862  002900                     u2550:
  5863  002900                     
  5864                           ; BSR set to: 0
  5865  002900  0012               	return		;funcret
  5866  002902                     __end_of_EUSART1_is_rx_ready:
  5867                           	opt callstack 0
  5868                           
  5869 ;; *************** function _EUSART1_Read *****************
  5870 ;; Defined at:
  5871 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  readValue       1    4[COMRAM] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      unsigned char 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;Total ram usage:        1 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    4
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_main
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text43
  5900  00248E                     __ptext43:
  5901                           	opt callstack 0
  5902  00248E                     _EUSART1_Read:
  5903                           	opt callstack 26
  5904  00248E                     l3286:
  5905                           
  5906                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  5907  00248E  0100               	movlb	0	; () banked
  5908  002490  51B5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5909  002492  B4D8               	btfsc	status,2,c
  5910  002494  EF4E  F012         	goto	u2561
  5911  002498  EF50  F012         	goto	u2560
  5912  00249C                     u2561:
  5913  00249C  EF47  F012         	goto	l3286
  5914  0024A0                     u2560:
  5915  0024A0                     
  5916                           ; BSR set to: 0
  5917                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  5918  0024A0  0E60               	movlw	low _eusart1RxStatusBuffer
  5919  0024A2  25B6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5920  0024A4  6ED9               	movwf	fsr2l,c
  5921  0024A6  6ADA               	clrf	fsr2h,c
  5922  0024A8  0E00               	movlw	high _eusart1RxStatusBuffer
  5923  0024AA  22DA               	addwfc	fsr2h,f,c
  5924  0024AC  50DF               	movf	indf2,w,c
  5925  0024AE  6FB4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5926                           
  5927                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  5928  0024B0  0E70               	movlw	low _eusart1RxBuffer
  5929  0024B2  25B6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5930  0024B4  6ED9               	movwf	fsr2l,c
  5931  0024B6  6ADA               	clrf	fsr2h,c
  5932  0024B8  0E00               	movlw	high _eusart1RxBuffer
  5933  0024BA  22DA               	addwfc	fsr2h,f,c
  5934  0024BC  50DF               	movf	indf2,w,c
  5935  0024BE  6E05               	movwf	EUSART1_Read@readValue^0,c
  5936  0024C0                     
  5937                           ; BSR set to: 0
  5938  0024C0  2BB6               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  5939  0024C2                     
  5940                           ; BSR set to: 0
  5941                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  5942  0024C2  0E0F               	movlw	15
  5943  0024C4  65B6               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  5944  0024C6  EF67  F012         	goto	u2571
  5945  0024CA  EF69  F012         	goto	u2570
  5946  0024CE                     u2571:
  5947  0024CE  EF6B  F012         	goto	l3296
  5948  0024D2                     u2570:
  5949  0024D2                     
  5950                           ; BSR set to: 0
  5951                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  5952  0024D2  0E00               	movlw	0
  5953  0024D4  6FB6               	movwf	_eusart1RxTail& (0+255),b	;volatile
  5954  0024D6                     l3296:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  5958  0024D6  010E               	movlb	14	; () banked
  5959  0024D8  9BC5               	bcf	197,5,b	;volatile
  5960  0024DA                     
  5961                           ; BSR set to: 14
  5962                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  5963  0024DA  0100               	movlb	0	; () banked
  5964  0024DC  07B5               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  5965  0024DE                     
  5966                           ; BSR set to: 0
  5967                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  5968  0024DE  010E               	movlb	14	; () banked
  5969  0024E0  8BC5               	bsf	197,5,b	;volatile
  5970  0024E2                     
  5971                           ; BSR set to: 14
  5972                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  5973  0024E2  5005               	movf	EUSART1_Read@readValue^0,w,c
  5974  0024E4                     
  5975                           ; BSR set to: 14
  5976  0024E4  0012               	return		;funcret
  5977  0024E6                     __end_of_EUSART1_Read:
  5978                           	opt callstack 0
  5979                           
  5980 ;; *************** function _ClearRxBuff *****************
  5981 ;; Defined at:
  5982 ;;		line 46 in file "main.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  i               2    5[COMRAM] int 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;Total ram usage:        3 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    4
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text44
  6011  002582                     __ptext44:
  6012                           	opt callstack 0
  6013  002582                     _ClearRxBuff:
  6014                           	opt callstack 26
  6015  002582                     
  6016                           ;main.c: 48:     int i = 0;
  6017  002582  0E00               	movlw	0
  6018  002584  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  6019  002586  0E00               	movlw	0
  6020  002588  6E06               	movwf	ClearRxBuff@i^0,c
  6021                           
  6022                           ;main.c: 49:     for(i=0; i<ByteNum; i++ ){
  6023  00258A  0E00               	movlw	0
  6024  00258C  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  6025  00258E  0E00               	movlw	0
  6026  002590  6E06               	movwf	ClearRxBuff@i^0,c
  6027  002592  EFD5  F012         	goto	l3362
  6028  002596                     l3358:
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;main.c: 50:         rxData[i] = 0xFF;
  6032  002596  0E00               	movlw	low _rxData
  6033  002598  2406               	addwf	ClearRxBuff@i^0,w,c
  6034  00259A  6ED9               	movwf	fsr2l,c
  6035  00259C  0E01               	movlw	high _rxData
  6036  00259E  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  6037  0025A0  6EDA               	movwf	fsr2h,c
  6038  0025A2  0EFF               	movlw	255
  6039  0025A4  6EDF               	movwf	indf2,c
  6040  0025A6                     
  6041                           ; BSR set to: 0
  6042                           ;main.c: 51:     }
  6043  0025A6  4A06               	infsnz	ClearRxBuff@i^0,f,c
  6044  0025A8  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  6045  0025AA                     l3362:
  6046  0025AA  0100               	movlb	0	; () banked
  6047  0025AC  51AE               	movf	_ByteNum& (0+255),w,b
  6048  0025AE  5C06               	subwf	ClearRxBuff@i^0,w,c
  6049  0025B0  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  6050  0025B2  0A80               	xorlw	128
  6051  0025B4  6E05               	movwf	??_ClearRxBuff^0,c
  6052  0025B6  51AF               	movf	(_ByteNum+1)& (0+255),w,b
  6053  0025B8  0A80               	xorlw	128
  6054  0025BA  5805               	subwfb	??_ClearRxBuff^0,w,c
  6055  0025BC  A0D8               	btfss	status,0,c
  6056  0025BE  EFE3  F012         	goto	u2691
  6057  0025C2  EFE5  F012         	goto	u2690
  6058  0025C6                     u2691:
  6059  0025C6  EFCB  F012         	goto	l3358
  6060  0025CA                     u2690:
  6061  0025CA                     
  6062                           ; BSR set to: 0
  6063  0025CA  0012               	return		;funcret
  6064  0025CC                     __end_of_ClearRxBuff:
  6065                           	opt callstack 0
  6066                           
  6067 ;; *************** function _INTERRUPT_InterruptManager *****************
  6068 ;; Defined at:
  6069 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;Total ram usage:        4 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    3
  6090 ;; This function calls:
  6091 ;;		Absolute function
  6092 ;;		_EUSART1_Receive_ISR
  6093 ;;		_EUSART1_Transmit_ISR
  6094 ;;		_EUSART2_Receive_ISR
  6095 ;;		_EUSART2_Transmit_ISR
  6096 ;; This function is called by:
  6097 ;;		Interrupt level 2
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	intcode
  6102  000008                     __pintcode:
  6103                           	opt callstack 0
  6104  000008                     _INTERRUPT_InterruptManager:
  6105                           	opt callstack 17
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;incstack = 0
  6109  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6110  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6111  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6112  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6113  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6114  00001A                     
  6115                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6116  00001A  ACF2               	btfss	242,6,c	;volatile
  6117  00001C  EF12  F000         	goto	i2u271_41
  6118  000020  EF14  F000         	goto	i2u271_40
  6119  000024                     i2u271_41:
  6120  000024  EF89  F000         	goto	i2l159
  6121  000028                     i2u271_40:
  6122  000028                     
  6123                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  6124  000028  010E               	movlb	14	; () banked
  6125  00002A  ADC5               	btfss	197,6,b	;volatile
  6126  00002C  EF1A  F000         	goto	i2u272_41
  6127  000030  EF1C  F000         	goto	i2u272_40
  6128  000034                     i2u272_41:
  6129  000034  EF32  F000         	goto	i2l150
  6130  000038                     i2u272_40:
  6131  000038                     
  6132                           ; BSR set to: 14
  6133  000038  ADCD               	btfss	205,6,b	;volatile
  6134  00003A  EF21  F000         	goto	i2u273_41
  6135  00003E  EF23  F000         	goto	i2u273_40
  6136  000042                     i2u273_41:
  6137  000042  EF32  F000         	goto	i2l150
  6138  000046                     i2u273_40:
  6139  000046                     
  6140                           ; BSR set to: 14
  6141                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  6142  000046  D802               	call	i2u274_48
  6143  000048  EF30  F000         	goto	i2u274_49
  6144  00004C                     i2u274_48:
  6145  00004C  0005               	push	
  6146  00004E  6EFA               	movwf	pclath,c
  6147  000050  0100               	movlb	0	; () banked
  6148  000052  51F8               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  6149  000054  6EFD               	movwf	tosl,c
  6150  000056  51F9               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  6151  000058  6EFE               	movwf	tosh,c
  6152  00005A  6AFF               	clrf	tosu,c
  6153  00005C  50FA               	movf	pclath,w,c
  6154  00005E  0012               	return		;indir
  6155  000060                     i2u274_49:
  6156                           
  6157                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6158  000060  EF89  F000         	goto	i2l159
  6159  000064                     i2l150:
  6160                           
  6161                           ; BSR set to: 14
  6162  000064  AFC5               	btfss	197,7,b	;volatile
  6163  000066  EF37  F000         	goto	i2u275_41
  6164  00006A  EF39  F000         	goto	i2u275_40
  6165  00006E                     i2u275_41:
  6166  00006E  EF4F  F000         	goto	i2l152
  6167  000072                     i2u275_40:
  6168  000072                     
  6169                           ; BSR set to: 14
  6170  000072  AFCD               	btfss	205,7,b	;volatile
  6171  000074  EF3E  F000         	goto	i2u276_41
  6172  000078  EF40  F000         	goto	i2u276_40
  6173  00007C                     i2u276_41:
  6174  00007C  EF4F  F000         	goto	i2l152
  6175  000080                     i2u276_40:
  6176  000080                     
  6177                           ; BSR set to: 14
  6178                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  6179  000080  D802               	call	i2u277_48
  6180  000082  EF4D  F000         	goto	i2u277_49
  6181  000086                     i2u277_48:
  6182  000086  0005               	push	
  6183  000088  6EFA               	movwf	pclath,c
  6184  00008A  0100               	movlb	0	; () banked
  6185  00008C  51F6               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  6186  00008E  6EFD               	movwf	tosl,c
  6187  000090  51F7               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  6188  000092  6EFE               	movwf	tosh,c
  6189  000094  6AFF               	clrf	tosu,c
  6190  000096  50FA               	movf	pclath,w,c
  6191  000098  0012               	return		;indir
  6192  00009A                     i2u277_49:
  6193                           
  6194                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6195  00009A  EF89  F000         	goto	i2l159
  6196  00009E                     i2l152:
  6197                           
  6198                           ; BSR set to: 14
  6199  00009E  A9C5               	btfss	197,4,b	;volatile
  6200  0000A0  EF54  F000         	goto	i2u278_41
  6201  0000A4  EF56  F000         	goto	i2u278_40
  6202  0000A8                     i2u278_41:
  6203  0000A8  EF6C  F000         	goto	i2l154
  6204  0000AC                     i2u278_40:
  6205  0000AC                     
  6206                           ; BSR set to: 14
  6207  0000AC  A9CD               	btfss	205,4,b	;volatile
  6208  0000AE  EF5B  F000         	goto	i2u279_41
  6209  0000B2  EF5D  F000         	goto	i2u279_40
  6210  0000B6                     i2u279_41:
  6211  0000B6  EF6C  F000         	goto	i2l154
  6212  0000BA                     i2u279_40:
  6213  0000BA                     
  6214                           ; BSR set to: 14
  6215                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  6216  0000BA  D802               	call	i2u280_48
  6217  0000BC  EF6A  F000         	goto	i2u280_49
  6218  0000C0                     i2u280_48:
  6219  0000C0  0005               	push	
  6220  0000C2  6EFA               	movwf	pclath,c
  6221  0000C4  0100               	movlb	0	; () banked
  6222  0000C6  51F4               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6223  0000C8  6EFD               	movwf	tosl,c
  6224  0000CA  51F5               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6225  0000CC  6EFE               	movwf	tosh,c
  6226  0000CE  6AFF               	clrf	tosu,c
  6227  0000D0  50FA               	movf	pclath,w,c
  6228  0000D2  0012               	return		;indir
  6229  0000D4                     i2u280_49:
  6230                           
  6231                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6232  0000D4  EF89  F000         	goto	i2l159
  6233  0000D8                     i2l154:
  6234                           
  6235                           ; BSR set to: 14
  6236  0000D8  ABC5               	btfss	197,5,b	;volatile
  6237  0000DA  EF71  F000         	goto	i2u281_41
  6238  0000DE  EF73  F000         	goto	i2u281_40
  6239  0000E2                     i2u281_41:
  6240  0000E2  EF89  F000         	goto	i2l153
  6241  0000E6                     i2u281_40:
  6242  0000E6                     
  6243                           ; BSR set to: 14
  6244  0000E6  ABCD               	btfss	205,5,b	;volatile
  6245  0000E8  EF78  F000         	goto	i2u282_41
  6246  0000EC  EF7A  F000         	goto	i2u282_40
  6247  0000F0                     i2u282_41:
  6248  0000F0  EF89  F000         	goto	i2l153
  6249  0000F4                     i2u282_40:
  6250  0000F4                     
  6251                           ; BSR set to: 14
  6252                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  6253  0000F4  D802               	call	i2u283_48
  6254  0000F6  EF87  F000         	goto	i2u283_49
  6255  0000FA                     i2u283_48:
  6256  0000FA  0005               	push	
  6257  0000FC  6EFA               	movwf	pclath,c
  6258  0000FE  0100               	movlb	0	; () banked
  6259  000100  51F2               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6260  000102  6EFD               	movwf	tosl,c
  6261  000104  51F3               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6262  000106  6EFE               	movwf	tosh,c
  6263  000108  6AFF               	clrf	tosu,c
  6264  00010A  50FA               	movf	pclath,w,c
  6265  00010C  0012               	return		;indir
  6266  00010E                     i2u283_49:
  6267                           
  6268                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  6269  00010E  EF89  F000         	goto	i2l159
  6270  000112                     i2l153:
  6271  000112                     i2l159:
  6272  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6273  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6274  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6275  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6276  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6277  000124  0011               	retfie		f
  6278  000126                     __end_of_INTERRUPT_InterruptManager:
  6279                           	opt callstack 0
  6280                           
  6281 ;; *************** function _EUSART2_Transmit_ISR *****************
  6282 ;; Defined at:
  6283 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_EUSART2_Initialize
  6307 ;;		_INTERRUPT_InterruptManager
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text46
  6312  0025CC                     __ptext46:
  6313                           	opt callstack 0
  6314  0025CC                     _EUSART2_Transmit_ISR:
  6315                           	opt callstack 19
  6316  0025CC                     
  6317                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  6318  0025CC  0E08               	movlw	8
  6319  0025CE  0100               	movlb	0	; () banked
  6320  0025D0  61FB               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6321  0025D2  EFED  F012         	goto	i2u246_41
  6322  0025D6  EFEF  F012         	goto	i2u246_40
  6323  0025DA                     i2u246_41:
  6324  0025DA  EF07  F013         	goto	i2l333
  6325  0025DE                     i2u246_40:
  6326  0025DE                     
  6327                           ; BSR set to: 0
  6328                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  6329  0025DE  0EA0               	movlw	low _eusart2TxBuffer
  6330  0025E0  25BC               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  6331  0025E2  6ED9               	movwf	fsr2l,c
  6332  0025E4  6ADA               	clrf	fsr2h,c
  6333  0025E6  0E00               	movlw	high _eusart2TxBuffer
  6334  0025E8  22DA               	addwfc	fsr2h,f,c
  6335  0025EA  50DF               	movf	indf2,w,c
  6336  0025EC  010E               	movlb	14	; () banked
  6337  0025EE  6F9A               	movwf	154,b	;volatile
  6338  0025F0                     
  6339                           ; BSR set to: 14
  6340  0025F0  0100               	movlb	0	; () banked
  6341  0025F2  2BBC               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  6342  0025F4                     
  6343                           ; BSR set to: 0
  6344                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  6345  0025F4  0E07               	movlw	7
  6346  0025F6  65BC               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  6347  0025F8  EF00  F013         	goto	i2u247_41
  6348  0025FC  EF02  F013         	goto	i2u247_40
  6349  002600                     i2u247_41:
  6350  002600  EF04  F013         	goto	i2l3258
  6351  002604                     i2u247_40:
  6352  002604                     
  6353                           ; BSR set to: 0
  6354                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  6355  002604  0E00               	movlw	0
  6356  002606  6FBC               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6357  002608                     i2l3258:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  6361  002608  2BFB               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6362                           
  6363                           ;mcc_generated_files/eusart2.c: 218:     }
  6364  00260A  EF09  F013         	goto	i2l336
  6365  00260E                     i2l333:
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  6369  00260E  010E               	movlb	14	; () banked
  6370  002610  9DC5               	bcf	197,6,b	;volatile
  6371  002612                     i2l336:
  6372  002612  0012               	return		;funcret
  6373  002614                     __end_of_EUSART2_Transmit_ISR:
  6374                           	opt callstack 0
  6375                           
  6376 ;; *************** function _EUSART2_Receive_ISR *****************
  6377 ;; Defined at:
  6378 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    2
  6399 ;; This function calls:
  6400 ;;		Absolute function
  6401 ;;		_EUSART2_DefaultErrorHandler
  6402 ;;		_EUSART2_DefaultFramingErrorHandler
  6403 ;;		_EUSART2_DefaultOverrunErrorHandler
  6404 ;;		_EUSART2_RxDataHandler
  6405 ;; This function is called by:
  6406 ;;		_EUSART2_Initialize
  6407 ;;		_INTERRUPT_InterruptManager
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text47
  6412  001F6E                     __ptext47:
  6413                           	opt callstack 0
  6414  001F6E                     _EUSART2_Receive_ISR:
  6415                           	opt callstack 17
  6416  001F6E                     
  6417                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  6418  001F6E  0E90               	movlw	low _eusart2RxStatusBuffer
  6419  001F70  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6420  001F72  6ED9               	movwf	fsr2l,c
  6421  001F74  6ADA               	clrf	fsr2h,c
  6422  001F76  0E00               	movlw	high _eusart2RxStatusBuffer
  6423  001F78  22DA               	addwfc	fsr2h,f,c
  6424  001F7A  0E00               	movlw	0
  6425  001F7C  6EDF               	movwf	indf2,c
  6426  001F7E                     
  6427                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  6428  001F7E  010E               	movlb	14	; () banked
  6429  001F80  A59D               	btfss	157,2,b	;volatile
  6430  001F82  EFC5  F00F         	goto	i2u248_41
  6431  001F86  EFC7  F00F         	goto	i2u248_40
  6432  001F8A                     i2u248_41:
  6433  001F8A  EFDB  F00F         	goto	i2l3268
  6434  001F8E                     i2u248_40:
  6435  001F8E                     
  6436                           ; BSR set to: 14
  6437                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  6438  001F8E  0E90               	movlw	low _eusart2RxStatusBuffer
  6439  001F90  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6440  001F92  6ED9               	movwf	fsr2l,c
  6441  001F94  6ADA               	clrf	fsr2h,c
  6442  001F96  0E00               	movlw	high _eusart2RxStatusBuffer
  6443  001F98  22DA               	addwfc	fsr2h,f,c
  6444  001F9A  0100               	movlb	0	; () banked
  6445  001F9C  82DF               	bsf	indf2,1,c
  6446  001F9E                     
  6447                           ; BSR set to: 0
  6448                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  6449  001F9E  D802               	call	i2u249_48
  6450  001FA0  EFDB  F00F         	goto	i2u249_49
  6451  001FA4                     i2u249_48:
  6452  001FA4  0005               	push	
  6453  001FA6  6EFA               	movwf	pclath,c
  6454  001FA8  51F0               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  6455  001FAA  6EFD               	movwf	tosl,c
  6456  001FAC  51F1               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  6457  001FAE  6EFE               	movwf	tosh,c
  6458  001FB0  6AFF               	clrf	tosu,c
  6459  001FB2  50FA               	movf	pclath,w,c
  6460  001FB4  0012               	return		;indir
  6461  001FB6                     i2u249_49:
  6462  001FB6                     i2l3268:
  6463                           
  6464                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  6465  001FB6  010E               	movlb	14	; () banked
  6466  001FB8  A39D               	btfss	157,1,b	;volatile
  6467  001FBA  EFE1  F00F         	goto	i2u250_41
  6468  001FBE  EFE3  F00F         	goto	i2u250_40
  6469  001FC2                     i2u250_41:
  6470  001FC2  EFF7  F00F         	goto	i2l3274
  6471  001FC6                     i2u250_40:
  6472  001FC6                     
  6473                           ; BSR set to: 14
  6474                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  6475  001FC6  0E90               	movlw	low _eusart2RxStatusBuffer
  6476  001FC8  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6477  001FCA  6ED9               	movwf	fsr2l,c
  6478  001FCC  6ADA               	clrf	fsr2h,c
  6479  001FCE  0E00               	movlw	high _eusart2RxStatusBuffer
  6480  001FD0  22DA               	addwfc	fsr2h,f,c
  6481  001FD2  0100               	movlb	0	; () banked
  6482  001FD4  84DF               	bsf	indf2,2,c
  6483  001FD6                     
  6484                           ; BSR set to: 0
  6485                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  6486  001FD6  D802               	call	i2u251_48
  6487  001FD8  EFF7  F00F         	goto	i2u251_49
  6488  001FDC                     i2u251_48:
  6489  001FDC  0005               	push	
  6490  001FDE  6EFA               	movwf	pclath,c
  6491  001FE0  51EE               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  6492  001FE2  6EFD               	movwf	tosl,c
  6493  001FE4  51EF               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  6494  001FE6  6EFE               	movwf	tosh,c
  6495  001FE8  6AFF               	clrf	tosu,c
  6496  001FEA  50FA               	movf	pclath,w,c
  6497  001FEC  0012               	return		;indir
  6498  001FEE                     i2u251_49:
  6499  001FEE                     i2l3274:
  6500                           
  6501                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  6502  001FEE  0E90               	movlw	low _eusart2RxStatusBuffer
  6503  001FF0  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6504  001FF2  6ED9               	movwf	fsr2l,c
  6505  001FF4  6ADA               	clrf	fsr2h,c
  6506  001FF6  0E00               	movlw	high _eusart2RxStatusBuffer
  6507  001FF8  22DA               	addwfc	fsr2h,f,c
  6508  001FFA  50DF               	movf	indf2,w,c
  6509  001FFC  B4D8               	btfsc	status,2,c
  6510  001FFE  EF03  F010         	goto	i2u252_41
  6511  002002  EF05  F010         	goto	i2u252_40
  6512  002006                     i2u252_41:
  6513  002006  EF14  F010         	goto	i2l3278
  6514  00200A                     i2u252_40:
  6515  00200A                     
  6516                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  6517  00200A  D802               	call	i2u253_48
  6518  00200C  EF12  F010         	goto	i2u253_49
  6519  002010                     i2u253_48:
  6520  002010  0005               	push	
  6521  002012  6EFA               	movwf	pclath,c
  6522  002014  0100               	movlb	0	; () banked
  6523  002016  51EC               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  6524  002018  6EFD               	movwf	tosl,c
  6525  00201A  51ED               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  6526  00201C  6EFE               	movwf	tosh,c
  6527  00201E  6AFF               	clrf	tosu,c
  6528  002020  50FA               	movf	pclath,w,c
  6529  002022  0012               	return		;indir
  6530  002024                     i2u253_49:
  6531                           
  6532                           ;mcc_generated_files/eusart2.c: 242:     } else {
  6533  002024  EF16  F010         	goto	i2l343
  6534  002028                     i2l3278:
  6535                           
  6536                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  6537  002028  ECFB  F013         	call	_EUSART2_RxDataHandler	;wreg free
  6538  00202C                     i2l343:
  6539  00202C  0012               	return		;funcret
  6540  00202E                     __end_of_EUSART2_Receive_ISR:
  6541                           	opt callstack 0
  6542                           
  6543 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  6544 ;; Defined at:
  6545 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		None
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6563 ;;Total ram usage:        0 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_EUSART2_Initialize
  6569 ;;		_EUSART2_Receive_ISR
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text48
  6574  00297C                     __ptext48:
  6575                           	opt callstack 0
  6576  00297C                     _EUSART2_DefaultOverrunErrorHandler:
  6577                           	opt callstack 18
  6578  00297C                     
  6579                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  6580  00297C  010E               	movlb	14	; () banked
  6581  00297E  999D               	bcf	157,4,b	;volatile
  6582                           
  6583                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  6584  002980  899D               	bsf	157,4,b	;volatile
  6585  002982                     
  6586                           ; BSR set to: 14
  6587  002982  0012               	return		;funcret
  6588  002984                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  6589                           	opt callstack 0
  6590                           
  6591 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  6592 ;; Defined at:
  6593 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		None
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_EUSART2_Initialize
  6617 ;;		_EUSART2_Receive_ISR
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text49
  6622  0029A0                     __ptext49:
  6623                           	opt callstack 0
  6624  0029A0                     _EUSART2_DefaultFramingErrorHandler:
  6625                           	opt callstack 18
  6626  0029A0  0012               	return		;funcret
  6627  0029A2                     __end_of_EUSART2_DefaultFramingErrorHandler:
  6628                           	opt callstack 0
  6629                           
  6630 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  6631 ;; Defined at:
  6632 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;Total ram usage:        0 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    1
  6653 ;; This function calls:
  6654 ;;		_EUSART2_RxDataHandler
  6655 ;; This function is called by:
  6656 ;;		_EUSART2_Initialize
  6657 ;;		_EUSART2_Receive_ISR
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text50
  6662  00298A                     __ptext50:
  6663                           	opt callstack 0
  6664  00298A                     _EUSART2_DefaultErrorHandler:
  6665                           	opt callstack 17
  6666  00298A                     
  6667                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  6668  00298A  ECFB  F013         	call	_EUSART2_RxDataHandler	;wreg free
  6669  00298E  0012               	return		;funcret
  6670  002990                     __end_of_EUSART2_DefaultErrorHandler:
  6671                           	opt callstack 0
  6672                           
  6673 ;; *************** function _EUSART2_RxDataHandler *****************
  6674 ;; Defined at:
  6675 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_EUSART2_Receive_ISR
  6699 ;;		_EUSART2_DefaultErrorHandler
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text51
  6704  0027F6                     __ptext51:
  6705                           	opt callstack 0
  6706  0027F6                     _EUSART2_RxDataHandler:
  6707                           	opt callstack 18
  6708  0027F6                     
  6709                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  6710  0027F6  0E98               	movlw	low _eusart2RxBuffer
  6711  0027F8  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6712  0027FA  6ED9               	movwf	fsr2l,c
  6713  0027FC  6ADA               	clrf	fsr2h,c
  6714  0027FE  0E00               	movlw	high _eusart2RxBuffer
  6715  002800  22DA               	addwfc	fsr2h,f,c
  6716  002802  CE99 FFDF          	movff	3737,indf2	;volatile
  6717  002806  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
  6718  002808                     
  6719                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  6720  002808  0E07               	movlw	7
  6721  00280A  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
  6722  00280C  EF0A  F014         	goto	i2u241_41
  6723  002810  EF0C  F014         	goto	i2u241_40
  6724  002814                     i2u241_41:
  6725  002814  EF0E  F014         	goto	i2l3094
  6726  002818                     i2u241_40:
  6727  002818                     
  6728                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  6729  002818  0E00               	movlw	0
  6730  00281A  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6731  00281C                     i2l3094:
  6732                           
  6733                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  6734  00281C  0100               	movlb	0	; () banked
  6735  00281E  2BBA               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  6736  002820                     
  6737                           ; BSR set to: 0
  6738  002820  0012               	return		;funcret
  6739  002822                     __end_of_EUSART2_RxDataHandler:
  6740                           	opt callstack 0
  6741                           
  6742 ;; *************** function _EUSART1_Transmit_ISR *****************
  6743 ;; Defined at:
  6744 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;Total ram usage:        0 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_EUSART1_Initialize
  6768 ;;		_INTERRUPT_InterruptManager
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text52
  6773  002658                     __ptext52:
  6774                           	opt callstack 0
  6775  002658                     _EUSART1_Transmit_ISR:
  6776                           	opt callstack 19
  6777  002658                     
  6778                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6779  002658  0E10               	movlw	16
  6780  00265A  0100               	movlb	0	; () banked
  6781  00265C  61FA               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6782  00265E  EF33  F013         	goto	i2u261_41
  6783  002662  EF35  F013         	goto	i2u261_40
  6784  002666                     i2u261_41:
  6785  002666  EF4B  F013         	goto	i2l477
  6786  00266A                     i2u261_40:
  6787  00266A                     
  6788                           ; BSR set to: 0
  6789                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  6790  00266A  0E80               	movlw	low _eusart1TxBuffer
  6791  00266C  25B7               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  6792  00266E  6ED9               	movwf	fsr2l,c
  6793  002670  6ADA               	clrf	fsr2h,c
  6794  002672  0E00               	movlw	high _eusart1TxBuffer
  6795  002674  22DA               	addwfc	fsr2h,f,c
  6796  002676  50DF               	movf	indf2,w,c
  6797  002678  6E9A               	movwf	154,c	;volatile
  6798  00267A                     
  6799                           ; BSR set to: 0
  6800  00267A  2BB7               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6801  00267C                     
  6802                           ; BSR set to: 0
  6803                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6804  00267C  0E0F               	movlw	15
  6805  00267E  65B7               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  6806  002680  EF44  F013         	goto	i2u262_41
  6807  002684  EF46  F013         	goto	i2u262_40
  6808  002688                     i2u262_41:
  6809  002688  EF48  F013         	goto	i2l3334
  6810  00268C                     i2u262_40:
  6811  00268C                     
  6812                           ; BSR set to: 0
  6813                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6814  00268C  0E00               	movlw	0
  6815  00268E  6FB7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6816  002690                     i2l3334:
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6820  002690  2BFA               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6821                           
  6822                           ;mcc_generated_files/eusart1.c: 209:     }
  6823  002692  EF4D  F013         	goto	i2l480
  6824  002696                     i2l477:
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  6828  002696  010E               	movlb	14	; () banked
  6829  002698  99C5               	bcf	197,4,b	;volatile
  6830  00269A                     i2l480:
  6831  00269A  0012               	return		;funcret
  6832  00269C                     __end_of_EUSART1_Transmit_ISR:
  6833                           	opt callstack 0
  6834                           
  6835 ;; *************** function _EUSART1_Receive_ISR *****************
  6836 ;; Defined at:
  6837 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;		None
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;Total ram usage:        0 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:    2
  6858 ;; This function calls:
  6859 ;;		Absolute function
  6860 ;;		_EUSART1_DefaultErrorHandler
  6861 ;;		_EUSART1_DefaultFramingErrorHandler
  6862 ;;		_EUSART1_DefaultOverrunErrorHandler
  6863 ;;		_EUSART1_RxDataHandler
  6864 ;; This function is called by:
  6865 ;;		_EUSART1_Initialize
  6866 ;;		_INTERRUPT_InterruptManager
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text53
  6871  00202E                     __ptext53:
  6872                           	opt callstack 0
  6873  00202E                     _EUSART1_Receive_ISR:
  6874                           	opt callstack 17
  6875  00202E                     
  6876                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6877  00202E  0E60               	movlw	low _eusart1RxStatusBuffer
  6878  002030  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6879  002032  6ED9               	movwf	fsr2l,c
  6880  002034  6ADA               	clrf	fsr2h,c
  6881  002036  0E00               	movlw	high _eusart1RxStatusBuffer
  6882  002038  22DA               	addwfc	fsr2h,f,c
  6883  00203A  0E00               	movlw	0
  6884  00203C  6EDF               	movwf	indf2,c
  6885  00203E                     
  6886                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  6887  00203E  A49D               	btfss	157,2,c	;volatile
  6888  002040  EF24  F010         	goto	i2u263_41
  6889  002044  EF26  F010         	goto	i2u263_40
  6890  002048                     i2u263_41:
  6891  002048  EF3A  F010         	goto	i2l3344
  6892  00204C                     i2u263_40:
  6893  00204C                     
  6894                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6895  00204C  0E60               	movlw	low _eusart1RxStatusBuffer
  6896  00204E  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6897  002050  6ED9               	movwf	fsr2l,c
  6898  002052  6ADA               	clrf	fsr2h,c
  6899  002054  0E00               	movlw	high _eusart1RxStatusBuffer
  6900  002056  22DA               	addwfc	fsr2h,f,c
  6901  002058  0100               	movlb	0	; () banked
  6902  00205A  82DF               	bsf	indf2,1,c
  6903  00205C                     
  6904                           ; BSR set to: 0
  6905                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6906  00205C  D802               	call	i2u264_48
  6907  00205E  EF3A  F010         	goto	i2u264_49
  6908  002062                     i2u264_48:
  6909  002062  0005               	push	
  6910  002064  6EFA               	movwf	pclath,c
  6911  002066  51EA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6912  002068  6EFD               	movwf	tosl,c
  6913  00206A  51EB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6914  00206C  6EFE               	movwf	tosh,c
  6915  00206E  6AFF               	clrf	tosu,c
  6916  002070  50FA               	movf	pclath,w,c
  6917  002072  0012               	return		;indir
  6918  002074                     i2u264_49:
  6919  002074                     i2l3344:
  6920                           
  6921                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  6922  002074  A29D               	btfss	157,1,c	;volatile
  6923  002076  EF3F  F010         	goto	i2u265_41
  6924  00207A  EF41  F010         	goto	i2u265_40
  6925  00207E                     i2u265_41:
  6926  00207E  EF55  F010         	goto	i2l3350
  6927  002082                     i2u265_40:
  6928  002082                     
  6929                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6930  002082  0E60               	movlw	low _eusart1RxStatusBuffer
  6931  002084  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6932  002086  6ED9               	movwf	fsr2l,c
  6933  002088  6ADA               	clrf	fsr2h,c
  6934  00208A  0E00               	movlw	high _eusart1RxStatusBuffer
  6935  00208C  22DA               	addwfc	fsr2h,f,c
  6936  00208E  0100               	movlb	0	; () banked
  6937  002090  84DF               	bsf	indf2,2,c
  6938  002092                     
  6939                           ; BSR set to: 0
  6940                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6941  002092  D802               	call	i2u266_48
  6942  002094  EF55  F010         	goto	i2u266_49
  6943  002098                     i2u266_48:
  6944  002098  0005               	push	
  6945  00209A  6EFA               	movwf	pclath,c
  6946  00209C  51E8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6947  00209E  6EFD               	movwf	tosl,c
  6948  0020A0  51E9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6949  0020A2  6EFE               	movwf	tosh,c
  6950  0020A4  6AFF               	clrf	tosu,c
  6951  0020A6  50FA               	movf	pclath,w,c
  6952  0020A8  0012               	return		;indir
  6953  0020AA                     i2u266_49:
  6954  0020AA                     i2l3350:
  6955                           
  6956                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6957  0020AA  0E60               	movlw	low _eusart1RxStatusBuffer
  6958  0020AC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6959  0020AE  6ED9               	movwf	fsr2l,c
  6960  0020B0  6ADA               	clrf	fsr2h,c
  6961  0020B2  0E00               	movlw	high _eusart1RxStatusBuffer
  6962  0020B4  22DA               	addwfc	fsr2h,f,c
  6963  0020B6  50DF               	movf	indf2,w,c
  6964  0020B8  B4D8               	btfsc	status,2,c
  6965  0020BA  EF61  F010         	goto	i2u267_41
  6966  0020BE  EF63  F010         	goto	i2u267_40
  6967  0020C2                     i2u267_41:
  6968  0020C2  EF72  F010         	goto	i2l3354
  6969  0020C6                     i2u267_40:
  6970  0020C6                     
  6971                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6972  0020C6  D802               	call	i2u268_48
  6973  0020C8  EF70  F010         	goto	i2u268_49
  6974  0020CC                     i2u268_48:
  6975  0020CC  0005               	push	
  6976  0020CE  6EFA               	movwf	pclath,c
  6977  0020D0  0100               	movlb	0	; () banked
  6978  0020D2  51E6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6979  0020D4  6EFD               	movwf	tosl,c
  6980  0020D6  51E7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6981  0020D8  6EFE               	movwf	tosh,c
  6982  0020DA  6AFF               	clrf	tosu,c
  6983  0020DC  50FA               	movf	pclath,w,c
  6984  0020DE  0012               	return		;indir
  6985  0020E0                     i2u268_49:
  6986                           
  6987                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6988  0020E0  EF74  F010         	goto	i2l487
  6989  0020E4                     i2l3354:
  6990                           
  6991                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6992  0020E4  EC11  F014         	call	_EUSART1_RxDataHandler	;wreg free
  6993  0020E8                     i2l487:
  6994  0020E8  0012               	return		;funcret
  6995  0020EA                     __end_of_EUSART1_Receive_ISR:
  6996                           	opt callstack 0
  6997                           
  6998 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6999 ;; Defined at:
  7000 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		None
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;Total ram usage:        0 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_EUSART1_Initialize
  7024 ;;		_EUSART1_Receive_ISR
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text54
  7029  002990                     __ptext54:
  7030                           	opt callstack 0
  7031  002990                     _EUSART1_DefaultOverrunErrorHandler:
  7032                           	opt callstack 18
  7033  002990                     
  7034                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  7035  002990  989D               	bcf	157,4,c	;volatile
  7036                           
  7037                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  7038  002992  889D               	bsf	157,4,c	;volatile
  7039  002994  0012               	return		;funcret
  7040  002996                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7041                           	opt callstack 0
  7042                           
  7043 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7044 ;; Defined at:
  7045 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;		None
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		None
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7063 ;;Total ram usage:        0 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_EUSART1_Initialize
  7069 ;;		_EUSART1_Receive_ISR
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text55
  7074  0029A2                     __ptext55:
  7075                           	opt callstack 0
  7076  0029A2                     _EUSART1_DefaultFramingErrorHandler:
  7077                           	opt callstack 18
  7078  0029A2  0012               	return		;funcret
  7079  0029A4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7080                           	opt callstack 0
  7081                           
  7082 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7083 ;; Defined at:
  7084 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;Total ram usage:        0 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    1
  7105 ;; This function calls:
  7106 ;;		_EUSART1_RxDataHandler
  7107 ;; This function is called by:
  7108 ;;		_EUSART1_Initialize
  7109 ;;		_EUSART1_Receive_ISR
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text56
  7114  002996                     __ptext56:
  7115                           	opt callstack 0
  7116  002996                     _EUSART1_DefaultErrorHandler:
  7117                           	opt callstack 17
  7118  002996                     
  7119                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7120  002996  EC11  F014         	call	_EUSART1_RxDataHandler	;wreg free
  7121  00299A  0012               	return		;funcret
  7122  00299C                     __end_of_EUSART1_DefaultErrorHandler:
  7123                           	opt callstack 0
  7124                           
  7125 ;; *************** function _EUSART1_RxDataHandler *****************
  7126 ;; Defined at:
  7127 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;Total ram usage:        0 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_EUSART1_Receive_ISR
  7151 ;;		_EUSART1_DefaultErrorHandler
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text57
  7156  002822                     __ptext57:
  7157                           	opt callstack 0
  7158  002822                     _EUSART1_RxDataHandler:
  7159                           	opt callstack 18
  7160  002822                     
  7161                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7162  002822  0E70               	movlw	low _eusart1RxBuffer
  7163  002824  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  7164  002826  6ED9               	movwf	fsr2l,c
  7165  002828  6ADA               	clrf	fsr2h,c
  7166  00282A  0E00               	movlw	high _eusart1RxBuffer
  7167  00282C  22DA               	addwfc	fsr2h,f,c
  7168  00282E  CF99 FFDF          	movff	3993,indf2	;volatile
  7169  002832  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
  7170  002834                     
  7171                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7172  002834  0E0F               	movlw	15
  7173  002836  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7174  002838  EF20  F014         	goto	i2u242_41
  7175  00283C  EF22  F014         	goto	i2u242_40
  7176  002840                     i2u242_41:
  7177  002840  EF24  F014         	goto	i2l3114
  7178  002844                     i2u242_40:
  7179  002844                     
  7180                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7181  002844  0E00               	movlw	0
  7182  002846  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7183  002848                     i2l3114:
  7184                           
  7185                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7186  002848  0100               	movlb	0	; () banked
  7187  00284A  2BB5               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7188  00284C                     
  7189                           ; BSR set to: 0
  7190  00284C  0012               	return		;funcret
  7191  00284E                     __end_of_EUSART1_RxDataHandler:
  7192                           	opt callstack 0
  7193                           
  7194                           	psect	text58
  7195  000000                     __ptext58:
  7196                           	opt callstack 0
  7197  000000                     
  7198                           	psect	rparam
  7199  0000                     
  7200                           	psect	temp
  7201  00005B                     btemp:
  7202                           	opt callstack 0
  7203  00005B                     	ds	1
  7204  0000                     int$flags	set	btemp
  7205  0000                     wtemp8	set	btemp+1
  7206  0000                     ttemp5	set	btemp+1
  7207  0000                     ttemp6	set	btemp+4
  7208  0000                     ttemp7	set	btemp+8
  7209                           tosu	equ	0xFFF
  7210                           tosh	equ	0xFFE
  7211                           tosl	equ	0xFFD
  7212                           stkptr	equ	0xFFC
  7213                           pclatu	equ	0xFFB
  7214                           pclath	equ	0xFFA
  7215                           pcl	equ	0xFF9
  7216                           tblptru	equ	0xFF8
  7217                           tblptrh	equ	0xFF7
  7218                           tblptrl	equ	0xFF6
  7219                           tablat	equ	0xFF5
  7220                           prodh	equ	0xFF4
  7221                           prodl	equ	0xFF3
  7222                           indf0	equ	0xFEF
  7223                           postinc0	equ	0xFEE
  7224                           postdec0	equ	0xFED
  7225                           preinc0	equ	0xFEC
  7226                           plusw0	equ	0xFEB
  7227                           fsr0h	equ	0xFEA
  7228                           fsr0l	equ	0xFE9
  7229                           wreg	equ	0xFE8
  7230                           indf1	equ	0xFE7
  7231                           postinc1	equ	0xFE6
  7232                           postdec1	equ	0xFE5
  7233                           preinc1	equ	0xFE4
  7234                           plusw1	equ	0xFE3
  7235                           fsr1h	equ	0xFE2
  7236                           fsr1l	equ	0xFE1
  7237                           bsr	equ	0xFE0
  7238                           indf2	equ	0xFDF
  7239                           postinc2	equ	0xFDE
  7240                           postdec2	equ	0xFDD
  7241                           preinc2	equ	0xFDC
  7242                           plusw2	equ	0xFDB
  7243                           fsr2h	equ	0xFDA
  7244                           fsr2l	equ	0xFD9
  7245                           status	equ	0xFD8


Data Sizes:
    Strings     38
    Constant    0
    Data        11
    BSS         230
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     40     156
    BANK1           256      0     143
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1732_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintRXBuff
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintRXBuff
    _PrintRXBuff->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   27939
                                             85 COMRAM     1     1      0
                                             39 BANK0      1     1      0
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _PrintRXBuff
                             _RXMode
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintRXBuff                                          3     3      0   13475
                                             84 COMRAM     1     1      0
                                             37 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13373
                                             27 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13100
                                             82 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   12555
                                             72 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1336
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     495
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearRxBuff
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _PrintRXBuff
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      8F       8       55.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      9C       5       97.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     185       6        0.0%
DATA                 0      0     185       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 01 18:12:53 2021

                      _eusart1TxBufferRemaining 00FA                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 220C  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 28D0                                             l124 28E8  
                                           l127 28B6                                             l320 2444  
                                           l144 299E                                             l321 245C  
                                           l330 297A                                             l324 248C  
                                           l503 2966                                             l512 2948  
                                           l506 295C                                             l362 292A  
                                           l515 2952                                             l371 2920  
                                           l452 2900                                             l509 2970  
                                           l365 293E                                             l446 2306  
                                           l359 2934                                             l368 2916  
                                           l296 228A                                             l465 24E4  
                                           l641 1F32                                             l713 101E  
                                           l561 2984                                             l571 25CA  
                                           l643 1F6C                                             l651 1436  
                                           l563 2986                                             l741 289A  
                                           l565 2988                                             l638 1EF0  
                                           l728 138C                                             l649 142E  
                                           l737 23C8                                             l577 236C  
                                           l674 16A6                                             l738 23D0  
                                           l683 1744                                             l676 16AE  
                                           l669 166C                                             l855 1C64  
                                           l697 18E0                                             l699 1942  
                                           l868 1DC8                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 2936         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 292C                                             _abs 269C  
                                           _pad 1EAC                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l3000 102E                                            l3010 10C6  
                                          l3002 1054                                            l3020 1156  
                                          l3012 10D4                                            l3004 108A  
                                          l3100 295E                                            l3030 1222  
                                          l3022 117C                                            l3006 1098  
                                          l3102 2954                                            l1503 2874  
                                          l1416 26D2                                            l3032 1248  
                                          l3024 11C4                                            l3016 111E  
                                          l3008 10A6                                            l3104 2968  
                                          l1450 1ADC                                            l1514 2426  
                                          l3034 1260                                            l3042 12E6  
                                          l3018 1130                                            l3130 21E2  
                                          l1419 26DA                                            l3300 24DE  
                                          l3060 137A                                            l3044 130C  
                                          l3052 133A                                            l3036 126E  
                                          l3028 11FC                                            l3140 21F0  
                                          l3132 21E4                                            l3124 2180  
                                          l3220 28C4                                            l1509 27F4  
                                          l1453 2716                                            l1525 274E  
                                          l3302 24E2                                            l3054 1348  
                                          l3046 131A                                            l3038 12AA  
                                          l3150 28D2                                            l3142 21F2  
                                          l3134 21E6                                            l3126 21A8  
                                          l3222 28C8                                            l3214 28B8  
                                          l1447 1AD4                                            l1519 242E  
                                          l2600 2482                                            l3048 132E  
                                          l3160 22B0                                            l3152 228C  
                                          l3080 292C                                            l3144 21F4  
                                          l3136 21E8                                            l3128 21B8  
                                          l3224 28CC                                            l3216 28BC  
                                          l1473 2786                                            l2602 2486  
                                          l2610 20FC                                            l3058 1354  
                                          l3170 22CC                                            l3162 22B4  
                                          l3154 2290                                            l3082 2922  
                                          l3146 299C                                            l3138 21EE  
                                          l3218 28C0                                            l1459 27BE  
                                          l1467 2536                                            l2700 1AE2  
                                          l2604 2488                                            l2612 210E  
                                          l3172 22D8                                            l3164 22B8  
                                          l3156 229C                                            l3084 2936  
                                          l3076 2918                                            l3180 221E  
                                          l3148 289C                                            l2710 1B42  
                                          l2702 1AF0                                            l2606 2974  
                                          l2614 2118                                            l2622 2614  
                                          l2630 27C0                                            l3174 2302  
                                          l3166 22BC                                            l3158 22AC  
                                          l3078 290E                                            l3190 2240  
                                          l3182 222E                                            l3360 25A6  
                                          l3280 28EA                                            l2720 1B8C  
                                          l2712 1B46                                            l2704 1B10  
                                          l2616 2136                                            l1488 217E  
                                          l2608 20EA                                            l1496 2656  
                                          l2624 2620                                            l2632 27CC  
                                          l2800 1408                                            l2640 2718  
                                          l3096 294A                                            l3168 22C0  
                                          l3192 2244                                            l3184 2234  
                                          l3176 220E                                            l3362 25AA  
                                          l3290 24C0                                            l2730 1BFC  
                                          l2722 1B9A                                            l2714 1B52  
                                          l2706 1B14                                            l2618 216C  
                                          l2626 2632                                            l2634 27D0  
                                          l2650 1EDC                                            l2810 1464  
                                          l2802 1422                                            l3530 23AA  
                                          l3098 2940                                            l3194 2250  
                                          l3186 2238                                            l3178 2212  
                                          l3356 2582                                            l3292 24C2  
                                          l3284 248E                                            l2732 1C0E  
                                          l2724 1BAC                                            l2716 1B70  
                                          l2708 1B22                                            l2628 2636  
                                          l2636 27E8                                            l2660 1F40  
                                          l2652 1EE8                                            l2644 1EAC  
                                          l2820 1504                                            l2812 146C  
                                          l2804 143E                                            l2900 1880  
                                          l3524 236E                                            l3532 284E  
                                          l3540 231E                                            l3196 225C  
                                          l3188 223C                                            l3358 2596  
                                          l3294 24D2                                            l3286 248E  
                                          l2726 1BDA                                            l2718 1B78  
                                          l2734 1C14                                            l2750 1C9C  
                                          l2742 1C66                                            l2590 2432  
                                          l2662 1F54                                            l2654 1EFC  
                                          l2646 1EBA                                            l2830 15C0  
                                          l2822 150A                                            l2814 1476  
                                          l2806 1450                                            l2670 2750  
                                          l2910 18F4                                            l2902 189E  
                                          l3526 2376                                            l3534 2858  
                                          l3542 2348                                            l3198 2286  
                                          l3550 1DD0                                            l3296 24D6  
                                          l3288 24A0                                            l2920 1958  
                                          l2736 1C24                                            l2728 1BFA  
                                          l2760 1D04                                            l2752 1CAA  
                                          l2744 1C6A                                            l2592 2454  
                                          l2656 1F10                                            l2648 1ECE  
                                          l2840 160E                                            l2832 15DA  
                                          l2816 147C                                            l2824 156E  
                                          l2808 145E                                            l2912 1904  
                                          l2904 18B8                                            l3528 2384  
                                          l3544 234E                                            l3560 1DDA  
                                          l3552 1DD2                                            l3298 24DA  
                                          l2930 19BA                                            l2922 195C  
                                          l2738 1C44                                            l2762 1D12  
                                          l2770 1D78                                            l2754 1CCA  
                                          l2746 1C78                                            l2666 269C  
                                          l2594 245E                                            l2658 1F14  
                                          l2842 1620                                            l2826 1588  
                                          l2834 15E8                                            l2818 14FE  
                                          l2674 26DC                                            l2682 2408  
                                          l2914 191A                                            l2906 18D2  
                                          l3538 2308                                            l3570 1DFA  
                                          l3562 1DE8                                            l3554 1DD4  
                                          l3546 1DCA                                            l2692 2876  
                                          l2780 24EA                                            l2940 19E6  
                                          l2924 1960                                            l2772 1D88  
                                          l2764 1D40                                            l2756 1CE8  
                                          l2748 1C98                                            l2668 26B6  
                                          l2596 2470                                            l2588 2432  
                                          l2844 162C                                            l2836 15FA  
                                          l2828 15A6                                            l2684 241A  
                                          l2908 18EE                                            l2860 16C4  
                                          l2852 166E                                            l3580 1E40  
                                          l3564 1DEC                                            l3556 1DD6  
                                          l3548 1DCE                                            l2694 2892  
                                          l2782 24FE                                            l2950 1A94  
                                          l2942 1A1C                                            l2934 19C0  
                                          l2926 197E                                            l2918 1944  
                                          l2774 1DA8                                            l2766 1D60  
                                          l2758 1CF0                                            l2598 2472  
                                          l2846 1634                                            l2838 1608  
                                          l2790 138E                                            l2678 23D2  
                                          l2870 1704                                            l2862 16CC  
                                          l2854 167E                                            l3590 1E74  
                                          l3582 1E54                                            l3574 1E12  
                                          l3566 1DF0                                            l3558 1DD8  
                                          ?_pad 0017                                            l2688 2788  
                                          l2784 252C                                            l2952 1AA6  
                                          l2936 19D6                                            l2928 19B6  
                                          l2768 1D72                                            l2848 1644  
                                          l2792 13AE                                            l2880 1778  
                                          l2872 170C                                            l2864 16EC  
                                          l2856 1680                                            l2960 0F28  
                                          l3592 1E7A                                            l3576 1E2A  
                                          l3584 1E5A                                            l3568 1DF4  
                                          l2786 2530                                            l2778 24E6  
                                          l2954 1AB8                                            l2946 1A54  
                                          l2938 19DE                                            l2698 1ADE  
                                          l2794 13D6                                            l2882 178A  
                                          l2890 17EA                                            l2874 1728  
                                          l2866 16F4                                            l2858 169A  
                                          l3666 0FDE                                            l2970 0F7E  
                                          l2962 0F4E                                            l3594 1E82  
                                          l3586 1E6C                                            l3578 1E3A  
                                          l3668 1A06                                            l2796 13F6  
                                          l2892 17FA                                            l2876 1738  
                                          l2868 16FE                                            l2972 0F80  
                                          l2964 0F5C                                            l3588 1E70  
                                          l2798 1406                                            l2894 1800  
                                          l2886 17C4                                            l2990 0FAA  
                                          l2982 0F9E                                            l2974 0F92  
                                          l2966 0F6E                                            l2896 1806  
                                          l2888 17D6                                            l2968 0F72  
                                          l2898 1864                                            l2994 0FB6  
                                          l2986 0FA4                                            l2978 0F98  
                                          l2996 100C                                            l2998 102C  
                                          STR_1 0F01                                            STR_2 0F19  
                                          u2000 15E8                                            u2001 15E4  
                                          u2010 15FA                                            u2011 15F6  
                                          u2020 1608                                            u2100 178A  
                                          u2021 1604                                            u2101 1786  
                                          u2030 1620                                            u2110 17BE  
                                          u2031 161C                                            u2111 17B8  
                                          u2200 18EE                                            u2120 17C0  
                                          u2040 167E                                            u2201 18EA  
                                          u2041 167A                                            u2210 197E  
                                          u2130 17D6                                            u2050 169A  
                                          u2211 197A                                            u2131 17D2  
                                          u2051 1696                                            u2220 19B6  
                                          u1500 2454                                            u2140 183E  
                                          u2060 16C4                                            u2300 102C  
                                          u2221 19B2                                            u1501 2450  
                                          u2061 16C0                                            u2301 1028  
                                          _LATA 000F83                                            u2230 19D2  
                                          u1510 2482                                            u2150 1880  
                                          u2070 1728                                            u2310 1054  
                                          _LATB 000F84                                            u2231 19CE  
                                          u1511 247E                                            u2151 187C  
                                          u2071 1724                                            u2311 1050  
                                          _LATC 000F85                                            u2240 1A8E  
                                          u1520 20FC                                            u1600 1EBA  
                                          u2160 189E                                            u2080 1772  
                                          u2400 130C                                            u2320 1098  
                                          _LATD 000F86                                            u2241 1A88  
                                          u1521 20F8                                            u1601 1EB6  
                                          u2161 189A                                            u2145 182C  
                                          u2081 176C                                            u2401 1308  
                                          u2321 1094                                            _LATE 000F87  
                                          u2250 1A90                                            u1530 210E  
                                          u1610 1EDC                                            u2170 18B8  
                                          u2090 1774                                            u2330 1116  
                                          u1531 210A                                            u1611 1ED8  
                                          u2171 18B4                                            u2331 1110  
                                          u2260 1AA6                                            u1540 2136  
                                          u1620 1F32                                            u1700 2404  
                                          u2180 18D2                                            u2340 1118  
                                          u2261 1AA2                                            u1541 2132  
                                          u1621 1F2E                                            u2181 18CE  
                                          u2270 1AB8                                            u1550 216C  
                                          u1630 1F40                                            u1710 241A  
                                          u2190 18E0                                            u2350 1130  
                                          u2271 1AB4                                            u1551 2168  
                                          u1631 1F3C                                            u1711 2416  
                                          u2191 18DC                                            u2351 112C  
                                          u1720 27B8                                            u1800 1C24  
                                          u1640 26B6                                            u1560 2656  
                                          u2360 1156                                            u2280 0F4E  
                                          u1721 27B2                                            u1801 1C20  
                                          u1641 26B2                                            u1561 2652  
                                          u2361 1152                                            u2281 0F4A  
                                          u1730 27BA                                            u1810 1C78  
                                          u1490 2444                                            u1570 27E8  
                                          u1650 2780                                            u2370 117C  
                                          u2290 101E                                            u1811 1C74  
                                          u1491 2440                                            u1571 27E4  
                                          u1651 277A                                            u2371 1178  
                                          u2291 101A                                            u2540 28FE  
                                          u1740 1AF0                                            u1820 1CAA  
                                          u1900 13C0                                            u1660 2782  
                                          u1580 2748                                            u2380 1222  
                                          u2541 28F8                                            u1741 1AEC  
                                          u1821 1CA6                                            u1581 2742  
                                          u2381 121E                                            u2550 2900  
                                          u1750 1B22                                            u1830 1CE8  
                                          u1910 13D6                                            u1670 2710  
                                          u1590 274A                                            u2390 1248  
                                          u1751 1B1E                                            u1831 1CE4  
                                          u1911 13D2                                            u1671 270A  
                                          u2391 1244                                            u2560 24A0  
                                          u1840 1D12                                            u1920 1406  
                                          u1680 2712                                            u2561 249C  
                                          u1761 1B4C                                            u1841 1D0E  
                                          u1921 1402                                            u2570 24D2  
                                          u1770 1B70                                            u1850 1D40  
                                          u1930 1422                                            u1690 2402  
                                          u2571 24CE                                            u1771 1B6C  
                                          u1851 1D3C                                            u1931 141E  
                                          u1691 23FC                                            u1780 1B9A  
                                          u1860 1D88                                            u1940 1450  
                                          u2900 236C                                            u1781 1B96  
                                          u1861 1D84                                            u1941 144C  
                                          u2901 2368                                            u1870 24FE  
                                          u1790 1BDA                                            u1950 145E  
                                          u2910 1E0E                                            u1871 24FA  
                                          u1791 1BD6                                            u1951 145A  
                                          u2911 1E0A                                            u1880 252C  
                                          u1960 1588                                            u2920 1E54  
                                          u1881 2528                                            u1961 1584  
                                          u2921 1E50                                            u2690 25CA  
                                          u1970 15A6                                            u1890 13BE  
                                          u2930 1E6C                                            u2691 25C6  
                                          u1971 15A2                                            u1891 13B8  
                                          u2931 1E68                                            u1980 15C0  
                                          u2940 1E92                                            _PMD0 000EE1  
                                          u1981 15BC                                            u2941 1E8C  
                                          _PMD1 000EE2                                            u1990 15DA  
                                          _PMD2 000EE3                                            u1991 15D6  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          _PMD5 000EE6                                            u2890 23C8  
                                          u2946 1E94                                            u2891 23C4  
                                          u2957 1E30                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 2430                                            abs@a 0017  
                                          _dbuf 0164                                            _atoi 1944  
                                          _main 1DCA                                            _dtoa 138E  
                                 ?_EUSART1_Read 0001                                            _loop 00B0  
                                          _prec 00AC                                            _nout 00A8  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                            _xtoa 166E  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 2614  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 28EA  
                         _eusart1RxStatusBuffer 0060                                 __end_of___aodiv 1C66  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1DCA  
                                 __CFG_WDTE$OFF 000000                                           ?_xtoa 0022  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 299A  
                                         i2l333 260E                                           i2l350 29A0  
                                         i2l343 202C                                           i2l159 0112  
                                         i2l336 2612                                           i2l353 2982  
                                         i2l347 2820                                           i2l356 298E  
                                         i2l480 269A                                           i2l491 284C  
                                         i2l477 2696                                           i2l494 29A2  
                                         i2l487 20E8                                           i2l497 2994  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00C6                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 00B3                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 2658  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _data1 0184  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                                         _fputc 20EA                                 __end_of_isalpha 2718  
                                         _fputs 2614                                 __end_of_isdigit 27C0  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00AA                                           _putch 2972  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 2750                                 __end_of_isspace 2538  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 2788  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 2582                                  ??_EUSART1_Read 0005  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 2430           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 29A4     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 29A2           __end_of_EUSART2_SetTxInterruptHandler 2918  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 290E  
                                  _toupper$1784 0011                                 __initialization 2538  
                                  __end_of_atoi 1ADE                      __end_of_EUSART1_Initialize 2308  
                                  __end_of_main 1EAC                                    __end_of_dtoa 166E  
                                  __end_of_xtoa 1944                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                                          ??_main 0056  
                                        ??_dtoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003             __end_of_EUSART2_DefaultErrorHandler 2990  
                   _EUSART2_DefaultErrorHandler 298A                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_EUSART2_Initialize 228C                        _eusart2TxBufferRemaining 00FB  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                                        i2l3110 2834                                          i2l3112 2844  
                                        i2l3200 297C                                  __CFG_WDTCCS$SC 000000  
                                        i2l3114 2848                                          i2l3106 2822  
                                        i2l3202 298A                                          i2l3108 2832  
                                        i2l3204 2990                                          i2l3206 2996  
                                        i2l3330 267C                                          i2l3090 2808  
                                        i2l3250 25DE                                          i2l3340 204C  
                                        i2l3332 268C                                          i2l3324 2658  
                                        i2l3092 2818                                          i2l3260 1F6E  
                                        i2l3252 25F0                                          i2l3350 20AA  
                                        i2l3342 205C                                          i2l3334 2690  
                                        i2l3326 266A                                          i2l3094 281C  
                                        i2l3086 27F6                                          i2l3270 1FC6  
                                        i2l3262 1F7E                                          i2l3254 25F4  
                                        i2l3352 20C6                                          i2l3344 2074  
                                        i2l3336 202E                                          i2l3328 267A  
                                        i2l3088 2806                                          i2l3272 1FD6  
                                        i2l3264 1F8E                                          i2l3256 2604  
                                        i2l3248 25CC                                          i2l3354 20E4  
                                        i2l3346 2082                                          i2l3338 203E  
                                        i2l3274 1FEE                                          i2l3266 1F9E  
                                        i2l3258 2608                                          i2l3348 2092  
                                        i2l3276 200A                                          i2l3268 1FB6  
                                        i2l3380 0072                                          i2l3372 001A  
                                        i2l3278 2028                                          i2l3390 00F4  
                                        i2l3382 0080                                          i2l3374 0028  
                                        i2l3384 00AC                                          i2l3376 0038  
                                        i2l3386 00BA                                          i2l3378 0046  
                                        i2l3388 00E6                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        _TABLAT 000FF5                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 00CE                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                        _RXMode 2984                                  __CFG_PWRTE$OFF 000000  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 2876  
                                __CFG_STVREN$ON 000000                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 255E                                          clear_1 256A  
                                        _rxData 0100                     _EUSART2_FramingErrorHandler 00F0  
                                        _printf 284E                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 27C0  
                                 ??_PrintRXBuff 0055                                          fputc@c 0007  
                                _PMD_Initialize 289C                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_islower 0007                                    __mediumconst 0000  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 25CC  
                              __end_of_vfprintf 23D2                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0070  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0098                                 _eusart1TxBuffer 0080  
                             _SYSTEM_Initialize 28B8                                 _eusart2TxBuffer 00A0  
                                    __accesstop 0060                         __end_of__initialization 2578  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 284E                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 2902                             ??_SYSTEM_Initialize 0007  
                                 __end_of_fputc 2180                                   __end_of_fputs 2658  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 297C  
                        __end_of_PMD_Initialize 28B8                            __end_of_EUSART1_Read 24E6  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 20EA  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 28D2  
                                       ??_fputs 0014                             __end_of_PrintRXBuff 236E  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 00B8                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 00B6                                   _eusart2TxHead 00BD  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                 _eusart2RxTail 00BB                                   _eusart1TxTail 00B7  
             _EUSART1_TxDefaultInterruptHandler 00F4                                   _eusart2TxTail 00BC  
               ??_EUSART1_SetRxInterruptHandler 0007                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                         ?_RXMode 0001  
               __end_of_EUSART1_SetErrorHandler 2972                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         ?_printf 00D9  
                               ?_PMD_Initialize 0001                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 2968         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 295E                           _eusart2RxStatusBuffer 0090  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 202E  
                            __size_of_vfpfcnvrt 0466                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                                    ?_ClearRxBuff 0001  
                                       _ByteNum 00AE                                 __size_of_RXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 1ADE  
                                       ___aomod 1C66                                 __size_of___wmul 0026  
                                     ?_vfprintf 00D3                                    __psmallconst 0F00  
                           _EUSART1_is_rx_ready 28EA                                         __pcinit 2538  
               __end_of_EUSART2_SetErrorHandler 2940                                         __ramtop 0F00  
                                       __ptext0 1DCA                                         __ptext1 28B8  
                                       __ptext2 289C                                         __ptext3 2180  
                                       __ptext4 28D2                                         __ptext5 299C  
                                       __ptext6 220E                                         __ptext7 290E  
                                       __ptext8 2918                                         __ptext9 2922  
                               __size_of_printf 0028                                 __size_of_strlen 0036  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 2984  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 297C  
                                   _PrintRXBuff 2308                           _OSCILLATOR_Initialize 28D2  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 26DC  
                                       _isdigit 2788                              _EUSART1_Initialize 228C  
                                       _islower 2718                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 24E6                                         _isupper 2750  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                                         _toupper 23D2  
                          end_of_initialization 2578                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00E8                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 2954          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 294A                              _EUSART2_Initialize 220E  
                             __end_of_vfpfcnvrt 138E                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strlen@a 0007  
                                       strlen@s 0005                         fp__EUSART1_Transmit_ISR 0000  
                                    main@RXStat 00E5                __size_of_EUSART1_SetErrorHandler 000A  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                          ??_EUSART2_Initialize 0007                                    _EUSART1_Read 248E  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 298A  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 2822  
                  __end_of_INTERRUPT_Initialize 29A0                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 00BE  
                                __end_of___wmul 289C                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 2876                                  __end_of_strlen 27F6  
                           start_initialization 2538                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 26DC                                     __end_of_pad 1F6E  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART2_Write 248E  
                        fp__EUSART1_Receive_ISR 0000                __size_of_EUSART2_SetErrorHandler 000A  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
        __end_of_EUSART2_SetOverrunErrorHandler 292C         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 2922                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                     vfprintf@fmt 00D5  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 2822                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK1 0184                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 00B5  
                                _eusart2RxCount 00BA                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 00F2                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 00BE                                ___aodiv@dividend 0005  
                       fp__EUSART2_Transmit_ISR 0000                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                  __size_of_EUSART1_Receive_ISR 00BC                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$1692 0014                                       _atoi$1693 0018  
                                     _atoi$1694 0016                                       __pnvBANK0 00E6  
                        _PIN_MANAGER_Initialize 2180                                       _dtoa$1208 0034  
                                     __pintcode 0008                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
             _EUSART2_TxDefaultInterruptHandler 00F8                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0064                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                    ?_PrintRXBuff 0001  
                                   __smallconst 0F00           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 2996     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 2990                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 00E6  
                  ?_EUSART2_DefaultErrorHandler 0001                                        ?_islower 0005  
                                      ?_isspace 0005                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 2968                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 299C  
                  __size_of_EUSART2_Receive_ISR 00C0                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u241_40 2818  
                                      i2u241_41 2814                                        i2u242_40 2844  
                                      i2u250_40 1FC6                                        i2u242_41 2840  
                                      i2u250_41 1FC2                                        i2u252_40 200A  
                                      i2u251_48 1FDC                                        i2u252_41 2006  
                                      i2u251_49 1FEE                                        i2u261_40 266A  
                                      i2u261_41 2666                                        i2u262_40 268C  
                                      i2u253_48 2010                                        i2u246_40 25DE  
                                      i2u262_41 2688                                        i2u253_49 2024  
                                      i2u246_41 25DA                                        i2u263_40 204C  
                                      i2u247_40 2604                                        i2u271_40 0028  
                                      i2u263_41 2048                                        i2u247_41 2600  
                                      i2u271_41 0024                                        i2u248_40 1F8E  
                                      i2u272_40 0038                                        i2u248_41 1F8A  
                                      i2u272_41 0034                                        i2u265_40 2082  
                                      i2u264_48 2062                                        i2u281_40 00E6  
                                      i2u280_48 00C0                                        i2u273_40 0046  
                                      i2u265_41 207E                                        i2u264_49 2074  
                                      i2u281_41 00E2                                        i2u280_49 00D4  
                                      i2u273_41 0042                                        i2u249_48 1FA4  
                                      i2u282_40 00F4                                        i2u249_49 1FB6  
                                      i2u282_41 00F0                                        i2u267_40 20C6  
                                      i2u266_48 2098                                        i2u275_40 0072  
                                      i2u274_48 004C                                        i2u267_41 20C2  
                                      i2u266_49 20AA                                        i2u275_41 006E  
                                      i2u274_49 0060                                        i2u283_48 00FA  
                                      i2u276_40 0080                                        i2u283_49 010E  
                                      i2u276_41 007C                                        i2u268_48 20CC  
                                      i2u268_49 20E0                                        _PIR3bits 000ECD  
                                      i2u278_40 00AC                                        i2u277_48 0086  
                                      i2u278_41 00A8                                        i2u277_49 009A  
                                      i2u279_40 00BA                                        i2u279_41 00B6  
                                      _PIR7bits 000ED1                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 0F28                                       _xtoa$1220 0037  
                                     _xtoa$1219 0035                               ___wmul@multiplier 0005  
                 __size_of_EUSART2_Transmit_ISR 0048                                    _isspace$1719 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 00D2  
                                     copy_data0 254C                           ?_INTERRUPT_Initialize 0001  
                       _EUSART2_SetErrorHandler 2936                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 00EE           __end_of_EUSART1_SetTxInterruptHandler 294A  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 2940  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 2922  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 2918  
                                    vfprintf@ap 00D7                                        __Lrparam 0000  
                                    vfprintf@fp 00D3                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 007C  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 299C                     _EUSART1_DefaultErrorHandler 2996  
                   __end_of_EUSART1_is_rx_ready 2902                            _EUSART2_ErrorHandler 00EC  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                                  PrintRXBuff@i 00E3                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 292C  
                                      __ptext11 2936                                        __ptext20 284E  
                                      __ptext12 228C                                        __ptext21 236E  
                                      __ptext13 2940                                        __ptext30 27C0  
                                      __ptext22 0F28                                        __ptext14 294A  
                                      __ptext31 2614                                        __ptext23 166E  
                                      __ptext15 2954                                        __ptext40 2788  
                                      __ptext32 20EA                                        __ptext24 23D2  
                                      __ptext16 295E                                        __ptext41 2876  
                                      __ptext33 2972                                        __ptext25 2718  
                                      __ptext17 2968                                        __ptext50 298A  
                                      __ptext42 28EA                                        __ptext34 2430  
                                      __ptext26 2750                                        __ptext18 2984  
                                      __ptext51 27F6                                        __ptext43 248E  
                                      __ptext35 269C                                        __ptext27 26DC  
                                      __ptext19 2308                                        __ptext52 2658  
                                      __ptext44 2582                                        __ptext36 1C66  
                                      __ptext28 138E                                        __ptext53 202E  
                                      __ptext37 1ADE                                        __ptext29 1EAC  
                                      __ptext54 2990                                        __ptext46 25CC  
                                      __ptext38 1944                                        __ptext55 29A2  
                                      __ptext47 1F6E                                        __ptext39 24E6  
                                      __ptext56 2996                                        __ptext48 297C  
                                      __ptext57 2822                                        __ptext49 29A0  
                                      __ptext58 0000                                __size_of_isupper 0038  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                                 __size_of_atoi 019A                                   __size_of_main 00E2  
                                 __size_of_dtoa 02E0           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 29A2     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 29A0                                   __size_of_xtoa 02D6  
                          __CFG_WDTCWS$WDTCWS_7 000000            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                                      _rxStatus 00B2                                        int$flags 005B  
                                      _vfprintf 236E              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 27F6  
                                     printf@fmt 00D9                     _EUSART1_FramingErrorHandler 00EA  
                           _EUSART1_Receive_ISR 202E                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                                _vfpfcnvrt$1234 00D0                                      _INTCONbits 000FF2  
                                   _NVMCON1bits 000F81                            __size_of_PrintRXBuff 0066  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                       ??_EUSART2_SetErrorHandler 0007  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 295E  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2954  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 269C  
                                      printf@ap 00E1  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                 ___aomod@counter 0015  
                            _eusart1RxLastError 00B4                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 1F6E                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 220E                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00B9  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 00F6                             __end_of_ClearRxBuff 25CC  
