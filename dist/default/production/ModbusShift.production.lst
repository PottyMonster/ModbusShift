

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 02 21:43:15 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 2.10
    86                           ; Generated 31/07/2019 GMT
    87                           ; 
    88                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F46K40 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK0
   121  0022D4                     __pidataBANK0:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for _data1
   125  0022D4  11                 	db	17
   126  0022D5  03                 	db	3
   127  0022D6  06                 	db	6
   128  0022D7  AE                 	db	174
   129  0022D8  41                 	db	65
   130  0022D9  56                 	db	86
   131  0022DA  52                 	db	82
   132  0022DB  43                 	db	67
   133  0022DC  40                 	db	64
   134  0022DD  49                 	db	73
   135  0022DE  AD                 	db	173
   136                           
   137                           ;initializer for stoa@F1139
   138  0022DF  28                 	db	40
   139  0022E0  6E                 	db	110
   140  0022E1  75                 	db	117
   141  0022E2  6C                 	db	108
   142  0022E3  6C                 	db	108
   143  0022E4  29                 	db	41
   144  0022E5  00                 	db	0
   145                           
   146                           ;initializer for _ExpectedBytes
   147  0022E6  0008               	dw	8
   148                           
   149                           	psect	nvBANK0
   150  0000CC                     __pnvBANK0:
   151                           	opt callstack 0
   152  0000CC                     _EUSART1_ErrorHandler:
   153                           	opt callstack 0
   154  0000CC                     	ds	2
   155  0000CE                     _EUSART1_OverrunErrorHandler:
   156                           	opt callstack 0
   157  0000CE                     	ds	2
   158  0000D0                     _EUSART1_FramingErrorHandler:
   159                           	opt callstack 0
   160  0000D0                     	ds	2
   161  0000D2                     _EUSART2_ErrorHandler:
   162                           	opt callstack 0
   163  0000D2                     	ds	2
   164  0000D4                     _EUSART2_OverrunErrorHandler:
   165                           	opt callstack 0
   166  0000D4                     	ds	2
   167  0000D6                     _EUSART2_FramingErrorHandler:
   168                           	opt callstack 0
   169  0000D6                     	ds	2
   170  0000D8                     _EUSART1_RxDefaultInterruptHandler:
   171                           	opt callstack 0
   172  0000D8                     	ds	2
   173  0000DA                     _EUSART1_TxDefaultInterruptHandler:
   174                           	opt callstack 0
   175  0000DA                     	ds	2
   176  0000DC                     _EUSART2_RxDefaultInterruptHandler:
   177                           	opt callstack 0
   178  0000DC                     	ds	2
   179  0000DE                     _EUSART2_TxDefaultInterruptHandler:
   180                           	opt callstack 0
   181  0000DE                     	ds	2
   182  0000E0                     _eusart1TxBufferRemaining:
   183                           	opt callstack 0
   184  0000E0                     	ds	1
   185  0000E1                     _eusart2TxBufferRemaining:
   186                           	opt callstack 0
   187  0000E1                     	ds	1
   188  0000                     _RC2REG	set	3737
   189  0000                     _RC2STAbits	set	3741
   190  0000                     _TX2REG	set	3738
   191  0000                     _TX2STAbits	set	3742
   192  0000                     _SP2BRGH	set	3740
   193  0000                     _SP2BRGL	set	3739
   194  0000                     _TX2STA	set	3742
   195  0000                     _RC2STA	set	3741
   196  0000                     _BAUD2CON	set	3743
   197  0000                     _PIR7bits	set	3793
   198  0000                     _PIR3bits	set	3789
   199  0000                     _PIE3bits	set	3781
   200  0000                     _PMD5	set	3814
   201  0000                     _PMD4	set	3813
   202  0000                     _PMD3	set	3812
   203  0000                     _PMD2	set	3811
   204  0000                     _PMD1	set	3810
   205  0000                     _PMD0	set	3809
   206  0000                     _OSCTUNE	set	3805
   207  0000                     _OSCFRQ	set	3806
   208  0000                     _OSCEN	set	3804
   209  0000                     _OSCCON3	set	3802
   210  0000                     _OSCCON1	set	3800
   211  0000                     _RX2PPS	set	3725
   212  0000                     _RC6PPS	set	3837
   213  0000                     _RB6PPS	set	3829
   214  0000                     _RX1PPS	set	3765
   215  0000                     _INLVLE	set	3882
   216  0000                     _INLVLD	set	3874
   217  0000                     _INLVLC	set	3869
   218  0000                     _INLVLB	set	3861
   219  0000                     _INLVLA	set	3853
   220  0000                     _SLRCONE	set	3883
   221  0000                     _SLRCOND	set	3875
   222  0000                     _SLRCONC	set	3870
   223  0000                     _SLRCONB	set	3862
   224  0000                     _SLRCONA	set	3854
   225  0000                     _ODCOND	set	3876
   226  0000                     _ODCONC	set	3871
   227  0000                     _ODCONB	set	3863
   228  0000                     _ODCONA	set	3855
   229  0000                     _ODCONE	set	3884
   230  0000                     _WPUC	set	3872
   231  0000                     _WPUA	set	3856
   232  0000                     _WPUB	set	3864
   233  0000                     _WPUE	set	3885
   234  0000                     _WPUD	set	3877
   235  0000                     _ANSELA	set	3857
   236  0000                     _ANSELE	set	3886
   237  0000                     _ANSELB	set	3865
   238  0000                     _ANSELC	set	3873
   239  0000                     _ANSELD	set	3878
   240  0000                     _LATAbits	set	3971
   241  0000                     _LATDbits	set	3974
   242  0000                     _RC1REG	set	3993
   243  0000                     _RC1STAbits	set	3997
   244  0000                     _TX1REG	set	3994
   245  0000                     _TX1STAbits	set	3998
   246  0000                     _SP1BRGH	set	3996
   247  0000                     _SP1BRGL	set	3995
   248  0000                     _TX1STA	set	3998
   249  0000                     _RC1STA	set	3997
   250  0000                     _BAUD1CON	set	3999
   251  0000                     _NVMDAT	set	3968
   252  0000                     _NVMADRL	set	3966
   253  0000                     _NVMADRH	set	3967
   254  0000                     _NVMCON2	set	3970
   255  0000                     _TABLAT	set	4085
   256  0000                     _TBLPTRL	set	4086
   257  0000                     _TBLPTRH	set	4087
   258  0000                     _TBLPTRU	set	4088
   259  0000                     _NVMCON1bits	set	3969
   260  0000                     _INTCONbits	set	4082
   261  0000                     _TRISD	set	3979
   262  0000                     _TRISC	set	3978
   263  0000                     _TRISB	set	3977
   264  0000                     _TRISA	set	3976
   265  0000                     _TRISE	set	3980
   266  0000                     _LATC	set	3973
   267  0000                     _LATB	set	3972
   268  0000                     _LATA	set	3971
   269  0000                     _LATD	set	3974
   270  0000                     _LATE	set	3975
   271                           
   272                           	psect	mediumconst
   273  00FE7E                     __pmediumconst:
   274                           	opt callstack 0
   275  00FE7E  00                 	db	0
   276  00FE7F                     STR_1:
   277                           
   278                           ; BSR set to: 0
   279  00FE7F  0D                 	db	13
   280  00FE80  44                 	db	68	;'D'
   281  00FE81  61                 	db	97	;'a'
   282  00FE82  6E                 	db	110	;'n'
   283  00FE83  20                 	db	32
   284  00FE84  61                 	db	97	;'a'
   285  00FE85  6E                 	db	110	;'n'
   286  00FE86  64                 	db	100	;'d'
   287  00FE87  20                 	db	32
   288  00FE88  53                 	db	83	;'S'
   289  00FE89  61                 	db	97	;'a'
   290  00FE8A  6D                 	db	109	;'m'
   291  00FE8B  27                 	db	39
   292  00FE8C  73                 	db	115	;'s'
   293  00FE8D  20                 	db	32
   294  00FE8E  4D                 	db	77	;'M'
   295  00FE8F  6F                 	db	111	;'o'
   296  00FE90  64                 	db	100	;'d'
   297  00FE91  62                 	db	98	;'b'
   298  00FE92  75                 	db	117	;'u'
   299  00FE93  73                 	db	115	;'s'
   300  00FE94  20                 	db	32
   301  00FE95  47                 	db	71	;'G'
   302  00FE96  50                 	db	80	;'P'
   303  00FE97  49                 	db	73	;'I'
   304  00FE98  4F                 	db	79	;'O'
   305  00FE99  20                 	db	32
   306  00FE9A  45                 	db	69	;'E'
   307  00FE9B  78                 	db	120	;'x'
   308  00FE9C  70                 	db	112	;'p'
   309  00FE9D  61                 	db	97	;'a'
   310  00FE9E  6E                 	db	110	;'n'
   311  00FE9F  73                 	db	115	;'s'
   312  00FEA0  69                 	db	105	;'i'
   313  00FEA1  6F                 	db	111	;'o'
   314  00FEA2  6E                 	db	110	;'n'
   315  00FEA3  20                 	db	32
   316  00FEA4  2D                 	db	45
   317  00FEA5  20                 	db	32
   318  00FEA6  41                 	db	65	;'A'
   319  00FEA7  50                 	db	80	;'P'
   320  00FEA8  30                 	db	48	;'0'
   321  00FEA9  30                 	db	48	;'0'
   322  00FEAA  30                 	db	48	;'0'
   323  00FEAB  78                 	db	120	;'x'
   324  00FEAC  78                 	db	120	;'x'
   325  00FEAD  78                 	db	120	;'x'
   326  00FEAE  78                 	db	120	;'x'
   327  00FEAF  78                 	db	120	;'x'
   328  00FEB0  20                 	db	32
   329  00FEB1  56                 	db	86	;'V'
   330  00FEB2  30                 	db	48	;'0'
   331  00FEB3  2E                 	db	46
   332  00FEB4  31                 	db	49	;'1'
   333  00FEB5  0D                 	db	13
   334  00FEB6  0A                 	db	10
   335  00FEB7  00                 	db	0
   336  00FEB8                     STR_8:
   337                           
   338                           ; BSR set to: 0
   339  00FEB8  0D                 	db	13
   340  00FEB9  20                 	db	32
   341  00FEBA  20                 	db	32
   342  00FEBB  20                 	db	32
   343  00FEBC  30                 	db	48	;'0'
   344  00FEBD  78                 	db	120	;'x'
   345  00FEBE  31                 	db	49	;'1'
   346  00FEBF  30                 	db	48	;'0'
   347  00FEC0  20                 	db	32
   348  00FEC1  2D                 	db	45
   349  00FEC2  20                 	db	32
   350  00FEC3  57                 	db	87	;'W'
   351  00FEC4  72                 	db	114	;'r'
   352  00FEC5  69                 	db	105	;'i'
   353  00FEC6  74                 	db	116	;'t'
   354  00FEC7  65                 	db	101	;'e'
   355  00FEC8  20                 	db	32
   356  00FEC9  4D                 	db	77	;'M'
   357  00FECA  75                 	db	117	;'u'
   358  00FECB  6C                 	db	108	;'l'
   359  00FECC  74                 	db	116	;'t'
   360  00FECD  69                 	db	105	;'i'
   361  00FECE  70                 	db	112	;'p'
   362  00FECF  6C                 	db	108	;'l'
   363  00FED0  65                 	db	101	;'e'
   364  00FED1  20                 	db	32
   365  00FED2  52                 	db	82	;'R'
   366  00FED3  65                 	db	101	;'e'
   367  00FED4  67                 	db	103	;'g'
   368  00FED5  69                 	db	105	;'i'
   369  00FED6  73                 	db	115	;'s'
   370  00FED7  74                 	db	116	;'t'
   371  00FED8  65                 	db	101	;'e'
   372  00FED9  72                 	db	114	;'r'
   373  00FEDA  73                 	db	115	;'s'
   374  00FEDB  20                 	db	32
   375  00FEDC  28                 	db	40
   376  00FEDD  4D                 	db	77	;'M'
   377  00FEDE  61                 	db	97	;'a'
   378  00FEDF  78                 	db	120	;'x'
   379  00FEE0  20                 	db	32
   380  00FEE1  33                 	db	51	;'3'
   381  00FEE2  32                 	db	50	;'2'
   382  00FEE3  78                 	db	120	;'x'
   383  00FEE4  20                 	db	32
   384  00FEE5  31                 	db	49	;'1'
   385  00FEE6  36                 	db	54	;'6'
   386  00FEE7  62                 	db	98	;'b'
   387  00FEE8  69                 	db	105	;'i'
   388  00FEE9  74                 	db	116	;'t'
   389  00FEEA  29                 	db	41
   390  00FEEB  0D                 	db	13
   391  00FEEC  0A                 	db	10
   392  00FEED  0A                 	db	10
   393  00FEEE  00                 	db	0
   394  00FEEF                     STR_7:
   395                           
   396                           ; BSR set to: 0
   397  00FEEF  0D                 	db	13
   398  00FEF0  20                 	db	32
   399  00FEF1  20                 	db	32
   400  00FEF2  20                 	db	32
   401  00FEF3  30                 	db	48	;'0'
   402  00FEF4  78                 	db	120	;'x'
   403  00FEF5  30                 	db	48	;'0'
   404  00FEF6  33                 	db	51	;'3'
   405  00FEF7  20                 	db	32
   406  00FEF8  2D                 	db	45
   407  00FEF9  20                 	db	32
   408  00FEFA  52                 	db	82	;'R'
   409  00FEFB  65                 	db	101	;'e'
   410  00FEFC  61                 	db	97	;'a'
   411  00FEFD  64                 	db	100	;'d'
   412  00FEFE  20                 	db	32
   413  00FEFF  4D                 	db	77	;'M'
   414  00FF00  75                 	db	117	;'u'
   415  00FF01  6C                 	db	108	;'l'
   416  00FF02  74                 	db	116	;'t'
   417  00FF03  69                 	db	105	;'i'
   418  00FF04  70                 	db	112	;'p'
   419  00FF05  6C                 	db	108	;'l'
   420  00FF06  65                 	db	101	;'e'
   421  00FF07  20                 	db	32
   422  00FF08  52                 	db	82	;'R'
   423  00FF09  65                 	db	101	;'e'
   424  00FF0A  67                 	db	103	;'g'
   425  00FF0B  69                 	db	105	;'i'
   426  00FF0C  73                 	db	115	;'s'
   427  00FF0D  74                 	db	116	;'t'
   428  00FF0E  65                 	db	101	;'e'
   429  00FF0F  72                 	db	114	;'r'
   430  00FF10  73                 	db	115	;'s'
   431  00FF11  20                 	db	32
   432  00FF12  28                 	db	40
   433  00FF13  4D                 	db	77	;'M'
   434  00FF14  61                 	db	97	;'a'
   435  00FF15  78                 	db	120	;'x'
   436  00FF16  20                 	db	32
   437  00FF17  33                 	db	51	;'3'
   438  00FF18  32                 	db	50	;'2'
   439  00FF19  78                 	db	120	;'x'
   440  00FF1A  20                 	db	32
   441  00FF1B  31                 	db	49	;'1'
   442  00FF1C  36                 	db	54	;'6'
   443  00FF1D  62                 	db	98	;'b'
   444  00FF1E  69                 	db	105	;'i'
   445  00FF1F  74                 	db	116	;'t'
   446  00FF20  29                 	db	41
   447  00FF21  0D                 	db	13
   448  00FF22  0A                 	db	10
   449  00FF23  00                 	db	0
   450  00FF24                     STR_3:
   451                           
   452                           ; BSR set to: 0
   453  00FF24  0D                 	db	13
   454  00FF25  43                 	db	67	;'C'
   455  00FF26  6F                 	db	111	;'o'
   456  00FF27  6D                 	db	109	;'m'
   457  00FF28  70                 	db	112	;'p'
   458  00FF29  69                 	db	105	;'i'
   459  00FF2A  6C                 	db	108	;'l'
   460  00FF2B  65                 	db	101	;'e'
   461  00FF2C  64                 	db	100	;'d'
   462  00FF2D  20                 	db	32
   463  00FF2E  6F                 	db	111	;'o'
   464  00FF2F  6E                 	db	110	;'n'
   465  00FF30  20                 	db	32
   466  00FF31  25                 	db	37
   467  00FF32  73                 	db	115	;'s'
   468  00FF33  20                 	db	32
   469  00FF34  61                 	db	97	;'a'
   470  00FF35  74                 	db	116	;'t'
   471  00FF36  20                 	db	32
   472  00FF37  25                 	db	37
   473  00FF38  73                 	db	115	;'s'
   474  00FF39  20                 	db	32
   475  00FF3A  62                 	db	98	;'b'
   476  00FF3B  79                 	db	121	;'y'
   477  00FF3C  20                 	db	32
   478  00FF3D  58                 	db	88	;'X'
   479  00FF3E  43                 	db	67	;'C'
   480  00FF3F  38                 	db	56	;'8'
   481  00FF40  20                 	db	32
   482  00FF41  76                 	db	118	;'v'
   483  00FF42  65                 	db	101	;'e'
   484  00FF43  72                 	db	114	;'r'
   485  00FF44  73                 	db	115	;'s'
   486  00FF45  69                 	db	105	;'i'
   487  00FF46  6F                 	db	111	;'o'
   488  00FF47  6E                 	db	110	;'n'
   489  00FF48  20                 	db	32
   490  00FF49  25                 	db	37
   491  00FF4A  75                 	db	117	;'u'
   492  00FF4B  0D                 	db	13
   493  00FF4C  0A                 	db	10
   494  00FF4D  0A                 	db	10
   495  00FF4E  00                 	db	0
   496  00FF4F                     STR_9:
   497                           
   498                           ; BSR set to: 0
   499  00FF4F  0D                 	db	13
   500  00FF50  49                 	db	73	;'I'
   501  00FF51  6E                 	db	110	;'n'
   502  00FF52  69                 	db	105	;'i'
   503  00FF53  74                 	db	116	;'t'
   504  00FF54  61                 	db	97	;'a'
   505  00FF55  6C                 	db	108	;'l'
   506  00FF56  69                 	db	105	;'i'
   507  00FF57  73                 	db	115	;'s'
   508  00FF58  61                 	db	97	;'a'
   509  00FF59  74                 	db	116	;'t'
   510  00FF5A  69                 	db	105	;'i'
   511  00FF5B  6F                 	db	111	;'o'
   512  00FF5C  6E                 	db	110	;'n'
   513  00FF5D  20                 	db	32
   514  00FF5E  43                 	db	67	;'C'
   515  00FF5F  6F                 	db	111	;'o'
   516  00FF60  6D                 	db	109	;'m'
   517  00FF61  70                 	db	112	;'p'
   518  00FF62  6C                 	db	108	;'l'
   519  00FF63  65                 	db	101	;'e'
   520  00FF64  74                 	db	116	;'t'
   521  00FF65  65                 	db	101	;'e'
   522  00FF66  20                 	db	32
   523  00FF67  2D                 	db	45
   524  00FF68  20                 	db	32
   525  00FF69  52                 	db	82	;'R'
   526  00FF6A  65                 	db	101	;'e'
   527  00FF6B  61                 	db	97	;'a'
   528  00FF6C  64                 	db	100	;'d'
   529  00FF6D  79                 	db	121	;'y'
   530  00FF6E  0D                 	db	13
   531  00FF6F  0A                 	db	10
   532  00FF70  0A                 	db	10
   533  00FF71  00                 	db	0
   534  00FF72                     STR_10:
   535                           
   536                           ; BSR set to: 0
   537  00FF72  0D                 	db	13
   538  00FF73  0A                 	db	10
   539  00FF74  4D                 	db	77	;'M'
   540  00FF75  6F                 	db	111	;'o'
   541  00FF76  64                 	db	100	;'d'
   542  00FF77  62                 	db	98	;'b'
   543  00FF78  75                 	db	117	;'u'
   544  00FF79  73                 	db	115	;'s'
   545  00FF7A  20                 	db	32
   546  00FF7B  44                 	db	68	;'D'
   547  00FF7C  61                 	db	97	;'a'
   548  00FF7D  74                 	db	116	;'t'
   549  00FF7E  61                 	db	97	;'a'
   550  00FF7F  20                 	db	32
   551  00FF80  43                 	db	67	;'C'
   552  00FF81  61                 	db	97	;'a'
   553  00FF82  70                 	db	112	;'p'
   554  00FF83  74                 	db	116	;'t'
   555  00FF84  75                 	db	117	;'u'
   556  00FF85  72                 	db	114	;'r'
   557  00FF86  65                 	db	101	;'e'
   558  00FF87  20                 	db	32
   559  00FF88  43                 	db	67	;'C'
   560  00FF89  6F                 	db	111	;'o'
   561  00FF8A  6D                 	db	109	;'m'
   562  00FF8B  70                 	db	112	;'p'
   563  00FF8C  6C                 	db	108	;'l'
   564  00FF8D  65                 	db	101	;'e'
   565  00FF8E  74                 	db	116	;'t'
   566  00FF8F  65                 	db	101	;'e'
   567  00FF90  3A                 	db	58	;':'
   568  00FF91  0D                 	db	13
   569  00FF92  0A                 	db	10
   570  00FF93  00                 	db	0
   571  00FF94                     STR_11:
   572                           
   573                           ; BSR set to: 0
   574  00FF94  20                 	db	32
   575  00FF95  20                 	db	32
   576  00FF96  20                 	db	32
   577  00FF97  42                 	db	66	;'B'
   578  00FF98  79                 	db	121	;'y'
   579  00FF99  74                 	db	116	;'t'
   580  00FF9A  65                 	db	101	;'e'
   581  00FF9B  20                 	db	32
   582  00FF9C  4E                 	db	78	;'N'
   583  00FF9D  75                 	db	117	;'u'
   584  00FF9E  6D                 	db	109	;'m'
   585  00FF9F  3A                 	db	58	;':'
   586  00FFA0  20                 	db	32
   587  00FFA1  25                 	db	37
   588  00FFA2  69                 	db	105	;'i'
   589  00FFA3  20                 	db	32
   590  00FFA4  56                 	db	86	;'V'
   591  00FFA5  61                 	db	97	;'a'
   592  00FFA6  6C                 	db	108	;'l'
   593  00FFA7  3A                 	db	58	;':'
   594  00FFA8  20                 	db	32
   595  00FFA9  30                 	db	48	;'0'
   596  00FFAA  78                 	db	120	;'x'
   597  00FFAB  25                 	db	37
   598  00FFAC  30                 	db	48	;'0'
   599  00FFAD  32                 	db	50	;'2'
   600  00FFAE  78                 	db	120	;'x'
   601  00FFAF  20                 	db	32
   602  00FFB0  0D                 	db	13
   603  00FFB1  0A                 	db	10
   604  00FFB2  00                 	db	0
   605  00FFB3                     STR_6:
   606                           
   607                           ; BSR set to: 0
   608  00FFB3  0D                 	db	13
   609  00FFB4  46                 	db	70	;'F'
   610  00FFB5  75                 	db	117	;'u'
   611  00FFB6  6E                 	db	110	;'n'
   612  00FFB7  63                 	db	99	;'c'
   613  00FFB8  74                 	db	116	;'t'
   614  00FFB9  69                 	db	105	;'i'
   615  00FFBA  6F                 	db	111	;'o'
   616  00FFBB  6E                 	db	110	;'n'
   617  00FFBC  20                 	db	32
   618  00FFBD  43                 	db	67	;'C'
   619  00FFBE  6F                 	db	111	;'o'
   620  00FFBF  64                 	db	100	;'d'
   621  00FFC0  65                 	db	101	;'e'
   622  00FFC1  73                 	db	115	;'s'
   623  00FFC2  20                 	db	32
   624  00FFC3  53                 	db	83	;'S'
   625  00FFC4  75                 	db	117	;'u'
   626  00FFC5  70                 	db	112	;'p'
   627  00FFC6  70                 	db	112	;'p'
   628  00FFC7  6F                 	db	111	;'o'
   629  00FFC8  72                 	db	114	;'r'
   630  00FFC9  74                 	db	116	;'t'
   631  00FFCA  65                 	db	101	;'e'
   632  00FFCB  64                 	db	100	;'d'
   633  00FFCC  3A                 	db	58	;':'
   634  00FFCD  0D                 	db	13
   635  00FFCE  0A                 	db	10
   636  00FFCF  00                 	db	0
   637  00FFD0                     STR_2:
   638                           
   639                           ; BSR set to: 0
   640  00FFD0  0D                 	db	13
   641  00FFD1  43                 	db	67	;'C'
   642  00FFD2  61                 	db	97	;'a'
   643  00FFD3  72                 	db	114	;'r'
   644  00FFD4  64                 	db	100	;'d'
   645  00FFD5  20                 	db	32
   646  00FFD6  53                 	db	83	;'S'
   647  00FFD7  65                 	db	101	;'e'
   648  00FFD8  72                 	db	114	;'r'
   649  00FFD9  20                 	db	32
   650  00FFDA  4E                 	db	78	;'N'
   651  00FFDB  6F                 	db	111	;'o'
   652  00FFDC  2E                 	db	46
   653  00FFDD  20                 	db	32
   654  00FFDE  78                 	db	120	;'x'
   655  00FFDF  78                 	db	120	;'x'
   656  00FFE0  78                 	db	120	;'x'
   657  00FFE1  78                 	db	120	;'x'
   658  00FFE2  78                 	db	120	;'x'
   659  00FFE3  78                 	db	120	;'x'
   660  00FFE4  78                 	db	120	;'x'
   661  00FFE5  20                 	db	32
   662  00FFE6  0D                 	db	13
   663  00FFE7  0A                 	db	10
   664  00FFE8  00                 	db	0
   665  00FFE9                     STR_4:
   666                           
   667                           ; BSR set to: 0
   668  00FFE9  4D                 	db	77	;'M'
   669  00FFEA  61                 	db	97	;'a'
   670  00FFEB  72                 	db	114	;'r'
   671  00FFEC  20                 	db	32
   672  00FFED  20                 	db	32
   673  00FFEE  32                 	db	50	;'2'
   674  00FFEF  20                 	db	32
   675  00FFF0  32                 	db	50	;'2'
   676  00FFF1  30                 	db	48	;'0'
   677  00FFF2  32                 	db	50	;'2'
   678  00FFF3  31                 	db	49	;'1'
   679  00FFF4  00                 	db	0
   680  00FFF5                     STR_5:
   681                           
   682                           ; BSR set to: 0
   683  00FFF5  32                 	db	50	;'2'
   684  00FFF6  31                 	db	49	;'1'
   685  00FFF7  3A                 	db	58	;':'
   686  00FFF8  34                 	db	52	;'4'
   687  00FFF9  33                 	db	51	;'3'
   688  00FFFA  3A                 	db	58	;':'
   689  00FFFB  31                 	db	49	;'1'
   690  00FFFC  30                 	db	48	;'0'
   691  00FFFD  00                 	db	0
   692                           
   693                           ; #config settings
   694  00FFFE  00                 	db	0	; dummy byte at the end
   695  0000                     
   696                           	psect	cinit
   697  001E92                     __pcinit:
   698                           	opt callstack 0
   699  001E92                     start_initialization:
   700                           	opt callstack 0
   701  001E92                     __initialization:
   702                           	opt callstack 0
   703                           
   704                           ; Initialize objects allocated to BANK0 (20 bytes)
   705                           ; load TBLPTR registers with __pidataBANK0
   706  001E92  0ED4               	movlw	low __pidataBANK0
   707  001E94  6EF6               	movwf	tblptrl,c
   708  001E96  0E22               	movlw	high __pidataBANK0
   709  001E98  6EF7               	movwf	tblptrh,c
   710  001E9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   711  001E9C  6EF8               	movwf	tblptru,c
   712  001E9E  EE00  F0E2         	lfsr	0,__pdataBANK0
   713  001EA2  EE10 F014          	lfsr	1,20
   714  001EA6                     copy_data0:
   715  001EA6  0009               	tblrd		*+
   716  001EA8  CFF5 FFEE          	movff	tablat,postinc0
   717  001EAC  50E5               	movf	postdec1,w,c
   718  001EAE  50E1               	movf	fsr1l,w,c
   719  001EB0  E1FA               	bnz	copy_data0
   720                           
   721                           ; Clear objects allocated to BANK2 (200 bytes)
   722  001EB2  EE02  F000         	lfsr	0,__pbssBANK2
   723  001EB6  0EC8               	movlw	200
   724  001EB8                     clear_0:
   725  001EB8  6AEE               	clrf	postinc0,c
   726  001EBA  06E8               	decf	wreg,f,c
   727  001EBC  E1FD               	bnz	clear_0
   728                           
   729                           ; Clear objects allocated to BANK1 (232 bytes)
   730  001EBE  EE01  F000         	lfsr	0,__pbssBANK1
   731  001EC2  0EE8               	movlw	232
   732  001EC4                     clear_1:
   733  001EC4  6AEE               	clrf	postinc0,c
   734  001EC6  06E8               	decf	wreg,f,c
   735  001EC8  E1FD               	bnz	clear_1
   736                           
   737                           ; Clear objects allocated to BANK0 (64 bytes)
   738  001ECA  EE00  F060         	lfsr	0,__pbssBANK0
   739  001ECE  0E40               	movlw	64
   740  001ED0                     clear_2:
   741  001ED0  6AEE               	clrf	postinc0,c
   742  001ED2  06E8               	decf	wreg,f,c
   743  001ED4  E1FD               	bnz	clear_2
   744                           
   745                           ; Clear objects allocated to COMRAM (4 bytes)
   746  001ED6  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   747  001ED8  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   748  001EDA  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   749  001EDC  6A57               	clrf	__pbssCOMRAM& (0+255),c
   750  001EDE                     end_of_initialization:
   751                           	opt callstack 0
   752  001EDE                     __end_of__initialization:
   753                           	opt callstack 0
   754  001EDE  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   755  001EE0  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   756  001EE2  0100               	movlb	0
   757  001EE4  EFBE  F00A         	goto	_main	;jump to C main() function
   758                           
   759                           	psect	bssCOMRAM
   760  000057                     __pbssCOMRAM:
   761                           	opt callstack 0
   762  000057                     _flags:
   763                           	opt callstack 0
   764  000057                     	ds	2
   765  000059                     _eusart1RxHead:
   766                           	opt callstack 0
   767  000059                     	ds	1
   768  00005A                     _eusart2RxHead:
   769                           	opt callstack 0
   770  00005A                     	ds	1
   771                           
   772                           	psect	bssBANK0
   773  000060                     __pbssBANK0:
   774                           	opt callstack 0
   775  000060                     _eusart1TxBuffer:
   776                           	opt callstack 0
   777  000060                     	ds	16
   778  000070                     _eusart2RxStatusBuffer:
   779                           	opt callstack 0
   780  000070                     	ds	8
   781  000078                     _eusart2RxBuffer:
   782                           	opt callstack 0
   783  000078                     	ds	8
   784  000080                     _eusart2TxBuffer:
   785                           	opt callstack 0
   786  000080                     	ds	8
   787  000088                     _nout:
   788                           	opt callstack 0
   789  000088                     	ds	2
   790  00008A                     _width:
   791                           	opt callstack 0
   792  00008A                     	ds	2
   793  00008C                     _prec:
   794                           	opt callstack 0
   795  00008C                     	ds	2
   796  00008E                     _ModDataCnt:
   797                           	opt callstack 0
   798  00008E                     	ds	2
   799  000090                     _ByteNum:
   800                           	opt callstack 0
   801  000090                     	ds	2
   802  000092                     _loop:
   803                           	opt callstack 0
   804  000092                     	ds	2
   805  000094                     _rxStatus:
   806                           	opt callstack 0
   807  000094                     	ds	1
   808  000095                     _Debug:
   809                           	opt callstack 0
   810  000095                     	ds	1
   811  000096                     _eusart1RxLastError:
   812                           	opt callstack 0
   813  000096                     	ds	1
   814  000097                     _eusart1RxCount:
   815                           	opt callstack 0
   816  000097                     	ds	1
   817  000098                     _eusart1RxTail:
   818                           	opt callstack 0
   819  000098                     	ds	1
   820  000099                     _eusart1TxTail:
   821                           	opt callstack 0
   822  000099                     	ds	1
   823  00009A                     _eusart1TxHead:
   824                           	opt callstack 0
   825  00009A                     	ds	1
   826  00009B                     _eusart2RxLastError:
   827                           	opt callstack 0
   828  00009B                     	ds	1
   829  00009C                     _eusart2RxCount:
   830                           	opt callstack 0
   831  00009C                     	ds	1
   832  00009D                     _eusart2RxTail:
   833                           	opt callstack 0
   834  00009D                     	ds	1
   835  00009E                     _eusart2TxTail:
   836                           	opt callstack 0
   837  00009E                     	ds	1
   838  00009F                     _eusart2TxHead:
   839                           	opt callstack 0
   840  00009F                     	ds	1
   841                           
   842                           	psect	dataBANK0
   843  0000E2                     __pdataBANK0:
   844                           	opt callstack 0
   845  0000E2                     _data1:
   846                           	opt callstack 0
   847  0000E2                     	ds	11
   848  0000ED                     stoa@F1139:
   849                           	opt callstack 0
   850  0000ED                     	ds	7
   851  0000F4                     _ExpectedBytes:
   852                           	opt callstack 0
   853  0000F4                     	ds	2
   854                           
   855                           	psect	bssBANK1
   856  000100                     __pbssBANK1:
   857                           	opt callstack 0
   858  000100                     _ModbusData:
   859                           	opt callstack 0
   860  000100                     	ds	100
   861  000164                     _eusart1RxStatusBuffer:
   862                           	opt callstack 0
   863  000164                     	ds	100
   864  0001C8                     _dbuf:
   865                           	opt callstack 0
   866  0001C8                     	ds	32
   867                           
   868                           	psect	bssBANK2
   869  000200                     __pbssBANK2:
   870                           	opt callstack 0
   871  000200                     _rxData:
   872                           	opt callstack 0
   873  000200                     	ds	100
   874  000264                     _eusart1RxBuffer:
   875                           	opt callstack 0
   876  000264                     	ds	100
   877                           
   878                           	psect	cstackBANK0
   879  0000A0                     __pcstackBANK0:
   880                           	opt callstack 0
   881  0000A0                     vfpfcnvrt@ll:
   882                           	opt callstack 0
   883                           
   884                           ; 8 bytes @ 0x0
   885  0000A0                     	ds	8
   886  0000A8                     vfpfcnvrt@cp:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x8
   890  0000A8                     	ds	2
   891  0000AA                     vfpfcnvrt@done:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0xA
   895  0000AA                     	ds	2
   896  0000AC                     _vfpfcnvrt$1265:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0xC
   900  0000AC                     	ds	2
   901  0000AE                     vfpfcnvrt@c:
   902                           	opt callstack 0
   903                           
   904                           ; 1 bytes @ 0xE
   905  0000AE                     	ds	1
   906  0000AF                     vfpfcnvrt@llu:
   907                           	opt callstack 0
   908                           
   909                           ; 8 bytes @ 0xF
   910  0000AF                     	ds	8
   911  0000B7                     ?_vfprintf:
   912                           	opt callstack 0
   913  0000B7                     vfprintf@fp:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x17
   917  0000B7                     	ds	2
   918  0000B9                     vfprintf@fmt:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x19
   922  0000B9                     	ds	2
   923  0000BB                     vfprintf@ap:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x1B
   927  0000BB                     	ds	2
   928  0000BD                     ?_printf:
   929                           	opt callstack 0
   930  0000BD                     printf@fmt:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x1D
   934  0000BD                     	ds	10
   935  0000C7                     printf@ap:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x27
   939  0000C7                     	ds	2
   940  0000C9                     PrintModbus@i:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x29
   944  0000C9                     	ds	2
   945  0000CB                     main@RXStat:
   946                           	opt callstack 0
   947                           
   948                           ; 1 bytes @ 0x2B
   949  0000CB                     	ds	1
   950                           
   951                           	psect	cstackCOMRAM
   952  000001                     __pcstackCOMRAM:
   953                           	opt callstack 0
   954  000001                     ??_INTERRUPT_InterruptManager:
   955  000001                     
   956                           ; 1 bytes @ 0x0
   957  000001                     	ds	4
   958  000005                     ??_ClearRxBuff:
   959  000005                     ??_AddRxBuffToModBus:
   960  000005                     ?_strlen:
   961                           	opt callstack 0
   962  000005                     ?_isupper:
   963                           	opt callstack 0
   964  000005                     ?_isalpha:
   965                           	opt callstack 0
   966  000005                     ?_isdigit:
   967                           	opt callstack 0
   968  000005                     ?_isspace:
   969                           	opt callstack 0
   970  000005                     ?_islower:
   971                           	opt callstack 0
   972  000005                     ?___wmul:
   973                           	opt callstack 0
   974  000005                     ?___aodiv:
   975                           	opt callstack 0
   976  000005                     ?___aomod:
   977                           	opt callstack 0
   978  000005                     ?___lodiv:
   979                           	opt callstack 0
   980  000005                     ?___lomod:
   981                           	opt callstack 0
   982  000005                     EUSART2_Write@txData:
   983                           	opt callstack 0
   984  000005                     EUSART1_Read@readValue:
   985                           	opt callstack 0
   986  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   987                           	opt callstack 0
   988  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   989                           	opt callstack 0
   990  000005                     EUSART2_SetErrorHandler@interruptHandler:
   991                           	opt callstack 0
   992  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   993                           	opt callstack 0
   994  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   995                           	opt callstack 0
   996  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   997                           	opt callstack 0
   998  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   999                           	opt callstack 0
  1000  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1001                           	opt callstack 0
  1002  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1003                           	opt callstack 0
  1004  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1005                           	opt callstack 0
  1006  000005                     ___wmul@multiplier:
  1007                           	opt callstack 0
  1008  000005                     isalpha@c:
  1009                           	opt callstack 0
  1010  000005                     isdigit@c:
  1011                           	opt callstack 0
  1012  000005                     isspace@c:
  1013                           	opt callstack 0
  1014  000005                     isupper@c:
  1015                           	opt callstack 0
  1016  000005                     strlen@s:
  1017                           	opt callstack 0
  1018  000005                     islower@c:
  1019                           	opt callstack 0
  1020  000005                     ___aodiv@dividend:
  1021                           	opt callstack 0
  1022  000005                     ___aomod@dividend:
  1023                           	opt callstack 0
  1024  000005                     ___lodiv@dividend:
  1025                           	opt callstack 0
  1026  000005                     ___lomod@dividend:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x4
  1030  000005                     	ds	1
  1031  000006                     putch@txData:
  1032                           	opt callstack 0
  1033  000006                     ClearRxBuff@i:
  1034                           	opt callstack 0
  1035  000006                     AddRxBuffToModBus@i:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x5
  1039  000006                     	ds	1
  1040  000007                     ??_isupper:
  1041  000007                     ??_isalpha:
  1042  000007                     ??_isdigit:
  1043  000007                     ??_isspace:
  1044  000007                     ??_islower:
  1045  000007                     ___wmul@multiplicand:
  1046                           	opt callstack 0
  1047  000007                     fputc@c:
  1048                           	opt callstack 0
  1049  000007                     strlen@a:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x6
  1053  000007                     	ds	2
  1054  000009                     ___wmul@product:
  1055                           	opt callstack 0
  1056  000009                     fputc@fp:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x8
  1060  000009                     	ds	2
  1061  00000B                     ??_fputc:
  1062  00000B                     ?_toupper:
  1063                           	opt callstack 0
  1064  00000B                     _isspace$1752:
  1065                           	opt callstack 0
  1066  00000B                     toupper@c:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xA
  1070  00000B                     	ds	1
  1071  00000C                     ?_atoi:
  1072                           	opt callstack 0
  1073  00000C                     atoi@s:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xB
  1077  00000C                     	ds	1
  1078  00000D                     ??_toupper:
  1079  00000D                     ___aodiv@divisor:
  1080                           	opt callstack 0
  1081  00000D                     ___aomod@divisor:
  1082                           	opt callstack 0
  1083  00000D                     ___lodiv@divisor:
  1084                           	opt callstack 0
  1085  00000D                     ___lomod@divisor:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 8 bytes @ 0xC
  1089  00000D                     	ds	1
  1090  00000E                     ??_atoi:
  1091                           
  1092                           ; 1 bytes @ 0xD
  1093  00000E                     	ds	2
  1094  000010                     ?_stoa:
  1095                           	opt callstack 0
  1096  000010                     stoa@fp:
  1097                           	opt callstack 0
  1098  000010                     fputs@s:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0xF
  1102  000010                     	ds	1
  1103  000011                     _toupper$1816:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x10
  1107  000011                     	ds	1
  1108  000012                     stoa@s:
  1109                           	opt callstack 0
  1110  000012                     atoi@neg:
  1111                           	opt callstack 0
  1112  000012                     fputs@fp:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x11
  1116  000012                     	ds	2
  1117  000014                     ??_stoa:
  1118  000014                     fputs@c:
  1119                           	opt callstack 0
  1120  000014                     _atoi$1725:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x13
  1124  000014                     	ds	1
  1125  000015                     ___aodiv@counter:
  1126                           	opt callstack 0
  1127  000015                     ___aomod@counter:
  1128                           	opt callstack 0
  1129  000015                     ___lomod@counter:
  1130                           	opt callstack 0
  1131  000015                     fputs@i:
  1132                           	opt callstack 0
  1133  000015                     stoa@nuls:
  1134                           	opt callstack 0
  1135  000015                     ___lodiv@quotient:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 8 bytes @ 0x14
  1139  000015                     	ds	1
  1140  000016                     ___aodiv@sign:
  1141                           	opt callstack 0
  1142  000016                     ___aomod@sign:
  1143                           	opt callstack 0
  1144  000016                     _atoi$1727:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x15
  1148  000016                     	ds	1
  1149  000017                     ?_abs:
  1150                           	opt callstack 0
  1151  000017                     ?_pad:
  1152                           	opt callstack 0
  1153  000017                     pad@fp:
  1154                           	opt callstack 0
  1155  000017                     abs@a:
  1156                           	opt callstack 0
  1157  000017                     ___aodiv@quotient:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 8 bytes @ 0x16
  1161  000017                     	ds	1
  1162  000018                     _atoi$1726:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x17
  1166  000018                     	ds	1
  1167  000019                     ??_abs:
  1168  000019                     pad@buf:
  1169                           	opt callstack 0
  1170  000019                     atoi@n:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x18
  1174  000019                     	ds	2
  1175  00001B                     pad@p:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x1A
  1179  00001B                     	ds	1
  1180  00001C                     stoa@i:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x1B
  1184  00001C                     	ds	1
  1185  00001D                     ??_pad:
  1186  00001D                     ___lodiv@counter:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1C
  1190  00001D                     	ds	1
  1191  00001E                     pad@i:
  1192                           	opt callstack 0
  1193  00001E                     stoa@w:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x1D
  1197  00001E                     	ds	2
  1198  000020                     pad@w:
  1199                           	opt callstack 0
  1200  000020                     stoa@cp:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x1F
  1204  000020                     	ds	2
  1205  000022                     ?_dtoa:
  1206                           	opt callstack 0
  1207  000022                     ?_utoa:
  1208                           	opt callstack 0
  1209  000022                     ?_xtoa:
  1210                           	opt callstack 0
  1211  000022                     dtoa@fp:
  1212                           	opt callstack 0
  1213  000022                     stoa@p:
  1214                           	opt callstack 0
  1215  000022                     utoa@fp:
  1216                           	opt callstack 0
  1217  000022                     xtoa@fp:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x21
  1221  000022                     	ds	2
  1222  000024                     stoa@l:
  1223                           	opt callstack 0
  1224  000024                     dtoa@d:
  1225                           	opt callstack 0
  1226  000024                     utoa@d:
  1227                           	opt callstack 0
  1228  000024                     xtoa@d:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x23
  1232  000024                     	ds	8
  1233  00002C                     ??_dtoa:
  1234  00002C                     ??_utoa:
  1235  00002C                     xtoa@x:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 1 bytes @ 0x2B
  1239  00002C                     	ds	1
  1240  00002D                     ??_xtoa:
  1241                           
  1242                           ; 1 bytes @ 0x2C
  1243  00002D                     	ds	7
  1244  000034                     _dtoa$1221:
  1245                           	opt callstack 0
  1246  000034                     utoa@p:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x33
  1250  000034                     	ds	1
  1251  000035                     _xtoa$1250:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x34
  1255  000035                     	ds	1
  1256  000036                     dtoa@p:
  1257                           	opt callstack 0
  1258  000036                     utoa@w:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x35
  1262  000036                     	ds	1
  1263  000037                     _xtoa$1251:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x36
  1267  000037                     	ds	1
  1268  000038                     dtoa@w:
  1269                           	opt callstack 0
  1270  000038                     utoa@n:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 8 bytes @ 0x37
  1274  000038                     	ds	1
  1275  000039                     xtoa@p:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x38
  1279  000039                     	ds	1
  1280  00003A                     dtoa@s:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x39
  1284  00003A                     	ds	1
  1285  00003B                     xtoa@w:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x3A
  1289  00003B                     	ds	1
  1290  00003C                     dtoa@n:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 8 bytes @ 0x3B
  1294  00003C                     	ds	1
  1295  00003D                     xtoa@n:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 8 bytes @ 0x3C
  1299  00003D                     	ds	3
  1300  000040                     utoa@i:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x3F
  1304  000040                     	ds	4
  1305  000044                     dtoa@i:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x43
  1309  000044                     	ds	1
  1310  000045                     xtoa@i:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x44
  1314  000045                     	ds	2
  1315  000047                     xtoa@c:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x46
  1319  000047                     	ds	2
  1320  000049                     ?_vfpfcnvrt:
  1321                           	opt callstack 0
  1322  000049                     vfpfcnvrt@fp:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x48
  1326  000049                     	ds	2
  1327  00004B                     vfpfcnvrt@fmt:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x4A
  1331  00004B                     	ds	2
  1332  00004D                     vfpfcnvrt@ap:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x4C
  1336  00004D                     	ds	2
  1337  00004F                     ??_vfpfcnvrt:
  1338                           
  1339                           ; 1 bytes @ 0x4E
  1340  00004F                     	ds	4
  1341  000053                     vfprintf@cfmt:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x52
  1345  000053                     	ds	2
  1346  000055                     ??_PrintModbus:
  1347                           
  1348                           ; 1 bytes @ 0x54
  1349  000055                     	ds	1
  1350  000056                     ??_main:
  1351                           
  1352                           ; 1 bytes @ 0x55
  1353  000056                     	ds	1
  1354                           
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 120 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  RXStat          1   43[BANK0 ] _Bool 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels required when called:   14
  1380 ;; This function calls:
  1381 ;;		_AddRxBuffToModBus
  1382 ;;		_ClearRxBuff
  1383 ;;		_EUSART1_Read
  1384 ;;		_EUSART1_is_rx_ready
  1385 ;;		_InitialiseString
  1386 ;;		_PrintModbus
  1387 ;;		_RXMode
  1388 ;;		_SYSTEM_Initialize
  1389 ;; This function is called by:
  1390 ;;		Startup code after reset
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text0
  1395  00157C                     __ptext0:
  1396                           	opt callstack 0
  1397  00157C                     _main:
  1398                           	opt callstack 17
  1399  00157C                     
  1400                           ;main.c: 123:     SYSTEM_Initialize();
  1401  00157C  EC45  F011         	call	_SYSTEM_Initialize	;wreg free
  1402  001580                     
  1403                           ;main.c: 130:     (INTCONbits.GIE = 1);
  1404  001580  8EF2               	bsf	242,7,c	;volatile
  1405  001582                     
  1406                           ;main.c: 136:     (INTCONbits.PEIE = 1);
  1407  001582  8CF2               	bsf	242,6,c	;volatile
  1408  001584  9883               	bcf	131,4,c	;volatile
  1409  001586  9A83               	bcf	131,5,c	;volatile
  1410  001588  9C83               	bcf	131,6,c	;volatile
  1411  00158A  9E83               	bcf	131,7,c	;volatile
  1412  00158C                     
  1413                           ;main.c: 146:     InitialiseString();
  1414  00158C  EC15  F00E         	call	_InitialiseString	;wreg free
  1415  001590                     
  1416                           ;main.c: 149:     RXMode();
  1417  001590  ECAF  F011         	call	_RXMode	;wreg free
  1418  001594                     
  1419                           ;main.c: 150:     ClearRxBuff();
  1420  001594  ECC5  F00F         	call	_ClearRxBuff	;wreg free
  1421  001598                     
  1422                           ;main.c: 152:     _Bool RXStat = 0;
  1423  001598  0E00               	movlw	0
  1424  00159A  0100               	movlb	0	; () banked
  1425  00159C  6FCB               	movwf	main@RXStat& (0+255),b
  1426  00159E                     l3982:
  1427                           
  1428                           ;main.c: 155:     {;main.c: 156:         if(EUSART1_is_rx_ready()){
  1429  00159E  EC5E  F011         	call	_EUSART1_is_rx_ready	;wreg free
  1430  0015A2  0900               	iorlw	0
  1431  0015A4  B4D8               	btfsc	status,2,c
  1432  0015A6  EFD7  F00A         	goto	u3551
  1433  0015AA  EFD9  F00A         	goto	u3550
  1434  0015AE                     u3551:
  1435  0015AE  EFF6  F00A         	goto	l3994
  1436  0015B2                     u3550:
  1437  0015B2  EFE9  F00A         	goto	l3990
  1438  0015B6                     l3986:
  1439                           
  1440                           ;main.c: 160:                 rxData[ByteNum] = EUSART1_Read();
  1441  0015B6  EC1D  F00F         	call	_EUSART1_Read	;wreg free
  1442  0015BA  6E56               	movwf	??_main^0,c
  1443  0015BC  0E00               	movlw	low _rxData
  1444  0015BE  0100               	movlb	0	; () banked
  1445  0015C0  2590               	addwf	_ByteNum& (0+255),w,b
  1446  0015C2  6ED9               	movwf	fsr2l,c
  1447  0015C4  0E02               	movlw	high _rxData
  1448  0015C6  2191               	addwfc	(_ByteNum+1)& (0+255),w,b
  1449  0015C8  6EDA               	movwf	fsr2h,c
  1450  0015CA  C056  FFDF         	movff	??_main,indf2
  1451  0015CE                     
  1452                           ; BSR set to: 0
  1453                           ;main.c: 161:                 ByteNum++;
  1454  0015CE  4B90               	infsnz	_ByteNum& (0+255),f,b
  1455  0015D0  2B91               	incf	(_ByteNum+1)& (0+255),f,b
  1456  0015D2                     l3990:
  1457                           
  1458                           ;main.c: 158:             while(EUSART1_is_rx_ready()){
  1459  0015D2  EC5E  F011         	call	_EUSART1_is_rx_ready	;wreg free
  1460  0015D6  0900               	iorlw	0
  1461  0015D8  A4D8               	btfss	status,2,c
  1462  0015DA  EFF1  F00A         	goto	u3561
  1463  0015DE  EFF3  F00A         	goto	u3560
  1464  0015E2                     u3561:
  1465  0015E2  EFDB  F00A         	goto	l3986
  1466  0015E6                     u3560:
  1467  0015E6                     
  1468                           ;main.c: 164:             RXStat = 1;
  1469  0015E6  0E01               	movlw	1
  1470  0015E8  0100               	movlb	0	; () banked
  1471  0015EA  6FCB               	movwf	main@RXStat& (0+255),b
  1472  0015EC                     l3994:
  1473                           
  1474                           ;main.c: 167:         if(RXStat ==1){
  1475  0015EC  0100               	movlb	0	; () banked
  1476  0015EE  05CB               	decf	main@RXStat& (0+255),w,b
  1477  0015F0  A4D8               	btfss	status,2,c
  1478  0015F2  EFFD  F00A         	goto	u3571
  1479  0015F6  EFFF  F00A         	goto	u3570
  1480  0015FA                     u3571:
  1481  0015FA  EF1B  F00B         	goto	l4006
  1482  0015FE                     u3570:
  1483  0015FE                     
  1484                           ; BSR set to: 0
  1485                           ;main.c: 170:             AddRxBuffToModBus();
  1486  0015FE  ECB6  F00C         	call	_AddRxBuffToModBus	;wreg free
  1487  001602                     
  1488                           ;main.c: 171:             ClearRxBuff();
  1489  001602  ECC5  F00F         	call	_ClearRxBuff	;wreg free
  1490  001606                     
  1491                           ;main.c: 172:             RXStat = 0;
  1492  001606  0E00               	movlw	0
  1493  001608  0100               	movlb	0	; () banked
  1494  00160A  6FCB               	movwf	main@RXStat& (0+255),b
  1495  00160C                     
  1496                           ; BSR set to: 0
  1497                           ;main.c: 173:             ByteNum = 0;
  1498  00160C  0E00               	movlw	0
  1499  00160E  6F91               	movwf	(_ByteNum+1)& (0+255),b
  1500  001610  0E00               	movlw	0
  1501  001612  6F90               	movwf	_ByteNum& (0+255),b
  1502  001614                     
  1503                           ; BSR set to: 0
  1504  001614  B883               	btfsc	131,4,c	;volatile
  1505  001616  EF0F  F00B         	goto	u3581
  1506  00161A  EF12  F00B         	goto	u3580
  1507  00161E                     u3581:
  1508  00161E  0E01               	movlw	1
  1509  001620  EF13  F00B         	goto	u3586
  1510  001624                     u3580:
  1511  001624  0E00               	movlw	0
  1512  001626                     u3586:
  1513  001626  0AFF               	xorlw	255
  1514  001628  6E56               	movwf	??_main^0,c
  1515  00162A  3A56               	swapf	??_main^0,f,c
  1516  00162C  5083               	movf	131,w,c	;volatile
  1517  00162E  1856               	xorwf	??_main^0,w,c
  1518  001630  0BEF               	andlw	-17
  1519  001632  1856               	xorwf	??_main^0,w,c
  1520  001634  6E83               	movwf	131,c	;volatile
  1521  001636                     l4006:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;main.c: 177:         if(ModDataCnt == ExpectedBytes){
  1525  001636  51F4               	movf	_ExpectedBytes& (0+255),w,b
  1526  001638  198E               	xorwf	_ModDataCnt& (0+255),w,b
  1527  00163A  E107               	bnz	u3591
  1528  00163C  51F5               	movf	(_ExpectedBytes+1)& (0+255),w,b
  1529  00163E  198F               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  1530  001640  A4D8               	btfss	status,2,c
  1531  001642  EF25  F00B         	goto	u3591
  1532  001646  EF27  F00B         	goto	u3590
  1533  00164A                     u3591:
  1534  00164A  EFCF  F00A         	goto	l3982
  1535  00164E                     u3590:
  1536  00164E                     
  1537                           ; BSR set to: 0
  1538                           ;main.c: 178:             PrintModbus();
  1539  00164E  EC53  F00E         	call	_PrintModbus	;wreg free
  1540  001652  EFCF  F00A         	goto	l3982
  1541  001656  EF93  F000         	goto	start
  1542  00165A                     __end_of_main:
  1543                           	opt callstack 0
  1544                           
  1545 ;; *************** function _SYSTEM_Initialize *****************
  1546 ;; Defined at:
  1547 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    6
  1568 ;; This function calls:
  1569 ;;		_EUSART1_Initialize
  1570 ;;		_EUSART2_Initialize
  1571 ;;		_INTERRUPT_Initialize
  1572 ;;		_OSCILLATOR_Initialize
  1573 ;;		_PIN_MANAGER_Initialize
  1574 ;;		_PMD_Initialize
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text1
  1581  00228A                     __ptext1:
  1582                           	opt callstack 0
  1583  00228A                     _SYSTEM_Initialize:
  1584                           	opt callstack 24
  1585  00228A                     
  1586                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1587  00228A  ECBB  F011         	call	_INTERRUPT_Initialize	;wreg free
  1588  00228E                     
  1589                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1590  00228E  EC37  F011         	call	_PMD_Initialize	;wreg free
  1591  002292                     
  1592                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1593  002292  EC51  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1594  002296                     
  1595                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1596  002296  EC52  F011         	call	_OSCILLATOR_Initialize	;wreg free
  1597  00229A                     
  1598                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1599  00229A  ECD7  F00D         	call	_EUSART1_Initialize	;wreg free
  1600  00229E                     
  1601                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1602  00229E  EC98  F00D         	call	_EUSART2_Initialize	;wreg free
  1603  0022A2  0012               	return		;funcret
  1604  0022A4                     __end_of_SYSTEM_Initialize:
  1605                           	opt callstack 0
  1606                           
  1607 ;; *************** function _PMD_Initialize *****************
  1608 ;; Defined at:
  1609 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    4
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_SYSTEM_Initialize
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text2
  1638  00226E                     __ptext2:
  1639                           	opt callstack 0
  1640  00226E                     _PMD_Initialize:
  1641                           	opt callstack 25
  1642  00226E                     
  1643                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1644  00226E  0E00               	movlw	0
  1645  002270  010E               	movlb	14	; () banked
  1646  002272  6FE1               	movwf	225,b	;volatile
  1647                           
  1648                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1649  002274  0E00               	movlw	0
  1650  002276  6FE2               	movwf	226,b	;volatile
  1651                           
  1652                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1653  002278  0E00               	movlw	0
  1654  00227A  6FE3               	movwf	227,b	;volatile
  1655                           
  1656                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1657  00227C  0E00               	movlw	0
  1658  00227E  6FE4               	movwf	228,b	;volatile
  1659                           
  1660                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1661  002280  0E00               	movlw	0
  1662  002282  6FE5               	movwf	229,b	;volatile
  1663                           
  1664                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1665  002284  0E00               	movlw	0
  1666  002286  6FE6               	movwf	230,b	;volatile
  1667  002288                     
  1668                           ; BSR set to: 14
  1669  002288  0012               	return		;funcret
  1670  00228A                     __end_of_PMD_Initialize:
  1671                           	opt callstack 0
  1672                           
  1673 ;; *************** function _PIN_MANAGER_Initialize *****************
  1674 ;; Defined at:
  1675 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    4
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_SYSTEM_Initialize
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text3
  1704  001AA2                     __ptext3:
  1705                           	opt callstack 0
  1706  001AA2                     _PIN_MANAGER_Initialize:
  1707                           	opt callstack 25
  1708  001AA2                     
  1709                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1710  001AA2  0E00               	movlw	0
  1711  001AA4  6E87               	movwf	135,c	;volatile
  1712                           
  1713                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1714  001AA6  0E00               	movlw	0
  1715  001AA8  6E86               	movwf	134,c	;volatile
  1716                           
  1717                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1718  001AAA  0E00               	movlw	0
  1719  001AAC  6E83               	movwf	131,c	;volatile
  1720                           
  1721                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1722  001AAE  0E00               	movlw	0
  1723  001AB0  6E84               	movwf	132,c	;volatile
  1724                           
  1725                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1726  001AB2  0E00               	movlw	0
  1727  001AB4  6E85               	movwf	133,c	;volatile
  1728                           
  1729                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1730  001AB6  0E07               	movlw	7
  1731  001AB8  6E8C               	movwf	140,c	;volatile
  1732                           
  1733                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1734  001ABA  0E07               	movlw	7
  1735  001ABC  6E88               	movwf	136,c	;volatile
  1736                           
  1737                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1738  001ABE  0EBF               	movlw	191
  1739  001AC0  6E89               	movwf	137,c	;volatile
  1740                           
  1741                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1742  001AC2  0EBF               	movlw	191
  1743  001AC4  6E8A               	movwf	138,c	;volatile
  1744                           
  1745                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1746  001AC6  0EFE               	movlw	254
  1747  001AC8  6E8B               	movwf	139,c	;volatile
  1748  001ACA                     
  1749                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1750  001ACA  010F               	movlb	15	; () banked
  1751  001ACC  6926               	setf	38,b	;volatile
  1752                           
  1753                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1754  001ACE  0E3B               	movlw	59
  1755  001AD0  6F21               	movwf	33,b	;volatile
  1756                           
  1757                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1758  001AD2  0E37               	movlw	55
  1759  001AD4  6F19               	movwf	25,b	;volatile
  1760                           
  1761                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1762  001AD6  0E07               	movlw	7
  1763  001AD8  6F2E               	movwf	46,b	;volatile
  1764  001ADA                     
  1765                           ; BSR set to: 15
  1766                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1767  001ADA  6911               	setf	17,b	;volatile
  1768                           
  1769                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1770  001ADC  0E00               	movlw	0
  1771  001ADE  6F25               	movwf	37,b	;volatile
  1772                           
  1773                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1774  001AE0  0E00               	movlw	0
  1775  001AE2  6F2D               	movwf	45,b	;volatile
  1776                           
  1777                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1778  001AE4  0E00               	movlw	0
  1779  001AE6  6F18               	movwf	24,b	;volatile
  1780                           
  1781                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1782  001AE8  0E00               	movlw	0
  1783  001AEA  6F10               	movwf	16,b	;volatile
  1784                           
  1785                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1786  001AEC  0E00               	movlw	0
  1787  001AEE  6F20               	movwf	32,b	;volatile
  1788                           
  1789                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1790  001AF0  0E00               	movlw	0
  1791  001AF2  6F2C               	movwf	44,b	;volatile
  1792                           
  1793                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1794  001AF4  0E00               	movlw	0
  1795  001AF6  6F0F               	movwf	15,b	;volatile
  1796                           
  1797                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1798  001AF8  0E00               	movlw	0
  1799  001AFA  6F17               	movwf	23,b	;volatile
  1800                           
  1801                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1802  001AFC  0E00               	movlw	0
  1803  001AFE  6F1F               	movwf	31,b	;volatile
  1804                           
  1805                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1806  001B00  0E00               	movlw	0
  1807  001B02  6F24               	movwf	36,b	;volatile
  1808  001B04                     
  1809                           ; BSR set to: 15
  1810                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1811  001B04  690E               	setf	14,b	;volatile
  1812  001B06                     
  1813                           ; BSR set to: 15
  1814                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1815  001B06  6916               	setf	22,b	;volatile
  1816  001B08                     
  1817                           ; BSR set to: 15
  1818                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1819  001B08  691E               	setf	30,b	;volatile
  1820  001B0A                     
  1821                           ; BSR set to: 15
  1822                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1823  001B0A  6923               	setf	35,b	;volatile
  1824                           
  1825                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1826  001B0C  0E07               	movlw	7
  1827  001B0E  6F2B               	movwf	43,b	;volatile
  1828  001B10                     
  1829                           ; BSR set to: 15
  1830                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1831  001B10  690D               	setf	13,b	;volatile
  1832  001B12                     
  1833                           ; BSR set to: 15
  1834                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1835  001B12  6915               	setf	21,b	;volatile
  1836  001B14                     
  1837                           ; BSR set to: 15
  1838                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1839  001B14  691D               	setf	29,b	;volatile
  1840  001B16                     
  1841                           ; BSR set to: 15
  1842                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1843  001B16  6922               	setf	34,b	;volatile
  1844                           
  1845                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1846  001B18  0E0F               	movlw	15
  1847  001B1A  6F2A               	movwf	42,b	;volatile
  1848                           
  1849                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1850  001B1C  0E17               	movlw	23
  1851  001B1E  010E               	movlb	14	; () banked
  1852  001B20  6FB5               	movwf	181,b	;volatile
  1853                           
  1854                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1855  001B22  0E0B               	movlw	11
  1856  001B24  6FF5               	movwf	245,b	;volatile
  1857                           
  1858                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1859  001B26  0E09               	movlw	9
  1860  001B28  6FFD               	movwf	253,b	;volatile
  1861                           
  1862                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1863  001B2A  0E0F               	movlw	15
  1864  001B2C  6F8D               	movwf	141,b	;volatile
  1865  001B2E                     
  1866                           ; BSR set to: 14
  1867  001B2E  0012               	return		;funcret
  1868  001B30                     __end_of_PIN_MANAGER_Initialize:
  1869                           	opt callstack 0
  1870                           
  1871 ;; *************** function _OSCILLATOR_Initialize *****************
  1872 ;; Defined at:
  1873 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_SYSTEM_Initialize
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text4
  1902  0022A4                     __ptext4:
  1903                           	opt callstack 0
  1904  0022A4                     _OSCILLATOR_Initialize:
  1905                           	opt callstack 25
  1906  0022A4                     
  1907                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1908  0022A4  0E60               	movlw	96
  1909  0022A6  010E               	movlb	14	; () banked
  1910  0022A8  6FD8               	movwf	216,b	;volatile
  1911                           
  1912                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1913  0022AA  0E00               	movlw	0
  1914  0022AC  6FDA               	movwf	218,b	;volatile
  1915                           
  1916                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1917  0022AE  0E00               	movlw	0
  1918  0022B0  6FDC               	movwf	220,b	;volatile
  1919                           
  1920                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1921  0022B2  0E06               	movlw	6
  1922  0022B4  6FDE               	movwf	222,b	;volatile
  1923                           
  1924                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1925  0022B6  0E00               	movlw	0
  1926  0022B8  6FDD               	movwf	221,b	;volatile
  1927  0022BA                     
  1928                           ; BSR set to: 14
  1929  0022BA  0012               	return		;funcret
  1930  0022BC                     __end_of_OSCILLATOR_Initialize:
  1931                           	opt callstack 0
  1932                           
  1933 ;; *************** function _INTERRUPT_Initialize *****************
  1934 ;; Defined at:
  1935 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		None
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    4
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_SYSTEM_Initialize
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text5
  1964  002376                     __ptext5:
  1965                           	opt callstack 0
  1966  002376                     _INTERRUPT_Initialize:
  1967                           	opt callstack 25
  1968  002376                     
  1969                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1970  002376  9AF2               	bcf	242,5,c	;volatile
  1971  002378  0012               	return		;funcret
  1972  00237A                     __end_of_INTERRUPT_Initialize:
  1973                           	opt callstack 0
  1974                           
  1975 ;; *************** function _EUSART2_Initialize *****************
  1976 ;; Defined at:
  1977 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    5
  1998 ;; This function calls:
  1999 ;;		_EUSART2_SetErrorHandler
  2000 ;;		_EUSART2_SetFramingErrorHandler
  2001 ;;		_EUSART2_SetOverrunErrorHandler
  2002 ;;		_EUSART2_SetRxInterruptHandler
  2003 ;;		_EUSART2_SetTxInterruptHandler
  2004 ;; This function is called by:
  2005 ;;		_SYSTEM_Initialize
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text6
  2010  001B30                     __ptext6:
  2011                           	opt callstack 0
  2012  001B30                     _EUSART2_Initialize:
  2013                           	opt callstack 24
  2014  001B30                     
  2015                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  2016  001B30  010E               	movlb	14	; () banked
  2017  001B32  9FC5               	bcf	197,7,b	;volatile
  2018  001B34                     
  2019                           ; BSR set to: 14
  2020                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  2021  001B34  0EEC               	movlw	low _EUSART2_Receive_ISR
  2022  001B36  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  2023  001B38  0E17               	movlw	high _EUSART2_Receive_ISR
  2024  001B3A  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  2025  001B3C  EC79  F011         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2026  001B40                     
  2027                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  2028  001B40  010E               	movlb	14	; () banked
  2029  001B42  9DC5               	bcf	197,6,b	;volatile
  2030                           
  2031                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  2032  001B44  0ED4               	movlw	low _EUSART2_Transmit_ISR
  2033  001B46  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  2034  001B48  0E1F               	movlw	high _EUSART2_Transmit_ISR
  2035  001B4A  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  2036  001B4C  EC74  F011         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2037  001B50                     
  2038                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  2039  001B50  0E08               	movlw	8
  2040  001B52  010E               	movlb	14	; () banked
  2041  001B54  6F9F               	movwf	159,b	;volatile
  2042  001B56                     
  2043                           ; BSR set to: 14
  2044                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  2045  001B56  0E90               	movlw	144
  2046  001B58  6F9D               	movwf	157,b	;volatile
  2047  001B5A                     
  2048                           ; BSR set to: 14
  2049                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  2050  001B5A  0E24               	movlw	36
  2051  001B5C  6F9E               	movwf	158,b	;volatile
  2052  001B5E                     
  2053                           ; BSR set to: 14
  2054                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  2055  001B5E  0E40               	movlw	64
  2056  001B60  6F9B               	movwf	155,b	;volatile
  2057  001B62                     
  2058                           ; BSR set to: 14
  2059                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  2060  001B62  0E03               	movlw	3
  2061  001B64  6F9C               	movwf	156,b	;volatile
  2062  001B66                     
  2063                           ; BSR set to: 14
  2064                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  2065  001B66  0E7A               	movlw	low _EUSART2_DefaultFramingErrorHandler
  2066  001B68  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2067  001B6A  0E23               	movlw	high _EUSART2_DefaultFramingErrorHandler
  2068  001B6C  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2069  001B6E  EC83  F011         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2070  001B72                     
  2071                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  2072  001B72  0E56               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  2073  001B74  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2074  001B76  0E23               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  2075  001B78  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2076  001B7A  EC7E  F011         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2077  001B7E                     
  2078                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  2079  001B7E  0E64               	movlw	low _EUSART2_DefaultErrorHandler
  2080  001B80  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2081  001B82  0E23               	movlw	high _EUSART2_DefaultErrorHandler
  2082  001B84  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2083  001B86  EC88  F011         	call	_EUSART2_SetErrorHandler	;wreg free
  2084                           
  2085                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  2086  001B8A  0E00               	movlw	0
  2087  001B8C  0100               	movlb	0	; () banked
  2088  001B8E  6F9B               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  2089                           
  2090                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  2091  001B90  0E00               	movlw	0
  2092  001B92  6F9F               	movwf	_eusart2TxHead& (0+255),b	;volatile
  2093                           
  2094                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  2095  001B94  0E00               	movlw	0
  2096  001B96  6F9E               	movwf	_eusart2TxTail& (0+255),b	;volatile
  2097                           
  2098                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  2099  001B98  0E08               	movlw	8
  2100  001B9A  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  2101                           
  2102                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  2103  001B9C  0E00               	movlw	0
  2104  001B9E  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  2105                           
  2106                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  2107  001BA0  0E00               	movlw	0
  2108  001BA2  6F9D               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2109                           
  2110                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  2111  001BA4  0E00               	movlw	0
  2112  001BA6  6F9C               	movwf	_eusart2RxCount& (0+255),b	;volatile
  2113  001BA8                     
  2114                           ; BSR set to: 0
  2115                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  2116  001BA8  010E               	movlb	14	; () banked
  2117  001BAA  8FC5               	bsf	197,7,b	;volatile
  2118  001BAC                     
  2119                           ; BSR set to: 14
  2120  001BAC  0012               	return		;funcret
  2121  001BAE                     __end_of_EUSART2_Initialize:
  2122                           	opt callstack 0
  2123                           
  2124 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2125 ;; Defined at:
  2126 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2129 ;;		 -> EUSART2_Transmit_ISR(1), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    4
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_EUSART2_Initialize
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text7
  2156  0022E8                     __ptext7:
  2157                           	opt callstack 0
  2158  0022E8                     _EUSART2_SetTxInterruptHandler:
  2159                           	opt callstack 24
  2160  0022E8                     
  2161                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2162  0022E8  C005  F0DE         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2163  0022EC  C006  F0DF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2164  0022F0  0012               	return		;funcret
  2165  0022F2                     __end_of_EUSART2_SetTxInterruptHandler:
  2166                           	opt callstack 0
  2167                           
  2168 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2169 ;; Defined at:
  2170 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2173 ;;		 -> EUSART2_Receive_ISR(1), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2189 ;;Total ram usage:        2 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    4
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_EUSART2_Initialize
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text8
  2200  0022F2                     __ptext8:
  2201                           	opt callstack 0
  2202  0022F2                     _EUSART2_SetRxInterruptHandler:
  2203                           	opt callstack 24
  2204  0022F2                     
  2205                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2206  0022F2  C005  F0DC         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2207  0022F6  C006  F0DD         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2208  0022FA  0012               	return		;funcret
  2209  0022FC                     __end_of_EUSART2_SetRxInterruptHandler:
  2210                           	opt callstack 0
  2211                           
  2212 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2213 ;; Defined at:
  2214 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2217 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;Total ram usage:        2 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    4
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_EUSART2_Initialize
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text9
  2244  0022FC                     __ptext9:
  2245                           	opt callstack 0
  2246  0022FC                     _EUSART2_SetOverrunErrorHandler:
  2247                           	opt callstack 24
  2248  0022FC                     
  2249                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  2250  0022FC  C005  F0D4         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2251  002300  C006  F0D5         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2252  002304  0012               	return		;funcret
  2253  002306                     __end_of_EUSART2_SetOverrunErrorHandler:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2257 ;; Defined at:
  2258 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2261 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;Total ram usage:        2 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_EUSART2_Initialize
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text10
  2288  002306                     __ptext10:
  2289                           	opt callstack 0
  2290  002306                     _EUSART2_SetFramingErrorHandler:
  2291                           	opt callstack 24
  2292  002306                     
  2293                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  2294  002306  C005  F0D6         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2295  00230A  C006  F0D7         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2296  00230E  0012               	return		;funcret
  2297  002310                     __end_of_EUSART2_SetFramingErrorHandler:
  2298                           	opt callstack 0
  2299                           
  2300 ;; *************** function _EUSART2_SetErrorHandler *****************
  2301 ;; Defined at:
  2302 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2305 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;Total ram usage:        2 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    4
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_EUSART2_Initialize
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text11
  2332  002310                     __ptext11:
  2333                           	opt callstack 0
  2334  002310                     _EUSART2_SetErrorHandler:
  2335                           	opt callstack 24
  2336  002310                     
  2337                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  2338  002310  C005  F0D2         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2339  002314  C006  F0D3         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2340  002318  0012               	return		;funcret
  2341  00231A                     __end_of_EUSART2_SetErrorHandler:
  2342                           	opt callstack 0
  2343                           
  2344 ;; *************** function _EUSART1_Initialize *****************
  2345 ;; Defined at:
  2346 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    5
  2367 ;; This function calls:
  2368 ;;		_EUSART1_SetErrorHandler
  2369 ;;		_EUSART1_SetFramingErrorHandler
  2370 ;;		_EUSART1_SetOverrunErrorHandler
  2371 ;;		_EUSART1_SetRxInterruptHandler
  2372 ;;		_EUSART1_SetTxInterruptHandler
  2373 ;; This function is called by:
  2374 ;;		_SYSTEM_Initialize
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text12
  2379  001BAE                     __ptext12:
  2380                           	opt callstack 0
  2381  001BAE                     _EUSART1_Initialize:
  2382                           	opt callstack 24
  2383  001BAE                     
  2384                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2385  001BAE  010E               	movlb	14	; () banked
  2386  001BB0  9BC5               	bcf	197,5,b	;volatile
  2387  001BB2                     
  2388                           ; BSR set to: 14
  2389                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2390  001BB2  0EAC               	movlw	low _EUSART1_Receive_ISR
  2391  001BB4  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2392  001BB6  0E18               	movlw	high _EUSART1_Receive_ISR
  2393  001BB8  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2394  001BBA  EC92  F011         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2395  001BBE                     
  2396                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2397  001BBE  010E               	movlb	14	; () banked
  2398  001BC0  99C5               	bcf	197,4,b	;volatile
  2399                           
  2400                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2401  001BC2  0E60               	movlw	low _EUSART1_Transmit_ISR
  2402  001BC4  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2403  001BC6  0E20               	movlw	high _EUSART1_Transmit_ISR
  2404  001BC8  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2405  001BCA  EC8D  F011         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2406  001BCE                     
  2407                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2408  001BCE  0E08               	movlw	8
  2409  001BD0  6E9F               	movwf	159,c	;volatile
  2410  001BD2                     
  2411                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2412  001BD2  0E90               	movlw	144
  2413  001BD4  6E9D               	movwf	157,c	;volatile
  2414  001BD6                     
  2415                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2416  001BD6  0E24               	movlw	36
  2417  001BD8  6E9E               	movwf	158,c	;volatile
  2418  001BDA                     
  2419                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  2420  001BDA  0E40               	movlw	64
  2421  001BDC  6E9B               	movwf	155,c	;volatile
  2422  001BDE                     
  2423                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  2424  001BDE  0E03               	movlw	3
  2425  001BE0  6E9C               	movwf	156,c	;volatile
  2426  001BE2                     
  2427                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2428  001BE2  0E7C               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2429  001BE4  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2430  001BE6  0E23               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2431  001BE8  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2432  001BEA  EC9C  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2433  001BEE                     
  2434                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2435  001BEE  0E6A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2436  001BF0  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2437  001BF2  0E23               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2438  001BF4  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2439  001BF6  EC97  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2440  001BFA                     
  2441                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2442  001BFA  0E70               	movlw	low _EUSART1_DefaultErrorHandler
  2443  001BFC  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2444  001BFE  0E23               	movlw	high _EUSART1_DefaultErrorHandler
  2445  001C00  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2446  001C02  ECA1  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  2447                           
  2448                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2449  001C06  0E00               	movlw	0
  2450  001C08  0100               	movlb	0	; () banked
  2451  001C0A  6F96               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2452                           
  2453                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2454  001C0C  0E00               	movlw	0
  2455  001C0E  6F9A               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2456                           
  2457                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2458  001C10  0E00               	movlw	0
  2459  001C12  6F99               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2460                           
  2461                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2462  001C14  0E10               	movlw	16
  2463  001C16  6FE0               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2464                           
  2465                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2466  001C18  0E00               	movlw	0
  2467  001C1A  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  2468                           
  2469                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2470  001C1C  0E00               	movlw	0
  2471  001C1E  6F98               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2472                           
  2473                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2474  001C20  0E00               	movlw	0
  2475  001C22  6F97               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2476  001C24                     
  2477                           ; BSR set to: 0
  2478                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2479  001C24  010E               	movlb	14	; () banked
  2480  001C26  8BC5               	bsf	197,5,b	;volatile
  2481  001C28                     
  2482                           ; BSR set to: 14
  2483  001C28  0012               	return		;funcret
  2484  001C2A                     __end_of_EUSART1_Initialize:
  2485                           	opt callstack 0
  2486                           
  2487 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2488 ;; Defined at:
  2489 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2492 ;;		 -> EUSART1_Transmit_ISR(1), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    4
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_EUSART1_Initialize
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text13
  2519  00231A                     __ptext13:
  2520                           	opt callstack 0
  2521  00231A                     _EUSART1_SetTxInterruptHandler:
  2522                           	opt callstack 24
  2523  00231A                     
  2524                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2525  00231A  C005  F0DA         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2526  00231E  C006  F0DB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2527  002322  0012               	return		;funcret
  2528  002324                     __end_of_EUSART1_SetTxInterruptHandler:
  2529                           	opt callstack 0
  2530                           
  2531 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2532 ;; Defined at:
  2533 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2536 ;;		 -> EUSART1_Receive_ISR(1), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    4
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_EUSART1_Initialize
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text14
  2563  002324                     __ptext14:
  2564                           	opt callstack 0
  2565  002324                     _EUSART1_SetRxInterruptHandler:
  2566                           	opt callstack 24
  2567  002324                     
  2568                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2569  002324  C005  F0D8         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2570  002328  C006  F0D9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2571  00232C  0012               	return		;funcret
  2572  00232E                     __end_of_EUSART1_SetRxInterruptHandler:
  2573                           	opt callstack 0
  2574                           
  2575 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2576 ;; Defined at:
  2577 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2580 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    4
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_EUSART1_Initialize
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text15
  2607  00232E                     __ptext15:
  2608                           	opt callstack 0
  2609  00232E                     _EUSART1_SetOverrunErrorHandler:
  2610                           	opt callstack 24
  2611  00232E                     
  2612                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2613  00232E  C005  F0CE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2614  002332  C006  F0CF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2615  002336  0012               	return		;funcret
  2616  002338                     __end_of_EUSART1_SetOverrunErrorHandler:
  2617                           	opt callstack 0
  2618                           
  2619 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2620 ;; Defined at:
  2621 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2624 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2640 ;;Total ram usage:        2 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    4
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_EUSART1_Initialize
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text16
  2651  002338                     __ptext16:
  2652                           	opt callstack 0
  2653  002338                     _EUSART1_SetFramingErrorHandler:
  2654                           	opt callstack 24
  2655  002338                     
  2656                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2657  002338  C005  F0D0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2658  00233C  C006  F0D1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2659  002340  0012               	return		;funcret
  2660  002342                     __end_of_EUSART1_SetFramingErrorHandler:
  2661                           	opt callstack 0
  2662                           
  2663 ;; *************** function _EUSART1_SetErrorHandler *****************
  2664 ;; Defined at:
  2665 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2668 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    4
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_EUSART1_Initialize
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text17
  2695  002342                     __ptext17:
  2696                           	opt callstack 0
  2697  002342                     _EUSART1_SetErrorHandler:
  2698                           	opt callstack 24
  2699  002342                     
  2700                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2701  002342  C005  F0CC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2702  002346  C006  F0CD         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2703  00234A  0012               	return		;funcret
  2704  00234C                     __end_of_EUSART1_SetErrorHandler:
  2705                           	opt callstack 0
  2706                           
  2707 ;; *************** function _RXMode *****************
  2708 ;; Defined at:
  2709 ;;		line 56 in file "main.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		None
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    4
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text18
  2738  00235E                     __ptext18:
  2739                           	opt callstack 0
  2740  00235E                     _RXMode:
  2741                           	opt callstack 26
  2742  00235E  9086               	bcf	134,0,c	;volatile
  2743  002360  9683               	bcf	131,3,c	;volatile
  2744  002362  0012               	return		;funcret
  2745  002364                     __end_of_RXMode:
  2746                           	opt callstack 0
  2747                           
  2748 ;; *************** function _PrintModbus *****************
  2749 ;; Defined at:
  2750 ;;		line 105 in file "main.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  i               2   41[BANK0 ] int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:   13
  2771 ;; This function calls:
  2772 ;;		_printf
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text19
  2779  001CA6                     __ptext19:
  2780                           	opt callstack 0
  2781  001CA6                     _PrintModbus:
  2782                           	opt callstack 17
  2783  001CA6                     
  2784                           ;main.c: 110:     printf("\r\nModbus Data Capture Complete:\r\n");
  2785  001CA6  0E72               	movlw	low STR_10
  2786  001CA8  0100               	movlb	0	; () banked
  2787  001CAA  6FBD               	movwf	printf@fmt& (0+255),b
  2788  001CAC  0EFF               	movlw	high STR_10
  2789  001CAE  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2790  001CB0  EC10  F011         	call	_printf	;wreg free
  2791  001CB4                     
  2792                           ;main.c: 111:     for(i=0; i< ModDataCnt ; i++ ){
  2793  001CB4  0E00               	movlw	0
  2794  001CB6  0100               	movlb	0	; () banked
  2795  001CB8  6FCA               	movwf	(PrintModbus@i+1)& (0+255),b
  2796  001CBA  0E00               	movlw	0
  2797  001CBC  6FC9               	movwf	PrintModbus@i& (0+255),b
  2798  001CBE  EF79  F00E         	goto	l3956
  2799  001CC2                     l3952:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;main.c: 112:         printf("   Byte Num: %i Val: 0x%02x \r\n", i, ModbusData[i]);
  2803  001CC2  0E94               	movlw	low STR_11
  2804  001CC4  6FBD               	movwf	printf@fmt& (0+255),b
  2805  001CC6  0EFF               	movlw	high STR_11
  2806  001CC8  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2807  001CCA  C0C9  F0BF         	movff	PrintModbus@i,?_printf+2
  2808  001CCE  C0CA  F0C0         	movff	PrintModbus@i+1,?_printf+3
  2809  001CD2  0E00               	movlw	low _ModbusData
  2810  001CD4  25C9               	addwf	PrintModbus@i& (0+255),w,b
  2811  001CD6  6ED9               	movwf	fsr2l,c
  2812  001CD8  0E01               	movlw	high _ModbusData
  2813  001CDA  21CA               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  2814  001CDC  6EDA               	movwf	fsr2h,c
  2815  001CDE  50DF               	movf	indf2,w,c
  2816  001CE0  6E55               	movwf	??_PrintModbus^0,c
  2817  001CE2  5055               	movf	??_PrintModbus^0,w,c
  2818  001CE4  6FC1               	movwf	(?_printf+4)& (0+255),b
  2819  001CE6  6BC2               	clrf	(?_printf+5)& (0+255),b
  2820  001CE8  EC10  F011         	call	_printf	;wreg free
  2821  001CEC                     
  2822                           ;main.c: 113:     }
  2823  001CEC  0100               	movlb	0	; () banked
  2824  001CEE  4BC9               	infsnz	PrintModbus@i& (0+255),f,b
  2825  001CF0  2BCA               	incf	(PrintModbus@i+1)& (0+255),f,b
  2826  001CF2                     l3956:
  2827                           
  2828                           ; BSR set to: 0
  2829  001CF2  518E               	movf	_ModDataCnt& (0+255),w,b
  2830  001CF4  5DC9               	subwf	PrintModbus@i& (0+255),w,b
  2831  001CF6  51CA               	movf	(PrintModbus@i+1)& (0+255),w,b
  2832  001CF8  0A80               	xorlw	128
  2833  001CFA  6E55               	movwf	??_PrintModbus^0,c
  2834  001CFC  518F               	movf	(_ModDataCnt+1)& (0+255),w,b
  2835  001CFE  0A80               	xorlw	128
  2836  001D00  5855               	subwfb	??_PrintModbus^0,w,c
  2837  001D02  A0D8               	btfss	status,0,c
  2838  001D04  EF86  F00E         	goto	u3541
  2839  001D08  EF88  F00E         	goto	u3540
  2840  001D0C                     u3541:
  2841  001D0C  EF61  F00E         	goto	l3952
  2842  001D10                     u3540:
  2843  001D10                     
  2844                           ; BSR set to: 0
  2845                           ;main.c: 115:     ModDataCnt = 0;
  2846  001D10  0E00               	movlw	0
  2847  001D12  6F8F               	movwf	(_ModDataCnt+1)& (0+255),b
  2848  001D14  0E00               	movlw	0
  2849  001D16  6F8E               	movwf	_ModDataCnt& (0+255),b
  2850  001D18                     
  2851                           ; BSR set to: 0
  2852  001D18  0012               	return		;funcret
  2853  001D1A                     __end_of_PrintModbus:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _InitialiseString *****************
  2857 ;; Defined at:
  2858 ;;		line 28 in file "main.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:   13
  2879 ;; This function calls:
  2880 ;;		_printf
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text20
  2887  001C2A                     __ptext20:
  2888                           	opt callstack 0
  2889  001C2A                     _InitialiseString:
  2890                           	opt callstack 17
  2891  001C2A                     
  2892                           ;main.c: 31:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  2893  001C2A  0E7F               	movlw	low STR_1
  2894  001C2C  0100               	movlb	0	; () banked
  2895  001C2E  6FBD               	movwf	printf@fmt& (0+255),b
  2896  001C30  0EFE               	movlw	high STR_1
  2897  001C32  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2898  001C34  EC10  F011         	call	_printf	;wreg free
  2899                           
  2900                           ;main.c: 32:     printf("\rCard Ser No. xxxxxxx \r\n");
  2901  001C38  0ED0               	movlw	low STR_2
  2902  001C3A  0100               	movlb	0	; () banked
  2903  001C3C  6FBD               	movwf	printf@fmt& (0+255),b
  2904  001C3E  0EFF               	movlw	high STR_2
  2905  001C40  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2906  001C42  EC10  F011         	call	_printf	;wreg free
  2907                           
  2908                           ;main.c: 33:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  2909  001C46  0E24               	movlw	low STR_3
  2910  001C48  0100               	movlb	0	; () banked
  2911  001C4A  6FBD               	movwf	printf@fmt& (0+255),b
  2912  001C4C  0EFF               	movlw	high STR_3
  2913  001C4E  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2914  001C50  0EE9               	movlw	low STR_4
  2915  001C52  6FBF               	movwf	(?_printf+2)& (0+255),b
  2916  001C54  0EFF               	movlw	high STR_4
  2917  001C56  6FC0               	movwf	(?_printf+3)& (0+255),b
  2918  001C58  0EF5               	movlw	low STR_5
  2919  001C5A  6FC1               	movwf	(?_printf+4)& (0+255),b
  2920  001C5C  0EFF               	movlw	high STR_5
  2921  001C5E  6FC2               	movwf	(?_printf+5)& (0+255),b
  2922  001C60  0E08               	movlw	8
  2923  001C62  6FC4               	movwf	(?_printf+7)& (0+255),b
  2924  001C64  0E34               	movlw	52
  2925  001C66  6FC3               	movwf	(?_printf+6)& (0+255),b
  2926  001C68  EC10  F011         	call	_printf	;wreg free
  2927                           
  2928                           ;main.c: 35:     printf("\rFunction Codes Supported:\r\n");
  2929  001C6C  0EB3               	movlw	low STR_6
  2930  001C6E  0100               	movlb	0	; () banked
  2931  001C70  6FBD               	movwf	printf@fmt& (0+255),b
  2932  001C72  0EFF               	movlw	high STR_6
  2933  001C74  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2934  001C76  EC10  F011         	call	_printf	;wreg free
  2935                           
  2936                           ;main.c: 36:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  2937  001C7A  0EEF               	movlw	low STR_7
  2938  001C7C  0100               	movlb	0	; () banked
  2939  001C7E  6FBD               	movwf	printf@fmt& (0+255),b
  2940  001C80  0EFE               	movlw	high STR_7
  2941  001C82  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2942  001C84  EC10  F011         	call	_printf	;wreg free
  2943                           
  2944                           ;main.c: 37:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  2945  001C88  0EB8               	movlw	low STR_8
  2946  001C8A  0100               	movlb	0	; () banked
  2947  001C8C  6FBD               	movwf	printf@fmt& (0+255),b
  2948  001C8E  0EFE               	movlw	high STR_8
  2949  001C90  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2950  001C92  EC10  F011         	call	_printf	;wreg free
  2951                           
  2952                           ;main.c: 38:     printf("\rInitalisation Complete - Ready\r\n\n");
  2953  001C96  0E4F               	movlw	low STR_9
  2954  001C98  0100               	movlb	0	; () banked
  2955  001C9A  6FBD               	movwf	printf@fmt& (0+255),b
  2956  001C9C  0EFF               	movlw	high STR_9
  2957  001C9E  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2958  001CA0  EC10  F011         	call	_printf	;wreg free
  2959  001CA4  0012               	return		;funcret
  2960  001CA6                     __end_of_InitialiseString:
  2961                           	opt callstack 0
  2962                           
  2963 ;; *************** function _printf *****************
  2964 ;; Defined at:
  2965 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2968 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  2969 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  2970 ;;		 -> STR_1(57), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  ap              2   39[BANK0 ] PTR void [1]
  2973 ;;		 -> ?_printf(2), 
  2974 ;;  ret             2    0        int 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  2   29[BANK0 ] int 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:       12 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:   12
  2991 ;; This function calls:
  2992 ;;		_vfprintf
  2993 ;; This function is called by:
  2994 ;;		_InitialiseString
  2995 ;;		_PrintModbus
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text21
  3000  002220                     __ptext21:
  3001                           	opt callstack 0
  3002  002220                     _printf:
  3003                           	opt callstack 17
  3004  002220  0EBF               	movlw	low (?_printf+2)
  3005  002222  0100               	movlb	0	; () banked
  3006  002224  6FC7               	movwf	printf@ap& (0+255),b
  3007  002226  0E00               	movlw	high (?_printf+2)
  3008  002228  6FC8               	movwf	(printf@ap+1)& (0+255),b
  3009  00222A                     
  3010                           ; BSR set to: 0
  3011  00222A  0E00               	movlw	0
  3012  00222C  6FB7               	movwf	vfprintf@fp& (0+255),b
  3013  00222E  0E00               	movlw	0
  3014  002230  6FB8               	movwf	(vfprintf@fp+1)& (0+255),b
  3015  002232  C0BD  F0B9         	movff	printf@fmt,vfprintf@fmt
  3016  002236  C0BE  F0BA         	movff	printf@fmt+1,vfprintf@fmt+1
  3017  00223A  0EC7               	movlw	low printf@ap
  3018  00223C  6FBB               	movwf	vfprintf@ap& (0+255),b
  3019  00223E  0E00               	movlw	high printf@ap
  3020  002240  6FBC               	movwf	(vfprintf@ap+1)& (0+255),b
  3021  002242  EC8D  F00E         	call	_vfprintf	;wreg free
  3022  002246  0012               	return		;funcret
  3023  002248                     __end_of_printf:
  3024                           	opt callstack 0
  3025                           
  3026 ;; *************** function _vfprintf *****************
  3027 ;; Defined at:
  3028 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  3031 ;;		 -> NULL(0), 
  3032 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  3033 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3034 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3035 ;;		 -> STR_1(57), 
  3036 ;;  ap              2   27[BANK0 ] PTR PTR void 
  3037 ;;		 -> printf@ap(2), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3040 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3041 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3042 ;;		 -> STR_1(57), 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2   23[BANK0 ] int 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3052 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;Total ram usage:        8 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:   11
  3059 ;; This function calls:
  3060 ;;		_vfpfcnvrt
  3061 ;; This function is called by:
  3062 ;;		_printf
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text22
  3067  001D1A                     __ptext22:
  3068                           	opt callstack 0
  3069  001D1A                     _vfprintf:
  3070                           	opt callstack 17
  3071  001D1A                     
  3072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3073  001D1A  C0B9  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  3074  001D1E  C0BA  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3075  001D22                     
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3077  001D22  0E00               	movlw	0
  3078  001D24  0100               	movlb	0	; () banked
  3079  001D26  6F89               	movwf	(_nout+1)& (0+255),b
  3080  001D28  0E00               	movlw	0
  3081  001D2A  6F88               	movwf	_nout& (0+255),b
  3082                           
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3084  001D2C  EFAB  F00E         	goto	l3936
  3085  001D30                     l3934:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3089  001D30  C0B7  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  3090  001D34  C0B8  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3091  001D38  0E53               	movlw	low vfprintf@cfmt
  3092  001D3A  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  3093  001D3C  0E00               	movlw	high vfprintf@cfmt
  3094  001D3E  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3095  001D40  C0BB  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3096  001D44  C0BC  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3097  001D48  EC95  F000         	call	_vfpfcnvrt	;wreg free
  3098  001D4C  5049               	movf	?_vfpfcnvrt^0,w,c
  3099  001D4E  0100               	movlb	0	; () banked
  3100  001D50  2788               	addwf	_nout& (0+255),f,b
  3101  001D52  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  3102  001D54  2389               	addwfc	(_nout+1)& (0+255),f,b
  3103  001D56                     l3936:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3107  001D56  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  3108  001D5A  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3109  001D5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3110  001D5E  6AF8               	clrf	tblptru,c
  3111  001D60                     	endif
  3112  001D60                     	if	0	;tblptru may be non-zero
  3113  001D60                     	endif
  3114  001D60  0008               	tblrd		*
  3115  001D62  50F5               	movf	tablat,w,c
  3116  001D64  0900               	iorlw	0
  3117  001D66  A4D8               	btfss	status,2,c
  3118  001D68  EFB8  F00E         	goto	u3531
  3119  001D6C  EFBA  F00E         	goto	u3530
  3120  001D70                     u3531:
  3121  001D70  EF98  F00E         	goto	l3934
  3122  001D74                     u3530:
  3123  001D74                     
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3126  001D74  C088  F0B7         	movff	_nout,?_vfprintf
  3127  001D78  C089  F0B8         	movff	_nout+1,?_vfprintf+1
  3128  001D7C                     
  3129                           ; BSR set to: 0
  3130  001D7C  0012               	return		;funcret
  3131  001D7E                     __end_of_vfprintf:
  3132                           	opt callstack 0
  3133                           
  3134 ;; *************** function _vfpfcnvrt *****************
  3135 ;; Defined at:
  3136 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  3139 ;;		 -> NULL(0), 
  3140 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  3141 ;;		 -> vfprintf@cfmt(2), 
  3142 ;;  ap              2   76[COMRAM] PTR PTR void 
  3143 ;;		 -> printf@ap(2), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  llu             8   15[BANK0 ] unsigned long long 
  3146 ;;  ll              8    0[BANK0 ] long long 
  3147 ;;  f               4    0        long long 
  3148 ;;  vp              3    0        PTR void 
  3149 ;;  ct              3    0        unsigned char [3]
  3150 ;;  done            2   10[BANK0 ] int 
  3151 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  3152 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  3153 ;;  i               2    0        int 
  3154 ;;  c               1   14[BANK0 ] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2   72[COMRAM] int 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3164 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3168 ;;Total ram usage:       33 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:   10
  3171 ;; This function calls:
  3172 ;;		_atoi
  3173 ;;		_dtoa
  3174 ;;		_fputc
  3175 ;;		_isdigit
  3176 ;;		_stoa
  3177 ;;		_utoa
  3178 ;;		_xtoa
  3179 ;; This function is called by:
  3180 ;;		_vfprintf
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text23
  3185  00012A                     __ptext23:
  3186                           	opt callstack 0
  3187  00012A                     _vfpfcnvrt:
  3188                           	opt callstack 17
  3189  00012A                     
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3191  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3192  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3193  000132  CFDE FFF6          	movff	postinc2,tblptrl
  3194  000136  CFDD FFF7          	movff	postdec2,tblptrh
  3195  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3196  00013A  6AF8               	clrf	tblptru,c
  3197  00013C                     	endif
  3198  00013C                     	if	0	;tblptru may be non-zero
  3199  00013C                     	endif
  3200  00013C  0008               	tblrd		*
  3201  00013E  50F5               	movf	tablat,w,c
  3202  000140  0A25               	xorlw	37
  3203  000142  A4D8               	btfss	status,2,c
  3204  000144  EFA6  F000         	goto	u2851
  3205  000148  EFA8  F000         	goto	u2850
  3206  00014C                     u2851:
  3207  00014C  EF3D  F003         	goto	l3424
  3208  000150                     u2850:
  3209  000150                     
  3210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3211  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3212  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3213  000158  2ADE               	incf	postinc2,f,c
  3214  00015A  0E00               	movlw	0
  3215  00015C  22DD               	addwfc	postdec2,f,c
  3216  00015E                     
  3217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3218  00015E  0E00               	movlw	0
  3219  000160  0100               	movlb	0	; () banked
  3220  000162  6F8B               	movwf	(_width+1)& (0+255),b
  3221  000164  0E00               	movlw	0
  3222  000166  6F8A               	movwf	_width& (0+255),b
  3223  000168  C08A  F057         	movff	_width,_flags
  3224  00016C  C08B  F058         	movff	_width+1,_flags+1
  3225  000170                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3228  000170  698C               	setf	_prec& (0+255),b
  3229  000172  698D               	setf	(_prec+1)& (0+255),b
  3230  000174                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3233  000174  0E00               	movlw	0
  3234  000176  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3235  000178  0E00               	movlw	0
  3236  00017A  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  3237                           
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3239  00017C  EF07  F001         	goto	l3346
  3240  000180                     l3320:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3244  000180  8057               	bsf	_flags^0,0,c
  3245  000182                     l3322:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3249  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3250  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3251  00018A  2ADE               	incf	postinc2,f,c
  3252  00018C  0E00               	movlw	0
  3253  00018E  22DD               	addwfc	postdec2,f,c
  3254                           
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3256  000190  EF07  F001         	goto	l3346
  3257  000194                     l3324:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3261  000194  8257               	bsf	_flags^0,1,c
  3262  000196  EFC1  F000         	goto	l3322
  3263  00019A                     l3328:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3267  00019A  8457               	bsf	_flags^0,2,c
  3268  00019C  EFC1  F000         	goto	l3322
  3269  0001A0                     l3332:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3273  0001A0  8657               	bsf	_flags^0,3,c
  3274  0001A2  EFC1  F000         	goto	l3322
  3275  0001A6                     l3336:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3279  0001A6  8857               	bsf	_flags^0,4,c
  3280  0001A8  EFC1  F000         	goto	l3322
  3281  0001AC                     l3340:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3285  0001AC  0E00               	movlw	0
  3286  0001AE  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3287  0001B0  0E01               	movlw	1
  3288  0001B2  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  3289                           
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3291  0001B4  EF07  F001         	goto	l3346
  3292  0001B8                     l3344:
  3293                           
  3294                           ; BSR set to: 0
  3295  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3296  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3297  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  3298  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  3299  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3300  0001C8  6AF8               	clrf	tblptru,c
  3301  0001CA                     	endif
  3302  0001CA                     	if	0	;tblptru may be non-zero
  3303  0001CA                     	endif
  3304  0001CA  0008               	tblrd		*
  3305  0001CC  50F5               	movf	tablat,w,c
  3306  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  3307  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  3308                           
  3309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3310                           ; Switch size 1, requested type "simple"
  3311                           ; Number of cases is 1, Range of values is 0 to 0
  3312                           ; switch strategies available:
  3313                           ; Name         Instructions Cycles
  3314                           ; simple_byte            4     3 (average)
  3315                           ;	Chosen strategy is simple_byte
  3316  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  3317  0001D4  0A00               	xorlw	0	; case 0
  3318  0001D6  B4D8               	btfsc	status,2,c
  3319  0001D8  EFF0  F000         	goto	l4080
  3320  0001DC  EFD6  F000         	goto	l3340
  3321  0001E0                     l4080:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ; Switch size 1, requested type "simple"
  3325                           ; Number of cases is 5, Range of values is 32 to 48
  3326                           ; switch strategies available:
  3327                           ; Name         Instructions Cycles
  3328                           ; simple_byte           16     9 (average)
  3329                           ;	Chosen strategy is simple_byte
  3330  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  3331  0001E2  0A20               	xorlw	32	; case 32
  3332  0001E4  B4D8               	btfsc	status,2,c
  3333  0001E6  EFD0  F000         	goto	l3332
  3334  0001EA  0A03               	xorlw	3	; case 35
  3335  0001EC  B4D8               	btfsc	status,2,c
  3336  0001EE  EFD3  F000         	goto	l3336
  3337  0001F2  0A08               	xorlw	8	; case 43
  3338  0001F4  B4D8               	btfsc	status,2,c
  3339  0001F6  EFCD  F000         	goto	l3328
  3340  0001FA  0A06               	xorlw	6	; case 45
  3341  0001FC  B4D8               	btfsc	status,2,c
  3342  0001FE  EFC0  F000         	goto	l3320
  3343  000202  0A1D               	xorlw	29	; case 48
  3344  000204  B4D8               	btfsc	status,2,c
  3345  000206  EFCA  F000         	goto	l3324
  3346  00020A  EFD6  F000         	goto	l3340
  3347  00020E                     l3346:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3351  00020E  51AA               	movf	vfpfcnvrt@done& (0+255),w,b
  3352  000210  11AB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3353  000212  B4D8               	btfsc	status,2,c
  3354  000214  EF0E  F001         	goto	u2861
  3355  000218  EF10  F001         	goto	u2860
  3356  00021C                     u2861:
  3357  00021C  EFDC  F000         	goto	l3344
  3358  000220                     u2860:
  3359  000220                     
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3362  000220  A057               	btfss	_flags^0,0,c
  3363  000222  EF15  F001         	goto	u2871
  3364  000226  EF17  F001         	goto	u2870
  3365  00022A                     u2871:
  3366  00022A  EF18  F001         	goto	l3350
  3367  00022E                     u2870:
  3368  00022E                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3371  00022E  9257               	bcf	_flags^0,1,c
  3372  000230                     l3350:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3376  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3377  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3378  000238  CFDE FFF6          	movff	postinc2,tblptrl
  3379  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  3380  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3381  000240  6AF8               	clrf	tblptru,c
  3382  000242                     	endif
  3383  000242                     	if	0	;tblptru may be non-zero
  3384  000242                     	endif
  3385  000242  0008               	tblrd		*
  3386  000244  50F5               	movf	tablat,w,c
  3387  000246  0A2A               	xorlw	42
  3388  000248  A4D8               	btfss	status,2,c
  3389  00024A  EF29  F001         	goto	u2881
  3390  00024E  EF2B  F001         	goto	u2880
  3391  000252                     u2881:
  3392  000252  EF54  F001         	goto	l3358
  3393  000256                     u2880:
  3394  000256                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3397  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399  00025E  2ADE               	incf	postinc2,f,c
  3400  000260  0E00               	movlw	0
  3401  000262  22DD               	addwfc	postdec2,f,c
  3402                           
  3403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3404  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3405  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3406  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3407  000270  0E02               	movlw	2
  3408  000272  26DE               	addwf	postinc2,f,c
  3409  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3410  000278  0E00               	movlw	0
  3411  00027A  22DD               	addwfc	postdec2,f,c
  3412  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3413  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3414  000284  CFDE F08A          	movff	postinc2,_width
  3415  000288  CFDD F08B          	movff	postdec2,_width+1
  3416  00028C                     
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3419  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  3420  00028E  EF4D  F001         	goto	u2890
  3421  000292  EF4B  F001         	goto	u2891
  3422  000296                     u2891:
  3423  000296  EF99  F001         	goto	l3368
  3424  00029A                     u2890:
  3425  00029A                     
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3428  00029A  8057               	bsf	_flags^0,0,c
  3429                           
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3431  00029C  6D8A               	negf	_width& (0+255),b
  3432  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  3433  0002A0  B0D8               	btfsc	status,0,c
  3434  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  3435  0002A4  EF99  F001         	goto	l3368
  3436  0002A8                     l3358:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3440  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3441  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3442  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  3443  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  3444  0002B8  EC03  F008         	call	_atoi	;wreg free
  3445  0002BC  C00C  F08A         	movff	?_atoi,_width
  3446  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  3447                           
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3449  0002C4  EF6B  F001         	goto	l3362
  3450  0002C8                     l3360:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3454  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3455  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3456  0002D0  2ADE               	incf	postinc2,f,c
  3457  0002D2  0E00               	movlw	0
  3458  0002D4  22DD               	addwfc	postdec2,f,c
  3459  0002D6                     l3362:
  3460  0002D6  0ED0               	movlw	208
  3461  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  3462  0002DA  0EFF               	movlw	255
  3463  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  3464  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3465  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3466  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  3467  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  3468  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3469  0002EE  6AF8               	clrf	tblptru,c
  3470  0002F0                     	endif
  3471  0002F0                     	if	0	;tblptru may be non-zero
  3472  0002F0                     	endif
  3473  0002F0  0008               	tblrd		*
  3474  0002F2  50F5               	movf	tablat,w,c
  3475  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  3476  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  3477  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  3478  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3479  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  3480  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3481  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  3482  000302  E10A               	bnz	u2900
  3483  000304  0E0A               	movlw	10
  3484  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3485  000308  A0D8               	btfss	status,0,c
  3486  00030A  EF89  F001         	goto	u2901
  3487  00030E  EF8C  F001         	goto	u2900
  3488  000312                     u2901:
  3489  000312  0E01               	movlw	1
  3490  000314  EF8D  F001         	goto	u2910
  3491  000318                     u2900:
  3492  000318  0E00               	movlw	0
  3493  00031A                     u2910:
  3494  00031A  0100               	movlb	0	; () banked
  3495  00031C  6FAC               	movwf	_vfpfcnvrt$1265& (0+255),b
  3496  00031E  6BAD               	clrf	(_vfpfcnvrt$1265+1)& (0+255),b
  3497  000320                     
  3498                           ; BSR set to: 0
  3499  000320  51AC               	movf	_vfpfcnvrt$1265& (0+255),w,b
  3500  000322  11AD               	iorwf	(_vfpfcnvrt$1265+1)& (0+255),w,b
  3501  000324  A4D8               	btfss	status,2,c
  3502  000326  EF97  F001         	goto	u2921
  3503  00032A  EF99  F001         	goto	u2920
  3504  00032E                     u2921:
  3505  00032E  EF64  F001         	goto	l3360
  3506  000332                     u2920:
  3507  000332                     l3368:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3511  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3512  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3513  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  3514  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  3515  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3516  000342  6AF8               	clrf	tblptru,c
  3517  000344                     	endif
  3518  000344                     	if	0	;tblptru may be non-zero
  3519  000344                     	endif
  3520  000344  0008               	tblrd		*
  3521  000346  50F5               	movf	tablat,w,c
  3522  000348  0A64               	xorlw	100
  3523  00034A  B4D8               	btfsc	status,2,c
  3524  00034C  EFAA  F001         	goto	u2931
  3525  000350  EFAC  F001         	goto	u2930
  3526  000354                     u2931:
  3527  000354  EFBF  F001         	goto	l3372
  3528  000358                     u2930:
  3529  000358                     
  3530                           ; BSR set to: 0
  3531  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3532  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3533  000360  CFDE FFF6          	movff	postinc2,tblptrl
  3534  000364  CFDD FFF7          	movff	postdec2,tblptrh
  3535  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3536  000368  6AF8               	clrf	tblptru,c
  3537  00036A                     	endif
  3538  00036A                     	if	0	;tblptru may be non-zero
  3539  00036A                     	endif
  3540  00036A  0008               	tblrd		*
  3541  00036C  50F5               	movf	tablat,w,c
  3542  00036E  0A69               	xorlw	105
  3543  000370  A4D8               	btfss	status,2,c
  3544  000372  EFBD  F001         	goto	u2941
  3545  000376  EFBF  F001         	goto	u2940
  3546  00037A                     u2941:
  3547  00037A  EFFF  F001         	goto	l3378
  3548  00037E                     u2940:
  3549  00037E                     l3372:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3553  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3554  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3555  000386  2ADE               	incf	postinc2,f,c
  3556  000388  0E00               	movlw	0
  3557  00038A  22DD               	addwfc	postdec2,f,c
  3558                           
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3560  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3561  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3562  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3563  000398  0E02               	movlw	2
  3564  00039A  26DE               	addwf	postinc2,f,c
  3565  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3566  0003A0  0E00               	movlw	0
  3567  0003A2  22DD               	addwfc	postdec2,f,c
  3568  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3569  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3570  0003AC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@ll
  3571  0003B0  CFDD F0A1          	movff	postdec2,vfpfcnvrt@ll+1
  3572  0003B4  0E00               	movlw	0
  3573  0003B6  BFA1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3574  0003B8  0EFF               	movlw	-1
  3575  0003BA  6FA2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3576  0003BC  6FA3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3577  0003BE  6FA4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3578  0003C0  6FA5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3579  0003C2  6FA6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3580  0003C4  6FA7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3581  0003C6                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3584  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  3585  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3586  0003CE  C0A0  F024         	movff	vfpfcnvrt@ll,dtoa@d
  3587  0003D2  C0A1  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3588  0003D6  C0A2  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3589  0003DA  C0A3  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3590  0003DE  C0A4  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3591  0003E2  C0A5  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3592  0003E6  C0A6  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3593  0003EA  C0A7  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3594  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  3595  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  3596  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3597  0003FA  EF59  F003         	goto	l788
  3598  0003FE                     l3378:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3602  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3603  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3604  000406  CFDE FFF6          	movff	postinc2,tblptrl
  3605  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  3606  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3607  00040E  6AF8               	clrf	tblptru,c
  3608  000410                     	endif
  3609  000410                     	if	0	;tblptru may be non-zero
  3610  000410                     	endif
  3611  000410  0008               	tblrd		*
  3612  000412  50F5               	movf	tablat,w,c
  3613  000414  0A73               	xorlw	115
  3614  000416  A4D8               	btfss	status,2,c
  3615  000418  EF10  F002         	goto	u2951
  3616  00041C  EF12  F002         	goto	u2950
  3617  000420                     u2951:
  3618  000420  EF3D  F002         	goto	l3386
  3619  000424                     u2950:
  3620  000424                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3623  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3624  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3625  00042C  2ADE               	incf	postinc2,f,c
  3626  00042E  0E00               	movlw	0
  3627  000430  22DD               	addwfc	postdec2,f,c
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3630  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3631  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3632  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3633  00043E  0E02               	movlw	2
  3634  000440  26DE               	addwf	postinc2,f,c
  3635  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3636  000446  0E00               	movlw	0
  3637  000448  22DD               	addwfc	postdec2,f,c
  3638  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3639  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3640  000452  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  3641  000456  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  3642  00045A                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3645  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  3646  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3647  000462  C0A8  F012         	movff	vfpfcnvrt@cp,stoa@s
  3648  000466  C0A9  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3649  00046A  EC36  F007         	call	_stoa	;wreg free
  3650  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  3651  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  3652  000476  EF59  F003         	goto	l788
  3653  00047A                     l3386:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  3657  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3658  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3659  000482  CFDE FFF6          	movff	postinc2,tblptrl
  3660  000486  CFDD FFF7          	movff	postdec2,tblptrh
  3661  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3662  00048A  6AF8               	clrf	tblptru,c
  3663  00048C                     	endif
  3664  00048C                     	if	0	;tblptru may be non-zero
  3665  00048C                     	endif
  3666  00048C  0008               	tblrd		*
  3667  00048E  50F5               	movf	tablat,w,c
  3668  000490  0A75               	xorlw	117
  3669  000492  A4D8               	btfss	status,2,c
  3670  000494  EF4E  F002         	goto	u2961
  3671  000498  EF50  F002         	goto	u2960
  3672  00049C                     u2961:
  3673  00049C  EF91  F002         	goto	l3394
  3674  0004A0                     u2960:
  3675  0004A0                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  3678  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3679  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3680  0004A8  2ADE               	incf	postinc2,f,c
  3681  0004AA  0E00               	movlw	0
  3682  0004AC  22DD               	addwfc	postdec2,f,c
  3683                           
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3685  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3686  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3687  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3688  0004BA  0E02               	movlw	2
  3689  0004BC  26DE               	addwf	postinc2,f,c
  3690  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3691  0004C2  0E00               	movlw	0
  3692  0004C4  22DD               	addwfc	postdec2,f,c
  3693  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3694  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3695  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3696  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3697  0004D6  C051  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3698  0004DA  C052  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3699  0004DE  6BB1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3700  0004E0  6BB2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3701  0004E2  6BB3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3702  0004E4  6BB4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3703  0004E6  6BB5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3704  0004E8  6BB6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3705  0004EA                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  3708  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  3709  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3710  0004F2  C0AF  F024         	movff	vfpfcnvrt@llu,utoa@d
  3711  0004F6  C0B0  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3712  0004FA  C0B1  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3713  0004FE  C0B2  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3714  000502  C0B3  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3715  000506  C0B4  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3716  00050A  C0B5  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3717  00050E  C0B6  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3718  000512  EC35  F006         	call	_utoa	;wreg free
  3719  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  3720  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  3721  00051E  EF59  F003         	goto	l788
  3722  000522                     l3394:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3726  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3727  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3728  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  3729  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  3730  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3731  000532  6AF8               	clrf	tblptru,c
  3732  000534                     	endif
  3733  000534                     	if	0	;tblptru may be non-zero
  3734  000534                     	endif
  3735  000534  0008               	tblrd		*
  3736  000536  50F5               	movf	tablat,w,c
  3737  000538  0A78               	xorlw	120
  3738  00053A  B4D8               	btfsc	status,2,c
  3739  00053C  EFA2  F002         	goto	u2971
  3740  000540  EFA4  F002         	goto	u2970
  3741  000544                     u2971:
  3742  000544  EFB7  F002         	goto	l3398
  3743  000548                     u2970:
  3744  000548                     
  3745                           ; BSR set to: 0
  3746  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3747  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3748  000550  CFDE FFF6          	movff	postinc2,tblptrl
  3749  000554  CFDD FFF7          	movff	postdec2,tblptrh
  3750  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3751  000558  6AF8               	clrf	tblptru,c
  3752  00055A                     	endif
  3753  00055A                     	if	0	;tblptru may be non-zero
  3754  00055A                     	endif
  3755  00055A  0008               	tblrd		*
  3756  00055C  50F5               	movf	tablat,w,c
  3757  00055E  0A58               	xorlw	88
  3758  000560  A4D8               	btfss	status,2,c
  3759  000562  EFB5  F002         	goto	u2981
  3760  000566  EFB7  F002         	goto	u2980
  3761  00056A                     u2981:
  3762  00056A  EF06  F003         	goto	l3408
  3763  00056E                     u2980:
  3764  00056E                     l3398:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3768  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3769  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3770  000576  CFDE FFF6          	movff	postinc2,tblptrl
  3771  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  3772  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3773  00057E  6AF8               	clrf	tblptru,c
  3774  000580                     	endif
  3775  000580                     	if	0	;tblptru may be non-zero
  3776  000580                     	endif
  3777  000580  0008               	tblrd		*
  3778  000582  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  3779  000586                     
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3782  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3783  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3784  00058E  2ADE               	incf	postinc2,f,c
  3785  000590  0E00               	movlw	0
  3786  000592  22DD               	addwfc	postdec2,f,c
  3787  000594                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3790  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3791  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3792  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3793  0005A0  0E02               	movlw	2
  3794  0005A2  26DE               	addwf	postinc2,f,c
  3795  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3796  0005A8  0E00               	movlw	0
  3797  0005AA  22DD               	addwfc	postdec2,f,c
  3798  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3799  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3800  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3801  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3802  0005BC  C051  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3803  0005C0  C052  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3804  0005C4  6BB1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3805  0005C6  6BB2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3806  0005C8  6BB3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3807  0005CA  6BB4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3808  0005CC  6BB5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3809  0005CE  6BB6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3810  0005D0                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3813  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3814  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3815  0005D8  C0AF  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3816  0005DC  C0B0  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3817  0005E0  C0B1  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3818  0005E4  C0B2  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3819  0005E8  C0B3  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3820  0005EC  C0B4  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3821  0005F0  C0B5  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3822  0005F4  C0B6  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3823  0005F8  C0AE  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3824  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  3825  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3826  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3827  000608  EF59  F003         	goto	l788
  3828  00060C                     l3408:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3832  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3833  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3834  000614  CFDE FFF6          	movff	postinc2,tblptrl
  3835  000618  CFDD FFF7          	movff	postdec2,tblptrh
  3836  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3837  00061C  6AF8               	clrf	tblptru,c
  3838  00061E                     	endif
  3839  00061E                     	if	0	;tblptru may be non-zero
  3840  00061E                     	endif
  3841  00061E  0008               	tblrd		*
  3842  000620  50F5               	movf	tablat,w,c
  3843  000622  0A25               	xorlw	37
  3844  000624  A4D8               	btfss	status,2,c
  3845  000626  EF17  F003         	goto	u2991
  3846  00062A  EF19  F003         	goto	u2990
  3847  00062E                     u2991:
  3848  00062E  EF30  F003         	goto	l3418
  3849  000632                     u2990:
  3850  000632                     
  3851                           ; BSR set to: 0
  3852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3853  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3854  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3855  00063A  2ADE               	incf	postinc2,f,c
  3856  00063C  0E00               	movlw	0
  3857  00063E  22DD               	addwfc	postdec2,f,c
  3858  000640                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3861  000640  0E00               	movlw	0
  3862  000642  6E08               	movwf	(fputc@c+1)^0,c
  3863  000644  0E25               	movlw	37
  3864  000646  6E07               	movwf	fputc@c^0,c
  3865  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3866  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3867  000650  EC06  F00D         	call	_fputc	;wreg free
  3868  000654                     l3414:
  3869                           
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3871  000654  0E00               	movlw	0
  3872  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3873  000658  0E01               	movlw	1
  3874  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  3875  00065C  EF59  F003         	goto	l788
  3876  000660                     l3418:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3880  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3881  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3882  000668  2ADE               	incf	postinc2,f,c
  3883  00066A  0E00               	movlw	0
  3884  00066C  22DD               	addwfc	postdec2,f,c
  3885  00066E                     
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3888  00066E  0E00               	movlw	0
  3889  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3890  000672  0E00               	movlw	0
  3891  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  3892  000676  EF59  F003         	goto	l788
  3893  00067A                     l3424:
  3894                           
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3896  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3897  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3898  000682  CFDE FFF6          	movff	postinc2,tblptrl
  3899  000686  CFDD FFF7          	movff	postdec2,tblptrh
  3900  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3901  00068A  6AF8               	clrf	tblptru,c
  3902  00068C                     	endif
  3903  00068C                     	if	0	;tblptru may be non-zero
  3904  00068C                     	endif
  3905  00068C  0008               	tblrd		*
  3906  00068E  50F5               	movf	tablat,w,c
  3907  000690  6E07               	movwf	fputc@c^0,c
  3908  000692  6A08               	clrf	(fputc@c+1)^0,c
  3909  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3910  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3911  00069C  EC06  F00D         	call	_fputc	;wreg free
  3912  0006A0                     
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3914  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3915  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3916  0006A8  2ADE               	incf	postinc2,f,c
  3917  0006AA  0E00               	movlw	0
  3918  0006AC  22DD               	addwfc	postdec2,f,c
  3919  0006AE  EF2A  F003         	goto	l3414
  3920  0006B2                     l788:
  3921  0006B2  0012               	return		;funcret
  3922  0006B4                     __end_of_vfpfcnvrt:
  3923                           	opt callstack 0
  3924                           
  3925 ;; *************** function _xtoa *****************
  3926 ;; Defined at:
  3927 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3930 ;;		 -> NULL(0), 
  3931 ;;  d               8   35[COMRAM] unsigned long long 
  3932 ;;  x               1   43[COMRAM] unsigned char 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  n               8   60[COMRAM] unsigned long long 
  3935 ;;  c               2   70[COMRAM] int 
  3936 ;;  i               2   68[COMRAM] int 
  3937 ;;  w               2   58[COMRAM] int 
  3938 ;;  p               2   56[COMRAM] int 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2   33[COMRAM] int 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3948 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3952 ;;Total ram usage:       39 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    9
  3955 ;; This function calls:
  3956 ;;		_isalpha
  3957 ;;		_isupper
  3958 ;;		_pad
  3959 ;;		_toupper
  3960 ;; This function is called by:
  3961 ;;		_vfpfcnvrt
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text24
  3966  000994                     __ptext24:
  3967                           	opt callstack 0
  3968  000994                     _xtoa:
  3969                           	opt callstack 17
  3970  000994                     
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3972  000994  0100               	movlb	0	; () banked
  3973  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  3974  000998  EFD0  F004         	goto	u2611
  3975  00099C  EFD2  F004         	goto	u2610
  3976  0009A0                     u2611:
  3977  0009A0  EFD3  F004         	goto	l3206
  3978  0009A4                     u2610:
  3979  0009A4                     
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3982  0009A4  9257               	bcf	_flags^0,1,c
  3983  0009A6                     l3206:
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3987  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  3988  0009A8  EFE0  F004         	goto	u2620
  3989  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  3990  0009AE  E106               	bnz	u2621
  3991  0009B0  058C               	decf	_prec& (0+255),w,b
  3992  0009B2  B0D8               	btfsc	status,0,c
  3993  0009B4  EFDE  F004         	goto	u2621
  3994  0009B8  EFE0  F004         	goto	u2620
  3995  0009BC                     u2621:
  3996  0009BC  EFE6  F004         	goto	l734
  3997  0009C0                     u2620:
  3998  0009C0                     
  3999                           ; BSR set to: 0
  4000  0009C0  0E00               	movlw	0
  4001  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  4002  0009C4  0E01               	movlw	1
  4003  0009C6  6E39               	movwf	xtoa@p^0,c
  4004  0009C8  EFEA  F004         	goto	l736
  4005  0009CC                     l734:
  4006                           
  4007                           ; BSR set to: 0
  4008  0009CC  C08C  F039         	movff	_prec,xtoa@p
  4009  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  4010  0009D4                     l736:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4014  0009D4  C08A  F03B         	movff	_width,xtoa@w
  4015  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  4016                           
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4018  0009DC  A857               	btfss	_flags^0,4,c
  4019  0009DE  EFF3  F004         	goto	u2631
  4020  0009E2  EFF5  F004         	goto	u2630
  4021  0009E6                     u2631:
  4022  0009E6  EFF9  F004         	goto	l3212
  4023  0009EA                     u2630:
  4024  0009EA                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4027  0009EA  0EFE               	movlw	254
  4028  0009EC  263B               	addwf	xtoa@w^0,f,c
  4029  0009EE  0EFF               	movlw	255
  4030  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  4031  0009F2                     l3212:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4035  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  4036  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  4037  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  4038  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  4039  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  4040  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  4041  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  4042  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  4043  000A12                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4046  000A12  0E00               	movlw	0
  4047  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  4048  000A16  0E1F               	movlw	31
  4049  000A18  6E45               	movwf	xtoa@i^0,c
  4050  000A1A                     
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4053  000A1A  0E00               	movlw	0
  4054  000A1C  0101               	movlb	1	; () banked
  4055  000A1E  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4056                           
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4058  000A20  EFC5  F005         	goto	l3248
  4059  000A24                     l3218:
  4060                           
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4062  000A24  0645               	decf	xtoa@i^0,f,c
  4063  000A26  A0D8               	btfss	status,0,c
  4064  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  4065  000A2A                     
  4066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4067  000A2A  0E0F               	movlw	15
  4068  000A2C  143D               	andwf	xtoa@n^0,w,c
  4069  000A2E  6E47               	movwf	xtoa@c^0,c
  4070  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  4071  000A32                     
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4073  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  4074  000A34  EF25  F005         	goto	u2641
  4075  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  4076  000A3A  E109               	bnz	u2640
  4077  000A3C  0E0A               	movlw	10
  4078  000A3E  5C47               	subwf	xtoa@c^0,w,c
  4079  000A40  A0D8               	btfss	status,0,c
  4080  000A42  EF25  F005         	goto	u2641
  4081  000A46  EF27  F005         	goto	u2640
  4082  000A4A                     u2641:
  4083  000A4A  EF2F  F005         	goto	l3226
  4084  000A4E                     u2640:
  4085  000A4E  0E57               	movlw	87
  4086  000A50  2447               	addwf	xtoa@c^0,w,c
  4087  000A52  6E47               	movwf	xtoa@c^0,c
  4088  000A54  0E00               	movlw	0
  4089  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  4090  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  4091  000A5A  EF35  F005         	goto	l743
  4092  000A5E                     l3226:
  4093  000A5E  0E30               	movlw	48
  4094  000A60  2447               	addwf	xtoa@c^0,w,c
  4095  000A62  6E47               	movwf	xtoa@c^0,c
  4096  000A64  0E00               	movlw	0
  4097  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  4098  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  4099  000A6A                     l743:
  4100  000A6A  0EBF               	movlw	191
  4101  000A6C  6E2D               	movwf	??_xtoa^0,c
  4102  000A6E  0EFF               	movlw	255
  4103  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  4104  000A72  502C               	movf	xtoa@x^0,w,c
  4105  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  4106  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  4107  000A78  502D               	movf	??_xtoa^0,w,c
  4108  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  4109  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  4110  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  4111  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  4112  000A82  E10A               	bnz	u2650
  4113  000A84  0E1A               	movlw	26
  4114  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  4115  000A88  A0D8               	btfss	status,0,c
  4116  000A8A  EF49  F005         	goto	u2651
  4117  000A8E  EF4C  F005         	goto	u2650
  4118  000A92                     u2651:
  4119  000A92  0E01               	movlw	1
  4120  000A94  EF4D  F005         	goto	u2660
  4121  000A98                     u2650:
  4122  000A98  0E00               	movlw	0
  4123  000A9A                     u2660:
  4124  000A9A  6E35               	movwf	_xtoa$1250^0,c
  4125  000A9C  6A36               	clrf	(_xtoa$1250+1)^0,c
  4126  000A9E  5035               	movf	_xtoa$1250^0,w,c
  4127  000AA0  1036               	iorwf	(_xtoa$1250+1)^0,w,c
  4128  000AA2  B4D8               	btfsc	status,2,c
  4129  000AA4  EF56  F005         	goto	u2671
  4130  000AA8  EF58  F005         	goto	u2670
  4131  000AAC                     u2671:
  4132  000AAC  EF88  F005         	goto	l3240
  4133  000AB0                     u2670:
  4134  000AB0  0E9F               	movlw	159
  4135  000AB2  6E2D               	movwf	??_xtoa^0,c
  4136  000AB4  0EFF               	movlw	255
  4137  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  4138  000AB8  0E20               	movlw	32
  4139  000ABA  1047               	iorwf	xtoa@c^0,w,c
  4140  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  4141  000ABE  0E00               	movlw	0
  4142  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  4143  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  4144  000AC4  502D               	movf	??_xtoa^0,w,c
  4145  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  4146  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  4147  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  4148  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  4149  000ACE  E10A               	bnz	u2680
  4150  000AD0  0E1A               	movlw	26
  4151  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  4152  000AD4  A0D8               	btfss	status,0,c
  4153  000AD6  EF6F  F005         	goto	u2681
  4154  000ADA  EF72  F005         	goto	u2680
  4155  000ADE                     u2681:
  4156  000ADE  0E01               	movlw	1
  4157  000AE0  EF73  F005         	goto	u2690
  4158  000AE4                     u2680:
  4159  000AE4  0E00               	movlw	0
  4160  000AE6                     u2690:
  4161  000AE6  6E37               	movwf	_xtoa$1251^0,c
  4162  000AE8  6A38               	clrf	(_xtoa$1251+1)^0,c
  4163  000AEA  5037               	movf	_xtoa$1251^0,w,c
  4164  000AEC  1038               	iorwf	(_xtoa$1251+1)^0,w,c
  4165  000AEE  B4D8               	btfsc	status,2,c
  4166  000AF0  EF7C  F005         	goto	u2701
  4167  000AF4  EF7E  F005         	goto	u2700
  4168  000AF8                     u2701:
  4169  000AF8  EF88  F005         	goto	l3240
  4170  000AFC                     u2700:
  4171  000AFC                     
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4173  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  4174  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  4175  000B04  ECBF  F00E         	call	_toupper	;wreg free
  4176  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  4177  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  4178  000B10                     l3240:
  4179                           
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4181  000B10  0EC8               	movlw	low _dbuf
  4182  000B12  2445               	addwf	xtoa@i^0,w,c
  4183  000B14  6ED9               	movwf	fsr2l,c
  4184  000B16  0E01               	movlw	high _dbuf
  4185  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  4186  000B1A  6EDA               	movwf	fsr2h,c
  4187  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  4188  000B20                     
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4190  000B20  0639               	decf	xtoa@p^0,f,c
  4191  000B22  A0D8               	btfss	status,0,c
  4192  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  4193  000B26                     
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4195  000B26  063B               	decf	xtoa@w^0,f,c
  4196  000B28  A0D8               	btfss	status,0,c
  4197  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  4198  000B2C                     
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4200  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  4201  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  4202  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  4203  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  4204  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  4205  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  4206  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  4207  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  4208  000B4C  0E05               	movlw	5
  4209  000B4E  EFB2  F005         	goto	u2710
  4210  000B52                     u2715:
  4211  000B52  90D8               	bcf	status,0,c
  4212  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  4213  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  4214  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  4215  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  4216  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  4217  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  4218  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  4219  000B62  322D               	rrcf	??_xtoa^0,f,c
  4220  000B64                     u2710:
  4221  000B64  2EE8               	decfsz	wreg,f,c
  4222  000B66  EFA9  F005         	goto	u2715
  4223  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  4224  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  4225  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  4226  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  4227  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  4228  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  4229  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  4230  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  4231  000B8A                     l3248:
  4232                           
  4233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4234  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  4235  000B8C  EFD1  F005         	goto	u2721
  4236  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  4237  000B92  E109               	bnz	u2720
  4238  000B94  0E02               	movlw	2
  4239  000B96  5C45               	subwf	xtoa@i^0,w,c
  4240  000B98  A0D8               	btfss	status,0,c
  4241  000B9A  EFD1  F005         	goto	u2721
  4242  000B9E  EFD3  F005         	goto	u2720
  4243  000BA2                     u2721:
  4244  000BA2  EF03  F006         	goto	l757
  4245  000BA6                     u2720:
  4246  000BA6  503D               	movf	xtoa@n^0,w,c
  4247  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  4248  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  4249  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  4250  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  4251  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  4252  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  4253  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  4254  000BB6  A4D8               	btfss	status,2,c
  4255  000BB8  EFE0  F005         	goto	u2731
  4256  000BBC  EFE2  F005         	goto	u2730
  4257  000BC0                     u2731:
  4258  000BC0  EF12  F005         	goto	l3218
  4259  000BC4                     u2730:
  4260  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  4261  000BC6  EFEF  F005         	goto	u2740
  4262  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  4263  000BCC  E106               	bnz	u2741
  4264  000BCE  0439               	decf	xtoa@p^0,w,c
  4265  000BD0  B0D8               	btfsc	status,0,c
  4266  000BD2  EFED  F005         	goto	u2741
  4267  000BD6  EFEF  F005         	goto	u2740
  4268  000BDA                     u2741:
  4269  000BDA  EF12  F005         	goto	l3218
  4270  000BDE                     u2740:
  4271  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  4272  000BE0  EFFA  F005         	goto	u2751
  4273  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  4274  000BE6  E108               	bnz	u2750
  4275  000BE8  043B               	decf	xtoa@w^0,w,c
  4276  000BEA  A0D8               	btfss	status,0,c
  4277  000BEC  EFFA  F005         	goto	u2751
  4278  000BF0  EFFC  F005         	goto	u2750
  4279  000BF4                     u2751:
  4280  000BF4  EF03  F006         	goto	l757
  4281  000BF8                     u2750:
  4282  000BF8  B257               	btfsc	_flags^0,1,c
  4283  000BFA  EF01  F006         	goto	u2761
  4284  000BFE  EF03  F006         	goto	u2760
  4285  000C02                     u2761:
  4286  000C02  EF12  F005         	goto	l3218
  4287  000C06                     u2760:
  4288  000C06                     l757:
  4289                           
  4290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4291  000C06  A857               	btfss	_flags^0,4,c
  4292  000C08  EF08  F006         	goto	u2771
  4293  000C0C  EF0A  F006         	goto	u2770
  4294  000C10                     u2771:
  4295  000C10  EF20  F006         	goto	l3264
  4296  000C14                     u2770:
  4297  000C14                     
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4299  000C14  0645               	decf	xtoa@i^0,f,c
  4300  000C16  A0D8               	btfss	status,0,c
  4301  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  4302  000C1A                     
  4303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4304  000C1A  0EC8               	movlw	low _dbuf
  4305  000C1C  2445               	addwf	xtoa@i^0,w,c
  4306  000C1E  6ED9               	movwf	fsr2l,c
  4307  000C20  0E01               	movlw	high _dbuf
  4308  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  4309  000C24  6EDA               	movwf	fsr2h,c
  4310  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  4311  000C2A                     
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4313  000C2A  0645               	decf	xtoa@i^0,f,c
  4314  000C2C  A0D8               	btfss	status,0,c
  4315  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  4316                           
  4317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4318  000C30  0EC8               	movlw	low _dbuf
  4319  000C32  2445               	addwf	xtoa@i^0,w,c
  4320  000C34  6ED9               	movwf	fsr2l,c
  4321  000C36  0E01               	movlw	high _dbuf
  4322  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  4323  000C3A  6EDA               	movwf	fsr2h,c
  4324  000C3C  0E30               	movlw	48
  4325  000C3E  6EDF               	movwf	indf2,c
  4326  000C40                     l3264:
  4327                           
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4329  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  4330  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  4331  000C48  0EC8               	movlw	low _dbuf
  4332  000C4A  2445               	addwf	xtoa@i^0,w,c
  4333  000C4C  6E19               	movwf	pad@buf^0,c
  4334  000C4E  0E01               	movlw	high _dbuf
  4335  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  4336  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  4337  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  4338  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  4339  000C5C  EC95  F00B         	call	_pad	;wreg free
  4340  000C60  C017  F022         	movff	?_pad,?_xtoa
  4341  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  4342  000C68  0012               	return		;funcret
  4343  000C6A                     __end_of_xtoa:
  4344                           	opt callstack 0
  4345                           
  4346 ;; *************** function _toupper *****************
  4347 ;; Defined at:
  4348 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  c               2   10[COMRAM] int 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2   10[COMRAM] int 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;Total ram usage:        8 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    5
  4369 ;; This function calls:
  4370 ;;		_islower
  4371 ;; This function is called by:
  4372 ;;		_xtoa
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text25
  4377  001D7E                     __ptext25:
  4378                           	opt callstack 0
  4379  001D7E                     _toupper:
  4380                           	opt callstack 20
  4381  001D7E  0E9F               	movlw	159
  4382  001D80  6E0D               	movwf	??_toupper^0,c
  4383  001D82  0EFF               	movlw	255
  4384  001D84  6E0E               	movwf	(??_toupper+1)^0,c
  4385  001D86  C00B  F00F         	movff	toupper@c,??_toupper+2
  4386  001D8A  C00C  F010         	movff	toupper@c+1,??_toupper+3
  4387  001D8E  500D               	movf	??_toupper^0,w,c
  4388  001D90  260F               	addwf	(??_toupper+2)^0,f,c
  4389  001D92  500E               	movf	(??_toupper+1)^0,w,c
  4390  001D94  2210               	addwfc	(??_toupper+3)^0,f,c
  4391  001D96  5010               	movf	(??_toupper+3)^0,w,c
  4392  001D98  E10A               	bnz	u2020
  4393  001D9A  0E1A               	movlw	26
  4394  001D9C  5C0F               	subwf	(??_toupper+2)^0,w,c
  4395  001D9E  A0D8               	btfss	status,0,c
  4396  001DA0  EFD4  F00E         	goto	u2021
  4397  001DA4  EFD7  F00E         	goto	u2020
  4398  001DA8                     u2021:
  4399  001DA8  0E01               	movlw	1
  4400  001DAA  EFD8  F00E         	goto	u2030
  4401  001DAE                     u2020:
  4402  001DAE  0E00               	movlw	0
  4403  001DB0                     u2030:
  4404  001DB0  6E11               	movwf	_toupper$1816^0,c
  4405  001DB2  6A12               	clrf	(_toupper$1816+1)^0,c
  4406  001DB4  5011               	movf	_toupper$1816^0,w,c
  4407  001DB6  1012               	iorwf	(_toupper$1816+1)^0,w,c
  4408  001DB8  B4D8               	btfsc	status,2,c
  4409  001DBA  EFE1  F00E         	goto	u2041
  4410  001DBE  EFE3  F00E         	goto	u2040
  4411  001DC2                     u2041:
  4412  001DC2  EFE9  F00E         	goto	l1576
  4413  001DC6                     u2040:
  4414  001DC6  0E5F               	movlw	95
  4415  001DC8  140B               	andwf	toupper@c^0,w,c
  4416  001DCA  6E0B               	movwf	?_toupper^0,c
  4417  001DCC  6A0C               	clrf	(?_toupper+1)^0,c
  4418  001DCE  EFED  F00E         	goto	l1581
  4419  001DD2                     l1576:
  4420  001DD2  C00B  F00B         	movff	toupper@c,?_toupper
  4421  001DD6  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  4422  001DDA                     l1581:
  4423  001DDA  0012               	return		;funcret
  4424  001DDC                     __end_of_toupper:
  4425                           	opt callstack 0
  4426                           
  4427 ;; *************** function _islower *****************
  4428 ;; Defined at:
  4429 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  c               2    4[COMRAM] int 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  2    4[COMRAM] int 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4445 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4447 ;;Total ram usage:        6 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    4
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_toupper
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text26
  4458  002120                     __ptext26:
  4459                           	opt callstack 0
  4460  002120                     _islower:
  4461                           	opt callstack 20
  4462  002120  0E9F               	movlw	159
  4463  002122  6E07               	movwf	??_islower^0,c
  4464  002124  0EFF               	movlw	255
  4465  002126  6E08               	movwf	(??_islower+1)^0,c
  4466  002128  C005  F009         	movff	islower@c,??_islower+2
  4467  00212C  C006  F00A         	movff	islower@c+1,??_islower+3
  4468  002130  5007               	movf	??_islower^0,w,c
  4469  002132  2609               	addwf	(??_islower+2)^0,f,c
  4470  002134  5008               	movf	(??_islower+1)^0,w,c
  4471  002136  220A               	addwfc	(??_islower+3)^0,f,c
  4472  002138  500A               	movf	(??_islower+3)^0,w,c
  4473  00213A  E10A               	bnz	u1910
  4474  00213C  0E1A               	movlw	26
  4475  00213E  5C09               	subwf	(??_islower+2)^0,w,c
  4476  002140  A0D8               	btfss	status,0,c
  4477  002142  EFA5  F010         	goto	u1911
  4478  002146  EFA8  F010         	goto	u1910
  4479  00214A                     u1911:
  4480  00214A  0E01               	movlw	1
  4481  00214C  EFA9  F010         	goto	u1920
  4482  002150                     u1910:
  4483  002150  0E00               	movlw	0
  4484  002152                     u1920:
  4485  002152  6E05               	movwf	?_islower^0,c
  4486  002154  6A06               	clrf	(?_islower+1)^0,c
  4487  002156  0012               	return		;funcret
  4488  002158                     __end_of_islower:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function _isupper *****************
  4492 ;; Defined at:
  4493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  c               2    4[COMRAM] int 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  2    4[COMRAM] int 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;Total ram usage:        6 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_xtoa
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text27
  4522  002158                     __ptext27:
  4523                           	opt callstack 0
  4524  002158                     _isupper:
  4525                           	opt callstack 21
  4526  002158  0EBF               	movlw	191
  4527  00215A  6E07               	movwf	??_isupper^0,c
  4528  00215C  0EFF               	movlw	255
  4529  00215E  6E08               	movwf	(??_isupper+1)^0,c
  4530  002160  C005  F009         	movff	isupper@c,??_isupper+2
  4531  002164  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4532  002168  5007               	movf	??_isupper^0,w,c
  4533  00216A  2609               	addwf	(??_isupper+2)^0,f,c
  4534  00216C  5008               	movf	(??_isupper+1)^0,w,c
  4535  00216E  220A               	addwfc	(??_isupper+3)^0,f,c
  4536  002170  500A               	movf	(??_isupper+3)^0,w,c
  4537  002172  E10A               	bnz	u1980
  4538  002174  0E1A               	movlw	26
  4539  002176  5C09               	subwf	(??_isupper+2)^0,w,c
  4540  002178  A0D8               	btfss	status,0,c
  4541  00217A  EFC1  F010         	goto	u1981
  4542  00217E  EFC4  F010         	goto	u1980
  4543  002182                     u1981:
  4544  002182  0E01               	movlw	1
  4545  002184  EFC5  F010         	goto	u1990
  4546  002188                     u1980:
  4547  002188  0E00               	movlw	0
  4548  00218A                     u1990:
  4549  00218A  6E05               	movwf	?_isupper^0,c
  4550  00218C  6A06               	clrf	(?_isupper+1)^0,c
  4551  00218E  0012               	return		;funcret
  4552  002190                     __end_of_isupper:
  4553                           	opt callstack 0
  4554                           
  4555 ;; *************** function _isalpha *****************
  4556 ;; Defined at:
  4557 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  c               2    4[COMRAM] int 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2    4[COMRAM] int 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;Total ram usage:        6 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    4
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_xtoa
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text28
  4586  0020E4                     __ptext28:
  4587                           	opt callstack 0
  4588  0020E4                     _isalpha:
  4589                           	opt callstack 21
  4590  0020E4  0E9F               	movlw	159
  4591  0020E6  6E07               	movwf	??_isalpha^0,c
  4592  0020E8  0EFF               	movlw	255
  4593  0020EA  6E08               	movwf	(??_isalpha+1)^0,c
  4594  0020EC  0E20               	movlw	32
  4595  0020EE  1005               	iorwf	isalpha@c^0,w,c
  4596  0020F0  6E09               	movwf	(??_isalpha+2)^0,c
  4597  0020F2  0E00               	movlw	0
  4598  0020F4  1006               	iorwf	(isalpha@c+1)^0,w,c
  4599  0020F6  6E0A               	movwf	(??_isalpha+3)^0,c
  4600  0020F8  5007               	movf	??_isalpha^0,w,c
  4601  0020FA  2609               	addwf	(??_isalpha+2)^0,f,c
  4602  0020FC  5008               	movf	(??_isalpha+1)^0,w,c
  4603  0020FE  220A               	addwfc	(??_isalpha+3)^0,f,c
  4604  002100  500A               	movf	(??_isalpha+3)^0,w,c
  4605  002102  E10A               	bnz	u2000
  4606  002104  0E1A               	movlw	26
  4607  002106  5C09               	subwf	(??_isalpha+2)^0,w,c
  4608  002108  A0D8               	btfss	status,0,c
  4609  00210A  EF89  F010         	goto	u2001
  4610  00210E  EF8C  F010         	goto	u2000
  4611  002112                     u2001:
  4612  002112  0E01               	movlw	1
  4613  002114  EF8D  F010         	goto	u2010
  4614  002118                     u2000:
  4615  002118  0E00               	movlw	0
  4616  00211A                     u2010:
  4617  00211A  6E05               	movwf	?_isalpha^0,c
  4618  00211C  6A06               	clrf	(?_isalpha+1)^0,c
  4619  00211E  0012               	return		;funcret
  4620  002120                     __end_of_isalpha:
  4621                           	opt callstack 0
  4622                           
  4623 ;; *************** function _utoa *****************
  4624 ;; Defined at:
  4625 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4628 ;;		 -> NULL(0), 
  4629 ;;  d               8   35[COMRAM] unsigned long long 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  n               8   55[COMRAM] unsigned long long 
  4632 ;;  i               2   63[COMRAM] int 
  4633 ;;  w               2   53[COMRAM] int 
  4634 ;;  p               2   51[COMRAM] int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  2   33[COMRAM] int 
  4637 ;; Registers used:
  4638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4644 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4645 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4646 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4647 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4648 ;;Total ram usage:       32 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    9
  4651 ;; This function calls:
  4652 ;;		___lodiv
  4653 ;;		___lomod
  4654 ;;		_pad
  4655 ;; This function is called by:
  4656 ;;		_vfpfcnvrt
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text29
  4661  000C6A                     __ptext29:
  4662                           	opt callstack 0
  4663  000C6A                     _utoa:
  4664                           	opt callstack 17
  4665  000C6A                     
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4667  000C6A  0100               	movlb	0	; () banked
  4668  000C6C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4669  000C6E  EF3B  F006         	goto	u2541
  4670  000C72  EF3D  F006         	goto	u2540
  4671  000C76                     u2541:
  4672  000C76  EF3E  F006         	goto	l3170
  4673  000C7A                     u2540:
  4674  000C7A                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4677  000C7A  9257               	bcf	_flags^0,1,c
  4678  000C7C                     l3170:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4682  000C7C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4683  000C7E  EF4B  F006         	goto	u2550
  4684  000C82  518D               	movf	(_prec+1)& (0+255),w,b
  4685  000C84  E106               	bnz	u2551
  4686  000C86  058C               	decf	_prec& (0+255),w,b
  4687  000C88  B0D8               	btfsc	status,0,c
  4688  000C8A  EF49  F006         	goto	u2551
  4689  000C8E  EF4B  F006         	goto	u2550
  4690  000C92                     u2551:
  4691  000C92  EF51  F006         	goto	l719
  4692  000C96                     u2550:
  4693  000C96                     
  4694                           ; BSR set to: 0
  4695  000C96  0E00               	movlw	0
  4696  000C98  6E35               	movwf	(utoa@p+1)^0,c
  4697  000C9A  0E01               	movlw	1
  4698  000C9C  6E34               	movwf	utoa@p^0,c
  4699  000C9E  EF55  F006         	goto	l721
  4700  000CA2                     l719:
  4701                           
  4702                           ; BSR set to: 0
  4703  000CA2  C08C  F034         	movff	_prec,utoa@p
  4704  000CA6  C08D  F035         	movff	_prec+1,utoa@p+1
  4705  000CAA                     l721:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  4709  000CAA  C08A  F036         	movff	_width,utoa@w
  4710  000CAE  C08B  F037         	movff	_width+1,utoa@w+1
  4711                           
  4712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  4713  000CB2  C024  F038         	movff	utoa@d,utoa@n
  4714  000CB6  C025  F039         	movff	utoa@d+1,utoa@n+1
  4715  000CBA  C026  F03A         	movff	utoa@d+2,utoa@n+2
  4716  000CBE  C027  F03B         	movff	utoa@d+3,utoa@n+3
  4717  000CC2  C028  F03C         	movff	utoa@d+4,utoa@n+4
  4718  000CC6  C029  F03D         	movff	utoa@d+5,utoa@n+5
  4719  000CCA  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  4720  000CCE  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  4721  000CD2                     
  4722                           ; BSR set to: 0
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4724  000CD2  0E00               	movlw	0
  4725  000CD4  6E41               	movwf	(utoa@i+1)^0,c
  4726  000CD6  0E1F               	movlw	31
  4727  000CD8  6E40               	movwf	utoa@i^0,c
  4728  000CDA                     
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4731  000CDA  0E00               	movlw	0
  4732  000CDC  0101               	movlb	1	; () banked
  4733  000CDE  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4734                           
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4736  000CE0  EFE8  F006         	goto	l3188
  4737  000CE4                     l3178:
  4738                           
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4740  000CE4  0640               	decf	utoa@i^0,f,c
  4741  000CE6  A0D8               	btfss	status,0,c
  4742  000CE8  0641               	decf	(utoa@i+1)^0,f,c
  4743  000CEA                     
  4744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4745  000CEA  0EC8               	movlw	low _dbuf
  4746  000CEC  2440               	addwf	utoa@i^0,w,c
  4747  000CEE  6ED9               	movwf	fsr2l,c
  4748  000CF0  0E01               	movlw	high _dbuf
  4749  000CF2  2041               	addwfc	(utoa@i+1)^0,w,c
  4750  000CF4  6EDA               	movwf	fsr2h,c
  4751  000CF6  C038  F005         	movff	utoa@n,___lomod@dividend
  4752  000CFA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  4753  000CFE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  4754  000D02  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  4755  000D06  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  4756  000D0A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  4757  000D0E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  4758  000D12  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  4759  000D16  0E0A               	movlw	10
  4760  000D18  6E0D               	movwf	___lomod@divisor^0,c
  4761  000D1A  0E00               	movlw	0
  4762  000D1C  6E0E               	movwf	(___lomod@divisor+1)^0,c
  4763  000D1E  0E00               	movlw	0
  4764  000D20  6E0F               	movwf	(___lomod@divisor+2)^0,c
  4765  000D22  0E00               	movlw	0
  4766  000D24  6E10               	movwf	(___lomod@divisor+3)^0,c
  4767  000D26  0E00               	movlw	0
  4768  000D28  6E11               	movwf	(___lomod@divisor+4)^0,c
  4769  000D2A  0E00               	movlw	0
  4770  000D2C  6E12               	movwf	(___lomod@divisor+5)^0,c
  4771  000D2E  0E00               	movlw	0
  4772  000D30  6E13               	movwf	(___lomod@divisor+6)^0,c
  4773  000D32  0E00               	movlw	0
  4774  000D34  6E14               	movwf	(___lomod@divisor+7)^0,c
  4775  000D36  EC2D  F00B         	call	___lomod	;wreg free
  4776  000D3A  C005  F02C         	movff	?___lomod,??_utoa
  4777  000D3E  C006  F02D         	movff	?___lomod+1,??_utoa+1
  4778  000D42  C007  F02E         	movff	?___lomod+2,??_utoa+2
  4779  000D46  C008  F02F         	movff	?___lomod+3,??_utoa+3
  4780  000D4A  C009  F030         	movff	?___lomod+4,??_utoa+4
  4781  000D4E  C00A  F031         	movff	?___lomod+5,??_utoa+5
  4782  000D52  C00B  F032         	movff	?___lomod+6,??_utoa+6
  4783  000D56  C00C  F033         	movff	?___lomod+7,??_utoa+7
  4784  000D5A  502C               	movf	??_utoa^0,w,c
  4785  000D5C  0F30               	addlw	48
  4786  000D5E  6EDF               	movwf	indf2,c
  4787  000D60                     
  4788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4789  000D60  0634               	decf	utoa@p^0,f,c
  4790  000D62  A0D8               	btfss	status,0,c
  4791  000D64  0635               	decf	(utoa@p+1)^0,f,c
  4792  000D66                     
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4794  000D66  0636               	decf	utoa@w^0,f,c
  4795  000D68  A0D8               	btfss	status,0,c
  4796  000D6A  0637               	decf	(utoa@w+1)^0,f,c
  4797  000D6C                     
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4799  000D6C  C038  F005         	movff	utoa@n,___lodiv@dividend
  4800  000D70  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  4801  000D74  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  4802  000D78  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  4803  000D7C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  4804  000D80  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  4805  000D84  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  4806  000D88  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  4807  000D8C  0E0A               	movlw	10
  4808  000D8E  6E0D               	movwf	___lodiv@divisor^0,c
  4809  000D90  0E00               	movlw	0
  4810  000D92  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  4811  000D94  0E00               	movlw	0
  4812  000D96  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  4813  000D98  0E00               	movlw	0
  4814  000D9A  6E10               	movwf	(___lodiv@divisor+3)^0,c
  4815  000D9C  0E00               	movlw	0
  4816  000D9E  6E11               	movwf	(___lodiv@divisor+4)^0,c
  4817  000DA0  0E00               	movlw	0
  4818  000DA2  6E12               	movwf	(___lodiv@divisor+5)^0,c
  4819  000DA4  0E00               	movlw	0
  4820  000DA6  6E13               	movwf	(___lodiv@divisor+6)^0,c
  4821  000DA8  0E00               	movlw	0
  4822  000DAA  6E14               	movwf	(___lodiv@divisor+7)^0,c
  4823  000DAC  EC46  F00A         	call	___lodiv	;wreg free
  4824  000DB0  C005  F038         	movff	?___lodiv,utoa@n
  4825  000DB4  C006  F039         	movff	?___lodiv+1,utoa@n+1
  4826  000DB8  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  4827  000DBC  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  4828  000DC0  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  4829  000DC4  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  4830  000DC8  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  4831  000DCC  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  4832  000DD0                     l3188:
  4833                           
  4834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4835  000DD0  5040               	movf	utoa@i^0,w,c
  4836  000DD2  1041               	iorwf	(utoa@i+1)^0,w,c
  4837  000DD4  B4D8               	btfsc	status,2,c
  4838  000DD6  EFEF  F006         	goto	u2561
  4839  000DDA  EFF1  F006         	goto	u2560
  4840  000DDE                     u2561:
  4841  000DDE  EF21  F007         	goto	l3198
  4842  000DE2                     u2560:
  4843  000DE2  5038               	movf	utoa@n^0,w,c
  4844  000DE4  1039               	iorwf	(utoa@n+1)^0,w,c
  4845  000DE6  103A               	iorwf	(utoa@n+2)^0,w,c
  4846  000DE8  103B               	iorwf	(utoa@n+3)^0,w,c
  4847  000DEA  103C               	iorwf	(utoa@n+4)^0,w,c
  4848  000DEC  103D               	iorwf	(utoa@n+5)^0,w,c
  4849  000DEE  103E               	iorwf	(utoa@n+6)^0,w,c
  4850  000DF0  103F               	iorwf	(utoa@n+7)^0,w,c
  4851  000DF2  A4D8               	btfss	status,2,c
  4852  000DF4  EFFE  F006         	goto	u2571
  4853  000DF8  EF00  F007         	goto	u2570
  4854  000DFC                     u2571:
  4855  000DFC  EF72  F006         	goto	l3178
  4856  000E00                     u2570:
  4857  000E00  BE35               	btfsc	(utoa@p+1)^0,7,c
  4858  000E02  EF0D  F007         	goto	u2580
  4859  000E06  5035               	movf	(utoa@p+1)^0,w,c
  4860  000E08  E106               	bnz	u2581
  4861  000E0A  0434               	decf	utoa@p^0,w,c
  4862  000E0C  B0D8               	btfsc	status,0,c
  4863  000E0E  EF0B  F007         	goto	u2581
  4864  000E12  EF0D  F007         	goto	u2580
  4865  000E16                     u2581:
  4866  000E16  EF72  F006         	goto	l3178
  4867  000E1A                     u2580:
  4868  000E1A  BE37               	btfsc	(utoa@w+1)^0,7,c
  4869  000E1C  EF18  F007         	goto	u2591
  4870  000E20  5037               	movf	(utoa@w+1)^0,w,c
  4871  000E22  E108               	bnz	u2590
  4872  000E24  0436               	decf	utoa@w^0,w,c
  4873  000E26  A0D8               	btfss	status,0,c
  4874  000E28  EF18  F007         	goto	u2591
  4875  000E2C  EF1A  F007         	goto	u2590
  4876  000E30                     u2591:
  4877  000E30  EF21  F007         	goto	l3198
  4878  000E34                     u2590:
  4879  000E34  B257               	btfsc	_flags^0,1,c
  4880  000E36  EF1F  F007         	goto	u2601
  4881  000E3A  EF21  F007         	goto	u2600
  4882  000E3E                     u2601:
  4883  000E3E  EF72  F006         	goto	l3178
  4884  000E42                     u2600:
  4885  000E42                     l3198:
  4886                           
  4887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4888  000E42  C022  F017         	movff	utoa@fp,pad@fp
  4889  000E46  C023  F018         	movff	utoa@fp+1,pad@fp+1
  4890  000E4A  0EC8               	movlw	low _dbuf
  4891  000E4C  2440               	addwf	utoa@i^0,w,c
  4892  000E4E  6E19               	movwf	pad@buf^0,c
  4893  000E50  0E01               	movlw	high _dbuf
  4894  000E52  2041               	addwfc	(utoa@i+1)^0,w,c
  4895  000E54  6E1A               	movwf	(pad@buf+1)^0,c
  4896  000E56  C036  F01B         	movff	utoa@w,pad@p
  4897  000E5A  C037  F01C         	movff	utoa@w+1,pad@p+1
  4898  000E5E  EC95  F00B         	call	_pad	;wreg free
  4899  000E62  C017  F022         	movff	?_pad,?_utoa
  4900  000E66  C018  F023         	movff	?_pad+1,?_utoa+1
  4901  000E6A  0012               	return		;funcret
  4902  000E6C                     __end_of_utoa:
  4903                           	opt callstack 0
  4904                           
  4905 ;; *************** function ___lomod *****************
  4906 ;; Defined at:
  4907 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  dividend        8    4[COMRAM] unsigned long long 
  4910 ;;  divisor         8   12[COMRAM] unsigned long long 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  counter         1   20[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  8    4[COMRAM] unsigned long long 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4922 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4925 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4926 ;;Total ram usage:       17 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    4
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_utoa
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text30
  4937  00165A                     __ptext30:
  4938                           	opt callstack 0
  4939  00165A                     ___lomod:
  4940                           	opt callstack 21
  4941  00165A  500D               	movf	___lomod@divisor^0,w,c
  4942  00165C  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  4943  00165E  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  4944  001660  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  4945  001662  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  4946  001664  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  4947  001666  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  4948  001668  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  4949  00166A  B4D8               	btfsc	status,2,c
  4950  00166C  EF3A  F00B         	goto	u2241
  4951  001670  EF3C  F00B         	goto	u2240
  4952  001674                     u2241:
  4953  001674  EF84  F00B         	goto	l1251
  4954  001678                     u2240:
  4955  001678  0E01               	movlw	1
  4956  00167A  6E15               	movwf	___lomod@counter^0,c
  4957  00167C  EF4A  F00B         	goto	l3040
  4958  001680                     l3038:
  4959  001680  90D8               	bcf	status,0,c
  4960  001682  360D               	rlcf	___lomod@divisor^0,f,c
  4961  001684  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  4962  001686  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  4963  001688  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  4964  00168A  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  4965  00168C  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  4966  00168E  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  4967  001690  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  4968  001692  2A15               	incf	___lomod@counter^0,f,c
  4969  001694                     l3040:
  4970  001694  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  4971  001696  EF4F  F00B         	goto	u2251
  4972  00169A  EF51  F00B         	goto	u2250
  4973  00169E                     u2251:
  4974  00169E  EF40  F00B         	goto	l3038
  4975  0016A2                     u2250:
  4976  0016A2                     l3042:
  4977  0016A2  500D               	movf	___lomod@divisor^0,w,c
  4978  0016A4  5C05               	subwf	___lomod@dividend^0,w,c
  4979  0016A6  500E               	movf	(___lomod@divisor+1)^0,w,c
  4980  0016A8  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  4981  0016AA  500F               	movf	(___lomod@divisor+2)^0,w,c
  4982  0016AC  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  4983  0016AE  5010               	movf	(___lomod@divisor+3)^0,w,c
  4984  0016B0  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  4985  0016B2  5011               	movf	(___lomod@divisor+4)^0,w,c
  4986  0016B4  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  4987  0016B6  5012               	movf	(___lomod@divisor+5)^0,w,c
  4988  0016B8  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  4989  0016BA  5013               	movf	(___lomod@divisor+6)^0,w,c
  4990  0016BC  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  4991  0016BE  5014               	movf	(___lomod@divisor+7)^0,w,c
  4992  0016C0  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  4993  0016C2  A0D8               	btfss	status,0,c
  4994  0016C4  EF66  F00B         	goto	u2261
  4995  0016C8  EF68  F00B         	goto	u2260
  4996  0016CC                     u2261:
  4997  0016CC  EF78  F00B         	goto	l3046
  4998  0016D0                     u2260:
  4999  0016D0  500D               	movf	___lomod@divisor^0,w,c
  5000  0016D2  5E05               	subwf	___lomod@dividend^0,f,c
  5001  0016D4  500E               	movf	(___lomod@divisor+1)^0,w,c
  5002  0016D6  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  5003  0016D8  500F               	movf	(___lomod@divisor+2)^0,w,c
  5004  0016DA  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  5005  0016DC  5010               	movf	(___lomod@divisor+3)^0,w,c
  5006  0016DE  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  5007  0016E0  5011               	movf	(___lomod@divisor+4)^0,w,c
  5008  0016E2  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  5009  0016E4  5012               	movf	(___lomod@divisor+5)^0,w,c
  5010  0016E6  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  5011  0016E8  5013               	movf	(___lomod@divisor+6)^0,w,c
  5012  0016EA  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  5013  0016EC  5014               	movf	(___lomod@divisor+7)^0,w,c
  5014  0016EE  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  5015  0016F0                     l3046:
  5016  0016F0  90D8               	bcf	status,0,c
  5017  0016F2  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  5018  0016F4  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  5019  0016F6  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  5020  0016F8  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  5021  0016FA  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  5022  0016FC  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  5023  0016FE  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  5024  001700  320D               	rrcf	___lomod@divisor^0,f,c
  5025  001702  2E15               	decfsz	___lomod@counter^0,f,c
  5026  001704  EF51  F00B         	goto	l3042
  5027  001708                     l1251:
  5028  001708  C005  F005         	movff	___lomod@dividend,?___lomod
  5029  00170C  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  5030  001710  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  5031  001714  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  5032  001718  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  5033  00171C  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  5034  001720  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  5035  001724  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  5036  001728  0012               	return		;funcret
  5037  00172A                     __end_of___lomod:
  5038                           	opt callstack 0
  5039                           
  5040 ;; *************** function ___lodiv *****************
  5041 ;; Defined at:
  5042 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  dividend        8    4[COMRAM] unsigned long long 
  5045 ;;  divisor         8   12[COMRAM] unsigned long long 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  quotient        8   20[COMRAM] unsigned long long 
  5048 ;;  counter         1   28[COMRAM] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  8    4[COMRAM] unsigned long long 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5058 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;Total ram usage:       25 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    4
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_utoa
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text31
  5073  00148C                     __ptext31:
  5074                           	opt callstack 0
  5075  00148C                     ___lodiv:
  5076                           	opt callstack 21
  5077  00148C  EE20  F015         	lfsr	2,___lodiv@quotient
  5078  001490  0E07               	movlw	7
  5079  001492                     u2201:
  5080  001492  6ADE               	clrf	postinc2,c
  5081  001494  06E8               	decf	wreg,f,c
  5082  001496  E2FD               	bc	u2201
  5083  001498  500D               	movf	___lodiv@divisor^0,w,c
  5084  00149A  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  5085  00149C  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  5086  00149E  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  5087  0014A0  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  5088  0014A2  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  5089  0014A4  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  5090  0014A6  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  5091  0014A8  B4D8               	btfsc	status,2,c
  5092  0014AA  EF59  F00A         	goto	u2211
  5093  0014AE  EF5B  F00A         	goto	u2210
  5094  0014B2                     u2211:
  5095  0014B2  EFAD  F00A         	goto	l1241
  5096  0014B6                     u2210:
  5097  0014B6  0E01               	movlw	1
  5098  0014B8  6E1D               	movwf	___lodiv@counter^0,c
  5099  0014BA  EF69  F00A         	goto	l3020
  5100  0014BE                     l3018:
  5101  0014BE  90D8               	bcf	status,0,c
  5102  0014C0  360D               	rlcf	___lodiv@divisor^0,f,c
  5103  0014C2  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  5104  0014C4  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  5105  0014C6  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  5106  0014C8  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  5107  0014CA  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  5108  0014CC  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  5109  0014CE  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  5110  0014D0  2A1D               	incf	___lodiv@counter^0,f,c
  5111  0014D2                     l3020:
  5112  0014D2  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  5113  0014D4  EF6E  F00A         	goto	u2221
  5114  0014D8  EF70  F00A         	goto	u2220
  5115  0014DC                     u2221:
  5116  0014DC  EF5F  F00A         	goto	l3018
  5117  0014E0                     u2220:
  5118  0014E0                     l3022:
  5119  0014E0  90D8               	bcf	status,0,c
  5120  0014E2  3615               	rlcf	___lodiv@quotient^0,f,c
  5121  0014E4  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  5122  0014E6  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  5123  0014E8  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  5124  0014EA  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  5125  0014EC  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  5126  0014EE  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  5127  0014F0  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  5128  0014F2  500D               	movf	___lodiv@divisor^0,w,c
  5129  0014F4  5C05               	subwf	___lodiv@dividend^0,w,c
  5130  0014F6  500E               	movf	(___lodiv@divisor+1)^0,w,c
  5131  0014F8  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  5132  0014FA  500F               	movf	(___lodiv@divisor+2)^0,w,c
  5133  0014FC  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  5134  0014FE  5010               	movf	(___lodiv@divisor+3)^0,w,c
  5135  001500  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  5136  001502  5011               	movf	(___lodiv@divisor+4)^0,w,c
  5137  001504  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  5138  001506  5012               	movf	(___lodiv@divisor+5)^0,w,c
  5139  001508  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  5140  00150A  5013               	movf	(___lodiv@divisor+6)^0,w,c
  5141  00150C  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  5142  00150E  5014               	movf	(___lodiv@divisor+7)^0,w,c
  5143  001510  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  5144  001512  A0D8               	btfss	status,0,c
  5145  001514  EF8E  F00A         	goto	u2231
  5146  001518  EF90  F00A         	goto	u2230
  5147  00151C                     u2231:
  5148  00151C  EFA1  F00A         	goto	l3030
  5149  001520                     u2230:
  5150  001520  500D               	movf	___lodiv@divisor^0,w,c
  5151  001522  5E05               	subwf	___lodiv@dividend^0,f,c
  5152  001524  500E               	movf	(___lodiv@divisor+1)^0,w,c
  5153  001526  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  5154  001528  500F               	movf	(___lodiv@divisor+2)^0,w,c
  5155  00152A  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  5156  00152C  5010               	movf	(___lodiv@divisor+3)^0,w,c
  5157  00152E  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  5158  001530  5011               	movf	(___lodiv@divisor+4)^0,w,c
  5159  001532  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  5160  001534  5012               	movf	(___lodiv@divisor+5)^0,w,c
  5161  001536  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  5162  001538  5013               	movf	(___lodiv@divisor+6)^0,w,c
  5163  00153A  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  5164  00153C  5014               	movf	(___lodiv@divisor+7)^0,w,c
  5165  00153E  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  5166  001540  8015               	bsf	___lodiv@quotient^0,0,c
  5167  001542                     l3030:
  5168  001542  90D8               	bcf	status,0,c
  5169  001544  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  5170  001546  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  5171  001548  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  5172  00154A  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  5173  00154C  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  5174  00154E  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  5175  001550  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  5176  001552  320D               	rrcf	___lodiv@divisor^0,f,c
  5177  001554  2E1D               	decfsz	___lodiv@counter^0,f,c
  5178  001556  EF70  F00A         	goto	l3022
  5179  00155A                     l1241:
  5180  00155A  C015  F005         	movff	___lodiv@quotient,?___lodiv
  5181  00155E  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  5182  001562  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  5183  001566  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  5184  00156A  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  5185  00156E  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  5186  001572  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  5187  001576  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  5188  00157A  0012               	return		;funcret
  5189  00157C                     __end_of___lodiv:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function _stoa *****************
  5193 ;; Defined at:
  5194 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5197 ;;		 -> NULL(0), 
  5198 ;;  s               2   17[COMRAM] PTR unsigned char 
  5199 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  nuls            7   20[COMRAM] unsigned char [7]
  5202 ;;  l               2   35[COMRAM] int 
  5203 ;;  p               2   33[COMRAM] int 
  5204 ;;  cp              2   31[COMRAM] PTR unsigned char 
  5205 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  5206 ;;  w               2   29[COMRAM] int 
  5207 ;;  i               2   27[COMRAM] int 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  2   15[COMRAM] int 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5218 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;Total ram usage:       22 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    7
  5224 ;; This function calls:
  5225 ;;		_fputc
  5226 ;;		_strlen
  5227 ;; This function is called by:
  5228 ;;		_vfpfcnvrt
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text32
  5233  000E6C                     __ptext32:
  5234                           	opt callstack 0
  5235  000E6C                     _stoa:
  5236                           	opt callstack 19
  5237  000E6C                     
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5239  000E6C  EE20  F0ED         	lfsr	2,stoa@F1139
  5240  000E70  EE10  F015         	lfsr	1,stoa@nuls
  5241  000E74  0E06               	movlw	6
  5242  000E76                     u2441:
  5243  000E76  CFDB FFE3          	movff	plusw2,plusw1
  5244  000E7A  06E8               	decf	wreg,f,c
  5245  000E7C  E2FC               	bc	u2441
  5246  000E7E                     
  5247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  5248  000E7E  C012  F020         	movff	stoa@s,stoa@cp
  5249  000E82  C013  F021         	movff	stoa@s+1,stoa@cp+1
  5250  000E86                     
  5251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  5252  000E86  5020               	movf	stoa@cp^0,w,c
  5253  000E88  1021               	iorwf	(stoa@cp+1)^0,w,c
  5254  000E8A  A4D8               	btfss	status,2,c
  5255  000E8C  EF4A  F007         	goto	u2451
  5256  000E90  EF4C  F007         	goto	u2450
  5257  000E94                     u2451:
  5258  000E94  EF50  F007         	goto	l3132
  5259  000E98                     u2450:
  5260  000E98                     
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  5262  000E98  0E15               	movlw	low stoa@nuls
  5263  000E9A  6E20               	movwf	stoa@cp^0,c
  5264  000E9C  0E00               	movlw	high stoa@nuls
  5265  000E9E  6E21               	movwf	(stoa@cp+1)^0,c
  5266  000EA0                     l3132:
  5267                           
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  5269  000EA0  C020  F005         	movff	stoa@cp,strlen@s
  5270  000EA4  C021  F006         	movff	stoa@cp+1,strlen@s+1
  5271  000EA8  EC9D  F00F         	call	_strlen	;wreg free
  5272  000EAC  C005  F024         	movff	?_strlen,stoa@l
  5273  000EB0  C006  F025         	movff	?_strlen+1,stoa@l+1
  5274  000EB4                     
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  5276  000EB4  C08C  F022         	movff	_prec,stoa@p
  5277  000EB8  C08D  F023         	movff	_prec+1,stoa@p+1
  5278  000EBC                     
  5279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  5280  000EBC  BE23               	btfsc	(stoa@p+1)^0,7,c
  5281  000EBE  EF63  F007         	goto	u2461
  5282  000EC2  EF65  F007         	goto	u2460
  5283  000EC6                     u2461:
  5284  000EC6  EF7A  F007         	goto	l700
  5285  000ECA                     u2460:
  5286  000ECA  5024               	movf	stoa@l^0,w,c
  5287  000ECC  5C22               	subwf	stoa@p^0,w,c
  5288  000ECE  5023               	movf	(stoa@p+1)^0,w,c
  5289  000ED0  0A80               	xorlw	128
  5290  000ED2  6E14               	movwf	??_stoa^0,c
  5291  000ED4  5025               	movf	(stoa@l+1)^0,w,c
  5292  000ED6  0A80               	xorlw	128
  5293  000ED8  5814               	subwfb	??_stoa^0,w,c
  5294  000EDA  A0D8               	btfss	status,0,c
  5295  000EDC  EF72  F007         	goto	u2471
  5296  000EE0  EF74  F007         	goto	u2470
  5297  000EE4                     u2471:
  5298  000EE4  EF76  F007         	goto	l698
  5299  000EE8                     u2470:
  5300  000EE8  EF7A  F007         	goto	l700
  5301  000EEC                     l698:
  5302  000EEC  C022  F024         	movff	stoa@p,stoa@l
  5303  000EF0  C023  F025         	movff	stoa@p+1,stoa@l+1
  5304  000EF4                     l700:
  5305                           
  5306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  5307  000EF4  C024  F022         	movff	stoa@l,stoa@p
  5308  000EF8  C025  F023         	movff	stoa@l+1,stoa@p+1
  5309                           
  5310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  5311  000EFC  C08A  F01E         	movff	_width,stoa@w
  5312  000F00  C08B  F01F         	movff	_width+1,stoa@w+1
  5313                           
  5314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  5315  000F04  B057               	btfsc	_flags^0,0,c
  5316  000F06  EF87  F007         	goto	u2481
  5317  000F0A  EF89  F007         	goto	u2480
  5318  000F0E                     u2481:
  5319  000F0E  EFA6  F007         	goto	l3148
  5320  000F12                     u2480:
  5321  000F12  EF97  F007         	goto	l3146
  5322  000F16                     l3142:
  5323                           
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  5325  000F16  0E00               	movlw	0
  5326  000F18  6E08               	movwf	(fputc@c+1)^0,c
  5327  000F1A  0E20               	movlw	32
  5328  000F1C  6E07               	movwf	fputc@c^0,c
  5329  000F1E  C010  F009         	movff	stoa@fp,fputc@fp
  5330  000F22  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5331  000F26  EC06  F00D         	call	_fputc	;wreg free
  5332  000F2A                     
  5333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  5334  000F2A  4A24               	infsnz	stoa@l^0,f,c
  5335  000F2C  2A25               	incf	(stoa@l+1)^0,f,c
  5336  000F2E                     l3146:
  5337                           
  5338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  5339  000F2E  501E               	movf	stoa@w^0,w,c
  5340  000F30  5C24               	subwf	stoa@l^0,w,c
  5341  000F32  5025               	movf	(stoa@l+1)^0,w,c
  5342  000F34  0A80               	xorlw	128
  5343  000F36  6E14               	movwf	??_stoa^0,c
  5344  000F38  501F               	movf	(stoa@w+1)^0,w,c
  5345  000F3A  0A80               	xorlw	128
  5346  000F3C  5814               	subwfb	??_stoa^0,w,c
  5347  000F3E  A0D8               	btfss	status,0,c
  5348  000F40  EFA4  F007         	goto	u2491
  5349  000F44  EFA6  F007         	goto	u2490
  5350  000F48                     u2491:
  5351  000F48  EF8B  F007         	goto	l3142
  5352  000F4C                     u2490:
  5353  000F4C                     l3148:
  5354                           
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  5356  000F4C  0E00               	movlw	0
  5357  000F4E  6E1D               	movwf	(stoa@i+1)^0,c
  5358  000F50  0E00               	movlw	0
  5359  000F52  6E1C               	movwf	stoa@i^0,c
  5360                           
  5361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5362  000F54  EFCB  F007         	goto	l3156
  5363  000F58                     l3150:
  5364                           
  5365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  5366  000F58  C020  FFF6         	movff	stoa@cp,tblptrl
  5367  000F5C  C021  FFF7         	movff	stoa@cp+1,tblptrh
  5368  000F60  0E00               	movlw	low (__mediumconst shr (0+16))
  5369  000F62  6EF8               	movwf	tblptru,c
  5370  000F64  0E0E               	movlw	(high __ramtop+-1)
  5371  000F66  64F7               	cpfsgt	tblptrh,c
  5372  000F68  D003               	bra	u2507
  5373  000F6A  0008               	tblrd		*
  5374  000F6C  50F5               	movf	tablat,w,c
  5375  000F6E  D005               	bra	u2500
  5376  000F70                     u2507:
  5377  000F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  5378  000F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  5379  000F78  50EF               	movf	indf0,w,c
  5380  000F7A                     u2500:
  5381  000F7A  6E14               	movwf	??_stoa^0,c
  5382  000F7C  5014               	movf	??_stoa^0,w,c
  5383  000F7E  6E07               	movwf	fputc@c^0,c
  5384  000F80  6A08               	clrf	(fputc@c+1)^0,c
  5385  000F82  C010  F009         	movff	stoa@fp,fputc@fp
  5386  000F86  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5387  000F8A  EC06  F00D         	call	_fputc	;wreg free
  5388  000F8E                     
  5389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  5390  000F8E  4A20               	infsnz	stoa@cp^0,f,c
  5391  000F90  2A21               	incf	(stoa@cp+1)^0,f,c
  5392  000F92                     
  5393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  5394  000F92  4A1C               	infsnz	stoa@i^0,f,c
  5395  000F94  2A1D               	incf	(stoa@i+1)^0,f,c
  5396  000F96                     l3156:
  5397                           
  5398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5399  000F96  5022               	movf	stoa@p^0,w,c
  5400  000F98  5C1C               	subwf	stoa@i^0,w,c
  5401  000F9A  501D               	movf	(stoa@i+1)^0,w,c
  5402  000F9C  0A80               	xorlw	128
  5403  000F9E  6E14               	movwf	??_stoa^0,c
  5404  000FA0  5023               	movf	(stoa@p+1)^0,w,c
  5405  000FA2  0A80               	xorlw	128
  5406  000FA4  5814               	subwfb	??_stoa^0,w,c
  5407  000FA6  A0D8               	btfss	status,0,c
  5408  000FA8  EFD8  F007         	goto	u2511
  5409  000FAC  EFDA  F007         	goto	u2510
  5410  000FB0                     u2511:
  5411  000FB0  EFAC  F007         	goto	l3150
  5412  000FB4                     u2510:
  5413  000FB4                     
  5414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  5415  000FB4  A057               	btfss	_flags^0,0,c
  5416  000FB6  EFDF  F007         	goto	u2521
  5417  000FBA  EFE1  F007         	goto	u2520
  5418  000FBE                     u2521:
  5419  000FBE  EFFE  F007         	goto	l710
  5420  000FC2                     u2520:
  5421  000FC2  EFEF  F007         	goto	l3164
  5422  000FC6                     l3160:
  5423                           
  5424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  5425  000FC6  0E00               	movlw	0
  5426  000FC8  6E08               	movwf	(fputc@c+1)^0,c
  5427  000FCA  0E20               	movlw	32
  5428  000FCC  6E07               	movwf	fputc@c^0,c
  5429  000FCE  C010  F009         	movff	stoa@fp,fputc@fp
  5430  000FD2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5431  000FD6  EC06  F00D         	call	_fputc	;wreg free
  5432  000FDA                     
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  5434  000FDA  4A24               	infsnz	stoa@l^0,f,c
  5435  000FDC  2A25               	incf	(stoa@l+1)^0,f,c
  5436  000FDE                     l3164:
  5437                           
  5438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  5439  000FDE  501E               	movf	stoa@w^0,w,c
  5440  000FE0  5C24               	subwf	stoa@l^0,w,c
  5441  000FE2  5025               	movf	(stoa@l+1)^0,w,c
  5442  000FE4  0A80               	xorlw	128
  5443  000FE6  6E14               	movwf	??_stoa^0,c
  5444  000FE8  501F               	movf	(stoa@w+1)^0,w,c
  5445  000FEA  0A80               	xorlw	128
  5446  000FEC  5814               	subwfb	??_stoa^0,w,c
  5447  000FEE  A0D8               	btfss	status,0,c
  5448  000FF0  EFFC  F007         	goto	u2531
  5449  000FF4  EFFE  F007         	goto	u2530
  5450  000FF8                     u2531:
  5451  000FF8  EFE3  F007         	goto	l3160
  5452  000FFC                     u2530:
  5453  000FFC                     l710:
  5454                           
  5455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  5456  000FFC  C024  F010         	movff	stoa@l,?_stoa
  5457  001000  C025  F011         	movff	stoa@l+1,?_stoa+1
  5458  001004  0012               	return		;funcret
  5459  001006                     __end_of_stoa:
  5460                           	opt callstack 0
  5461                           
  5462 ;; *************** function _dtoa *****************
  5463 ;; Defined at:
  5464 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5467 ;;		 -> NULL(0), 
  5468 ;;  d               8   35[COMRAM] long long 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  n               8   59[COMRAM] long long 
  5471 ;;  i               2   67[COMRAM] int 
  5472 ;;  s               2   57[COMRAM] int 
  5473 ;;  w               2   55[COMRAM] int 
  5474 ;;  p               2   53[COMRAM] int 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  2   33[COMRAM] int 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5484 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5485 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5487 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5488 ;;Total ram usage:       36 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    9
  5491 ;; This function calls:
  5492 ;;		___aodiv
  5493 ;;		___aomod
  5494 ;;		_abs
  5495 ;;		_pad
  5496 ;; This function is called by:
  5497 ;;		_vfpfcnvrt
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text33
  5502  0006B4                     __ptext33:
  5503                           	opt callstack 0
  5504  0006B4                     _dtoa:
  5505                           	opt callstack 17
  5506  0006B4                     
  5507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5508  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  5509  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  5510  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  5511  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  5512  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  5513  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  5514  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  5515  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  5516  0006D4                     
  5517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5518  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  5519  0006D6  EF6F  F003         	goto	u2291
  5520  0006DA  EF72  F003         	goto	u2290
  5521  0006DE                     u2291:
  5522  0006DE  0E01               	movlw	1
  5523  0006E0  EF73  F003         	goto	u2300
  5524  0006E4                     u2290:
  5525  0006E4  0E00               	movlw	0
  5526  0006E6                     u2300:
  5527  0006E6  6E3A               	movwf	dtoa@s^0,c
  5528  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  5529                           
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5531  0006EA  503A               	movf	dtoa@s^0,w,c
  5532  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  5533  0006EE  B4D8               	btfsc	status,2,c
  5534  0006F0  EF7C  F003         	goto	u2311
  5535  0006F4  EF7E  F003         	goto	u2310
  5536  0006F8                     u2311:
  5537  0006F8  EF8E  F003         	goto	l3068
  5538  0006FC                     u2310:
  5539  0006FC                     
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5541  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  5542  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  5543  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  5544  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  5545  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  5546  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  5547  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  5548  00070A  6C3C               	negf	dtoa@n^0,c
  5549  00070C  0E00               	movlw	0
  5550  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  5551  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  5552  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  5553  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  5554  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  5555  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  5556  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  5557  00071C                     l3068:
  5558                           
  5559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5560  00071C  0100               	movlb	0	; () banked
  5561  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5562  000720  EF94  F003         	goto	u2321
  5563  000724  EF96  F003         	goto	u2320
  5564  000728                     u2321:
  5565  000728  EF97  F003         	goto	l3072
  5566  00072C                     u2320:
  5567  00072C                     
  5568                           ; BSR set to: 0
  5569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5570  00072C  9257               	bcf	_flags^0,1,c
  5571  00072E                     l3072:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5575  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5576  000730  EFA4  F003         	goto	u2330
  5577  000734  518D               	movf	(_prec+1)& (0+255),w,b
  5578  000736  E106               	bnz	u2331
  5579  000738  058C               	decf	_prec& (0+255),w,b
  5580  00073A  B0D8               	btfsc	status,0,c
  5581  00073C  EFA2  F003         	goto	u2331
  5582  000740  EFA4  F003         	goto	u2330
  5583  000744                     u2331:
  5584  000744  EFAA  F003         	goto	l671
  5585  000748                     u2330:
  5586  000748                     
  5587                           ; BSR set to: 0
  5588  000748  0E00               	movlw	0
  5589  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  5590  00074C  0E01               	movlw	1
  5591  00074E  6E36               	movwf	dtoa@p^0,c
  5592  000750  EFAE  F003         	goto	l673
  5593  000754                     l671:
  5594                           
  5595                           ; BSR set to: 0
  5596  000754  C08C  F036         	movff	_prec,dtoa@p
  5597  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  5598  00075C                     l673:
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5602  00075C  C08A  F038         	movff	_width,dtoa@w
  5603  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  5604  000764                     
  5605                           ; BSR set to: 0
  5606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5607  000764  503A               	movf	dtoa@s^0,w,c
  5608  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  5609  000768  A4D8               	btfss	status,2,c
  5610  00076A  EFB9  F003         	goto	u2341
  5611  00076E  EFBB  F003         	goto	u2340
  5612  000772                     u2341:
  5613  000772  EFC2  F003         	goto	l3080
  5614  000776                     u2340:
  5615  000776                     
  5616                           ; BSR set to: 0
  5617  000776  A457               	btfss	_flags^0,2,c
  5618  000778  EFC0  F003         	goto	u2351
  5619  00077C  EFC2  F003         	goto	u2350
  5620  000780                     u2351:
  5621  000780  EFC5  F003         	goto	l3082
  5622  000784                     u2350:
  5623  000784                     l3080:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5627  000784  0638               	decf	dtoa@w^0,f,c
  5628  000786  A0D8               	btfss	status,0,c
  5629  000788  0639               	decf	(dtoa@w+1)^0,f,c
  5630  00078A                     l3082:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5634  00078A  0E00               	movlw	0
  5635  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  5636  00078E  0E1F               	movlw	31
  5637  000790  6E44               	movwf	dtoa@i^0,c
  5638  000792                     
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5641  000792  0E00               	movlw	0
  5642  000794  0101               	movlb	1	; () banked
  5643  000796  6FE7               	movwf	(_dbuf+31)& (0+255),b
  5644                           
  5645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5646  000798  EF4A  F004         	goto	l3096
  5647  00079C                     l3086:
  5648                           
  5649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5650  00079C  0644               	decf	dtoa@i^0,f,c
  5651  00079E  A0D8               	btfss	status,0,c
  5652  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  5653  0007A2                     
  5654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5655  0007A2  0EC8               	movlw	low _dbuf
  5656  0007A4  2444               	addwf	dtoa@i^0,w,c
  5657  0007A6  6ED9               	movwf	fsr2l,c
  5658  0007A8  0E01               	movlw	high _dbuf
  5659  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  5660  0007AC  6EDA               	movwf	fsr2h,c
  5661  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  5662  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  5663  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  5664  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  5665  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  5666  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  5667  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  5668  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  5669  0007CE  0E0A               	movlw	10
  5670  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  5671  0007D2  0E00               	movlw	0
  5672  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  5673  0007D6  0E00               	movlw	0
  5674  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  5675  0007DA  0E00               	movlw	0
  5676  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  5677  0007DE  0E00               	movlw	0
  5678  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  5679  0007E2  0E00               	movlw	0
  5680  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  5681  0007E6  0E00               	movlw	0
  5682  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  5683  0007EA  0E00               	movlw	0
  5684  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  5685  0007EE  EC94  F009         	call	___aomod	;wreg free
  5686  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  5687  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  5688  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  5689  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  5690  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  5691  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  5692  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  5693  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  5694  000812  C02C  F017         	movff	??_dtoa,abs@a
  5695  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  5696  00081A  EC52  F010         	call	_abs	;wreg free
  5697  00081E  5017               	movf	?_abs^0,w,c
  5698  000820  0F30               	addlw	48
  5699  000822  6EDF               	movwf	indf2,c
  5700  000824                     
  5701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5702  000824  0636               	decf	dtoa@p^0,f,c
  5703  000826  A0D8               	btfss	status,0,c
  5704  000828  0637               	decf	(dtoa@p+1)^0,f,c
  5705  00082A                     
  5706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5707  00082A  0638               	decf	dtoa@w^0,f,c
  5708  00082C  A0D8               	btfss	status,0,c
  5709  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  5710  000830                     
  5711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5712  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  5713  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5714  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5715  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5716  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5717  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5718  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5719  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5720  000850  0E0A               	movlw	10
  5721  000852  6E0D               	movwf	___aodiv@divisor^0,c
  5722  000854  0E00               	movlw	0
  5723  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5724  000858  0E00               	movlw	0
  5725  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5726  00085C  0E00               	movlw	0
  5727  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5728  000860  0E00               	movlw	0
  5729  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5730  000864  0E00               	movlw	0
  5731  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5732  000868  0E00               	movlw	0
  5733  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5734  00086C  0E00               	movlw	0
  5735  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5736  000870  ECD0  F008         	call	___aodiv	;wreg free
  5737  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  5738  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  5739  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  5740  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  5741  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  5742  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  5743  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  5744  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  5745  000894                     l3096:
  5746                           
  5747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5748  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  5749  000896  EF55  F004         	goto	u2361
  5750  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  5751  00089C  E108               	bnz	u2360
  5752  00089E  0444               	decf	dtoa@i^0,w,c
  5753  0008A0  A0D8               	btfss	status,0,c
  5754  0008A2  EF55  F004         	goto	u2361
  5755  0008A6  EF57  F004         	goto	u2360
  5756  0008AA                     u2361:
  5757  0008AA  EF87  F004         	goto	l3106
  5758  0008AE                     u2360:
  5759  0008AE  503C               	movf	dtoa@n^0,w,c
  5760  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  5761  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  5762  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  5763  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  5764  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  5765  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  5766  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  5767  0008BE  A4D8               	btfss	status,2,c
  5768  0008C0  EF64  F004         	goto	u2371
  5769  0008C4  EF66  F004         	goto	u2370
  5770  0008C8                     u2371:
  5771  0008C8  EFCE  F003         	goto	l3086
  5772  0008CC                     u2370:
  5773  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  5774  0008CE  EF73  F004         	goto	u2380
  5775  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  5776  0008D4  E106               	bnz	u2381
  5777  0008D6  0436               	decf	dtoa@p^0,w,c
  5778  0008D8  B0D8               	btfsc	status,0,c
  5779  0008DA  EF71  F004         	goto	u2381
  5780  0008DE  EF73  F004         	goto	u2380
  5781  0008E2                     u2381:
  5782  0008E2  EFCE  F003         	goto	l3086
  5783  0008E6                     u2380:
  5784  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  5785  0008E8  EF7E  F004         	goto	u2391
  5786  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  5787  0008EE  E108               	bnz	u2390
  5788  0008F0  0438               	decf	dtoa@w^0,w,c
  5789  0008F2  A0D8               	btfss	status,0,c
  5790  0008F4  EF7E  F004         	goto	u2391
  5791  0008F8  EF80  F004         	goto	u2390
  5792  0008FC                     u2391:
  5793  0008FC  EF87  F004         	goto	l3106
  5794  000900                     u2390:
  5795  000900  B257               	btfsc	_flags^0,1,c
  5796  000902  EF85  F004         	goto	u2401
  5797  000906  EF87  F004         	goto	u2400
  5798  00090A                     u2401:
  5799  00090A  EFCE  F003         	goto	l3086
  5800  00090E                     u2400:
  5801  00090E                     l3106:
  5802                           
  5803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5804  00090E  503A               	movf	dtoa@s^0,w,c
  5805  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  5806  000912  A4D8               	btfss	status,2,c
  5807  000914  EF8E  F004         	goto	u2411
  5808  000918  EF90  F004         	goto	u2410
  5809  00091C                     u2411:
  5810  00091C  EF97  F004         	goto	l3110
  5811  000920                     u2410:
  5812  000920  A457               	btfss	_flags^0,2,c
  5813  000922  EF95  F004         	goto	u2421
  5814  000926  EF97  F004         	goto	u2420
  5815  00092A                     u2421:
  5816  00092A  EFB5  F004         	goto	l3120
  5817  00092E                     u2420:
  5818  00092E                     l3110:
  5819                           
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5821  00092E  0644               	decf	dtoa@i^0,f,c
  5822  000930  A0D8               	btfss	status,0,c
  5823  000932  0645               	decf	(dtoa@i+1)^0,f,c
  5824  000934                     
  5825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5826  000934  503A               	movf	dtoa@s^0,w,c
  5827  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  5828  000938  A4D8               	btfss	status,2,c
  5829  00093A  EFA1  F004         	goto	u2431
  5830  00093E  EFA3  F004         	goto	u2430
  5831  000942                     u2431:
  5832  000942  EFA9  F004         	goto	l3116
  5833  000946                     u2430:
  5834  000946  0E00               	movlw	0
  5835  000948  6E35               	movwf	(_dtoa$1221+1)^0,c
  5836  00094A  0E2B               	movlw	43
  5837  00094C  6E34               	movwf	_dtoa$1221^0,c
  5838  00094E  EFAD  F004         	goto	l3118
  5839  000952                     l3116:
  5840  000952  0E00               	movlw	0
  5841  000954  6E35               	movwf	(_dtoa$1221+1)^0,c
  5842  000956  0E2D               	movlw	45
  5843  000958  6E34               	movwf	_dtoa$1221^0,c
  5844  00095A                     l3118:
  5845  00095A  0EC8               	movlw	low _dbuf
  5846  00095C  2444               	addwf	dtoa@i^0,w,c
  5847  00095E  6ED9               	movwf	fsr2l,c
  5848  000960  0E01               	movlw	high _dbuf
  5849  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  5850  000964  6EDA               	movwf	fsr2h,c
  5851  000966  C034  FFDF         	movff	_dtoa$1221,indf2
  5852  00096A                     l3120:
  5853                           
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5855  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  5856  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  5857  000972  0EC8               	movlw	low _dbuf
  5858  000974  2444               	addwf	dtoa@i^0,w,c
  5859  000976  6E19               	movwf	pad@buf^0,c
  5860  000978  0E01               	movlw	high _dbuf
  5861  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  5862  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  5863  00097E  C038  F01B         	movff	dtoa@w,pad@p
  5864  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  5865  000986  EC95  F00B         	call	_pad	;wreg free
  5866  00098A  C017  F022         	movff	?_pad,?_dtoa
  5867  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  5868  000992  0012               	return		;funcret
  5869  000994                     __end_of_dtoa:
  5870                           	opt callstack 0
  5871                           
  5872 ;; *************** function _pad *****************
  5873 ;; Defined at:
  5874 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  5877 ;;		 -> NULL(0), 
  5878 ;;  buf             2   24[COMRAM] PTR unsigned char 
  5879 ;;		 -> dbuf(32), 
  5880 ;;  p               2   26[COMRAM] int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  w               2   31[COMRAM] int 
  5883 ;;  i               2   29[COMRAM] int 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  2   22[COMRAM] int 
  5886 ;; Registers used:
  5887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5893 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;Total ram usage:       11 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    8
  5900 ;; This function calls:
  5901 ;;		_fputc
  5902 ;;		_fputs
  5903 ;;		_strlen
  5904 ;; This function is called by:
  5905 ;;		_dtoa
  5906 ;;		_utoa
  5907 ;;		_xtoa
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text34
  5912  00172A                     __ptext34:
  5913                           	opt callstack 0
  5914  00172A                     _pad:
  5915                           	opt callstack 17
  5916  00172A                     
  5917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5918  00172A  A057               	btfss	_flags^0,0,c
  5919  00172C  EF9A  F00B         	goto	u1931
  5920  001730  EF9C  F00B         	goto	u1930
  5921  001734                     u1931:
  5922  001734  EFA6  F00B         	goto	l2882
  5923  001738                     u1930:
  5924  001738                     
  5925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5926  001738  C019  F010         	movff	pad@buf,fputs@s
  5927  00173C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  5928  001740  C017  F012         	movff	pad@fp,fputs@fp
  5929  001744  C018  F013         	movff	pad@fp+1,fputs@fp+1
  5930  001748  EC0E  F010         	call	_fputs	;wreg free
  5931  00174C                     l2882:
  5932                           
  5933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5934  00174C  BE1C               	btfsc	(pad@p+1)^0,7,c
  5935  00174E  EFAB  F00B         	goto	u1941
  5936  001752  EFAD  F00B         	goto	u1940
  5937  001756                     u1941:
  5938  001756  EFB3  F00B         	goto	l2886
  5939  00175A                     u1940:
  5940  00175A  C01B  F020         	movff	pad@p,pad@w
  5941  00175E  C01C  F021         	movff	pad@p+1,pad@w+1
  5942  001762  EFB7  F00B         	goto	l660
  5943  001766                     l2886:
  5944  001766  0E00               	movlw	0
  5945  001768  6E21               	movwf	(pad@w+1)^0,c
  5946  00176A  0E00               	movlw	0
  5947  00176C  6E20               	movwf	pad@w^0,c
  5948  00176E                     l660:
  5949                           
  5950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5951  00176E  0E00               	movlw	0
  5952  001770  6E1F               	movwf	(pad@i+1)^0,c
  5953  001772  0E00               	movlw	0
  5954  001774  6E1E               	movwf	pad@i^0,c
  5955                           
  5956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5957  001776  EFC9  F00B         	goto	l2892
  5958  00177A                     l2888:
  5959                           
  5960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5961  00177A  0E00               	movlw	0
  5962  00177C  6E08               	movwf	(fputc@c+1)^0,c
  5963  00177E  0E20               	movlw	32
  5964  001780  6E07               	movwf	fputc@c^0,c
  5965  001782  C017  F009         	movff	pad@fp,fputc@fp
  5966  001786  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  5967  00178A  EC06  F00D         	call	_fputc	;wreg free
  5968  00178E                     
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5970  00178E  4A1E               	infsnz	pad@i^0,f,c
  5971  001790  2A1F               	incf	(pad@i+1)^0,f,c
  5972  001792                     l2892:
  5973                           
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5975  001792  5020               	movf	pad@w^0,w,c
  5976  001794  5C1E               	subwf	pad@i^0,w,c
  5977  001796  501F               	movf	(pad@i+1)^0,w,c
  5978  001798  0A80               	xorlw	128
  5979  00179A  6E1D               	movwf	??_pad^0,c
  5980  00179C  5021               	movf	(pad@w+1)^0,w,c
  5981  00179E  0A80               	xorlw	128
  5982  0017A0  581D               	subwfb	??_pad^0,w,c
  5983  0017A2  A0D8               	btfss	status,0,c
  5984  0017A4  EFD6  F00B         	goto	u1951
  5985  0017A8  EFD8  F00B         	goto	u1950
  5986  0017AC                     u1951:
  5987  0017AC  EFBD  F00B         	goto	l2888
  5988  0017B0                     u1950:
  5989  0017B0                     
  5990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5991  0017B0  B057               	btfsc	_flags^0,0,c
  5992  0017B2  EFDD  F00B         	goto	u1961
  5993  0017B6  EFDF  F00B         	goto	u1960
  5994  0017BA                     u1961:
  5995  0017BA  EFE9  F00B         	goto	l2896
  5996  0017BE                     u1960:
  5997  0017BE                     
  5998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5999  0017BE  C019  F010         	movff	pad@buf,fputs@s
  6000  0017C2  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6001  0017C6  C017  F012         	movff	pad@fp,fputs@fp
  6002  0017CA  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6003  0017CE  EC0E  F010         	call	_fputs	;wreg free
  6004  0017D2                     l2896:
  6005                           
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6007  0017D2  C019  F005         	movff	pad@buf,strlen@s
  6008  0017D6  C01A  F006         	movff	pad@buf+1,strlen@s+1
  6009  0017DA  EC9D  F00F         	call	_strlen	;wreg free
  6010  0017DE  5020               	movf	pad@w^0,w,c
  6011  0017E0  2405               	addwf	?_strlen^0,w,c
  6012  0017E2  6E17               	movwf	?_pad^0,c
  6013  0017E4  5021               	movf	(pad@w+1)^0,w,c
  6014  0017E6  2006               	addwfc	(?_strlen+1)^0,w,c
  6015  0017E8  6E18               	movwf	(?_pad+1)^0,c
  6016  0017EA  0012               	return		;funcret
  6017  0017EC                     __end_of_pad:
  6018                           	opt callstack 0
  6019                           
  6020 ;; *************** function _strlen *****************
  6021 ;; Defined at:
  6022 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6025 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6026 ;;		 -> STR_4(12), 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  a               2    6[COMRAM] PTR const unsigned char 
  6029 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6030 ;;		 -> STR_4(12), 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  2    4[COMRAM] unsigned int 
  6033 ;; Registers used:
  6034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6044 ;;Total ram usage:        4 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    4
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_pad
  6051 ;;		_stoa
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text35
  6056  001F3A                     __ptext35:
  6057                           	opt callstack 0
  6058  001F3A                     _strlen:
  6059                           	opt callstack 20
  6060  001F3A  C005  F007         	movff	strlen@s,strlen@a
  6061  001F3E  C006  F008         	movff	strlen@s+1,strlen@a+1
  6062  001F42  EFA5  F00F         	goto	l2868
  6063  001F46                     l2866:
  6064  001F46  4A05               	infsnz	strlen@s^0,f,c
  6065  001F48  2A06               	incf	(strlen@s+1)^0,f,c
  6066  001F4A                     l2868:
  6067  001F4A  C005  FFF6         	movff	strlen@s,tblptrl
  6068  001F4E  C006  FFF7         	movff	strlen@s+1,tblptrh
  6069  001F52  0E00               	movlw	low (__mediumconst shr (0+16))
  6070  001F54  6EF8               	movwf	tblptru,c
  6071  001F56  0E0E               	movlw	(high __ramtop+-1)
  6072  001F58  64F7               	cpfsgt	tblptrh,c
  6073  001F5A  D003               	bra	u1897
  6074  001F5C  0008               	tblrd		*
  6075  001F5E  50F5               	movf	tablat,w,c
  6076  001F60  D005               	bra	u1890
  6077  001F62                     u1897:
  6078  001F62  CFF6 FFE9          	movff	tblptrl,fsr0l
  6079  001F66  CFF7 FFEA          	movff	tblptrh,fsr0h
  6080  001F6A  50EF               	movf	indf0,w,c
  6081  001F6C                     u1890:
  6082  001F6C  0900               	iorlw	0
  6083  001F6E  A4D8               	btfss	status,2,c
  6084  001F70  EFBC  F00F         	goto	u1901
  6085  001F74  EFBE  F00F         	goto	u1900
  6086  001F78                     u1901:
  6087  001F78  EFA3  F00F         	goto	l2866
  6088  001F7C                     u1900:
  6089  001F7C  5007               	movf	strlen@a^0,w,c
  6090  001F7E  5C05               	subwf	strlen@s^0,w,c
  6091  001F80  6E05               	movwf	?_strlen^0,c
  6092  001F82  5008               	movf	(strlen@a+1)^0,w,c
  6093  001F84  5806               	subwfb	(strlen@s+1)^0,w,c
  6094  001F86  6E06               	movwf	(?_strlen+1)^0,c
  6095  001F88  0012               	return		;funcret
  6096  001F8A                     __end_of_strlen:
  6097                           	opt callstack 0
  6098                           
  6099 ;; *************** function _fputs *****************
  6100 ;; Defined at:
  6101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6104 ;;		 -> dbuf(32), 
  6105 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6106 ;;		 -> NULL(0), 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  i               2   20[COMRAM] int 
  6109 ;;  c               1   19[COMRAM] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  2   15[COMRAM] int 
  6112 ;; Registers used:
  6113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;Total ram usage:        7 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    7
  6126 ;; This function calls:
  6127 ;;		_fputc
  6128 ;; This function is called by:
  6129 ;;		_pad
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text36
  6134  00201C                     __ptext36:
  6135                           	opt callstack 0
  6136  00201C                     _fputs:
  6137                           	opt callstack 17
  6138  00201C  0E00               	movlw	0
  6139  00201E  6E16               	movwf	(fputs@i+1)^0,c
  6140  002020  0E00               	movlw	0
  6141  002022  6E15               	movwf	fputs@i^0,c
  6142  002024  EF1F  F010         	goto	l2862
  6143  002028                     l2858:
  6144  002028  C014  F007         	movff	fputs@c,fputc@c
  6145  00202C  6A08               	clrf	(fputc@c+1)^0,c
  6146  00202E  C012  F009         	movff	fputs@fp,fputc@fp
  6147  002032  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  6148  002036  EC06  F00D         	call	_fputc	;wreg free
  6149  00203A  4A15               	infsnz	fputs@i^0,f,c
  6150  00203C  2A16               	incf	(fputs@i+1)^0,f,c
  6151  00203E                     l2862:
  6152  00203E  5015               	movf	fputs@i^0,w,c
  6153  002040  2410               	addwf	fputs@s^0,w,c
  6154  002042  6ED9               	movwf	fsr2l,c
  6155  002044  5016               	movf	(fputs@i+1)^0,w,c
  6156  002046  2011               	addwfc	(fputs@s+1)^0,w,c
  6157  002048  6EDA               	movwf	fsr2h,c
  6158  00204A  50DF               	movf	indf2,w,c
  6159  00204C  6E14               	movwf	fputs@c^0,c
  6160  00204E  5014               	movf	fputs@c^0,w,c
  6161  002050  A4D8               	btfss	status,2,c
  6162  002052  EF2D  F010         	goto	u1881
  6163  002056  EF2F  F010         	goto	u1880
  6164  00205A                     u1881:
  6165  00205A  EF14  F010         	goto	l2858
  6166  00205E                     u1880:
  6167  00205E  0012               	return		;funcret
  6168  002060                     __end_of_fputs:
  6169                           	opt callstack 0
  6170                           
  6171 ;; *************** function _fputc *****************
  6172 ;; Defined at:
  6173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  c               2    6[COMRAM] int 
  6176 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  6177 ;;		 -> NULL(0), 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  2    6[COMRAM] int 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6191 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;Total ram usage:        9 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    6
  6196 ;; This function calls:
  6197 ;;		_putch
  6198 ;; This function is called by:
  6199 ;;		_pad
  6200 ;;		_stoa
  6201 ;;		_vfpfcnvrt
  6202 ;;		_fputs
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text37
  6207  001A0C                     __ptext37:
  6208                           	opt callstack 0
  6209  001A0C                     _fputc:
  6210                           	opt callstack 17
  6211  001A0C  5009               	movf	fputc@fp^0,w,c
  6212  001A0E  100A               	iorwf	(fputc@fp+1)^0,w,c
  6213  001A10  B4D8               	btfsc	status,2,c
  6214  001A12  EF0D  F00D         	goto	u1841
  6215  001A16  EF0F  F00D         	goto	u1840
  6216  001A1A                     u1841:
  6217  001A1A  EF18  F00D         	goto	l2846
  6218  001A1E                     u1840:
  6219  001A1E  5009               	movf	fputc@fp^0,w,c
  6220  001A20  100A               	iorwf	(fputc@fp+1)^0,w,c
  6221  001A22  A4D8               	btfss	status,2,c
  6222  001A24  EF16  F00D         	goto	u1851
  6223  001A28  EF18  F00D         	goto	u1850
  6224  001A2C                     u1851:
  6225  001A2C  EF1D  F00D         	goto	l2848
  6226  001A30                     u1850:
  6227  001A30                     l2846:
  6228  001A30  5007               	movf	fputc@c^0,w,c
  6229  001A32  ECA6  F011         	call	_putch
  6230  001A36  EF50  F00D         	goto	l1550
  6231  001A3A                     l2848:
  6232  001A3A  EE20 F004          	lfsr	2,4
  6233  001A3E  5009               	movf	fputc@fp^0,w,c
  6234  001A40  26D9               	addwf	fsr2l,f,c
  6235  001A42  500A               	movf	(fputc@fp+1)^0,w,c
  6236  001A44  22DA               	addwfc	fsr2h,f,c
  6237  001A46  50DE               	movf	postinc2,w,c
  6238  001A48  10DE               	iorwf	postinc2,w,c
  6239  001A4A  B4D8               	btfsc	status,2,c
  6240  001A4C  EF2A  F00D         	goto	u1861
  6241  001A50  EF2C  F00D         	goto	u1860
  6242  001A54                     u1861:
  6243  001A54  EF47  F00D         	goto	l2852
  6244  001A58                     u1860:
  6245  001A58  EE20 F004          	lfsr	2,4
  6246  001A5C  5009               	movf	fputc@fp^0,w,c
  6247  001A5E  26D9               	addwf	fsr2l,f,c
  6248  001A60  500A               	movf	(fputc@fp+1)^0,w,c
  6249  001A62  22DA               	addwfc	fsr2h,f,c
  6250  001A64  EE10 F002          	lfsr	1,2
  6251  001A68  5009               	movf	fputc@fp^0,w,c
  6252  001A6A  26E1               	addwf	fsr1l,f,c
  6253  001A6C  500A               	movf	(fputc@fp+1)^0,w,c
  6254  001A6E  22E2               	addwfc	fsr1h,f,c
  6255  001A70  50DE               	movf	postinc2,w,c
  6256  001A72  5CE6               	subwf	postinc1,w,c
  6257  001A74  50E6               	movf	postinc1,w,c
  6258  001A76  0A80               	xorlw	128
  6259  001A78  6E0F               	movwf	(??_fputc+4)^0,c
  6260  001A7A  50DE               	movf	postinc2,w,c
  6261  001A7C  0A80               	xorlw	128
  6262  001A7E  580F               	subwfb	(??_fputc+4)^0,w,c
  6263  001A80  B0D8               	btfsc	status,0,c
  6264  001A82  EF45  F00D         	goto	u1871
  6265  001A86  EF47  F00D         	goto	u1870
  6266  001A8A                     u1871:
  6267  001A8A  EF50  F00D         	goto	l1550
  6268  001A8E                     u1870:
  6269  001A8E                     l2852:
  6270  001A8E  EE20 F002          	lfsr	2,2
  6271  001A92  5009               	movf	fputc@fp^0,w,c
  6272  001A94  26D9               	addwf	fsr2l,f,c
  6273  001A96  500A               	movf	(fputc@fp+1)^0,w,c
  6274  001A98  22DA               	addwfc	fsr2h,f,c
  6275  001A9A  2ADE               	incf	postinc2,f,c
  6276  001A9C  0E00               	movlw	0
  6277  001A9E  22DD               	addwfc	postdec2,f,c
  6278  001AA0                     l1550:
  6279  001AA0  0012               	return		;funcret
  6280  001AA2                     __end_of_fputc:
  6281                           	opt callstack 0
  6282                           
  6283 ;; *************** function _putch *****************
  6284 ;; Defined at:
  6285 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  txData          1    wreg     unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  txData          1    5[COMRAM] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;Total ram usage:        1 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    5
  6306 ;; This function calls:
  6307 ;;		_EUSART2_Write
  6308 ;; This function is called by:
  6309 ;;		_fputc
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text38
  6314  00234C                     __ptext38:
  6315                           	opt callstack 0
  6316  00234C                     _putch:
  6317                           	opt callstack 17
  6318                           
  6319                           ;incstack = 0
  6320                           ;putch@txData stored from wreg
  6321  00234C  6E06               	movwf	putch@txData^0,c
  6322  00234E                     
  6323                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  6324  00234E  5006               	movf	putch@txData^0,w,c
  6325  002350  ECEE  F00E         	call	_EUSART2_Write
  6326  002354  0012               	return		;funcret
  6327  002356                     __end_of_putch:
  6328                           	opt callstack 0
  6329                           
  6330 ;; *************** function _EUSART2_Write *****************
  6331 ;; Defined at:
  6332 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  txData          1    wreg     unsigned char 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  txData          1    4[COMRAM] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;Total ram usage:        1 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    4
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_putch
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text39
  6361  001DDC                     __ptext39:
  6362                           	opt callstack 0
  6363  001DDC                     _EUSART2_Write:
  6364                           	opt callstack 17
  6365                           
  6366                           ;incstack = 0
  6367                           ;EUSART2_Write@txData stored from wreg
  6368  001DDC  6E05               	movwf	EUSART2_Write@txData^0,c
  6369  001DDE                     l2824:
  6370                           
  6371                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  6372  001DDE  0100               	movlb	0	; () banked
  6373  001DE0  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  6374  001DE2  B4D8               	btfsc	status,2,c
  6375  001DE4  EFF6  F00E         	goto	u1811
  6376  001DE8  EFF8  F00E         	goto	u1810
  6377  001DEC                     u1811:
  6378  001DEC  EFEF  F00E         	goto	l2824
  6379  001DF0                     u1810:
  6380  001DF0                     
  6381                           ; BSR set to: 0
  6382                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  6383  001DF0  010E               	movlb	14	; () banked
  6384  001DF2  BDC5               	btfsc	197,6,b	;volatile
  6385  001DF4  EFFE  F00E         	goto	u1821
  6386  001DF8  EF00  F00F         	goto	u1820
  6387  001DFC                     u1821:
  6388  001DFC  EF04  F00F         	goto	l321
  6389  001E00                     u1820:
  6390  001E00                     
  6391                           ; BSR set to: 14
  6392                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  6393  001E00  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  6394                           
  6395                           ;mcc_generated_files/eusart2.c: 182:     }
  6396  001E04  EF1A  F00F         	goto	l2838
  6397  001E08                     l321:
  6398                           
  6399                           ; BSR set to: 14
  6400                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  6401  001E08  9DC5               	bcf	197,6,b	;volatile
  6402  001E0A                     
  6403                           ; BSR set to: 14
  6404                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  6405  001E0A  0E80               	movlw	low _eusart2TxBuffer
  6406  001E0C  0100               	movlb	0	; () banked
  6407  001E0E  259F               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  6408  001E10  6ED9               	movwf	fsr2l,c
  6409  001E12  6ADA               	clrf	fsr2h,c
  6410  001E14  0E00               	movlw	high _eusart2TxBuffer
  6411  001E16  22DA               	addwfc	fsr2h,f,c
  6412  001E18  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  6413  001E1C                     
  6414                           ; BSR set to: 0
  6415  001E1C  2B9F               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  6416  001E1E                     
  6417                           ; BSR set to: 0
  6418                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  6419  001E1E  0E07               	movlw	7
  6420  001E20  659F               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  6421  001E22  EF15  F00F         	goto	u1831
  6422  001E26  EF17  F00F         	goto	u1830
  6423  001E2A                     u1831:
  6424  001E2A  EF19  F00F         	goto	l2836
  6425  001E2E                     u1830:
  6426  001E2E                     
  6427                           ; BSR set to: 0
  6428                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  6429  001E2E  0E00               	movlw	0
  6430  001E30  6F9F               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6431  001E32                     l2836:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  6435  001E32  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6436  001E34                     l2838:
  6437                           
  6438                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  6439  001E34  010E               	movlb	14	; () banked
  6440  001E36  8DC5               	bsf	197,6,b	;volatile
  6441  001E38                     
  6442                           ; BSR set to: 14
  6443  001E38  0012               	return		;funcret
  6444  001E3A                     __end_of_EUSART2_Write:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function _abs *****************
  6448 ;; Defined at:
  6449 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  a               2   22[COMRAM] int 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  2   22[COMRAM] int 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;Total ram usage:        4 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    4
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_dtoa
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text40
  6478  0020A4                     __ptext40:
  6479                           	opt callstack 0
  6480  0020A4                     _abs:
  6481                           	opt callstack 21
  6482  0020A4  BE18               	btfsc	(abs@a+1)^0,7,c
  6483  0020A6  EF5F  F010         	goto	u1970
  6484  0020AA  5018               	movf	(abs@a+1)^0,w,c
  6485  0020AC  E106               	bnz	u1971
  6486  0020AE  0417               	decf	abs@a^0,w,c
  6487  0020B0  B0D8               	btfsc	status,0,c
  6488  0020B2  EF5D  F010         	goto	u1971
  6489  0020B6  EF5F  F010         	goto	u1970
  6490  0020BA                     u1971:
  6491  0020BA  EF6D  F010         	goto	l1478
  6492  0020BE                     u1970:
  6493  0020BE  C017  F019         	movff	abs@a,??_abs
  6494  0020C2  C018  F01A         	movff	abs@a+1,??_abs+1
  6495  0020C6  1E19               	comf	??_abs^0,f,c
  6496  0020C8  1E1A               	comf	(??_abs+1)^0,f,c
  6497  0020CA  4A19               	infsnz	??_abs^0,f,c
  6498  0020CC  2A1A               	incf	(??_abs+1)^0,f,c
  6499  0020CE  C019  F017         	movff	??_abs,?_abs
  6500  0020D2  C01A  F018         	movff	??_abs+1,?_abs+1
  6501  0020D6  EF71  F010         	goto	l1481
  6502  0020DA                     l1478:
  6503  0020DA  C017  F017         	movff	abs@a,?_abs
  6504  0020DE  C018  F018         	movff	abs@a+1,?_abs+1
  6505  0020E2                     l1481:
  6506  0020E2  0012               	return		;funcret
  6507  0020E4                     __end_of_abs:
  6508                           	opt callstack 0
  6509                           
  6510 ;; *************** function ___aomod *****************
  6511 ;; Defined at:
  6512 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  dividend        8    4[COMRAM] long long 
  6515 ;;  divisor         8   12[COMRAM] long long 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  sign            1   21[COMRAM] unsigned char 
  6518 ;;  counter         1   20[COMRAM] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  8    4[COMRAM] long long 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6528 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;Total ram usage:       18 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    4
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_dtoa
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text41
  6543  001328                     __ptext41:
  6544                           	opt callstack 0
  6545  001328                     ___aomod:
  6546                           	opt callstack 21
  6547  001328  0E00               	movlw	0
  6548  00132A  6E16               	movwf	___aomod@sign^0,c
  6549  00132C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  6550  00132E  EF9D  F009         	goto	u2140
  6551  001332  EF9B  F009         	goto	u2141
  6552  001336                     u2141:
  6553  001336  EFAF  F009         	goto	l2984
  6554  00133A                     u2140:
  6555  00133A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6556  00133C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6557  00133E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6558  001340  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6559  001342  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6560  001344  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6561  001346  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6562  001348  6C05               	negf	___aomod@dividend^0,c
  6563  00134A  0E00               	movlw	0
  6564  00134C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6565  00134E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6566  001350  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6567  001352  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6568  001354  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6569  001356  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6570  001358  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6571  00135A  0E01               	movlw	1
  6572  00135C  6E16               	movwf	___aomod@sign^0,c
  6573  00135E                     l2984:
  6574  00135E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  6575  001360  EFB6  F009         	goto	u2150
  6576  001364  EFB4  F009         	goto	u2151
  6577  001368                     u2151:
  6578  001368  EFC6  F009         	goto	l2988
  6579  00136C                     u2150:
  6580  00136C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  6581  00136E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  6582  001370  1E12               	comf	(___aomod@divisor+5)^0,f,c
  6583  001372  1E11               	comf	(___aomod@divisor+4)^0,f,c
  6584  001374  1E10               	comf	(___aomod@divisor+3)^0,f,c
  6585  001376  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  6586  001378  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  6587  00137A  6C0D               	negf	___aomod@divisor^0,c
  6588  00137C  0E00               	movlw	0
  6589  00137E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  6590  001380  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  6591  001382  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  6592  001384  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  6593  001386  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  6594  001388  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  6595  00138A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  6596  00138C                     l2988:
  6597  00138C  500D               	movf	___aomod@divisor^0,w,c
  6598  00138E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  6599  001390  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  6600  001392  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  6601  001394  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  6602  001396  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  6603  001398  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  6604  00139A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  6605  00139C  B4D8               	btfsc	status,2,c
  6606  00139E  EFD3  F009         	goto	u2161
  6607  0013A2  EFD5  F009         	goto	u2160
  6608  0013A6                     u2161:
  6609  0013A6  EF1D  F00A         	goto	l3004
  6610  0013AA                     u2160:
  6611  0013AA  0E01               	movlw	1
  6612  0013AC  6E15               	movwf	___aomod@counter^0,c
  6613  0013AE  EFE3  F009         	goto	l2994
  6614  0013B2                     l2992:
  6615  0013B2  90D8               	bcf	status,0,c
  6616  0013B4  360D               	rlcf	___aomod@divisor^0,f,c
  6617  0013B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  6618  0013B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  6619  0013BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  6620  0013BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  6621  0013BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  6622  0013C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  6623  0013C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  6624  0013C4  2A15               	incf	___aomod@counter^0,f,c
  6625  0013C6                     l2994:
  6626  0013C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  6627  0013C8  EFE8  F009         	goto	u2171
  6628  0013CC  EFEA  F009         	goto	u2170
  6629  0013D0                     u2171:
  6630  0013D0  EFD9  F009         	goto	l2992
  6631  0013D4                     u2170:
  6632  0013D4                     l2996:
  6633  0013D4  500D               	movf	___aomod@divisor^0,w,c
  6634  0013D6  5C05               	subwf	___aomod@dividend^0,w,c
  6635  0013D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  6636  0013DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  6637  0013DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  6638  0013DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  6639  0013E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  6640  0013E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  6641  0013E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  6642  0013E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  6643  0013E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  6644  0013EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  6645  0013EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  6646  0013EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  6647  0013F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  6648  0013F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  6649  0013F4  A0D8               	btfss	status,0,c
  6650  0013F6  EFFF  F009         	goto	u2181
  6651  0013FA  EF01  F00A         	goto	u2180
  6652  0013FE                     u2181:
  6653  0013FE  EF11  F00A         	goto	l3000
  6654  001402                     u2180:
  6655  001402  500D               	movf	___aomod@divisor^0,w,c
  6656  001404  5E05               	subwf	___aomod@dividend^0,f,c
  6657  001406  500E               	movf	(___aomod@divisor+1)^0,w,c
  6658  001408  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  6659  00140A  500F               	movf	(___aomod@divisor+2)^0,w,c
  6660  00140C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  6661  00140E  5010               	movf	(___aomod@divisor+3)^0,w,c
  6662  001410  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  6663  001412  5011               	movf	(___aomod@divisor+4)^0,w,c
  6664  001414  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  6665  001416  5012               	movf	(___aomod@divisor+5)^0,w,c
  6666  001418  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  6667  00141A  5013               	movf	(___aomod@divisor+6)^0,w,c
  6668  00141C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  6669  00141E  5014               	movf	(___aomod@divisor+7)^0,w,c
  6670  001420  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  6671  001422                     l3000:
  6672  001422  90D8               	bcf	status,0,c
  6673  001424  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  6674  001426  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  6675  001428  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  6676  00142A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  6677  00142C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  6678  00142E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  6679  001430  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  6680  001432  320D               	rrcf	___aomod@divisor^0,f,c
  6681  001434  2E15               	decfsz	___aomod@counter^0,f,c
  6682  001436  EFEA  F009         	goto	l2996
  6683  00143A                     l3004:
  6684  00143A  5016               	movf	___aomod@sign^0,w,c
  6685  00143C  B4D8               	btfsc	status,2,c
  6686  00143E  EF23  F00A         	goto	u2191
  6687  001442  EF25  F00A         	goto	u2190
  6688  001446                     u2191:
  6689  001446  EF35  F00A         	goto	l3008
  6690  00144A                     u2190:
  6691  00144A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6692  00144C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6693  00144E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6694  001450  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6695  001452  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6696  001454  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6697  001456  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6698  001458  6C05               	negf	___aomod@dividend^0,c
  6699  00145A  0E00               	movlw	0
  6700  00145C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6701  00145E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6702  001460  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6703  001462  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6704  001464  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6705  001466  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6706  001468  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6707  00146A                     l3008:
  6708  00146A  C005  F005         	movff	___aomod@dividend,?___aomod
  6709  00146E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  6710  001472  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  6711  001476  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  6712  00147A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  6713  00147E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  6714  001482  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  6715  001486  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  6716  00148A  0012               	return		;funcret
  6717  00148C                     __end_of___aomod:
  6718                           	opt callstack 0
  6719                           
  6720 ;; *************** function ___aodiv *****************
  6721 ;; Defined at:
  6722 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  dividend        8    4[COMRAM] long long 
  6725 ;;  divisor         8   12[COMRAM] long long 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  quotient        8   22[COMRAM] long long 
  6728 ;;  sign            1   21[COMRAM] unsigned char 
  6729 ;;  counter         1   20[COMRAM] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  8    4[COMRAM] long long 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6739 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6743 ;;Total ram usage:       26 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_dtoa
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text42
  6754  0011A0                     __ptext42:
  6755                           	opt callstack 0
  6756  0011A0                     ___aodiv:
  6757                           	opt callstack 21
  6758  0011A0  0E00               	movlw	0
  6759  0011A2  6E16               	movwf	___aodiv@sign^0,c
  6760  0011A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  6761  0011A6  EFD9  F008         	goto	u2070
  6762  0011AA  EFD7  F008         	goto	u2071
  6763  0011AE                     u2071:
  6764  0011AE  EFEB  F008         	goto	l2940
  6765  0011B2                     u2070:
  6766  0011B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  6767  0011B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  6768  0011B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  6769  0011B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  6770  0011BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  6771  0011BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  6772  0011BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  6773  0011C0  6C0D               	negf	___aodiv@divisor^0,c
  6774  0011C2  0E00               	movlw	0
  6775  0011C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  6776  0011C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  6777  0011C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  6778  0011CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  6779  0011CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  6780  0011CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  6781  0011D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  6782  0011D2  0E01               	movlw	1
  6783  0011D4  6E16               	movwf	___aodiv@sign^0,c
  6784  0011D6                     l2940:
  6785  0011D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  6786  0011D8  EFF2  F008         	goto	u2080
  6787  0011DC  EFF0  F008         	goto	u2081
  6788  0011E0                     u2081:
  6789  0011E0  EF04  F009         	goto	l2946
  6790  0011E4                     u2080:
  6791  0011E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  6792  0011E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  6793  0011E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  6794  0011EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  6795  0011EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  6796  0011EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  6797  0011F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  6798  0011F2  6C05               	negf	___aodiv@dividend^0,c
  6799  0011F4  0E00               	movlw	0
  6800  0011F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  6801  0011F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  6802  0011FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  6803  0011FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  6804  0011FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  6805  001200  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  6806  001202  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  6807  001204  0E01               	movlw	1
  6808  001206  1A16               	xorwf	___aodiv@sign^0,f,c
  6809  001208                     l2946:
  6810  001208  EE20  F017         	lfsr	2,___aodiv@quotient
  6811  00120C  0E07               	movlw	7
  6812  00120E                     u2091:
  6813  00120E  6ADE               	clrf	postinc2,c
  6814  001210  06E8               	decf	wreg,f,c
  6815  001212  E2FD               	bc	u2091
  6816  001214  500D               	movf	___aodiv@divisor^0,w,c
  6817  001216  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  6818  001218  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  6819  00121A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  6820  00121C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  6821  00121E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  6822  001220  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  6823  001222  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  6824  001224  B4D8               	btfsc	status,2,c
  6825  001226  EF17  F009         	goto	u2101
  6826  00122A  EF19  F009         	goto	u2100
  6827  00122E                     u2101:
  6828  00122E  EF6B  F009         	goto	l2968
  6829  001232                     u2100:
  6830  001232  0E01               	movlw	1
  6831  001234  6E15               	movwf	___aodiv@counter^0,c
  6832  001236  EF27  F009         	goto	l2954
  6833  00123A                     l2952:
  6834  00123A  90D8               	bcf	status,0,c
  6835  00123C  360D               	rlcf	___aodiv@divisor^0,f,c
  6836  00123E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  6837  001240  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  6838  001242  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  6839  001244  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  6840  001246  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  6841  001248  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  6842  00124A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  6843  00124C  2A15               	incf	___aodiv@counter^0,f,c
  6844  00124E                     l2954:
  6845  00124E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  6846  001250  EF2C  F009         	goto	u2111
  6847  001254  EF2E  F009         	goto	u2110
  6848  001258                     u2111:
  6849  001258  EF1D  F009         	goto	l2952
  6850  00125C                     u2110:
  6851  00125C                     l2956:
  6852  00125C  90D8               	bcf	status,0,c
  6853  00125E  3617               	rlcf	___aodiv@quotient^0,f,c
  6854  001260  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  6855  001262  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  6856  001264  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  6857  001266  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  6858  001268  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  6859  00126A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  6860  00126C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  6861  00126E  500D               	movf	___aodiv@divisor^0,w,c
  6862  001270  5C05               	subwf	___aodiv@dividend^0,w,c
  6863  001272  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6864  001274  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  6865  001276  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6866  001278  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  6867  00127A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6868  00127C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  6869  00127E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6870  001280  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  6871  001282  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6872  001284  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  6873  001286  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6874  001288  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  6875  00128A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6876  00128C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  6877  00128E  A0D8               	btfss	status,0,c
  6878  001290  EF4C  F009         	goto	u2121
  6879  001294  EF4E  F009         	goto	u2120
  6880  001298                     u2121:
  6881  001298  EF5F  F009         	goto	l2964
  6882  00129C                     u2120:
  6883  00129C  500D               	movf	___aodiv@divisor^0,w,c
  6884  00129E  5E05               	subwf	___aodiv@dividend^0,f,c
  6885  0012A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6886  0012A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  6887  0012A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6888  0012A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  6889  0012A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6890  0012AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  6891  0012AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6892  0012AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  6893  0012B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6894  0012B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  6895  0012B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6896  0012B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  6897  0012B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6898  0012BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  6899  0012BC  8017               	bsf	___aodiv@quotient^0,0,c
  6900  0012BE                     l2964:
  6901  0012BE  90D8               	bcf	status,0,c
  6902  0012C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  6903  0012C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  6904  0012C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  6905  0012C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  6906  0012C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  6907  0012CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  6908  0012CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  6909  0012CE  320D               	rrcf	___aodiv@divisor^0,f,c
  6910  0012D0  2E15               	decfsz	___aodiv@counter^0,f,c
  6911  0012D2  EF2E  F009         	goto	l2956
  6912  0012D6                     l2968:
  6913  0012D6  5016               	movf	___aodiv@sign^0,w,c
  6914  0012D8  B4D8               	btfsc	status,2,c
  6915  0012DA  EF71  F009         	goto	u2131
  6916  0012DE  EF73  F009         	goto	u2130
  6917  0012E2                     u2131:
  6918  0012E2  EF83  F009         	goto	l2972
  6919  0012E6                     u2130:
  6920  0012E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  6921  0012E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  6922  0012EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  6923  0012EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  6924  0012EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  6925  0012F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  6926  0012F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  6927  0012F4  6C17               	negf	___aodiv@quotient^0,c
  6928  0012F6  0E00               	movlw	0
  6929  0012F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  6930  0012FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  6931  0012FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  6932  0012FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  6933  001300  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  6934  001302  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  6935  001304  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  6936  001306                     l2972:
  6937  001306  C017  F005         	movff	___aodiv@quotient,?___aodiv
  6938  00130A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  6939  00130E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  6940  001312  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  6941  001316  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  6942  00131A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  6943  00131E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  6944  001322  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  6945  001326  0012               	return		;funcret
  6946  001328                     __end_of___aodiv:
  6947                           	opt callstack 0
  6948                           
  6949 ;; *************** function _atoi *****************
  6950 ;; Defined at:
  6951 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6954 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  6955 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  6956 ;;		 -> STR_1(57), 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  n               2   24[COMRAM] int 
  6959 ;;  neg             2   17[COMRAM] int 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  2   11[COMRAM] int 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;Total ram usage:       15 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    5
  6976 ;; This function calls:
  6977 ;;		___wmul
  6978 ;;		_isdigit
  6979 ;;		_isspace
  6980 ;; This function is called by:
  6981 ;;		_vfpfcnvrt
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text43
  6986  001006                     __ptext43:
  6987                           	opt callstack 0
  6988  001006                     _atoi:
  6989                           	opt callstack 21
  6990  001006  0E00               	movlw	0
  6991  001008  6E1A               	movwf	(atoi@n+1)^0,c
  6992  00100A  0E00               	movlw	0
  6993  00100C  6E19               	movwf	atoi@n^0,c
  6994  00100E  0E00               	movlw	0
  6995  001010  6E13               	movwf	(atoi@neg+1)^0,c
  6996  001012  0E00               	movlw	0
  6997  001014  6E12               	movwf	atoi@neg^0,c
  6998  001016  EF0F  F008         	goto	l3272
  6999  00101A                     l3270:
  7000  00101A  4A0C               	infsnz	atoi@s^0,f,c
  7001  00101C  2A0D               	incf	(atoi@s+1)^0,f,c
  7002  00101E                     l3272:
  7003  00101E  0E01               	movlw	1
  7004  001020  6E18               	movwf	_atoi$1726^0,c
  7005  001022  C00C  FFF6         	movff	atoi@s,tblptrl
  7006  001026  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7007  00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7008  00102A  6AF8               	clrf	tblptru,c
  7009  00102C                     	endif
  7010  00102C                     	if	0	;tblptru may be non-zero
  7011  00102C                     	endif
  7012  00102C  0008               	tblrd		*
  7013  00102E  50F5               	movf	tablat,w,c
  7014  001030  0A20               	xorlw	32
  7015  001032  B4D8               	btfsc	status,2,c
  7016  001034  EF1E  F008         	goto	u2781
  7017  001038  EF20  F008         	goto	u2780
  7018  00103C                     u2781:
  7019  00103C  EF3E  F008         	goto	l3280
  7020  001040                     u2780:
  7021  001040  0EF7               	movlw	247
  7022  001042  6E0E               	movwf	??_atoi^0,c
  7023  001044  0EFF               	movlw	255
  7024  001046  6E0F               	movwf	(??_atoi+1)^0,c
  7025  001048  C00C  FFF6         	movff	atoi@s,tblptrl
  7026  00104C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7027  001050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7028  001050  6AF8               	clrf	tblptru,c
  7029  001052                     	endif
  7030  001052                     	if	0	;tblptru may be non-zero
  7031  001052                     	endif
  7032  001052  0008               	tblrd		*
  7033  001054  50F5               	movf	tablat,w,c
  7034  001056  6E10               	movwf	(??_atoi+2)^0,c
  7035  001058  6A11               	clrf	(??_atoi+3)^0,c
  7036  00105A  500E               	movf	??_atoi^0,w,c
  7037  00105C  2610               	addwf	(??_atoi+2)^0,f,c
  7038  00105E  500F               	movf	(??_atoi+1)^0,w,c
  7039  001060  2211               	addwfc	(??_atoi+3)^0,f,c
  7040  001062  5011               	movf	(??_atoi+3)^0,w,c
  7041  001064  E109               	bnz	u2790
  7042  001066  0E05               	movlw	5
  7043  001068  5C10               	subwf	(??_atoi+2)^0,w,c
  7044  00106A  A0D8               	btfss	status,0,c
  7045  00106C  EF3A  F008         	goto	u2791
  7046  001070  EF3C  F008         	goto	u2790
  7047  001074                     u2791:
  7048  001074  EF3E  F008         	goto	l3280
  7049  001078                     u2790:
  7050  001078  0E00               	movlw	0
  7051  00107A  6E18               	movwf	_atoi$1726^0,c
  7052  00107C                     l3280:
  7053  00107C  C018  F014         	movff	_atoi$1726,_atoi$1725
  7054  001080  6A15               	clrf	(_atoi$1725+1)^0,c
  7055  001082  5014               	movf	_atoi$1725^0,w,c
  7056  001084  1015               	iorwf	(_atoi$1725+1)^0,w,c
  7057  001086  A4D8               	btfss	status,2,c
  7058  001088  EF48  F008         	goto	u2801
  7059  00108C  EF4A  F008         	goto	u2800
  7060  001090                     u2801:
  7061  001090  EF0D  F008         	goto	l3270
  7062  001094                     u2800:
  7063  001094  EF54  F008         	goto	l3290
  7064  001098                     l3286:
  7065  001098  0E00               	movlw	0
  7066  00109A  6E13               	movwf	(atoi@neg+1)^0,c
  7067  00109C  0E01               	movlw	1
  7068  00109E  6E12               	movwf	atoi@neg^0,c
  7069  0010A0                     l3288:
  7070  0010A0  4A0C               	infsnz	atoi@s^0,f,c
  7071  0010A2  2A0D               	incf	(atoi@s+1)^0,f,c
  7072  0010A4  EF8B  F008         	goto	l3296
  7073  0010A8                     l3290:
  7074  0010A8  C00C  FFF6         	movff	atoi@s,tblptrl
  7075  0010AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7076  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7077  0010B0  6AF8               	clrf	tblptru,c
  7078  0010B2                     	endif
  7079  0010B2                     	if	0	;tblptru may be non-zero
  7080  0010B2                     	endif
  7081  0010B2  0008               	tblrd		*
  7082  0010B4  50F5               	movf	tablat,w,c
  7083  0010B6  6E0E               	movwf	??_atoi^0,c
  7084  0010B8  6A0F               	clrf	(??_atoi+1)^0,c
  7085                           
  7086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7087                           ; Switch size 1, requested type "simple"
  7088                           ; Number of cases is 1, Range of values is 0 to 0
  7089                           ; switch strategies available:
  7090                           ; Name         Instructions Cycles
  7091                           ; simple_byte            4     3 (average)
  7092                           ;	Chosen strategy is simple_byte
  7093  0010BA  500F               	movf	(??_atoi+1)^0,w,c
  7094  0010BC  0A00               	xorlw	0	; case 0
  7095  0010BE  B4D8               	btfsc	status,2,c
  7096  0010C0  EF64  F008         	goto	l4082
  7097  0010C4  EF8B  F008         	goto	l3296
  7098  0010C8                     l4082:
  7099                           
  7100                           ; Switch size 1, requested type "simple"
  7101                           ; Number of cases is 2, Range of values is 43 to 45
  7102                           ; switch strategies available:
  7103                           ; Name         Instructions Cycles
  7104                           ; simple_byte            7     4 (average)
  7105                           ;	Chosen strategy is simple_byte
  7106  0010C8  500E               	movf	??_atoi^0,w,c
  7107  0010CA  0A2B               	xorlw	43	; case 43
  7108  0010CC  B4D8               	btfsc	status,2,c
  7109  0010CE  EF50  F008         	goto	l3288
  7110  0010D2  0A06               	xorlw	6	; case 45
  7111  0010D4  B4D8               	btfsc	status,2,c
  7112  0010D6  EF4C  F008         	goto	l3286
  7113  0010DA  EF8B  F008         	goto	l3296
  7114  0010DE                     l3292:
  7115  0010DE  C019  F005         	movff	atoi@n,___wmul@multiplier
  7116  0010E2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7117  0010E6  0E00               	movlw	0
  7118  0010E8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7119  0010EA  0E0A               	movlw	10
  7120  0010EC  6E07               	movwf	___wmul@multiplicand^0,c
  7121  0010EE  EC24  F011         	call	___wmul	;wreg free
  7122  0010F2  C00C  FFF6         	movff	atoi@s,tblptrl
  7123  0010F6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7124  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7125  0010FA  6AF8               	clrf	tblptru,c
  7126  0010FC                     	endif
  7127  0010FC                     	if	0	;tblptru may be non-zero
  7128  0010FC                     	endif
  7129  0010FC  0008               	tblrd		*
  7130  0010FE  50F5               	movf	tablat,w,c
  7131  001100  5E05               	subwf	?___wmul^0,f,c
  7132  001102  0E00               	movlw	0
  7133  001104  5A06               	subwfb	(?___wmul+1)^0,f,c
  7134  001106  0E30               	movlw	48
  7135  001108  2405               	addwf	?___wmul^0,w,c
  7136  00110A  6E19               	movwf	atoi@n^0,c
  7137  00110C  0E00               	movlw	0
  7138  00110E  2006               	addwfc	(?___wmul+1)^0,w,c
  7139  001110  6E1A               	movwf	(atoi@n+1)^0,c
  7140  001112  EF50  F008         	goto	l3288
  7141  001116                     l3296:
  7142  001116  0ED0               	movlw	208
  7143  001118  6E0E               	movwf	??_atoi^0,c
  7144  00111A  0EFF               	movlw	255
  7145  00111C  6E0F               	movwf	(??_atoi+1)^0,c
  7146  00111E  C00C  FFF6         	movff	atoi@s,tblptrl
  7147  001122  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7148  001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7149  001126  6AF8               	clrf	tblptru,c
  7150  001128                     	endif
  7151  001128                     	if	0	;tblptru may be non-zero
  7152  001128                     	endif
  7153  001128  0008               	tblrd		*
  7154  00112A  50F5               	movf	tablat,w,c
  7155  00112C  6E10               	movwf	(??_atoi+2)^0,c
  7156  00112E  6A11               	clrf	(??_atoi+3)^0,c
  7157  001130  500E               	movf	??_atoi^0,w,c
  7158  001132  2610               	addwf	(??_atoi+2)^0,f,c
  7159  001134  500F               	movf	(??_atoi+1)^0,w,c
  7160  001136  2211               	addwfc	(??_atoi+3)^0,f,c
  7161  001138  5011               	movf	(??_atoi+3)^0,w,c
  7162  00113A  E10A               	bnz	u2810
  7163  00113C  0E0A               	movlw	10
  7164  00113E  5C10               	subwf	(??_atoi+2)^0,w,c
  7165  001140  A0D8               	btfss	status,0,c
  7166  001142  EFA5  F008         	goto	u2811
  7167  001146  EFA8  F008         	goto	u2810
  7168  00114A                     u2811:
  7169  00114A  0E01               	movlw	1
  7170  00114C  EFA9  F008         	goto	u2820
  7171  001150                     u2810:
  7172  001150  0E00               	movlw	0
  7173  001152                     u2820:
  7174  001152  6E16               	movwf	_atoi$1727^0,c
  7175  001154  6A17               	clrf	(_atoi$1727+1)^0,c
  7176  001156  5016               	movf	_atoi$1727^0,w,c
  7177  001158  1017               	iorwf	(_atoi$1727+1)^0,w,c
  7178  00115A  A4D8               	btfss	status,2,c
  7179  00115C  EFB2  F008         	goto	u2831
  7180  001160  EFB4  F008         	goto	u2830
  7181  001164                     u2831:
  7182  001164  EF6F  F008         	goto	l3292
  7183  001168                     u2830:
  7184  001168  5012               	movf	atoi@neg^0,w,c
  7185  00116A  1013               	iorwf	(atoi@neg+1)^0,w,c
  7186  00116C  A4D8               	btfss	status,2,c
  7187  00116E  EFBB  F008         	goto	u2841
  7188  001172  EFBD  F008         	goto	u2840
  7189  001176                     u2841:
  7190  001176  EFCB  F008         	goto	l1509
  7191  00117A                     u2840:
  7192  00117A  C019  F00E         	movff	atoi@n,??_atoi
  7193  00117E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7194  001182  1E0E               	comf	??_atoi^0,f,c
  7195  001184  1E0F               	comf	(??_atoi+1)^0,f,c
  7196  001186  4A0E               	infsnz	??_atoi^0,f,c
  7197  001188  2A0F               	incf	(??_atoi+1)^0,f,c
  7198  00118A  C00E  F00C         	movff	??_atoi,?_atoi
  7199  00118E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7200  001192  EFCF  F008         	goto	l1512
  7201  001196                     l1509:
  7202  001196  C019  F00C         	movff	atoi@n,?_atoi
  7203  00119A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7204  00119E                     l1512:
  7205  00119E  0012               	return		;funcret
  7206  0011A0                     __end_of_atoi:
  7207                           	opt callstack 0
  7208                           
  7209 ;; *************** function _isspace *****************
  7210 ;; Defined at:
  7211 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  c               2    4[COMRAM] int 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  2    4[COMRAM] int 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;Total ram usage:        7 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    4
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_atoi
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text44
  7240  001EE8                     __ptext44:
  7241                           	opt callstack 0
  7242  001EE8                     _isspace:
  7243                           	opt callstack 21
  7244  001EE8  0E01               	movlw	1
  7245  001EEA  6E0B               	movwf	_isspace$1752^0,c
  7246  001EEC  0E20               	movlw	32
  7247  001EEE  1805               	xorwf	isspace@c^0,w,c
  7248  001EF0  1006               	iorwf	(isspace@c+1)^0,w,c
  7249  001EF2  B4D8               	btfsc	status,2,c
  7250  001EF4  EF7E  F00F         	goto	u2271
  7251  001EF8  EF80  F00F         	goto	u2270
  7252  001EFC                     u2271:
  7253  001EFC  EF99  F00F         	goto	l3058
  7254  001F00                     u2270:
  7255  001F00  0EF7               	movlw	247
  7256  001F02  6E07               	movwf	??_isspace^0,c
  7257  001F04  0EFF               	movlw	255
  7258  001F06  6E08               	movwf	(??_isspace+1)^0,c
  7259  001F08  C005  F009         	movff	isspace@c,??_isspace+2
  7260  001F0C  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7261  001F10  5007               	movf	??_isspace^0,w,c
  7262  001F12  2609               	addwf	(??_isspace+2)^0,f,c
  7263  001F14  5008               	movf	(??_isspace+1)^0,w,c
  7264  001F16  220A               	addwfc	(??_isspace+3)^0,f,c
  7265  001F18  500A               	movf	(??_isspace+3)^0,w,c
  7266  001F1A  E109               	bnz	u2280
  7267  001F1C  0E05               	movlw	5
  7268  001F1E  5C09               	subwf	(??_isspace+2)^0,w,c
  7269  001F20  A0D8               	btfss	status,0,c
  7270  001F22  EF95  F00F         	goto	u2281
  7271  001F26  EF97  F00F         	goto	u2280
  7272  001F2A                     u2281:
  7273  001F2A  EF99  F00F         	goto	l3058
  7274  001F2E                     u2280:
  7275  001F2E  0E00               	movlw	0
  7276  001F30  6E0B               	movwf	_isspace$1752^0,c
  7277  001F32                     l3058:
  7278  001F32  C00B  F005         	movff	_isspace$1752,?_isspace
  7279  001F36  6A06               	clrf	(?_isspace+1)^0,c
  7280  001F38  0012               	return		;funcret
  7281  001F3A                     __end_of_isspace:
  7282                           	opt callstack 0
  7283                           
  7284 ;; *************** function _isdigit *****************
  7285 ;; Defined at:
  7286 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  c               2    4[COMRAM] int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2    4[COMRAM] int 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;Total ram usage:        6 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    4
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_vfpfcnvrt
  7311 ;;		_atoi
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text45
  7316  002190                     __ptext45:
  7317                           	opt callstack 0
  7318  002190                     _isdigit:
  7319                           	opt callstack 22
  7320  002190  0ED0               	movlw	208
  7321  002192  6E07               	movwf	??_isdigit^0,c
  7322  002194  0EFF               	movlw	255
  7323  002196  6E08               	movwf	(??_isdigit+1)^0,c
  7324  002198  C005  F009         	movff	isdigit@c,??_isdigit+2
  7325  00219C  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7326  0021A0  5007               	movf	??_isdigit^0,w,c
  7327  0021A2  2609               	addwf	(??_isdigit+2)^0,f,c
  7328  0021A4  5008               	movf	(??_isdigit+1)^0,w,c
  7329  0021A6  220A               	addwfc	(??_isdigit+3)^0,f,c
  7330  0021A8  500A               	movf	(??_isdigit+3)^0,w,c
  7331  0021AA  E10A               	bnz	u2050
  7332  0021AC  0E0A               	movlw	10
  7333  0021AE  5C09               	subwf	(??_isdigit+2)^0,w,c
  7334  0021B0  A0D8               	btfss	status,0,c
  7335  0021B2  EFDD  F010         	goto	u2051
  7336  0021B6  EFE0  F010         	goto	u2050
  7337  0021BA                     u2051:
  7338  0021BA  0E01               	movlw	1
  7339  0021BC  EFE1  F010         	goto	u2060
  7340  0021C0                     u2050:
  7341  0021C0  0E00               	movlw	0
  7342  0021C2                     u2060:
  7343  0021C2  6E05               	movwf	?_isdigit^0,c
  7344  0021C4  6A06               	clrf	(?_isdigit+1)^0,c
  7345  0021C6  0012               	return		;funcret
  7346  0021C8                     __end_of_isdigit:
  7347                           	opt callstack 0
  7348                           
  7349 ;; *************** function ___wmul *****************
  7350 ;; Defined at:
  7351 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  multiplier      2    4[COMRAM] unsigned int 
  7354 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  product         2    8[COMRAM] unsigned int 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  2    4[COMRAM] unsigned int 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, prodl, prodh
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;Total ram usage:        6 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    4
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_atoi
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text46
  7381  002248                     __ptext46:
  7382                           	opt callstack 0
  7383  002248                     ___wmul:
  7384                           	opt callstack 21
  7385  002248  5005               	movf	___wmul@multiplier^0,w,c
  7386  00224A  0207               	mulwf	___wmul@multiplicand^0,c
  7387  00224C  CFF3 F009          	movff	prodl,___wmul@product
  7388  002250  CFF4 F00A          	movff	prodh,___wmul@product+1
  7389  002254  5005               	movf	___wmul@multiplier^0,w,c
  7390  002256  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7391  002258  50F3               	movf	243,w,c
  7392  00225A  260A               	addwf	(___wmul@product+1)^0,f,c
  7393  00225C  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7394  00225E  0207               	mulwf	___wmul@multiplicand^0,c
  7395  002260  50F3               	movf	243,w,c
  7396  002262  260A               	addwf	(___wmul@product+1)^0,f,c
  7397  002264  C009  F005         	movff	___wmul@product,?___wmul
  7398  002268  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7399  00226C  0012               	return		;funcret
  7400  00226E                     __end_of___wmul:
  7401                           	opt callstack 0
  7402                           
  7403 ;; *************** function _EUSART1_is_rx_ready *****************
  7404 ;; Defined at:
  7405 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      _Bool 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    4
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text47
  7434  0022BC                     __ptext47:
  7435                           	opt callstack 0
  7436  0022BC                     _EUSART1_is_rx_ready:
  7437                           	opt callstack 26
  7438  0022BC                     
  7439                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  7440  0022BC  0100               	movlb	0	; () banked
  7441  0022BE  5197               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7442  0022C0  A4D8               	btfss	status,2,c
  7443  0022C2  EF65  F011         	goto	u3131
  7444  0022C6  EF68  F011         	goto	u3130
  7445  0022CA                     u3131:
  7446  0022CA  0E01               	movlw	1
  7447  0022CC  EF69  F011         	goto	u3140
  7448  0022D0                     u3130:
  7449  0022D0  0E00               	movlw	0
  7450  0022D2                     u3140:
  7451  0022D2                     
  7452                           ; BSR set to: 0
  7453  0022D2  0012               	return		;funcret
  7454  0022D4                     __end_of_EUSART1_is_rx_ready:
  7455                           	opt callstack 0
  7456                           
  7457 ;; *************** function _EUSART1_Read *****************
  7458 ;; Defined at:
  7459 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  readValue       1    4[COMRAM] unsigned char 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      unsigned char 
  7466 ;; Registers used:
  7467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    4
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_main
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text48
  7488  001E3A                     __ptext48:
  7489                           	opt callstack 0
  7490  001E3A                     _EUSART1_Read:
  7491                           	opt callstack 26
  7492  001E3A                     l3652:
  7493                           
  7494                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  7495  001E3A  0100               	movlb	0	; () banked
  7496  001E3C  5197               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7497  001E3E  B4D8               	btfsc	status,2,c
  7498  001E40  EF24  F00F         	goto	u3151
  7499  001E44  EF26  F00F         	goto	u3150
  7500  001E48                     u3151:
  7501  001E48  EF1D  F00F         	goto	l3652
  7502  001E4C                     u3150:
  7503  001E4C                     
  7504                           ; BSR set to: 0
  7505                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7506  001E4C  0E64               	movlw	low _eusart1RxStatusBuffer
  7507  001E4E  2598               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7508  001E50  6ED9               	movwf	fsr2l,c
  7509  001E52  6ADA               	clrf	fsr2h,c
  7510  001E54  0E01               	movlw	high _eusart1RxStatusBuffer
  7511  001E56  22DA               	addwfc	fsr2h,f,c
  7512  001E58  50DF               	movf	indf2,w,c
  7513  001E5A  6F96               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7514                           
  7515                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7516  001E5C  0E64               	movlw	low _eusart1RxBuffer
  7517  001E5E  2598               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7518  001E60  6ED9               	movwf	fsr2l,c
  7519  001E62  6ADA               	clrf	fsr2h,c
  7520  001E64  0E02               	movlw	high _eusart1RxBuffer
  7521  001E66  22DA               	addwfc	fsr2h,f,c
  7522  001E68  50DF               	movf	indf2,w,c
  7523  001E6A  6E05               	movwf	EUSART1_Read@readValue^0,c
  7524  001E6C                     
  7525                           ; BSR set to: 0
  7526  001E6C  2B98               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  7527  001E6E                     
  7528                           ; BSR set to: 0
  7529                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7530  001E6E  0E63               	movlw	99
  7531  001E70  6598               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  7532  001E72  EF3D  F00F         	goto	u3161
  7533  001E76  EF3F  F00F         	goto	u3160
  7534  001E7A                     u3161:
  7535  001E7A  EF41  F00F         	goto	l3662
  7536  001E7E                     u3160:
  7537  001E7E                     
  7538                           ; BSR set to: 0
  7539                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  7540  001E7E  0E00               	movlw	0
  7541  001E80  6F98               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7542  001E82                     l3662:
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  7546  001E82  010E               	movlb	14	; () banked
  7547  001E84  9BC5               	bcf	197,5,b	;volatile
  7548  001E86                     
  7549                           ; BSR set to: 14
  7550                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  7551  001E86  0100               	movlb	0	; () banked
  7552  001E88  0797               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7553  001E8A                     
  7554                           ; BSR set to: 0
  7555                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  7556  001E8A  010E               	movlb	14	; () banked
  7557  001E8C  8BC5               	bsf	197,5,b	;volatile
  7558  001E8E                     
  7559                           ; BSR set to: 14
  7560                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  7561  001E8E  5005               	movf	EUSART1_Read@readValue^0,w,c
  7562  001E90                     
  7563                           ; BSR set to: 14
  7564  001E90  0012               	return		;funcret
  7565  001E92                     __end_of_EUSART1_Read:
  7566                           	opt callstack 0
  7567                           
  7568 ;; *************** function _ClearRxBuff *****************
  7569 ;; Defined at:
  7570 ;;		line 70 in file "main.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  i               2    5[COMRAM] int 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;Total ram usage:        3 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    4
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_main
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text49
  7599  001F8A                     __ptext49:
  7600                           	opt callstack 0
  7601  001F8A                     _ClearRxBuff:
  7602                           	opt callstack 26
  7603  001F8A                     
  7604                           ;main.c: 72:     int i = 0;
  7605  001F8A  0E00               	movlw	0
  7606  001F8C  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7607  001F8E  0E00               	movlw	0
  7608  001F90  6E06               	movwf	ClearRxBuff@i^0,c
  7609                           
  7610                           ;main.c: 73:     for(i=0; i<ByteNum; i++ ){
  7611  001F92  0E00               	movlw	0
  7612  001F94  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7613  001F96  0E00               	movlw	0
  7614  001F98  6E06               	movwf	ClearRxBuff@i^0,c
  7615  001F9A  EFD9  F00F         	goto	l3730
  7616  001F9E                     l3726:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;main.c: 74:         rxData[i] = 0xFF;
  7620  001F9E  0E00               	movlw	low _rxData
  7621  001FA0  2406               	addwf	ClearRxBuff@i^0,w,c
  7622  001FA2  6ED9               	movwf	fsr2l,c
  7623  001FA4  0E02               	movlw	high _rxData
  7624  001FA6  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  7625  001FA8  6EDA               	movwf	fsr2h,c
  7626  001FAA  0EFF               	movlw	255
  7627  001FAC  6EDF               	movwf	indf2,c
  7628  001FAE                     
  7629                           ; BSR set to: 0
  7630                           ;main.c: 75:     }
  7631  001FAE  4A06               	infsnz	ClearRxBuff@i^0,f,c
  7632  001FB0  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  7633  001FB2                     l3730:
  7634  001FB2  0100               	movlb	0	; () banked
  7635  001FB4  5190               	movf	_ByteNum& (0+255),w,b
  7636  001FB6  5C06               	subwf	ClearRxBuff@i^0,w,c
  7637  001FB8  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  7638  001FBA  0A80               	xorlw	128
  7639  001FBC  6E05               	movwf	??_ClearRxBuff^0,c
  7640  001FBE  5191               	movf	(_ByteNum+1)& (0+255),w,b
  7641  001FC0  0A80               	xorlw	128
  7642  001FC2  5805               	subwfb	??_ClearRxBuff^0,w,c
  7643  001FC4  A0D8               	btfss	status,0,c
  7644  001FC6  EFE7  F00F         	goto	u3281
  7645  001FCA  EFE9  F00F         	goto	u3280
  7646  001FCE                     u3281:
  7647  001FCE  EFCF  F00F         	goto	l3726
  7648  001FD2                     u3280:
  7649  001FD2                     
  7650                           ; BSR set to: 0
  7651  001FD2  0012               	return		;funcret
  7652  001FD4                     __end_of_ClearRxBuff:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _AddRxBuffToModBus *****************
  7656 ;; Defined at:
  7657 ;;		line 79 in file "main.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  i               2    5[COMRAM] int 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;Total ram usage:        3 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    4
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_main
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text50
  7686  00196C                     __ptext50:
  7687                           	opt callstack 0
  7688  00196C                     _AddRxBuffToModBus:
  7689                           	opt callstack 26
  7690  00196C                     
  7691                           ;main.c: 83:     int i = 0;
  7692  00196C  0E00               	movlw	0
  7693  00196E  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  7694  001970  0E00               	movlw	0
  7695  001972  6E06               	movwf	AddRxBuffToModBus@i^0,c
  7696                           
  7697                           ;main.c: 85:     for(i=0l; i<ByteNum; i++){
  7698  001974  0E00               	movlw	0
  7699  001976  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  7700  001978  0E00               	movlw	0
  7701  00197A  6E06               	movwf	AddRxBuffToModBus@i^0,c
  7702  00197C  EFD2  F00C         	goto	l3740
  7703  001980                     l3734:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;main.c: 86:         ModbusData[ModDataCnt] = rxData[i];
  7707  001980  0E00               	movlw	low _rxData
  7708  001982  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  7709  001984  6ED9               	movwf	fsr2l,c
  7710  001986  0E02               	movlw	high _rxData
  7711  001988  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  7712  00198A  6EDA               	movwf	fsr2h,c
  7713  00198C  0E00               	movlw	low _ModbusData
  7714  00198E  258E               	addwf	_ModDataCnt& (0+255),w,b
  7715  001990  6EE1               	movwf	fsr1l,c
  7716  001992  0E01               	movlw	high _ModbusData
  7717  001994  218F               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  7718  001996  6EE2               	movwf	fsr1h,c
  7719  001998  CFDF FFE7          	movff	indf2,indf1
  7720  00199C                     
  7721                           ; BSR set to: 0
  7722                           ;main.c: 87:         ModDataCnt++;
  7723  00199C  4B8E               	infsnz	_ModDataCnt& (0+255),f,b
  7724  00199E  2B8F               	incf	(_ModDataCnt+1)& (0+255),f,b
  7725  0019A0                     
  7726                           ; BSR set to: 0
  7727                           ;main.c: 88:     }
  7728  0019A0  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  7729  0019A2  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  7730  0019A4                     l3740:
  7731  0019A4  0100               	movlb	0	; () banked
  7732  0019A6  5190               	movf	_ByteNum& (0+255),w,b
  7733  0019A8  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  7734  0019AA  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  7735  0019AC  0A80               	xorlw	128
  7736  0019AE  6E05               	movwf	??_AddRxBuffToModBus^0,c
  7737  0019B0  5191               	movf	(_ByteNum+1)& (0+255),w,b
  7738  0019B2  0A80               	xorlw	128
  7739  0019B4  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  7740  0019B6  A0D8               	btfss	status,0,c
  7741  0019B8  EFE0  F00C         	goto	u3291
  7742  0019BC  EFE2  F00C         	goto	u3290
  7743  0019C0                     u3291:
  7744  0019C0  EFC0  F00C         	goto	l3734
  7745  0019C4                     u3290:
  7746  0019C4                     
  7747                           ; BSR set to: 0
  7748                           ;main.c: 93:     if(ModbusData[1] == 0x0F){
  7749  0019C4  0E0F               	movlw	15
  7750  0019C6  0101               	movlb	1	; () banked
  7751  0019C8  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7752  0019CA  A4D8               	btfss	status,2,c
  7753  0019CC  EFEA  F00C         	goto	u3301
  7754  0019D0  EFEC  F00C         	goto	u3300
  7755  0019D4                     u3301:
  7756  0019D4  EFF5  F00C         	goto	l3746
  7757  0019D8                     u3300:
  7758  0019D8                     l3744:
  7759                           
  7760                           ; BSR set to: 1
  7761                           ;main.c: 94:         ExpectedBytes = ModbusData[6] + 9;
  7762  0019D8  0E09               	movlw	9
  7763  0019DA  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  7764  0019DC  0100               	movlb	0	; () banked
  7765  0019DE  6FF4               	movwf	_ExpectedBytes& (0+255),b
  7766  0019E0  6BF5               	clrf	(_ExpectedBytes+1)& (0+255),b
  7767  0019E2  0E00               	movlw	0
  7768  0019E4  23F5               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  7769                           
  7770                           ;main.c: 95:     }else if (ModbusData[1] == 0x10){
  7771  0019E6  EF05  F00D         	goto	l593
  7772  0019EA                     l3746:
  7773                           
  7774                           ; BSR set to: 1
  7775  0019EA  0E10               	movlw	16
  7776  0019EC  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7777  0019EE  A4D8               	btfss	status,2,c
  7778  0019F0  EFFC  F00C         	goto	u3311
  7779  0019F4  EFFE  F00C         	goto	u3310
  7780  0019F8                     u3311:
  7781  0019F8  EF00  F00D         	goto	l3750
  7782  0019FC                     u3310:
  7783  0019FC  EFEC  F00C         	goto	l3744
  7784  001A00                     l3750:
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;main.c: 98:         ExpectedBytes = 8;
  7788  001A00  0E00               	movlw	0
  7789  001A02  0100               	movlb	0	; () banked
  7790  001A04  6FF5               	movwf	(_ExpectedBytes+1)& (0+255),b
  7791  001A06  0E08               	movlw	8
  7792  001A08  6FF4               	movwf	_ExpectedBytes& (0+255),b
  7793  001A0A                     l593:
  7794                           
  7795                           ; BSR set to: 0
  7796  001A0A  0012               	return		;funcret
  7797  001A0C                     __end_of_AddRxBuffToModBus:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function _INTERRUPT_InterruptManager *****************
  7801 ;; Defined at:
  7802 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;Total ram usage:        4 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    3
  7823 ;; This function calls:
  7824 ;;		Absolute function
  7825 ;;		_EUSART1_Receive_ISR
  7826 ;;		_EUSART1_Transmit_ISR
  7827 ;;		_EUSART2_Receive_ISR
  7828 ;;		_EUSART2_Transmit_ISR
  7829 ;; This function is called by:
  7830 ;;		Interrupt level 2
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	intcode
  7835  000008                     __pintcode:
  7836                           	opt callstack 0
  7837  000008                     _INTERRUPT_InterruptManager:
  7838                           	opt callstack 17
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;incstack = 0
  7842  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7843  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7844  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7845  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7846  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7847  00001A                     
  7848                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  7849  00001A  ACF2               	btfss	242,6,c	;volatile
  7850  00001C  EF12  F000         	goto	i2u333_41
  7851  000020  EF14  F000         	goto	i2u333_40
  7852  000024                     i2u333_41:
  7853  000024  EF89  F000         	goto	i2l159
  7854  000028                     i2u333_40:
  7855  000028                     
  7856                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  7857  000028  010E               	movlb	14	; () banked
  7858  00002A  ADC5               	btfss	197,6,b	;volatile
  7859  00002C  EF1A  F000         	goto	i2u334_41
  7860  000030  EF1C  F000         	goto	i2u334_40
  7861  000034                     i2u334_41:
  7862  000034  EF32  F000         	goto	i2l150
  7863  000038                     i2u334_40:
  7864  000038                     
  7865                           ; BSR set to: 14
  7866  000038  ADCD               	btfss	205,6,b	;volatile
  7867  00003A  EF21  F000         	goto	i2u335_41
  7868  00003E  EF23  F000         	goto	i2u335_40
  7869  000042                     i2u335_41:
  7870  000042  EF32  F000         	goto	i2l150
  7871  000046                     i2u335_40:
  7872  000046                     
  7873                           ; BSR set to: 14
  7874                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  7875  000046  D802               	call	i2u336_48
  7876  000048  EF30  F000         	goto	i2u336_49
  7877  00004C                     i2u336_48:
  7878  00004C  0005               	push	
  7879  00004E  6EFA               	movwf	pclath,c
  7880  000050  0100               	movlb	0	; () banked
  7881  000052  51DE               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  7882  000054  6EFD               	movwf	tosl,c
  7883  000056  51DF               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  7884  000058  6EFE               	movwf	tosh,c
  7885  00005A  6AFF               	clrf	tosu,c
  7886  00005C  50FA               	movf	pclath,w,c
  7887  00005E  0012               	return		;indir
  7888  000060                     i2u336_49:
  7889                           
  7890                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  7891  000060  EF89  F000         	goto	i2l159
  7892  000064                     i2l150:
  7893                           
  7894                           ; BSR set to: 14
  7895  000064  AFC5               	btfss	197,7,b	;volatile
  7896  000066  EF37  F000         	goto	i2u337_41
  7897  00006A  EF39  F000         	goto	i2u337_40
  7898  00006E                     i2u337_41:
  7899  00006E  EF4F  F000         	goto	i2l152
  7900  000072                     i2u337_40:
  7901  000072                     
  7902                           ; BSR set to: 14
  7903  000072  AFCD               	btfss	205,7,b	;volatile
  7904  000074  EF3E  F000         	goto	i2u338_41
  7905  000078  EF40  F000         	goto	i2u338_40
  7906  00007C                     i2u338_41:
  7907  00007C  EF4F  F000         	goto	i2l152
  7908  000080                     i2u338_40:
  7909  000080                     
  7910                           ; BSR set to: 14
  7911                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  7912  000080  D802               	call	i2u339_48
  7913  000082  EF4D  F000         	goto	i2u339_49
  7914  000086                     i2u339_48:
  7915  000086  0005               	push	
  7916  000088  6EFA               	movwf	pclath,c
  7917  00008A  0100               	movlb	0	; () banked
  7918  00008C  51DC               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  7919  00008E  6EFD               	movwf	tosl,c
  7920  000090  51DD               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  7921  000092  6EFE               	movwf	tosh,c
  7922  000094  6AFF               	clrf	tosu,c
  7923  000096  50FA               	movf	pclath,w,c
  7924  000098  0012               	return		;indir
  7925  00009A                     i2u339_49:
  7926                           
  7927                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7928  00009A  EF89  F000         	goto	i2l159
  7929  00009E                     i2l152:
  7930                           
  7931                           ; BSR set to: 14
  7932  00009E  A9C5               	btfss	197,4,b	;volatile
  7933  0000A0  EF54  F000         	goto	i2u340_41
  7934  0000A4  EF56  F000         	goto	i2u340_40
  7935  0000A8                     i2u340_41:
  7936  0000A8  EF6C  F000         	goto	i2l154
  7937  0000AC                     i2u340_40:
  7938  0000AC                     
  7939                           ; BSR set to: 14
  7940  0000AC  A9CD               	btfss	205,4,b	;volatile
  7941  0000AE  EF5B  F000         	goto	i2u341_41
  7942  0000B2  EF5D  F000         	goto	i2u341_40
  7943  0000B6                     i2u341_41:
  7944  0000B6  EF6C  F000         	goto	i2l154
  7945  0000BA                     i2u341_40:
  7946  0000BA                     
  7947                           ; BSR set to: 14
  7948                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  7949  0000BA  D802               	call	i2u342_48
  7950  0000BC  EF6A  F000         	goto	i2u342_49
  7951  0000C0                     i2u342_48:
  7952  0000C0  0005               	push	
  7953  0000C2  6EFA               	movwf	pclath,c
  7954  0000C4  0100               	movlb	0	; () banked
  7955  0000C6  51DA               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  7956  0000C8  6EFD               	movwf	tosl,c
  7957  0000CA  51DB               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  7958  0000CC  6EFE               	movwf	tosh,c
  7959  0000CE  6AFF               	clrf	tosu,c
  7960  0000D0  50FA               	movf	pclath,w,c
  7961  0000D2  0012               	return		;indir
  7962  0000D4                     i2u342_49:
  7963                           
  7964                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  7965  0000D4  EF89  F000         	goto	i2l159
  7966  0000D8                     i2l154:
  7967                           
  7968                           ; BSR set to: 14
  7969  0000D8  ABC5               	btfss	197,5,b	;volatile
  7970  0000DA  EF71  F000         	goto	i2u343_41
  7971  0000DE  EF73  F000         	goto	i2u343_40
  7972  0000E2                     i2u343_41:
  7973  0000E2  EF89  F000         	goto	i2l153
  7974  0000E6                     i2u343_40:
  7975  0000E6                     
  7976                           ; BSR set to: 14
  7977  0000E6  ABCD               	btfss	205,5,b	;volatile
  7978  0000E8  EF78  F000         	goto	i2u344_41
  7979  0000EC  EF7A  F000         	goto	i2u344_40
  7980  0000F0                     i2u344_41:
  7981  0000F0  EF89  F000         	goto	i2l153
  7982  0000F4                     i2u344_40:
  7983  0000F4                     
  7984                           ; BSR set to: 14
  7985                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  7986  0000F4  D802               	call	i2u345_48
  7987  0000F6  EF87  F000         	goto	i2u345_49
  7988  0000FA                     i2u345_48:
  7989  0000FA  0005               	push	
  7990  0000FC  6EFA               	movwf	pclath,c
  7991  0000FE  0100               	movlb	0	; () banked
  7992  000100  51D8               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  7993  000102  6EFD               	movwf	tosl,c
  7994  000104  51D9               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  7995  000106  6EFE               	movwf	tosh,c
  7996  000108  6AFF               	clrf	tosu,c
  7997  00010A  50FA               	movf	pclath,w,c
  7998  00010C  0012               	return		;indir
  7999  00010E                     i2u345_49:
  8000                           
  8001                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  8002  00010E  EF89  F000         	goto	i2l159
  8003  000112                     i2l153:
  8004  000112                     i2l159:
  8005  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8006  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8007  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8008  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8009  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8010  000124  0011               	retfie		f
  8011  000126                     __end_of_INTERRUPT_InterruptManager:
  8012                           	opt callstack 0
  8013                           
  8014 ;; *************** function _EUSART2_Transmit_ISR *****************
  8015 ;; Defined at:
  8016 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;		None
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;		None
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;Total ram usage:        0 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_EUSART2_Initialize
  8040 ;;		_INTERRUPT_InterruptManager
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text52
  8045  001FD4                     __ptext52:
  8046                           	opt callstack 0
  8047  001FD4                     _EUSART2_Transmit_ISR:
  8048                           	opt callstack 19
  8049  001FD4                     
  8050                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  8051  001FD4  0E08               	movlw	8
  8052  001FD6  0100               	movlb	0	; () banked
  8053  001FD8  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8054  001FDA  EFF1  F00F         	goto	i2u305_41
  8055  001FDE  EFF3  F00F         	goto	i2u305_40
  8056  001FE2                     i2u305_41:
  8057  001FE2  EF0B  F010         	goto	i2l333
  8058  001FE6                     i2u305_40:
  8059  001FE6                     
  8060                           ; BSR set to: 0
  8061                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  8062  001FE6  0E80               	movlw	low _eusart2TxBuffer
  8063  001FE8  259E               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  8064  001FEA  6ED9               	movwf	fsr2l,c
  8065  001FEC  6ADA               	clrf	fsr2h,c
  8066  001FEE  0E00               	movlw	high _eusart2TxBuffer
  8067  001FF0  22DA               	addwfc	fsr2h,f,c
  8068  001FF2  50DF               	movf	indf2,w,c
  8069  001FF4  010E               	movlb	14	; () banked
  8070  001FF6  6F9A               	movwf	154,b	;volatile
  8071  001FF8                     
  8072                           ; BSR set to: 14
  8073  001FF8  0100               	movlb	0	; () banked
  8074  001FFA  2B9E               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  8075  001FFC                     
  8076                           ; BSR set to: 0
  8077                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  8078  001FFC  0E07               	movlw	7
  8079  001FFE  659E               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  8080  002000  EF04  F010         	goto	i2u306_41
  8081  002004  EF06  F010         	goto	i2u306_40
  8082  002008                     i2u306_41:
  8083  002008  EF08  F010         	goto	i2l3624
  8084  00200C                     i2u306_40:
  8085  00200C                     
  8086                           ; BSR set to: 0
  8087                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  8088  00200C  0E00               	movlw	0
  8089  00200E  6F9E               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8090  002010                     i2l3624:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  8094  002010  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  8095                           
  8096                           ;mcc_generated_files/eusart2.c: 218:     }
  8097  002012  EF0D  F010         	goto	i2l336
  8098  002016                     i2l333:
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  8102  002016  010E               	movlb	14	; () banked
  8103  002018  9DC5               	bcf	197,6,b	;volatile
  8104  00201A                     i2l336:
  8105  00201A  0012               	return		;funcret
  8106  00201C                     __end_of_EUSART2_Transmit_ISR:
  8107                           	opt callstack 0
  8108                           
  8109 ;; *************** function _EUSART2_Receive_ISR *****************
  8110 ;; Defined at:
  8111 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;		None
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;Total ram usage:        0 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    2
  8132 ;; This function calls:
  8133 ;;		Absolute function
  8134 ;;		_EUSART2_DefaultErrorHandler
  8135 ;;		_EUSART2_DefaultFramingErrorHandler
  8136 ;;		_EUSART2_DefaultOverrunErrorHandler
  8137 ;;		_EUSART2_RxDataHandler
  8138 ;; This function is called by:
  8139 ;;		_EUSART2_Initialize
  8140 ;;		_INTERRUPT_InterruptManager
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text53
  8145  0017EC                     __ptext53:
  8146                           	opt callstack 0
  8147  0017EC                     _EUSART2_Receive_ISR:
  8148                           	opt callstack 17
  8149  0017EC                     
  8150                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  8151  0017EC  0E70               	movlw	low _eusart2RxStatusBuffer
  8152  0017EE  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8153  0017F0  6ED9               	movwf	fsr2l,c
  8154  0017F2  6ADA               	clrf	fsr2h,c
  8155  0017F4  0E00               	movlw	high _eusart2RxStatusBuffer
  8156  0017F6  22DA               	addwfc	fsr2h,f,c
  8157  0017F8  0E00               	movlw	0
  8158  0017FA  6EDF               	movwf	indf2,c
  8159  0017FC                     
  8160                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  8161  0017FC  010E               	movlb	14	; () banked
  8162  0017FE  A59D               	btfss	157,2,b	;volatile
  8163  001800  EF04  F00C         	goto	i2u307_41
  8164  001804  EF06  F00C         	goto	i2u307_40
  8165  001808                     i2u307_41:
  8166  001808  EF1A  F00C         	goto	i2l3634
  8167  00180C                     i2u307_40:
  8168  00180C                     
  8169                           ; BSR set to: 14
  8170                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  8171  00180C  0E70               	movlw	low _eusart2RxStatusBuffer
  8172  00180E  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8173  001810  6ED9               	movwf	fsr2l,c
  8174  001812  6ADA               	clrf	fsr2h,c
  8175  001814  0E00               	movlw	high _eusart2RxStatusBuffer
  8176  001816  22DA               	addwfc	fsr2h,f,c
  8177  001818  0100               	movlb	0	; () banked
  8178  00181A  82DF               	bsf	indf2,1,c
  8179  00181C                     
  8180                           ; BSR set to: 0
  8181                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  8182  00181C  D802               	call	i2u308_48
  8183  00181E  EF1A  F00C         	goto	i2u308_49
  8184  001822                     i2u308_48:
  8185  001822  0005               	push	
  8186  001824  6EFA               	movwf	pclath,c
  8187  001826  51D6               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  8188  001828  6EFD               	movwf	tosl,c
  8189  00182A  51D7               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  8190  00182C  6EFE               	movwf	tosh,c
  8191  00182E  6AFF               	clrf	tosu,c
  8192  001830  50FA               	movf	pclath,w,c
  8193  001832  0012               	return		;indir
  8194  001834                     i2u308_49:
  8195  001834                     i2l3634:
  8196                           
  8197                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  8198  001834  010E               	movlb	14	; () banked
  8199  001836  A39D               	btfss	157,1,b	;volatile
  8200  001838  EF20  F00C         	goto	i2u309_41
  8201  00183C  EF22  F00C         	goto	i2u309_40
  8202  001840                     i2u309_41:
  8203  001840  EF36  F00C         	goto	i2l3640
  8204  001844                     i2u309_40:
  8205  001844                     
  8206                           ; BSR set to: 14
  8207                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  8208  001844  0E70               	movlw	low _eusart2RxStatusBuffer
  8209  001846  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8210  001848  6ED9               	movwf	fsr2l,c
  8211  00184A  6ADA               	clrf	fsr2h,c
  8212  00184C  0E00               	movlw	high _eusart2RxStatusBuffer
  8213  00184E  22DA               	addwfc	fsr2h,f,c
  8214  001850  0100               	movlb	0	; () banked
  8215  001852  84DF               	bsf	indf2,2,c
  8216  001854                     
  8217                           ; BSR set to: 0
  8218                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  8219  001854  D802               	call	i2u310_48
  8220  001856  EF36  F00C         	goto	i2u310_49
  8221  00185A                     i2u310_48:
  8222  00185A  0005               	push	
  8223  00185C  6EFA               	movwf	pclath,c
  8224  00185E  51D4               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  8225  001860  6EFD               	movwf	tosl,c
  8226  001862  51D5               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  8227  001864  6EFE               	movwf	tosh,c
  8228  001866  6AFF               	clrf	tosu,c
  8229  001868  50FA               	movf	pclath,w,c
  8230  00186A  0012               	return		;indir
  8231  00186C                     i2u310_49:
  8232  00186C                     i2l3640:
  8233                           
  8234                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  8235  00186C  0E70               	movlw	low _eusart2RxStatusBuffer
  8236  00186E  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8237  001870  6ED9               	movwf	fsr2l,c
  8238  001872  6ADA               	clrf	fsr2h,c
  8239  001874  0E00               	movlw	high _eusart2RxStatusBuffer
  8240  001876  22DA               	addwfc	fsr2h,f,c
  8241  001878  50DF               	movf	indf2,w,c
  8242  00187A  B4D8               	btfsc	status,2,c
  8243  00187C  EF42  F00C         	goto	i2u311_41
  8244  001880  EF44  F00C         	goto	i2u311_40
  8245  001884                     i2u311_41:
  8246  001884  EF53  F00C         	goto	i2l3644
  8247  001888                     i2u311_40:
  8248  001888                     
  8249                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  8250  001888  D802               	call	i2u312_48
  8251  00188A  EF51  F00C         	goto	i2u312_49
  8252  00188E                     i2u312_48:
  8253  00188E  0005               	push	
  8254  001890  6EFA               	movwf	pclath,c
  8255  001892  0100               	movlb	0	; () banked
  8256  001894  51D2               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  8257  001896  6EFD               	movwf	tosl,c
  8258  001898  51D3               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  8259  00189A  6EFE               	movwf	tosh,c
  8260  00189C  6AFF               	clrf	tosu,c
  8261  00189E  50FA               	movf	pclath,w,c
  8262  0018A0  0012               	return		;indir
  8263  0018A2                     i2u312_49:
  8264                           
  8265                           ;mcc_generated_files/eusart2.c: 242:     } else {
  8266  0018A2  EF55  F00C         	goto	i2l343
  8267  0018A6                     i2l3644:
  8268                           
  8269                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  8270  0018A6  ECE4  F010         	call	_EUSART2_RxDataHandler	;wreg free
  8271  0018AA                     i2l343:
  8272  0018AA  0012               	return		;funcret
  8273  0018AC                     __end_of_EUSART2_Receive_ISR:
  8274                           	opt callstack 0
  8275                           
  8276 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  8277 ;; Defined at:
  8278 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		None
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;Total ram usage:        0 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		_EUSART2_Initialize
  8302 ;;		_EUSART2_Receive_ISR
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text54
  8307  002356                     __ptext54:
  8308                           	opt callstack 0
  8309  002356                     _EUSART2_DefaultOverrunErrorHandler:
  8310                           	opt callstack 18
  8311  002356                     
  8312                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  8313  002356  010E               	movlb	14	; () banked
  8314  002358  999D               	bcf	157,4,b	;volatile
  8315                           
  8316                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  8317  00235A  899D               	bsf	157,4,b	;volatile
  8318  00235C                     
  8319                           ; BSR set to: 14
  8320  00235C  0012               	return		;funcret
  8321  00235E                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  8322                           	opt callstack 0
  8323                           
  8324 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  8325 ;; Defined at:
  8326 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		None
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;Total ram usage:        0 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_EUSART2_Initialize
  8350 ;;		_EUSART2_Receive_ISR
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text55
  8355  00237A                     __ptext55:
  8356                           	opt callstack 0
  8357  00237A                     _EUSART2_DefaultFramingErrorHandler:
  8358                           	opt callstack 18
  8359  00237A  0012               	return		;funcret
  8360  00237C                     __end_of_EUSART2_DefaultFramingErrorHandler:
  8361                           	opt callstack 0
  8362                           
  8363 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  8364 ;; Defined at:
  8365 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    1
  8386 ;; This function calls:
  8387 ;;		_EUSART2_RxDataHandler
  8388 ;; This function is called by:
  8389 ;;		_EUSART2_Initialize
  8390 ;;		_EUSART2_Receive_ISR
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text56
  8395  002364                     __ptext56:
  8396                           	opt callstack 0
  8397  002364                     _EUSART2_DefaultErrorHandler:
  8398                           	opt callstack 17
  8399  002364                     
  8400                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  8401  002364  ECE4  F010         	call	_EUSART2_RxDataHandler	;wreg free
  8402  002368  0012               	return		;funcret
  8403  00236A                     __end_of_EUSART2_DefaultErrorHandler:
  8404                           	opt callstack 0
  8405                           
  8406 ;; *************** function _EUSART2_RxDataHandler *****************
  8407 ;; Defined at:
  8408 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_EUSART2_Receive_ISR
  8432 ;;		_EUSART2_DefaultErrorHandler
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text57
  8437  0021C8                     __ptext57:
  8438                           	opt callstack 0
  8439  0021C8                     _EUSART2_RxDataHandler:
  8440                           	opt callstack 18
  8441  0021C8                     
  8442                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  8443  0021C8  0E78               	movlw	low _eusart2RxBuffer
  8444  0021CA  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8445  0021CC  6ED9               	movwf	fsr2l,c
  8446  0021CE  6ADA               	clrf	fsr2h,c
  8447  0021D0  0E00               	movlw	high _eusart2RxBuffer
  8448  0021D2  22DA               	addwfc	fsr2h,f,c
  8449  0021D4  CE99 FFDF          	movff	3737,indf2	;volatile
  8450  0021D8  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
  8451  0021DA                     
  8452                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  8453  0021DA  0E07               	movlw	7
  8454  0021DC  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
  8455  0021DE  EFF3  F010         	goto	i2u300_41
  8456  0021E2  EFF5  F010         	goto	i2u300_40
  8457  0021E6                     i2u300_41:
  8458  0021E6  EFF7  F010         	goto	i2l3460
  8459  0021EA                     i2u300_40:
  8460  0021EA                     
  8461                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  8462  0021EA  0E00               	movlw	0
  8463  0021EC  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  8464  0021EE                     i2l3460:
  8465                           
  8466                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  8467  0021EE  0100               	movlb	0	; () banked
  8468  0021F0  2B9C               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  8469  0021F2                     
  8470                           ; BSR set to: 0
  8471  0021F2  0012               	return		;funcret
  8472  0021F4                     __end_of_EUSART2_RxDataHandler:
  8473                           	opt callstack 0
  8474                           
  8475 ;; *************** function _EUSART1_Transmit_ISR *****************
  8476 ;; Defined at:
  8477 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;Total ram usage:        0 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_EUSART1_Initialize
  8501 ;;		_INTERRUPT_InterruptManager
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text58
  8506  002060                     __ptext58:
  8507                           	opt callstack 0
  8508  002060                     _EUSART1_Transmit_ISR:
  8509                           	opt callstack 19
  8510  002060                     
  8511                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  8512  002060  0E10               	movlw	16
  8513  002062  0100               	movlb	0	; () banked
  8514  002064  61E0               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  8515  002066  EF37  F010         	goto	i2u320_41
  8516  00206A  EF39  F010         	goto	i2u320_40
  8517  00206E                     i2u320_41:
  8518  00206E  EF4F  F010         	goto	i2l477
  8519  002072                     i2u320_40:
  8520  002072                     
  8521                           ; BSR set to: 0
  8522                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  8523  002072  0E60               	movlw	low _eusart1TxBuffer
  8524  002074  2599               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  8525  002076  6ED9               	movwf	fsr2l,c
  8526  002078  6ADA               	clrf	fsr2h,c
  8527  00207A  0E00               	movlw	high _eusart1TxBuffer
  8528  00207C  22DA               	addwfc	fsr2h,f,c
  8529  00207E  50DF               	movf	indf2,w,c
  8530  002080  6E9A               	movwf	154,c	;volatile
  8531  002082                     
  8532                           ; BSR set to: 0
  8533  002082  2B99               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  8534  002084                     
  8535                           ; BSR set to: 0
  8536                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  8537  002084  0E0F               	movlw	15
  8538  002086  6599               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  8539  002088  EF48  F010         	goto	i2u321_41
  8540  00208C  EF4A  F010         	goto	i2u321_40
  8541  002090                     i2u321_41:
  8542  002090  EF4C  F010         	goto	i2l3700
  8543  002094                     i2u321_40:
  8544  002094                     
  8545                           ; BSR set to: 0
  8546                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  8547  002094  0E00               	movlw	0
  8548  002096  6F99               	movwf	_eusart1TxTail& (0+255),b	;volatile
  8549  002098                     i2l3700:
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  8553  002098  2BE0               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  8554                           
  8555                           ;mcc_generated_files/eusart1.c: 209:     }
  8556  00209A  EF51  F010         	goto	i2l480
  8557  00209E                     i2l477:
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  8561  00209E  010E               	movlb	14	; () banked
  8562  0020A0  99C5               	bcf	197,4,b	;volatile
  8563  0020A2                     i2l480:
  8564  0020A2  0012               	return		;funcret
  8565  0020A4                     __end_of_EUSART1_Transmit_ISR:
  8566                           	opt callstack 0
  8567                           
  8568 ;; *************** function _EUSART1_Receive_ISR *****************
  8569 ;; Defined at:
  8570 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;Total ram usage:        0 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:    2
  8591 ;; This function calls:
  8592 ;;		Absolute function
  8593 ;;		_EUSART1_DefaultErrorHandler
  8594 ;;		_EUSART1_DefaultFramingErrorHandler
  8595 ;;		_EUSART1_DefaultOverrunErrorHandler
  8596 ;;		_EUSART1_RxDataHandler
  8597 ;; This function is called by:
  8598 ;;		_EUSART1_Initialize
  8599 ;;		_INTERRUPT_InterruptManager
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text59
  8604  0018AC                     __ptext59:
  8605                           	opt callstack 0
  8606  0018AC                     _EUSART1_Receive_ISR:
  8607                           	opt callstack 17
  8608  0018AC                     
  8609                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  8610  0018AC  0E64               	movlw	low _eusart1RxStatusBuffer
  8611  0018AE  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8612  0018B0  6ED9               	movwf	fsr2l,c
  8613  0018B2  6ADA               	clrf	fsr2h,c
  8614  0018B4  0E01               	movlw	high _eusart1RxStatusBuffer
  8615  0018B6  22DA               	addwfc	fsr2h,f,c
  8616  0018B8  0E00               	movlw	0
  8617  0018BA  6EDF               	movwf	indf2,c
  8618  0018BC                     
  8619                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  8620  0018BC  A49D               	btfss	157,2,c	;volatile
  8621  0018BE  EF63  F00C         	goto	i2u322_41
  8622  0018C2  EF65  F00C         	goto	i2u322_40
  8623  0018C6                     i2u322_41:
  8624  0018C6  EF7A  F00C         	goto	i2l3710
  8625  0018CA                     i2u322_40:
  8626  0018CA                     
  8627                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  8628  0018CA  0E64               	movlw	low _eusart1RxStatusBuffer
  8629  0018CC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8630  0018CE  6ED9               	movwf	fsr2l,c
  8631  0018D0  6ADA               	clrf	fsr2h,c
  8632  0018D2  0E01               	movlw	high _eusart1RxStatusBuffer
  8633  0018D4  22DA               	addwfc	fsr2h,f,c
  8634  0018D6  0101               	movlb	1	; () banked
  8635  0018D8  82DF               	bsf	indf2,1,c
  8636  0018DA                     
  8637                           ; BSR set to: 1
  8638                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  8639  0018DA  D802               	call	i2u323_48
  8640  0018DC  EF7A  F00C         	goto	i2u323_49
  8641  0018E0                     i2u323_48:
  8642  0018E0  0005               	push	
  8643  0018E2  6EFA               	movwf	pclath,c
  8644  0018E4  0100               	movlb	0	; () banked
  8645  0018E6  51D0               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  8646  0018E8  6EFD               	movwf	tosl,c
  8647  0018EA  51D1               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  8648  0018EC  6EFE               	movwf	tosh,c
  8649  0018EE  6AFF               	clrf	tosu,c
  8650  0018F0  50FA               	movf	pclath,w,c
  8651  0018F2  0012               	return		;indir
  8652  0018F4                     i2u323_49:
  8653  0018F4                     i2l3710:
  8654                           
  8655                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  8656  0018F4  A29D               	btfss	157,1,c	;volatile
  8657  0018F6  EF7F  F00C         	goto	i2u324_41
  8658  0018FA  EF81  F00C         	goto	i2u324_40
  8659  0018FE                     i2u324_41:
  8660  0018FE  EF96  F00C         	goto	i2l3716
  8661  001902                     i2u324_40:
  8662  001902                     
  8663                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  8664  001902  0E64               	movlw	low _eusart1RxStatusBuffer
  8665  001904  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8666  001906  6ED9               	movwf	fsr2l,c
  8667  001908  6ADA               	clrf	fsr2h,c
  8668  00190A  0E01               	movlw	high _eusart1RxStatusBuffer
  8669  00190C  22DA               	addwfc	fsr2h,f,c
  8670  00190E  0101               	movlb	1	; () banked
  8671  001910  84DF               	bsf	indf2,2,c
  8672  001912                     
  8673                           ; BSR set to: 1
  8674                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  8675  001912  D802               	call	i2u325_48
  8676  001914  EF96  F00C         	goto	i2u325_49
  8677  001918                     i2u325_48:
  8678  001918  0005               	push	
  8679  00191A  6EFA               	movwf	pclath,c
  8680  00191C  0100               	movlb	0	; () banked
  8681  00191E  51CE               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  8682  001920  6EFD               	movwf	tosl,c
  8683  001922  51CF               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  8684  001924  6EFE               	movwf	tosh,c
  8685  001926  6AFF               	clrf	tosu,c
  8686  001928  50FA               	movf	pclath,w,c
  8687  00192A  0012               	return		;indir
  8688  00192C                     i2u325_49:
  8689  00192C                     i2l3716:
  8690                           
  8691                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  8692  00192C  0E64               	movlw	low _eusart1RxStatusBuffer
  8693  00192E  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8694  001930  6ED9               	movwf	fsr2l,c
  8695  001932  6ADA               	clrf	fsr2h,c
  8696  001934  0E01               	movlw	high _eusart1RxStatusBuffer
  8697  001936  22DA               	addwfc	fsr2h,f,c
  8698  001938  50DF               	movf	indf2,w,c
  8699  00193A  B4D8               	btfsc	status,2,c
  8700  00193C  EFA2  F00C         	goto	i2u326_41
  8701  001940  EFA4  F00C         	goto	i2u326_40
  8702  001944                     i2u326_41:
  8703  001944  EFB3  F00C         	goto	i2l3720
  8704  001948                     i2u326_40:
  8705  001948                     
  8706                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  8707  001948  D802               	call	i2u327_48
  8708  00194A  EFB1  F00C         	goto	i2u327_49
  8709  00194E                     i2u327_48:
  8710  00194E  0005               	push	
  8711  001950  6EFA               	movwf	pclath,c
  8712  001952  0100               	movlb	0	; () banked
  8713  001954  51CC               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  8714  001956  6EFD               	movwf	tosl,c
  8715  001958  51CD               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  8716  00195A  6EFE               	movwf	tosh,c
  8717  00195C  6AFF               	clrf	tosu,c
  8718  00195E  50FA               	movf	pclath,w,c
  8719  001960  0012               	return		;indir
  8720  001962                     i2u327_49:
  8721                           
  8722                           ;mcc_generated_files/eusart1.c: 233:     } else {
  8723  001962  EFB5  F00C         	goto	i2l487
  8724  001966                     i2l3720:
  8725                           
  8726                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  8727  001966  ECFA  F010         	call	_EUSART1_RxDataHandler	;wreg free
  8728  00196A                     i2l487:
  8729  00196A  0012               	return		;funcret
  8730  00196C                     __end_of_EUSART1_Receive_ISR:
  8731                           	opt callstack 0
  8732                           
  8733 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  8734 ;; Defined at:
  8735 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		None
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8753 ;;Total ram usage:        0 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_EUSART1_Initialize
  8759 ;;		_EUSART1_Receive_ISR
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text60
  8764  00236A                     __ptext60:
  8765                           	opt callstack 0
  8766  00236A                     _EUSART1_DefaultOverrunErrorHandler:
  8767                           	opt callstack 18
  8768  00236A                     
  8769                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  8770  00236A  989D               	bcf	157,4,c	;volatile
  8771                           
  8772                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  8773  00236C  889D               	bsf	157,4,c	;volatile
  8774  00236E  0012               	return		;funcret
  8775  002370                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  8776                           	opt callstack 0
  8777                           
  8778 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  8779 ;; Defined at:
  8780 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		None
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_EUSART1_Initialize
  8804 ;;		_EUSART1_Receive_ISR
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text61
  8809  00237C                     __ptext61:
  8810                           	opt callstack 0
  8811  00237C                     _EUSART1_DefaultFramingErrorHandler:
  8812                           	opt callstack 18
  8813  00237C  0012               	return		;funcret
  8814  00237E                     __end_of_EUSART1_DefaultFramingErrorHandler:
  8815                           	opt callstack 0
  8816                           
  8817 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  8818 ;; Defined at:
  8819 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    1
  8840 ;; This function calls:
  8841 ;;		_EUSART1_RxDataHandler
  8842 ;; This function is called by:
  8843 ;;		_EUSART1_Initialize
  8844 ;;		_EUSART1_Receive_ISR
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text62
  8849  002370                     __ptext62:
  8850                           	opt callstack 0
  8851  002370                     _EUSART1_DefaultErrorHandler:
  8852                           	opt callstack 17
  8853  002370                     
  8854                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  8855  002370  ECFA  F010         	call	_EUSART1_RxDataHandler	;wreg free
  8856  002374  0012               	return		;funcret
  8857  002376                     __end_of_EUSART1_DefaultErrorHandler:
  8858                           	opt callstack 0
  8859                           
  8860 ;; *************** function _EUSART1_RxDataHandler *****************
  8861 ;; Defined at:
  8862 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;		None
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      void 
  8869 ;; Registers used:
  8870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8880 ;;Total ram usage:        0 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_EUSART1_Receive_ISR
  8886 ;;		_EUSART1_DefaultErrorHandler
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text63
  8891  0021F4                     __ptext63:
  8892                           	opt callstack 0
  8893  0021F4                     _EUSART1_RxDataHandler:
  8894                           	opt callstack 18
  8895  0021F4                     
  8896                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  8897  0021F4  0E64               	movlw	low _eusart1RxBuffer
  8898  0021F6  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8899  0021F8  6ED9               	movwf	fsr2l,c
  8900  0021FA  6ADA               	clrf	fsr2h,c
  8901  0021FC  0E02               	movlw	high _eusart1RxBuffer
  8902  0021FE  22DA               	addwfc	fsr2h,f,c
  8903  002200  CF99 FFDF          	movff	3993,indf2	;volatile
  8904  002204  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
  8905  002206                     
  8906                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  8907  002206  0E63               	movlw	99
  8908  002208  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
  8909  00220A  EF09  F011         	goto	i2u301_41
  8910  00220E  EF0B  F011         	goto	i2u301_40
  8911  002212                     i2u301_41:
  8912  002212  EF0D  F011         	goto	i2l3480
  8913  002216                     i2u301_40:
  8914  002216                     
  8915                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  8916  002216  0E00               	movlw	0
  8917  002218  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  8918  00221A                     i2l3480:
  8919                           
  8920                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  8921  00221A  0100               	movlb	0	; () banked
  8922  00221C  2B97               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  8923  00221E                     
  8924                           ; BSR set to: 0
  8925  00221E  0012               	return		;funcret
  8926  002220                     __end_of_EUSART1_RxDataHandler:
  8927                           	opt callstack 0
  8928                           
  8929                           	psect	text64
  8930  000000                     __ptext64:
  8931                           	opt callstack 0
  8932  000000                     
  8933                           	psect	rparam
  8934  0000                     
  8935                           	psect	temp
  8936  00005B                     btemp:
  8937                           	opt callstack 0
  8938  00005B                     	ds	1
  8939  0000                     int$flags	set	btemp
  8940  0000                     wtemp8	set	btemp+1
  8941  0000                     ttemp5	set	btemp+1
  8942  0000                     ttemp6	set	btemp+4
  8943  0000                     ttemp7	set	btemp+8
  8944                           tosu	equ	0xFFF
  8945                           tosh	equ	0xFFE
  8946                           tosl	equ	0xFFD
  8947                           stkptr	equ	0xFFC
  8948                           pclatu	equ	0xFFB
  8949                           pclath	equ	0xFFA
  8950                           pcl	equ	0xFF9
  8951                           tblptru	equ	0xFF8
  8952                           tblptrh	equ	0xFF7
  8953                           tblptrl	equ	0xFF6
  8954                           tablat	equ	0xFF5
  8955                           prodh	equ	0xFF4
  8956                           prodl	equ	0xFF3
  8957                           indf0	equ	0xFEF
  8958                           postinc0	equ	0xFEE
  8959                           postdec0	equ	0xFED
  8960                           preinc0	equ	0xFEC
  8961                           plusw0	equ	0xFEB
  8962                           fsr0h	equ	0xFEA
  8963                           fsr0l	equ	0xFE9
  8964                           wreg	equ	0xFE8
  8965                           indf1	equ	0xFE7
  8966                           postinc1	equ	0xFE6
  8967                           postdec1	equ	0xFE5
  8968                           preinc1	equ	0xFE4
  8969                           plusw1	equ	0xFE3
  8970                           fsr1h	equ	0xFE2
  8971                           fsr1l	equ	0xFE1
  8972                           bsr	equ	0xFE0
  8973                           indf2	equ	0xFDF
  8974                           postinc2	equ	0xFDE
  8975                           postdec2	equ	0xFDD
  8976                           preinc2	equ	0xFDC
  8977                           plusw2	equ	0xFDB
  8978                           fsr2h	equ	0xFDA
  8979                           fsr2l	equ	0xFD9
  8980                           status	equ	0xFD8


Data Sizes:
    Strings     383
    Constant    0
    Data        20
    BSS         500
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     44     150
    BANK1           256      0     232
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1765_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintModbus
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintModbus
    _PrintModbus->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   50394
                                             85 COMRAM     1     1      0
                                             43 BANK0      1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                   _InitialiseString
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   24679
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   24577
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   24577
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   23662
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   23099
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5707
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5203
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5802
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4153
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Write                                       1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1428
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     587
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AddRxBuffToModBus                                    3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddRxBuffToModBus
   _ClearRxBuff
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      E8       8       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      96       5       93.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A0       6        0.0%
DATA                 0      0     2A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 02 21:43:15 2021

                      _eusart1TxBufferRemaining 00E0                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 1B2E  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 22A2                                             l124 22BA  
                                           l127 2288                                             l320 1DF0  
                                           l144 2378                                             l321 1E08  
                                           l330 2354                                             l324 1E38  
                                           l503 2340                                             l512 2322  
                                           l506 2336                                             l362 2304  
                                           l515 232C                                             l371 22FA  
                                           l452 22D2                                             l700 0EF4  
                                           l509 234A                                             l365 2318  
                                           l710 0FFC                                             l446 1C28  
                                           l359 230E                                             l800 1D7C  
                                           l552 1CA4                                             l368 22F0  
                                           l296 1BAC                                             l465 1E90  
                                           l721 0CAA                                             l714 1004  
                                           l570 2360                                             l803 226C  
                                           l660 176E                                             l572 2362  
                                           l709 0FB4                                             l734 09CC  
                                           l583 1FD2                                             l663 17B0  
                                           l671 0754                                             l719 0CA2  
                                           l743 0A6A                                             l736 09D4  
                                           l568 235E                                             l593 1A0A  
                                           l665 17EA                                             l673 075C  
                                           l729 0E6A                                             l930 148A  
                                           l691 0992                                             l917 1326  
                                           l757 0C06                                             l773 0220  
                                           l759 0C68                                             l599 1D18  
                                           l698 0EEC                                             l788 06B2  
                                           l799 1D74                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 2310         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 2306                                             _abs 20A4  
                                           _pad 172A                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l3000 1422                                            l1241 155A  
                                          l3002 1434                                            l1251 1708  
                                          l3004 143A                                            l3100 08CC  
                                          l3020 14D2                                            l3012 148C  
                                          l3006 144A                                            l3110 092E  
                                          l3102 08E6                                            l3030 1542  
                                          l3022 14E0                                            l3014 1498  
                                          l1512 119E                                            l3008 146A  
                                          l3112 0934                                            l3120 096A  
                                          l3104 0900                                            l1248 157A  
                                          l3032 1554                                            l3024 14F2  
                                          l3016 14B6                                            l3040 1694  
                                          l4000 1606                                            l1521 21C6  
                                          l3050 1EE8                                            l3114 0946  
                                          l3106 090E                                            l3130 0E98  
                                          l3026 1520                                            l3018 14BE  
                                          l1258 1728                                            l3042 16A2  
                                          l3034 165A                                            l3210 09EA  
                                          l3202 0994                                            l4002 160C  
                                          l1515 211E                                            l3052 1EEC  
                                          l3300 1156                                            l3116 0952  
                                          l3108 0920                                            l3132 0EA0  
                                          l3124 0E6C                                            l3028 1540  
                                          l3044 16D0                                            l3036 1678  
                                          l3220 0A2A                                            l3212 09F2  
                                          l3204 09A4                                            l4004 1614  
                                          l1509 1196                                            l3054 1F00  
                                          l3302 1168                                            l1550 1AA0  
                                          l3118 095A                                            l3070 072C  
                                          l3062 06B4                                            l3150 0F58  
                                          l3142 0F16                                            l3134 0EB4  
                                          l3126 0E7E                                            l3046 16F0  
                                          l3038 1680                                            l3230 0A9E  
                                          l3222 0A32                                            l3214 0A12  
                                          l3206 09A6                                            l3310 012A  
                                          l4006 1636                                            l1535 218E  
                                          l3056 1F2E                                            l3304 117A  
                                          l3080 0784                                            l3072 072E  
                                          l3064 06D4                                            l3160 0FC6  
                                          l3152 0F8E                                            l3144 0F2A  
                                          l3136 0EBC                                            l3128 0E86  
                                          l3048 1702                                            l3232 0AB0  
                                          l3240 0B10                                            l3224 0A4E  
                                          l3216 0A1A                                            l3208 09C0  
                                          l3400 0586                                            l3320 0180  
                                          l3312 0150                                            l4008 164E  
                                          l1529 1F38                                            l1481 20E2  
                                          l3058 1F32                                            l3090 0824  
                                          l3082 078A                                            l3074 0748  
                                          l3066 06FC                                            l3162 0FDA  
                                          l3154 0F92                                            l3146 0F2E  
                                          l3138 0ECA                                            l3170 0C7C  
                                          l3250 0BA6                                            l3242 0B20  
                                          l3226 0A5E                                            l3218 0A24  
                                          l3410 0632                                            l3402 0594  
                                          l3322 0182                                            l3314 015E  
                                          l1571 1F88                                            l3092 082A  
                                          l3084 0792                                            l3076 0764  
                                          l3068 071C                                            l3164 0FDE  
                                          l3156 0F96                                            l3148 0F4C  
                                          l3180 0CEA                                            l3172 0C96  
                                          l3260 0C1A                                            l3252 0BC4  
                                          l3244 0B26                                            l3236 0AEA  
                                          l3420 066E                                            l3412 0640  
                                          l3404 05D0                                            l3340 01AC  
                                          l3332 01A0                                            l3324 0194  
                                          l3316 0170                                            l3500 1B08  
                                          l1581 1DDA                                            l1565 2246  
                                          l3270 101A                                            l1478 20DA  
                                          l1558 205E                                            l3094 0830  
                                          l3086 079C                                            l3078 0776  
                                          l3190 0DE2                                            l3182 0D60  
                                          l3174 0CD2                                            l3166 0C6A  
                                          l3262 0C2A                                            l3254 0BDE  
                                          l3246 0B2C                                            l3238 0AFC  
                                          l3414 0654                                            l3350 0230  
                                          l3318 0174                                            l3510 1B16  
                                          l3502 1B0A                                            l3280 107C  
                                          l3272 101E                                            l3088 07A2  
                                          l3096 0894                                            l3192 0E00  
                                          l3184 0D66                                            l3176 0CDA  
                                          l3168 0C7A                                            l1576 1DD2  
                                          l3264 0C40                                            l3256 0BF8  
                                          l3248 0B8A                                            l3408 060C  
                                          l3360 02C8                                            l3352 0256  
                                          l4080 01E0                                            l3344 01B8  
                                          l3336 01A6                                            l3328 019A  
                                          l3424 067A                                            l3520 1BB2  
                                          l3512 2376                                            l3504 1B10  
                                          l4082 10C8                                            l3290 10A8  
                                          l3274 1022                                            l3098 08AE  
                                          l3194 0E1A                                            l3186 0D6C  
                                          l3178 0CE4                                            l3258 0C14  
                                          l3426 06A0                                            l3418 0660  
                                          l3370 0358                                            l3362 02D6  
                                          l3354 028C                                            l3346 020E  
                                          l3530 1BDA                                            l3522 1BBE  
                                          l3450 2310                                            l3442 22F2  
                                          l3506 1B12                                            l3514 226E  
                                          l1587 2156                                            l3292 10DE  
                                          l3284 1082                                            l3276 1040  
                                          l3268 1006                                            l2900 20A4  
                                          l3196 0E34                                            l3188 0DD0  
                                          l3380 0424                                            l3372 037E  
                                          l3356 029A                                            l3348 022E  
                                          l3540 1C24                                            l3532 1BDE  
                                          l3524 1BCE                                            l3444 22E8  
                                          l3516 22A4                                            l3508 1B14  
                                          l3286 1098                                            l3278 1078  
                                          l2902 20BE                                            l2830 1E1C  
                                          l2822 1DDE                                            l3198 0E42  
                                          l3390 04EA                                            l3382 045A  
                                          l3374 03C6                                            l3366 0320  
                                          l3358 02A8                                            l3470 2342  
                                          l3462 2324                                            l3534 1BE2  
                                          l3526 1BD2                                            l3518 1BAE  
                                          l3446 2306                                            l3550 1B56  
                                          l3542 1B30                                            l3296 1116  
                                          l3288 10A0                                            l2832 1E1E  
                                          l2824 1DDE                                            l2840 234E  
                                          l2904 2158                                            l2912 1D7E  
                                          l3368 0332                                            l3464 231A  
                                          l3536 1BEE                                            l3528 1BD6  
                                          l3448 22FC                                            l3560 1B72  
                                          l3552 1B5A                                            l3544 1B34  
                                          l3730 1FB2                                            l3650 1E3A  
                                          l2922 2190                                            l2834 1E2E  
                                          l2826 1E00                                            l2850 1A58  
                                          l2842 1A0C                                            l3394 0522  
                                          l3386 047A                                            l3378 03FE  
                                          l3466 2338                                            l3538 1BFA  
                                          l3562 1B7E                                            l3554 1B5E  
                                          l3546 1B40                                            l3490 1AA2  
                                          l3740 19A4                                            l3732 196C  
                                          l3724 1F8A                                            l3660 1E7E  
                                          l3652 1E3A                                            l2940 11D6  
                                          l2932 11A0                                            l2836 1E32  
                                          l2828 1E0A                                            l2852 1A8E  
                                          l2844 1A1E                                            l2860 203A  
                                          l2908 20E4                                            l2916 1DB4  
                                          l3396 0548                                            l3388 04A0  
                                          l3468 232E                                            l3564 1BA8  
                                          l3556 1B62                                            l3548 1B50  
                                          l3492 1ACA                                            l3580 228A  
                                          l3750 1A00                                            l3742 19C4  
                                          l3734 1980                                            l3726 1F9E  
                                          l3662 1E82                                            l3654 1E4C  
                                          l3646 22BC                                            l2926 2248  
                                          l2950 1232                                            l2942 11E4  
                                          l2934 11A4                                            l2838 1E34  
                                          l2846 1A30                                            l2862 203E  
                                          l2870 1F7C                                            l2918 1DC6  
                                          l3398 056E                                            l3558 1B66  
                                          l3494 1ADA                                            l3590 229E  
                                          l3582 228E                                            ?_pad 0017  
                                          l3744 19D8                                            l3736 199C  
                                          l3728 1FAE                                            l3664 1E86  
                                          l3656 1E6C                                            l2928 2264  
                                          l2960 129C                                            l2952 123A  
                                          l2944 1204                                            l2936 11B2  
                                          l2848 1A3A                                            l2856 201C  
                                          l2864 1F3A                                            l2880 1738  
                                          l3496 1B04                                            l3584 2292  
                                          l3746 19EA                                            l3738 19A0  
                                          l3666 1E8A                                            l3658 1E6E  
                                          l2970 12E6                                            l2962 12BC  
                                          l2954 124E                                            l2946 1208  
                                          l2938 11D2                                            l2858 2028  
                                          l2866 1F46                                            l2890 178E  
                                          l2882 174C                                            l2874 2120  
                                          l3930 1D1A                                            l3498 1B06  
                                          l3586 2296                                            l3668 1E8E  
                                          l2972 1306                                            l2964 12BE  
                                          l2956 125C                                            l2948 1214  
                                          l2980 133A                                            l2868 1F4A  
                                          l2892 1792                                            l2884 175A  
                                          l3932 1D22                                            l3940 222A  
                                          l3588 229A                                            l2966 12D0  
                                          l2958 126E                                            l2990 13AA  
                                          l2982 135A                                            l2894 17BE  
                                          l2886 1766                                            l2878 172A  
                                          l3934 1D30                                            l3950 1CB4  
                                          l2968 12D6                                            l2992 13B2  
                                          l2984 135E                                            l2976 1328  
                                          l2896 17D2                                            l2888 177A  
                                          l3936 1D56                                            l3944 1C2A  
                                          l3952 1CC2                                            l3960 157C  
                                          l2994 13C6                                            l2986 136C  
                                          l2978 132C                                            l3938 2220  
                                          l3954 1CEC                                            l3946 1CA6  
                                          l3970 1588                                            l3962 1580  
                                          l2996 13D4                                            l2988 138C  
                                          l3956 1CF2                                            l3948 1CA6  
                                          l3980 1598                                            l3972 158A  
                                          l3964 1582                                            l2998 1402  
                                          l3958 1D10                                            l3990 15D2  
                                          l3982 159E                                            l3974 158C  
                                          l3966 1584                                            l3992 15E6  
                                          l3976 1590                                            l3968 1586  
                                          l3986 15B6                                            l3994 15EC  
                                          l3978 1594                                            l3996 15FE  
                                          l3988 15CE                                            l3998 1602  
                                          STR_1 FE7F                                            STR_2 FFD0  
                                          STR_3 FF24                                            STR_4 FFE9  
                                          STR_5 FFF5                                            STR_6 FFB3  
                                          STR_7 FEEF                                            STR_8 FEB8  
                                          STR_9 FF4F                                            u2000 2118  
                                          u2001 2112                                            u2010 211A  
                                          u2100 1232                                            u2020 1DAE  
                                          u2101 122E                                            u2021 1DA8  
                                          u2110 125C                                            u2030 1DB0  
                                          u2111 1258                                            u2120 129C  
                                          u2040 1DC6                                            u2121 1298  
                                          u2201 1492                                            u2041 1DC2  
                                          u2050 21C0                                            u2130 12E6  
                                          u2210 14B6                                            u2051 21BA  
                                          u2131 12E2                                            u2211 14B2  
                                          u2060 21C2                                            u2140 133A  
                                          u2300 06E6                                            u2220 14E0  
                                          u2141 1336                                            u2221 14DC  
                                          _LATA 000F83                                            u2070 11B2  
                                          u2150 136C                                            u2310 06FC  
                                          u2230 1520                                            _LATB 000F84  
                                          u2071 11AE                                            u2151 1368  
                                          u2311 06F8                                            u2231 151C  
                                          _LATC 000F85                                            u2080 11E4  
                                          u2160 13AA                                            u2400 090E  
                                          u2320 072C                                            u2240 1678  
                                          _LATD 000F86                                            u2081 11E0  
                                          u2161 13A6                                            u2401 090A  
                                          u2321 0728                                            u2241 1674  
                                          _LATE 000F87                                            u3130 22D0  
                                          u2170 13D4                                            u2410 0920  
                                          u2330 0748                                            u2250 16A2  
                                          u3131 22CA                                            u2091 120E  
                                          u2171 13D0                                            u2411 091C  
                                          u2331 0744                                            u2251 169E  
                                          u3300 19D8                                            u3140 22D2  
                                          u2180 1402                                            u2420 092E  
                                          u2340 0776                                            u2500 0F7A  
                                          u2260 16D0                                            u3301 19D4  
                                          u2181 13FE                                            u2421 092A  
                                          u2341 0772                                            u2261 16CC  
                                          u3310 19FC                                            u3150 1E4C  
                                          u2270 1F00                                            u2190 144A  
                                          u2430 0946                                            u2350 0784  
                                          u2510 0FB4                                            u3311 19F8  
                                          u3151 1E48                                            u2271 1EFC  
                                          u2191 1446                                            u2431 0942  
                                          u2351 0780                                            u2511 0FB0  
                                          u3160 1E7E                                            u2280 1F2E  
                                          u2360 08AE                                            u2520 0FC2  
                                          u2600 0E42                                            u3161 1E7A  
                                          u2281 1F2A                                            u2361 08AA  
                                          u2521 0FBE                                            u2441 0E76  
                                          u2601 0E3E                                            u1810 1DF0  
                                          u2370 08CC                                            u2290 06E4  
                                          u2530 0FFC                                            u2450 0E98  
                                          u2610 09A4                                            u1811 1DEC  
                                          u2371 08C8                                            u2291 06DE  
                                          u2531 0FF8                                            u2507 0F70  
                                          u2451 0E94                                            u2611 09A0  
                                          u1820 1E00                                            u1900 1F7C  
                                          u2380 08E6                                            u2460 0ECA  
                                          u2540 0C7A                                            u2700 0AFC  
                                          u2620 09C0                                            u1821 1DFC  
                                          u1901 1F78                                            u2381 08E2  
                                          u2461 0EC6                                            u2541 0C76  
                                          u2701 0AF8                                            u2621 09BC  
                                          u1830 1E2E                                            u2390 0900  
                                          u2470 0EE8                                            u2550 0C96  
                                          u1910 2150                                            u2710 0B64  
                                          u2630 09EA                                            u1831 1E2A  
                                          u2391 08FC                                            u2471 0EE4  
                                          u2551 0C92                                            u1911 214A  
                                          u2631 09E6                                            u3280 1FD2  
                                          u2800 1094                                            u1840 1A1E  
                                          u2480 0F12                                            u2560 0DE2  
                                          u1920 2152                                            u2720 0BA6  
                                          u2640 0A4E                                            u3281 1FCE  
                                          u2801 1090                                            u1841 1A1A  
                                          u2481 0F0E                                            u2561 0DDE  
                                          u2721 0BA2                                            u2641 0A4A  
                                          u3290 19C4                                            u2810 1150  
                                          u1850 1A30                                            u1930 1738  
                                          u2490 0F4C                                            u2570 0E00  
                                          u2730 0BC4                                            u2650 0A98  
                                          u3530 1D74                                            u3291 19C0  
                                          u2811 114A                                            u1851 1A2C  
                                          u1931 1734                                            u2491 0F48  
                                          u2571 0DFC                                            u2731 0BC0  
                                          u2715 0B52                                            u2651 0A92  
                                          u3531 1D70                                            u2820 1152  
                                          u1860 1A58                                            u1940 175A  
                                          u2580 0E1A                                            u2740 0BDE  
                                          u2660 0A9A                                            u2900 0318  
                                          u3540 1D10                                            u1861 1A54  
                                          u1941 1756                                            u2581 0E16  
                                          u2741 0BDA                                            u2901 0312  
                                          u3541 1D0C                                            u2830 1168  
                                          u1870 1A8E                                            u1950 17B0  
                                          u2590 0E34                                            u2750 0BF8  
                                          u2670 0AB0                                            u2910 031A  
                                          u3550 15B2                                            u2831 1164  
                                          u1871 1A8A                                            u1951 17AC  
                                          u2591 0E30                                            u2751 0BF4  
                                          u2671 0AAC                                            u3551 15AE  
                                          u2840 117A                                            u1880 205E  
                                          u1960 17BE                                            u2760 0C06  
                                          u2680 0AE4                                            u2920 0332  
                                          u3560 15E6                                            u2841 1176  
                                          u1881 205A                                            u1961 17BA  
                                          u2761 0C02                                            u2681 0ADE  
                                          u2921 032E                                            u3561 15E2  
                                          u1970 20BE                                            u1890 1F6C  
                                          u2770 0C14                                            u2690 0AE6  
                                          u2930 0358                                            u2850 0150  
                                          u3570 15FE                                            u1971 20BA  
                                          u2771 0C10                                            u2931 0354  
                                          u2851 014C                                            u3571 15FA  
                                          u2780 1040                                            u1980 2188  
                                          u2940 037E                                            u2860 0220  
                                          u3580 1624                                            _PMD0 000EE1  
                                          u2781 103C                                            u1981 2182  
                                          u2941 037A                                            u2861 021C  
                                          u3581 161E                                            _PMD1 000EE2  
                                          u2790 1078                                            u1990 218A  
                                          u2950 0424                                            u2870 022E  
                                          u3590 164E                                            _PMD2 000EE3  
                                          u2791 1074                                            u2951 0420  
                                          u2871 022A                                            u3591 164A  
                                          _PMD3 000EE4                                            u2960 04A0  
                                          u2880 0256                                            _PMD4 000EE5  
                                          u1897 1F62                                            u2961 049C  
                                          u2881 0252                                            _PMD5 000EE6  
                                          u2970 0548                                            u2890 029A  
                                          u3586 1626                                            u2971 0544  
                                          u2891 0296                                            u2980 056E  
                                          u2981 056A                                            u2990 0632  
                                          u2991 062E                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 1DDC                                            abs@a 0017  
                                          _dbuf 01C8                                            _atoi 1006  
                                          _main 157C                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _loop 0092  
                                          _prec 008C                                            _nout 0088  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 0E6C                                            btemp 005B  
                                          _utoa 0C6A                                            _xtoa 0994  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 201C  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 22BC  
                         _eusart1RxStatusBuffer 0164                                 __end_of___aodiv 1328  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 148C  
                                         STR_10 FF72                                           STR_11 FF94  
                                 __CFG_WDTE$OFF 000000                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 157C  
                                         ?_xtoa 0022                                 __end_of___lomod 172A  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 2374  
                                         i2l333 2016                                           i2l350 237A  
                                         i2l343 18AA                                           i2l159 0112  
                                         i2l336 201A                                           i2l353 235C  
                                         i2l347 21F2                                           i2l356 2368  
                                         i2l480 20A2                                           i2l491 221E  
                                         i2l477 209E                                           i2l494 237C  
                                         i2l487 196A                                           i2l497 236E  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00AF                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 0095                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 2060  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _data1 00E2  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                                         _fputc 1A0C                                 __end_of_isalpha 2120  
                                         _fputs 201C                                 __end_of_isdigit 21C8  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 008A                                           _putch 234C  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 2158                                 __end_of_isspace 1F3A  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 2190  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 1F8A                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 008E                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 1DDC  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 237E     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 237C           __end_of_EUSART2_SetTxInterruptHandler 22F2  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 22E8  
                                  _toupper$1816 0011                                 __initialization 1E92  
                                  __end_of_atoi 11A0                      __end_of_EUSART1_Initialize 1C2A  
                                  __end_of_main 165A                                    __end_of_dtoa 0994  
                     __size_of_InitialiseString 007C                                    __end_of_stoa 1006  
                                  __end_of_utoa 0E6C                                    __end_of_xtoa 0C6A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                                        ??_main 0056                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 236A                     _EUSART2_DefaultErrorHandler 2364  
                                    _ModbusData 0100                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                      __end_of_EUSART2_Initialize 1BAE  
                      _eusart2TxBufferRemaining 00E1                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                  __CFG_WDTCCS$SC 000000  
                                        i2l3700 2098                                          i2l3460 21EE  
                                        i2l3452 21C8                                          i2l3620 1FFC  
                                        i2l3710 18F4                                          i2l3702 18AC  
                                        i2l3454 21D8                                          i2l3630 180C  
                                        i2l3622 200C                                          i2l3614 1FD4  
                                        i2l3480 221A                                          i2l3472 21F4  
                                        i2l3720 1966                                          i2l3712 1902  
                                        i2l3704 18BC                                          i2l3456 21DA  
                                        i2l3640 186C                                          i2l3632 181C  
                                        i2l3624 2010                                          i2l3616 1FE6  
                                        i2l3474 2204                                          i2l3570 236A  
                                        i2l3714 1912                                          i2l3706 18CA  
                                        i2l3458 21EA                                          i2l3642 1888  
                                        i2l3634 1834                                          i2l3626 17EC  
                                        i2l3618 1FF8                                          i2l3476 2206  
                                        i2l3572 2370                                          i2l3716 192C  
                                        i2l3708 18DA                                          i2l3644 18A6  
                                        i2l3636 1844                                          i2l3628 17FC  
                                        i2l3478 2216                                          i2l3718 1948  
                                        i2l3566 2356                                          i2l3638 1854  
                                        i2l3568 2364                                          _INLVLA 000F0D  
                                        i2l3690 2060                                          i2l3770 0038  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        i2l3692 2072                                          i2l3780 00BA  
                                        i2l3772 0046                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l3694 2082  
                                        i2l3782 00E6                                          i2l3774 0072  
                                        i2l3766 001A                                          i2l3696 2084  
                                        i2l3784 00F4                                          i2l3776 0080  
                                        i2l3768 0028                                          i2l3698 2094  
                                        i2l3778 00AC                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00AA  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 235E  
                                __CFG_PWRTE$OFF 000000                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0006                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 2248  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 0015  
                                     ??___lomod 0015                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 1EB8                                          clear_1 1EC4  
                                        clear_2 1ED0                                          _rxData 0200  
                   _EUSART2_FramingErrorHandler 00D6                                          _printf 2220  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 1F3A                                   _ExpectedBytes 00F4  
                                        fputc@c 0007                                  _PMD_Initialize 226E  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FE7E  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 1FD4  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 1D7E                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0264                                       ??_toupper 000D  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0078  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 228A  
                               _eusart2TxBuffer 0080                                      __accesstop 0060  
                       __end_of__initialization 1EDE                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 2220  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 22D4  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1AA2  
                                 __end_of_fputs 2060                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2356                          __end_of_PMD_Initialize 228A  
                          __end_of_EUSART1_Read 1E92                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 196C                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 22A4                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 009A                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 0098                                   _eusart2TxHead 009F  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart2RxTail 009D  
                                 _eusart1TxTail 0099               _EUSART1_TxDefaultInterruptHandler 00DA  
                                 _eusart2TxTail 009E                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 1D1A                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                         ?_RXMode 0001  
               __end_of_EUSART1_SetErrorHandler 234C                                _InitialiseString 1C2A  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       ?_printf 00BD                                 ?_PMD_Initialize 0001  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 2342  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2338  
                         _eusart2RxStatusBuffer 0070                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 18AC                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                       _ByteNum 0090                                 __size_of_RXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 11A0  
                                       ___aomod 1328                                 __size_of___wmul 0026  
                                       ___lodiv 148C                                         ___lomod 165A  
                                     ?_vfprintf 00B7                             _EUSART1_is_rx_ready 22BC  
                                       __pcinit 1E92                 __end_of_EUSART2_SetErrorHandler 231A  
                                       __ramtop 0F00                                         __ptext0 157C  
                                       __ptext1 228A                                         __ptext2 226E  
                                       __ptext3 1AA2                                         __ptext4 22A4  
                                       __ptext5 2376                                         __ptext6 1B30  
                                       __ptext7 22E8                                         __ptext8 22F2  
                                       __ptext9 22FC                                 __size_of_printf 0028  
                               __size_of_strlen 0050           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 235E     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 2356                           _OSCILLATOR_Initialize 22A4  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 20E4  
                                       _isdigit 2190                              _EUSART1_Initialize 1BAE  
                                       _islower 2120                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 1EE8                                     _PrintModbus 1CA6  
                                       _isupper 2158                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                                       _toupper 1D7E                            end_of_initialization 1EDE  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00CE  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 232E  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2324  
                            _EUSART2_Initialize 1B30                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                       fp__EUSART1_Transmit_ISR 0000                                      main@RXStat 00CB  
              __size_of_EUSART1_SetErrorHandler 000A                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                            ??_EUSART2_Initialize 0007  
                                  _EUSART1_Read 1E3A            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 2364                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 21F4                    __end_of_INTERRUPT_Initialize 237A  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 00A8  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 00A0  
                                __end_of___wmul 226E                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 2248                                  __end_of_strlen 1F8A  
                           start_initialization 1E92                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 20E4                                     __end_of_pad 17EC  
                      __end_of_InitialiseString 1CA6   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART2_Write 1E3A                          fp__EUSART1_Receive_ISR 0000  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A          __end_of_EUSART2_SetOverrunErrorHandler 2306  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 22FC  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                                   vfprintf@fmt 00B9                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 21F4  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00E2  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 0097                                  _eusart2RxCount 009C  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 00D8  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 00A0  
                              ___aodiv@dividend 0005                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 196C                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1725 0014  
                                     _atoi$1726 0018                                       _atoi$1727 0016  
                                     __pnvBANK0 00CC                             ??_AddRxBuffToModBus 0005  
                        _PIN_MANAGER_Initialize 1AA2                                       _dtoa$1221 0034  
                                     __pintcode 0008                                   __pmediumconst FE7E  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00DE  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2370  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 236A  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00CC                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 1A0C  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2342  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2376                    __size_of_EUSART2_Receive_ISR 00C0  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                                        i2u300_40 21EA  
                                      i2u300_41 21E6                                        i2u301_40 2216  
                                      i2u301_41 2212                                        i2u311_40 1888  
                                      i2u310_48 185A                                        i2u311_41 1884  
                                      i2u310_49 186C             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u320_40 2072                                        i2u320_41 206E  
                                      i2u321_40 2094                                        i2u312_48 188E  
                                      i2u305_40 1FE6                                        i2u321_41 2090  
                                      i2u312_49 18A2                                        i2u305_41 1FE2  
                                      i2u322_40 18CA                                        i2u306_40 200C  
                                      i2u322_41 18C6                                        i2u306_41 2008  
                                      i2u307_40 180C                                        i2u307_41 1808  
                                      i2u324_40 1902                                        i2u323_48 18E0  
                                      i2u340_40 00AC                                        i2u324_41 18FE  
                                      i2u323_49 18F4                                        i2u340_41 00A8  
                                      i2u309_40 1844                                        i2u308_48 1822  
                                      i2u341_40 00BA                                        i2u333_40 0028  
                                      i2u309_41 1840                                        i2u308_49 1834  
                                      i2u341_41 00B6                                        i2u333_41 0024  
                                      i2u326_40 1948                                        i2u325_48 1918  
                                      i2u334_40 0038                                        i2u326_41 1944  
                                      i2u325_49 192C                                        i2u334_41 0034  
                                      i2u343_40 00E6                                        i2u342_48 00C0  
                                      i2u335_40 0046                                        i2u343_41 00E2  
                                      i2u342_49 00D4                                        i2u335_41 0042  
                                      i2u327_48 194E                                        i2u344_40 00F4  
                                      i2u327_49 1962                                        i2u344_41 00F0  
                                      i2u337_40 0072                                        i2u336_48 004C  
                                      i2u337_41 006E                                        i2u336_49 0060  
                                      i2u345_48 00FA                                        i2u338_40 0080  
                                      i2u345_49 010E                                        i2u338_41 007C  
                                      i2u339_48 0086                                        i2u339_49 009A  
                                      _PIR3bits 000ECD                                        _PIR7bits 000ED1  
                        ?_EUSART1_RxDataHandler 0001                                       _vfpfcnvrt 012A  
                                     _xtoa$1250 0035                                       _xtoa$1251 0037  
                             ___wmul@multiplier 0005                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1752 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00AE                                       copy_data0 1EA6  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 2310  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00D4  
         __end_of_EUSART1_SetTxInterruptHandler 2324          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 231A                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 22FC          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 22F2                                      vfprintf@ap 00BB  
                                      __Lrparam 0000                                      vfprintf@fp 00B7  
                            __CFG_BOREN$SBORDIS 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 2376  
                   _EUSART1_DefaultErrorHandler 2370                     __end_of_EUSART1_is_rx_ready 22D4  
                          _EUSART2_ErrorHandler 00D2                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                      __size_of_AddRxBuffToModBus 00A0  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2306                                        __ptext11 2310  
                                      __ptext20 1C2A                                        __ptext12 1BAE  
                                      __ptext21 2220                                        __ptext13 231A  
                                      __ptext30 165A                                        __ptext22 1D1A  
                                      __ptext14 2324                                        __ptext31 148C  
                                      __ptext23 012A                                        __ptext15 232E  
                                      __ptext40 20A4                                        __ptext32 0E6C  
                                      __ptext24 0994                                        __ptext16 2338  
                                      __ptext41 1328                                        __ptext33 06B4  
                                      __ptext25 1D7E                                        __ptext17 2342  
                                      __ptext50 196C                                        __ptext42 11A0  
                                      __ptext34 172A                                        __ptext26 2120  
                                      __ptext18 235E                                        __ptext43 1006  
                                      __ptext35 1F3A                                        __ptext27 2158  
                                      __ptext19 1CA6                                        __ptext60 236A  
                                      __ptext52 1FD4                                        __ptext44 1EE8  
                                      __ptext36 201C                                        __ptext28 20E4  
                                      __ptext61 237C                                        __ptext53 17EC  
                                      __ptext45 2190                                        __ptext37 1A0C  
                                      __ptext29 0C6A                                        __ptext62 2370  
                                      __ptext54 2356                                        __ptext46 2248  
                                      __ptext38 234C                                        __ptext63 21F4  
                                      __ptext55 237A                                        __ptext47 22BC  
                                      __ptext39 1DDC                                        __ptext64 0000  
                                      __ptext56 2364                                        __ptext48 1E3A  
                                      __ptext57 21C8                                        __ptext49 1F8A  
                                      __ptext58 2060                                        __ptext59 18AC  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 00DE                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 237C     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 237A                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
                                  PrintModbus@i 00C9            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 00ED  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 0094  
                                      int$flags 005B                                        _vfprintf 1D1A  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 21C8                                       printf@fmt 00BD  
                   _EUSART1_FramingErrorHandler 00D0                             _EUSART1_Receive_ISR 18AC  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1265 00AC  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 0074                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 2338         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 232E                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 20A4                                        printf@ap 00C7  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                            _eusart1RxLastError 0096                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 17EC                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 1B30                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 009B  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 00DC                             __end_of_ClearRxBuff 1FD4  
