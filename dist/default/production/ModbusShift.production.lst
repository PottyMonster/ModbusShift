

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 19 19:07:15 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126  0000                     
   127                           ; Version 2.10
   128                           ; Generated 31/07/2019 GMT
   129                           ; 
   130                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K40 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162                           	psect	idataBANK0
   163  003E52                     __pidataBANK0:
   164                           	opt callstack 0
   165                           
   166                           ;initializer for _ByteLo
   167  003E52  00FF               	dw	255
   168                           
   169                           	psect	idataBANK1
   170  003174                     __pidataBANK1:
   171                           	opt callstack 0
   172                           
   173                           ;initializer for _MB301xx
   174  003174  4150               	dw	16720
   175  003176  3030               	dw	12336
   176  003178  3036               	dw	12342
   177  00317A  3033               	dw	12339
   178  00317C  3033               	dw	12339
   179  00317E  2D30               	dw	11568
   180  003180  3200               	dw	12800
   181                           
   182                           ;initializer for _MB304xx
   183  003182  4155               	dw	16725
   184  003184  4720               	dw	18208
   185  003186  3039               	dw	12345
   186  003188  3230               	dw	12848
   187  00318A  3231               	dw	12849
   188                           
   189                           ;initializer for _MB303xx
   190  00318C  3132               	dw	12594
   191  00318E  3334               	dw	13108
   192  003190  3536               	dw	13622
   193  003192  3738               	dw	14136
   194  003194  3930               	dw	14640
   195                           
   196                           ;initializer for stoa@F1139
   197  003196  28                 	db	40
   198  003197  6E                 	db	110
   199  003198  75                 	db	117
   200  003199  6C                 	db	108
   201  00319A  6C                 	db	108
   202  00319B  29                 	db	41
   203  00319C  00                 	db	0
   204                           
   205                           ;initializer for _MB307xx
   206  00319D  045A               	dw	1114
   207  00319F  00F1               	dw	241
   208  0031A1  01C4               	dw	452
   209                           
   210                           ;initializer for _MB305xx
   211  0031A3  3137               	dw	12599
   212  0031A5  3335               	dw	13109
   213  0031A7  3439               	dw	13369
   214                           
   215                           ;initializer for _MB306xx
   216  0031A9  004D               	dw	77
   217  0031AB  3030               	dw	12336
   218                           
   219                           ;initializer for ReadRX232@F10713
   220  0031AD  5A                 	db	90
   221  0031AE  00                 	db	0
   222                           
   223                           ;initializer for _MBResCRC
   224  0031AF  FFFF               	dw	65535
   225                           
   226                           ;initializer for _ExpectedBytes
   227  0031B1  0008               	dw	8
   228                           
   229                           ;initializer for _MB302xx
   230  0031B3  0004               	dw	4
   231                           
   232                           ;initializer for _MBRespon
   233  0031B5  FFFF               	dw	65535
   234  0031B7  00                 	db	0
   235  0031B8  00                 	db	0
   236  0031B9  00                 	db	0
   237  0031BA  00                 	db	0
   238  0031BB  00                 	db	0
   239  0031BC  00                 	db	0
   240  0031BD  00                 	db	0
   241  0031BE  00                 	db	0
   242  0031BF  00                 	db	0
   243  0031C0  00                 	db	0
   244  0031C1  00                 	db	0
   245  0031C2  00                 	db	0
   246  0031C3  00                 	db	0
   247  0031C4  00                 	db	0
   248  0031C5  00                 	db	0
   249  0031C6  00                 	db	0
   250  0031C7  00                 	db	0
   251  0031C8  00                 	db	0
   252  0031C9  00                 	db	0
   253  0031CA  00                 	db	0
   254  0031CB  00                 	db	0
   255  0031CC  00                 	db	0
   256  0031CD  00                 	db	0
   257  0031CE  00                 	db	0
   258  0031CF  00                 	db	0
   259  0031D0  00                 	db	0
   260  0031D1  00                 	db	0
   261  0031D2  00                 	db	0
   262  0031D3  00                 	db	0
   263  0031D4  00                 	db	0
   264  0031D5  00                 	db	0
   265  0031D6  00                 	db	0
   266  0031D7  00                 	db	0
   267  0031D8  00                 	db	0
   268  0031D9  00                 	db	0
   269  0031DA  00                 	db	0
   270  0031DB  00                 	db	0
   271  0031DC  00                 	db	0
   272  0031DD  00                 	db	0
   273  0031DE  00                 	db	0
   274  0031DF  00                 	db	0
   275  0031E0  00                 	db	0
   276  0031E1  00                 	db	0
   277  0031E2  00                 	db	0
   278  0031E3  00                 	db	0
   279  0031E4  00                 	db	0
   280  0031E5  00                 	db	0
   281  0031E6  00                 	db	0
   282  0031E7  00                 	db	0
   283  0031E8  00                 	db	0
   284  0031E9  00                 	db	0
   285  0031EA  00                 	db	0
   286  0031EB  00                 	db	0
   287  0031EC  00                 	db	0
   288  0031ED  00                 	db	0
   289  0031EE  00                 	db	0
   290  0031EF  00                 	db	0
   291  0031F0  00                 	db	0
   292  0031F1  00                 	db	0
   293  0031F2  00                 	db	0
   294  0031F3  00                 	db	0
   295  0031F4  00                 	db	0
   296                           
   297                           	psect	idataBANK2
   298  003AA6                     __pidataBANK2:
   299                           	opt callstack 0
   300                           
   301                           ;initializer for ValidateCmd@F10737
   302  003AA6  52                 	db	82
   303  003AA7  65                 	db	101
   304  003AA8  76                 	db	118
   305  003AA9  69                 	db	105
   306  003AAA  73                 	db	115
   307  003AAB  69                 	db	105
   308  003AAC  6F                 	db	111
   309  003AAD  6E                 	db	110
   310  003AAE  00                 	db	0
   311  003AAF  00                 	db	0
   312  003AB0  00                 	db	0
   313  003AB1  00                 	db	0
   314  003AB2  00                 	db	0
   315  003AB3  00                 	db	0
   316  003AB4  00                 	db	0
   317  003AB5  00                 	db	0
   318  003AB6  00                 	db	0
   319  003AB7  00                 	db	0
   320  003AB8  00                 	db	0
   321  003AB9  00                 	db	0
   322                           
   323                           ;initializer for ValidateCmd@F10734
   324  003ABA  50                 	db	80
   325  003ABB  61                 	db	97
   326  003ABC  72                 	db	114
   327  003ABD  74                 	db	116
   328  003ABE  20                 	db	32
   329  003ABF  4E                 	db	78
   330  003AC0  75                 	db	117
   331  003AC1  6D                 	db	109
   332  003AC2  62                 	db	98
   333  003AC3  65                 	db	101
   334  003AC4  72                 	db	114
   335  003AC5  00                 	db	0
   336  003AC6  00                 	db	0
   337  003AC7  00                 	db	0
   338  003AC8  00                 	db	0
   339  003AC9  00                 	db	0
   340  003ACA  00                 	db	0
   341  003ACB  00                 	db	0
   342  003ACC  00                 	db	0
   343  003ACD  00                 	db	0
   344                           
   345                           ;initializer for ValidateCmd@F10731
   346  003ACE  53                 	db	83
   347  003ACF  65                 	db	101
   348  003AD0  72                 	db	114
   349  003AD1  69                 	db	105
   350  003AD2  61                 	db	97
   351  003AD3  6C                 	db	108
   352  003AD4  20                 	db	32
   353  003AD5  4E                 	db	78
   354  003AD6  75                 	db	117
   355  003AD7  6D                 	db	109
   356  003AD8  62                 	db	98
   357  003AD9  65                 	db	101
   358  003ADA  72                 	db	114
   359  003ADB  00                 	db	0
   360  003ADC  00                 	db	0
   361  003ADD  00                 	db	0
   362  003ADE  00                 	db	0
   363  003ADF  00                 	db	0
   364  003AE0  00                 	db	0
   365  003AE1  00                 	db	0
   366                           
   367                           	psect	idataBANK3
   368  0031F5                     __pidataBANK3:
   369                           	opt callstack 0
   370                           
   371                           ;initializer for _MB400xx
   372  0031F5  0020               	dw	32
   373  0031F7  001F               	dw	31
   374  0031F9  001E               	dw	30
   375  0031FB  001D               	dw	29
   376  0031FD  001C               	dw	28
   377  0031FF  001B               	dw	27
   378  003201  001A               	dw	26
   379  003203  0019               	dw	25
   380  003205  0018               	dw	24
   381  003207  0017               	dw	23
   382  003209  0016               	dw	22
   383  00320B  0015               	dw	21
   384  00320D  0014               	dw	20
   385  00320F  0013               	dw	19
   386  003211  0012               	dw	18
   387  003213  0011               	dw	17
   388  003215  0010               	dw	16
   389  003217  000F               	dw	15
   390  003219  000E               	dw	14
   391  00321B  000D               	dw	13
   392  00321D  000C               	dw	12
   393  00321F  000B               	dw	11
   394  003221  000A               	dw	10
   395  003223  0009               	dw	9
   396  003225  0008               	dw	8
   397  003227  0007               	dw	7
   398  003229  0006               	dw	6
   399  00322B  0005               	dw	5
   400  00322D  0004               	dw	4
   401  00322F  0003               	dw	3
   402  003231  0002               	dw	2
   403  003233  0001               	dw	1
   404                           
   405                           ;initializer for _MB300xx
   406  003235  0001               	dw	1
   407  003237  0002               	dw	2
   408  003239  0003               	dw	3
   409  00323B  0004               	dw	4
   410  00323D  0005               	dw	5
   411  00323F  0006               	dw	6
   412  003241  0007               	dw	7
   413  003243  0008               	dw	8
   414  003245  0009               	dw	9
   415  003247  000A               	dw	10
   416  003249  000B               	dw	11
   417  00324B  000C               	dw	12
   418  00324D  000D               	dw	13
   419  00324F  000E               	dw	14
   420  003251  000F               	dw	15
   421  003253  0010               	dw	16
   422  003255  0011               	dw	17
   423  003257  0012               	dw	18
   424  003259  0013               	dw	19
   425  00325B  0014               	dw	20
   426  00325D  0015               	dw	21
   427  00325F  0016               	dw	22
   428  003261  0017               	dw	23
   429  003263  0018               	dw	24
   430  003265  0019               	dw	25
   431  003267  001A               	dw	26
   432  003269  001B               	dw	27
   433  00326B  001C               	dw	28
   434  00326D  001D               	dw	29
   435  00326F  001E               	dw	30
   436  003271  001F               	dw	31
   437  003273  0020               	dw	32
   438                           
   439                           	psect	nvBANK0
   440  0000BB                     __pnvBANK0:
   441                           	opt callstack 0
   442  0000BB                     _eusart1TxBufferRemaining:
   443                           	opt callstack 0
   444  0000BB                     	ds	1
   445  0000BC                     _eusart2TxBufferRemaining:
   446                           	opt callstack 0
   447  0000BC                     	ds	1
   448                           
   449                           	psect	nvBANK1
   450  0001E4                     __pnvBANK1:
   451                           	opt callstack 0
   452  0001E4                     _EUSART1_ErrorHandler:
   453                           	opt callstack 0
   454  0001E4                     	ds	2
   455  0001E6                     _EUSART1_OverrunErrorHandler:
   456                           	opt callstack 0
   457  0001E6                     	ds	2
   458  0001E8                     _EUSART1_FramingErrorHandler:
   459                           	opt callstack 0
   460  0001E8                     	ds	2
   461  0001EA                     _EUSART2_ErrorHandler:
   462                           	opt callstack 0
   463  0001EA                     	ds	2
   464  0001EC                     _EUSART2_OverrunErrorHandler:
   465                           	opt callstack 0
   466  0001EC                     	ds	2
   467  0001EE                     _EUSART2_FramingErrorHandler:
   468                           	opt callstack 0
   469  0001EE                     	ds	2
   470  0001F0                     _EUSART1_RxDefaultInterruptHandler:
   471                           	opt callstack 0
   472  0001F0                     	ds	2
   473  0001F2                     _EUSART1_TxDefaultInterruptHandler:
   474                           	opt callstack 0
   475  0001F2                     	ds	2
   476  0001F4                     _EUSART2_RxDefaultInterruptHandler:
   477                           	opt callstack 0
   478  0001F4                     	ds	2
   479  0001F6                     _EUSART2_TxDefaultInterruptHandler:
   480                           	opt callstack 0
   481  0001F6                     	ds	2
   482  0000                     _RC2REG	set	3737
   483  0000                     _RC2STAbits	set	3741
   484  0000                     _TX2REG	set	3738
   485  0000                     _TX2STAbits	set	3742
   486  0000                     _SP2BRGH	set	3740
   487  0000                     _SP2BRGL	set	3739
   488  0000                     _TX2STA	set	3742
   489  0000                     _RC2STA	set	3741
   490  0000                     _BAUD2CON	set	3743
   491  0000                     _PIR7bits	set	3793
   492  0000                     _PIR3bits	set	3789
   493  0000                     _PIE3bits	set	3781
   494  0000                     _PMD5	set	3814
   495  0000                     _PMD4	set	3813
   496  0000                     _PMD3	set	3812
   497  0000                     _PMD2	set	3811
   498  0000                     _PMD1	set	3810
   499  0000                     _PMD0	set	3809
   500  0000                     _OSCTUNE	set	3805
   501  0000                     _OSCFRQ	set	3806
   502  0000                     _OSCEN	set	3804
   503  0000                     _OSCCON3	set	3802
   504  0000                     _OSCCON1	set	3800
   505  0000                     _RX2PPS	set	3725
   506  0000                     _RC6PPS	set	3837
   507  0000                     _RB6PPS	set	3829
   508  0000                     _RX1PPS	set	3765
   509  0000                     _INLVLE	set	3882
   510  0000                     _INLVLD	set	3874
   511  0000                     _INLVLC	set	3869
   512  0000                     _INLVLB	set	3861
   513  0000                     _INLVLA	set	3853
   514  0000                     _SLRCONE	set	3883
   515  0000                     _SLRCOND	set	3875
   516  0000                     _SLRCONC	set	3870
   517  0000                     _SLRCONB	set	3862
   518  0000                     _SLRCONA	set	3854
   519  0000                     _ODCOND	set	3876
   520  0000                     _ODCONC	set	3871
   521  0000                     _ODCONB	set	3863
   522  0000                     _ODCONA	set	3855
   523  0000                     _ODCONE	set	3884
   524  0000                     _WPUC	set	3872
   525  0000                     _WPUA	set	3856
   526  0000                     _WPUB	set	3864
   527  0000                     _WPUE	set	3885
   528  0000                     _WPUD	set	3877
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELE	set	3886
   531  0000                     _ANSELB	set	3865
   532  0000                     _ANSELC	set	3873
   533  0000                     _ANSELD	set	3878
   534  0000                     _LATDbits	set	3974
   535  0000                     _LATAbits	set	3971
   536  0000                     _RC1REG	set	3993
   537  0000                     _RC1STAbits	set	3997
   538  0000                     _TX1REG	set	3994
   539  0000                     _TX1STAbits	set	3998
   540  0000                     _SP1BRGH	set	3996
   541  0000                     _SP1BRGL	set	3995
   542  0000                     _TX1STA	set	3998
   543  0000                     _RC1STA	set	3997
   544  0000                     _BAUD1CON	set	3999
   545  0000                     _NVMDAT	set	3968
   546  0000                     _NVMADRL	set	3966
   547  0000                     _NVMADRH	set	3967
   548  0000                     _NVMCON2	set	3970
   549  0000                     _TABLAT	set	4085
   550  0000                     _TBLPTRL	set	4086
   551  0000                     _TBLPTRH	set	4087
   552  0000                     _TBLPTRU	set	4088
   553  0000                     _NVMCON1bits	set	3969
   554  0000                     _INTCONbits	set	4082
   555  0000                     _TRISD	set	3979
   556  0000                     _TRISC	set	3978
   557  0000                     _TRISB	set	3977
   558  0000                     _TRISA	set	3976
   559  0000                     _TRISE	set	3980
   560  0000                     _LATC	set	3973
   561  0000                     _LATB	set	3972
   562  0000                     _LATA	set	3971
   563  0000                     _LATD	set	3974
   564  0000                     _LATE	set	3975
   565                           
   566                           	psect	mediumconst
   567  00FAB0                     __pmediumconst:
   568                           	opt callstack 0
   569  00FAB0  00                 	db	0
   570  00FAB1                     STR_46:
   571                           
   572                           ; BSR set to: 0
   573  00FAB1  4E                 	db	78	;'N'
   574  00FAB2  61                 	db	97	;'a'
   575  00FAB3  6D                 	db	109	;'m'
   576  00FAB4  65                 	db	101	;'e'
   577  00FAB5  3A                 	db	58	;':'
   578  00FAB6  20                 	db	32
   579  00FAB7  25                 	db	37
   580  00FAB8  73                 	db	115	;'s'
   581  00FAB9  20                 	db	32
   582  00FABA  20                 	db	32
   583  00FABB  4D                 	db	77	;'M'
   584  00FABC  42                 	db	66	;'B'
   585  00FABD  41                 	db	65	;'A'
   586  00FABE  64                 	db	100	;'d'
   587  00FABF  64                 	db	100	;'d'
   588  00FAC0  72                 	db	114	;'r'
   589  00FAC1  65                 	db	101	;'e'
   590  00FAC2  73                 	db	115	;'s'
   591  00FAC3  73                 	db	115	;'s'
   592  00FAC4  3A                 	db	58	;':'
   593  00FAC5  20                 	db	32
   594  00FAC6  30                 	db	48	;'0'
   595  00FAC7  78                 	db	120	;'x'
   596  00FAC8  25                 	db	37
   597  00FAC9  30                 	db	48	;'0'
   598  00FACA  34                 	db	52	;'4'
   599  00FACB  78                 	db	120	;'x'
   600  00FACC  20                 	db	32
   601  00FACD  20                 	db	32
   602  00FACE  20                 	db	32
   603  00FACF  64                 	db	100	;'d'
   604  00FAD0  61                 	db	97	;'a'
   605  00FAD1  74                 	db	116	;'t'
   606  00FAD2  61                 	db	97	;'a'
   607  00FAD3  65                 	db	101	;'e'
   608  00FAD4  65                 	db	101	;'e'
   609  00FAD5  41                 	db	65	;'A'
   610  00FAD6  64                 	db	100	;'d'
   611  00FAD7  64                 	db	100	;'d'
   612  00FAD8  72                 	db	114	;'r'
   613  00FAD9  3A                 	db	58	;':'
   614  00FADA  20                 	db	32
   615  00FADB  30                 	db	48	;'0'
   616  00FADC  78                 	db	120	;'x'
   617  00FADD  25                 	db	37
   618  00FADE  30                 	db	48	;'0'
   619  00FADF  34                 	db	52	;'4'
   620  00FAE0  78                 	db	120	;'x'
   621  00FAE1  20                 	db	32
   622  00FAE2  20                 	db	32
   623  00FAE3  20                 	db	32
   624  00FAE4  4E                 	db	78	;'N'
   625  00FAE5  75                 	db	117	;'u'
   626  00FAE6  6D                 	db	109	;'m'
   627  00FAE7  42                 	db	66	;'B'
   628  00FAE8  79                 	db	121	;'y'
   629  00FAE9  74                 	db	116	;'t'
   630  00FAEA  65                 	db	101	;'e'
   631  00FAEB  73                 	db	115	;'s'
   632  00FAEC  3A                 	db	58	;':'
   633  00FAED  20                 	db	32
   634  00FAEE  25                 	db	37
   635  00FAEF  69                 	db	105	;'i'
   636  00FAF0  20                 	db	32
   637  00FAF1  0D                 	db	13
   638  00FAF2  0A                 	db	10
   639  00FAF3  00                 	db	0
   640  00FAF4                     STR_29:
   641                           
   642                           ; BSR set to: 0
   643  00FAF4  0D                 	db	13
   644  00FAF5  44                 	db	68	;'D'
   645  00FAF6  61                 	db	97	;'a'
   646  00FAF7  6E                 	db	110	;'n'
   647  00FAF8  20                 	db	32
   648  00FAF9  61                 	db	97	;'a'
   649  00FAFA  6E                 	db	110	;'n'
   650  00FAFB  64                 	db	100	;'d'
   651  00FAFC  20                 	db	32
   652  00FAFD  53                 	db	83	;'S'
   653  00FAFE  61                 	db	97	;'a'
   654  00FAFF  6D                 	db	109	;'m'
   655  00FB00  27                 	db	39
   656  00FB01  73                 	db	115	;'s'
   657  00FB02  20                 	db	32
   658  00FB03  4D                 	db	77	;'M'
   659  00FB04  6F                 	db	111	;'o'
   660  00FB05  64                 	db	100	;'d'
   661  00FB06  62                 	db	98	;'b'
   662  00FB07  75                 	db	117	;'u'
   663  00FB08  73                 	db	115	;'s'
   664  00FB09  20                 	db	32
   665  00FB0A  47                 	db	71	;'G'
   666  00FB0B  50                 	db	80	;'P'
   667  00FB0C  49                 	db	73	;'I'
   668  00FB0D  4F                 	db	79	;'O'
   669  00FB0E  20                 	db	32
   670  00FB0F  45                 	db	69	;'E'
   671  00FB10  78                 	db	120	;'x'
   672  00FB11  70                 	db	112	;'p'
   673  00FB12  61                 	db	97	;'a'
   674  00FB13  6E                 	db	110	;'n'
   675  00FB14  73                 	db	115	;'s'
   676  00FB15  69                 	db	105	;'i'
   677  00FB16  6F                 	db	111	;'o'
   678  00FB17  6E                 	db	110	;'n'
   679  00FB18  20                 	db	32
   680  00FB19  2D                 	db	45
   681  00FB1A  20                 	db	32
   682  00FB1B  41                 	db	65	;'A'
   683  00FB1C  50                 	db	80	;'P'
   684  00FB1D  30                 	db	48	;'0'
   685  00FB1E  30                 	db	48	;'0'
   686  00FB1F  30                 	db	48	;'0'
   687  00FB20  37                 	db	55	;'7'
   688  00FB21  30                 	db	48	;'0'
   689  00FB22  31                 	db	49	;'1'
   690  00FB23  32                 	db	50	;'2'
   691  00FB24  35                 	db	53	;'5'
   692  00FB25  2D                 	db	45
   693  00FB26  30                 	db	48	;'0'
   694  00FB27  31                 	db	49	;'1'
   695  00FB28  20                 	db	32
   696  00FB29  52                 	db	82	;'R'
   697  00FB2A  65                 	db	101	;'e'
   698  00FB2B  76                 	db	118	;'v'
   699  00FB2C  20                 	db	32
   700  00FB2D  2D                 	db	45
   701  00FB2E  0D                 	db	13
   702  00FB2F  0A                 	db	10
   703  00FB30  00                 	db	0
   704  00FB31                     STR_43:
   705                           
   706                           ; BSR set to: 0
   707  00FB31  43                 	db	67	;'C'
   708  00FB32  6C                 	db	108	;'l'
   709  00FB33  65                 	db	101	;'e'
   710  00FB34  61                 	db	97	;'a'
   711  00FB35  72                 	db	114	;'r'
   712  00FB36  69                 	db	105	;'i'
   713  00FB37  6E                 	db	110	;'n'
   714  00FB38  67                 	db	103	;'g'
   715  00FB39  20                 	db	32
   716  00FB3A  45                 	db	69	;'E'
   717  00FB3B  45                 	db	69	;'E'
   718  00FB3C  50                 	db	80	;'P'
   719  00FB3D  52                 	db	82	;'R'
   720  00FB3E  4F                 	db	79	;'O'
   721  00FB3F  4D                 	db	77	;'M'
   722  00FB40  20                 	db	32
   723  00FB41  66                 	db	102	;'f'
   724  00FB42  72                 	db	114	;'r'
   725  00FB43  6F                 	db	111	;'o'
   726  00FB44  6D                 	db	109	;'m'
   727  00FB45  20                 	db	32
   728  00FB46  41                 	db	65	;'A'
   729  00FB47  64                 	db	100	;'d'
   730  00FB48  64                 	db	100	;'d'
   731  00FB49  72                 	db	114	;'r'
   732  00FB4A  65                 	db	101	;'e'
   733  00FB4B  73                 	db	115	;'s'
   734  00FB4C  73                 	db	115	;'s'
   735  00FB4D  3A                 	db	58	;':'
   736  00FB4E  20                 	db	32
   737  00FB4F  30                 	db	48	;'0'
   738  00FB50  78                 	db	120	;'x'
   739  00FB51  25                 	db	37
   740  00FB52  30                 	db	48	;'0'
   741  00FB53  34                 	db	52	;'4'
   742  00FB54  78                 	db	120	;'x'
   743  00FB55  2C                 	db	44
   744  00FB56  20                 	db	32
   745  00FB57  4E                 	db	78	;'N'
   746  00FB58  75                 	db	117	;'u'
   747  00FB59  6D                 	db	109	;'m'
   748  00FB5A  20                 	db	32
   749  00FB5B  42                 	db	66	;'B'
   750  00FB5C  79                 	db	121	;'y'
   751  00FB5D  74                 	db	116	;'t'
   752  00FB5E  65                 	db	101	;'e'
   753  00FB5F  73                 	db	115	;'s'
   754  00FB60  3A                 	db	58	;':'
   755  00FB61  20                 	db	32
   756  00FB62  25                 	db	37
   757  00FB63  69                 	db	105	;'i'
   758  00FB64  20                 	db	32
   759  00FB65  0D                 	db	13
   760  00FB66  0A                 	db	10
   761  00FB67  00                 	db	0
   762  00FB68                     STR_37:
   763                           
   764                           ; BSR set to: 0
   765  00FB68  20                 	db	32
   766  00FB69  20                 	db	32
   767  00FB6A  20                 	db	32
   768  00FB6B  30                 	db	48	;'0'
   769  00FB6C  78                 	db	120	;'x'
   770  00FB6D  31                 	db	49	;'1'
   771  00FB6E  30                 	db	48	;'0'
   772  00FB6F  20                 	db	32
   773  00FB70  2D                 	db	45
   774  00FB71  20                 	db	32
   775  00FB72  57                 	db	87	;'W'
   776  00FB73  72                 	db	114	;'r'
   777  00FB74  69                 	db	105	;'i'
   778  00FB75  74                 	db	116	;'t'
   779  00FB76  65                 	db	101	;'e'
   780  00FB77  20                 	db	32
   781  00FB78  4D                 	db	77	;'M'
   782  00FB79  75                 	db	117	;'u'
   783  00FB7A  6C                 	db	108	;'l'
   784  00FB7B  74                 	db	116	;'t'
   785  00FB7C  69                 	db	105	;'i'
   786  00FB7D  70                 	db	112	;'p'
   787  00FB7E  6C                 	db	108	;'l'
   788  00FB7F  65                 	db	101	;'e'
   789  00FB80  20                 	db	32
   790  00FB81  52                 	db	82	;'R'
   791  00FB82  65                 	db	101	;'e'
   792  00FB83  67                 	db	103	;'g'
   793  00FB84  69                 	db	105	;'i'
   794  00FB85  73                 	db	115	;'s'
   795  00FB86  74                 	db	116	;'t'
   796  00FB87  65                 	db	101	;'e'
   797  00FB88  72                 	db	114	;'r'
   798  00FB89  73                 	db	115	;'s'
   799  00FB8A  20                 	db	32
   800  00FB8B  28                 	db	40
   801  00FB8C  4D                 	db	77	;'M'
   802  00FB8D  61                 	db	97	;'a'
   803  00FB8E  78                 	db	120	;'x'
   804  00FB8F  20                 	db	32
   805  00FB90  33                 	db	51	;'3'
   806  00FB91  32                 	db	50	;'2'
   807  00FB92  78                 	db	120	;'x'
   808  00FB93  20                 	db	32
   809  00FB94  31                 	db	49	;'1'
   810  00FB95  36                 	db	54	;'6'
   811  00FB96  62                 	db	98	;'b'
   812  00FB97  69                 	db	105	;'i'
   813  00FB98  74                 	db	116	;'t'
   814  00FB99  29                 	db	41
   815  00FB9A  0D                 	db	13
   816  00FB9B  0A                 	db	10
   817  00FB9C  0A                 	db	10
   818  00FB9D  00                 	db	0
   819  00FB9E                     STR_6:
   820                           
   821                           ; BSR set to: 0
   822  00FB9E  43                 	db	67	;'C'
   823  00FB9F  6F                 	db	111	;'o'
   824  00FBA0  6D                 	db	109	;'m'
   825  00FBA1  70                 	db	112	;'p'
   826  00FBA2  6C                 	db	108	;'l'
   827  00FBA3  65                 	db	101	;'e'
   828  00FBA4  74                 	db	116	;'t'
   829  00FBA5  65                 	db	101	;'e'
   830  00FBA6  64                 	db	100	;'d'
   831  00FBA7  20                 	db	32
   832  00FBA8  41                 	db	65	;'A'
   833  00FBA9  64                 	db	100	;'d'
   834  00FBAA  64                 	db	100	;'d'
   835  00FBAB  69                 	db	105	;'i'
   836  00FBAC  6E                 	db	110	;'n'
   837  00FBAD  67                 	db	103	;'g'
   838  00FBAE  20                 	db	32
   839  00FBAF  72                 	db	114	;'r'
   840  00FBB0  78                 	db	120	;'x'
   841  00FBB1  44                 	db	68	;'D'
   842  00FBB2  61                 	db	97	;'a'
   843  00FBB3  74                 	db	116	;'t'
   844  00FBB4  61                 	db	97	;'a'
   845  00FBB5  20                 	db	32
   846  00FBB6  42                 	db	66	;'B'
   847  00FBB7  75                 	db	117	;'u'
   848  00FBB8  66                 	db	102	;'f'
   849  00FBB9  66                 	db	102	;'f'
   850  00FBBA  65                 	db	101	;'e'
   851  00FBBB  72                 	db	114	;'r'
   852  00FBBC  20                 	db	32
   853  00FBBD  74                 	db	116	;'t'
   854  00FBBE  6F                 	db	111	;'o'
   855  00FBBF  20                 	db	32
   856  00FBC0  4D                 	db	77	;'M'
   857  00FBC1  6F                 	db	111	;'o'
   858  00FBC2  64                 	db	100	;'d'
   859  00FBC3  62                 	db	98	;'b'
   860  00FBC4  75                 	db	117	;'u'
   861  00FBC5  73                 	db	115	;'s'
   862  00FBC6  44                 	db	68	;'D'
   863  00FBC7  61                 	db	97	;'a'
   864  00FBC8  74                 	db	116	;'t'
   865  00FBC9  61                 	db	97	;'a'
   866  00FBCA  20                 	db	32
   867  00FBCB  41                 	db	65	;'A'
   868  00FBCC  72                 	db	114	;'r'
   869  00FBCD  72                 	db	114	;'r'
   870  00FBCE  61                 	db	97	;'a'
   871  00FBCF  79                 	db	121	;'y'
   872  00FBD0  0D                 	db	13
   873  00FBD1  0A                 	db	10
   874  00FBD2  0A                 	db	10
   875  00FBD3  00                 	db	0
   876  00FBD4                     STR_36:
   877                           
   878                           ; BSR set to: 0
   879  00FBD4  20                 	db	32
   880  00FBD5  20                 	db	32
   881  00FBD6  20                 	db	32
   882  00FBD7  30                 	db	48	;'0'
   883  00FBD8  78                 	db	120	;'x'
   884  00FBD9  30                 	db	48	;'0'
   885  00FBDA  33                 	db	51	;'3'
   886  00FBDB  20                 	db	32
   887  00FBDC  2D                 	db	45
   888  00FBDD  20                 	db	32
   889  00FBDE  52                 	db	82	;'R'
   890  00FBDF  65                 	db	101	;'e'
   891  00FBE0  61                 	db	97	;'a'
   892  00FBE1  64                 	db	100	;'d'
   893  00FBE2  20                 	db	32
   894  00FBE3  4D                 	db	77	;'M'
   895  00FBE4  75                 	db	117	;'u'
   896  00FBE5  6C                 	db	108	;'l'
   897  00FBE6  74                 	db	116	;'t'
   898  00FBE7  69                 	db	105	;'i'
   899  00FBE8  70                 	db	112	;'p'
   900  00FBE9  6C                 	db	108	;'l'
   901  00FBEA  65                 	db	101	;'e'
   902  00FBEB  20                 	db	32
   903  00FBEC  52                 	db	82	;'R'
   904  00FBED  65                 	db	101	;'e'
   905  00FBEE  67                 	db	103	;'g'
   906  00FBEF  69                 	db	105	;'i'
   907  00FBF0  73                 	db	115	;'s'
   908  00FBF1  74                 	db	116	;'t'
   909  00FBF2  65                 	db	101	;'e'
   910  00FBF3  72                 	db	114	;'r'
   911  00FBF4  73                 	db	115	;'s'
   912  00FBF5  20                 	db	32
   913  00FBF6  28                 	db	40
   914  00FBF7  4D                 	db	77	;'M'
   915  00FBF8  61                 	db	97	;'a'
   916  00FBF9  78                 	db	120	;'x'
   917  00FBFA  20                 	db	32
   918  00FBFB  33                 	db	51	;'3'
   919  00FBFC  32                 	db	50	;'2'
   920  00FBFD  78                 	db	120	;'x'
   921  00FBFE  20                 	db	32
   922  00FBFF  31                 	db	49	;'1'
   923  00FC00  36                 	db	54	;'6'
   924  00FC01  62                 	db	98	;'b'
   925  00FC02  69                 	db	105	;'i'
   926  00FC03  74                 	db	116	;'t'
   927  00FC04  29                 	db	41
   928  00FC05  0D                 	db	13
   929  00FC06  0A                 	db	10
   930  00FC07  00                 	db	0
   931  00FC08                     STR_32:
   932                           
   933                           ; BSR set to: 0
   934  00FC08  43                 	db	67	;'C'
   935  00FC09  6F                 	db	111	;'o'
   936  00FC0A  6D                 	db	109	;'m'
   937  00FC0B  70                 	db	112	;'p'
   938  00FC0C  69                 	db	105	;'i'
   939  00FC0D  6C                 	db	108	;'l'
   940  00FC0E  65                 	db	101	;'e'
   941  00FC0F  64                 	db	100	;'d'
   942  00FC10  20                 	db	32
   943  00FC11  6F                 	db	111	;'o'
   944  00FC12  6E                 	db	110	;'n'
   945  00FC13  20                 	db	32
   946  00FC14  25                 	db	37
   947  00FC15  73                 	db	115	;'s'
   948  00FC16  20                 	db	32
   949  00FC17  61                 	db	97	;'a'
   950  00FC18  74                 	db	116	;'t'
   951  00FC19  20                 	db	32
   952  00FC1A  25                 	db	37
   953  00FC1B  73                 	db	115	;'s'
   954  00FC1C  20                 	db	32
   955  00FC1D  62                 	db	98	;'b'
   956  00FC1E  79                 	db	121	;'y'
   957  00FC1F  20                 	db	32
   958  00FC20  58                 	db	88	;'X'
   959  00FC21  43                 	db	67	;'C'
   960  00FC22  38                 	db	56	;'8'
   961  00FC23  20                 	db	32
   962  00FC24  76                 	db	118	;'v'
   963  00FC25  65                 	db	101	;'e'
   964  00FC26  72                 	db	114	;'r'
   965  00FC27  73                 	db	115	;'s'
   966  00FC28  69                 	db	105	;'i'
   967  00FC29  6F                 	db	111	;'o'
   968  00FC2A  6E                 	db	110	;'n'
   969  00FC2B  20                 	db	32
   970  00FC2C  25                 	db	37
   971  00FC2D  75                 	db	117	;'u'
   972  00FC2E  0D                 	db	13
   973  00FC2F  0A                 	db	10
   974  00FC30  0A                 	db	10
   975  00FC31  00                 	db	0
   976  00FC32                     STR_47:
   977                           
   978                           ; BSR set to: 0
   979  00FC32  45                 	db	69	;'E'
   980  00FC33  6E                 	db	110	;'n'
   981  00FC34  74                 	db	116	;'t'
   982  00FC35  65                 	db	101	;'e'
   983  00FC36  72                 	db	114	;'r'
   984  00FC37  20                 	db	32
   985  00FC38  63                 	db	99	;'c'
   986  00FC39  61                 	db	97	;'a'
   987  00FC3A  72                 	db	114	;'r'
   988  00FC3B  64                 	db	100	;'d'
   989  00FC3C  20                 	db	32
   990  00FC3D  25                 	db	37
   991  00FC3E  73                 	db	115	;'s'
   992  00FC3F  20                 	db	32
   993  00FC40  28                 	db	40
   994  00FC41  6D                 	db	109	;'m'
   995  00FC42  61                 	db	97	;'a'
   996  00FC43  78                 	db	120	;'x'
   997  00FC44  20                 	db	32
   998  00FC45  25                 	db	37
   999  00FC46  69                 	db	105	;'i'
  1000  00FC47  20                 	db	32
  1001  00FC48  63                 	db	99	;'c'
  1002  00FC49  68                 	db	104	;'h'
  1003  00FC4A  61                 	db	97	;'a'
  1004  00FC4B  72                 	db	114	;'r'
  1005  00FC4C  61                 	db	97	;'a'
  1006  00FC4D  63                 	db	99	;'c'
  1007  00FC4E  74                 	db	116	;'t'
  1008  00FC4F  65                 	db	101	;'e'
  1009  00FC50  72                 	db	114	;'r'
  1010  00FC51  73                 	db	115	;'s'
  1011  00FC52  29                 	db	41
  1012  00FC53  3A                 	db	58	;':'
  1013  00FC54  20                 	db	32
  1014  00FC55  00                 	db	0
  1015  00FC56                     STR_11:
  1016                           
  1017                           ; BSR set to: 0
  1018  00FC56  63                 	db	99	;'c'
  1019  00FC57  72                 	db	114	;'r'
  1020  00FC58  63                 	db	99	;'c'
  1021  00FC59  48                 	db	72	;'H'
  1022  00FC5A  69                 	db	105	;'i'
  1023  00FC5B  67                 	db	103	;'g'
  1024  00FC5C  68                 	db	104	;'h'
  1025  00FC5D  3A                 	db	58	;':'
  1026  00FC5E  20                 	db	32
  1027  00FC5F  30                 	db	48	;'0'
  1028  00FC60  78                 	db	120	;'x'
  1029  00FC61  25                 	db	37
  1030  00FC62  30                 	db	48	;'0'
  1031  00FC63  32                 	db	50	;'2'
  1032  00FC64  78                 	db	120	;'x'
  1033  00FC65  20                 	db	32
  1034  00FC66  20                 	db	32
  1035  00FC67  63                 	db	99	;'c'
  1036  00FC68  72                 	db	114	;'r'
  1037  00FC69  63                 	db	99	;'c'
  1038  00FC6A  4C                 	db	76	;'L'
  1039  00FC6B  6F                 	db	111	;'o'
  1040  00FC6C  77                 	db	119	;'w'
  1041  00FC6D  3A                 	db	58	;':'
  1042  00FC6E  20                 	db	32
  1043  00FC6F  30                 	db	48	;'0'
  1044  00FC70  78                 	db	120	;'x'
  1045  00FC71  25                 	db	37
  1046  00FC72  30                 	db	48	;'0'
  1047  00FC73  32                 	db	50	;'2'
  1048  00FC74  78                 	db	120	;'x'
  1049  00FC75  20                 	db	32
  1050  00FC76  20                 	db	32
  1051  00FC77  0D                 	db	13
  1052  00FC78  0A                 	db	10
  1053  00FC79  00                 	db	0
  1054  00FC7A                     STR_39:
  1055                           
  1056                           ; BSR set to: 0
  1057  00FC7A  44                 	db	68	;'D'
  1058  00FC7B  65                 	db	101	;'e'
  1059  00FC7C  6C                 	db	108	;'l'
  1060  00FC7D  20                 	db	32
  1061  00FC7E  46                 	db	70	;'F'
  1062  00FC7F  69                 	db	105	;'i'
  1063  00FC80  72                 	db	114	;'r'
  1064  00FC81  73                 	db	115	;'s'
  1065  00FC82  74                 	db	116	;'t'
  1066  00FC83  20                 	db	32
  1067  00FC84  43                 	db	67	;'C'
  1068  00FC85  68                 	db	104	;'h'
  1069  00FC86  61                 	db	97	;'a'
  1070  00FC87  72                 	db	114	;'r'
  1071  00FC88  2C                 	db	44
  1072  00FC89  20                 	db	32
  1073  00FC8A  6E                 	db	110	;'n'
  1074  00FC8B  6F                 	db	111	;'o'
  1075  00FC8C  77                 	db	119	;'w'
  1076  00FC8D  20                 	db	32
  1077  00FC8E  63                 	db	99	;'c'
  1078  00FC8F  6F                 	db	111	;'o'
  1079  00FC90  6E                 	db	110	;'n'
  1080  00FC91  74                 	db	116	;'t'
  1081  00FC92  61                 	db	97	;'a'
  1082  00FC93  69                 	db	105	;'i'
  1083  00FC94  6E                 	db	110	;'n'
  1084  00FC95  73                 	db	115	;'s'
  1085  00FC96  20                 	db	32
  1086  00FC97  25                 	db	37
  1087  00FC98  73                 	db	115	;'s'
  1088  00FC99  20                 	db	32
  1089  00FC9A  0D                 	db	13
  1090  00FC9B  0A                 	db	10
  1091  00FC9C  00                 	db	0
  1092  00FC9D                     STR_38:
  1093                           
  1094                           ; BSR set to: 0
  1095  00FC9D  49                 	db	73	;'I'
  1096  00FC9E  6E                 	db	110	;'n'
  1097  00FC9F  69                 	db	105	;'i'
  1098  00FCA0  74                 	db	116	;'t'
  1099  00FCA1  61                 	db	97	;'a'
  1100  00FCA2  6C                 	db	108	;'l'
  1101  00FCA3  69                 	db	105	;'i'
  1102  00FCA4  73                 	db	115	;'s'
  1103  00FCA5  61                 	db	97	;'a'
  1104  00FCA6  74                 	db	116	;'t'
  1105  00FCA7  69                 	db	105	;'i'
  1106  00FCA8  6F                 	db	111	;'o'
  1107  00FCA9  6E                 	db	110	;'n'
  1108  00FCAA  20                 	db	32
  1109  00FCAB  43                 	db	67	;'C'
  1110  00FCAC  6F                 	db	111	;'o'
  1111  00FCAD  6D                 	db	109	;'m'
  1112  00FCAE  70                 	db	112	;'p'
  1113  00FCAF  6C                 	db	108	;'l'
  1114  00FCB0  65                 	db	101	;'e'
  1115  00FCB1  74                 	db	116	;'t'
  1116  00FCB2  65                 	db	101	;'e'
  1117  00FCB3  20                 	db	32
  1118  00FCB4  2D                 	db	45
  1119  00FCB5  20                 	db	32
  1120  00FCB6  52                 	db	82	;'R'
  1121  00FCB7  65                 	db	101	;'e'
  1122  00FCB8  61                 	db	97	;'a'
  1123  00FCB9  64                 	db	100	;'d'
  1124  00FCBA  79                 	db	121	;'y'
  1125  00FCBB  0D                 	db	13
  1126  00FCBC  0A                 	db	10
  1127  00FCBD  0A                 	db	10
  1128  00FCBE  00                 	db	0
  1129  00FCBF                     STR_49:
  1130                           
  1131                           ; BSR set to: 0
  1132  00FCBF  0D                 	db	13
  1133  00FCC0  0A                 	db	10
  1134  00FCC1  45                 	db	69	;'E'
  1135  00FCC2  6E                 	db	110	;'n'
  1136  00FCC3  74                 	db	116	;'t'
  1137  00FCC4  65                 	db	101	;'e'
  1138  00FCC5  72                 	db	114	;'r'
  1139  00FCC6  65                 	db	101	;'e'
  1140  00FCC7  64                 	db	100	;'d'
  1141  00FCC8  3A                 	db	58	;':'
  1142  00FCC9  20                 	db	32
  1143  00FCCA  25                 	db	37
  1144  00FCCB  73                 	db	115	;'s'
  1145  00FCCC  20                 	db	32
  1146  00FCCD  0D                 	db	13
  1147  00FCCE  0A                 	db	10
  1148  00FCCF  20                 	db	32
  1149  00FCD0  43                 	db	67	;'C'
  1150  00FCD1  6F                 	db	111	;'o'
  1151  00FCD2  6E                 	db	110	;'n'
  1152  00FCD3  66                 	db	102	;'f'
  1153  00FCD4  69                 	db	105	;'i'
  1154  00FCD5  72                 	db	114	;'r'
  1155  00FCD6  6D                 	db	109	;'m'
  1156  00FCD7  20                 	db	32
  1157  00FCD8  20                 	db	32
  1158  00FCD9  59                 	db	89	;'Y'
  1159  00FCDA  7C                 	db	124
  1160  00FCDB  4E                 	db	78	;'N'
  1161  00FCDC  3F                 	db	63	;'?'
  1162  00FCDD  3A                 	db	58	;':'
  1163  00FCDE  20                 	db	32
  1164  00FCDF  00                 	db	0
  1165  00FCE0                     STR_26:
  1166                           
  1167                           ; BSR set to: 0
  1168  00FCE0  4D                 	db	77	;'M'
  1169  00FCE1  6F                 	db	111	;'o'
  1170  00FCE2  64                 	db	100	;'d'
  1171  00FCE3  44                 	db	68	;'D'
  1172  00FCE4  61                 	db	97	;'a'
  1173  00FCE5  74                 	db	116	;'t'
  1174  00FCE6  43                 	db	67	;'C'
  1175  00FCE7  6E                 	db	110	;'n'
  1176  00FCE8  74                 	db	116	;'t'
  1177  00FCE9  3A                 	db	58	;':'
  1178  00FCEA  20                 	db	32
  1179  00FCEB  25                 	db	37
  1180  00FCEC  69                 	db	105	;'i'
  1181  00FCED  20                 	db	32
  1182  00FCEE  45                 	db	69	;'E'
  1183  00FCEF  78                 	db	120	;'x'
  1184  00FCF0  70                 	db	112	;'p'
  1185  00FCF1  65                 	db	101	;'e'
  1186  00FCF2  74                 	db	116	;'t'
  1187  00FCF3  65                 	db	101	;'e'
  1188  00FCF4  64                 	db	100	;'d'
  1189  00FCF5  42                 	db	66	;'B'
  1190  00FCF6  79                 	db	121	;'y'
  1191  00FCF7  74                 	db	116	;'t'
  1192  00FCF8  65                 	db	101	;'e'
  1193  00FCF9  73                 	db	115	;'s'
  1194  00FCFA  20                 	db	32
  1195  00FCFB  25                 	db	37
  1196  00FCFC  69                 	db	105	;'i'
  1197  00FCFD  20                 	db	32
  1198  00FCFE  0D                 	db	13
  1199  00FCFF  0A                 	db	10
  1200  00FD00  00                 	db	0
  1201  00FD01                     STR_8:
  1202                           
  1203                           ; BSR set to: 0
  1204  00FD01  4D                 	db	77	;'M'
  1205  00FD02  6F                 	db	111	;'o'
  1206  00FD03  64                 	db	100	;'d'
  1207  00FD04  62                 	db	98	;'b'
  1208  00FD05  75                 	db	117	;'u'
  1209  00FD06  73                 	db	115	;'s'
  1210  00FD07  20                 	db	32
  1211  00FD08  44                 	db	68	;'D'
  1212  00FD09  61                 	db	97	;'a'
  1213  00FD0A  74                 	db	116	;'t'
  1214  00FD0B  61                 	db	97	;'a'
  1215  00FD0C  20                 	db	32
  1216  00FD0D  43                 	db	67	;'C'
  1217  00FD0E  61                 	db	97	;'a'
  1218  00FD0F  70                 	db	112	;'p'
  1219  00FD10  74                 	db	116	;'t'
  1220  00FD11  75                 	db	117	;'u'
  1221  00FD12  72                 	db	114	;'r'
  1222  00FD13  65                 	db	101	;'e'
  1223  00FD14  20                 	db	32
  1224  00FD15  43                 	db	67	;'C'
  1225  00FD16  6F                 	db	111	;'o'
  1226  00FD17  6D                 	db	109	;'m'
  1227  00FD18  70                 	db	112	;'p'
  1228  00FD19  6C                 	db	108	;'l'
  1229  00FD1A  65                 	db	101	;'e'
  1230  00FD1B  74                 	db	116	;'t'
  1231  00FD1C  65                 	db	101	;'e'
  1232  00FD1D  3A                 	db	58	;':'
  1233  00FD1E  0D                 	db	13
  1234  00FD1F  0A                 	db	10
  1235  00FD20  00                 	db	0
  1236  00FD21                     STR_54:
  1237                           
  1238                           ; BSR set to: 0
  1239  00FD21  45                 	db	69	;'E'
  1240  00FD22  45                 	db	69	;'E'
  1241  00FD23  50                 	db	80	;'P'
  1242  00FD24  52                 	db	82	;'R'
  1243  00FD25  4F                 	db	79	;'O'
  1244  00FD26  4D                 	db	77	;'M'
  1245  00FD27  3A                 	db	58	;':'
  1246  00FD28  20                 	db	32
  1247  00FD29  30                 	db	48	;'0'
  1248  00FD2A  78                 	db	120	;'x'
  1249  00FD2B  25                 	db	37
  1250  00FD2C  30                 	db	48	;'0'
  1251  00FD2D  32                 	db	50	;'2'
  1252  00FD2E  78                 	db	120	;'x'
  1253  00FD2F  20                 	db	32
  1254  00FD30  41                 	db	65	;'A'
  1255  00FD31  64                 	db	100	;'d'
  1256  00FD32  64                 	db	100	;'d'
  1257  00FD33  3A                 	db	58	;':'
  1258  00FD34  20                 	db	32
  1259  00FD35  30                 	db	48	;'0'
  1260  00FD36  78                 	db	120	;'x'
  1261  00FD37  25                 	db	37
  1262  00FD38  30                 	db	48	;'0'
  1263  00FD39  32                 	db	50	;'2'
  1264  00FD3A  78                 	db	120	;'x'
  1265  00FD3B  20                 	db	32
  1266  00FD3C  0D                 	db	13
  1267  00FD3D  0A                 	db	10
  1268  00FD3E  00                 	db	0
  1269  00FD3F                     STR_44:
  1270                           
  1271                           ; BSR set to: 0
  1272  00FD3F  43                 	db	67	;'C'
  1273  00FD40  6C                 	db	108	;'l'
  1274  00FD41  65                 	db	101	;'e'
  1275  00FD42  61                 	db	97	;'a'
  1276  00FD43  72                 	db	114	;'r'
  1277  00FD44  20                 	db	32
  1278  00FD45  30                 	db	48	;'0'
  1279  00FD46  78                 	db	120	;'x'
  1280  00FD47  25                 	db	37
  1281  00FD48  30                 	db	48	;'0'
  1282  00FD49  34                 	db	52	;'4'
  1283  00FD4A  78                 	db	120	;'x'
  1284  00FD4B  20                 	db	32
  1285  00FD4C  4E                 	db	78	;'N'
  1286  00FD4D  75                 	db	117	;'u'
  1287  00FD4E  6D                 	db	109	;'m'
  1288  00FD4F  42                 	db	66	;'B'
  1289  00FD50  79                 	db	121	;'y'
  1290  00FD51  74                 	db	116	;'t'
  1291  00FD52  65                 	db	101	;'e'
  1292  00FD53  3A                 	db	58	;':'
  1293  00FD54  20                 	db	32
  1294  00FD55  20                 	db	32
  1295  00FD56  25                 	db	37
  1296  00FD57  69                 	db	105	;'i'
  1297  00FD58  20                 	db	32
  1298  00FD59  0D                 	db	13
  1299  00FD5A  0A                 	db	10
  1300  00FD5B  00                 	db	0
  1301  00FD5C                     STR_56:
  1302                           
  1303                           ; BSR set to: 0
  1304  00FD5C  0D                 	db	13
  1305  00FD5D  0A                 	db	10
  1306  00FD5E  20                 	db	32
  1307  00FD5F  56                 	db	86	;'V'
  1308  00FD60  61                 	db	97	;'a'
  1309  00FD61  6C                 	db	108	;'l'
  1310  00FD62  69                 	db	105	;'i'
  1311  00FD63  64                 	db	100	;'d'
  1312  00FD64  61                 	db	97	;'a'
  1313  00FD65  74                 	db	116	;'t'
  1314  00FD66  69                 	db	105	;'i'
  1315  00FD67  6E                 	db	110	;'n'
  1316  00FD68  67                 	db	103	;'g'
  1317  00FD69  20                 	db	32
  1318  00FD6A  43                 	db	67	;'C'
  1319  00FD6B  6F                 	db	111	;'o'
  1320  00FD6C  6D                 	db	109	;'m'
  1321  00FD6D  6D                 	db	109	;'m'
  1322  00FD6E  61                 	db	97	;'a'
  1323  00FD6F  6E                 	db	110	;'n'
  1324  00FD70  64                 	db	100	;'d'
  1325  00FD71  3A                 	db	58	;':'
  1326  00FD72  20                 	db	32
  1327  00FD73  25                 	db	37
  1328  00FD74  73                 	db	115	;'s'
  1329  00FD75  20                 	db	32
  1330  00FD76  0D                 	db	13
  1331  00FD77  0A                 	db	10
  1332  00FD78  00                 	db	0
  1333  00FD79                     STR_35:
  1334                           
  1335                           ; BSR set to: 0
  1336  00FD79  46                 	db	70	;'F'
  1337  00FD7A  75                 	db	117	;'u'
  1338  00FD7B  6E                 	db	110	;'n'
  1339  00FD7C  63                 	db	99	;'c'
  1340  00FD7D  74                 	db	116	;'t'
  1341  00FD7E  69                 	db	105	;'i'
  1342  00FD7F  6F                 	db	111	;'o'
  1343  00FD80  6E                 	db	110	;'n'
  1344  00FD81  20                 	db	32
  1345  00FD82  43                 	db	67	;'C'
  1346  00FD83  6F                 	db	111	;'o'
  1347  00FD84  64                 	db	100	;'d'
  1348  00FD85  65                 	db	101	;'e'
  1349  00FD86  73                 	db	115	;'s'
  1350  00FD87  20                 	db	32
  1351  00FD88  53                 	db	83	;'S'
  1352  00FD89  75                 	db	117	;'u'
  1353  00FD8A  70                 	db	112	;'p'
  1354  00FD8B  70                 	db	112	;'p'
  1355  00FD8C  6F                 	db	111	;'o'
  1356  00FD8D  72                 	db	114	;'r'
  1357  00FD8E  74                 	db	116	;'t'
  1358  00FD8F  65                 	db	101	;'e'
  1359  00FD90  64                 	db	100	;'d'
  1360  00FD91  3A                 	db	58	;':'
  1361  00FD92  0D                 	db	13
  1362  00FD93  0A                 	db	10
  1363  00FD94  00                 	db	0
  1364  00FD95                     STR_7:
  1365                           
  1366                           ; BSR set to: 0
  1367  00FD95  4D                 	db	77	;'M'
  1368  00FD96  6F                 	db	111	;'o'
  1369  00FD97  64                 	db	100	;'d'
  1370  00FD98  44                 	db	68	;'D'
  1371  00FD99  61                 	db	97	;'a'
  1372  00FD9A  74                 	db	116	;'t'
  1373  00FD9B  61                 	db	97	;'a'
  1374  00FD9C  43                 	db	67	;'C'
  1375  00FD9D  6E                 	db	110	;'n'
  1376  00FD9E  74                 	db	116	;'t'
  1377  00FD9F  20                 	db	32
  1378  00FDA0  73                 	db	115	;'s'
  1379  00FDA1  69                 	db	105	;'i'
  1380  00FDA2  74                 	db	116	;'t'
  1381  00FDA3  74                 	db	116	;'t'
  1382  00FDA4  69                 	db	105	;'i'
  1383  00FDA5  6E                 	db	110	;'n'
  1384  00FDA6  67                 	db	103	;'g'
  1385  00FDA7  20                 	db	32
  1386  00FDA8  61                 	db	97	;'a'
  1387  00FDA9  74                 	db	116	;'t'
  1388  00FDAA  20                 	db	32
  1389  00FDAB  25                 	db	37
  1390  00FDAC  69                 	db	105	;'i'
  1391  00FDAD  0D                 	db	13
  1392  00FDAE  0A                 	db	10
  1393  00FDAF  0A                 	db	10
  1394  00FDB0  00                 	db	0
  1395  00FDB1                     STR_20:
  1396                           
  1397                           ; BSR set to: 0
  1398  00FDB1  4D                 	db	77	;'M'
  1399  00FDB2  6F                 	db	111	;'o'
  1400  00FDB3  64                 	db	100	;'d'
  1401  00FDB4  62                 	db	98	;'b'
  1402  00FDB5  75                 	db	117	;'u'
  1403  00FDB6  73                 	db	115	;'s'
  1404  00FDB7  20                 	db	32
  1405  00FDB8  52                 	db	82	;'R'
  1406  00FDB9  65                 	db	101	;'e'
  1407  00FDBA  73                 	db	115	;'s'
  1408  00FDBB  70                 	db	112	;'p'
  1409  00FDBC  6F                 	db	111	;'o'
  1410  00FDBD  6E                 	db	110	;'n'
  1411  00FDBE  73                 	db	115	;'s'
  1412  00FDBF  65                 	db	101	;'e'
  1413  00FDC0  20                 	db	32
  1414  00FDC1  43                 	db	67	;'C'
  1415  00FDC2  6F                 	db	111	;'o'
  1416  00FDC3  75                 	db	117	;'u'
  1417  00FDC4  6E                 	db	110	;'n'
  1418  00FDC5  74                 	db	116	;'t'
  1419  00FDC6  20                 	db	32
  1420  00FDC7  25                 	db	37
  1421  00FDC8  69                 	db	105	;'i'
  1422  00FDC9  3A                 	db	58	;':'
  1423  00FDCA  0D                 	db	13
  1424  00FDCB  0A                 	db	10
  1425  00FDCC  00                 	db	0
  1426  00FDCD                     STR_2:
  1427                           
  1428                           ; BSR set to: 0
  1429  00FDCD  55                 	db	85	;'U'
  1430  00FDCE  6E                 	db	110	;'n'
  1431  00FDCF  73                 	db	115	;'s'
  1432  00FDD0  75                 	db	117	;'u'
  1433  00FDD1  70                 	db	112	;'p'
  1434  00FDD2  70                 	db	112	;'p'
  1435  00FDD3  6F                 	db	111	;'o'
  1436  00FDD4  72                 	db	114	;'r'
  1437  00FDD5  74                 	db	116	;'t'
  1438  00FDD6  65                 	db	101	;'e'
  1439  00FDD7  64                 	db	100	;'d'
  1440  00FDD8  20                 	db	32
  1441  00FDD9  46                 	db	70	;'F'
  1442  00FDDA  75                 	db	117	;'u'
  1443  00FDDB  6E                 	db	110	;'n'
  1444  00FDDC  63                 	db	99	;'c'
  1445  00FDDD  74                 	db	116	;'t'
  1446  00FDDE  69                 	db	105	;'i'
  1447  00FDDF  6F                 	db	111	;'o'
  1448  00FDE0  6E                 	db	110	;'n'
  1449  00FDE1  20                 	db	32
  1450  00FDE2  43                 	db	67	;'C'
  1451  00FDE3  6F                 	db	111	;'o'
  1452  00FDE4  64                 	db	100	;'d'
  1453  00FDE5  65                 	db	101	;'e'
  1454  00FDE6  0D                 	db	13
  1455  00FDE7  0A                 	db	10
  1456  00FDE8  00                 	db	0
  1457  00FDE9                     STR_50:
  1458                           
  1459                           ; BSR set to: 0
  1460  00FDE9  59                 	db	89	;'Y'
  1461  00FDEA  0D                 	db	13
  1462  00FDEB  0A                 	db	10
  1463  00FDEC  53                 	db	83	;'S'
  1464  00FDED  61                 	db	97	;'a'
  1465  00FDEE  76                 	db	118	;'v'
  1466  00FDEF  69                 	db	105	;'i'
  1467  00FDF0  6E                 	db	110	;'n'
  1468  00FDF1  67                 	db	103	;'g'
  1469  00FDF2  20                 	db	32
  1470  00FDF3  53                 	db	83	;'S'
  1471  00FDF4  65                 	db	101	;'e'
  1472  00FDF5  72                 	db	114	;'r'
  1473  00FDF6  69                 	db	105	;'i'
  1474  00FDF7  61                 	db	97	;'a'
  1475  00FDF8  6C                 	db	108	;'l'
  1476  00FDF9  20                 	db	32
  1477  00FDFA  4E                 	db	78	;'N'
  1478  00FDFB  75                 	db	117	;'u'
  1479  00FDFC  6D                 	db	109	;'m'
  1480  00FDFD  62                 	db	98	;'b'
  1481  00FDFE  65                 	db	101	;'e'
  1482  00FDFF  72                 	db	114	;'r'
  1483  00FE00  20                 	db	32
  1484  00FE01  0D                 	db	13
  1485  00FE02  0A                 	db	10
  1486  00FE03  00                 	db	0
  1487  00FE04                     STR_52:
  1488                           
  1489                           ; BSR set to: 0
  1490  00FE04  43                 	db	67	;'C'
  1491  00FE05  68                 	db	104	;'h'
  1492  00FE06  61                 	db	97	;'a'
  1493  00FE07  72                 	db	114	;'r'
  1494  00FE08  20                 	db	32
  1495  00FE09  30                 	db	48	;'0'
  1496  00FE0A  78                 	db	120	;'x'
  1497  00FE0B  25                 	db	37
  1498  00FE0C  30                 	db	48	;'0'
  1499  00FE0D  32                 	db	50	;'2'
  1500  00FE0E  78                 	db	120	;'x'
  1501  00FE0F  20                 	db	32
  1502  00FE10  69                 	db	105	;'i'
  1503  00FE11  6E                 	db	110	;'n'
  1504  00FE12  20                 	db	32
  1505  00FE13  30                 	db	48	;'0'
  1506  00FE14  78                 	db	120	;'x'
  1507  00FE15  25                 	db	37
  1508  00FE16  30                 	db	48	;'0'
  1509  00FE17  32                 	db	50	;'2'
  1510  00FE18  78                 	db	120	;'x'
  1511  00FE19  20                 	db	32
  1512  00FE1A  0D                 	db	13
  1513  00FE1B  0A                 	db	10
  1514  00FE1C  00                 	db	0
  1515  00FE1D                     STR_22:
  1516                           
  1517                           ; BSR set to: 0
  1518  00FE1D  20                 	db	32
  1519  00FE1E  20                 	db	32
  1520  00FE1F  20                 	db	32
  1521  00FE20  42                 	db	66	;'B'
  1522  00FE21  79                 	db	121	;'y'
  1523  00FE22  74                 	db	116	;'t'
  1524  00FE23  65                 	db	101	;'e'
  1525  00FE24  20                 	db	32
  1526  00FE25  25                 	db	37
  1527  00FE26  30                 	db	48	;'0'
  1528  00FE27  32                 	db	50	;'2'
  1529  00FE28  69                 	db	105	;'i'
  1530  00FE29  20                 	db	32
  1531  00FE2A  3A                 	db	58	;':'
  1532  00FE2B  20                 	db	32
  1533  00FE2C  30                 	db	48	;'0'
  1534  00FE2D  78                 	db	120	;'x'
  1535  00FE2E  25                 	db	37
  1536  00FE2F  30                 	db	48	;'0'
  1537  00FE30  32                 	db	50	;'2'
  1538  00FE31  78                 	db	120	;'x'
  1539  00FE32  20                 	db	32
  1540  00FE33  0D                 	db	13
  1541  00FE34  0A                 	db	10
  1542  00FE35  00                 	db	0
  1543  00FE36                     STR_53:
  1544                           
  1545                           ; BSR set to: 0
  1546  00FE36  53                 	db	83	;'S'
  1547  00FE37  65                 	db	101	;'e'
  1548  00FE38  72                 	db	114	;'r'
  1549  00FE39  69                 	db	105	;'i'
  1550  00FE3A  61                 	db	97	;'a'
  1551  00FE3B  6C                 	db	108	;'l'
  1552  00FE3C  20                 	db	32
  1553  00FE3D  4E                 	db	78	;'N'
  1554  00FE3E  75                 	db	117	;'u'
  1555  00FE3F  6D                 	db	109	;'m'
  1556  00FE40  62                 	db	98	;'b'
  1557  00FE41  65                 	db	101	;'e'
  1558  00FE42  72                 	db	114	;'r'
  1559  00FE43  20                 	db	32
  1560  00FE44  53                 	db	83	;'S'
  1561  00FE45  61                 	db	97	;'a'
  1562  00FE46  76                 	db	118	;'v'
  1563  00FE47  65                 	db	101	;'e'
  1564  00FE48  64                 	db	100	;'d'
  1565  00FE49  2E                 	db	46
  1566  00FE4A  20                 	db	32
  1567  00FE4B  0D                 	db	13
  1568  00FE4C  0A                 	db	10
  1569  00FE4D  00                 	db	0
  1570  00FE4E                     STR_27:
  1571                           
  1572                           ; BSR set to: 0
  1573  00FE4E  4D                 	db	77	;'M'
  1574  00FE4F  6F                 	db	111	;'o'
  1575  00FE50  64                 	db	100	;'d'
  1576  00FE51  62                 	db	98	;'b'
  1577  00FE52  75                 	db	117	;'u'
  1578  00FE53  73                 	db	115	;'s'
  1579  00FE54  20                 	db	32
  1580  00FE55  52                 	db	82	;'R'
  1581  00FE56  78                 	db	120	;'x'
  1582  00FE57  20                 	db	32
  1583  00FE58  47                 	db	71	;'G'
  1584  00FE59  6F                 	db	111	;'o'
  1585  00FE5A  6F                 	db	111	;'o'
  1586  00FE5B  64                 	db	100	;'d'
  1587  00FE5C  20                 	db	32
  1588  00FE5D  47                 	db	71	;'G'
  1589  00FE5E  6F                 	db	111	;'o'
  1590  00FE5F  6F                 	db	111	;'o'
  1591  00FE60  64                 	db	100	;'d'
  1592  00FE61  2E                 	db	46
  1593  00FE62  0D                 	db	13
  1594  00FE63  0A                 	db	10
  1595  00FE64  0A                 	db	10
  1596  00FE65  00                 	db	0
  1597  00FE66                     STR_24:
  1598                           
  1599                           ; BSR set to: 0
  1600  00FE66  53                 	db	83	;'S'
  1601  00FE67  6F                 	db	111	;'o'
  1602  00FE68  6D                 	db	109	;'m'
  1603  00FE69  65                 	db	101	;'e'
  1604  00FE6A  74                 	db	116	;'t'
  1605  00FE6B  68                 	db	104	;'h'
  1606  00FE6C  69                 	db	105	;'i'
  1607  00FE6D  6E                 	db	110	;'n'
  1608  00FE6E  67                 	db	103	;'g'
  1609  00FE6F  20                 	db	32
  1610  00FE70  69                 	db	105	;'i'
  1611  00FE71  6E                 	db	110	;'n'
  1612  00FE72  20                 	db	32
  1613  00FE73  45                 	db	69	;'E'
  1614  00FE74  53                 	db	83	;'S'
  1615  00FE75  55                 	db	85	;'U'
  1616  00FE76  41                 	db	65	;'A'
  1617  00FE77  52                 	db	82	;'R'
  1618  00FE78  54                 	db	84	;'T'
  1619  00FE79  31                 	db	49	;'1'
  1620  00FE7A  20                 	db	32
  1621  00FE7B  0D                 	db	13
  1622  00FE7C  0A                 	db	10
  1623  00FE7D  00                 	db	0
  1624  00FE7E                     STR_5:
  1625                           
  1626                           ; BSR set to: 0
  1627  00FE7E  52                 	db	82	;'R'
  1628  00FE7F  65                 	db	101	;'e'
  1629  00FE80  67                 	db	103	;'g'
  1630  00FE81  3A                 	db	58	;':'
  1631  00FE82  20                 	db	32
  1632  00FE83  25                 	db	37
  1633  00FE84  69                 	db	105	;'i'
  1634  00FE85  20                 	db	32
  1635  00FE86  44                 	db	68	;'D'
  1636  00FE87  61                 	db	97	;'a'
  1637  00FE88  74                 	db	116	;'t'
  1638  00FE89  61                 	db	97	;'a'
  1639  00FE8A  3A                 	db	58	;':'
  1640  00FE8B  20                 	db	32
  1641  00FE8C  30                 	db	48	;'0'
  1642  00FE8D  78                 	db	120	;'x'
  1643  00FE8E  25                 	db	37
  1644  00FE8F  30                 	db	48	;'0'
  1645  00FE90  34                 	db	52	;'4'
  1646  00FE91  78                 	db	120	;'x'
  1647  00FE92  20                 	db	32
  1648  00FE93  0D                 	db	13
  1649  00FE94  0A                 	db	10
  1650  00FE95  00                 	db	0
  1651  00FE96                     STR_9:
  1652                           
  1653                           ; BSR set to: 0
  1654  00FE96  20                 	db	32
  1655  00FE97  20                 	db	32
  1656  00FE98  20                 	db	32
  1657  00FE99  42                 	db	66	;'B'
  1658  00FE9A  79                 	db	121	;'y'
  1659  00FE9B  74                 	db	116	;'t'
  1660  00FE9C  65                 	db	101	;'e'
  1661  00FE9D  20                 	db	32
  1662  00FE9E  25                 	db	37
  1663  00FE9F  69                 	db	105	;'i'
  1664  00FEA0  20                 	db	32
  1665  00FEA1  3A                 	db	58	;':'
  1666  00FEA2  20                 	db	32
  1667  00FEA3  30                 	db	48	;'0'
  1668  00FEA4  78                 	db	120	;'x'
  1669  00FEA5  25                 	db	37
  1670  00FEA6  30                 	db	48	;'0'
  1671  00FEA7  32                 	db	50	;'2'
  1672  00FEA8  78                 	db	120	;'x'
  1673  00FEA9  20                 	db	32
  1674  00FEAA  0D                 	db	13
  1675  00FEAB  0A                 	db	10
  1676  00FEAC  00                 	db	0
  1677  00FEAD                     STR_31:
  1678                           
  1679                           ; BSR set to: 0
  1680  00FEAD  43                 	db	67	;'C'
  1681  00FEAE  61                 	db	97	;'a'
  1682  00FEAF  72                 	db	114	;'r'
  1683  00FEB0  64                 	db	100	;'d'
  1684  00FEB1  20                 	db	32
  1685  00FEB2  41                 	db	65	;'A'
  1686  00FEB3  64                 	db	100	;'d'
  1687  00FEB4  64                 	db	100	;'d'
  1688  00FEB5  72                 	db	114	;'r'
  1689  00FEB6  65                 	db	101	;'e'
  1690  00FEB7  73                 	db	115	;'s'
  1691  00FEB8  73                 	db	115	;'s'
  1692  00FEB9  2E                 	db	46
  1693  00FEBA  20                 	db	32
  1694  00FEBB  30                 	db	48	;'0'
  1695  00FEBC  78                 	db	120	;'x'
  1696  00FEBD  30                 	db	48	;'0'
  1697  00FEBE  35                 	db	53	;'5'
  1698  00FEBF  20                 	db	32
  1699  00FEC0  0D                 	db	13
  1700  00FEC1  0A                 	db	10
  1701  00FEC2  00                 	db	0
  1702  00FEC3                     STR_1:
  1703                           
  1704                           ; BSR set to: 0
  1705  00FEC3  46                 	db	70	;'F'
  1706  00FEC4  75                 	db	117	;'u'
  1707  00FEC5  6E                 	db	110	;'n'
  1708  00FEC6  63                 	db	99	;'c'
  1709  00FEC7  74                 	db	116	;'t'
  1710  00FEC8  69                 	db	105	;'i'
  1711  00FEC9  6F                 	db	111	;'o'
  1712  00FECA  6E                 	db	110	;'n'
  1713  00FECB  20                 	db	32
  1714  00FECC  43                 	db	67	;'C'
  1715  00FECD  6F                 	db	111	;'o'
  1716  00FECE  64                 	db	100	;'d'
  1717  00FECF  65                 	db	101	;'e'
  1718  00FED0  20                 	db	32
  1719  00FED1  30                 	db	48	;'0'
  1720  00FED2  78                 	db	120	;'x'
  1721  00FED3  31                 	db	49	;'1'
  1722  00FED4  30                 	db	48	;'0'
  1723  00FED5  0D                 	db	13
  1724  00FED6  0A                 	db	10
  1725  00FED7  00                 	db	0
  1726  00FED8                     STR_30:
  1727                           
  1728                           ; BSR set to: 0
  1729  00FED8  43                 	db	67	;'C'
  1730  00FED9  61                 	db	97	;'a'
  1731  00FEDA  72                 	db	114	;'r'
  1732  00FEDB  64                 	db	100	;'d'
  1733  00FEDC  20                 	db	32
  1734  00FEDD  53                 	db	83	;'S'
  1735  00FEDE  65                 	db	101	;'e'
  1736  00FEDF  72                 	db	114	;'r'
  1737  00FEE0  20                 	db	32
  1738  00FEE1  4E                 	db	78	;'N'
  1739  00FEE2  6F                 	db	111	;'o'
  1740  00FEE3  2E                 	db	46
  1741  00FEE4  20                 	db	32
  1742  00FEE5  25                 	db	37
  1743  00FEE6  73                 	db	115	;'s'
  1744  00FEE7  20                 	db	32
  1745  00FEE8  0D                 	db	13
  1746  00FEE9  0A                 	db	10
  1747  00FEEA  00                 	db	0
  1748  00FEEB                     STR_45:
  1749                           
  1750                           ; BSR set to: 0
  1751  00FEEB  53                 	db	83	;'S'
  1752  00FEEC  61                 	db	97	;'a'
  1753  00FEED  76                 	db	118	;'v'
  1754  00FEEE  69                 	db	105	;'i'
  1755  00FEEF  6E                 	db	110	;'n'
  1756  00FEF0  67                 	db	103	;'g'
  1757  00FEF1  20                 	db	32
  1758  00FEF2  43                 	db	67	;'C'
  1759  00FEF3  61                 	db	97	;'a'
  1760  00FEF4  72                 	db	114	;'r'
  1761  00FEF5  64                 	db	100	;'d'
  1762  00FEF6  20                 	db	32
  1763  00FEF7  44                 	db	68	;'D'
  1764  00FEF8  61                 	db	97	;'a'
  1765  00FEF9  74                 	db	116	;'t'
  1766  00FEFA  61                 	db	97	;'a'
  1767  00FEFB  0D                 	db	13
  1768  00FEFC  0A                 	db	10
  1769  00FEFD  00                 	db	0
  1770  00FEFE                     STR_28:
  1771                           
  1772                           ; BSR set to: 0
  1773  00FEFE  4D                 	db	77	;'M'
  1774  00FEFF  6F                 	db	111	;'o'
  1775  00FF00  64                 	db	100	;'d'
  1776  00FF01  62                 	db	98	;'b'
  1777  00FF02  75                 	db	117	;'u'
  1778  00FF03  73                 	db	115	;'s'
  1779  00FF04  20                 	db	32
  1780  00FF05  52                 	db	82	;'R'
  1781  00FF06  78                 	db	120	;'x'
  1782  00FF07  20                 	db	32
  1783  00FF08  42                 	db	66	;'B'
  1784  00FF09  61                 	db	97	;'a'
  1785  00FF0A  64                 	db	100	;'d'
  1786  00FF0B  2E                 	db	46
  1787  00FF0C  0D                 	db	13
  1788  00FF0D  0A                 	db	10
  1789  00FF0E  0A                 	db	10
  1790  00FF0F  00                 	db	0
  1791  00FF10                     STR_19:
  1792                           
  1793                           ; BSR set to: 0
  1794  00FF10  41                 	db	65	;'A'
  1795  00FF11  6E                 	db	110	;'n'
  1796  00FF12  61                 	db	97	;'a'
  1797  00FF13  6C                 	db	108	;'l'
  1798  00FF14  6F                 	db	111	;'o'
  1799  00FF15  67                 	db	103	;'g'
  1800  00FF16  75                 	db	117	;'u'
  1801  00FF17  65                 	db	101	;'e'
  1802  00FF18  20                 	db	32
  1803  00FF19  49                 	db	73	;'I'
  1804  00FF1A  6E                 	db	110	;'n'
  1805  00FF1B  70                 	db	112	;'p'
  1806  00FF1C  75                 	db	117	;'u'
  1807  00FF1D  74                 	db	116	;'t'
  1808  00FF1E  73                 	db	115	;'s'
  1809  00FF1F  0D                 	db	13
  1810  00FF20  0A                 	db	10
  1811  00FF21  00                 	db	0
  1812  00FF22                     STR_51:
  1813                           
  1814                           ; BSR set to: 0
  1815  00FF22  4E                 	db	78	;'N'
  1816  00FF23  75                 	db	117	;'u'
  1817  00FF24  6D                 	db	109	;'m'
  1818  00FF25  20                 	db	32
  1819  00FF26  43                 	db	67	;'C'
  1820  00FF27  68                 	db	104	;'h'
  1821  00FF28  61                 	db	97	;'a'
  1822  00FF29  72                 	db	114	;'r'
  1823  00FF2A  73                 	db	115	;'s'
  1824  00FF2B  3A                 	db	58	;':'
  1825  00FF2C  20                 	db	32
  1826  00FF2D  25                 	db	37
  1827  00FF2E  69                 	db	105	;'i'
  1828  00FF2F  20                 	db	32
  1829  00FF30  0D                 	db	13
  1830  00FF31  0A                 	db	10
  1831  00FF32  00                 	db	0
  1832  00FF33                     STR_42:
  1833                           
  1834                           ; BSR set to: 0
  1835  00FF33  44                 	db	68	;'D'
  1836  00FF34  65                 	db	101	;'e'
  1837  00FF35  62                 	db	98	;'b'
  1838  00FF36  75                 	db	117	;'u'
  1839  00FF37  67                 	db	103	;'g'
  1840  00FF38  20                 	db	32
  1841  00FF39  44                 	db	68	;'D'
  1842  00FF3A  69                 	db	105	;'i'
  1843  00FF3B  73                 	db	115	;'s'
  1844  00FF3C  61                 	db	97	;'a'
  1845  00FF3D  62                 	db	98	;'b'
  1846  00FF3E  6C                 	db	108	;'l'
  1847  00FF3F  65                 	db	101	;'e'
  1848  00FF40  64                 	db	100	;'d'
  1849  00FF41  0D                 	db	13
  1850  00FF42  0A                 	db	10
  1851  00FF43  00                 	db	0
  1852  00FF44                     STR_41:
  1853                           
  1854                           ; BSR set to: 0
  1855  00FF44  44                 	db	68	;'D'
  1856  00FF45  65                 	db	101	;'e'
  1857  00FF46  62                 	db	98	;'b'
  1858  00FF47  75                 	db	117	;'u'
  1859  00FF48  67                 	db	103	;'g'
  1860  00FF49  20                 	db	32
  1861  00FF4A  45                 	db	69	;'E'
  1862  00FF4B  6E                 	db	110	;'n'
  1863  00FF4C  61                 	db	97	;'a'
  1864  00FF4D  62                 	db	98	;'b'
  1865  00FF4E  6C                 	db	108	;'l'
  1866  00FF4F  65                 	db	101	;'e'
  1867  00FF50  64                 	db	100	;'d'
  1868  00FF51  0D                 	db	13
  1869  00FF52  0A                 	db	10
  1870  00FF53  00                 	db	0
  1871  00FF54                     STR_4:
  1872                           
  1873                           ; BSR set to: 0
  1874  00FF54  55                 	db	85	;'U'
  1875  00FF55  70                 	db	112	;'p'
  1876  00FF56  64                 	db	100	;'d'
  1877  00FF57  61                 	db	97	;'a'
  1878  00FF58  74                 	db	116	;'t'
  1879  00FF59  65                 	db	101	;'e'
  1880  00FF5A  64                 	db	100	;'d'
  1881  00FF5B  4D                 	db	77	;'M'
  1882  00FF5C  42                 	db	66	;'B'
  1883  00FF5D  34                 	db	52	;'4'
  1884  00FF5E  30                 	db	48	;'0'
  1885  00FF5F  30                 	db	48	;'0'
  1886  00FF60  20                 	db	32
  1887  00FF61  0D                 	db	13
  1888  00FF62  0A                 	db	10
  1889  00FF63  00                 	db	0
  1890  00FF64                     STR_25:
  1891                           
  1892                           ; BSR set to: 0
  1893  00FF64  52                 	db	82	;'R'
  1894  00FF65  65                 	db	101	;'e'
  1895  00FF66  61                 	db	97	;'a'
  1896  00FF67  64                 	db	100	;'d'
  1897  00FF68  3A                 	db	58	;':'
  1898  00FF69  20                 	db	32
  1899  00FF6A  30                 	db	48	;'0'
  1900  00FF6B  78                 	db	120	;'x'
  1901  00FF6C  25                 	db	37
  1902  00FF6D  30                 	db	48	;'0'
  1903  00FF6E  32                 	db	50	;'2'
  1904  00FF6F  78                 	db	120	;'x'
  1905  00FF70  20                 	db	32
  1906  00FF71  0D                 	db	13
  1907  00FF72  0A                 	db	10
  1908  00FF73  00                 	db	0
  1909  00FF74                     STR_17:
  1910                           
  1911                           ; BSR set to: 0
  1912  00FF74  43                 	db	67	;'C'
  1913  00FF75  6F                 	db	111	;'o'
  1914  00FF76  6D                 	db	109	;'m'
  1915  00FF77  70                 	db	112	;'p'
  1916  00FF78  69                 	db	105	;'i'
  1917  00FF79  6C                 	db	108	;'l'
  1918  00FF7A  65                 	db	101	;'e'
  1919  00FF7B  20                 	db	32
  1920  00FF7C  54                 	db	84	;'T'
  1921  00FF7D  69                 	db	105	;'i'
  1922  00FF7E  6D                 	db	109	;'m'
  1923  00FF7F  65                 	db	101	;'e'
  1924  00FF80  0D                 	db	13
  1925  00FF81  0A                 	db	10
  1926  00FF82  00                 	db	0
  1927  00FF83                     STR_16:
  1928                           
  1929                           ; BSR set to: 0
  1930  00FF83  43                 	db	67	;'C'
  1931  00FF84  6F                 	db	111	;'o'
  1932  00FF85  6D                 	db	109	;'m'
  1933  00FF86  70                 	db	112	;'p'
  1934  00FF87  69                 	db	105	;'i'
  1935  00FF88  6C                 	db	108	;'l'
  1936  00FF89  65                 	db	101	;'e'
  1937  00FF8A  20                 	db	32
  1938  00FF8B  44                 	db	68	;'D'
  1939  00FF8C  61                 	db	97	;'a'
  1940  00FF8D  74                 	db	116	;'t'
  1941  00FF8E  65                 	db	101	;'e'
  1942  00FF8F  0D                 	db	13
  1943  00FF90  0A                 	db	10
  1944  00FF91  00                 	db	0
  1945  00FF92                     STR_18:
  1946                           
  1947                           ; BSR set to: 0
  1948  00FF92  43                 	db	67	;'C'
  1949  00FF93  6F                 	db	111	;'o'
  1950  00FF94  6D                 	db	109	;'m'
  1951  00FF95  70                 	db	112	;'p'
  1952  00FF96  69                 	db	105	;'i'
  1953  00FF97  6C                 	db	108	;'l'
  1954  00FF98  65                 	db	101	;'e'
  1955  00FF99  72                 	db	114	;'r'
  1956  00FF9A  20                 	db	32
  1957  00FF9B  56                 	db	86	;'V'
  1958  00FF9C  65                 	db	101	;'e'
  1959  00FF9D  72                 	db	114	;'r'
  1960  00FF9E  0D                 	db	13
  1961  00FF9F  0A                 	db	10
  1962  00FFA0  00                 	db	0
  1963  00FFA1                     STR_12:
  1964                           
  1965                           ; BSR set to: 0
  1966  00FFA1  43                 	db	67	;'C'
  1967  00FFA2  69                 	db	105	;'i'
  1968  00FFA3  72                 	db	114	;'r'
  1969  00FFA4  63                 	db	99	;'c'
  1970  00FFA5  75                 	db	117	;'u'
  1971  00FFA6  69                 	db	105	;'i'
  1972  00FFA7  74                 	db	116	;'t'
  1973  00FFA8  20                 	db	32
  1974  00FFA9  47                 	db	71	;'G'
  1975  00FFAA  65                 	db	101	;'e'
  1976  00FFAB  74                 	db	116	;'t'
  1977  00FFAC  0D                 	db	13
  1978  00FFAD  0A                 	db	10
  1979  00FFAE  00                 	db	0
  1980  00FFAF                     STR_15:
  1981                           
  1982                           ; BSR set to: 0
  1983  00FFAF  53                 	db	83	;'S'
  1984  00FFB0  65                 	db	101	;'e'
  1985  00FFB1  72                 	db	114	;'r'
  1986  00FFB2  69                 	db	105	;'i'
  1987  00FFB3  61                 	db	97	;'a'
  1988  00FFB4  6C                 	db	108	;'l'
  1989  00FFB5  20                 	db	32
  1990  00FFB6  4E                 	db	78	;'N'
  1991  00FFB7  6F                 	db	111	;'o'
  1992  00FFB8  2E                 	db	46
  1993  00FFB9  0D                 	db	13
  1994  00FFBA  0A                 	db	10
  1995  00FFBB  00                 	db	0
  1996  00FFBC                     STR_33:
  1997                           
  1998                           ; BSR set to: 0
  1999  00FFBC  4D                 	db	77	;'M'
  2000  00FFBD  61                 	db	97	;'a'
  2001  00FFBE  72                 	db	114	;'r'
  2002  00FFBF  20                 	db	32
  2003  00FFC0  31                 	db	49	;'1'
  2004  00FFC1  39                 	db	57	;'9'
  2005  00FFC2  20                 	db	32
  2006  00FFC3  32                 	db	50	;'2'
  2007  00FFC4  30                 	db	48	;'0'
  2008  00FFC5  32                 	db	50	;'2'
  2009  00FFC6  31                 	db	49	;'1'
  2010  00FFC7  00                 	db	0
  2011  00FFC8                     STR_13:
  2012                           
  2013                           ; BSR set to: 0
  2014  00FFC8  50                 	db	80	;'P'
  2015  00FFC9  61                 	db	97	;'a'
  2016  00FFCA  72                 	db	114	;'r'
  2017  00FFCB  74                 	db	116	;'t'
  2018  00FFCC  20                 	db	32
  2019  00FFCD  4E                 	db	78	;'N'
  2020  00FFCE  6F                 	db	111	;'o'
  2021  00FFCF  2E                 	db	46
  2022  00FFD0  0D                 	db	13
  2023  00FFD1  0A                 	db	10
  2024  00FFD2  00                 	db	0
  2025  00FFD3                     STR_14:
  2026                           
  2027                           ; BSR set to: 0
  2028  00FFD3  52                 	db	82	;'R'
  2029  00FFD4  65                 	db	101	;'e'
  2030  00FFD5  76                 	db	118	;'v'
  2031  00FFD6  69                 	db	105	;'i'
  2032  00FFD7  73                 	db	115	;'s'
  2033  00FFD8  69                 	db	105	;'i'
  2034  00FFD9  6F                 	db	111	;'o'
  2035  00FFDA  6E                 	db	110	;'n'
  2036  00FFDB  0D                 	db	13
  2037  00FFDC  0A                 	db	10
  2038  00FFDD  00                 	db	0
  2039  00FFDE                     STR_34:
  2040                           
  2041                           ; BSR set to: 0
  2042  00FFDE  31                 	db	49	;'1'
  2043  00FFDF  39                 	db	57	;'9'
  2044  00FFE0  3A                 	db	58	;':'
  2045  00FFE1  30                 	db	48	;'0'
  2046  00FFE2  37                 	db	55	;'7'
  2047  00FFE3  3A                 	db	58	;':'
  2048  00FFE4  30                 	db	48	;'0'
  2049  00FFE5  38                 	db	56	;'8'
  2050  00FFE6  00                 	db	0
  2051  00FFE7                     STR_61:
  2052                           
  2053                           ; BSR set to: 0
  2054  00FFE7  73                 	db	115	;'s'
  2055  00FFE8  65                 	db	101	;'e'
  2056  00FFE9  72                 	db	114	;'r'
  2057  00FFEA  69                 	db	105	;'i'
  2058  00FFEB  61                 	db	97	;'a'
  2059  00FFEC  6C                 	db	108	;'l'
  2060  00FFED  00                 	db	0
  2061  00FFEE                     STR_57:
  2062                           
  2063                           ; BSR set to: 0
  2064  00FFEE  64                 	db	100	;'d'
  2065  00FFEF  65                 	db	101	;'e'
  2066  00FFF0  62                 	db	98	;'b'
  2067  00FFF1  75                 	db	117	;'u'
  2068  00FFF2  67                 	db	103	;'g'
  2069  00FFF3  00                 	db	0
  2070  00FFF4                     STR_63:
  2071                           
  2072                           ; BSR set to: 0
  2073  00FFF4  70                 	db	112	;'p'
  2074  00FFF5  61                 	db	97	;'a'
  2075  00FFF6  72                 	db	114	;'r'
  2076  00FFF7  74                 	db	116	;'t'
  2077  00FFF8  00                 	db	0
  2078  00FFF9                     STR_65:
  2079                           
  2080                           ; BSR set to: 0
  2081  00FFF9  72                 	db	114	;'r'
  2082  00FFFA  65                 	db	101	;'e'
  2083  00FFFB  76                 	db	118	;'v'
  2084  00FFFC  00                 	db	0
  2085  00FFFD                     STR_59:
  2086                           
  2087                           ; BSR set to: 0
  2088  00FFFD  3F                 	db	63	;'?'
  2089  00FFFE  00                 	db	0
  2090  0000                     
  2091                           ; #config settings
  2092  00FFFF  00                 	db	0	; dummy byte at the end
  2093  0000                     
  2094                           	psect	cinit
  2095  002C12                     __pcinit:
  2096                           	opt callstack 0
  2097  002C12                     start_initialization:
  2098                           	opt callstack 0
  2099  002C12                     __initialization:
  2100                           	opt callstack 0
  2101                           
  2102                           ; Initialize objects allocated to BANK3 (128 bytes)
  2103                           ; load TBLPTR registers with __pidataBANK3
  2104  002C12  0EF5               	movlw	low __pidataBANK3
  2105  002C14  6EF6               	movwf	tblptrl,c
  2106  002C16  0E31               	movlw	high __pidataBANK3
  2107  002C18  6EF7               	movwf	tblptrh,c
  2108  002C1A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  2109  002C1C  6EF8               	movwf	tblptru,c
  2110  002C1E  EE03  F000         	lfsr	0,__pdataBANK3
  2111  002C22  EE10 F080          	lfsr	1,128
  2112  002C26                     copy_data0:
  2113  002C26  0009               	tblrd		*+
  2114  002C28  CFF5 FFEE          	movff	tablat,postinc0
  2115  002C2C  50E5               	movf	postdec1,w,c
  2116  002C2E  50E1               	movf	fsr1l,w,c
  2117  002C30  E1FA               	bnz	copy_data0
  2118                           
  2119                           ; Initialize objects allocated to BANK2 (60 bytes)
  2120                           ; load TBLPTR registers with __pidataBANK2
  2121  002C32  0EA6               	movlw	low __pidataBANK2
  2122  002C34  6EF6               	movwf	tblptrl,c
  2123  002C36  0E3A               	movlw	high __pidataBANK2
  2124  002C38  6EF7               	movwf	tblptrh,c
  2125  002C3A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2126  002C3C  6EF8               	movwf	tblptru,c
  2127  002C3E  EE02  F0AF         	lfsr	0,__pdataBANK2
  2128  002C42  EE10 F03C          	lfsr	1,60
  2129  002C46                     copy_data1:
  2130  002C46  0009               	tblrd		*+
  2131  002C48  CFF5 FFEE          	movff	tablat,postinc0
  2132  002C4C  50E5               	movf	postdec1,w,c
  2133  002C4E  50E1               	movf	fsr1l,w,c
  2134  002C50  E1FA               	bnz	copy_data1
  2135                           
  2136                           ; Initialize objects allocated to BANK1 (129 bytes)
  2137                           ; load TBLPTR registers with __pidataBANK1
  2138  002C52  0E74               	movlw	low __pidataBANK1
  2139  002C54  6EF6               	movwf	tblptrl,c
  2140  002C56  0E31               	movlw	high __pidataBANK1
  2141  002C58  6EF7               	movwf	tblptrh,c
  2142  002C5A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2143  002C5C  6EF8               	movwf	tblptru,c
  2144  002C5E  EE01  F000         	lfsr	0,__pdataBANK1
  2145  002C62  EE10 F081          	lfsr	1,129
  2146  002C66                     copy_data2:
  2147  002C66  0009               	tblrd		*+
  2148  002C68  CFF5 FFEE          	movff	tablat,postinc0
  2149  002C6C  50E5               	movf	postdec1,w,c
  2150  002C6E  50E1               	movf	fsr1l,w,c
  2151  002C70  E1FA               	bnz	copy_data2
  2152                           
  2153                           ; Initialize objects allocated to BANK0 (2 bytes)
  2154                           ; load TBLPTR registers with __pidataBANK0
  2155  002C72  0E52               	movlw	low __pidataBANK0
  2156  002C74  6EF6               	movwf	tblptrl,c
  2157  002C76  0E3E               	movlw	high __pidataBANK0
  2158  002C78  6EF7               	movwf	tblptrh,c
  2159  002C7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2160  002C7C  6EF8               	movwf	tblptru,c
  2161  002C7E  0009               	tblrd		*+	;fetch initializer
  2162  002C80  CFF5 F0BD          	movff	tablat,__pdataBANK0
  2163  002C84  0009               	tblrd		*+	;fetch initializer
  2164  002C86  CFF5 F0BE          	movff	tablat,__pdataBANK0+1
  2165                           
  2166                           ; Clear objects allocated to BANK4 (200 bytes)
  2167  002C8A  EE04  F000         	lfsr	0,__pbssBANK4
  2168  002C8E  0EC8               	movlw	200
  2169  002C90                     clear_0:
  2170  002C90  6AEE               	clrf	postinc0,c
  2171  002C92  06E8               	decf	wreg,f,c
  2172  002C94  E1FD               	bnz	clear_0
  2173                           
  2174                           ; Clear objects allocated to BANK3 (100 bytes)
  2175  002C96  EE03  F080         	lfsr	0,__pbssBANK3
  2176  002C9A  0E64               	movlw	100
  2177  002C9C                     clear_1:
  2178  002C9C  6AEE               	clrf	postinc0,c
  2179  002C9E  06E8               	decf	wreg,f,c
  2180  002CA0  E1FD               	bnz	clear_1
  2181                           
  2182                           ; Clear objects allocated to BANK2 (175 bytes)
  2183  002CA2  EE02  F000         	lfsr	0,__pbssBANK2
  2184  002CA6  0EAF               	movlw	175
  2185  002CA8                     clear_2:
  2186  002CA8  6AEE               	clrf	postinc0,c
  2187  002CAA  06E8               	decf	wreg,f,c
  2188  002CAC  E1FD               	bnz	clear_2
  2189                           
  2190                           ; Clear objects allocated to BANK1 (99 bytes)
  2191  002CAE  EE01  F081         	lfsr	0,__pbssBANK1
  2192  002CB2  0E63               	movlw	99
  2193  002CB4                     clear_3:
  2194  002CB4  6AEE               	clrf	postinc0,c
  2195  002CB6  06E8               	decf	wreg,f,c
  2196  002CB8  E1FD               	bnz	clear_3
  2197                           
  2198                           ; Clear objects allocated to BANK0 (24 bytes)
  2199  002CBA  EE00  F0A3         	lfsr	0,__pbssBANK0
  2200  002CBE  0E18               	movlw	24
  2201  002CC0                     clear_4:
  2202  002CC0  6AEE               	clrf	postinc0,c
  2203  002CC2  06E8               	decf	wreg,f,c
  2204  002CC4  E1FD               	bnz	clear_4
  2205                           
  2206                           ; Clear objects allocated to COMRAM (4 bytes)
  2207  002CC6  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2208  002CC8  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2209  002CCA  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2210  002CCC  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2211  002CCE                     end_of_initialization:
  2212                           	opt callstack 0
  2213  002CCE                     __end_of__initialization:
  2214                           	opt callstack 0
  2215  002CCE  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2216  002CD0  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2217  002CD2  0100               	movlb	0
  2218  002CD4  EF5F  F012         	goto	_main	;jump to C main() function
  2219                           
  2220                           	psect	bssCOMRAM
  2221  000057                     __pbssCOMRAM:
  2222                           	opt callstack 0
  2223  000057                     _flags:
  2224                           	opt callstack 0
  2225  000057                     	ds	2
  2226  000059                     _eusart1RxHead:
  2227                           	opt callstack 0
  2228  000059                     	ds	1
  2229  00005A                     _eusart2RxHead:
  2230                           	opt callstack 0
  2231  00005A                     	ds	1
  2232                           
  2233                           	psect	bssBANK0
  2234  0000A3                     __pbssBANK0:
  2235                           	opt callstack 0
  2236  0000A3                     _width:
  2237                           	opt callstack 0
  2238  0000A3                     	ds	2
  2239  0000A5                     _prec:
  2240                           	opt callstack 0
  2241  0000A5                     	ds	2
  2242  0000A7                     _ByteHi:
  2243                           	opt callstack 0
  2244  0000A7                     	ds	2
  2245  0000A9                     _MBResCnt:
  2246                           	opt callstack 0
  2247  0000A9                     	ds	2
  2248  0000AB                     _ByteNum:
  2249                           	opt callstack 0
  2250  0000AB                     	ds	2
  2251  0000AD                     _ModDataCnt:
  2252                           	opt callstack 0
  2253  0000AD                     	ds	2
  2254  0000AF                     _RXStat:
  2255                           	opt callstack 0
  2256  0000AF                     	ds	1
  2257  0000B0                     _Debug:
  2258                           	opt callstack 0
  2259  0000B0                     	ds	1
  2260  0000B1                     _eusart1RxLastError:
  2261                           	opt callstack 0
  2262  0000B1                     	ds	1
  2263  0000B2                     _eusart1RxCount:
  2264                           	opt callstack 0
  2265  0000B2                     	ds	1
  2266  0000B3                     _eusart1RxTail:
  2267                           	opt callstack 0
  2268  0000B3                     	ds	1
  2269  0000B4                     _eusart1TxTail:
  2270                           	opt callstack 0
  2271  0000B4                     	ds	1
  2272  0000B5                     _eusart1TxHead:
  2273                           	opt callstack 0
  2274  0000B5                     	ds	1
  2275  0000B6                     _eusart2RxLastError:
  2276                           	opt callstack 0
  2277  0000B6                     	ds	1
  2278  0000B7                     _eusart2RxCount:
  2279                           	opt callstack 0
  2280  0000B7                     	ds	1
  2281  0000B8                     _eusart2RxTail:
  2282                           	opt callstack 0
  2283  0000B8                     	ds	1
  2284  0000B9                     _eusart2TxTail:
  2285                           	opt callstack 0
  2286  0000B9                     	ds	1
  2287  0000BA                     _eusart2TxHead:
  2288                           	opt callstack 0
  2289  0000BA                     	ds	1
  2290                           
  2291                           	psect	dataBANK0
  2292  0000BD                     __pdataBANK0:
  2293                           	opt callstack 0
  2294  0000BD                     _ByteLo:
  2295                           	opt callstack 0
  2296  0000BD                     	ds	2
  2297                           
  2298                           	psect	bssBANK1
  2299  000181                     __pbssBANK1:
  2300                           	opt callstack 0
  2301  000181                     _eusart2RxStatusBuffer:
  2302                           	opt callstack 0
  2303  000181                     	ds	32
  2304  0001A1                     _eusart1TxBuffer:
  2305                           	opt callstack 0
  2306  0001A1                     	ds	16
  2307  0001B1                     _nout:
  2308                           	opt callstack 0
  2309  0001B1                     	ds	2
  2310  0001B3                     _rxStatus:
  2311                           	opt callstack 0
  2312  0001B3                     	ds	1
  2313  0001B4                     _dbuf:
  2314                           	opt callstack 0
  2315  0001B4                     	ds	32
  2316  0001D4                     _Command:
  2317                           	opt callstack 0
  2318  0001D4                     	ds	16
  2319                           
  2320                           	psect	dataBANK1
  2321  000100                     __pdataBANK1:
  2322                           	opt callstack 0
  2323  000100                     _MB301xx:
  2324                           	opt callstack 0
  2325  000100                     	ds	14
  2326  00010E                     _MB304xx:
  2327                           	opt callstack 0
  2328  00010E                     	ds	10
  2329  000118                     _MB303xx:
  2330                           	opt callstack 0
  2331  000118                     	ds	10
  2332  000122                     stoa@F1139:
  2333                           	opt callstack 0
  2334  000122                     	ds	7
  2335  000129                     _MB307xx:
  2336                           	opt callstack 0
  2337  000129                     	ds	6
  2338  00012F                     _MB305xx:
  2339                           	opt callstack 0
  2340  00012F                     	ds	6
  2341  000135                     _MB306xx:
  2342                           	opt callstack 0
  2343  000135                     	ds	4
  2344  000139                     ReadRX232@F10713:
  2345                           	opt callstack 0
  2346  000139                     	ds	2
  2347  00013B                     _MBResCRC:
  2348                           	opt callstack 0
  2349  00013B                     	ds	2
  2350  00013D                     _ExpectedBytes:
  2351                           	opt callstack 0
  2352  00013D                     	ds	2
  2353  00013F                     _MB302xx:
  2354                           	opt callstack 0
  2355  00013F                     	ds	2
  2356  000141                     _MBRespon:
  2357                           	opt callstack 0
  2358  000141                     	ds	64
  2359                           
  2360                           	psect	bssBANK2
  2361  000200                     __pbssBANK2:
  2362                           	opt callstack 0
  2363  000200                     _ModbusData:
  2364                           	opt callstack 0
  2365  000200                     	ds	100
  2366  000264                     _eusart2RxBuffer:
  2367                           	opt callstack 0
  2368  000264                     	ds	32
  2369  000284                     _eusart2TxBuffer:
  2370                           	opt callstack 0
  2371  000284                     	ds	32
  2372  0002A4                     	ds	11
  2373                           
  2374                           	psect	dataBANK2
  2375  0002AF                     __pdataBANK2:
  2376                           	opt callstack 0
  2377  0002AF                     ValidateCmd@F10737:
  2378                           	opt callstack 0
  2379  0002AF                     	ds	20
  2380  0002C3                     ValidateCmd@F10734:
  2381                           	opt callstack 0
  2382  0002C3                     	ds	20
  2383  0002D7                     ValidateCmd@F10731:
  2384                           	opt callstack 0
  2385  0002D7                     	ds	20
  2386                           
  2387                           	psect	bssBANK3
  2388  000380                     __pbssBANK3:
  2389                           	opt callstack 0
  2390  000380                     _eusart1RxStatusBuffer:
  2391                           	opt callstack 0
  2392  000380                     	ds	100
  2393                           
  2394                           	psect	dataBANK3
  2395  000300                     __pdataBANK3:
  2396                           	opt callstack 0
  2397  000300                     _MB400xx:
  2398                           	opt callstack 0
  2399  000300                     	ds	64
  2400  000340                     _MB300xx:
  2401                           	opt callstack 0
  2402  000340                     	ds	64
  2403                           
  2404                           	psect	bssBANK4
  2405  000400                     __pbssBANK4:
  2406                           	opt callstack 0
  2407  000400                     _rxData:
  2408                           	opt callstack 0
  2409  000400                     	ds	100
  2410  000464                     _eusart1RxBuffer:
  2411                           	opt callstack 0
  2412  000464                     	ds	100
  2413                           
  2414                           	psect	cstackBANK5
  2415  000500                     __pcstackBANK5:
  2416                           	opt callstack 0
  2417  000500                     ValidateCmd@ConfName:
  2418                           	opt callstack 0
  2419                           
  2420                           ; 20 bytes @ 0x0
  2421  000500                     	ds	20
  2422  000514                     ValidateCmd@ConfName_1449:
  2423                           	opt callstack 0
  2424                           
  2425                           ; 20 bytes @ 0x14
  2426  000514                     	ds	20
  2427  000528                     ValidateCmd@ConfName_1453:
  2428                           	opt callstack 0
  2429                           
  2430                           ; 20 bytes @ 0x28
  2431  000528                     	ds	20
  2432                           
  2433                           	psect	cstackBANK0
  2434  000060                     __pcstackBANK0:
  2435                           	opt callstack 0
  2436  000060                     vfpfcnvrt@ll:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 8 bytes @ 0x0
  2440  000060                     	ds	8
  2441  000068                     vfpfcnvrt@cp:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x8
  2445  000068                     	ds	2
  2446  00006A                     vfpfcnvrt@c:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 1 bytes @ 0xA
  2450  00006A                     	ds	1
  2451  00006B                     vfpfcnvrt@done:
  2452                           	opt callstack 0
  2453                           
  2454                           ; 2 bytes @ 0xB
  2455  00006B                     	ds	2
  2456  00006D                     _vfpfcnvrt$1572:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 2 bytes @ 0xD
  2460  00006D                     	ds	2
  2461  00006F                     vfpfcnvrt@llu:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 8 bytes @ 0xF
  2465  00006F                     	ds	8
  2466  000077                     ?_vfprintf:
  2467                           	opt callstack 0
  2468  000077                     vfprintf@fp:
  2469                           	opt callstack 0
  2470                           
  2471                           ; 2 bytes @ 0x17
  2472  000077                     	ds	2
  2473  000079                     vfprintf@fmt:
  2474                           	opt callstack 0
  2475                           
  2476                           ; 2 bytes @ 0x19
  2477  000079                     	ds	2
  2478  00007B                     vfprintf@ap:
  2479                           	opt callstack 0
  2480                           
  2481                           ; 2 bytes @ 0x1B
  2482  00007B                     	ds	2
  2483  00007D                     ?_printf:
  2484                           	opt callstack 0
  2485  00007D                     printf@fmt:
  2486                           	opt callstack 0
  2487                           
  2488                           ; 2 bytes @ 0x1D
  2489  00007D                     	ds	12
  2490  000089                     printf@ap:
  2491                           	opt callstack 0
  2492                           
  2493                           ; 2 bytes @ 0x29
  2494  000089                     	ds	2
  2495  00008B                     ??_checkCRC:
  2496  00008B                     ?_ReadRX232:
  2497                           	opt callstack 0
  2498  00008B                     AddRxBuffToModBus@i:
  2499                           	opt callstack 0
  2500  00008B                     PrintModbus@i:
  2501                           	opt callstack 0
  2502  00008B                     PrintModRespon@i:
  2503                           	opt callstack 0
  2504  00008B                     ReadRX232@NumChars:
  2505                           	opt callstack 0
  2506  00008B                     ClearEEAddRange@StartAdd:
  2507                           	opt callstack 0
  2508  00008B                     InitialiseString@SerialNum:
  2509                           	opt callstack 0
  2510                           
  2511                           ; 11 bytes @ 0x2B
  2512  00008B                     	ds	2
  2513  00008D                     ??_ModbusFC03:
  2514  00008D                     ??_ModbusFC10:
  2515  00008D                     ModbusError@ErrorCode:
  2516                           	opt callstack 0
  2517  00008D                     ClearEEAddRange@NumBytes:
  2518                           	opt callstack 0
  2519                           
  2520                           ; 2 bytes @ 0x2D
  2521  00008D                     	ds	2
  2522  00008F                     ??_ModbusError:
  2523  00008F                     SaveCardDat@Name:
  2524                           	opt callstack 0
  2525                           
  2526                           ; 2 bytes @ 0x2F
  2527  00008F                     	ds	1
  2528  000090                     checkCRC@crcHigh:
  2529                           	opt callstack 0
  2530                           
  2531                           ; 2 bytes @ 0x30
  2532  000090                     	ds	1
  2533  000091                     ModbusFC03@i:
  2534                           	opt callstack 0
  2535  000091                     ModbusFC10@TempData:
  2536                           	opt callstack 0
  2537  000091                     SaveCardDat@MBAddress:
  2538                           	opt callstack 0
  2539                           
  2540                           ; 2 bytes @ 0x31
  2541  000091                     	ds	1
  2542  000092                     checkCRC@crcLow:
  2543                           	opt callstack 0
  2544                           
  2545                           ; 2 bytes @ 0x32
  2546  000092                     	ds	1
  2547  000093                     ModbusFC10@i:
  2548                           	opt callstack 0
  2549  000093                     SaveCardDat@dataeeAddr:
  2550                           	opt callstack 0
  2551                           
  2552                           ; 2 bytes @ 0x33
  2553  000093                     	ds	1
  2554  000094                     checkCRC@j:
  2555                           	opt callstack 0
  2556                           
  2557                           ; 2 bytes @ 0x34
  2558  000094                     	ds	1
  2559  000095                     ModbusFC10@j:
  2560                           	opt callstack 0
  2561  000095                     SaveCardDat@NumBytes:
  2562                           	opt callstack 0
  2563                           
  2564                           ; 2 bytes @ 0x35
  2565  000095                     	ds	1
  2566  000096                     checkCRC@crc:
  2567                           	opt callstack 0
  2568                           
  2569                           ; 2 bytes @ 0x36
  2570  000096                     	ds	1
  2571  000097                     ??_SaveCardDat:
  2572                           
  2573                           ; 1 bytes @ 0x37
  2574  000097                     	ds	1
  2575  000098                     checkCRC@i:
  2576                           	opt callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x38
  2579  000098                     	ds	1
  2580  000099                     _SaveCardDat$2436:
  2581                           	opt callstack 0
  2582                           
  2583                           ; 2 bytes @ 0x39
  2584  000099                     	ds	2
  2585  00009B                     SaveCardDat@readData:
  2586                           	opt callstack 0
  2587                           
  2588                           ; 1 bytes @ 0x3B
  2589  00009B                     	ds	1
  2590  00009C                     SaveCardDat@Conf:
  2591                           	opt callstack 0
  2592                           
  2593                           ; 1 bytes @ 0x3C
  2594  00009C                     	ds	1
  2595  00009D                     SaveCardDat@dataeeAddrWrk:
  2596                           	opt callstack 0
  2597                           
  2598                           ; 2 bytes @ 0x3D
  2599  00009D                     	ds	2
  2600  00009F                     SaveCardDat@i:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 2 bytes @ 0x3F
  2604  00009F                     	ds	2
  2605  0000A1                     ??_main:
  2606                           
  2607                           ; 1 bytes @ 0x41
  2608  0000A1                     	ds	2
  2609                           
  2610                           	psect	cstackCOMRAM
  2611  000001                     __pcstackCOMRAM:
  2612                           	opt callstack 0
  2613  000001                     ??_INTERRUPT_InterruptManager:
  2614  000001                     
  2615                           ; 1 bytes @ 0x0
  2616  000001                     	ds	4
  2617  000005                     ??_ClearRxBuff:
  2618  000005                     ?_generateCRC:
  2619                           	opt callstack 0
  2620  000005                     ?_strlen:
  2621                           	opt callstack 0
  2622  000005                     ?_strcmp:
  2623                           	opt callstack 0
  2624  000005                     ?_isupper:
  2625                           	opt callstack 0
  2626  000005                     ?_isalpha:
  2627                           	opt callstack 0
  2628  000005                     ?_isdigit:
  2629                           	opt callstack 0
  2630  000005                     ?_isspace:
  2631                           	opt callstack 0
  2632  000005                     ?_islower:
  2633                           	opt callstack 0
  2634  000005                     ?___wmul:
  2635                           	opt callstack 0
  2636  000005                     ?___aodiv:
  2637                           	opt callstack 0
  2638  000005                     ?___aomod:
  2639                           	opt callstack 0
  2640  000005                     ?___lodiv:
  2641                           	opt callstack 0
  2642  000005                     ?___lomod:
  2643                           	opt callstack 0
  2644  000005                     EUSART2_Read@readValue:
  2645                           	opt callstack 0
  2646  000005                     EUSART2_Write@txData:
  2647                           	opt callstack 0
  2648  000005                     EUSART1_Read@readValue:
  2649                           	opt callstack 0
  2650  000005                     EUSART1_Write@txData:
  2651                           	opt callstack 0
  2652  000005                     DATAEE_WriteByte@bAdd:
  2653                           	opt callstack 0
  2654  000005                     DATAEE_ReadByte@bAdd:
  2655                           	opt callstack 0
  2656  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  2657                           	opt callstack 0
  2658  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  2659                           	opt callstack 0
  2660  000005                     EUSART2_SetErrorHandler@interruptHandler:
  2661                           	opt callstack 0
  2662  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2663                           	opt callstack 0
  2664  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2665                           	opt callstack 0
  2666  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2667                           	opt callstack 0
  2668  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2669                           	opt callstack 0
  2670  000005                     EUSART1_SetErrorHandler@interruptHandler:
  2671                           	opt callstack 0
  2672  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  2673                           	opt callstack 0
  2674  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  2675                           	opt callstack 0
  2676  000005                     ClearModbusData@i:
  2677                           	opt callstack 0
  2678  000005                     generateCRC@MessCnt:
  2679                           	opt callstack 0
  2680  000005                     ClearModbusRespon@i:
  2681                           	opt callstack 0
  2682  000005                     ___wmul@multiplier:
  2683                           	opt callstack 0
  2684  000005                     isalpha@c:
  2685                           	opt callstack 0
  2686  000005                     isdigit@c:
  2687                           	opt callstack 0
  2688  000005                     isspace@c:
  2689                           	opt callstack 0
  2690  000005                     isupper@c:
  2691                           	opt callstack 0
  2692  000005                     strcmp@l:
  2693                           	opt callstack 0
  2694  000005                     strlen@s:
  2695                           	opt callstack 0
  2696  000005                     islower@c:
  2697                           	opt callstack 0
  2698  000005                     ___aodiv@dividend:
  2699                           	opt callstack 0
  2700  000005                     ___aomod@dividend:
  2701                           	opt callstack 0
  2702  000005                     ___lodiv@dividend:
  2703                           	opt callstack 0
  2704  000005                     ___lomod@dividend:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 8 bytes @ 0x4
  2708  000005                     	ds	1
  2709  000006                     putch@txData:
  2710                           	opt callstack 0
  2711  000006                     ClearRxBuff@i:
  2712                           	opt callstack 0
  2713  000006                     UART1_Write_string@data:
  2714                           	opt callstack 0
  2715                           
  2716                           ; 2 bytes @ 0x5
  2717  000006                     	ds	1
  2718  000007                     ??_isupper:
  2719  000007                     ??_isalpha:
  2720  000007                     ??_isdigit:
  2721  000007                     ??_isspace:
  2722  000007                     ??_islower:
  2723  000007                     DATAEE_WriteByte@bData:
  2724                           	opt callstack 0
  2725  000007                     generateCRC@HiOrLo:
  2726                           	opt callstack 0
  2727  000007                     SerIni@SerialNum:
  2728                           	opt callstack 0
  2729  000007                     ___wmul@multiplicand:
  2730                           	opt callstack 0
  2731  000007                     fputc@c:
  2732                           	opt callstack 0
  2733  000007                     strcmp@r:
  2734                           	opt callstack 0
  2735  000007                     strlen@a:
  2736                           	opt callstack 0
  2737                           
  2738                           ; 2 bytes @ 0x6
  2739  000007                     	ds	1
  2740  000008                     ??_generateCRC:
  2741  000008                     DATAEE_WriteByte@GIEBitValue:
  2742                           	opt callstack 0
  2743  000008                     UART1_Write_string@data_len:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 2 bytes @ 0x7
  2747  000008                     	ds	1
  2748  000009                     ??_strcmp:
  2749  000009                     ??_SerIni:
  2750  000009                     ___wmul@product:
  2751                           	opt callstack 0
  2752  000009                     memmove@d1:
  2753                           	opt callstack 0
  2754  000009                     fputc@fp:
  2755                           	opt callstack 0
  2756  000009                     strcpy@dest:
  2757                           	opt callstack 0
  2758                           
  2759                           ; 2 bytes @ 0x8
  2760  000009                     	ds	1
  2761  00000A                     ??_UART1_Write_string:
  2762  00000A                     generateCRC@crcHigh:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 2 bytes @ 0x9
  2766  00000A                     	ds	1
  2767  00000B                     ??_fputc:
  2768  00000B                     ?_toupper:
  2769                           	opt callstack 0
  2770  00000B                     _isspace$2059:
  2771                           	opt callstack 0
  2772  00000B                     UART1_Write_string@i:
  2773                           	opt callstack 0
  2774  00000B                     SerIni@dataeeAddrWrk:
  2775                           	opt callstack 0
  2776  00000B                     memmove@s1:
  2777                           	opt callstack 0
  2778  00000B                     strcpy@src:
  2779                           	opt callstack 0
  2780  00000B                     toupper@c:
  2781                           	opt callstack 0
  2782                           
  2783                           ; 2 bytes @ 0xA
  2784  00000B                     	ds	1
  2785  00000C                     ?_atoi:
  2786                           	opt callstack 0
  2787  00000C                     generateCRC@crcLow:
  2788                           	opt callstack 0
  2789  00000C                     atoi@s:
  2790                           	opt callstack 0
  2791                           
  2792                           ; 2 bytes @ 0xB
  2793  00000C                     	ds	1
  2794  00000D                     ??_strcpy:
  2795  00000D                     ??_toupper:
  2796  00000D                     SerIni@readDataOdd:
  2797                           	opt callstack 0
  2798  00000D                     memmove@n:
  2799                           	opt callstack 0
  2800  00000D                     ___aodiv@divisor:
  2801                           	opt callstack 0
  2802  00000D                     ___aomod@divisor:
  2803                           	opt callstack 0
  2804  00000D                     ___lodiv@divisor:
  2805                           	opt callstack 0
  2806  00000D                     ___lomod@divisor:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 8 bytes @ 0xC
  2810  00000D                     	ds	1
  2811  00000E                     ??_atoi:
  2812  00000E                     SerIni@readDataEven:
  2813                           	opt callstack 0
  2814  00000E                     generateCRC@i:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 2 bytes @ 0xD
  2818  00000E                     	ds	1
  2819  00000F                     ??_memmove:
  2820  00000F                     SerIni@i:
  2821                           	opt callstack 0
  2822  00000F                     strcpy@s:
  2823                           	opt callstack 0
  2824                           
  2825                           ; 2 bytes @ 0xE
  2826  00000F                     	ds	1
  2827  000010                     ?_stoa:
  2828                           	opt callstack 0
  2829  000010                     generateCRC@j:
  2830                           	opt callstack 0
  2831  000010                     stoa@fp:
  2832                           	opt callstack 0
  2833  000010                     fputs@s:
  2834                           	opt callstack 0
  2835                           
  2836                           ; 2 bytes @ 0xF
  2837  000010                     	ds	1
  2838  000011                     SerIni@j:
  2839                           	opt callstack 0
  2840  000011                     memmove@d:
  2841                           	opt callstack 0
  2842  000011                     strcpy@d:
  2843                           	opt callstack 0
  2844  000011                     _toupper$2146:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 2 bytes @ 0x10
  2848  000011                     	ds	1
  2849  000012                     generateCRC@crc:
  2850                           	opt callstack 0
  2851  000012                     stoa@s:
  2852                           	opt callstack 0
  2853  000012                     atoi@neg:
  2854                           	opt callstack 0
  2855  000012                     fputs@fp:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 2 bytes @ 0x11
  2859  000012                     	ds	1
  2860  000013                     memmove@s:
  2861                           	opt callstack 0
  2862  000013                     strcat@dest:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 2 bytes @ 0x12
  2866  000013                     	ds	1
  2867  000014                     ??_stoa:
  2868  000014                     fputs@c:
  2869                           	opt callstack 0
  2870  000014                     _atoi$2032:
  2871                           	opt callstack 0
  2872                           
  2873                           ; 2 bytes @ 0x13
  2874  000014                     	ds	1
  2875  000015                     ___aodiv@counter:
  2876                           	opt callstack 0
  2877  000015                     ___aomod@counter:
  2878                           	opt callstack 0
  2879  000015                     ___lomod@counter:
  2880                           	opt callstack 0
  2881  000015                     fputs@i:
  2882                           	opt callstack 0
  2883  000015                     strcat@src:
  2884                           	opt callstack 0
  2885  000015                     stoa@nuls:
  2886                           	opt callstack 0
  2887  000015                     ___lodiv@quotient:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 8 bytes @ 0x14
  2891  000015                     	ds	1
  2892  000016                     ___aodiv@sign:
  2893                           	opt callstack 0
  2894  000016                     ___aomod@sign:
  2895                           	opt callstack 0
  2896  000016                     _atoi$2034:
  2897                           	opt callstack 0
  2898                           
  2899                           ; 2 bytes @ 0x15
  2900  000016                     	ds	1
  2901  000017                     ?_abs:
  2902                           	opt callstack 0
  2903  000017                     ?_pad:
  2904                           	opt callstack 0
  2905  000017                     pad@fp:
  2906                           	opt callstack 0
  2907  000017                     abs@a:
  2908                           	opt callstack 0
  2909  000017                     ___aodiv@quotient:
  2910                           	opt callstack 0
  2911                           
  2912                           ; 8 bytes @ 0x16
  2913  000017                     	ds	1
  2914  000018                     _atoi$2033:
  2915                           	opt callstack 0
  2916                           
  2917                           ; 1 bytes @ 0x17
  2918  000018                     	ds	1
  2919  000019                     ??_abs:
  2920  000019                     pad@buf:
  2921                           	opt callstack 0
  2922  000019                     atoi@n:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 2 bytes @ 0x18
  2926  000019                     	ds	2
  2927  00001B                     pad@p:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x1A
  2931  00001B                     	ds	1
  2932  00001C                     stoa@i:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 2 bytes @ 0x1B
  2936  00001C                     	ds	1
  2937  00001D                     ??_pad:
  2938  00001D                     ___lodiv@counter:
  2939                           	opt callstack 0
  2940                           
  2941                           ; 1 bytes @ 0x1C
  2942  00001D                     	ds	1
  2943  00001E                     pad@i:
  2944                           	opt callstack 0
  2945  00001E                     stoa@w:
  2946                           	opt callstack 0
  2947                           
  2948                           ; 2 bytes @ 0x1D
  2949  00001E                     	ds	2
  2950  000020                     pad@w:
  2951                           	opt callstack 0
  2952  000020                     stoa@cp:
  2953                           	opt callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x1F
  2956  000020                     	ds	2
  2957  000022                     ?_dtoa:
  2958                           	opt callstack 0
  2959  000022                     ?_utoa:
  2960                           	opt callstack 0
  2961  000022                     ?_xtoa:
  2962                           	opt callstack 0
  2963  000022                     dtoa@fp:
  2964                           	opt callstack 0
  2965  000022                     stoa@p:
  2966                           	opt callstack 0
  2967  000022                     utoa@fp:
  2968                           	opt callstack 0
  2969  000022                     xtoa@fp:
  2970                           	opt callstack 0
  2971                           
  2972                           ; 2 bytes @ 0x21
  2973  000022                     	ds	2
  2974  000024                     stoa@l:
  2975                           	opt callstack 0
  2976  000024                     dtoa@d:
  2977                           	opt callstack 0
  2978  000024                     utoa@d:
  2979                           	opt callstack 0
  2980  000024                     xtoa@d:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 8 bytes @ 0x23
  2984  000024                     	ds	8
  2985  00002C                     ??_dtoa:
  2986  00002C                     ??_utoa:
  2987  00002C                     xtoa@x:
  2988                           	opt callstack 0
  2989                           
  2990                           ; 1 bytes @ 0x2B
  2991  00002C                     	ds	1
  2992  00002D                     ??_xtoa:
  2993                           
  2994                           ; 1 bytes @ 0x2C
  2995  00002D                     	ds	7
  2996  000034                     _dtoa$1528:
  2997                           	opt callstack 0
  2998  000034                     utoa@p:
  2999                           	opt callstack 0
  3000                           
  3001                           ; 2 bytes @ 0x33
  3002  000034                     	ds	1
  3003  000035                     _xtoa$1557:
  3004                           	opt callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x34
  3007  000035                     	ds	1
  3008  000036                     dtoa@p:
  3009                           	opt callstack 0
  3010  000036                     utoa@w:
  3011                           	opt callstack 0
  3012                           
  3013                           ; 2 bytes @ 0x35
  3014  000036                     	ds	1
  3015  000037                     _xtoa$1558:
  3016                           	opt callstack 0
  3017                           
  3018                           ; 2 bytes @ 0x36
  3019  000037                     	ds	1
  3020  000038                     dtoa@w:
  3021                           	opt callstack 0
  3022  000038                     utoa@n:
  3023                           	opt callstack 0
  3024                           
  3025                           ; 8 bytes @ 0x37
  3026  000038                     	ds	1
  3027  000039                     xtoa@p:
  3028                           	opt callstack 0
  3029                           
  3030                           ; 2 bytes @ 0x38
  3031  000039                     	ds	1
  3032  00003A                     dtoa@s:
  3033                           	opt callstack 0
  3034                           
  3035                           ; 2 bytes @ 0x39
  3036  00003A                     	ds	1
  3037  00003B                     xtoa@w:
  3038                           	opt callstack 0
  3039                           
  3040                           ; 2 bytes @ 0x3A
  3041  00003B                     	ds	1
  3042  00003C                     dtoa@n:
  3043                           	opt callstack 0
  3044                           
  3045                           ; 8 bytes @ 0x3B
  3046  00003C                     	ds	1
  3047  00003D                     xtoa@n:
  3048                           	opt callstack 0
  3049                           
  3050                           ; 8 bytes @ 0x3C
  3051  00003D                     	ds	3
  3052  000040                     utoa@i:
  3053                           	opt callstack 0
  3054                           
  3055                           ; 2 bytes @ 0x3F
  3056  000040                     	ds	4
  3057  000044                     dtoa@i:
  3058                           	opt callstack 0
  3059                           
  3060                           ; 2 bytes @ 0x43
  3061  000044                     	ds	1
  3062  000045                     xtoa@i:
  3063                           	opt callstack 0
  3064                           
  3065                           ; 2 bytes @ 0x44
  3066  000045                     	ds	2
  3067  000047                     xtoa@c:
  3068                           	opt callstack 0
  3069                           
  3070                           ; 2 bytes @ 0x46
  3071  000047                     	ds	2
  3072  000049                     ?_vfpfcnvrt:
  3073                           	opt callstack 0
  3074  000049                     vfpfcnvrt@fp:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 2 bytes @ 0x48
  3078  000049                     	ds	2
  3079  00004B                     vfpfcnvrt@fmt:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x4A
  3083  00004B                     	ds	2
  3084  00004D                     vfpfcnvrt@ap:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 2 bytes @ 0x4C
  3088  00004D                     	ds	2
  3089  00004F                     ??_vfpfcnvrt:
  3090                           
  3091                           ; 1 bytes @ 0x4E
  3092  00004F                     	ds	4
  3093  000053                     vfprintf@cfmt:
  3094                           	opt callstack 0
  3095                           
  3096                           ; 2 bytes @ 0x52
  3097  000053                     	ds	2
  3098  000055                     ??_PrintModbus:
  3099  000055                     ??_PrintModRespon:
  3100  000055                     ??_AddRxBuffToModBus:
  3101  000055                     PrintMB400@i:
  3102                           	opt callstack 0
  3103  000055                     ReadRX232@temp:
  3104                           	opt callstack 0
  3105  000055                     ClearEEAddRange@i:
  3106                           	opt callstack 0
  3107                           
  3108                           ; 2 bytes @ 0x54
  3109  000055                     	ds	1
  3110  000056                     ??_ModbusRx:
  3111                           
  3112                           ; 1 bytes @ 0x55
  3113  000056                     	ds	1
  3114  000057                     
  3115                           ; 1 bytes @ 0x56
  3116 ;;
  3117 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3118 ;;
  3119 ;; *************** function _main *****************
  3120 ;; Defined at:
  3121 ;;		line 29 in file "main.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  RXStat          1    0        _Bool 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;Total ram usage:        3 bytes
  3140 ;; Hardware stack levels required when called:   16
  3141 ;; This function calls:
  3142 ;;		_ClearModbusData
  3143 ;;		_ClearModbusRespon
  3144 ;;		_ClearRxBuff
  3145 ;;		_InitialiseString
  3146 ;;		_ModbusError
  3147 ;;		_ModbusFC03
  3148 ;;		_ModbusFC10
  3149 ;;		_ModbusRx
  3150 ;;		_PrintMB400
  3151 ;;		_PrintModbus
  3152 ;;		_RXMode
  3153 ;;		_ReadRX232
  3154 ;;		_SYSTEM_Initialize
  3155 ;;		_ValidateCmd
  3156 ;;		_printf
  3157 ;;		_strcpy
  3158 ;; This function is called by:
  3159 ;;		Startup code after reset
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text0
  3164  0024BE                     __ptext0:
  3165                           	opt callstack 0
  3166  0024BE                     _main:
  3167                           	opt callstack 15
  3168  0024BE                     
  3169                           ;main.c: 32:     SYSTEM_Initialize();
  3170  0024BE  EC73  F01E         	call	_SYSTEM_Initialize	;wreg free
  3171  0024C2                     
  3172                           ;main.c: 39:     (INTCONbits.GIE = 1);
  3173  0024C2  8EF2               	bsf	242,7,c	;volatile
  3174  0024C4                     
  3175                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  3176  0024C4  8CF2               	bsf	242,6,c	;volatile
  3177  0024C6  9883               	bcf	131,4,c	;volatile
  3178  0024C8  9A83               	bcf	131,5,c	;volatile
  3179  0024CA  9C83               	bcf	131,6,c	;volatile
  3180  0024CC  9E83               	bcf	131,7,c	;volatile
  3181  0024CE                     
  3182                           ;main.c: 55:     InitialiseString();
  3183  0024CE  EC8D  F017         	call	_InitialiseString	;wreg free
  3184  0024D2                     
  3185                           ;main.c: 58:     RXMode();
  3186  0024D2  EC18  F01F         	call	_RXMode	;wreg free
  3187  0024D6                     
  3188                           ;main.c: 59:     ClearRxBuff();
  3189  0024D6  EC84  F01C         	call	_ClearRxBuff	;wreg free
  3190  0024DA                     
  3191                           ;main.c: 60:     ClearModbusRespon();
  3192  0024DA  EC38  F01C         	call	_ClearModbusRespon	;wreg free
  3193  0024DE                     l7141:
  3194                           
  3195                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  3196  0024DE  ECCF  F00B         	call	_ModbusRx	;wreg free
  3197  0024E2  06E8               	decf	wreg,f,c
  3198  0024E4  A4D8               	btfss	status,2,c
  3199  0024E6  EF77  F012         	goto	u7181
  3200  0024EA  EF79  F012         	goto	u7180
  3201  0024EE                     u7181:
  3202  0024EE  EFC2  F012         	goto	l7159
  3203  0024F2                     u7180:
  3204  0024F2                     
  3205                           ;main.c: 70:             if(Debug == 1){
  3206  0024F2  0100               	movlb	0	; () banked
  3207  0024F4  05B0               	decf	_Debug& (0+255),w,b
  3208  0024F6  A4D8               	btfss	status,2,c
  3209  0024F8  EF80  F012         	goto	u7191
  3210  0024FC  EF82  F012         	goto	u7190
  3211  002500                     u7191:
  3212  002500  EFA5  F012         	goto	l7155
  3213  002504                     u7190:
  3214  002504                     
  3215                           ; BSR set to: 0
  3216                           ;main.c: 71:                 PrintModbus();
  3217  002504  EC76  F018         	call	_PrintModbus	;wreg free
  3218  002508  EFA5  F012         	goto	l7155
  3219  00250C                     l7147:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;main.c: 77:                 {;main.c: 81:                     ModbusFC03();
  3223  00250C  EC5A  F003         	call	_ModbusFC03	;wreg free
  3224                           
  3225                           ;main.c: 82:                     break;
  3226  002510  EFBC  F012         	goto	l7157
  3227  002514                     l7149:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;main.c: 85:                 {;main.c: 86:                     printf("Function Code 0x1
      +                          0\r\n");
  3231  002514  0EC3               	movlw	low STR_1
  3232  002516  6F7D               	movwf	printf@fmt& (0+255),b
  3233  002518  0EFE               	movlw	high STR_1
  3234  00251A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3235  00251C  EC2B  F01E         	call	_printf	;wreg free
  3236                           
  3237                           ;main.c: 88:                     PrintMB400();
  3238  002520  EC6D  F01A         	call	_PrintMB400	;wreg free
  3239                           
  3240                           ;main.c: 89:                     ModbusFC10();
  3241  002524  ECA9  F009         	call	_ModbusFC10	;wreg free
  3242                           
  3243                           ;main.c: 91:                     break;
  3244  002528  EFBC  F012         	goto	l7157
  3245  00252C                     l7151:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;main.c: 94:                 {;main.c: 95:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  3249  00252C  0ECD               	movlw	low STR_2
  3250  00252E  6F7D               	movwf	printf@fmt& (0+255),b
  3251  002530  0EFD               	movlw	high STR_2
  3252  002532  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3253  002534  EC2B  F01E         	call	_printf	;wreg free
  3254                           
  3255                           ;main.c: 97:                     ModbusError(0x01);
  3256  002538  0E00               	movlw	0
  3257  00253A  0100               	movlb	0	; () banked
  3258  00253C  6F8E               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  3259  00253E  0E01               	movlw	1
  3260  002540  6F8D               	movwf	ModbusError@ErrorCode& (0+255),b
  3261  002542  ECE5  F012         	call	_ModbusError	;wreg free
  3262                           
  3263                           ;main.c: 98:                     break;
  3264  002546  EFBC  F012         	goto	l7157
  3265  00254A                     l7155:
  3266  00254A  0102               	movlb	2	; () banked
  3267  00254C  5101               	movf	(_ModbusData+1)& (0+255),w,b
  3268  00254E  0100               	movlb	0	; () banked
  3269  002550  6FA1               	movwf	??_main& (0+255),b
  3270  002552  6BA2               	clrf	(??_main+1)& (0+255),b
  3271                           
  3272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3273                           ; Switch size 1, requested type "simple"
  3274                           ; Number of cases is 1, Range of values is 0 to 0
  3275                           ; switch strategies available:
  3276                           ; Name         Instructions Cycles
  3277                           ; simple_byte            4     3 (average)
  3278                           ;	Chosen strategy is simple_byte
  3279  002554  51A2               	movf	(??_main+1)& (0+255),w,b
  3280  002556  0A00               	xorlw	0	; case 0
  3281  002558  B4D8               	btfsc	status,2,c
  3282  00255A  EFB1  F012         	goto	l7281
  3283  00255E  EF96  F012         	goto	l7151
  3284  002562                     l7281:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ; Switch size 1, requested type "simple"
  3288                           ; Number of cases is 2, Range of values is 3 to 16
  3289                           ; switch strategies available:
  3290                           ; Name         Instructions Cycles
  3291                           ; simple_byte            7     4 (average)
  3292                           ;	Chosen strategy is simple_byte
  3293  002562  51A1               	movf	??_main& (0+255),w,b
  3294  002564  0A03               	xorlw	3	; case 3
  3295  002566  B4D8               	btfsc	status,2,c
  3296  002568  EF86  F012         	goto	l7147
  3297  00256C  0A13               	xorlw	19	; case 16
  3298  00256E  B4D8               	btfsc	status,2,c
  3299  002570  EF8A  F012         	goto	l7149
  3300  002574  EF96  F012         	goto	l7151
  3301  002578                     l7157:
  3302                           
  3303                           ;main.c: 101:             ClearModbusData();
  3304  002578  EC5E  F01C         	call	_ClearModbusData	;wreg free
  3305                           
  3306                           ;main.c: 102:             ClearModbusRespon();
  3307  00257C  EC38  F01C         	call	_ClearModbusRespon	;wreg free
  3308                           
  3309                           ;main.c: 103:         }else if(ReadRX232(16) != 0){
  3310  002580  EF6F  F012         	goto	l7141
  3311  002584                     l7159:
  3312  002584  0E00               	movlw	0
  3313  002586  0100               	movlb	0	; () banked
  3314  002588  6F8C               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  3315  00258A  0E10               	movlw	16
  3316  00258C  6F8B               	movwf	ReadRX232@NumChars& (0+255),b
  3317  00258E  EC34  F011         	call	_ReadRX232	;wreg free
  3318  002592  0100               	movlb	0	; () banked
  3319  002594  518B               	movf	?_ReadRX232& (0+255),w,b
  3320  002596  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3321  002598  B4D8               	btfsc	status,2,c
  3322  00259A  EFD1  F012         	goto	u7201
  3323  00259E  EFD3  F012         	goto	u7200
  3324  0025A2                     u7201:
  3325  0025A2  EFE1  F012         	goto	l594
  3326  0025A6                     u7200:
  3327  0025A6                     
  3328                           ; BSR set to: 0
  3329                           ;main.c: 105:             if(ValidateCmd() ==1){
  3330  0025A6  ECA7  F00C         	call	_ValidateCmd	;wreg free
  3331  0025AA                     
  3332                           ;main.c: 113:              strcpy(Command, "");
  3333  0025AA  0ED4               	movlw	low _Command
  3334  0025AC  6E09               	movwf	strcpy@dest^0,c
  3335  0025AE  0E01               	movlw	high _Command
  3336  0025B0  6E0A               	movwf	(strcpy@dest+1)^0,c
  3337  0025B2  0E9D               	movlw	low (STR_37+53)
  3338  0025B4  6E0B               	movwf	strcpy@src^0,c
  3339  0025B6  0EFB               	movlw	high (STR_37+53)
  3340  0025B8  6E0C               	movwf	(strcpy@src+1)^0,c
  3341  0025BA  ECD3  F01A         	call	_strcpy	;wreg free
  3342                           
  3343                           ;main.c: 115:         }else{
  3344  0025BE  EF6F  F012         	goto	l7141
  3345  0025C2                     l594:
  3346                           
  3347                           ; BSR set to: 0
  3348  0025C2  EF6F  F012         	goto	l7141
  3349  0025C6  EF93  F000         	goto	start
  3350  0025CA                     __end_of_main:
  3351                           	opt callstack 0
  3352                           
  3353 ;; *************** function _ValidateCmd *****************
  3354 ;; Defined at:
  3355 ;;		line 242 in file "RS232.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  ConfName       20   40[BANK5 ] unsigned char [20]
  3360 ;;  MaxChars        2    0        int 
  3361 ;;  ConfName       20   20[BANK5 ] unsigned char [20]
  3362 ;;  MaxChars        2    0        int 
  3363 ;;  ConfName       20    0[BANK5 ] unsigned char [20]
  3364 ;;  MaxChars        2    0        int 
  3365 ;;  i               2    0        int 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      _Bool 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0      68       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0      68       0       0       0       0       0       
      +0       0       0       0
  3379 ;;Total ram usage:       68 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:   15
  3382 ;; This function calls:
  3383 ;;		_InitialiseString
  3384 ;;		_SaveCardDat
  3385 ;;		_TogDebug
  3386 ;;		_printf
  3387 ;;		_strcmp
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text1
  3394  00194E                     __ptext1:
  3395                           	opt callstack 0
  3396  00194E                     _ValidateCmd:
  3397                           	opt callstack 15
  3398  00194E                     
  3399                           ;RS232.c: 247:     printf("\r\n Validating Command: %s \r\n" , Command);
  3400  00194E  0E5C               	movlw	low STR_56
  3401  001950  0100               	movlb	0	; () banked
  3402  001952  6F7D               	movwf	printf@fmt& (0+255),b
  3403  001954  0EFD               	movlw	high STR_56
  3404  001956  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3405  001958  0ED4               	movlw	low _Command
  3406  00195A  6F7F               	movwf	(?_printf+2)& (0+255),b
  3407  00195C  0E01               	movlw	high _Command
  3408  00195E  6F80               	movwf	(?_printf+3)& (0+255),b
  3409  001960  EC2B  F01E         	call	_printf	;wreg free
  3410  001964                     
  3411                           ;RS232.c: 249:     if(!strcmp(Command,"debug")){
  3412  001964  0ED4               	movlw	low _Command
  3413  001966  6E05               	movwf	strcmp@l^0,c
  3414  001968  0E01               	movlw	high _Command
  3415  00196A  6E06               	movwf	(strcmp@l+1)^0,c
  3416  00196C  0EEE               	movlw	low STR_57
  3417  00196E  6E07               	movwf	strcmp@r^0,c
  3418  001970  0EFF               	movlw	high STR_57
  3419  001972  6E08               	movwf	(strcmp@r+1)^0,c
  3420  001974  ECF9  F019         	call	_strcmp	;wreg free
  3421  001978  5005               	movf	?_strcmp^0,w,c
  3422  00197A  1006               	iorwf	(?_strcmp+1)^0,w,c
  3423  00197C  A4D8               	btfss	status,2,c
  3424  00197E  EFC3  F00C         	goto	u7101
  3425  001982  EFC5  F00C         	goto	u7100
  3426  001986                     u7101:
  3427  001986  EFCA  F00C         	goto	l7051
  3428  00198A                     u7100:
  3429  00198A                     
  3430                           ;RS232.c: 250:         TogDebug();
  3431  00198A  EC8F  F01D         	call	_TogDebug	;wreg free
  3432  00198E                     l7045:
  3433                           
  3434                           ;RS232.c: 251:         return 1;
  3435  00198E  0E01               	movlw	1
  3436  001990  EF75  F00D         	goto	l942
  3437  001994                     l7051:
  3438  001994  0ED4               	movlw	low _Command
  3439  001996  6E05               	movwf	strcmp@l^0,c
  3440  001998  0E01               	movlw	high _Command
  3441  00199A  6E06               	movwf	(strcmp@l+1)^0,c
  3442  00199C  0EFD               	movlw	low STR_59
  3443  00199E  6E07               	movwf	strcmp@r^0,c
  3444  0019A0  0EFF               	movlw	high STR_59
  3445  0019A2  6E08               	movwf	(strcmp@r+1)^0,c
  3446  0019A4  ECF9  F019         	call	_strcmp	;wreg free
  3447  0019A8  5005               	movf	?_strcmp^0,w,c
  3448  0019AA  1006               	iorwf	(?_strcmp+1)^0,w,c
  3449  0019AC  A4D8               	btfss	status,2,c
  3450  0019AE  EFDB  F00C         	goto	u7111
  3451  0019B2  EFDD  F00C         	goto	u7110
  3452  0019B6                     u7111:
  3453  0019B6  EFE1  F00C         	goto	l7061
  3454  0019BA                     u7110:
  3455  0019BA                     l7053:
  3456                           
  3457                           ;RS232.c: 253:         InitialiseString();
  3458  0019BA  EC8D  F017         	call	_InitialiseString	;wreg free
  3459  0019BE  EFC7  F00C         	goto	l7045
  3460  0019C2                     l7061:
  3461  0019C2  0ED4               	movlw	low _Command
  3462  0019C4  6E05               	movwf	strcmp@l^0,c
  3463  0019C6  0E01               	movlw	high _Command
  3464  0019C8  6E06               	movwf	(strcmp@l+1)^0,c
  3465  0019CA  0EE7               	movlw	low STR_61
  3466  0019CC  6E07               	movwf	strcmp@r^0,c
  3467  0019CE  0EFF               	movlw	high STR_61
  3468  0019D0  6E08               	movwf	(strcmp@r+1)^0,c
  3469  0019D2  ECF9  F019         	call	_strcmp	;wreg free
  3470  0019D6  5005               	movf	?_strcmp^0,w,c
  3471  0019D8  1006               	iorwf	(?_strcmp+1)^0,w,c
  3472  0019DA  A4D8               	btfss	status,2,c
  3473  0019DC  EFF2  F00C         	goto	u7121
  3474  0019E0  EFF4  F00C         	goto	u7120
  3475  0019E4                     u7121:
  3476  0019E4  EF12  F00D         	goto	l7077
  3477  0019E8                     u7120:
  3478  0019E8                     
  3479                           ;RS232.c: 257:         char ConfName[20] = "Serial Number";
  3480  0019E8  EE22  F0D7         	lfsr	2,ValidateCmd@F10731
  3481  0019EC  EE15  F000         	lfsr	1,ValidateCmd@ConfName
  3482  0019F0  0E13               	movlw	19
  3483  0019F2                     u7131:
  3484  0019F2  CFDB FFE3          	movff	plusw2,plusw1
  3485  0019F6  06E8               	decf	wreg,f,c
  3486  0019F8  E2FC               	bc	u7131
  3487  0019FA                     
  3488                           ;RS232.c: 263:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  3489  0019FA  0E00               	movlw	low ValidateCmd@ConfName
  3490  0019FC  0100               	movlb	0	; () banked
  3491  0019FE  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3492  001A00  0E05               	movlw	high ValidateCmd@ConfName
  3493  001A02  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3494  001A04  0E03               	movlw	3
  3495  001A06  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3496  001A08  0E00               	movlw	0
  3497  001A0A  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3498  001A0C  0E03               	movlw	3
  3499  001A0E  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3500  001A10  0E00               	movlw	0
  3501  001A12  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3502  001A14  0E00               	movlw	0
  3503  001A16  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3504  001A18  0E0A               	movlw	10
  3505  001A1A  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3506  001A1C  EC5F  F008         	call	_SaveCardDat	;wreg free
  3507  001A20  EFDD  F00C         	goto	l7053
  3508  001A24                     l7077:
  3509  001A24  0ED4               	movlw	low _Command
  3510  001A26  6E05               	movwf	strcmp@l^0,c
  3511  001A28  0E01               	movlw	high _Command
  3512  001A2A  6E06               	movwf	(strcmp@l+1)^0,c
  3513  001A2C  0EF4               	movlw	low STR_63
  3514  001A2E  6E07               	movwf	strcmp@r^0,c
  3515  001A30  0EFF               	movlw	high STR_63
  3516  001A32  6E08               	movwf	(strcmp@r+1)^0,c
  3517  001A34  ECF9  F019         	call	_strcmp	;wreg free
  3518  001A38  5005               	movf	?_strcmp^0,w,c
  3519  001A3A  1006               	iorwf	(?_strcmp+1)^0,w,c
  3520  001A3C  A4D8               	btfss	status,2,c
  3521  001A3E  EF23  F00D         	goto	u7141
  3522  001A42  EF25  F00D         	goto	u7140
  3523  001A46                     u7141:
  3524  001A46  EF43  F00D         	goto	l7091
  3525  001A4A                     u7140:
  3526  001A4A                     
  3527                           ;RS232.c: 271:         char ConfName[20] = "Part Number";
  3528  001A4A  EE22  F0C3         	lfsr	2,ValidateCmd@F10734
  3529  001A4E  EE15  F014         	lfsr	1,ValidateCmd@ConfName_1449
  3530  001A52  0E13               	movlw	19
  3531  001A54                     u7151:
  3532  001A54  CFDB FFE3          	movff	plusw2,plusw1
  3533  001A58  06E8               	decf	wreg,f,c
  3534  001A5A  E2FC               	bc	u7151
  3535  001A5C                     
  3536                           ;RS232.c: 273:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  3537  001A5C  0E14               	movlw	low ValidateCmd@ConfName_1449
  3538  001A5E  0100               	movlb	0	; () banked
  3539  001A60  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3540  001A62  0E05               	movlw	high ValidateCmd@ConfName_1449
  3541  001A64  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3542  001A66  0E01               	movlw	1
  3543  001A68  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3544  001A6A  0E00               	movlw	0
  3545  001A6C  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3546  001A6E  0E01               	movlw	1
  3547  001A70  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3548  001A72  0E00               	movlw	0
  3549  001A74  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3550  001A76  0E00               	movlw	0
  3551  001A78  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3552  001A7A  0E10               	movlw	16
  3553  001A7C  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3554  001A7E  EC5F  F008         	call	_SaveCardDat	;wreg free
  3555  001A82  EFC7  F00C         	goto	l7045
  3556  001A86                     l7091:
  3557  001A86  0ED4               	movlw	low _Command
  3558  001A88  6E05               	movwf	strcmp@l^0,c
  3559  001A8A  0E01               	movlw	high _Command
  3560  001A8C  6E06               	movwf	(strcmp@l+1)^0,c
  3561  001A8E  0EF9               	movlw	low STR_65
  3562  001A90  6E07               	movwf	strcmp@r^0,c
  3563  001A92  0EFF               	movlw	high STR_65
  3564  001A94  6E08               	movwf	(strcmp@r+1)^0,c
  3565  001A96  ECF9  F019         	call	_strcmp	;wreg free
  3566  001A9A  5005               	movf	?_strcmp^0,w,c
  3567  001A9C  1006               	iorwf	(?_strcmp+1)^0,w,c
  3568  001A9E  A4D8               	btfss	status,2,c
  3569  001AA0  EF54  F00D         	goto	u7161
  3570  001AA4  EF56  F00D         	goto	u7160
  3571  001AA8                     u7161:
  3572  001AA8  EF74  F00D         	goto	l7105
  3573  001AAC                     u7160:
  3574  001AAC                     
  3575                           ;RS232.c: 281:         char ConfName[20] = "Revision";
  3576  001AAC  EE22  F0AF         	lfsr	2,ValidateCmd@F10737
  3577  001AB0  EE15  F028         	lfsr	1,ValidateCmd@ConfName_1453
  3578  001AB4  0E13               	movlw	19
  3579  001AB6                     u7171:
  3580  001AB6  CFDB FFE3          	movff	plusw2,plusw1
  3581  001ABA  06E8               	decf	wreg,f,c
  3582  001ABC  E2FC               	bc	u7171
  3583  001ABE                     
  3584                           ;RS232.c: 285:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  3585  001ABE  0E28               	movlw	low ValidateCmd@ConfName_1453
  3586  001AC0  0100               	movlb	0	; () banked
  3587  001AC2  6F8F               	movwf	SaveCardDat@Name& (0+255),b
  3588  001AC4  0E05               	movlw	high ValidateCmd@ConfName_1453
  3589  001AC6  6F90               	movwf	(SaveCardDat@Name+1)& (0+255),b
  3590  001AC8  0E02               	movlw	2
  3591  001ACA  6F92               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  3592  001ACC  0E00               	movlw	0
  3593  001ACE  6F91               	movwf	SaveCardDat@MBAddress& (0+255),b
  3594  001AD0  0E02               	movlw	2
  3595  001AD2  6F94               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  3596  001AD4  0E00               	movlw	0
  3597  001AD6  6F93               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  3598  001AD8  0E00               	movlw	0
  3599  001ADA  6F96               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  3600  001ADC  0E02               	movlw	2
  3601  001ADE  6F95               	movwf	SaveCardDat@NumBytes& (0+255),b
  3602  001AE0  EC5F  F008         	call	_SaveCardDat	;wreg free
  3603  001AE4  EFC7  F00C         	goto	l7045
  3604  001AE8                     l7105:
  3605                           
  3606                           ;RS232.c: 290:         return 0;
  3607  001AE8  0E00               	movlw	0
  3608  001AEA                     l942:
  3609  001AEA  0012               	return		;funcret
  3610  001AEC                     __end_of_ValidateCmd:
  3611                           	opt callstack 0
  3612                           
  3613 ;; *************** function _strcmp *****************
  3614 ;; Defined at:
  3615 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  l               2    4[COMRAM] PTR const unsigned char 
  3618 ;;		 -> Command(16), 
  3619 ;;  r               2    6[COMRAM] PTR const unsigned char 
  3620 ;;		 -> STR_66(4), STR_64(5), STR_62(7), STR_60(2), 
  3621 ;;		 -> STR_58(6), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    4[COMRAM] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;Total ram usage:        5 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    4
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_ValidateCmd
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text2
  3648  0033F2                     __ptext2:
  3649                           	opt callstack 0
  3650  0033F2                     _strcmp:
  3651                           	opt callstack 25
  3652  0033F2  EFFF  F019         	goto	l6801
  3653  0033F6                     l6799:
  3654  0033F6  4A05               	infsnz	strcmp@l^0,f,c
  3655  0033F8  2A06               	incf	(strcmp@l+1)^0,f,c
  3656  0033FA  4A07               	infsnz	strcmp@r^0,f,c
  3657  0033FC  2A08               	incf	(strcmp@r+1)^0,f,c
  3658  0033FE                     l6801:
  3659  0033FE  C005  FFD9         	movff	strcmp@l,fsr2l
  3660  003402  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3661  003406  50DF               	movf	indf2,w,c
  3662  003408  6E09               	movwf	??_strcmp^0,c
  3663  00340A  C007  FFF6         	movff	strcmp@r,tblptrl
  3664  00340E  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3665  003412                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3666  003412  6AF8               	clrf	tblptru,c
  3667  003414                     	endif
  3668  003414                     	if	0	;tblptru may be non-zero
  3669  003414                     	endif
  3670  003414  0008               	tblrd		*
  3671  003416  50F5               	movf	tablat,w,c
  3672  003418  1809               	xorwf	??_strcmp^0,w,c
  3673  00341A  A4D8               	btfss	status,2,c
  3674  00341C  EF12  F01A         	goto	u6871
  3675  003420  EF14  F01A         	goto	u6870
  3676  003424                     u6871:
  3677  003424  EF20  F01A         	goto	l6805
  3678  003428                     u6870:
  3679  003428  C005  FFD9         	movff	strcmp@l,fsr2l
  3680  00342C  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3681  003430  50DF               	movf	indf2,w,c
  3682  003432  A4D8               	btfss	status,2,c
  3683  003434  EF1E  F01A         	goto	u6881
  3684  003438  EF20  F01A         	goto	u6880
  3685  00343C                     u6881:
  3686  00343C  EFFB  F019         	goto	l6799
  3687  003440                     u6880:
  3688  003440                     l6805:
  3689  003440  C005  FFD9         	movff	strcmp@l,fsr2l
  3690  003444  C006  FFDA         	movff	strcmp@l+1,fsr2h
  3691  003448  50DF               	movf	indf2,w,c
  3692  00344A  6E09               	movwf	??_strcmp^0,c
  3693  00344C  C007  FFF6         	movff	strcmp@r,tblptrl
  3694  003450  C008  FFF7         	movff	strcmp@r+1,tblptrh
  3695  003454                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3696  003454  6AF8               	clrf	tblptru,c
  3697  003456                     	endif
  3698  003456                     	if	0	;tblptru may be non-zero
  3699  003456                     	endif
  3700  003456  0008               	tblrd		*
  3701  003458  50F5               	movf	tablat,w,c
  3702  00345A  5C09               	subwf	??_strcmp^0,w,c
  3703  00345C  6E05               	movwf	?_strcmp^0,c
  3704  00345E  6A06               	clrf	(?_strcmp+1)^0,c
  3705  003460  A0D8               	btfss	status,0,c
  3706  003462  0606               	decf	(?_strcmp+1)^0,f,c
  3707  003464  0012               	return		;funcret
  3708  003466                     __end_of_strcmp:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _TogDebug *****************
  3712 ;; Defined at:
  3713 ;;		line 148 in file "RS232.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:   13
  3734 ;; This function calls:
  3735 ;;		_printf
  3736 ;; This function is called by:
  3737 ;;		_ValidateCmd
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text3
  3742  003B1E                     __ptext3:
  3743                           	opt callstack 0
  3744  003B1E                     _TogDebug:
  3745                           	opt callstack 16
  3746  003B1E                     
  3747                           ;RS232.c: 150:     if(Debug==0){
  3748  003B1E  0100               	movlb	0	; () banked
  3749  003B20  51B0               	movf	_Debug& (0+255),w,b
  3750  003B22  A4D8               	btfss	status,2,c
  3751  003B24  EF96  F01D         	goto	u6801
  3752  003B28  EF98  F01D         	goto	u6800
  3753  003B2C                     u6801:
  3754  003B2C  EFA2  F01D         	goto	l6725
  3755  003B30                     u6800:
  3756  003B30                     
  3757                           ; BSR set to: 0
  3758                           ;RS232.c: 151:         Debug =1;
  3759  003B30  0E01               	movlw	1
  3760  003B32  6FB0               	movwf	_Debug& (0+255),b
  3761  003B34                     
  3762                           ; BSR set to: 0
  3763                           ;RS232.c: 152:         printf("Debug Enabled\r\n");
  3764  003B34  0E44               	movlw	low STR_41
  3765  003B36  6F7D               	movwf	printf@fmt& (0+255),b
  3766  003B38  0EFF               	movlw	high STR_41
  3767  003B3A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3768  003B3C  EC2B  F01E         	call	_printf	;wreg free
  3769                           
  3770                           ;RS232.c: 153:     }else{
  3771  003B40  EFAA  F01D         	goto	l914
  3772  003B44                     l6725:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;RS232.c: 154:         Debug =0;
  3776  003B44  0E00               	movlw	0
  3777  003B46  6FB0               	movwf	_Debug& (0+255),b
  3778  003B48                     
  3779                           ; BSR set to: 0
  3780                           ;RS232.c: 155:         printf("Debug Disabled\r\n");
  3781  003B48  0E33               	movlw	low STR_42
  3782  003B4A  6F7D               	movwf	printf@fmt& (0+255),b
  3783  003B4C  0EFF               	movlw	high STR_42
  3784  003B4E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3785  003B50  EC2B  F01E         	call	_printf	;wreg free
  3786  003B54                     l914:
  3787  003B54  0012               	return		;funcret
  3788  003B56                     __end_of_TogDebug:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _SaveCardDat *****************
  3792 ;; Defined at:
  3793 ;;		line 174 in file "RS232.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  Name            2   47[BANK0 ] PTR unsigned char 
  3796 ;;		 -> ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), 
  3797 ;;  MBAddress       2   49[BANK0 ] unsigned int 
  3798 ;;  dataeeAddr      2   51[BANK0 ] unsigned short 
  3799 ;;  NumBytes        2   53[BANK0 ] int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  i               2   63[BANK0 ] int 
  3802 ;;  dataeeAddrWr    2   61[BANK0 ] unsigned short 
  3803 ;;  Conf            1   60[BANK0 ] unsigned char 
  3804 ;;  readData        1   59[BANK0 ] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;Total ram usage:       18 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:   14
  3821 ;; This function calls:
  3822 ;;		_ClearEEAddRange
  3823 ;;		_DATAEE_ReadByte
  3824 ;;		_DATAEE_WriteByte
  3825 ;;		_EUSART2_Read
  3826 ;;		_EUSART2_is_rx_ready
  3827 ;;		_ReadRX232
  3828 ;;		_printf
  3829 ;;		_strcpy
  3830 ;;		_strlen
  3831 ;; This function is called by:
  3832 ;;		_ValidateCmd
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text4
  3837  0010BE                     __ptext4:
  3838                           	opt callstack 0
  3839  0010BE                     _SaveCardDat:
  3840                           	opt callstack 15
  3841  0010BE                     
  3842                           ;RS232.c: 177:     unsigned char Conf, readData;;RS232.c: 178:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  3843  0010BE  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  3844  0010C2  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  3845  0010C6                     
  3846                           ;RS232.c: 180:     printf("Saving Card Data\r\n");
  3847  0010C6  0EEB               	movlw	low STR_45
  3848  0010C8  0100               	movlb	0	; () banked
  3849  0010CA  6F7D               	movwf	printf@fmt& (0+255),b
  3850  0010CC  0EFE               	movlw	high STR_45
  3851  0010CE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3852  0010D0  EC2B  F01E         	call	_printf	;wreg free
  3853  0010D4                     
  3854                           ;RS232.c: 181:     printf("Name: %s  MBAddress: 0x%04x   dataeeAddr: 0x%04x   NumBytes: 
      +                          %i \r\n", Name, MBAddress, dataeeAddr, NumBytes);
  3855  0010D4  0EB1               	movlw	low STR_46
  3856  0010D6  0100               	movlb	0	; () banked
  3857  0010D8  6F7D               	movwf	printf@fmt& (0+255),b
  3858  0010DA  0EFA               	movlw	high STR_46
  3859  0010DC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3860  0010DE  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3861  0010E2  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3862  0010E6  C091  F081         	movff	SaveCardDat@MBAddress,?_printf+4
  3863  0010EA  C092  F082         	movff	SaveCardDat@MBAddress+1,?_printf+5
  3864  0010EE  C093  F083         	movff	SaveCardDat@dataeeAddr,?_printf+6
  3865  0010F2  C094  F084         	movff	SaveCardDat@dataeeAddr+1,?_printf+7
  3866  0010F6  C095  F085         	movff	SaveCardDat@NumBytes,?_printf+8
  3867  0010FA  C096  F086         	movff	SaveCardDat@NumBytes+1,?_printf+9
  3868  0010FE  EC2B  F01E         	call	_printf	;wreg free
  3869  001102                     
  3870                           ;RS232.c: 183:     printf("Enter card %s (max %i characters): ", Name, NumBytes);
  3871  001102  0E32               	movlw	low STR_47
  3872  001104  0100               	movlb	0	; () banked
  3873  001106  6F7D               	movwf	printf@fmt& (0+255),b
  3874  001108  0EFC               	movlw	high STR_47
  3875  00110A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3876  00110C  C08F  F07F         	movff	SaveCardDat@Name,?_printf+2
  3877  001110  C090  F080         	movff	SaveCardDat@Name+1,?_printf+3
  3878  001114  C095  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  3879  001118  C096  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  3880  00111C  EC2B  F01E         	call	_printf	;wreg free
  3881  001120                     
  3882                           ;RS232.c: 185:     strcpy(Command, "");
  3883  001120  0ED4               	movlw	low _Command
  3884  001122  6E09               	movwf	strcpy@dest^0,c
  3885  001124  0E01               	movlw	high _Command
  3886  001126  6E0A               	movwf	(strcpy@dest+1)^0,c
  3887  001128  0E9D               	movlw	low (STR_37+53)
  3888  00112A  6E0B               	movwf	strcpy@src^0,c
  3889  00112C  0EFB               	movlw	high (STR_37+53)
  3890  00112E  6E0C               	movwf	(strcpy@src+1)^0,c
  3891  001130  ECD3  F01A         	call	_strcpy	;wreg free
  3892  001134                     l6741:
  3893  001134  C095  F08B         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  3894  001138  C096  F08C         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  3895  00113C  EC34  F011         	call	_ReadRX232	;wreg free
  3896  001140  0100               	movlb	0	; () banked
  3897  001142  518B               	movf	?_ReadRX232& (0+255),w,b
  3898  001144  118C               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  3899  001146  B4D8               	btfsc	status,2,c
  3900  001148  EFA8  F008         	goto	u6811
  3901  00114C  EFAA  F008         	goto	u6810
  3902  001150                     u6811:
  3903  001150  EF9A  F008         	goto	l6741
  3904  001154                     u6810:
  3905  001154                     
  3906                           ; BSR set to: 0
  3907                           ;RS232.c: 188:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  3908  001154  0EBF               	movlw	low STR_49
  3909  001156  6F7D               	movwf	printf@fmt& (0+255),b
  3910  001158  0EFC               	movlw	high STR_49
  3911  00115A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3912  00115C  0ED4               	movlw	low _Command
  3913  00115E  6F7F               	movwf	(?_printf+2)& (0+255),b
  3914  001160  0E01               	movlw	high _Command
  3915  001162  6F80               	movwf	(?_printf+3)& (0+255),b
  3916  001164  EC2B  F01E         	call	_printf	;wreg free
  3917  001168                     l6745:
  3918  001168  EC80  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  3919  00116C  0900               	iorlw	0
  3920  00116E  B4D8               	btfsc	status,2,c
  3921  001170  EFBC  F008         	goto	u6821
  3922  001174  EFBE  F008         	goto	u6820
  3923  001178                     u6821:
  3924  001178  EFB4  F008         	goto	l6745
  3925  00117C                     u6820:
  3926  00117C                     
  3927                           ;RS232.c: 193:     Conf = EUSART2_Read();
  3928  00117C  EC8F  F01B         	call	_EUSART2_Read	;wreg free
  3929  001180  0100               	movlb	0	; () banked
  3930  001182  6F9C               	movwf	SaveCardDat@Conf& (0+255),b
  3931  001184                     
  3932                           ; BSR set to: 0
  3933                           ;RS232.c: 196:     if(Conf == 0x79 || Conf == 0x59){
  3934  001184  0E79               	movlw	121
  3935  001186  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3936  001188  B4D8               	btfsc	status,2,c
  3937  00118A  EFC9  F008         	goto	u6831
  3938  00118E  EFCB  F008         	goto	u6830
  3939  001192                     u6831:
  3940  001192  EFD4  F008         	goto	l931
  3941  001196                     u6830:
  3942  001196                     
  3943                           ; BSR set to: 0
  3944  001196  0E59               	movlw	89
  3945  001198  199C               	xorwf	SaveCardDat@Conf& (0+255),w,b
  3946  00119A  A4D8               	btfss	status,2,c
  3947  00119C  EFD2  F008         	goto	u6841
  3948  0011A0  EFD4  F008         	goto	u6840
  3949  0011A4                     u6841:
  3950  0011A4  EFA8  F009         	goto	l938
  3951  0011A8                     u6840:
  3952  0011A8                     l931:
  3953  0011A8                     
  3954                           ; BSR set to: 0
  3955                           ;RS232.c: 198:         printf("Y\r\nSaving Serial Number \r\n");
  3956  0011A8  0EE9               	movlw	low STR_50
  3957  0011AA  6F7D               	movwf	printf@fmt& (0+255),b
  3958  0011AC  0EFD               	movlw	high STR_50
  3959  0011AE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3960  0011B0  EC2B  F01E         	call	_printf	;wreg free
  3961  0011B4                     
  3962                           ;RS232.c: 199:         printf("Num Chars: %i \r\n", strlen(Command));
  3963  0011B4  0ED4               	movlw	low _Command
  3964  0011B6  6E05               	movwf	strlen@s^0,c
  3965  0011B8  0E01               	movlw	high _Command
  3966  0011BA  6E06               	movwf	(strlen@s+1)^0,c
  3967  0011BC  EC10  F01C         	call	_strlen	;wreg free
  3968  0011C0  C005  F099         	movff	?_strlen,_SaveCardDat$2436
  3969  0011C4  C006  F09A         	movff	?_strlen+1,_SaveCardDat$2436+1
  3970  0011C8                     
  3971                           ;RS232.c: 199:         printf("Num Chars: %i \r\n", strlen(Command));
  3972  0011C8  0E22               	movlw	low STR_51
  3973  0011CA  0100               	movlb	0	; () banked
  3974  0011CC  6F7D               	movwf	printf@fmt& (0+255),b
  3975  0011CE  0EFF               	movlw	high STR_51
  3976  0011D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  3977  0011D2  C099  F07F         	movff	_SaveCardDat$2436,?_printf+2
  3978  0011D6  C09A  F080         	movff	_SaveCardDat$2436+1,?_printf+3
  3979  0011DA  EC2B  F01E         	call	_printf	;wreg free
  3980  0011DE                     
  3981                           ;RS232.c: 203:         ClearEEAddRange(dataeeAddr,NumBytes);
  3982  0011DE  C093  F08B         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  3983  0011E2  C094  F08C         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  3984  0011E6  C095  F08D         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  3985  0011EA  C096  F08E         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  3986  0011EE  EC7B  F019         	call	_ClearEEAddRange	;wreg free
  3987  0011F2                     
  3988                           ;RS232.c: 206:         for (i = 0; i < strlen(Command); i++){
  3989  0011F2  0E00               	movlw	0
  3990  0011F4  0100               	movlb	0	; () banked
  3991  0011F6  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  3992  0011F8  0E00               	movlw	0
  3993  0011FA  6F9F               	movwf	SaveCardDat@i& (0+255),b
  3994  0011FC  EF36  F009         	goto	l6773
  3995  001200                     l6763:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;RS232.c: 207:             printf("Char 0x%02x in 0x%02x \r\n", Command[i], dataeeAddrWr
      +                          k);
  3999  001200  0E04               	movlw	low STR_52
  4000  001202  6F7D               	movwf	printf@fmt& (0+255),b
  4001  001204  0EFE               	movlw	high STR_52
  4002  001206  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4003  001208  0ED4               	movlw	low _Command
  4004  00120A  259F               	addwf	SaveCardDat@i& (0+255),w,b
  4005  00120C  6ED9               	movwf	fsr2l,c
  4006  00120E  0E01               	movlw	high _Command
  4007  001210  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  4008  001212  6EDA               	movwf	fsr2h,c
  4009  001214  50DF               	movf	indf2,w,c
  4010  001216  6F97               	movwf	??_SaveCardDat& (0+255),b
  4011  001218  5197               	movf	??_SaveCardDat& (0+255),w,b
  4012  00121A  6F7F               	movwf	(?_printf+2)& (0+255),b
  4013  00121C  6B80               	clrf	(?_printf+3)& (0+255),b
  4014  00121E  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  4015  001222  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  4016  001226  EC2B  F01E         	call	_printf	;wreg free
  4017  00122A                     
  4018                           ;RS232.c: 208:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  4019  00122A  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  4020  00122E  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  4021  001232  0ED4               	movlw	low _Command
  4022  001234  0100               	movlb	0	; () banked
  4023  001236  259F               	addwf	SaveCardDat@i& (0+255),w,b
  4024  001238  6ED9               	movwf	fsr2l,c
  4025  00123A  0E01               	movlw	high _Command
  4026  00123C  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  4027  00123E  6EDA               	movwf	fsr2h,c
  4028  001240  50DF               	movf	indf2,w,c
  4029  001242  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4030  001244  ECCD  F01C         	call	_DATAEE_WriteByte	;wreg free
  4031  001248                     
  4032                           ;RS232.c: 209:             dataeeAddrWrk++;
  4033  001248  0100               	movlb	0	; () banked
  4034  00124A  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4035  00124C  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4036  00124E                     
  4037                           ; BSR set to: 0
  4038                           ;RS232.c: 210:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4039  00124E  0E03               	movlw	3
  4040  001250  0100               	movlb	0	; () banked
  4041  001252  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  4042  001254  0E08               	movlw	8
  4043  001256  6F97               	movwf	??_SaveCardDat& (0+255),b
  4044  001258  0E77               	movlw	119
  4045  00125A                     u7217:
  4046  00125A  2EE8               	decfsz	wreg,f,c
  4047  00125C  D7FE               	bra	u7217
  4048  00125E  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  4049  001260  D7FC               	bra	u7217
  4050  001262  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4051  001264  D7FA               	bra	u7217
  4052  001266                     
  4053                           ;RS232.c: 211:         }
  4054  001266  0100               	movlb	0	; () banked
  4055  001268  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  4056  00126A  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4057  00126C                     l6773:
  4058                           
  4059                           ; BSR set to: 0
  4060  00126C  0ED4               	movlw	low _Command
  4061  00126E  6E05               	movwf	strlen@s^0,c
  4062  001270  0E01               	movlw	high _Command
  4063  001272  6E06               	movwf	(strlen@s+1)^0,c
  4064  001274  EC10  F01C         	call	_strlen	;wreg free
  4065  001278  5005               	movf	?_strlen^0,w,c
  4066  00127A  0100               	movlb	0	; () banked
  4067  00127C  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  4068  00127E  5006               	movf	(?_strlen+1)^0,w,c
  4069  001280  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4070  001282  A0D8               	btfss	status,0,c
  4071  001284  EF46  F009         	goto	u6851
  4072  001288  EF48  F009         	goto	u6850
  4073  00128C                     u6851:
  4074  00128C  EF00  F009         	goto	l6763
  4075  001290                     u6850:
  4076  001290                     
  4077                           ; BSR set to: 0
  4078                           ;RS232.c: 213:         printf("Serial Number Saved. \r\n");
  4079  001290  0E36               	movlw	low STR_53
  4080  001292  6F7D               	movwf	printf@fmt& (0+255),b
  4081  001294  0EFE               	movlw	high STR_53
  4082  001296  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4083  001298  EC2B  F01E         	call	_printf	;wreg free
  4084  00129C                     
  4085                           ;RS232.c: 216:         dataeeAddrWrk = dataeeAddr;
  4086  00129C  C093  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  4087  0012A0  C094  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  4088  0012A4                     
  4089                           ;RS232.c: 217:          _delay((unsigned long)((50)*(32000000/4000.0)));
  4090  0012A4  0E03               	movlw	3
  4091  0012A6  0100               	movlb	0	; () banked
  4092  0012A8  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  4093  0012AA  0E08               	movlw	8
  4094  0012AC  6F97               	movwf	??_SaveCardDat& (0+255),b
  4095  0012AE  0E77               	movlw	119
  4096  0012B0                     u7227:
  4097  0012B0  2EE8               	decfsz	wreg,f,c
  4098  0012B2  D7FE               	bra	u7227
  4099  0012B4  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  4100  0012B6  D7FC               	bra	u7227
  4101  0012B8  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4102  0012BA  D7FA               	bra	u7227
  4103  0012BC                     
  4104                           ;RS232.c: 220:         for(i = 0; i < strlen(Command); i++){
  4105  0012BC  0E00               	movlw	0
  4106  0012BE  0100               	movlb	0	; () banked
  4107  0012C0  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  4108  0012C2  0E00               	movlw	0
  4109  0012C4  6F9F               	movwf	SaveCardDat@i& (0+255),b
  4110  0012C6  EF8C  F009         	goto	l6793
  4111  0012CA                     l6783:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;RS232.c: 221:             readData = DATAEE_ReadByte(dataeeAddrWrk);
  4115  0012CA  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  4116  0012CE  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  4117  0012D2  EC8C  F01E         	call	_DATAEE_ReadByte	;wreg free
  4118  0012D6  0100               	movlb	0	; () banked
  4119  0012D8  6F9B               	movwf	SaveCardDat@readData& (0+255),b
  4120  0012DA                     
  4121                           ; BSR set to: 0
  4122                           ;RS232.c: 222:             printf("EEPROM: 0x%02x Add: 0x%02x \r\n", readData,dataeeAddr
      +                          Wrk);
  4123  0012DA  0E21               	movlw	low STR_54
  4124  0012DC  6F7D               	movwf	printf@fmt& (0+255),b
  4125  0012DE  0EFD               	movlw	high STR_54
  4126  0012E0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4127  0012E2  C09B  F07F         	movff	SaveCardDat@readData,?_printf+2
  4128  0012E6  6B80               	clrf	(?_printf+3)& (0+255),b
  4129  0012E8  C09D  F081         	movff	SaveCardDat@dataeeAddrWrk,?_printf+4
  4130  0012EC  C09E  F082         	movff	SaveCardDat@dataeeAddrWrk+1,?_printf+5
  4131  0012F0  EC2B  F01E         	call	_printf	;wreg free
  4132  0012F4                     
  4133                           ;RS232.c: 223:             dataeeAddrWrk++;
  4134  0012F4  0100               	movlb	0	; () banked
  4135  0012F6  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4136  0012F8  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4137  0012FA                     
  4138                           ; BSR set to: 0
  4139                           ;RS232.c: 224:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4140  0012FA  0E03               	movlw	3
  4141  0012FC  0100               	movlb	0	; () banked
  4142  0012FE  6F98               	movwf	(??_SaveCardDat+1)& (0+255),b
  4143  001300  0E08               	movlw	8
  4144  001302  6F97               	movwf	??_SaveCardDat& (0+255),b
  4145  001304  0E77               	movlw	119
  4146  001306                     u7237:
  4147  001306  2EE8               	decfsz	wreg,f,c
  4148  001308  D7FE               	bra	u7237
  4149  00130A  2F97               	decfsz	??_SaveCardDat& (0+255),f,b
  4150  00130C  D7FC               	bra	u7237
  4151  00130E  2F98               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4152  001310  D7FA               	bra	u7237
  4153  001312                     
  4154                           ;RS232.c: 225:         }
  4155  001312  0100               	movlb	0	; () banked
  4156  001314  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  4157  001316  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4158  001318                     l6793:
  4159                           
  4160                           ; BSR set to: 0
  4161  001318  0ED4               	movlw	low _Command
  4162  00131A  6E05               	movwf	strlen@s^0,c
  4163  00131C  0E01               	movlw	high _Command
  4164  00131E  6E06               	movwf	(strlen@s+1)^0,c
  4165  001320  EC10  F01C         	call	_strlen	;wreg free
  4166  001324  5005               	movf	?_strlen^0,w,c
  4167  001326  0100               	movlb	0	; () banked
  4168  001328  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  4169  00132A  5006               	movf	(?_strlen+1)^0,w,c
  4170  00132C  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4171  00132E  A0D8               	btfss	status,0,c
  4172  001330  EF9C  F009         	goto	u6861
  4173  001334  EF9E  F009         	goto	u6860
  4174  001338                     u6861:
  4175  001338  EF65  F009         	goto	l6783
  4176  00133C                     u6860:
  4177  00133C                     
  4178                           ; BSR set to: 0
  4179                           ;RS232.c: 228:         strcpy(Command, "");
  4180  00133C  0ED4               	movlw	low _Command
  4181  00133E  6E09               	movwf	strcpy@dest^0,c
  4182  001340  0E01               	movlw	high _Command
  4183  001342  6E0A               	movwf	(strcpy@dest+1)^0,c
  4184  001344  0E9D               	movlw	low (STR_37+53)
  4185  001346  6E0B               	movwf	strcpy@src^0,c
  4186  001348  0EFB               	movlw	high (STR_37+53)
  4187  00134A  6E0C               	movwf	(strcpy@src+1)^0,c
  4188  00134C  ECD3  F01A         	call	_strcpy	;wreg free
  4189  001350                     l938:
  4190  001350  0012               	return		;funcret
  4191  001352                     __end_of_SaveCardDat:
  4192                           	opt callstack 0
  4193                           
  4194 ;; *************** function _ReadRX232 *****************
  4195 ;; Defined at:
  4196 ;;		line 93 in file "RS232.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  NumChars        2   43[BANK0 ] int 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  temp            2   84[COMRAM] unsigned char [2]
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2   43[BANK0 ] int 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;Total ram usage:        4 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:   13
  4217 ;; This function calls:
  4218 ;;		_EUSART2_Read
  4219 ;;		_EUSART2_Write
  4220 ;;		_EUSART2_is_rx_ready
  4221 ;;		_memmove
  4222 ;;		_printf
  4223 ;;		_strcat
  4224 ;;		_strlen
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;;		_SaveCardDat
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text5
  4232  002268                     __ptext5:
  4233                           	opt callstack 0
  4234  002268                     _ReadRX232:
  4235                           	opt callstack 15
  4236  002268                     
  4237                           ;RS232.c: 93: int ReadRX232(int NumChars);RS232.c: 94: {;RS232.c: 99:     char temp[2] =
      +                           {'Z','\0'};
  4238  002268  C139  F055         	movff	ReadRX232@F10713,ReadRX232@temp
  4239  00226C  C13A  F056         	movff	ReadRX232@F10713+1,ReadRX232@temp+1
  4240  002270                     
  4241                           ;RS232.c: 102:     if(EUSART2_is_rx_ready())
  4242  002270  EC80  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4243  002274  0900               	iorlw	0
  4244  002276  B4D8               	btfsc	status,2,c
  4245  002278  EF40  F011         	goto	u6521
  4246  00227C  EF42  F011         	goto	u6520
  4247  002280                     u6521:
  4248  002280  EFCB  F011         	goto	l6535
  4249  002284                     u6520:
  4250  002284                     l6505:
  4251                           
  4252                           ;RS232.c: 108:              if(EUSART2_is_rx_ready())
  4253  002284  EC80  F01E         	call	_EUSART2_is_rx_ready	;wreg free
  4254  002288  0900               	iorlw	0
  4255  00228A  B4D8               	btfsc	status,2,c
  4256  00228C  EF4A  F011         	goto	u6531
  4257  002290  EF4C  F011         	goto	u6530
  4258  002294                     u6531:
  4259  002294  EFA7  F011         	goto	l6527
  4260  002298                     u6530:
  4261  002298                     
  4262                           ;RS232.c: 109:              {;RS232.c: 111:                 temp[0]=EUSART2_Read();
  4263  002298  EC8F  F01B         	call	_EUSART2_Read	;wreg free
  4264  00229C  6E55               	movwf	ReadRX232@temp^0,c
  4265                           
  4266                           ;RS232.c: 114:                 EUSART2_Write(temp[0]);
  4267  00229E  5055               	movf	ReadRX232@temp^0,w,c
  4268  0022A0  EC60  F01B         	call	_EUSART2_Write
  4269  0022A4                     
  4270                           ;RS232.c: 116:                 if(temp[0]!='\r'){
  4271  0022A4  0E0D               	movlw	13
  4272  0022A6  1855               	xorwf	ReadRX232@temp^0,w,c
  4273  0022A8  B4D8               	btfsc	status,2,c
  4274  0022AA  EF59  F011         	goto	u6541
  4275  0022AE  EF5B  F011         	goto	u6540
  4276  0022B2                     u6541:
  4277  0022B2  EF65  F011         	goto	l6513
  4278  0022B6                     u6540:
  4279  0022B6                     
  4280                           ;RS232.c: 117:                     strcat(Command, temp);
  4281  0022B6  0ED4               	movlw	low _Command
  4282  0022B8  6E13               	movwf	strcat@dest^0,c
  4283  0022BA  0E01               	movlw	high _Command
  4284  0022BC  6E14               	movwf	(strcat@dest+1)^0,c
  4285  0022BE  0E55               	movlw	low ReadRX232@temp
  4286  0022C0  6E15               	movwf	strcat@src^0,c
  4287  0022C2  0E00               	movlw	high ReadRX232@temp
  4288  0022C4  6E16               	movwf	(strcat@src+1)^0,c
  4289  0022C6  EC3F  F01E         	call	_strcat	;wreg free
  4290  0022CA                     l6513:
  4291                           
  4292                           ;RS232.c: 120:                 if(strlen(Command)>NumChars)
  4293  0022CA  0ED4               	movlw	low _Command
  4294  0022CC  6E05               	movwf	strlen@s^0,c
  4295  0022CE  0E01               	movlw	high _Command
  4296  0022D0  6E06               	movwf	(strlen@s+1)^0,c
  4297  0022D2  EC10  F01C         	call	_strlen	;wreg free
  4298  0022D6  5005               	movf	?_strlen^0,w,c
  4299  0022D8  0100               	movlb	0	; () banked
  4300  0022DA  5D8B               	subwf	ReadRX232@NumChars& (0+255),w,b
  4301  0022DC  5006               	movf	(?_strlen+1)^0,w,c
  4302  0022DE  598C               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4303  0022E0  B0D8               	btfsc	status,0,c
  4304  0022E2  EF75  F011         	goto	u6551
  4305  0022E6  EF77  F011         	goto	u6550
  4306  0022EA                     u6551:
  4307  0022EA  EF96  F011         	goto	l6519
  4308  0022EE                     u6550:
  4309  0022EE                     
  4310                           ; BSR set to: 0
  4311                           ;RS232.c: 121:                 {;RS232.c: 123:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  4312  0022EE  0ED4               	movlw	low _Command
  4313  0022F0  6E09               	movwf	memmove@d1^0,c
  4314  0022F2  0E01               	movlw	high _Command
  4315  0022F4  6E0A               	movwf	(memmove@d1+1)^0,c
  4316  0022F6  0ED5               	movlw	low (_Command+1)
  4317  0022F8  6E0B               	movwf	memmove@s1^0,c
  4318  0022FA  0E01               	movlw	high (_Command+1)
  4319  0022FC  6E0C               	movwf	(memmove@s1+1)^0,c
  4320  0022FE  0ED4               	movlw	low _Command
  4321  002300  6E05               	movwf	strlen@s^0,c
  4322  002302  0E01               	movlw	high _Command
  4323  002304  6E06               	movwf	(strlen@s+1)^0,c
  4324  002306  EC10  F01C         	call	_strlen	;wreg free
  4325  00230A  C005  F00D         	movff	?_strlen,memmove@n
  4326  00230E  C006  F00E         	movff	?_strlen+1,memmove@n+1
  4327  002312  ECCA  F014         	call	_memmove	;wreg free
  4328  002316                     
  4329                           ;RS232.c: 124:                     printf("Del First Char, now contains %s \r\n" , Comma
      +                          nd);
  4330  002316  0E7A               	movlw	low STR_39
  4331  002318  0100               	movlb	0	; () banked
  4332  00231A  6F7D               	movwf	printf@fmt& (0+255),b
  4333  00231C  0EFC               	movlw	high STR_39
  4334  00231E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4335  002320  0ED4               	movlw	low _Command
  4336  002322  6F7F               	movwf	(?_printf+2)& (0+255),b
  4337  002324  0E01               	movlw	high _Command
  4338  002326  6F80               	movwf	(?_printf+3)& (0+255),b
  4339  002328  EC2B  F01E         	call	_printf	;wreg free
  4340  00232C                     l6519:
  4341                           
  4342                           ;RS232.c: 127:                 if(temp[0]=='\r'){
  4343  00232C  0E0D               	movlw	13
  4344  00232E  1855               	xorwf	ReadRX232@temp^0,w,c
  4345  002330  A4D8               	btfss	status,2,c
  4346  002332  EF9D  F011         	goto	u6561
  4347  002336  EF9F  F011         	goto	u6560
  4348  00233A                     u6561:
  4349  00233A  EFA7  F011         	goto	l6527
  4350  00233E                     u6560:
  4351  00233E                     
  4352                           ;RS232.c: 129:                     temp[0]='z';
  4353  00233E  0E7A               	movlw	122
  4354  002340  6E55               	movwf	ReadRX232@temp^0,c
  4355  002342                     
  4356                           ;RS232.c: 130:                     return NumChars;
  4357  002342  C08B  F08B         	movff	ReadRX232@NumChars,?_ReadRX232
  4358  002346  C08C  F08C         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  4359  00234A  EFD0  F011         	goto	l908
  4360  00234E                     l6527:
  4361                           
  4362                           ;RS232.c: 133:         }while( temp[0] !='\r' );
  4363  00234E  0E0D               	movlw	13
  4364  002350  1855               	xorwf	ReadRX232@temp^0,w,c
  4365  002352  A4D8               	btfss	status,2,c
  4366  002354  EFAE  F011         	goto	u6571
  4367  002358  EFB0  F011         	goto	u6570
  4368  00235C                     u6571:
  4369  00235C  EF42  F011         	goto	l6505
  4370  002360                     u6570:
  4371  002360                     
  4372                           ;RS232.c: 135:         Command[strlen(Command)-1] = '\0';
  4373  002360  0ED4               	movlw	low _Command
  4374  002362  6E05               	movwf	strlen@s^0,c
  4375  002364  0E01               	movlw	high _Command
  4376  002366  6E06               	movwf	(strlen@s+1)^0,c
  4377  002368  EC10  F01C         	call	_strlen	;wreg free
  4378  00236C  0ED3               	movlw	low (_Command+65535)
  4379  00236E  2405               	addwf	?_strlen^0,w,c
  4380  002370  6ED9               	movwf	fsr2l,c
  4381  002372  0E01               	movlw	high (_Command+65535)
  4382  002374  2006               	addwfc	(?_strlen+1)^0,w,c
  4383  002376  6EDA               	movwf	fsr2h,c
  4384  002378  0E00               	movlw	0
  4385  00237A  6EDF               	movwf	indf2,c
  4386  00237C                     
  4387                           ;RS232.c: 137:         printf("\r\n\n");
  4388  00237C  0E9A               	movlw	low (STR_37+50)
  4389  00237E  0100               	movlb	0	; () banked
  4390  002380  6F7D               	movwf	printf@fmt& (0+255),b
  4391  002382  0EFB               	movlw	high (STR_37+50)
  4392  002384  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4393  002386  EC2B  F01E         	call	_printf	;wreg free
  4394  00238A                     
  4395                           ;RS232.c: 139:         strlen(Command);
  4396  00238A  0ED4               	movlw	low _Command
  4397  00238C  6E05               	movwf	strlen@s^0,c
  4398  00238E  0E01               	movlw	high _Command
  4399  002390  6E06               	movwf	(strlen@s+1)^0,c
  4400  002392  EC10  F01C         	call	_strlen	;wreg free
  4401  002396                     l6535:
  4402                           
  4403                           ;RS232.c: 142:     return 0;
  4404  002396  0E00               	movlw	0
  4405  002398  0100               	movlb	0	; () banked
  4406  00239A  6F8C               	movwf	(?_ReadRX232+1)& (0+255),b
  4407  00239C  0E00               	movlw	0
  4408  00239E  6F8B               	movwf	?_ReadRX232& (0+255),b
  4409  0023A0                     l908:
  4410  0023A0  0012               	return		;funcret
  4411  0023A2                     __end_of_ReadRX232:
  4412                           	opt callstack 0
  4413                           
  4414 ;; *************** function _strcat *****************
  4415 ;; Defined at:
  4416 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  dest            2   18[COMRAM] PTR unsigned char 
  4419 ;;		 -> Command(16), 
  4420 ;;  src             2   20[COMRAM] PTR const unsigned char 
  4421 ;;		 -> ReadRX232@temp(2), 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  2   18[COMRAM] PTR unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4437 ;;Total ram usage:        4 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    5
  4440 ;; This function calls:
  4441 ;;		_strcpy
  4442 ;;		_strlen
  4443 ;; This function is called by:
  4444 ;;		_ReadRX232
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text6
  4449  003C7E                     __ptext6:
  4450                           	opt callstack 0
  4451  003C7E                     _strcat:
  4452                           	opt callstack 22
  4453  003C7E  C013  F005         	movff	strcat@dest,strlen@s
  4454  003C82  C014  F006         	movff	strcat@dest+1,strlen@s+1
  4455  003C86  EC10  F01C         	call	_strlen	;wreg free
  4456  003C8A  5005               	movf	?_strlen^0,w,c
  4457  003C8C  2413               	addwf	strcat@dest^0,w,c
  4458  003C8E  6E09               	movwf	strcpy@dest^0,c
  4459  003C90  5006               	movf	(?_strlen+1)^0,w,c
  4460  003C92  2014               	addwfc	(strcat@dest+1)^0,w,c
  4461  003C94  6E0A               	movwf	(strcpy@dest+1)^0,c
  4462  003C96  C015  F00B         	movff	strcat@src,strcpy@src
  4463  003C9A  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  4464  003C9E  ECD3  F01A         	call	_strcpy	;wreg free
  4465  003CA2  0012               	return		;funcret
  4466  003CA4                     __end_of_strcat:
  4467                           	opt callstack 0
  4468                           
  4469 ;; *************** function _strcpy *****************
  4470 ;; Defined at:
  4471 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  dest            2    8[COMRAM] PTR unsigned char 
  4474 ;;		 -> Command(16), 
  4475 ;;  src             2   10[COMRAM] PTR const unsigned char 
  4476 ;;		 -> STR_55(1), STR_48(1), ReadRX232@temp(2), STR_3(1), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  d               2   16[COMRAM] PTR unsigned char 
  4479 ;;		 -> Command(16), 
  4480 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4481 ;;		 -> STR_55(1), STR_48(1), ReadRX232@temp(2), STR_3(1), 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  2    8[COMRAM] PTR unsigned char 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;Total ram usage:       10 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    4
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;;		_SaveCardDat
  4503 ;;		_strcat
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text7
  4508  0035A6                     __ptext7:
  4509                           	opt callstack 0
  4510  0035A6                     _strcpy:
  4511                           	opt callstack 26
  4512  0035A6  C00B  F00F         	movff	strcpy@src,strcpy@s
  4513  0035AA  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  4514  0035AE  C009  F011         	movff	strcpy@dest,strcpy@d
  4515  0035B2  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  4516  0035B6                     l6399:
  4517  0035B6  500F               	movf	strcpy@s^0,w,c
  4518  0035B8  6E0D               	movwf	??_strcpy^0,c
  4519  0035BA  5010               	movf	(strcpy@s+1)^0,w,c
  4520  0035BC  6E0E               	movwf	(??_strcpy+1)^0,c
  4521  0035BE  4A0F               	infsnz	strcpy@s^0,f,c
  4522  0035C0  2A10               	incf	(strcpy@s+1)^0,f,c
  4523  0035C2  C00D  FFF6         	movff	??_strcpy,tblptrl
  4524  0035C6  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  4525  0035CA  0E00               	movlw	low (__mediumconst shr (0+16))
  4526  0035CC  6EF8               	movwf	tblptru,c
  4527  0035CE  C011  FFD9         	movff	strcpy@d,fsr2l
  4528  0035D2  C012  FFDA         	movff	strcpy@d+1,fsr2h
  4529  0035D6  4A11               	infsnz	strcpy@d^0,f,c
  4530  0035D8  2A12               	incf	(strcpy@d+1)^0,f,c
  4531  0035DA  0E0E               	movlw	(high __ramtop+-1)
  4532  0035DC  64F7               	cpfsgt	tblptrh,c
  4533  0035DE  D003               	bra	u6387
  4534  0035E0  0008               	tblrd		*
  4535  0035E2  50F5               	movf	tablat,w,c
  4536  0035E4  D005               	bra	u6380
  4537  0035E6                     u6387:
  4538  0035E6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4539  0035EA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4540  0035EE  50EF               	movf	indf0,w,c
  4541  0035F0                     u6380:
  4542  0035F0  6EDF               	movwf	indf2,c
  4543  0035F2  50DF               	movf	indf2,w,c
  4544  0035F4  A4D8               	btfss	status,2,c
  4545  0035F6  EFFF  F01A         	goto	u6391
  4546  0035FA  EF01  F01B         	goto	u6390
  4547  0035FE                     u6391:
  4548  0035FE  EFDB  F01A         	goto	l6399
  4549  003602                     u6390:
  4550  003602  0012               	return		;funcret
  4551  003604                     __end_of_strcpy:
  4552                           	opt callstack 0
  4553                           
  4554 ;; *************** function _memmove *****************
  4555 ;; Defined at:
  4556 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  d1              2    8[COMRAM] PTR void 
  4559 ;;		 -> Command(16), 
  4560 ;;  s1              2   10[COMRAM] PTR const void 
  4561 ;;		 -> Command(16), 
  4562 ;;  n               2   12[COMRAM] unsigned int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  s               2   18[COMRAM] PTR const unsigned char 
  4565 ;;		 -> Command(16), 
  4566 ;;  d               2   16[COMRAM] PTR unsigned char 
  4567 ;;		 -> Command(16), 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  2    8[COMRAM] PTR void 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;Total ram usage:       12 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    4
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_ReadRX232
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text8
  4592  002994                     __ptext8:
  4593                           	opt callstack 0
  4594  002994                     _memmove:
  4595                           	opt callstack 23
  4596  002994  C00B  F013         	movff	memmove@s1,memmove@s
  4597  002998  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  4598  00299C  C009  F011         	movff	memmove@d1,memmove@d
  4599  0029A0  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  4600  0029A4  5011               	movf	memmove@d^0,w,c
  4601  0029A6  5C13               	subwf	memmove@s^0,w,c
  4602  0029A8  5012               	movf	(memmove@d+1)^0,w,c
  4603  0029AA  5814               	subwfb	(memmove@s+1)^0,w,c
  4604  0029AC  B0D8               	btfsc	status,0,c
  4605  0029AE  EFDB  F014         	goto	u6471
  4606  0029B2  EFDD  F014         	goto	u6470
  4607  0029B6                     u6471:
  4608  0029B6  EF14  F015         	goto	l6491
  4609  0029BA                     u6470:
  4610  0029BA  500D               	movf	memmove@n^0,w,c
  4611  0029BC  2413               	addwf	memmove@s^0,w,c
  4612  0029BE  6E0F               	movwf	??_memmove^0,c
  4613  0029C0  500E               	movf	(memmove@n+1)^0,w,c
  4614  0029C2  2014               	addwfc	(memmove@s+1)^0,w,c
  4615  0029C4  6E10               	movwf	(??_memmove+1)^0,c
  4616  0029C6  500F               	movf	??_memmove^0,w,c
  4617  0029C8  5C11               	subwf	memmove@d^0,w,c
  4618  0029CA  5010               	movf	(??_memmove+1)^0,w,c
  4619  0029CC  5812               	subwfb	(memmove@d+1)^0,w,c
  4620  0029CE  B0D8               	btfsc	status,0,c
  4621  0029D0  EFEC  F014         	goto	u6481
  4622  0029D4  EFEE  F014         	goto	u6480
  4623  0029D8                     u6481:
  4624  0029D8  EF14  F015         	goto	l6491
  4625  0029DC                     u6480:
  4626  0029DC  500D               	movf	memmove@n^0,w,c
  4627  0029DE  2613               	addwf	memmove@s^0,f,c
  4628  0029E0  500E               	movf	(memmove@n+1)^0,w,c
  4629  0029E2  2214               	addwfc	(memmove@s+1)^0,f,c
  4630  0029E4  500D               	movf	memmove@n^0,w,c
  4631  0029E6  2611               	addwf	memmove@d^0,f,c
  4632  0029E8  500E               	movf	(memmove@n+1)^0,w,c
  4633  0029EA  2212               	addwfc	(memmove@d+1)^0,f,c
  4634  0029EC                     l6487:
  4635  0029EC  0613               	decf	memmove@s^0,f,c
  4636  0029EE  A0D8               	btfss	status,0,c
  4637  0029F0  0614               	decf	(memmove@s+1)^0,f,c
  4638  0029F2  C013  FFD9         	movff	memmove@s,fsr2l
  4639  0029F6  C014  FFDA         	movff	memmove@s+1,fsr2h
  4640  0029FA  0611               	decf	memmove@d^0,f,c
  4641  0029FC  A0D8               	btfss	status,0,c
  4642  0029FE  0612               	decf	(memmove@d+1)^0,f,c
  4643  002A00  C011  FFE1         	movff	memmove@d,fsr1l
  4644  002A04  C012  FFE2         	movff	memmove@d+1,fsr1h
  4645  002A08  CFDF FFE7          	movff	indf2,indf1
  4646  002A0C  060D               	decf	memmove@n^0,f,c
  4647  002A0E  A0D8               	btfss	status,0,c
  4648  002A10  060E               	decf	(memmove@n+1)^0,f,c
  4649  002A12  500D               	movf	memmove@n^0,w,c
  4650  002A14  100E               	iorwf	(memmove@n+1)^0,w,c
  4651  002A16  A4D8               	btfss	status,2,c
  4652  002A18  EF10  F015         	goto	u6491
  4653  002A1C  EF12  F015         	goto	u6490
  4654  002A20                     u6491:
  4655  002A20  EFF6  F014         	goto	l6487
  4656  002A24                     u6490:
  4657  002A24  EF37  F015         	goto	l1882
  4658  002A28                     l6491:
  4659  002A28  500D               	movf	memmove@n^0,w,c
  4660  002A2A  100E               	iorwf	(memmove@n+1)^0,w,c
  4661  002A2C  B4D8               	btfsc	status,2,c
  4662  002A2E  EF1B  F015         	goto	u6501
  4663  002A32  EF1D  F015         	goto	u6500
  4664  002A36                     u6501:
  4665  002A36  EF37  F015         	goto	l1882
  4666  002A3A                     u6500:
  4667  002A3A                     l6493:
  4668  002A3A  C013  FFD9         	movff	memmove@s,fsr2l
  4669  002A3E  C014  FFDA         	movff	memmove@s+1,fsr2h
  4670  002A42  C011  FFE1         	movff	memmove@d,fsr1l
  4671  002A46  C012  FFE2         	movff	memmove@d+1,fsr1h
  4672  002A4A  CFDF FFE7          	movff	indf2,indf1
  4673  002A4E  4A13               	infsnz	memmove@s^0,f,c
  4674  002A50  2A14               	incf	(memmove@s+1)^0,f,c
  4675  002A52  4A11               	infsnz	memmove@d^0,f,c
  4676  002A54  2A12               	incf	(memmove@d+1)^0,f,c
  4677  002A56  060D               	decf	memmove@n^0,f,c
  4678  002A58  A0D8               	btfss	status,0,c
  4679  002A5A  060E               	decf	(memmove@n+1)^0,f,c
  4680  002A5C  500D               	movf	memmove@n^0,w,c
  4681  002A5E  100E               	iorwf	(memmove@n+1)^0,w,c
  4682  002A60  A4D8               	btfss	status,2,c
  4683  002A62  EF35  F015         	goto	u6511
  4684  002A66  EF37  F015         	goto	u6510
  4685  002A6A                     u6511:
  4686  002A6A  EF1D  F015         	goto	l6493
  4687  002A6E                     u6510:
  4688  002A6E                     l1882:
  4689  002A6E  0012               	return		;funcret
  4690  002A70                     __end_of_memmove:
  4691                           	opt callstack 0
  4692                           
  4693 ;; *************** function _EUSART2_is_rx_ready *****************
  4694 ;; Defined at:
  4695 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      _Bool 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    4
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_ReadRX232
  4720 ;;		_SaveCardDat
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text9
  4725  003D00                     __ptext9:
  4726                           	opt callstack 0
  4727  003D00                     _EUSART2_is_rx_ready:
  4728                           	opt callstack 23
  4729  003D00                     
  4730                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  4731  003D00  0100               	movlb	0	; () banked
  4732  003D02  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4733  003D04  A4D8               	btfss	status,2,c
  4734  003D06  EF87  F01E         	goto	u6431
  4735  003D0A  EF8A  F01E         	goto	u6430
  4736  003D0E                     u6431:
  4737  003D0E  0E01               	movlw	1
  4738  003D10  EF8B  F01E         	goto	u6440
  4739  003D14                     u6430:
  4740  003D14  0E00               	movlw	0
  4741  003D16                     u6440:
  4742  003D16                     
  4743                           ; BSR set to: 0
  4744  003D16  0012               	return		;funcret
  4745  003D18                     __end_of_EUSART2_is_rx_ready:
  4746                           	opt callstack 0
  4747                           
  4748 ;; *************** function _EUSART2_Read *****************
  4749 ;; Defined at:
  4750 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  readValue       1    4[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      unsigned char 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;Total ram usage:        1 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    4
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_ReadRX232
  4775 ;;		_SaveCardDat
  4776 ;;		_getch
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text10
  4781  00371E                     __ptext10:
  4782                           	opt callstack 0
  4783  00371E                     _EUSART2_Read:
  4784                           	opt callstack 23
  4785  00371E                     l6451:
  4786                           
  4787                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  4788  00371E  0100               	movlb	0	; () banked
  4789  003720  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4790  003722  B4D8               	btfsc	status,2,c
  4791  003724  EF96  F01B         	goto	u6451
  4792  003728  EF98  F01B         	goto	u6450
  4793  00372C                     u6451:
  4794  00372C  EF8F  F01B         	goto	l6451
  4795  003730                     u6450:
  4796  003730                     
  4797                           ; BSR set to: 0
  4798                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  4799  003730  0E81               	movlw	low _eusart2RxStatusBuffer
  4800  003732  25B8               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4801  003734  6ED9               	movwf	fsr2l,c
  4802  003736  6ADA               	clrf	fsr2h,c
  4803  003738  0E01               	movlw	high _eusart2RxStatusBuffer
  4804  00373A  22DA               	addwfc	fsr2h,f,c
  4805  00373C  50DF               	movf	indf2,w,c
  4806  00373E  6FB6               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  4807                           
  4808                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  4809  003740  0E64               	movlw	low _eusart2RxBuffer
  4810  003742  25B8               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  4811  003744  6ED9               	movwf	fsr2l,c
  4812  003746  6ADA               	clrf	fsr2h,c
  4813  003748  0E02               	movlw	high _eusart2RxBuffer
  4814  00374A  22DA               	addwfc	fsr2h,f,c
  4815  00374C  50DF               	movf	indf2,w,c
  4816  00374E  6E05               	movwf	EUSART2_Read@readValue^0,c
  4817  003750                     
  4818                           ; BSR set to: 0
  4819  003750  2BB8               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  4820  003752                     
  4821                           ; BSR set to: 0
  4822                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  4823  003752  0E1F               	movlw	31
  4824  003754  65B8               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  4825  003756  EFAF  F01B         	goto	u6461
  4826  00375A  EFB1  F01B         	goto	u6460
  4827  00375E                     u6461:
  4828  00375E  EFB3  F01B         	goto	l6461
  4829  003762                     u6460:
  4830  003762                     
  4831                           ; BSR set to: 0
  4832                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  4833  003762  0E00               	movlw	0
  4834  003764  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  4835  003766                     l6461:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  4839  003766  010E               	movlb	14	; () banked
  4840  003768  9FC5               	bcf	197,7,b	;volatile
  4841  00376A                     
  4842                           ; BSR set to: 14
  4843                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  4844  00376A  0100               	movlb	0	; () banked
  4845  00376C  07B7               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  4846  00376E                     
  4847                           ; BSR set to: 0
  4848                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  4849  00376E  010E               	movlb	14	; () banked
  4850  003770  8FC5               	bsf	197,7,b	;volatile
  4851  003772                     
  4852                           ; BSR set to: 14
  4853                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  4854  003772  5005               	movf	EUSART2_Read@readValue^0,w,c
  4855  003774                     
  4856                           ; BSR set to: 14
  4857  003774  0012               	return		;funcret
  4858  003776                     __end_of_EUSART2_Read:
  4859                           	opt callstack 0
  4860                           
  4861 ;; *************** function _ClearEEAddRange *****************
  4862 ;; Defined at:
  4863 ;;		line 161 in file "RS232.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  StartAdd        2   43[BANK0 ] unsigned int 
  4866 ;;  NumBytes        2   45[BANK0 ] unsigned int 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  i               2   84[COMRAM] int 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;Total ram usage:        6 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:   13
  4885 ;; This function calls:
  4886 ;;		_DATAEE_WriteByte
  4887 ;;		_printf
  4888 ;; This function is called by:
  4889 ;;		_SaveCardDat
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text11
  4894  0032F6                     __ptext11:
  4895                           	opt callstack 0
  4896  0032F6                     _ClearEEAddRange:
  4897                           	opt callstack 15
  4898  0032F6                     
  4899                           ;RS232.c: 164:     printf("Clearing EEPROM from Address: 0x%04x, Num Bytes: %i \r\n", St
      +                          artAdd, NumBytes);
  4900  0032F6  0E31               	movlw	low STR_43
  4901  0032F8  0100               	movlb	0	; () banked
  4902  0032FA  6F7D               	movwf	printf@fmt& (0+255),b
  4903  0032FC  0EFB               	movlw	high STR_43
  4904  0032FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4905  003300  C08B  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  4906  003304  C08C  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  4907  003308  C08D  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  4908  00330C  C08E  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  4909  003310  EC2B  F01E         	call	_printf	;wreg free
  4910  003314                     
  4911                           ;RS232.c: 166:     for(int i = 0; i<NumBytes; i++){
  4912  003314  0E00               	movlw	0
  4913  003316  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  4914  003318  0E00               	movlw	0
  4915  00331A  6E55               	movwf	ClearEEAddRange@i^0,c
  4916  00331C  EFAD  F019         	goto	l6585
  4917  003320                     l6579:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;RS232.c: 167:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  4921  003320  518B               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  4922  003322  2455               	addwf	ClearEEAddRange@i^0,w,c
  4923  003324  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  4924  003326  518C               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  4925  003328  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  4926  00332A  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  4927  00332C  0EFF               	movlw	255
  4928  00332E  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4929  003330  ECCD  F01C         	call	_DATAEE_WriteByte	;wreg free
  4930  003334                     
  4931                           ;RS232.c: 168:         printf("Clear 0x%04x NumByte:  %i \r\n", StartAdd +i, NumBytes);
  4932  003334  0E3F               	movlw	low STR_44
  4933  003336  0100               	movlb	0	; () banked
  4934  003338  6F7D               	movwf	printf@fmt& (0+255),b
  4935  00333A  0EFD               	movlw	high STR_44
  4936  00333C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4937  00333E  518B               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  4938  003340  2455               	addwf	ClearEEAddRange@i^0,w,c
  4939  003342  6F7F               	movwf	(?_printf+2)& (0+255),b
  4940  003344  518C               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  4941  003346  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  4942  003348  6F80               	movwf	(?_printf+3)& (0+255),b
  4943  00334A  C08D  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  4944  00334E  C08E  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  4945  003352  EC2B  F01E         	call	_printf	;wreg free
  4946  003356                     
  4947                           ;RS232.c: 169:     }
  4948  003356  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  4949  003358  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  4950  00335A                     l6585:
  4951  00335A  0100               	movlb	0	; () banked
  4952  00335C  518D               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  4953  00335E  5C55               	subwf	ClearEEAddRange@i^0,w,c
  4954  003360  518E               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  4955  003362  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  4956  003364  A0D8               	btfss	status,0,c
  4957  003366  EFB7  F019         	goto	u6611
  4958  00336A  EFB9  F019         	goto	u6610
  4959  00336E                     u6611:
  4960  00336E  EF90  F019         	goto	l6579
  4961  003372                     u6610:
  4962  003372                     
  4963                           ; BSR set to: 0
  4964  003372  0012               	return		;funcret
  4965  003374                     __end_of_ClearEEAddRange:
  4966                           	opt callstack 0
  4967                           
  4968 ;; *************** function _DATAEE_WriteByte *****************
  4969 ;; Defined at:
  4970 ;;		line 165 in file "mcc_generated_files/memory.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  bAdd            2    4[COMRAM] unsigned short 
  4973 ;;  bData           1    6[COMRAM] unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4985 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;Total ram usage:        4 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    4
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_ClearEEAddRange
  4996 ;;		_SaveCardDat
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text12
  5001  00399A                     __ptext12:
  5002                           	opt callstack 0
  5003  00399A                     _DATAEE_WriteByte:
  5004                           	opt callstack 24
  5005  00399A                     
  5006                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  5007  00399A  0E00               	movlw	0
  5008  00399C  BEF2               	btfsc	242,7,c	;volatile
  5009  00399E  0E01               	movlw	1
  5010  0039A0  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  5011  0039A2                     
  5012                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  5013  0039A2  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  5014  0039A4  0B03               	andlw	3
  5015  0039A6  6E7F               	movwf	127,c	;volatile
  5016  0039A8                     
  5017                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  5018  0039A8  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  5019  0039AC                     
  5020                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  5021  0039AC  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  5022  0039B0                     
  5023                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  5024  0039B0  0E3F               	movlw	-193
  5025  0039B2  1681               	andwf	129,f,c	;volsfr
  5026  0039B4                     
  5027                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  5028  0039B4  8481               	bsf	129,2,c	;volsfr
  5029  0039B6                     
  5030                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  5031  0039B6  9EF2               	bcf	242,7,c	;volatile
  5032  0039B8                     
  5033                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  5034  0039B8  0E55               	movlw	85
  5035  0039BA  6E82               	movwf	130,c	;volsfr
  5036  0039BC                     
  5037                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  5038  0039BC  0EAA               	movlw	170
  5039  0039BE  6E82               	movwf	130,c	;volsfr
  5040  0039C0                     
  5041                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  5042  0039C0  8281               	bsf	129,1,c	;volsfr
  5043  0039C2                     l212:
  5044                           
  5045                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  5046  0039C2  B281               	btfsc	129,1,c	;volsfr
  5047  0039C4  EFE6  F01C         	goto	u6411
  5048  0039C8  EFE8  F01C         	goto	u6410
  5049  0039CC                     u6411:
  5050  0039CC  EFE1  F01C         	goto	l212
  5051  0039D0                     u6410:
  5052  0039D0                     
  5053                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  5054  0039D0  9481               	bcf	129,2,c	;volsfr
  5055                           
  5056                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  5057  0039D2  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  5058  0039D4  D002               	bra	u6425
  5059  0039D6  9EF2               	bcf	242,7,c	;volatile
  5060  0039D8  D001               	bra	u6426
  5061  0039DA                     u6425:
  5062  0039DA  8EF2               	bsf	242,7,c	;volatile
  5063  0039DC                     u6426:
  5064  0039DC  0012               	return		;funcret
  5065  0039DE                     __end_of_DATAEE_WriteByte:
  5066                           	opt callstack 0
  5067                           
  5068 ;; *************** function _InitialiseString *****************
  5069 ;; Defined at:
  5070 ;;		line 66 in file "RS232.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  SerialNum      11   43[BANK0 ] unsigned char [11]
  5075 ;;  i               2    0        int 
  5076 ;;  dataeeAddrWr    2    0        unsigned short 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;Total ram usage:       13 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:   13
  5093 ;; This function calls:
  5094 ;;		_Initalisation
  5095 ;;		_SerIni
  5096 ;;		_printf
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;;		_ValidateCmd
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text13
  5104  002F1A                     __ptext13:
  5105                           	opt callstack 0
  5106  002F1A                     _InitialiseString:
  5107                           	opt callstack 16
  5108  002F1A                     
  5109                           ;RS232.c: 69:     uint16_t dataeeAddrWrk;;RS232.c: 71:     char SerialNum[11] = { '\0' }
      +                          ;
  5110  002F1A  EE20  F08B         	lfsr	2,InitialiseString@SerialNum
  5111  002F1E  0E0A               	movlw	10
  5112  002F20                     u6621:
  5113  002F20  6ADE               	clrf	postinc2,c
  5114  002F22  06E8               	decf	wreg,f,c
  5115  002F24  E2FD               	bc	u6621
  5116  002F26                     
  5117                           ;RS232.c: 72:     SerIni(SerialNum);
  5118  002F26  0E8B               	movlw	low InitialiseString@SerialNum
  5119  002F28  6E07               	movwf	SerIni@SerialNum^0,c
  5120  002F2A  0E00               	movlw	high InitialiseString@SerialNum
  5121  002F2C  6E08               	movwf	(SerIni@SerialNum+1)^0,c
  5122  002F2E  ECD1  F011         	call	_SerIni	;wreg free
  5123  002F32                     
  5124                           ;RS232.c: 76:     printf("\rDan and Sam's Modbus GPIO Expansion - AP00070125-01 Rev -\r\
      +                          n");
  5125  002F32  0EF4               	movlw	low STR_29
  5126  002F34  0100               	movlb	0	; () banked
  5127  002F36  6F7D               	movwf	printf@fmt& (0+255),b
  5128  002F38  0EFA               	movlw	high STR_29
  5129  002F3A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5130  002F3C  EC2B  F01E         	call	_printf	;wreg free
  5131  002F40                     
  5132                           ;RS232.c: 78:     Initalisation();
  5133  002F40  EC2A  F01F         	call	_Initalisation	;wreg free
  5134  002F44                     
  5135                           ;RS232.c: 82:     printf("Card Ser No. %s \r\n",SerialNum);
  5136  002F44  0ED8               	movlw	low STR_30
  5137  002F46  0100               	movlb	0	; () banked
  5138  002F48  6F7D               	movwf	printf@fmt& (0+255),b
  5139  002F4A  0EFE               	movlw	high STR_30
  5140  002F4C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5141  002F4E  0E8B               	movlw	low InitialiseString@SerialNum
  5142  002F50  6F7F               	movwf	(?_printf+2)& (0+255),b
  5143  002F52  0E00               	movlw	high InitialiseString@SerialNum
  5144  002F54  6F80               	movwf	(?_printf+3)& (0+255),b
  5145  002F56  EC2B  F01E         	call	_printf	;wreg free
  5146  002F5A                     
  5147                           ;RS232.c: 83:     printf("Card Address. 0x05 \r\n");
  5148  002F5A  0EAD               	movlw	low STR_31
  5149  002F5C  0100               	movlb	0	; () banked
  5150  002F5E  6F7D               	movwf	printf@fmt& (0+255),b
  5151  002F60  0EFE               	movlw	high STR_31
  5152  002F62  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5153  002F64  EC2B  F01E         	call	_printf	;wreg free
  5154  002F68                     
  5155                           ;RS232.c: 84:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  5156  002F68  0E08               	movlw	low STR_32
  5157  002F6A  0100               	movlb	0	; () banked
  5158  002F6C  6F7D               	movwf	printf@fmt& (0+255),b
  5159  002F6E  0EFC               	movlw	high STR_32
  5160  002F70  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5161  002F72  0EBC               	movlw	low STR_33
  5162  002F74  6F7F               	movwf	(?_printf+2)& (0+255),b
  5163  002F76  0EFF               	movlw	high STR_33
  5164  002F78  6F80               	movwf	(?_printf+3)& (0+255),b
  5165  002F7A  0EDE               	movlw	low STR_34
  5166  002F7C  6F81               	movwf	(?_printf+4)& (0+255),b
  5167  002F7E  0EFF               	movlw	high STR_34
  5168  002F80  6F82               	movwf	(?_printf+5)& (0+255),b
  5169  002F82  0E08               	movlw	8
  5170  002F84  6F84               	movwf	(?_printf+7)& (0+255),b
  5171  002F86  0E34               	movlw	52
  5172  002F88  6F83               	movwf	(?_printf+6)& (0+255),b
  5173  002F8A  EC2B  F01E         	call	_printf	;wreg free
  5174  002F8E                     
  5175                           ;RS232.c: 86:     printf("Function Codes Supported:\r\n");
  5176  002F8E  0E79               	movlw	low STR_35
  5177  002F90  0100               	movlb	0	; () banked
  5178  002F92  6F7D               	movwf	printf@fmt& (0+255),b
  5179  002F94  0EFD               	movlw	high STR_35
  5180  002F96  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5181  002F98  EC2B  F01E         	call	_printf	;wreg free
  5182  002F9C                     
  5183                           ;RS232.c: 87:     printf("   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  5184  002F9C  0ED4               	movlw	low STR_36
  5185  002F9E  0100               	movlb	0	; () banked
  5186  002FA0  6F7D               	movwf	printf@fmt& (0+255),b
  5187  002FA2  0EFB               	movlw	high STR_36
  5188  002FA4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5189  002FA6  EC2B  F01E         	call	_printf	;wreg free
  5190  002FAA                     
  5191                           ;RS232.c: 88:     printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  5192  002FAA  0E68               	movlw	low STR_37
  5193  002FAC  0100               	movlb	0	; () banked
  5194  002FAE  6F7D               	movwf	printf@fmt& (0+255),b
  5195  002FB0  0EFB               	movlw	high STR_37
  5196  002FB2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5197  002FB4  EC2B  F01E         	call	_printf	;wreg free
  5198  002FB8                     
  5199                           ;RS232.c: 89:     printf("Initalisation Complete - Ready\r\n\n");
  5200  002FB8  0E9D               	movlw	low STR_38
  5201  002FBA  0100               	movlb	0	; () banked
  5202  002FBC  6F7D               	movwf	printf@fmt& (0+255),b
  5203  002FBE  0EFC               	movlw	high STR_38
  5204  002FC0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5205  002FC2  EC2B  F01E         	call	_printf	;wreg free
  5206  002FC6  0012               	return		;funcret
  5207  002FC8                     __end_of_InitialiseString:
  5208                           	opt callstack 0
  5209                           
  5210 ;; *************** function _SerIni *****************
  5211 ;; Defined at:
  5212 ;;		line 18 in file "RS232.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  SerialNum       2    6[COMRAM] PTR unsigned char 
  5215 ;;		 -> InitialiseString@SerialNum(11), 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  j               2   16[COMRAM] int 
  5218 ;;  i               2   14[COMRAM] int 
  5219 ;;  dataeeAddrWr    2   10[COMRAM] unsigned short 
  5220 ;;  readDataEven    1   13[COMRAM] unsigned char 
  5221 ;;  readDataOdd     1   12[COMRAM] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;Total ram usage:       12 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    5
  5238 ;; This function calls:
  5239 ;;		_DATAEE_ReadByte
  5240 ;; This function is called by:
  5241 ;;		_InitialiseString
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text14
  5246  0023A2                     __ptext14:
  5247                           	opt callstack 0
  5248  0023A2                     _SerIni:
  5249                           	opt callstack 23
  5250  0023A2                     
  5251                           ;RS232.c: 22:     char readDataOdd, readDataEven;;RS232.c: 23:     int i=0, j=0;
  5252  0023A2  0E00               	movlw	0
  5253  0023A4  6E10               	movwf	(SerIni@i+1)^0,c
  5254  0023A6  0E00               	movlw	0
  5255  0023A8  6E0F               	movwf	SerIni@i^0,c
  5256  0023AA  0E00               	movlw	0
  5257  0023AC  6E12               	movwf	(SerIni@j+1)^0,c
  5258  0023AE  0E00               	movlw	0
  5259  0023B0  6E11               	movwf	SerIni@j^0,c
  5260                           
  5261                           ;RS232.c: 24:     uint16_t dataeeAddrWrk;;RS232.c: 28:     dataeeAddrWrk = 0x0300;
  5262  0023B2  0E03               	movlw	3
  5263  0023B4  6E0C               	movwf	(SerIni@dataeeAddrWrk+1)^0,c
  5264  0023B6  0E00               	movlw	0
  5265  0023B8  6E0B               	movwf	SerIni@dataeeAddrWrk^0,c
  5266                           
  5267                           ;RS232.c: 29:     for(i = 0; i < 5; i++){
  5268  0023BA  0E00               	movlw	0
  5269  0023BC  6E10               	movwf	(SerIni@i+1)^0,c
  5270  0023BE  0E00               	movlw	0
  5271  0023C0  6E0F               	movwf	SerIni@i^0,c
  5272  0023C2                     l6545:
  5273                           
  5274                           ;RS232.c: 30:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  5275  0023C2  C00B  F005         	movff	SerIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5276  0023C6  C00C  F006         	movff	SerIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5277  0023CA  EC8C  F01E         	call	_DATAEE_ReadByte	;wreg free
  5278  0023CE  6E0D               	movwf	SerIni@readDataOdd^0,c
  5279  0023D0                     
  5280                           ;RS232.c: 32:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5281  0023D0  0E03               	movlw	3
  5282  0023D2  6E0A               	movwf	(??_SerIni+1)^0,c
  5283  0023D4  0E08               	movlw	8
  5284  0023D6  6E09               	movwf	??_SerIni^0,c
  5285  0023D8  0E77               	movlw	119
  5286  0023DA                     u7247:
  5287  0023DA  2EE8               	decfsz	wreg,f,c
  5288  0023DC  D7FE               	bra	u7247
  5289  0023DE  2E09               	decfsz	??_SerIni^0,f,c
  5290  0023E0  D7FC               	bra	u7247
  5291  0023E2  2E0A               	decfsz	(??_SerIni+1)^0,f,c
  5292  0023E4  D7FA               	bra	u7247
  5293  0023E6  F000               	nop	
  5294  0023E8                     
  5295                           ;RS232.c: 35:         if(readDataOdd != 0xFF){
  5296  0023E8  280D               	incf	SerIni@readDataOdd^0,w,c
  5297  0023EA  B4D8               	btfsc	status,2,c
  5298  0023EC  EFFA  F011         	goto	u6581
  5299  0023F0  EFFC  F011         	goto	u6580
  5300  0023F4                     u6581:
  5301  0023F4  EF06  F012         	goto	l6555
  5302  0023F8                     u6580:
  5303  0023F8                     
  5304                           ;RS232.c: 36:             SerialNum[j] = readDataOdd;
  5305  0023F8  5011               	movf	SerIni@j^0,w,c
  5306  0023FA  2407               	addwf	SerIni@SerialNum^0,w,c
  5307  0023FC  6ED9               	movwf	fsr2l,c
  5308  0023FE  5012               	movf	(SerIni@j+1)^0,w,c
  5309  002400  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5310  002402  6EDA               	movwf	fsr2h,c
  5311  002404  C00D  FFDF         	movff	SerIni@readDataOdd,indf2
  5312  002408                     
  5313                           ;RS232.c: 37:             j++;
  5314  002408  4A11               	infsnz	SerIni@j^0,f,c
  5315  00240A  2A12               	incf	(SerIni@j+1)^0,f,c
  5316  00240C                     l6555:
  5317                           
  5318                           ;RS232.c: 40:         dataeeAddrWrk++;
  5319  00240C  4A0B               	infsnz	SerIni@dataeeAddrWrk^0,f,c
  5320  00240E  2A0C               	incf	(SerIni@dataeeAddrWrk+1)^0,f,c
  5321  002410                     
  5322                           ;RS232.c: 41:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  5323  002410  C00B  F005         	movff	SerIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  5324  002414  C00C  F006         	movff	SerIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  5325  002418  EC8C  F01E         	call	_DATAEE_ReadByte	;wreg free
  5326  00241C  6E0E               	movwf	SerIni@readDataEven^0,c
  5327  00241E                     
  5328                           ;RS232.c: 43:         dataeeAddrWrk++;
  5329  00241E  4A0B               	infsnz	SerIni@dataeeAddrWrk^0,f,c
  5330  002420  2A0C               	incf	(SerIni@dataeeAddrWrk+1)^0,f,c
  5331  002422                     
  5332                           ;RS232.c: 44:         _delay((unsigned long)((50)*(32000000/4000.0)));
  5333  002422  0E03               	movlw	3
  5334  002424  6E0A               	movwf	(??_SerIni+1)^0,c
  5335  002426  0E08               	movlw	8
  5336  002428  6E09               	movwf	??_SerIni^0,c
  5337  00242A  0E77               	movlw	119
  5338  00242C                     u7257:
  5339  00242C  2EE8               	decfsz	wreg,f,c
  5340  00242E  D7FE               	bra	u7257
  5341  002430  2E09               	decfsz	??_SerIni^0,f,c
  5342  002432  D7FC               	bra	u7257
  5343  002434  2E0A               	decfsz	(??_SerIni+1)^0,f,c
  5344  002436  D7FA               	bra	u7257
  5345  002438  F000               	nop	
  5346  00243A                     
  5347                           ;RS232.c: 47:         if(readDataEven != 0xFF){
  5348  00243A  280E               	incf	SerIni@readDataEven^0,w,c
  5349  00243C  B4D8               	btfsc	status,2,c
  5350  00243E  EF23  F012         	goto	u6591
  5351  002442  EF25  F012         	goto	u6590
  5352  002446                     u6591:
  5353  002446  EF2F  F012         	goto	l6569
  5354  00244A                     u6590:
  5355  00244A                     
  5356                           ;RS232.c: 48:             SerialNum[j] = readDataEven;
  5357  00244A  5011               	movf	SerIni@j^0,w,c
  5358  00244C  2407               	addwf	SerIni@SerialNum^0,w,c
  5359  00244E  6ED9               	movwf	fsr2l,c
  5360  002450  5012               	movf	(SerIni@j+1)^0,w,c
  5361  002452  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5362  002454  6EDA               	movwf	fsr2h,c
  5363  002456  C00E  FFDF         	movff	SerIni@readDataEven,indf2
  5364  00245A                     
  5365                           ;RS232.c: 49:             j++;
  5366  00245A  4A11               	infsnz	SerIni@j^0,f,c
  5367  00245C  2A12               	incf	(SerIni@j+1)^0,f,c
  5368  00245E                     l6569:
  5369                           
  5370                           ;RS232.c: 52:         MB303xx[i] = readDataOdd *256 + readDataEven;
  5371  00245E  500E               	movf	SerIni@readDataEven^0,w,c
  5372  002460  C00D  F009         	movff	SerIni@readDataOdd,??_SerIni
  5373  002464  6A0A               	clrf	(??_SerIni+1)^0,c
  5374  002466  C009  F00A         	movff	??_SerIni,??_SerIni+1
  5375  00246A  6A09               	clrf	??_SerIni^0,c
  5376  00246C  2609               	addwf	??_SerIni^0,f,c
  5377  00246E  0E00               	movlw	0
  5378  002470  220A               	addwfc	(??_SerIni+1)^0,f,c
  5379  002472  90D8               	bcf	status,0,c
  5380  002474  340F               	rlcf	SerIni@i^0,w,c
  5381  002476  6ED9               	movwf	fsr2l,c
  5382  002478  3410               	rlcf	(SerIni@i+1)^0,w,c
  5383  00247A  6EDA               	movwf	fsr2h,c
  5384  00247C  0E18               	movlw	low _MB303xx
  5385  00247E  26D9               	addwf	fsr2l,f,c
  5386  002480  0E01               	movlw	high _MB303xx
  5387  002482  22DA               	addwfc	fsr2h,f,c
  5388  002484  C009  FFDE         	movff	??_SerIni,postinc2
  5389  002488  C00A  FFDD         	movff	??_SerIni+1,postdec2
  5390                           
  5391                           ;RS232.c: 56:     }
  5392  00248C  4A0F               	infsnz	SerIni@i^0,f,c
  5393  00248E  2A10               	incf	(SerIni@i+1)^0,f,c
  5394  002490  BE10               	btfsc	(SerIni@i+1)^0,7,c
  5395  002492  EF54  F012         	goto	u6601
  5396  002496  5010               	movf	(SerIni@i+1)^0,w,c
  5397  002498  E109               	bnz	u6600
  5398  00249A  0E05               	movlw	5
  5399  00249C  5C0F               	subwf	SerIni@i^0,w,c
  5400  00249E  A0D8               	btfss	status,0,c
  5401  0024A0  EF54  F012         	goto	u6601
  5402  0024A4  EF56  F012         	goto	u6600
  5403  0024A8                     u6601:
  5404  0024A8  EFE1  F011         	goto	l6545
  5405  0024AC                     u6600:
  5406  0024AC                     
  5407                           ;RS232.c: 58:     SerialNum[j] = '\0';
  5408  0024AC  5011               	movf	SerIni@j^0,w,c
  5409  0024AE  2407               	addwf	SerIni@SerialNum^0,w,c
  5410  0024B0  6ED9               	movwf	fsr2l,c
  5411  0024B2  5012               	movf	(SerIni@j+1)^0,w,c
  5412  0024B4  2008               	addwfc	(SerIni@SerialNum+1)^0,w,c
  5413  0024B6  6EDA               	movwf	fsr2h,c
  5414  0024B8  0E00               	movlw	0
  5415  0024BA  6EDF               	movwf	indf2,c
  5416  0024BC  0012               	return		;funcret
  5417  0024BE                     __end_of_SerIni:
  5418                           	opt callstack 0
  5419                           
  5420 ;; *************** function _DATAEE_ReadByte *****************
  5421 ;; Defined at:
  5422 ;;		line 187 in file "mcc_generated_files/memory.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  bAdd            2    4[COMRAM] unsigned short 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      unsigned char 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;Total ram usage:        2 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    4
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_SerIni
  5447 ;;		_SaveCardDat
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text15
  5452  003D18                     __ptext15:
  5453                           	opt callstack 0
  5454  003D18                     _DATAEE_ReadByte:
  5455                           	opt callstack 24
  5456  003D18                     
  5457                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  5458  003D18  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  5459  003D1A  0B03               	andlw	3
  5460  003D1C  6E7F               	movwf	127,c	;volatile
  5461  003D1E                     
  5462                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  5463  003D1E  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  5464  003D22                     
  5465                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  5466  003D22  0E3F               	movlw	-193
  5467  003D24  1681               	andwf	129,f,c	;volsfr
  5468  003D26                     
  5469                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  5470  003D26  8081               	bsf	129,0,c	;volsfr
  5471  003D28                     
  5472                           ;mcc_generated_files/memory.c: 193:     __nop();
  5473  003D28  F000               	nop	
  5474  003D2A                     
  5475                           ;mcc_generated_files/memory.c: 194:     __nop();
  5476  003D2A  F000               	nop	
  5477  003D2C                     
  5478                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  5479  003D2C  5080               	movf	128,w,c	;volatile
  5480  003D2E  0012               	return		;funcret
  5481  003D30                     __end_of_DATAEE_ReadByte:
  5482                           	opt callstack 0
  5483                           
  5484 ;; *************** function _Initalisation *****************
  5485 ;; Defined at:
  5486 ;;		line 11 in file "RS232.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		None
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;Total ram usage:        0 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    4
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_InitialiseString
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text16
  5515  003E54                     __ptext16:
  5516                           	opt callstack 0
  5517  003E54                     _Initalisation:
  5518                           	opt callstack 24
  5519  003E54  0012               	return		;funcret
  5520  003E56                     __end_of_Initalisation:
  5521                           	opt callstack 0
  5522                           
  5523 ;; *************** function _SYSTEM_Initialize *****************
  5524 ;; Defined at:
  5525 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5543 ;;Total ram usage:        0 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    6
  5546 ;; This function calls:
  5547 ;;		_EUSART1_Initialize
  5548 ;;		_EUSART2_Initialize
  5549 ;;		_INTERRUPT_Initialize
  5550 ;;		_OSCILLATOR_Initialize
  5551 ;;		_PIN_MANAGER_Initialize
  5552 ;;		_PMD_Initialize
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text17
  5559  003CE6                     __ptext17:
  5560                           	opt callstack 0
  5561  003CE6                     _SYSTEM_Initialize:
  5562                           	opt callstack 24
  5563  003CE6                     
  5564                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5565  003CE6  EC27  F01F         	call	_INTERRUPT_Initialize	;wreg free
  5566  003CEA                     
  5567                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5568  003CEA  EC65  F01E         	call	_PMD_Initialize	;wreg free
  5569  003CEE                     
  5570                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5571  003CEE  EC2F  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  5572  003CF2                     
  5573                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5574  003CF2  EC98  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  5575  003CF6                     
  5576                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5577  003CF6  EC3B  F019         	call	_EUSART1_Initialize	;wreg free
  5578  003CFA                     
  5579                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  5580  003CFA  ECBA  F019         	call	_EUSART2_Initialize	;wreg free
  5581  003CFE  0012               	return		;funcret
  5582  003D00                     __end_of_SYSTEM_Initialize:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function _PMD_Initialize *****************
  5586 ;; Defined at:
  5587 ;;		line 74 in file "mcc_generated_files/mcc.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      void 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5605 ;;Total ram usage:        0 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    4
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_SYSTEM_Initialize
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text18
  5616  003CCA                     __ptext18:
  5617                           	opt callstack 0
  5618  003CCA                     _PMD_Initialize:
  5619                           	opt callstack 25
  5620  003CCA                     
  5621                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  5622  003CCA  0E00               	movlw	0
  5623  003CCC  010E               	movlb	14	; () banked
  5624  003CCE  6FE1               	movwf	225,b	;volatile
  5625                           
  5626                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  5627  003CD0  0E00               	movlw	0
  5628  003CD2  6FE2               	movwf	226,b	;volatile
  5629                           
  5630                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  5631  003CD4  0E00               	movlw	0
  5632  003CD6  6FE3               	movwf	227,b	;volatile
  5633                           
  5634                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  5635  003CD8  0E00               	movlw	0
  5636  003CDA  6FE4               	movwf	228,b	;volatile
  5637                           
  5638                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  5639  003CDC  0E00               	movlw	0
  5640  003CDE  6FE5               	movwf	229,b	;volatile
  5641                           
  5642                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  5643  003CE0  0E00               	movlw	0
  5644  003CE2  6FE6               	movwf	230,b	;volatile
  5645  003CE4                     
  5646                           ; BSR set to: 14
  5647  003CE4  0012               	return		;funcret
  5648  003CE6                     __end_of_PMD_Initialize:
  5649                           	opt callstack 0
  5650                           
  5651 ;; *************** function _PIN_MANAGER_Initialize *****************
  5652 ;; Defined at:
  5653 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    4
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_SYSTEM_Initialize
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text19
  5682  00305E                     __ptext19:
  5683                           	opt callstack 0
  5684  00305E                     _PIN_MANAGER_Initialize:
  5685                           	opt callstack 25
  5686  00305E                     
  5687                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5688  00305E  0E00               	movlw	0
  5689  003060  6E87               	movwf	135,c	;volatile
  5690                           
  5691                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5692  003062  0E00               	movlw	0
  5693  003064  6E86               	movwf	134,c	;volatile
  5694                           
  5695                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5696  003066  0E00               	movlw	0
  5697  003068  6E83               	movwf	131,c	;volatile
  5698                           
  5699                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5700  00306A  0E00               	movlw	0
  5701  00306C  6E84               	movwf	132,c	;volatile
  5702                           
  5703                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5704  00306E  0E00               	movlw	0
  5705  003070  6E85               	movwf	133,c	;volatile
  5706                           
  5707                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5708  003072  0E07               	movlw	7
  5709  003074  6E8C               	movwf	140,c	;volatile
  5710                           
  5711                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  5712  003076  0E07               	movlw	7
  5713  003078  6E88               	movwf	136,c	;volatile
  5714                           
  5715                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5716  00307A  0EBF               	movlw	191
  5717  00307C  6E89               	movwf	137,c	;volatile
  5718                           
  5719                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5720  00307E  0EBF               	movlw	191
  5721  003080  6E8A               	movwf	138,c	;volatile
  5722                           
  5723                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  5724  003082  0EFE               	movlw	254
  5725  003084  6E8B               	movwf	139,c	;volatile
  5726  003086                     
  5727                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5728  003086  010F               	movlb	15	; () banked
  5729  003088  6926               	setf	38,b	;volatile
  5730                           
  5731                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  5732  00308A  0E3B               	movlw	59
  5733  00308C  6F21               	movwf	33,b	;volatile
  5734                           
  5735                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  5736  00308E  0E37               	movlw	55
  5737  003090  6F19               	movwf	25,b	;volatile
  5738                           
  5739                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5740  003092  0E07               	movlw	7
  5741  003094  6F2E               	movwf	46,b	;volatile
  5742  003096                     
  5743                           ; BSR set to: 15
  5744                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5745  003096  6911               	setf	17,b	;volatile
  5746                           
  5747                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5748  003098  0E00               	movlw	0
  5749  00309A  6F25               	movwf	37,b	;volatile
  5750                           
  5751                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5752  00309C  0E00               	movlw	0
  5753  00309E  6F2D               	movwf	45,b	;volatile
  5754                           
  5755                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5756  0030A0  0E00               	movlw	0
  5757  0030A2  6F18               	movwf	24,b	;volatile
  5758                           
  5759                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5760  0030A4  0E00               	movlw	0
  5761  0030A6  6F10               	movwf	16,b	;volatile
  5762                           
  5763                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5764  0030A8  0E00               	movlw	0
  5765  0030AA  6F20               	movwf	32,b	;volatile
  5766                           
  5767                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  5768  0030AC  0E00               	movlw	0
  5769  0030AE  6F2C               	movwf	44,b	;volatile
  5770                           
  5771                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  5772  0030B0  0E00               	movlw	0
  5773  0030B2  6F0F               	movwf	15,b	;volatile
  5774                           
  5775                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  5776  0030B4  0E00               	movlw	0
  5777  0030B6  6F17               	movwf	23,b	;volatile
  5778                           
  5779                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  5780  0030B8  0E00               	movlw	0
  5781  0030BA  6F1F               	movwf	31,b	;volatile
  5782                           
  5783                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  5784  0030BC  0E00               	movlw	0
  5785  0030BE  6F24               	movwf	36,b	;volatile
  5786  0030C0                     
  5787                           ; BSR set to: 15
  5788                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  5789  0030C0  690E               	setf	14,b	;volatile
  5790  0030C2                     
  5791                           ; BSR set to: 15
  5792                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  5793  0030C2  6916               	setf	22,b	;volatile
  5794  0030C4                     
  5795                           ; BSR set to: 15
  5796                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  5797  0030C4  691E               	setf	30,b	;volatile
  5798  0030C6                     
  5799                           ; BSR set to: 15
  5800                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  5801  0030C6  6923               	setf	35,b	;volatile
  5802                           
  5803                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  5804  0030C8  0E07               	movlw	7
  5805  0030CA  6F2B               	movwf	43,b	;volatile
  5806  0030CC                     
  5807                           ; BSR set to: 15
  5808                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  5809  0030CC  690D               	setf	13,b	;volatile
  5810  0030CE                     
  5811                           ; BSR set to: 15
  5812                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  5813  0030CE  6915               	setf	21,b	;volatile
  5814  0030D0                     
  5815                           ; BSR set to: 15
  5816                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  5817  0030D0  691D               	setf	29,b	;volatile
  5818  0030D2                     
  5819                           ; BSR set to: 15
  5820                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  5821  0030D2  6922               	setf	34,b	;volatile
  5822                           
  5823                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  5824  0030D4  0E0F               	movlw	15
  5825  0030D6  6F2A               	movwf	42,b	;volatile
  5826                           
  5827                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  5828  0030D8  0E17               	movlw	23
  5829  0030DA  010E               	movlb	14	; () banked
  5830  0030DC  6FB5               	movwf	181,b	;volatile
  5831                           
  5832                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  5833  0030DE  0E0B               	movlw	11
  5834  0030E0  6FF5               	movwf	245,b	;volatile
  5835                           
  5836                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  5837  0030E2  0E09               	movlw	9
  5838  0030E4  6FFD               	movwf	253,b	;volatile
  5839                           
  5840                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  5841  0030E6  0E0F               	movlw	15
  5842  0030E8  6F8D               	movwf	141,b	;volatile
  5843  0030EA                     
  5844                           ; BSR set to: 14
  5845  0030EA  0012               	return		;funcret
  5846  0030EC                     __end_of_PIN_MANAGER_Initialize:
  5847                           	opt callstack 0
  5848                           
  5849 ;; *************** function _OSCILLATOR_Initialize *****************
  5850 ;; Defined at:
  5851 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    4
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_SYSTEM_Initialize
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text20
  5880  003D30                     __ptext20:
  5881                           	opt callstack 0
  5882  003D30                     _OSCILLATOR_Initialize:
  5883                           	opt callstack 25
  5884  003D30                     
  5885                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  5886  003D30  0E60               	movlw	96
  5887  003D32  010E               	movlb	14	; () banked
  5888  003D34  6FD8               	movwf	216,b	;volatile
  5889                           
  5890                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  5891  003D36  0E00               	movlw	0
  5892  003D38  6FDA               	movwf	218,b	;volatile
  5893                           
  5894                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5895  003D3A  0E00               	movlw	0
  5896  003D3C  6FDC               	movwf	220,b	;volatile
  5897                           
  5898                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  5899  003D3E  0E06               	movlw	6
  5900  003D40  6FDE               	movwf	222,b	;volatile
  5901                           
  5902                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5903  003D42  0E00               	movlw	0
  5904  003D44  6FDD               	movwf	221,b	;volatile
  5905  003D46                     
  5906                           ; BSR set to: 14
  5907  003D46  0012               	return		;funcret
  5908  003D48                     __end_of_OSCILLATOR_Initialize:
  5909                           	opt callstack 0
  5910                           
  5911 ;; *************** function _INTERRUPT_Initialize *****************
  5912 ;; Defined at:
  5913 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		None
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    4
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_SYSTEM_Initialize
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text21
  5942  003E4E                     __ptext21:
  5943                           	opt callstack 0
  5944  003E4E                     _INTERRUPT_Initialize:
  5945                           	opt callstack 25
  5946  003E4E                     
  5947                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  5948  003E4E  9AF2               	bcf	242,5,c	;volatile
  5949  003E50  0012               	return		;funcret
  5950  003E52                     __end_of_INTERRUPT_Initialize:
  5951                           	opt callstack 0
  5952                           
  5953 ;; *************** function _EUSART2_Initialize *****************
  5954 ;; Defined at:
  5955 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5973 ;;Total ram usage:        0 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    5
  5976 ;; This function calls:
  5977 ;;		_EUSART2_SetErrorHandler
  5978 ;;		_EUSART2_SetFramingErrorHandler
  5979 ;;		_EUSART2_SetOverrunErrorHandler
  5980 ;;		_EUSART2_SetRxInterruptHandler
  5981 ;;		_EUSART2_SetTxInterruptHandler
  5982 ;; This function is called by:
  5983 ;;		_SYSTEM_Initialize
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text22
  5988  003374                     __ptext22:
  5989                           	opt callstack 0
  5990  003374                     _EUSART2_Initialize:
  5991                           	opt callstack 24
  5992  003374                     
  5993                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  5994  003374  010E               	movlb	14	; () banked
  5995  003376  9FC5               	bcf	197,7,b	;volatile
  5996  003378                     
  5997                           ; BSR set to: 14
  5998                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  5999  003378  0E9A               	movlw	low _EUSART2_Receive_ISR
  6000  00337A  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  6001  00337C  0E2D               	movlw	high _EUSART2_Receive_ISR
  6002  00337E  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  6003  003380  ECE2  F01E         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  6004  003384                     
  6005                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  6006  003384  010E               	movlb	14	; () banked
  6007  003386  9DC5               	bcf	197,6,b	;volatile
  6008                           
  6009                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  6010  003388  0E52               	movlw	low _EUSART2_Transmit_ISR
  6011  00338A  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  6012  00338C  0E39               	movlw	high _EUSART2_Transmit_ISR
  6013  00338E  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  6014  003390  ECDD  F01E         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  6015  003394                     
  6016                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  6017  003394  0E08               	movlw	8
  6018  003396  010E               	movlb	14	; () banked
  6019  003398  6F9F               	movwf	159,b	;volatile
  6020  00339A                     
  6021                           ; BSR set to: 14
  6022                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  6023  00339A  0E90               	movlw	144
  6024  00339C  6F9D               	movwf	157,b	;volatile
  6025  00339E                     
  6026                           ; BSR set to: 14
  6027                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  6028  00339E  0E24               	movlw	36
  6029  0033A0  6F9E               	movwf	158,b	;volatile
  6030  0033A2                     
  6031                           ; BSR set to: 14
  6032                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  6033  0033A2  0EA0               	movlw	160
  6034  0033A4  6F9B               	movwf	155,b	;volatile
  6035  0033A6                     
  6036                           ; BSR set to: 14
  6037                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  6038  0033A6  0E01               	movlw	1
  6039  0033A8  6F9C               	movwf	156,b	;volatile
  6040  0033AA                     
  6041                           ; BSR set to: 14
  6042                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  6043  0033AA  0E56               	movlw	low _EUSART2_DefaultFramingErrorHandler
  6044  0033AC  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  6045  0033AE  0E3E               	movlw	high _EUSART2_DefaultFramingErrorHandler
  6046  0033B0  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  6047  0033B2  ECEC  F01E         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  6048  0033B6                     
  6049                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  6050  0033B6  0E28               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  6051  0033B8  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  6052  0033BA  0E3E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  6053  0033BC  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6054  0033BE  ECE7  F01E         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  6055  0033C2                     
  6056                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  6057  0033C2  0E3C               	movlw	low _EUSART2_DefaultErrorHandler
  6058  0033C4  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  6059  0033C6  0E3E               	movlw	high _EUSART2_DefaultErrorHandler
  6060  0033C8  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  6061  0033CA  ECF1  F01E         	call	_EUSART2_SetErrorHandler	;wreg free
  6062                           
  6063                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  6064  0033CE  0E00               	movlw	0
  6065  0033D0  0100               	movlb	0	; () banked
  6066  0033D2  6FB6               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6067                           
  6068                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  6069  0033D4  0E00               	movlw	0
  6070  0033D6  6FBA               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6071                           
  6072                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  6073  0033D8  0E00               	movlw	0
  6074  0033DA  6FB9               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6075                           
  6076                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  6077  0033DC  0E20               	movlw	32
  6078  0033DE  6FBC               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6079                           
  6080                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  6081  0033E0  0E00               	movlw	0
  6082  0033E2  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6083                           
  6084                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  6085  0033E4  0E00               	movlw	0
  6086  0033E6  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  6087                           
  6088                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  6089  0033E8  0E00               	movlw	0
  6090  0033EA  6FB7               	movwf	_eusart2RxCount& (0+255),b	;volatile
  6091  0033EC                     
  6092                           ; BSR set to: 0
  6093                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  6094  0033EC  010E               	movlb	14	; () banked
  6095  0033EE  8FC5               	bsf	197,7,b	;volatile
  6096  0033F0                     
  6097                           ; BSR set to: 14
  6098  0033F0  0012               	return		;funcret
  6099  0033F2                     __end_of_EUSART2_Initialize:
  6100                           	opt callstack 0
  6101                           
  6102 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  6103 ;; Defined at:
  6104 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6107 ;;		 -> EUSART2_Transmit_ISR(1), 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    4
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_EUSART2_Initialize
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text23
  6134  003DBA                     __ptext23:
  6135                           	opt callstack 0
  6136  003DBA                     _EUSART2_SetTxInterruptHandler:
  6137                           	opt callstack 24
  6138  003DBA                     
  6139                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6140  003DBA  C005  F1F6         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  6141  003DBE  C006  F1F7         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  6142  003DC2  0012               	return		;funcret
  6143  003DC4                     __end_of_EUSART2_SetTxInterruptHandler:
  6144                           	opt callstack 0
  6145                           
  6146 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  6147 ;; Defined at:
  6148 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6151 ;;		 -> EUSART2_Receive_ISR(1), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;Total ram usage:        2 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    4
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_EUSART2_Initialize
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text24
  6178  003DC4                     __ptext24:
  6179                           	opt callstack 0
  6180  003DC4                     _EUSART2_SetRxInterruptHandler:
  6181                           	opt callstack 24
  6182  003DC4                     
  6183                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6184  003DC4  C005  F1F4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  6185  003DC8  C006  F1F5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  6186  003DCC  0012               	return		;funcret
  6187  003DCE                     __end_of_EUSART2_SetRxInterruptHandler:
  6188                           	opt callstack 0
  6189                           
  6190 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6191 ;; Defined at:
  6192 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6195 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;Total ram usage:        2 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    4
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_EUSART2_Initialize
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text25
  6222  003DCE                     __ptext25:
  6223                           	opt callstack 0
  6224  003DCE                     _EUSART2_SetOverrunErrorHandler:
  6225                           	opt callstack 24
  6226  003DCE                     
  6227                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  6228  003DCE  C005  F1EC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  6229  003DD2  C006  F1ED         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  6230  003DD6  0012               	return		;funcret
  6231  003DD8                     __end_of_EUSART2_SetOverrunErrorHandler:
  6232                           	opt callstack 0
  6233                           
  6234 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6235 ;; Defined at:
  6236 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6239 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;Total ram usage:        2 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    4
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_EUSART2_Initialize
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text26
  6266  003DD8                     __ptext26:
  6267                           	opt callstack 0
  6268  003DD8                     _EUSART2_SetFramingErrorHandler:
  6269                           	opt callstack 24
  6270  003DD8                     
  6271                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  6272  003DD8  C005  F1EE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  6273  003DDC  C006  F1EF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  6274  003DE0  0012               	return		;funcret
  6275  003DE2                     __end_of_EUSART2_SetFramingErrorHandler:
  6276                           	opt callstack 0
  6277                           
  6278 ;; *************** function _EUSART2_SetErrorHandler *****************
  6279 ;; Defined at:
  6280 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6283 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6299 ;;Total ram usage:        2 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    4
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_EUSART2_Initialize
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text27
  6310  003DE2                     __ptext27:
  6311                           	opt callstack 0
  6312  003DE2                     _EUSART2_SetErrorHandler:
  6313                           	opt callstack 24
  6314  003DE2                     
  6315                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  6316  003DE2  C005  F1EA         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  6317  003DE6  C006  F1EB         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  6318  003DEA  0012               	return		;funcret
  6319  003DEC                     __end_of_EUSART2_SetErrorHandler:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _EUSART1_Initialize *****************
  6323 ;; Defined at:
  6324 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    5
  6345 ;; This function calls:
  6346 ;;		_EUSART1_SetErrorHandler
  6347 ;;		_EUSART1_SetFramingErrorHandler
  6348 ;;		_EUSART1_SetOverrunErrorHandler
  6349 ;;		_EUSART1_SetRxInterruptHandler
  6350 ;;		_EUSART1_SetTxInterruptHandler
  6351 ;; This function is called by:
  6352 ;;		_SYSTEM_Initialize
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text28
  6357  003276                     __ptext28:
  6358                           	opt callstack 0
  6359  003276                     _EUSART1_Initialize:
  6360                           	opt callstack 24
  6361  003276                     
  6362                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  6363  003276  010E               	movlb	14	; () banked
  6364  003278  9BC5               	bcf	197,5,b	;volatile
  6365  00327A                     
  6366                           ; BSR set to: 14
  6367                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6368  00327A  0E5A               	movlw	low _EUSART1_Receive_ISR
  6369  00327C  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  6370  00327E  0E2E               	movlw	high _EUSART1_Receive_ISR
  6371  003280  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  6372  003282  ECFB  F01E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  6373  003286                     
  6374                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  6375  003286  010E               	movlb	14	; () banked
  6376  003288  99C5               	bcf	197,4,b	;volatile
  6377                           
  6378                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  6379  00328A  0E22               	movlw	low _EUSART1_Transmit_ISR
  6380  00328C  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  6381  00328E  0E3A               	movlw	high _EUSART1_Transmit_ISR
  6382  003290  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  6383  003292  ECF6  F01E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  6384  003296                     
  6385                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  6386  003296  0E08               	movlw	8
  6387  003298  6E9F               	movwf	159,c	;volatile
  6388  00329A                     
  6389                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  6390  00329A  0E90               	movlw	144
  6391  00329C  6E9D               	movwf	157,c	;volatile
  6392  00329E                     
  6393                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  6394  00329E  0E24               	movlw	36
  6395  0032A0  6E9E               	movwf	158,c	;volatile
  6396  0032A2                     
  6397                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  6398  0032A2  0EA0               	movlw	160
  6399  0032A4  6E9B               	movwf	155,c	;volatile
  6400  0032A6                     
  6401                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  6402  0032A6  0E03               	movlw	3
  6403  0032A8  6E9C               	movwf	156,c	;volatile
  6404  0032AA                     
  6405                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  6406  0032AA  0E01               	movlw	1
  6407  0032AC  6E9C               	movwf	156,c	;volatile
  6408                           
  6409                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6410  0032AE  0E58               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6411  0032B0  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6412  0032B2  0E3E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6413  0032B4  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6414  0032B6  EC05  F01F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6415                           
  6416                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6417  0032BA  0E42               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6418  0032BC  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6419  0032BE  0E3E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6420  0032C0  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6421  0032C2  EC00  F01F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6422                           
  6423                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6424  0032C6  0E48               	movlw	low _EUSART1_DefaultErrorHandler
  6425  0032C8  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6426  0032CA  0E3E               	movlw	high _EUSART1_DefaultErrorHandler
  6427  0032CC  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6428  0032CE  EC0A  F01F         	call	_EUSART1_SetErrorHandler	;wreg free
  6429  0032D2                     
  6430                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  6431  0032D2  0E00               	movlw	0
  6432  0032D4  0100               	movlb	0	; () banked
  6433  0032D6  6FB1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6434  0032D8                     
  6435                           ; BSR set to: 0
  6436                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  6437  0032D8  0E00               	movlw	0
  6438  0032DA  6FB5               	movwf	_eusart1TxHead& (0+255),b	;volatile
  6439  0032DC                     
  6440                           ; BSR set to: 0
  6441                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  6442  0032DC  0E00               	movlw	0
  6443  0032DE  6FB4               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6444  0032E0                     
  6445                           ; BSR set to: 0
  6446                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  6447  0032E0  0E10               	movlw	16
  6448  0032E2  6FBB               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6449  0032E4                     
  6450                           ; BSR set to: 0
  6451                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  6452  0032E4  0E00               	movlw	0
  6453  0032E6  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  6454  0032E8                     
  6455                           ; BSR set to: 0
  6456                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  6457  0032E8  0E00               	movlw	0
  6458  0032EA  6FB3               	movwf	_eusart1RxTail& (0+255),b	;volatile
  6459  0032EC                     
  6460                           ; BSR set to: 0
  6461                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  6462  0032EC  0E00               	movlw	0
  6463  0032EE  6FB2               	movwf	_eusart1RxCount& (0+255),b	;volatile
  6464  0032F0                     
  6465                           ; BSR set to: 0
  6466                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  6467  0032F0  010E               	movlb	14	; () banked
  6468  0032F2  8BC5               	bsf	197,5,b	;volatile
  6469  0032F4                     
  6470                           ; BSR set to: 14
  6471  0032F4  0012               	return		;funcret
  6472  0032F6                     __end_of_EUSART1_Initialize:
  6473                           	opt callstack 0
  6474                           
  6475 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6476 ;; Defined at:
  6477 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6480 ;;		 -> EUSART1_Transmit_ISR(1), 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;Total ram usage:        2 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    4
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_EUSART1_Initialize
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text29
  6507  003DEC                     __ptext29:
  6508                           	opt callstack 0
  6509  003DEC                     _EUSART1_SetTxInterruptHandler:
  6510                           	opt callstack 24
  6511  003DEC                     
  6512                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6513  003DEC  C005  F1F2         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6514  003DF0  C006  F1F3         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6515  003DF4  0012               	return		;funcret
  6516  003DF6                     __end_of_EUSART1_SetTxInterruptHandler:
  6517                           	opt callstack 0
  6518                           
  6519 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6520 ;; Defined at:
  6521 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6524 ;;		 -> EUSART1_Receive_ISR(1), 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;Total ram usage:        2 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:    4
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_EUSART1_Initialize
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text30
  6551  003DF6                     __ptext30:
  6552                           	opt callstack 0
  6553  003DF6                     _EUSART1_SetRxInterruptHandler:
  6554                           	opt callstack 24
  6555  003DF6                     
  6556                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6557  003DF6  C005  F1F0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6558  003DFA  C006  F1F1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6559  003DFE  0012               	return		;funcret
  6560  003E00                     __end_of_EUSART1_SetRxInterruptHandler:
  6561                           	opt callstack 0
  6562                           
  6563 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6564 ;; Defined at:
  6565 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6568 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;Total ram usage:        2 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    4
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_EUSART1_Initialize
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text31
  6595  003E00                     __ptext31:
  6596                           	opt callstack 0
  6597  003E00                     _EUSART1_SetOverrunErrorHandler:
  6598                           	opt callstack 24
  6599  003E00                     
  6600                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  6601  003E00  C005  F1E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6602  003E04  C006  F1E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6603  003E08  0012               	return		;funcret
  6604  003E0A                     __end_of_EUSART1_SetOverrunErrorHandler:
  6605                           	opt callstack 0
  6606                           
  6607 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6608 ;; Defined at:
  6609 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6612 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6628 ;;Total ram usage:        2 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    4
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_EUSART1_Initialize
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text32
  6639  003E0A                     __ptext32:
  6640                           	opt callstack 0
  6641  003E0A                     _EUSART1_SetFramingErrorHandler:
  6642                           	opt callstack 24
  6643  003E0A                     
  6644                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  6645  003E0A  C005  F1E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6646  003E0E  C006  F1E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6647  003E12  0012               	return		;funcret
  6648  003E14                     __end_of_EUSART1_SetFramingErrorHandler:
  6649                           	opt callstack 0
  6650                           
  6651 ;; *************** function _EUSART1_SetErrorHandler *****************
  6652 ;; Defined at:
  6653 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6656 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		wreg, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6672 ;;Total ram usage:        2 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    4
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_EUSART1_Initialize
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text33
  6683  003E14                     __ptext33:
  6684                           	opt callstack 0
  6685  003E14                     _EUSART1_SetErrorHandler:
  6686                           	opt callstack 24
  6687  003E14                     
  6688                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  6689  003E14  C005  F1E4         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6690  003E18  C006  F1E5         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6691  003E1C  0012               	return		;funcret
  6692  003E1E                     __end_of_EUSART1_SetErrorHandler:
  6693                           	opt callstack 0
  6694                           
  6695 ;; *************** function _PrintModbus *****************
  6696 ;; Defined at:
  6697 ;;		line 101 in file "Modbus.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  i               2   43[BANK0 ] int 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      void 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;Total ram usage:        3 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:   13
  6718 ;; This function calls:
  6719 ;;		_printf
  6720 ;; This function is called by:
  6721 ;;		_main
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text34
  6726  0030EC                     __ptext34:
  6727                           	opt callstack 0
  6728  0030EC                     _PrintModbus:
  6729                           	opt callstack 17
  6730  0030EC                     
  6731                           ;Modbus.c: 106:     printf("Modbus Data Capture Complete:\r\n");
  6732  0030EC  0E01               	movlw	low STR_8
  6733  0030EE  0100               	movlb	0	; () banked
  6734  0030F0  6F7D               	movwf	printf@fmt& (0+255),b
  6735  0030F2  0EFD               	movlw	high STR_8
  6736  0030F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6737  0030F6  EC2B  F01E         	call	_printf	;wreg free
  6738  0030FA                     
  6739                           ;Modbus.c: 108:     if(Debug ==1){
  6740  0030FA  0100               	movlb	0	; () banked
  6741  0030FC  05B0               	decf	_Debug& (0+255),w,b
  6742  0030FE  A4D8               	btfss	status,2,c
  6743  003100  EF84  F018         	goto	u7001
  6744  003104  EF86  F018         	goto	u7000
  6745  003108                     u7001:
  6746  003108  EFB9  F018         	goto	l719
  6747  00310C                     u7000:
  6748  00310C                     
  6749                           ; BSR set to: 0
  6750                           ;Modbus.c: 109:         for(i=0; i< ModDataCnt ; i++ ){
  6751  00310C  0E00               	movlw	0
  6752  00310E  6F8C               	movwf	(PrintModbus@i+1)& (0+255),b
  6753  003110  0E00               	movlw	0
  6754  003112  6F8B               	movwf	PrintModbus@i& (0+255),b
  6755  003114  EFA4  F018         	goto	l6879
  6756  003118                     l6875:
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;Modbus.c: 110:             printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  6760  003118  0E96               	movlw	low STR_9
  6761  00311A  6F7D               	movwf	printf@fmt& (0+255),b
  6762  00311C  0EFE               	movlw	high STR_9
  6763  00311E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6764  003120  C08B  F07F         	movff	PrintModbus@i,?_printf+2
  6765  003124  C08C  F080         	movff	PrintModbus@i+1,?_printf+3
  6766  003128  0E00               	movlw	low _ModbusData
  6767  00312A  258B               	addwf	PrintModbus@i& (0+255),w,b
  6768  00312C  6ED9               	movwf	fsr2l,c
  6769  00312E  0E02               	movlw	high _ModbusData
  6770  003130  218C               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  6771  003132  6EDA               	movwf	fsr2h,c
  6772  003134  50DF               	movf	indf2,w,c
  6773  003136  6E55               	movwf	??_PrintModbus^0,c
  6774  003138  5055               	movf	??_PrintModbus^0,w,c
  6775  00313A  6F81               	movwf	(?_printf+4)& (0+255),b
  6776  00313C  6B82               	clrf	(?_printf+5)& (0+255),b
  6777  00313E  EC2B  F01E         	call	_printf	;wreg free
  6778  003142                     
  6779                           ;Modbus.c: 111:         }
  6780  003142  0100               	movlb	0	; () banked
  6781  003144  4B8B               	infsnz	PrintModbus@i& (0+255),f,b
  6782  003146  2B8C               	incf	(PrintModbus@i+1)& (0+255),f,b
  6783  003148                     l6879:
  6784                           
  6785                           ; BSR set to: 0
  6786  003148  51AD               	movf	_ModDataCnt& (0+255),w,b
  6787  00314A  5D8B               	subwf	PrintModbus@i& (0+255),w,b
  6788  00314C  518C               	movf	(PrintModbus@i+1)& (0+255),w,b
  6789  00314E  0A80               	xorlw	128
  6790  003150  6E55               	movwf	??_PrintModbus^0,c
  6791  003152  51AE               	movf	(_ModDataCnt+1)& (0+255),w,b
  6792  003154  0A80               	xorlw	128
  6793  003156  5855               	subwfb	??_PrintModbus^0,w,c
  6794  003158  A0D8               	btfss	status,0,c
  6795  00315A  EFB1  F018         	goto	u7011
  6796  00315E  EFB3  F018         	goto	u7010
  6797  003162                     u7011:
  6798  003162  EF8C  F018         	goto	l6875
  6799  003166                     u7010:
  6800  003166                     
  6801                           ; BSR set to: 0
  6802                           ;Modbus.c: 112:         printf("\r\n\n");
  6803  003166  0E9A               	movlw	low (STR_37+50)
  6804  003168  6F7D               	movwf	printf@fmt& (0+255),b
  6805  00316A  0EFB               	movlw	high (STR_37+50)
  6806  00316C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6807  00316E  EC2B  F01E         	call	_printf	;wreg free
  6808  003172                     l719:
  6809  003172  0012               	return		;funcret
  6810  003174                     __end_of_PrintModbus:
  6811                           	opt callstack 0
  6812                           
  6813 ;; *************** function _ModbusRx *****************
  6814 ;; Defined at:
  6815 ;;		line 438 in file "Modbus.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      _Bool 
  6822 ;; Registers used:
  6823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6833 ;;Total ram usage:        1 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:   14
  6836 ;; This function calls:
  6837 ;;		_AddRxBuffToModBus
  6838 ;;		_ClearRxBuff
  6839 ;;		_EUSART1_Read
  6840 ;;		_EUSART1_is_rx_ready
  6841 ;;		_RXMode
  6842 ;;		_checkCRC
  6843 ;;		_printf
  6844 ;; This function is called by:
  6845 ;;		_main
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text35
  6850  00179E                     __ptext35:
  6851                           	opt callstack 0
  6852  00179E                     _ModbusRx:
  6853                           	opt callstack 16
  6854  00179E                     
  6855                           ;Modbus.c: 439:     RXMode();
  6856  00179E  EC18  F01F         	call	_RXMode	;wreg free
  6857  0017A2                     
  6858                           ;Modbus.c: 440:     if(EUSART1_is_rx_ready()){
  6859  0017A2  ECA4  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  6860  0017A6  0900               	iorlw	0
  6861  0017A8  B4D8               	btfsc	status,2,c
  6862  0017AA  EFD9  F00B         	goto	u6891
  6863  0017AE  EFDB  F00B         	goto	u6890
  6864  0017B2                     u6891:
  6865  0017B2  EFA5  F00C         	goto	l6863
  6866  0017B6                     u6890:
  6867  0017B6                     
  6868                           ;Modbus.c: 441:         if(Debug ==1){
  6869  0017B6  0100               	movlb	0	; () banked
  6870  0017B8  05B0               	decf	_Debug& (0+255),w,b
  6871  0017BA  A4D8               	btfss	status,2,c
  6872  0017BC  EFE2  F00B         	goto	u6901
  6873  0017C0  EFE4  F00B         	goto	u6900
  6874  0017C4                     u6901:
  6875  0017C4  EFEA  F00B         	goto	l6817
  6876  0017C8                     u6900:
  6877  0017C8                     
  6878                           ; BSR set to: 0
  6879                           ;Modbus.c: 442:             printf("Something in ESUART1 \r\n");
  6880  0017C8  0E66               	movlw	low STR_24
  6881  0017CA  6F7D               	movwf	printf@fmt& (0+255),b
  6882  0017CC  0EFE               	movlw	high STR_24
  6883  0017CE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6884  0017D0  EC2B  F01E         	call	_printf	;wreg free
  6885  0017D4                     l6817:
  6886                           
  6887                           ;Modbus.c: 445:             if(EUSART1_is_rx_ready()){
  6888  0017D4  ECA4  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  6889  0017D8  0900               	iorlw	0
  6890  0017DA  B4D8               	btfsc	status,2,c
  6891  0017DC  EFF2  F00B         	goto	u6911
  6892  0017E0  EFF4  F00B         	goto	u6910
  6893  0017E4                     u6911:
  6894  0017E4  EF2B  F00C         	goto	l6833
  6895  0017E8                     u6910:
  6896  0017E8  EF1E  F00C         	goto	l6829
  6897  0017EC                     l6821:
  6898                           
  6899                           ;Modbus.c: 449:                     rxData[ByteNum] = EUSART1_Read();
  6900  0017EC  ECBB  F01B         	call	_EUSART1_Read	;wreg free
  6901  0017F0  6E56               	movwf	??_ModbusRx^0,c
  6902  0017F2  0E00               	movlw	low _rxData
  6903  0017F4  0100               	movlb	0	; () banked
  6904  0017F6  25AB               	addwf	_ByteNum& (0+255),w,b
  6905  0017F8  6ED9               	movwf	fsr2l,c
  6906  0017FA  0E04               	movlw	high _rxData
  6907  0017FC  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6908  0017FE  6EDA               	movwf	fsr2h,c
  6909  001800  C056  FFDF         	movff	??_ModbusRx,indf2
  6910  001804                     
  6911                           ; BSR set to: 0
  6912                           ;Modbus.c: 451:                     if(Debug == 1){
  6913  001804  05B0               	decf	_Debug& (0+255),w,b
  6914  001806  A4D8               	btfss	status,2,c
  6915  001808  EF08  F00C         	goto	u6921
  6916  00180C  EF0A  F00C         	goto	u6920
  6917  001810                     u6921:
  6918  001810  EF1B  F00C         	goto	l6827
  6919  001814                     u6920:
  6920  001814                     
  6921                           ; BSR set to: 0
  6922                           ;Modbus.c: 452:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  6923  001814  0E64               	movlw	low STR_25
  6924  001816  6F7D               	movwf	printf@fmt& (0+255),b
  6925  001818  0EFF               	movlw	high STR_25
  6926  00181A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6927  00181C  0E00               	movlw	low _rxData
  6928  00181E  25AB               	addwf	_ByteNum& (0+255),w,b
  6929  001820  6ED9               	movwf	fsr2l,c
  6930  001822  0E04               	movlw	high _rxData
  6931  001824  21AC               	addwfc	(_ByteNum+1)& (0+255),w,b
  6932  001826  6EDA               	movwf	fsr2h,c
  6933  001828  50DF               	movf	indf2,w,c
  6934  00182A  6E56               	movwf	??_ModbusRx^0,c
  6935  00182C  5056               	movf	??_ModbusRx^0,w,c
  6936  00182E  6F7F               	movwf	(?_printf+2)& (0+255),b
  6937  001830  6B80               	clrf	(?_printf+3)& (0+255),b
  6938  001832  EC2B  F01E         	call	_printf	;wreg free
  6939  001836                     l6827:
  6940                           
  6941                           ;Modbus.c: 454:                     ByteNum++;
  6942  001836  0100               	movlb	0	; () banked
  6943  001838  4BAB               	infsnz	_ByteNum& (0+255),f,b
  6944  00183A  2BAC               	incf	(_ByteNum+1)& (0+255),f,b
  6945  00183C                     l6829:
  6946                           
  6947                           ;Modbus.c: 447:                 while(EUSART1_is_rx_ready()){
  6948  00183C  ECA4  F01E         	call	_EUSART1_is_rx_ready	;wreg free
  6949  001840  0900               	iorlw	0
  6950  001842  A4D8               	btfss	status,2,c
  6951  001844  EF26  F00C         	goto	u6931
  6952  001848  EF28  F00C         	goto	u6930
  6953  00184C                     u6931:
  6954  00184C  EFF6  F00B         	goto	l6821
  6955  001850                     u6930:
  6956  001850                     
  6957                           ;Modbus.c: 457:                 RXStat = 1;
  6958  001850  0E01               	movlw	1
  6959  001852  0100               	movlb	0	; () banked
  6960  001854  6FAF               	movwf	_RXStat& (0+255),b
  6961  001856                     l6833:
  6962                           
  6963                           ;Modbus.c: 460:             if(RXStat ==1){
  6964  001856  0100               	movlb	0	; () banked
  6965  001858  05AF               	decf	_RXStat& (0+255),w,b
  6966  00185A  A4D8               	btfss	status,2,c
  6967  00185C  EF32  F00C         	goto	u6941
  6968  001860  EF34  F00C         	goto	u6940
  6969  001864                     u6941:
  6970  001864  EF50  F00C         	goto	l6845
  6971  001868                     u6940:
  6972  001868                     
  6973                           ; BSR set to: 0
  6974                           ;Modbus.c: 463:                 AddRxBuffToModBus();
  6975  001868  EC38  F015         	call	_AddRxBuffToModBus	;wreg free
  6976  00186C                     
  6977                           ;Modbus.c: 464:                 ClearRxBuff();
  6978  00186C  EC84  F01C         	call	_ClearRxBuff	;wreg free
  6979  001870                     
  6980                           ;Modbus.c: 465:                 RXStat = 0;
  6981  001870  0E00               	movlw	0
  6982  001872  0100               	movlb	0	; () banked
  6983  001874  6FAF               	movwf	_RXStat& (0+255),b
  6984  001876                     
  6985                           ; BSR set to: 0
  6986                           ;Modbus.c: 466:                 ByteNum = 0;
  6987  001876  0E00               	movlw	0
  6988  001878  6FAC               	movwf	(_ByteNum+1)& (0+255),b
  6989  00187A  0E00               	movlw	0
  6990  00187C  6FAB               	movwf	_ByteNum& (0+255),b
  6991  00187E                     
  6992                           ; BSR set to: 0
  6993  00187E  B883               	btfsc	131,4,c	;volatile
  6994  001880  EF44  F00C         	goto	u6951
  6995  001884  EF47  F00C         	goto	u6950
  6996  001888                     u6951:
  6997  001888  0E01               	movlw	1
  6998  00188A  EF48  F00C         	goto	u6956
  6999  00188E                     u6950:
  7000  00188E  0E00               	movlw	0
  7001  001890                     u6956:
  7002  001890  0AFF               	xorlw	255
  7003  001892  6E56               	movwf	??_ModbusRx^0,c
  7004  001894  3A56               	swapf	??_ModbusRx^0,f,c
  7005  001896  5083               	movf	131,w,c	;volatile
  7006  001898  1856               	xorwf	??_ModbusRx^0,w,c
  7007  00189A  0BEF               	andlw	-17
  7008  00189C  1856               	xorwf	??_ModbusRx^0,w,c
  7009  00189E  6E83               	movwf	131,c	;volatile
  7010  0018A0                     l6845:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;Modbus.c: 470:             if(Debug == 1){
  7014  0018A0  05B0               	decf	_Debug& (0+255),w,b
  7015  0018A2  A4D8               	btfss	status,2,c
  7016  0018A4  EF56  F00C         	goto	u6961
  7017  0018A8  EF58  F00C         	goto	u6960
  7018  0018AC                     u6961:
  7019  0018AC  EF66  F00C         	goto	l6849
  7020  0018B0                     u6960:
  7021  0018B0                     
  7022                           ; BSR set to: 0
  7023                           ;Modbus.c: 471:                 printf("ModDatCnt: %i ExpetedBytes %i \r\n", ModDataCnt,
      +                          ExpectedBytes);
  7024  0018B0  0EE0               	movlw	low STR_26
  7025  0018B2  6F7D               	movwf	printf@fmt& (0+255),b
  7026  0018B4  0EFC               	movlw	high STR_26
  7027  0018B6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7028  0018B8  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  7029  0018BC  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  7030  0018C0  C13D  F081         	movff	_ExpectedBytes,?_printf+4
  7031  0018C4  C13E  F082         	movff	_ExpectedBytes+1,?_printf+5
  7032  0018C8  EC2B  F01E         	call	_printf	;wreg free
  7033  0018CC                     l6849:
  7034                           
  7035                           ;Modbus.c: 474:         }while(ModDataCnt != ExpectedBytes);
  7036  0018CC  0101               	movlb	1	; () banked
  7037  0018CE  513D               	movf	_ExpectedBytes& (0+255),w,b
  7038  0018D0  0100               	movlb	0	; () banked
  7039  0018D2  19AD               	xorwf	_ModDataCnt& (0+255),w,b
  7040  0018D4  E109               	bnz	u6971
  7041  0018D6  0101               	movlb	1	; () banked
  7042  0018D8  513E               	movf	(_ExpectedBytes+1)& (0+255),w,b
  7043  0018DA  0100               	movlb	0	; () banked
  7044  0018DC  19AE               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  7045  0018DE  A4D8               	btfss	status,2,c
  7046  0018E0  EF74  F00C         	goto	u6971
  7047  0018E4  EF76  F00C         	goto	u6970
  7048  0018E8                     u6971:
  7049  0018E8  EFEA  F00B         	goto	l6817
  7050  0018EC                     u6970:
  7051  0018EC                     
  7052                           ; BSR set to: 0
  7053  0018EC  BA83               	btfsc	131,5,c	;volatile
  7054  0018EE  EF7B  F00C         	goto	u6981
  7055  0018F2  EF7E  F00C         	goto	u6980
  7056  0018F6                     u6981:
  7057  0018F6  0E01               	movlw	1
  7058  0018F8  EF7F  F00C         	goto	u6986
  7059  0018FC                     u6980:
  7060  0018FC  0E00               	movlw	0
  7061  0018FE                     u6986:
  7062  0018FE  0AFF               	xorlw	255
  7063  001900  6E56               	movwf	??_ModbusRx^0,c
  7064  001902  3A56               	swapf	??_ModbusRx^0,f,c
  7065  001904  4656               	rlncf	??_ModbusRx^0,f,c
  7066  001906  5083               	movf	131,w,c	;volatile
  7067  001908  1856               	xorwf	??_ModbusRx^0,w,c
  7068  00190A  0BDF               	andlw	-33
  7069  00190C  1856               	xorwf	??_ModbusRx^0,w,c
  7070  00190E  6E83               	movwf	131,c	;volatile
  7071  001910                     
  7072                           ; BSR set to: 0
  7073                           ;Modbus.c: 479:         if(checkCRC() == 1)
  7074  001910  EC86  F010         	call	_checkCRC	;wreg free
  7075  001914  06E8               	decf	wreg,f,c
  7076  001916  A4D8               	btfss	status,2,c
  7077  001918  EF90  F00C         	goto	u6991
  7078  00191C  EF92  F00C         	goto	u6990
  7079  001920                     u6991:
  7080  001920  EF9B  F00C         	goto	l6857
  7081  001924                     u6990:
  7082  001924                     
  7083                           ;Modbus.c: 480:         {;Modbus.c: 481:             printf("Modbus Rx Good Good.\r\n\n"
      +                          );
  7084  001924  0E4E               	movlw	low STR_27
  7085  001926  0100               	movlb	0	; () banked
  7086  001928  6F7D               	movwf	printf@fmt& (0+255),b
  7087  00192A  0EFE               	movlw	high STR_27
  7088  00192C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7089  00192E  EC2B  F01E         	call	_printf	;wreg free
  7090                           
  7091                           ;Modbus.c: 482:         }else{
  7092  001932  EFA2  F00C         	goto	l6859
  7093  001936                     l6857:
  7094                           
  7095                           ;Modbus.c: 483:             printf("Modbus Rx Bad.\r\n\n");
  7096  001936  0EFE               	movlw	low STR_28
  7097  001938  0100               	movlb	0	; () banked
  7098  00193A  6F7D               	movwf	printf@fmt& (0+255),b
  7099  00193C  0EFE               	movlw	high STR_28
  7100  00193E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7101  001940  EC2B  F01E         	call	_printf	;wreg free
  7102  001944                     l6859:
  7103                           
  7104                           ;Modbus.c: 487:         return 1;
  7105  001944  0E01               	movlw	1
  7106  001946  EFA6  F00C         	goto	l836
  7107  00194A                     l6863:
  7108                           
  7109                           ;Modbus.c: 489:     return 0;
  7110  00194A  0E00               	movlw	0
  7111  00194C                     l836:
  7112  00194C  0012               	return		;funcret
  7113  00194E                     __end_of_ModbusRx:
  7114                           	opt callstack 0
  7115                           
  7116 ;; *************** function _checkCRC *****************
  7117 ;; Defined at:
  7118 ;;		line 118 in file "Modbus.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  i               2   56[BANK0 ] int 
  7123 ;;  crc             2   54[BANK0 ] unsigned int 
  7124 ;;  j               2   52[BANK0 ] int 
  7125 ;;  crcLow          2   50[BANK0 ] unsigned int 
  7126 ;;  crcHigh         2   48[BANK0 ] unsigned int 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      _Bool 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;Total ram usage:       15 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:   13
  7143 ;; This function calls:
  7144 ;;		_printf
  7145 ;; This function is called by:
  7146 ;;		_ModbusRx
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text36
  7151  00210C                     __ptext36:
  7152                           	opt callstack 0
  7153  00210C                     _checkCRC:
  7154                           	opt callstack 16
  7155  00210C                     
  7156                           ;Modbus.c: 119:   unsigned int crc = 0xFFFF;
  7157  00210C  0100               	movlb	0	; () banked
  7158  00210E  6996               	setf	checkCRC@crc& (0+255),b
  7159  002110  6997               	setf	(checkCRC@crc+1)& (0+255),b
  7160  002112                     
  7161                           ; BSR set to: 0
  7162                           ;Modbus.c: 121:   unsigned int crcLow = 0;
  7163  002112  0E00               	movlw	0
  7164  002114  6F93               	movwf	(checkCRC@crcLow+1)& (0+255),b
  7165  002116  0E00               	movlw	0
  7166  002118  6F92               	movwf	checkCRC@crcLow& (0+255),b
  7167                           
  7168                           ;Modbus.c: 122:   int i,j = 0;
  7169  00211A  0E00               	movlw	0
  7170  00211C  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  7171  00211E  0E00               	movlw	0
  7172  002120  6F94               	movwf	checkCRC@j& (0+255),b
  7173                           
  7174                           ;Modbus.c: 124:     for(i=0;i<ModDataCnt-2;i++){
  7175  002122  0E00               	movlw	0
  7176  002124  6F99               	movwf	(checkCRC@i+1)& (0+255),b
  7177  002126  0E00               	movlw	0
  7178  002128  6F98               	movwf	checkCRC@i& (0+255),b
  7179  00212A  EFC6  F010         	goto	l6673
  7180  00212E                     l6655:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;Modbus.c: 125:       crc ^= ModbusData[i];
  7184  00212E  0E00               	movlw	low _ModbusData
  7185  002130  2598               	addwf	checkCRC@i& (0+255),w,b
  7186  002132  6ED9               	movwf	fsr2l,c
  7187  002134  0E02               	movlw	high _ModbusData
  7188  002136  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7189  002138  6EDA               	movwf	fsr2h,c
  7190  00213A  50DF               	movf	indf2,w,c
  7191  00213C  6F8B               	movwf	??_checkCRC& (0+255),b
  7192  00213E  518B               	movf	??_checkCRC& (0+255),w,b
  7193  002140  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  7194  002142                     
  7195                           ; BSR set to: 0
  7196                           ;Modbus.c: 126:       for(j=8; j!=0; j--){
  7197  002142  0E00               	movlw	0
  7198  002144  6F95               	movwf	(checkCRC@j+1)& (0+255),b
  7199  002146  0E08               	movlw	8
  7200  002148  6F94               	movwf	checkCRC@j& (0+255),b
  7201  00214A                     l724:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;Modbus.c: 127:         if((crc & 0x0001) != 0){
  7205  00214A  A196               	btfss	checkCRC@crc& (0+255),0,b
  7206  00214C  EFAA  F010         	goto	u6681
  7207  002150  EFAC  F010         	goto	u6680
  7208  002154                     u6681:
  7209  002154  EFB5  F010         	goto	l6667
  7210  002158                     u6680:
  7211  002158                     
  7212                           ; BSR set to: 0
  7213                           ;Modbus.c: 128:           crc >>= 1;
  7214  002158  90D8               	bcf	status,0,c
  7215  00215A  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  7216  00215C  3396               	rrcf	checkCRC@crc& (0+255),f,b
  7217  00215E                     
  7218                           ; BSR set to: 0
  7219                           ;Modbus.c: 129:           crc ^= 0xA001;
  7220  00215E  0E01               	movlw	1
  7221  002160  1B96               	xorwf	checkCRC@crc& (0+255),f,b
  7222  002162  0EA0               	movlw	160
  7223  002164  1B97               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  7224                           
  7225                           ;Modbus.c: 130:         }
  7226  002166  EFB8  F010         	goto	l727
  7227  00216A                     l6667:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;Modbus.c: 132:           crc >>= 1;
  7231  00216A  90D8               	bcf	status,0,c
  7232  00216C  3397               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  7233  00216E  3396               	rrcf	checkCRC@crc& (0+255),f,b
  7234  002170                     l727:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;Modbus.c: 134:       }
  7238  002170  0794               	decf	checkCRC@j& (0+255),f,b
  7239  002172  A0D8               	btfss	status,0,c
  7240  002174  0795               	decf	(checkCRC@j+1)& (0+255),f,b
  7241  002176                     
  7242                           ; BSR set to: 0
  7243  002176  5194               	movf	checkCRC@j& (0+255),w,b
  7244  002178  1195               	iorwf	(checkCRC@j+1)& (0+255),w,b
  7245  00217A  A4D8               	btfss	status,2,c
  7246  00217C  EFC2  F010         	goto	u6691
  7247  002180  EFC4  F010         	goto	u6690
  7248  002184                     u6691:
  7249  002184  EFA5  F010         	goto	l724
  7250  002188                     u6690:
  7251  002188                     
  7252                           ; BSR set to: 0
  7253                           ;Modbus.c: 135:     }
  7254  002188  4B98               	infsnz	checkCRC@i& (0+255),f,b
  7255  00218A  2B99               	incf	(checkCRC@i+1)& (0+255),f,b
  7256  00218C                     l6673:
  7257                           
  7258                           ; BSR set to: 0
  7259  00218C  0EFE               	movlw	254
  7260  00218E  6F8B               	movwf	??_checkCRC& (0+255),b
  7261  002190  0EFF               	movlw	255
  7262  002192  6F8C               	movwf	(??_checkCRC+1)& (0+255),b
  7263  002194  C0AD  F08D         	movff	_ModDataCnt,??_checkCRC+2
  7264  002198  C0AE  F08E         	movff	_ModDataCnt+1,??_checkCRC+3
  7265  00219C  518B               	movf	??_checkCRC& (0+255),w,b
  7266  00219E  278D               	addwf	(??_checkCRC+2)& (0+255),f,b
  7267  0021A0  518C               	movf	(??_checkCRC+1)& (0+255),w,b
  7268  0021A2  238E               	addwfc	(??_checkCRC+3)& (0+255),f,b
  7269  0021A4  518D               	movf	(??_checkCRC+2)& (0+255),w,b
  7270  0021A6  5D98               	subwf	checkCRC@i& (0+255),w,b
  7271  0021A8  5199               	movf	(checkCRC@i+1)& (0+255),w,b
  7272  0021AA  0A80               	xorlw	128
  7273  0021AC  6F8F               	movwf	(??_checkCRC+4)& (0+255),b
  7274  0021AE  518E               	movf	(??_checkCRC+3)& (0+255),w,b
  7275  0021B0  0A80               	xorlw	128
  7276  0021B2  598F               	subwfb	(??_checkCRC+4)& (0+255),w,b
  7277  0021B4  A0D8               	btfss	status,0,c
  7278  0021B6  EFDF  F010         	goto	u6701
  7279  0021BA  EFE1  F010         	goto	u6700
  7280  0021BE                     u6701:
  7281  0021BE  EF97  F010         	goto	l6655
  7282  0021C2                     u6700:
  7283  0021C2                     
  7284                           ; BSR set to: 0
  7285                           ;Modbus.c: 137:   crcHigh = (crc & 0x00FF);
  7286  0021C2  5196               	movf	checkCRC@crc& (0+255),w,b
  7287  0021C4  6F90               	movwf	checkCRC@crcHigh& (0+255),b
  7288  0021C6  6B91               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  7289                           
  7290                           ;Modbus.c: 138:   crcLow = (crc & 0xFF00) >>8;
  7291  0021C8  C096  F08B         	movff	checkCRC@crc,??_checkCRC
  7292  0021CC  C097  F08C         	movff	checkCRC@crc+1,??_checkCRC+1
  7293  0021D0  C08C  F08B         	movff	??_checkCRC+1,??_checkCRC
  7294  0021D4  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7295  0021D6  518B               	movf	??_checkCRC& (0+255),w,b
  7296  0021D8  6F92               	movwf	checkCRC@crcLow& (0+255),b
  7297  0021DA  6B93               	clrf	(checkCRC@crcLow+1)& (0+255),b
  7298  0021DC                     
  7299                           ; BSR set to: 0
  7300                           ;Modbus.c: 140:   if(Debug == 1){
  7301  0021DC  05B0               	decf	_Debug& (0+255),w,b
  7302  0021DE  A4D8               	btfss	status,2,c
  7303  0021E0  EFF4  F010         	goto	u6711
  7304  0021E4  EFF6  F010         	goto	u6710
  7305  0021E8                     u6711:
  7306  0021E8  EF04  F011         	goto	l6681
  7307  0021EC                     u6710:
  7308  0021EC                     
  7309                           ; BSR set to: 0
  7310                           ;Modbus.c: 141:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  7311  0021EC  0E56               	movlw	low STR_11
  7312  0021EE  6F7D               	movwf	printf@fmt& (0+255),b
  7313  0021F0  0EFC               	movlw	high STR_11
  7314  0021F2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7315  0021F4  C090  F07F         	movff	checkCRC@crcHigh,?_printf+2
  7316  0021F8  C091  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  7317  0021FC  C092  F081         	movff	checkCRC@crcLow,?_printf+4
  7318  002200  C093  F082         	movff	checkCRC@crcLow+1,?_printf+5
  7319  002204  EC2B  F01E         	call	_printf	;wreg free
  7320  002208                     l6681:
  7321                           
  7322                           ;Modbus.c: 145:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  7323  002208  0E00               	movlw	low _ModbusData
  7324  00220A  0100               	movlb	0	; () banked
  7325  00220C  2598               	addwf	checkCRC@i& (0+255),w,b
  7326  00220E  6ED9               	movwf	fsr2l,c
  7327  002210  0E02               	movlw	high _ModbusData
  7328  002212  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7329  002214  6EDA               	movwf	fsr2h,c
  7330  002216  50DF               	movf	indf2,w,c
  7331  002218  6F8B               	movwf	??_checkCRC& (0+255),b
  7332  00221A  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7333  00221C  5190               	movf	checkCRC@crcHigh& (0+255),w,b
  7334  00221E  198B               	xorwf	??_checkCRC& (0+255),w,b
  7335  002220  E107               	bnz	u6721
  7336  002222  5191               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  7337  002224  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  7338  002226  A4D8               	btfss	status,2,c
  7339  002228  EF18  F011         	goto	u6721
  7340  00222C  EF1A  F011         	goto	u6720
  7341  002230                     u6721:
  7342  002230  EF32  F011         	goto	l6691
  7343  002234                     u6720:
  7344  002234                     
  7345                           ; BSR set to: 0
  7346  002234  0E01               	movlw	low (_ModbusData+1)
  7347  002236  2598               	addwf	checkCRC@i& (0+255),w,b
  7348  002238  6ED9               	movwf	fsr2l,c
  7349  00223A  0E02               	movlw	high (_ModbusData+1)
  7350  00223C  2199               	addwfc	(checkCRC@i+1)& (0+255),w,b
  7351  00223E  6EDA               	movwf	fsr2h,c
  7352  002240  50DF               	movf	indf2,w,c
  7353  002242  6F8B               	movwf	??_checkCRC& (0+255),b
  7354  002244  6B8C               	clrf	(??_checkCRC+1)& (0+255),b
  7355  002246  5192               	movf	checkCRC@crcLow& (0+255),w,b
  7356  002248  198B               	xorwf	??_checkCRC& (0+255),w,b
  7357  00224A  E107               	bnz	u6731
  7358  00224C  5193               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  7359  00224E  198C               	xorwf	(??_checkCRC+1)& (0+255),w,b
  7360  002250  A4D8               	btfss	status,2,c
  7361  002252  EF2D  F011         	goto	u6731
  7362  002256  EF2F  F011         	goto	u6730
  7363  00225A                     u6731:
  7364  00225A  EF32  F011         	goto	l6691
  7365  00225E                     u6730:
  7366  00225E                     
  7367                           ; BSR set to: 0
  7368                           ;Modbus.c: 146:   {;Modbus.c: 147:     return 1;
  7369  00225E  0E01               	movlw	1
  7370  002260  EF33  F011         	goto	l731
  7371  002264                     l6691:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;Modbus.c: 150:     return 0;
  7375  002264  0E00               	movlw	0
  7376  002266                     l731:
  7377                           
  7378                           ; BSR set to: 0
  7379  002266  0012               	return		;funcret
  7380  002268                     __end_of_checkCRC:
  7381                           	opt callstack 0
  7382                           
  7383 ;; *************** function _RXMode *****************
  7384 ;; Defined at:
  7385 ;;		line 53 in file "Modbus.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		None
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    4
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_main
  7410 ;;		_ModbusRx
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text37
  7415  003E30                     __ptext37:
  7416                           	opt callstack 0
  7417  003E30                     _RXMode:
  7418                           	opt callstack 26
  7419  003E30  9086               	bcf	134,0,c	;volatile
  7420  003E32  9683               	bcf	131,3,c	;volatile
  7421  003E34  0012               	return		;funcret
  7422  003E36                     __end_of_RXMode:
  7423                           	opt callstack 0
  7424                           
  7425 ;; *************** function _EUSART1_is_rx_ready *****************
  7426 ;; Defined at:
  7427 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      _Bool 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;Total ram usage:        0 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    4
  7448 ;; This function calls:
  7449 ;;		Nothing
  7450 ;; This function is called by:
  7451 ;;		_ModbusRx
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text38
  7456  003D48                     __ptext38:
  7457                           	opt callstack 0
  7458  003D48                     _EUSART1_is_rx_ready:
  7459                           	opt callstack 25
  7460  003D48                     
  7461                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
  7462  003D48  0100               	movlb	0	; () banked
  7463  003D4A  51B2               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7464  003D4C  A4D8               	btfss	status,2,c
  7465  003D4E  EFAB  F01E         	goto	u4171
  7466  003D52  EFAE  F01E         	goto	u4170
  7467  003D56                     u4171:
  7468  003D56  0E01               	movlw	1
  7469  003D58  EFAF  F01E         	goto	u4180
  7470  003D5C                     u4170:
  7471  003D5C  0E00               	movlw	0
  7472  003D5E                     u4180:
  7473  003D5E                     
  7474                           ; BSR set to: 0
  7475  003D5E  0012               	return		;funcret
  7476  003D60                     __end_of_EUSART1_is_rx_ready:
  7477                           	opt callstack 0
  7478                           
  7479 ;; *************** function _EUSART1_Read *****************
  7480 ;; Defined at:
  7481 ;;		line 153 in file "mcc_generated_files/eusart1.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  readValue       1    4[COMRAM] unsigned char 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      unsigned char 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7499 ;;Total ram usage:        1 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    4
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_ModbusRx
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text39
  7510  003776                     __ptext39:
  7511                           	opt callstack 0
  7512  003776                     _EUSART1_Read:
  7513                           	opt callstack 25
  7514  003776                     l4883:
  7515                           
  7516                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
  7517  003776  0100               	movlb	0	; () banked
  7518  003778  51B2               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7519  00377A  B4D8               	btfsc	status,2,c
  7520  00377C  EFC2  F01B         	goto	u4191
  7521  003780  EFC4  F01B         	goto	u4190
  7522  003784                     u4191:
  7523  003784  EFBB  F01B         	goto	l4883
  7524  003788                     u4190:
  7525  003788                     
  7526                           ; BSR set to: 0
  7527                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7528  003788  0E80               	movlw	low _eusart1RxStatusBuffer
  7529  00378A  25B3               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7530  00378C  6ED9               	movwf	fsr2l,c
  7531  00378E  6ADA               	clrf	fsr2h,c
  7532  003790  0E03               	movlw	high _eusart1RxStatusBuffer
  7533  003792  22DA               	addwfc	fsr2h,f,c
  7534  003794  50DF               	movf	indf2,w,c
  7535  003796  6FB1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7536                           
  7537                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7538  003798  0E64               	movlw	low _eusart1RxBuffer
  7539  00379A  25B3               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7540  00379C  6ED9               	movwf	fsr2l,c
  7541  00379E  6ADA               	clrf	fsr2h,c
  7542  0037A0  0E04               	movlw	high _eusart1RxBuffer
  7543  0037A2  22DA               	addwfc	fsr2h,f,c
  7544  0037A4  50DF               	movf	indf2,w,c
  7545  0037A6  6E05               	movwf	EUSART1_Read@readValue^0,c
  7546  0037A8                     
  7547                           ; BSR set to: 0
  7548  0037A8  2BB3               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  7549  0037AA                     
  7550                           ; BSR set to: 0
  7551                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7552  0037AA  0E63               	movlw	99
  7553  0037AC  65B3               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  7554  0037AE  EFDB  F01B         	goto	u4201
  7555  0037B2  EFDD  F01B         	goto	u4200
  7556  0037B6                     u4201:
  7557  0037B6  EFDF  F01B         	goto	l4893
  7558  0037BA                     u4200:
  7559  0037BA                     
  7560                           ; BSR set to: 0
  7561                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
  7562  0037BA  0E00               	movlw	0
  7563  0037BC  6FB3               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7564  0037BE                     l4893:
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
  7568  0037BE  010E               	movlb	14	; () banked
  7569  0037C0  9BC5               	bcf	197,5,b	;volatile
  7570  0037C2                     
  7571                           ; BSR set to: 14
  7572                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
  7573  0037C2  0100               	movlb	0	; () banked
  7574  0037C4  07B2               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7575  0037C6                     
  7576                           ; BSR set to: 0
  7577                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
  7578  0037C6  010E               	movlb	14	; () banked
  7579  0037C8  8BC5               	bsf	197,5,b	;volatile
  7580  0037CA                     
  7581                           ; BSR set to: 14
  7582                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
  7583  0037CA  5005               	movf	EUSART1_Read@readValue^0,w,c
  7584  0037CC                     
  7585                           ; BSR set to: 14
  7586  0037CC  0012               	return		;funcret
  7587  0037CE                     __end_of_EUSART1_Read:
  7588                           	opt callstack 0
  7589                           
  7590 ;; *************** function _ClearRxBuff *****************
  7591 ;; Defined at:
  7592 ;;		line 69 in file "Modbus.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  i               2    5[COMRAM] int 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7610 ;;Total ram usage:        3 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    4
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_main
  7617 ;;		_ModbusRx
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text40
  7622  003908                     __ptext40:
  7623                           	opt callstack 0
  7624  003908                     _ClearRxBuff:
  7625                           	opt callstack 25
  7626  003908                     
  7627                           ;Modbus.c: 71:     int i = 0;
  7628  003908  0E00               	movlw	0
  7629  00390A  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7630  00390C  0E00               	movlw	0
  7631  00390E  6E06               	movwf	ClearRxBuff@i^0,c
  7632                           
  7633                           ;Modbus.c: 72:     for(i=0; i<ByteNum; i++ ){
  7634  003910  0E00               	movlw	0
  7635  003912  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7636  003914  0E00               	movlw	0
  7637  003916  6E06               	movwf	ClearRxBuff@i^0,c
  7638  003918  EF98  F01C         	goto	l4937
  7639  00391C                     l4933:
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;Modbus.c: 73:         rxData[i] = 0xFF;
  7643  00391C  0E00               	movlw	low _rxData
  7644  00391E  2406               	addwf	ClearRxBuff@i^0,w,c
  7645  003920  6ED9               	movwf	fsr2l,c
  7646  003922  0E04               	movlw	high _rxData
  7647  003924  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  7648  003926  6EDA               	movwf	fsr2h,c
  7649  003928  0EFF               	movlw	255
  7650  00392A  6EDF               	movwf	indf2,c
  7651  00392C                     
  7652                           ; BSR set to: 0
  7653                           ;Modbus.c: 74:     }
  7654  00392C  4A06               	infsnz	ClearRxBuff@i^0,f,c
  7655  00392E  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  7656  003930                     l4937:
  7657  003930  0100               	movlb	0	; () banked
  7658  003932  51AB               	movf	_ByteNum& (0+255),w,b
  7659  003934  5C06               	subwf	ClearRxBuff@i^0,w,c
  7660  003936  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  7661  003938  0A80               	xorlw	128
  7662  00393A  6E05               	movwf	??_ClearRxBuff^0,c
  7663  00393C  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7664  00393E  0A80               	xorlw	128
  7665  003940  5805               	subwfb	??_ClearRxBuff^0,w,c
  7666  003942  A0D8               	btfss	status,0,c
  7667  003944  EFA6  F01C         	goto	u4221
  7668  003948  EFA8  F01C         	goto	u4220
  7669  00394C                     u4221:
  7670  00394C  EF8E  F01C         	goto	l4933
  7671  003950                     u4220:
  7672  003950                     
  7673                           ; BSR set to: 0
  7674  003950  0012               	return		;funcret
  7675  003952                     __end_of_ClearRxBuff:
  7676                           	opt callstack 0
  7677                           
  7678 ;; *************** function _AddRxBuffToModBus *****************
  7679 ;; Defined at:
  7680 ;;		line 78 in file "Modbus.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;		None
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  i               2   43[BANK0 ] int 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;Total ram usage:        3 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:   13
  7701 ;; This function calls:
  7702 ;;		_printf
  7703 ;; This function is called by:
  7704 ;;		_ModbusRx
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text41
  7709  002A70                     __ptext41:
  7710                           	opt callstack 0
  7711  002A70                     _AddRxBuffToModBus:
  7712                           	opt callstack 16
  7713  002A70                     
  7714                           ;Modbus.c: 79:     int i = 0;
  7715  002A70  0E00               	movlw	0
  7716  002A72  0100               	movlb	0	; () banked
  7717  002A74  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7718  002A76  0E00               	movlw	0
  7719  002A78  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7720                           
  7721                           ;Modbus.c: 81:     for(i=0l; i<ByteNum; i++){
  7722  002A7A  0E00               	movlw	0
  7723  002A7C  6F8C               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  7724  002A7E  0E00               	movlw	0
  7725  002A80  6F8B               	movwf	AddRxBuffToModBus@i& (0+255),b
  7726  002A82  EF55  F015         	goto	l6635
  7727  002A86                     l6629:
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;Modbus.c: 82:         ModbusData[ModDataCnt] = rxData[i];
  7731  002A86  0E00               	movlw	low _rxData
  7732  002A88  258B               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  7733  002A8A  6ED9               	movwf	fsr2l,c
  7734  002A8C  0E04               	movlw	high _rxData
  7735  002A8E  218C               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7736  002A90  6EDA               	movwf	fsr2h,c
  7737  002A92  0E00               	movlw	low _ModbusData
  7738  002A94  25AD               	addwf	_ModDataCnt& (0+255),w,b
  7739  002A96  6EE1               	movwf	fsr1l,c
  7740  002A98  0E02               	movlw	high _ModbusData
  7741  002A9A  21AE               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  7742  002A9C  6EE2               	movwf	fsr1h,c
  7743  002A9E  CFDF FFE7          	movff	indf2,indf1
  7744  002AA2                     
  7745                           ; BSR set to: 0
  7746                           ;Modbus.c: 83:         ModDataCnt++;
  7747  002AA2  4BAD               	infsnz	_ModDataCnt& (0+255),f,b
  7748  002AA4  2BAE               	incf	(_ModDataCnt+1)& (0+255),f,b
  7749  002AA6                     
  7750                           ; BSR set to: 0
  7751                           ;Modbus.c: 84:     }
  7752  002AA6  4B8B               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  7753  002AA8  2B8C               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  7754  002AAA                     l6635:
  7755                           
  7756                           ; BSR set to: 0
  7757  002AAA  51AB               	movf	_ByteNum& (0+255),w,b
  7758  002AAC  5D8B               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  7759  002AAE  518C               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  7760  002AB0  0A80               	xorlw	128
  7761  002AB2  6E55               	movwf	??_AddRxBuffToModBus^0,c
  7762  002AB4  51AC               	movf	(_ByteNum+1)& (0+255),w,b
  7763  002AB6  0A80               	xorlw	128
  7764  002AB8  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  7765  002ABA  A0D8               	btfss	status,0,c
  7766  002ABC  EF62  F015         	goto	u6641
  7767  002AC0  EF64  F015         	goto	u6640
  7768  002AC4                     u6641:
  7769  002AC4  EF43  F015         	goto	l6629
  7770  002AC8                     u6640:
  7771  002AC8                     
  7772                           ; BSR set to: 0
  7773                           ;Modbus.c: 86:     if(Debug ==1){
  7774  002AC8  05B0               	decf	_Debug& (0+255),w,b
  7775  002ACA  A4D8               	btfss	status,2,c
  7776  002ACC  EF6A  F015         	goto	u6651
  7777  002AD0  EF6C  F015         	goto	u6650
  7778  002AD4                     u6651:
  7779  002AD4  EF7D  F015         	goto	l6641
  7780  002AD8                     u6650:
  7781  002AD8                     
  7782                           ; BSR set to: 0
  7783                           ;Modbus.c: 87:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
  7784  002AD8  0E9E               	movlw	low STR_6
  7785  002ADA  6F7D               	movwf	printf@fmt& (0+255),b
  7786  002ADC  0EFB               	movlw	high STR_6
  7787  002ADE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7788  002AE0  EC2B  F01E         	call	_printf	;wreg free
  7789                           
  7790                           ;Modbus.c: 88:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  7791  002AE4  0E95               	movlw	low STR_7
  7792  002AE6  0100               	movlb	0	; () banked
  7793  002AE8  6F7D               	movwf	printf@fmt& (0+255),b
  7794  002AEA  0EFD               	movlw	high STR_7
  7795  002AEC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7796  002AEE  C0AD  F07F         	movff	_ModDataCnt,?_printf+2
  7797  002AF2  C0AE  F080         	movff	_ModDataCnt+1,?_printf+3
  7798  002AF6  EC2B  F01E         	call	_printf	;wreg free
  7799  002AFA                     l6641:
  7800                           
  7801                           ;Modbus.c: 91:     if(ModbusData[1] == 0x0F){
  7802  002AFA  0E0F               	movlw	15
  7803  002AFC  0102               	movlb	2	; () banked
  7804  002AFE  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7805  002B00  A4D8               	btfss	status,2,c
  7806  002B02  EF85  F015         	goto	u6661
  7807  002B06  EF87  F015         	goto	u6660
  7808  002B0A                     u6661:
  7809  002B0A  EF90  F015         	goto	l6645
  7810  002B0E                     u6660:
  7811  002B0E                     l6643:
  7812                           
  7813                           ; BSR set to: 2
  7814                           ;Modbus.c: 92:         ExpectedBytes = ModbusData[6] + 9;
  7815  002B0E  0E09               	movlw	9
  7816  002B10  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  7817  002B12  0101               	movlb	1	; () banked
  7818  002B14  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7819  002B16  6B3E               	clrf	(_ExpectedBytes+1)& (0+255),b
  7820  002B18  0E00               	movlw	0
  7821  002B1A  233E               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  7822                           
  7823                           ;Modbus.c: 93:     }else if (ModbusData[1] == 0x10){
  7824  002B1C  EFA0  F015         	goto	l712
  7825  002B20                     l6645:
  7826                           
  7827                           ; BSR set to: 2
  7828  002B20  0E10               	movlw	16
  7829  002B22  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7830  002B24  A4D8               	btfss	status,2,c
  7831  002B26  EF97  F015         	goto	u6671
  7832  002B2A  EF99  F015         	goto	u6670
  7833  002B2E                     u6671:
  7834  002B2E  EF9B  F015         	goto	l6649
  7835  002B32                     u6670:
  7836  002B32  EF87  F015         	goto	l6643
  7837  002B36                     l6649:
  7838                           
  7839                           ; BSR set to: 2
  7840                           ;Modbus.c: 96:         ExpectedBytes = 8;
  7841  002B36  0E00               	movlw	0
  7842  002B38  0101               	movlb	1	; () banked
  7843  002B3A  6F3E               	movwf	(_ExpectedBytes+1)& (0+255),b
  7844  002B3C  0E08               	movlw	8
  7845  002B3E  6F3D               	movwf	_ExpectedBytes& (0+255),b
  7846  002B40                     l712:
  7847                           
  7848                           ; BSR set to: 1
  7849  002B40  0012               	return		;funcret
  7850  002B42                     __end_of_AddRxBuffToModBus:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _ModbusFC10 *****************
  7854 ;; Defined at:
  7855 ;;		line 286 in file "Modbus.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  j               2   53[BANK0 ] int 
  7860 ;;  i               2   51[BANK0 ] int 
  7861 ;;  TempData        2   49[BANK0 ] unsigned int 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;Total ram usage:       10 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:   14
  7878 ;; This function calls:
  7879 ;;		_PrintMB400
  7880 ;;		_PrintModRespon
  7881 ;;		_UART1_Write_string
  7882 ;;		_generateCRC
  7883 ;; This function is called by:
  7884 ;;		_main
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text42
  7889  001352                     __ptext42:
  7890                           	opt callstack 0
  7891  001352                     _ModbusFC10:
  7892                           	opt callstack 16
  7893  001352                     
  7894                           ;Modbus.c: 291:     int j = 0;
  7895  001352  0E00               	movlw	0
  7896  001354  0100               	movlb	0	; () banked
  7897  001356  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  7898  001358  0E00               	movlw	0
  7899  00135A  6F95               	movwf	ModbusFC10@j& (0+255),b
  7900                           
  7901                           ;Modbus.c: 292:     unsigned int TempData = 0x0000;
  7902  00135C  0E00               	movlw	0
  7903  00135E  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  7904  001360  0E00               	movlw	0
  7905  001362  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  7906                           
  7907                           ;Modbus.c: 294:     MBResCnt = 0;
  7908  001364  0E00               	movlw	0
  7909  001366  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  7910  001368  0E00               	movlw	0
  7911  00136A  6FA9               	movwf	_MBResCnt& (0+255),b
  7912  00136C                     
  7913                           ; BSR set to: 0
  7914                           ;Modbus.c: 295:     MBRespon[MBResCnt] = ModbusData[0];
  7915  00136C  0102               	movlb	2	; () banked
  7916  00136E  5100               	movf	_ModbusData& (0+255),w,b
  7917  001370  0100               	movlb	0	; () banked
  7918  001372  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7919  001374  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7920  001376  90D8               	bcf	status,0,c
  7921  001378  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7922  00137A  6ED9               	movwf	fsr2l,c
  7923  00137C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7924  00137E  6EDA               	movwf	fsr2h,c
  7925  001380  0E41               	movlw	low _MBRespon
  7926  001382  26D9               	addwf	fsr2l,f,c
  7927  001384  0E01               	movlw	high _MBRespon
  7928  001386  22DA               	addwfc	fsr2h,f,c
  7929  001388  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7930  00138C  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7931  001390                     
  7932                           ; BSR set to: 0
  7933                           ;Modbus.c: 296:     MBResCnt++;
  7934  001390  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7935  001392  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7936  001394                     
  7937                           ; BSR set to: 0
  7938                           ;Modbus.c: 297:     MBRespon[MBResCnt] = ModbusData[1];
  7939  001394  0102               	movlb	2	; () banked
  7940  001396  5101               	movf	(_ModbusData+1)& (0+255),w,b
  7941  001398  0100               	movlb	0	; () banked
  7942  00139A  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7943  00139C  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7944  00139E  90D8               	bcf	status,0,c
  7945  0013A0  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7946  0013A2  6ED9               	movwf	fsr2l,c
  7947  0013A4  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7948  0013A6  6EDA               	movwf	fsr2h,c
  7949  0013A8  0E41               	movlw	low _MBRespon
  7950  0013AA  26D9               	addwf	fsr2l,f,c
  7951  0013AC  0E01               	movlw	high _MBRespon
  7952  0013AE  22DA               	addwfc	fsr2h,f,c
  7953  0013B0  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7954  0013B4  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7955  0013B8                     
  7956                           ; BSR set to: 0
  7957                           ;Modbus.c: 298:     MBResCnt++;
  7958  0013B8  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7959  0013BA  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7960  0013BC                     
  7961                           ; BSR set to: 0
  7962                           ;Modbus.c: 299:     MBRespon[MBResCnt] = ModbusData[2];
  7963  0013BC  0102               	movlb	2	; () banked
  7964  0013BE  5102               	movf	(_ModbusData+2)& (0+255),w,b
  7965  0013C0  0100               	movlb	0	; () banked
  7966  0013C2  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7967  0013C4  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7968  0013C6  90D8               	bcf	status,0,c
  7969  0013C8  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7970  0013CA  6ED9               	movwf	fsr2l,c
  7971  0013CC  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7972  0013CE  6EDA               	movwf	fsr2h,c
  7973  0013D0  0E41               	movlw	low _MBRespon
  7974  0013D2  26D9               	addwf	fsr2l,f,c
  7975  0013D4  0E01               	movlw	high _MBRespon
  7976  0013D6  22DA               	addwfc	fsr2h,f,c
  7977  0013D8  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  7978  0013DC  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  7979  0013E0                     
  7980                           ; BSR set to: 0
  7981                           ;Modbus.c: 300:     MBResCnt++;
  7982  0013E0  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  7983  0013E2  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  7984  0013E4                     
  7985                           ; BSR set to: 0
  7986                           ;Modbus.c: 301:     MBRespon[MBResCnt] = ModbusData[3];
  7987  0013E4  0102               	movlb	2	; () banked
  7988  0013E6  5103               	movf	(_ModbusData+3)& (0+255),w,b
  7989  0013E8  0100               	movlb	0	; () banked
  7990  0013EA  6F8D               	movwf	??_ModbusFC10& (0+255),b
  7991  0013EC  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  7992  0013EE  90D8               	bcf	status,0,c
  7993  0013F0  35A9               	rlcf	_MBResCnt& (0+255),w,b
  7994  0013F2  6ED9               	movwf	fsr2l,c
  7995  0013F4  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  7996  0013F6  6EDA               	movwf	fsr2h,c
  7997  0013F8  0E41               	movlw	low _MBRespon
  7998  0013FA  26D9               	addwf	fsr2l,f,c
  7999  0013FC  0E01               	movlw	high _MBRespon
  8000  0013FE  22DA               	addwfc	fsr2h,f,c
  8001  001400  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  8002  001404  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  8003  001408                     
  8004                           ; BSR set to: 0
  8005                           ;Modbus.c: 302:     MBResCnt++;
  8006  001408  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8007  00140A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8008  00140C                     
  8009                           ; BSR set to: 0
  8010                           ;Modbus.c: 303:     MBRespon[MBResCnt] = ModbusData[4];
  8011  00140C  0102               	movlb	2	; () banked
  8012  00140E  5104               	movf	(_ModbusData+4)& (0+255),w,b
  8013  001410  0100               	movlb	0	; () banked
  8014  001412  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8015  001414  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  8016  001416  90D8               	bcf	status,0,c
  8017  001418  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8018  00141A  6ED9               	movwf	fsr2l,c
  8019  00141C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8020  00141E  6EDA               	movwf	fsr2h,c
  8021  001420  0E41               	movlw	low _MBRespon
  8022  001422  26D9               	addwf	fsr2l,f,c
  8023  001424  0E01               	movlw	high _MBRespon
  8024  001426  22DA               	addwfc	fsr2h,f,c
  8025  001428  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  8026  00142C  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  8027  001430                     
  8028                           ; BSR set to: 0
  8029                           ;Modbus.c: 304:     MBResCnt++;
  8030  001430  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8031  001432  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8032  001434                     
  8033                           ; BSR set to: 0
  8034                           ;Modbus.c: 305:     MBRespon[MBResCnt] = ModbusData[5];
  8035  001434  0102               	movlb	2	; () banked
  8036  001436  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8037  001438  0100               	movlb	0	; () banked
  8038  00143A  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8039  00143C  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  8040  00143E  90D8               	bcf	status,0,c
  8041  001440  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8042  001442  6ED9               	movwf	fsr2l,c
  8043  001444  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8044  001446  6EDA               	movwf	fsr2h,c
  8045  001448  0E41               	movlw	low _MBRespon
  8046  00144A  26D9               	addwf	fsr2l,f,c
  8047  00144C  0E01               	movlw	high _MBRespon
  8048  00144E  22DA               	addwfc	fsr2h,f,c
  8049  001450  C08D  FFDE         	movff	??_ModbusFC10,postinc2
  8050  001454  C08E  FFDD         	movff	??_ModbusFC10+1,postdec2
  8051  001458                     
  8052                           ; BSR set to: 0
  8053                           ;Modbus.c: 306:     MBResCnt++;
  8054  001458  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8055  00145A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8056                           
  8057                           ;Modbus.c: 308:     for(i=0; i< (ModbusData[5]) ; i++ ){
  8058  00145C  0E00               	movlw	0
  8059  00145E  6F94               	movwf	(ModbusFC10@i+1)& (0+255),b
  8060  001460  0E00               	movlw	0
  8061  001462  6F93               	movwf	ModbusFC10@i& (0+255),b
  8062  001464  EF6A  F00A         	goto	l6993
  8063  001468                     l6985:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;Modbus.c: 315:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  8067  001468  0E08               	movlw	low (_ModbusData+8)
  8068  00146A  2595               	addwf	ModbusFC10@j& (0+255),w,b
  8069  00146C  6ED9               	movwf	fsr2l,c
  8070  00146E  0E02               	movlw	high (_ModbusData+8)
  8071  001470  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8072  001472  6EDA               	movwf	fsr2h,c
  8073  001474  50DF               	movf	indf2,w,c
  8074  001476  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8075  001478  0E07               	movlw	low (_ModbusData+7)
  8076  00147A  2595               	addwf	ModbusFC10@j& (0+255),w,b
  8077  00147C  6ED9               	movwf	fsr2l,c
  8078  00147E  0E02               	movlw	high (_ModbusData+7)
  8079  001480  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8080  001482  6EDA               	movwf	fsr2h,c
  8081  001484  50DF               	movf	indf2,w,c
  8082  001486  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  8083  001488  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  8084  00148A  6F90               	movwf	(??_ModbusFC10+3)& (0+255),b
  8085  00148C  6B8F               	clrf	(??_ModbusFC10+2)& (0+255),b
  8086  00148E  518D               	movf	??_ModbusFC10& (0+255),w,b
  8087  001490  258F               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  8088  001492  6F91               	movwf	ModbusFC10@TempData& (0+255),b
  8089  001494  0E00               	movlw	0
  8090  001496  2190               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  8091  001498  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  8092  00149A                     
  8093                           ; BSR set to: 0
  8094                           ;Modbus.c: 316:         j = j+2;
  8095  00149A  0E02               	movlw	2
  8096  00149C  2595               	addwf	ModbusFC10@j& (0+255),w,b
  8097  00149E  6F95               	movwf	ModbusFC10@j& (0+255),b
  8098  0014A0  0E00               	movlw	0
  8099  0014A2  2196               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  8100  0014A4  6F96               	movwf	(ModbusFC10@j+1)& (0+255),b
  8101  0014A6                     
  8102                           ; BSR set to: 0
  8103                           ;Modbus.c: 317:         MB400xx[ModbusData[3] +i] = TempData;
  8104  0014A6  0102               	movlb	2	; () banked
  8105  0014A8  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8106  0014AA  0100               	movlb	0	; () banked
  8107  0014AC  2593               	addwf	ModbusFC10@i& (0+255),w,b
  8108  0014AE  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8109  0014B0  0E00               	movlw	0
  8110  0014B2  2194               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  8111  0014B4  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
  8112  0014B6  90D8               	bcf	status,0,c
  8113  0014B8  378D               	rlcf	??_ModbusFC10& (0+255),f,b
  8114  0014BA  378E               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  8115  0014BC  0E00               	movlw	low _MB400xx
  8116  0014BE  258D               	addwf	??_ModbusFC10& (0+255),w,b
  8117  0014C0  6ED9               	movwf	fsr2l,c
  8118  0014C2  0E03               	movlw	high _MB400xx
  8119  0014C4  218E               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  8120  0014C6  6EDA               	movwf	fsr2h,c
  8121  0014C8  C091  FFDE         	movff	ModbusFC10@TempData,postinc2
  8122  0014CC  C092  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  8123  0014D0                     
  8124                           ; BSR set to: 0
  8125                           ;Modbus.c: 318:     }
  8126  0014D0  4B93               	infsnz	ModbusFC10@i& (0+255),f,b
  8127  0014D2  2B94               	incf	(ModbusFC10@i+1)& (0+255),f,b
  8128  0014D4                     l6993:
  8129                           
  8130                           ; BSR set to: 0
  8131  0014D4  0102               	movlb	2	; () banked
  8132  0014D6  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8133  0014D8  0100               	movlb	0	; () banked
  8134  0014DA  6F8D               	movwf	??_ModbusFC10& (0+255),b
  8135  0014DC  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
  8136  0014DE  518D               	movf	??_ModbusFC10& (0+255),w,b
  8137  0014E0  5D93               	subwf	ModbusFC10@i& (0+255),w,b
  8138  0014E2  5194               	movf	(ModbusFC10@i+1)& (0+255),w,b
  8139  0014E4  0A80               	xorlw	128
  8140  0014E6  6F8F               	movwf	(??_ModbusFC10+2)& (0+255),b
  8141  0014E8  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
  8142  0014EA  0A80               	xorlw	128
  8143  0014EC  598F               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  8144  0014EE  A0D8               	btfss	status,0,c
  8145  0014F0  EF7C  F00A         	goto	u7081
  8146  0014F4  EF7E  F00A         	goto	u7080
  8147  0014F8                     u7081:
  8148  0014F8  EF34  F00A         	goto	l6985
  8149  0014FC                     u7080:
  8150  0014FC                     
  8151                           ; BSR set to: 0
  8152                           ;Modbus.c: 320:     ByteHi = generateCRC(MBResCnt, 1);
  8153  0014FC  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8154  001500  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8155  001504  0E01               	movlw	1
  8156  001506  6E07               	movwf	generateCRC@HiOrLo^0,c
  8157  001508  EC59  F014         	call	_generateCRC	;wreg free
  8158  00150C  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8159  001510  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8160                           
  8161                           ;Modbus.c: 321:     ByteLo = generateCRC(MBResCnt, 0);
  8162  001514  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8163  001518  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8164  00151C  0E00               	movlw	0
  8165  00151E  6E07               	movwf	generateCRC@HiOrLo^0,c
  8166  001520  EC59  F014         	call	_generateCRC	;wreg free
  8167  001524  C005  F0BD         	movff	?_generateCRC,_ByteLo
  8168  001528  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  8169  00152C                     
  8170                           ;Modbus.c: 323:     MBRespon[MBResCnt] = ByteHi;
  8171  00152C  90D8               	bcf	status,0,c
  8172  00152E  0100               	movlb	0	; () banked
  8173  001530  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8174  001532  6ED9               	movwf	fsr2l,c
  8175  001534  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8176  001536  6EDA               	movwf	fsr2h,c
  8177  001538  0E41               	movlw	low _MBRespon
  8178  00153A  26D9               	addwf	fsr2l,f,c
  8179  00153C  0E01               	movlw	high _MBRespon
  8180  00153E  22DA               	addwfc	fsr2h,f,c
  8181  001540  C0A7  FFDE         	movff	_ByteHi,postinc2
  8182  001544  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8183  001548                     
  8184                           ; BSR set to: 0
  8185                           ;Modbus.c: 324:     MBRespon[MBResCnt +1] = ByteLo;
  8186  001548  90D8               	bcf	status,0,c
  8187  00154A  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8188  00154C  6ED9               	movwf	fsr2l,c
  8189  00154E  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8190  001550  6EDA               	movwf	fsr2h,c
  8191  001552  0E43               	movlw	low (_MBRespon+2)
  8192  001554  26D9               	addwf	fsr2l,f,c
  8193  001556  0E01               	movlw	high (_MBRespon+2)
  8194  001558  22DA               	addwfc	fsr2h,f,c
  8195  00155A  C0BD  FFDE         	movff	_ByteLo,postinc2
  8196  00155E  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8197  001562                     
  8198                           ; BSR set to: 0
  8199                           ;Modbus.c: 325:     MBResCnt = MBResCnt +2;
  8200  001562  0E02               	movlw	2
  8201  001564  25A9               	addwf	_MBResCnt& (0+255),w,b
  8202  001566  6FA9               	movwf	_MBResCnt& (0+255),b
  8203  001568  0E00               	movlw	0
  8204  00156A  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8205  00156C  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8206  00156E                     
  8207                           ; BSR set to: 0
  8208                           ;Modbus.c: 327:     if(Debug==1){
  8209  00156E  05B0               	decf	_Debug& (0+255),w,b
  8210  001570  A4D8               	btfss	status,2,c
  8211  001572  EFBD  F00A         	goto	u7091
  8212  001576  EFBF  F00A         	goto	u7090
  8213  00157A                     u7091:
  8214  00157A  EFC3  F00A         	goto	l7007
  8215  00157E                     u7090:
  8216  00157E                     
  8217                           ; BSR set to: 0
  8218                           ;Modbus.c: 328:         PrintMB400();
  8219  00157E  EC6D  F01A         	call	_PrintMB400	;wreg free
  8220                           
  8221                           ;Modbus.c: 329:         PrintModRespon();
  8222  001582  ECE3  F013         	call	_PrintModRespon	;wreg free
  8223  001586                     l7007:
  8224                           
  8225                           ;Modbus.c: 332:     UART1_Write_string(MBRespon,MBResCnt);
  8226  001586  0E41               	movlw	low _MBRespon
  8227  001588  6E06               	movwf	UART1_Write_string@data^0,c
  8228  00158A  0E01               	movlw	high _MBRespon
  8229  00158C  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  8230  00158E  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  8231  001592  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  8232  001596  EC33  F01A         	call	_UART1_Write_string	;wreg free
  8233  00159A  0012               	return		;funcret
  8234  00159C                     __end_of_ModbusFC10:
  8235                           	opt callstack 0
  8236                           
  8237 ;; *************** function _PrintMB400 *****************
  8238 ;; Defined at:
  8239 ;;		line 34 in file "Modbus.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  i               2   84[COMRAM] int 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8257 ;;Total ram usage:        2 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:   13
  8260 ;; This function calls:
  8261 ;;		_printf
  8262 ;; This function is called by:
  8263 ;;		_main
  8264 ;;		_ModbusFC10
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text43
  8269  0034DA                     __ptext43:
  8270                           	opt callstack 0
  8271  0034DA                     _PrintMB400:
  8272                           	opt callstack 17
  8273  0034DA                     
  8274                           ;Modbus.c: 36:     printf("UpdatedMB400 \r\n");
  8275  0034DA  0E54               	movlw	low STR_4
  8276  0034DC  0100               	movlb	0	; () banked
  8277  0034DE  6F7D               	movwf	printf@fmt& (0+255),b
  8278  0034E0  0EFF               	movlw	high STR_4
  8279  0034E2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8280  0034E4  EC2B  F01E         	call	_printf	;wreg free
  8281  0034E8                     
  8282                           ;Modbus.c: 39:     for(i=0; i<32; i++ ){
  8283  0034E8  0E00               	movlw	0
  8284  0034EA  6E56               	movwf	(PrintMB400@i+1)^0,c
  8285  0034EC  0E00               	movlw	0
  8286  0034EE  6E55               	movwf	PrintMB400@i^0,c
  8287  0034F0                     l6621:
  8288                           
  8289                           ;Modbus.c: 40:         printf("Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  8290  0034F0  0E7E               	movlw	low STR_5
  8291  0034F2  0100               	movlb	0	; () banked
  8292  0034F4  6F7D               	movwf	printf@fmt& (0+255),b
  8293  0034F6  0EFE               	movlw	high STR_5
  8294  0034F8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8295  0034FA  C055  F07F         	movff	PrintMB400@i,?_printf+2
  8296  0034FE  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  8297  003502  90D8               	bcf	status,0,c
  8298  003504  3455               	rlcf	PrintMB400@i^0,w,c
  8299  003506  6ED9               	movwf	fsr2l,c
  8300  003508  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  8301  00350A  6EDA               	movwf	fsr2h,c
  8302  00350C  0E00               	movlw	low _MB400xx
  8303  00350E  26D9               	addwf	fsr2l,f,c
  8304  003510  0E03               	movlw	high _MB400xx
  8305  003512  22DA               	addwfc	fsr2h,f,c
  8306  003514  CFDE F081          	movff	postinc2,?_printf+4
  8307  003518  CFDD F082          	movff	postdec2,?_printf+5
  8308  00351C  EC2B  F01E         	call	_printf	;wreg free
  8309  003520                     
  8310                           ;Modbus.c: 41:     }
  8311  003520  4A55               	infsnz	PrintMB400@i^0,f,c
  8312  003522  2A56               	incf	(PrintMB400@i+1)^0,f,c
  8313  003524  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  8314  003526  EF9E  F01A         	goto	u6631
  8315  00352A  5056               	movf	(PrintMB400@i+1)^0,w,c
  8316  00352C  E109               	bnz	u6630
  8317  00352E  0E20               	movlw	32
  8318  003530  5C55               	subwf	PrintMB400@i^0,w,c
  8319  003532  A0D8               	btfss	status,0,c
  8320  003534  EF9E  F01A         	goto	u6631
  8321  003538  EFA0  F01A         	goto	u6630
  8322  00353C                     u6631:
  8323  00353C  EF78  F01A         	goto	l6621
  8324  003540                     u6630:
  8325  003540  0012               	return		;funcret
  8326  003542                     __end_of_PrintMB400:
  8327                           	opt callstack 0
  8328                           
  8329 ;; *************** function _ModbusFC03 *****************
  8330 ;; Defined at:
  8331 ;;		line 155 in file "Modbus.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  i               2   49[BANK0 ] int 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;Total ram usage:        6 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:   14
  8352 ;; This function calls:
  8353 ;;		_PrintModRespon
  8354 ;;		_UART1_Write_string
  8355 ;;		_generateCRC
  8356 ;;		_printf
  8357 ;; This function is called by:
  8358 ;;		_main
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text44
  8363  0006B4                     __ptext44:
  8364                           	opt callstack 0
  8365  0006B4                     _ModbusFC03:
  8366                           	opt callstack 16
  8367  0006B4                     
  8368                           ;Modbus.c: 160:     MBResCnt = 0;
  8369  0006B4  0E00               	movlw	0
  8370  0006B6  0100               	movlb	0	; () banked
  8371  0006B8  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8372  0006BA  0E00               	movlw	0
  8373  0006BC  6FA9               	movwf	_MBResCnt& (0+255),b
  8374  0006BE                     
  8375                           ; BSR set to: 0
  8376                           ;Modbus.c: 161:     MBRespon[MBResCnt] = ModbusData[0];
  8377  0006BE  0102               	movlb	2	; () banked
  8378  0006C0  5100               	movf	_ModbusData& (0+255),w,b
  8379  0006C2  0100               	movlb	0	; () banked
  8380  0006C4  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8381  0006C6  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8382  0006C8  90D8               	bcf	status,0,c
  8383  0006CA  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8384  0006CC  6ED9               	movwf	fsr2l,c
  8385  0006CE  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8386  0006D0  6EDA               	movwf	fsr2h,c
  8387  0006D2  0E41               	movlw	low _MBRespon
  8388  0006D4  26D9               	addwf	fsr2l,f,c
  8389  0006D6  0E01               	movlw	high _MBRespon
  8390  0006D8  22DA               	addwfc	fsr2h,f,c
  8391  0006DA  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  8392  0006DE  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  8393  0006E2                     
  8394                           ; BSR set to: 0
  8395                           ;Modbus.c: 162:     MBResCnt++;
  8396  0006E2  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8397  0006E4  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8398  0006E6                     
  8399                           ; BSR set to: 0
  8400                           ;Modbus.c: 163:     MBRespon[MBResCnt] = ModbusData[1];
  8401  0006E6  0102               	movlb	2	; () banked
  8402  0006E8  5101               	movf	(_ModbusData+1)& (0+255),w,b
  8403  0006EA  0100               	movlb	0	; () banked
  8404  0006EC  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8405  0006EE  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8406  0006F0  90D8               	bcf	status,0,c
  8407  0006F2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8408  0006F4  6ED9               	movwf	fsr2l,c
  8409  0006F6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8410  0006F8  6EDA               	movwf	fsr2h,c
  8411  0006FA  0E41               	movlw	low _MBRespon
  8412  0006FC  26D9               	addwf	fsr2l,f,c
  8413  0006FE  0E01               	movlw	high _MBRespon
  8414  000700  22DA               	addwfc	fsr2h,f,c
  8415  000702  C08D  FFDE         	movff	??_ModbusFC03,postinc2
  8416  000706  C08E  FFDD         	movff	??_ModbusFC03+1,postdec2
  8417  00070A                     
  8418                           ; BSR set to: 0
  8419                           ;Modbus.c: 164:     MBResCnt++;
  8420  00070A  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8421  00070C  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8422  00070E                     
  8423                           ; BSR set to: 0
  8424                           ;Modbus.c: 165:     MBRespon[MBResCnt] = ModbusData[5] *2;
  8425  00070E  0102               	movlb	2	; () banked
  8426  000710  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8427  000712  0D02               	mullw	2
  8428  000714  90D8               	bcf	status,0,c
  8429  000716  0100               	movlb	0	; () banked
  8430  000718  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8431  00071A  6ED9               	movwf	fsr2l,c
  8432  00071C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8433  00071E  6EDA               	movwf	fsr2h,c
  8434  000720  0E41               	movlw	low _MBRespon
  8435  000722  26D9               	addwf	fsr2l,f,c
  8436  000724  0E01               	movlw	high _MBRespon
  8437  000726  22DA               	addwfc	fsr2h,f,c
  8438  000728  CFF3 FFDE          	movff	prodl,postinc2
  8439  00072C  CFF4 FFDD          	movff	prodh,postdec2
  8440  000730                     
  8441                           ; BSR set to: 0
  8442                           ;Modbus.c: 166:     MBResCnt++;
  8443  000730  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8444  000732  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8445                           
  8446                           ;Modbus.c: 170:     switch(ModbusData[2]){
  8447  000734  EFDC  F003         	goto	l6915
  8448  000738                     l6897:
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;Modbus.c: 173:         {;Modbus.c: 174:             printf("Circuit Get\r\n");
  8452  000738  0EA1               	movlw	low STR_12
  8453  00073A  6F7D               	movwf	printf@fmt& (0+255),b
  8454  00073C  0EFF               	movlw	high STR_12
  8455  00073E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8456  000740  EC2B  F01E         	call	_printf	;wreg free
  8457                           
  8458                           ;Modbus.c: 175:             break;
  8459  000744  EF0B  F004         	goto	l6917
  8460  000748                     l6899:
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;Modbus.c: 178:         {;Modbus.c: 179:             printf("Part No.\r\n");
  8464  000748  0EC8               	movlw	low STR_13
  8465  00074A  6F7D               	movwf	printf@fmt& (0+255),b
  8466  00074C  0EFF               	movlw	high STR_13
  8467  00074E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8468  000750  EC2B  F01E         	call	_printf	;wreg free
  8469                           
  8470                           ;Modbus.c: 180:             break;
  8471  000754  EF0B  F004         	goto	l6917
  8472  000758                     l6901:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;Modbus.c: 183:         {;Modbus.c: 184:             printf("Revision\r\n");
  8476  000758  0ED3               	movlw	low STR_14
  8477  00075A  6F7D               	movwf	printf@fmt& (0+255),b
  8478  00075C  0EFF               	movlw	high STR_14
  8479  00075E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8480  000760  EC2B  F01E         	call	_printf	;wreg free
  8481                           
  8482                           ;Modbus.c: 185:             break;
  8483  000764  EF0B  F004         	goto	l6917
  8484  000768                     l6903:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;Modbus.c: 188:         {;Modbus.c: 189:             printf("Serial No.\r\n");
  8488  000768  0EAF               	movlw	low STR_15
  8489  00076A  6F7D               	movwf	printf@fmt& (0+255),b
  8490  00076C  0EFF               	movlw	high STR_15
  8491  00076E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8492  000770  EC2B  F01E         	call	_printf	;wreg free
  8493                           
  8494                           ;Modbus.c: 190:             break;
  8495  000774  EF0B  F004         	goto	l6917
  8496  000778                     l6905:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;Modbus.c: 193:         {;Modbus.c: 194:             printf("Compile Date\r\n");
  8500  000778  0E83               	movlw	low STR_16
  8501  00077A  6F7D               	movwf	printf@fmt& (0+255),b
  8502  00077C  0EFF               	movlw	high STR_16
  8503  00077E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8504  000780  EC2B  F01E         	call	_printf	;wreg free
  8505                           
  8506                           ;Modbus.c: 195:             break;
  8507  000784  EF0B  F004         	goto	l6917
  8508  000788                     l6907:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;Modbus.c: 198:         {;Modbus.c: 199:             printf("Compile Time\r\n");
  8512  000788  0E74               	movlw	low STR_17
  8513  00078A  6F7D               	movwf	printf@fmt& (0+255),b
  8514  00078C  0EFF               	movlw	high STR_17
  8515  00078E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8516  000790  EC2B  F01E         	call	_printf	;wreg free
  8517                           
  8518                           ;Modbus.c: 200:             break;
  8519  000794  EF0B  F004         	goto	l6917
  8520  000798                     l6909:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;Modbus.c: 203:         {;Modbus.c: 204:             printf("Compiler Ver\r\n");
  8524  000798  0E92               	movlw	low STR_18
  8525  00079A  6F7D               	movwf	printf@fmt& (0+255),b
  8526  00079C  0EFF               	movlw	high STR_18
  8527  00079E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8528  0007A0  EC2B  F01E         	call	_printf	;wreg free
  8529                           
  8530                           ;Modbus.c: 205:             break;
  8531  0007A4  EF0B  F004         	goto	l6917
  8532  0007A8                     l6911:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;Modbus.c: 208:         {;Modbus.c: 209:             printf("Analogue Inputs\r\n");
  8536  0007A8  0E10               	movlw	low STR_19
  8537  0007AA  6F7D               	movwf	printf@fmt& (0+255),b
  8538  0007AC  0EFF               	movlw	high STR_19
  8539  0007AE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8540  0007B0  EC2B  F01E         	call	_printf	;wreg free
  8541                           
  8542                           ;Modbus.c: 210:             break;
  8543  0007B4  EF0B  F004         	goto	l6917
  8544  0007B8                     l6915:
  8545                           
  8546                           ; BSR set to: 0
  8547  0007B8  0102               	movlb	2	; () banked
  8548  0007BA  5102               	movf	(_ModbusData+2)& (0+255),w,b
  8549  0007BC  0100               	movlb	0	; () banked
  8550  0007BE  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8551  0007C0  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8552                           
  8553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8554                           ; Switch size 1, requested type "simple"
  8555                           ; Number of cases is 1, Range of values is 0 to 0
  8556                           ; switch strategies available:
  8557                           ; Name         Instructions Cycles
  8558                           ; simple_byte            4     3 (average)
  8559                           ;	Chosen strategy is simple_byte
  8560  0007C2  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
  8561  0007C4  0A00               	xorlw	0	; case 0
  8562  0007C6  B4D8               	btfsc	status,2,c
  8563  0007C8  EFE8  F003         	goto	l7283
  8564  0007CC  EF0B  F004         	goto	l6917
  8565  0007D0                     l7283:
  8566                           
  8567                           ; BSR set to: 0
  8568                           ; Switch size 1, requested type "simple"
  8569                           ; Number of cases is 8, Range of values is 0 to 7
  8570                           ; switch strategies available:
  8571                           ; Name         Instructions Cycles
  8572                           ; simple_byte           25    13 (average)
  8573                           ;	Chosen strategy is simple_byte
  8574  0007D0  518D               	movf	??_ModbusFC03& (0+255),w,b
  8575  0007D2  0A00               	xorlw	0	; case 0
  8576  0007D4  B4D8               	btfsc	status,2,c
  8577  0007D6  EF9C  F003         	goto	l6897
  8578  0007DA  0A01               	xorlw	1	; case 1
  8579  0007DC  B4D8               	btfsc	status,2,c
  8580  0007DE  EFA4  F003         	goto	l6899
  8581  0007E2  0A03               	xorlw	3	; case 2
  8582  0007E4  B4D8               	btfsc	status,2,c
  8583  0007E6  EFAC  F003         	goto	l6901
  8584  0007EA  0A01               	xorlw	1	; case 3
  8585  0007EC  B4D8               	btfsc	status,2,c
  8586  0007EE  EFB4  F003         	goto	l6903
  8587  0007F2  0A07               	xorlw	7	; case 4
  8588  0007F4  B4D8               	btfsc	status,2,c
  8589  0007F6  EFBC  F003         	goto	l6905
  8590  0007FA  0A01               	xorlw	1	; case 5
  8591  0007FC  B4D8               	btfsc	status,2,c
  8592  0007FE  EFC4  F003         	goto	l6907
  8593  000802  0A03               	xorlw	3	; case 6
  8594  000804  B4D8               	btfsc	status,2,c
  8595  000806  EFCC  F003         	goto	l6909
  8596  00080A  0A01               	xorlw	1	; case 7
  8597  00080C  B4D8               	btfsc	status,2,c
  8598  00080E  EFD4  F003         	goto	l6911
  8599  000812  EF0B  F004         	goto	l6917
  8600  000816                     l6917:
  8601                           
  8602                           ;Modbus.c: 215:     for(i=0; i< (ModbusData[5]) ; i++ ){
  8603  000816  0E00               	movlw	0
  8604  000818  0100               	movlb	0	; () banked
  8605  00081A  6F92               	movwf	(ModbusFC03@i+1)& (0+255),b
  8606  00081C  0E00               	movlw	0
  8607  00081E  6F91               	movwf	ModbusFC03@i& (0+255),b
  8608  000820  EF18  F005         	goto	l6939
  8609  000824                     l6919:
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;Modbus.c: 220:         if(ModbusData[2] == 0x03){
  8613  000824  0E03               	movlw	3
  8614  000826  0102               	movlb	2	; () banked
  8615  000828  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  8616  00082A  A4D8               	btfss	status,2,c
  8617  00082C  EF1A  F004         	goto	u7021
  8618  000830  EF1C  F004         	goto	u7020
  8619  000834                     u7021:
  8620  000834  EF4D  F004         	goto	l6923
  8621  000838                     u7020:
  8622  000838                     
  8623                           ; BSR set to: 2
  8624                           ;Modbus.c: 227:             ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
  8625  000838  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8626  00083A  0100               	movlb	0	; () banked
  8627  00083C  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8628  00083E  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8629  000840  0E00               	movlw	0
  8630  000842  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8631  000844  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8632  000846  90D8               	bcf	status,0,c
  8633  000848  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8634  00084A  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8635  00084C  0E18               	movlw	low _MB303xx
  8636  00084E  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8637  000850  6ED9               	movwf	fsr2l,c
  8638  000852  0E01               	movlw	high _MB303xx
  8639  000854  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8640  000856  6EDA               	movwf	fsr2h,c
  8641  000858  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8642  00085C  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8643  000860  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8644  000862  6FBD               	movwf	_ByteLo& (0+255),b
  8645  000864  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8646                           
  8647                           ;Modbus.c: 228:             ByteHi = MB303xx[ModbusData[3] +i] >> 8;
  8648  000866  0102               	movlb	2	; () banked
  8649  000868  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8650  00086A  0100               	movlb	0	; () banked
  8651  00086C  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8652  00086E  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8653  000870  0E00               	movlw	0
  8654  000872  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8655  000874  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8656  000876  90D8               	bcf	status,0,c
  8657  000878  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8658  00087A  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8659  00087C  0E18               	movlw	low _MB303xx
  8660  00087E  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8661  000880  6ED9               	movwf	fsr2l,c
  8662  000882  0E01               	movlw	high _MB303xx
  8663  000884  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8664  000886  6EDA               	movwf	fsr2h,c
  8665  000888  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8666  00088C  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8667  000890  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8668  000892  6FA7               	movwf	_ByteHi& (0+255),b
  8669  000894  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8670                           
  8671                           ;Modbus.c: 231:         }else if(ModbusData[2] == 0x01){
  8672  000896  EFF7  F004         	goto	l748
  8673  00089A                     l6923:
  8674                           
  8675                           ; BSR set to: 2
  8676  00089A  0502               	decf	(_ModbusData+2)& (0+255),w,b
  8677  00089C  A4D8               	btfss	status,2,c
  8678  00089E  EF53  F004         	goto	u7031
  8679  0008A2  EF55  F004         	goto	u7030
  8680  0008A6                     u7031:
  8681  0008A6  EF86  F004         	goto	l6927
  8682  0008AA                     u7030:
  8683  0008AA                     
  8684                           ; BSR set to: 2
  8685                           ;Modbus.c: 238:             ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
  8686  0008AA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8687  0008AC  0100               	movlb	0	; () banked
  8688  0008AE  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8689  0008B0  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8690  0008B2  0E00               	movlw	0
  8691  0008B4  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8692  0008B6  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8693  0008B8  90D8               	bcf	status,0,c
  8694  0008BA  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8695  0008BC  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8696  0008BE  0E00               	movlw	low _MB301xx
  8697  0008C0  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8698  0008C2  6ED9               	movwf	fsr2l,c
  8699  0008C4  0E01               	movlw	high _MB301xx
  8700  0008C6  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8701  0008C8  6EDA               	movwf	fsr2h,c
  8702  0008CA  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8703  0008CE  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8704  0008D2  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8705  0008D4  6FBD               	movwf	_ByteLo& (0+255),b
  8706  0008D6  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8707                           
  8708                           ;Modbus.c: 239:             ByteHi = MB301xx[ModbusData[3] +i] >> 8;
  8709  0008D8  0102               	movlb	2	; () banked
  8710  0008DA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8711  0008DC  0100               	movlb	0	; () banked
  8712  0008DE  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8713  0008E0  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8714  0008E2  0E00               	movlw	0
  8715  0008E4  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8716  0008E6  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8717  0008E8  90D8               	bcf	status,0,c
  8718  0008EA  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8719  0008EC  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8720  0008EE  0E00               	movlw	low _MB301xx
  8721  0008F0  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8722  0008F2  6ED9               	movwf	fsr2l,c
  8723  0008F4  0E01               	movlw	high _MB301xx
  8724  0008F6  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8725  0008F8  6EDA               	movwf	fsr2h,c
  8726  0008FA  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8727  0008FE  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8728  000902  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8729  000904  6FA7               	movwf	_ByteHi& (0+255),b
  8730  000906  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8731                           
  8732                           ;Modbus.c: 241:         }
  8733  000908  EFF7  F004         	goto	l748
  8734  00090C                     l6927:
  8735                           
  8736                           ; BSR set to: 2
  8737  00090C  0E02               	movlw	2
  8738  00090E  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  8739  000910  A4D8               	btfss	status,2,c
  8740  000912  EF8D  F004         	goto	u7041
  8741  000916  EF8F  F004         	goto	u7040
  8742  00091A                     u7041:
  8743  00091A  EFC0  F004         	goto	l6931
  8744  00091E                     u7040:
  8745  00091E                     
  8746                           ; BSR set to: 2
  8747                           ;Modbus.c: 248:             ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
  8748  00091E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8749  000920  0100               	movlb	0	; () banked
  8750  000922  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8751  000924  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8752  000926  0E00               	movlw	0
  8753  000928  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8754  00092A  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8755  00092C  90D8               	bcf	status,0,c
  8756  00092E  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8757  000930  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8758  000932  0E3F               	movlw	low _MB302xx
  8759  000934  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8760  000936  6ED9               	movwf	fsr2l,c
  8761  000938  0E01               	movlw	high _MB302xx
  8762  00093A  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8763  00093C  6EDA               	movwf	fsr2h,c
  8764  00093E  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8765  000942  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8766  000946  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8767  000948  6FBD               	movwf	_ByteLo& (0+255),b
  8768  00094A  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8769                           
  8770                           ;Modbus.c: 249:             ByteHi = MB302xx[ModbusData[3] +i] >> 8;
  8771  00094C  0102               	movlb	2	; () banked
  8772  00094E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8773  000950  0100               	movlb	0	; () banked
  8774  000952  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8775  000954  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8776  000956  0E00               	movlw	0
  8777  000958  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8778  00095A  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8779  00095C  90D8               	bcf	status,0,c
  8780  00095E  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8781  000960  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8782  000962  0E3F               	movlw	low _MB302xx
  8783  000964  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8784  000966  6ED9               	movwf	fsr2l,c
  8785  000968  0E01               	movlw	high _MB302xx
  8786  00096A  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8787  00096C  6EDA               	movwf	fsr2h,c
  8788  00096E  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8789  000972  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8790  000976  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8791  000978  6FA7               	movwf	_ByteHi& (0+255),b
  8792  00097A  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8793                           
  8794                           ;Modbus.c: 251:         }
  8795  00097C  EFF7  F004         	goto	l748
  8796  000980                     l6931:
  8797                           
  8798                           ; BSR set to: 2
  8799  000980  5102               	movf	(_ModbusData+2)& (0+255),w,b
  8800  000982  A4D8               	btfss	status,2,c
  8801  000984  EFC6  F004         	goto	u7051
  8802  000988  EFC8  F004         	goto	u7050
  8803  00098C                     u7051:
  8804  00098C  EFF7  F004         	goto	l748
  8805  000990                     u7050:
  8806  000990                     
  8807                           ; BSR set to: 2
  8808                           ;Modbus.c: 253:             ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  8809  000990  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8810  000992  0100               	movlb	0	; () banked
  8811  000994  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8812  000996  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8813  000998  0E00               	movlw	0
  8814  00099A  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8815  00099C  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8816  00099E  90D8               	bcf	status,0,c
  8817  0009A0  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8818  0009A2  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8819  0009A4  0E40               	movlw	low _MB300xx
  8820  0009A6  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8821  0009A8  6ED9               	movwf	fsr2l,c
  8822  0009AA  0E03               	movlw	high _MB300xx
  8823  0009AC  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8824  0009AE  6EDA               	movwf	fsr2h,c
  8825  0009B0  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8826  0009B4  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8827  0009B8  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
  8828  0009BA  6FBD               	movwf	_ByteLo& (0+255),b
  8829  0009BC  6BBE               	clrf	(_ByteLo+1)& (0+255),b
  8830                           
  8831                           ;Modbus.c: 254:             ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  8832  0009BE  0102               	movlb	2	; () banked
  8833  0009C0  5103               	movf	(_ModbusData+3)& (0+255),w,b
  8834  0009C2  0100               	movlb	0	; () banked
  8835  0009C4  2591               	addwf	ModbusFC03@i& (0+255),w,b
  8836  0009C6  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8837  0009C8  0E00               	movlw	0
  8838  0009CA  2192               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  8839  0009CC  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
  8840  0009CE  90D8               	bcf	status,0,c
  8841  0009D0  378D               	rlcf	??_ModbusFC03& (0+255),f,b
  8842  0009D2  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  8843  0009D4  0E40               	movlw	low _MB300xx
  8844  0009D6  258D               	addwf	??_ModbusFC03& (0+255),w,b
  8845  0009D8  6ED9               	movwf	fsr2l,c
  8846  0009DA  0E03               	movlw	high _MB300xx
  8847  0009DC  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  8848  0009DE  6EDA               	movwf	fsr2h,c
  8849  0009E0  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
  8850  0009E4  CFDD F090          	movff	postdec2,??_ModbusFC03+3
  8851  0009E8  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
  8852  0009EA  6FA7               	movwf	_ByteHi& (0+255),b
  8853  0009EC  6BA8               	clrf	(_ByteHi+1)& (0+255),b
  8854  0009EE                     l748:
  8855                           
  8856                           ;Modbus.c: 261:         MBRespon[MBResCnt] = ByteHi;
  8857  0009EE  90D8               	bcf	status,0,c
  8858  0009F0  0100               	movlb	0	; () banked
  8859  0009F2  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8860  0009F4  6ED9               	movwf	fsr2l,c
  8861  0009F6  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8862  0009F8  6EDA               	movwf	fsr2h,c
  8863  0009FA  0E41               	movlw	low _MBRespon
  8864  0009FC  26D9               	addwf	fsr2l,f,c
  8865  0009FE  0E01               	movlw	high _MBRespon
  8866  000A00  22DA               	addwfc	fsr2h,f,c
  8867  000A02  C0A7  FFDE         	movff	_ByteHi,postinc2
  8868  000A06  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8869  000A0A                     
  8870                           ; BSR set to: 0
  8871                           ;Modbus.c: 262:         MBResCnt++;
  8872  000A0A  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8873  000A0C  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8874  000A0E                     
  8875                           ; BSR set to: 0
  8876                           ;Modbus.c: 263:         MBRespon[MBResCnt] = ByteLo;
  8877  000A0E  90D8               	bcf	status,0,c
  8878  000A10  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8879  000A12  6ED9               	movwf	fsr2l,c
  8880  000A14  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8881  000A16  6EDA               	movwf	fsr2h,c
  8882  000A18  0E41               	movlw	low _MBRespon
  8883  000A1A  26D9               	addwf	fsr2l,f,c
  8884  000A1C  0E01               	movlw	high _MBRespon
  8885  000A1E  22DA               	addwfc	fsr2h,f,c
  8886  000A20  C0BD  FFDE         	movff	_ByteLo,postinc2
  8887  000A24  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8888                           
  8889                           ;Modbus.c: 264:         MBResCnt++;
  8890  000A28  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  8891  000A2A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  8892                           
  8893                           ;Modbus.c: 266:     }
  8894  000A2C  4B91               	infsnz	ModbusFC03@i& (0+255),f,b
  8895  000A2E  2B92               	incf	(ModbusFC03@i+1)& (0+255),f,b
  8896  000A30                     l6939:
  8897                           
  8898                           ; BSR set to: 0
  8899  000A30  0102               	movlb	2	; () banked
  8900  000A32  5105               	movf	(_ModbusData+5)& (0+255),w,b
  8901  000A34  0100               	movlb	0	; () banked
  8902  000A36  6F8D               	movwf	??_ModbusFC03& (0+255),b
  8903  000A38  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
  8904  000A3A  518D               	movf	??_ModbusFC03& (0+255),w,b
  8905  000A3C  5D91               	subwf	ModbusFC03@i& (0+255),w,b
  8906  000A3E  5192               	movf	(ModbusFC03@i+1)& (0+255),w,b
  8907  000A40  0A80               	xorlw	128
  8908  000A42  6F8F               	movwf	(??_ModbusFC03+2)& (0+255),b
  8909  000A44  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
  8910  000A46  0A80               	xorlw	128
  8911  000A48  598F               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
  8912  000A4A  A0D8               	btfss	status,0,c
  8913  000A4C  EF2A  F005         	goto	u7061
  8914  000A50  EF2C  F005         	goto	u7060
  8915  000A54                     u7061:
  8916  000A54  EF12  F004         	goto	l6919
  8917  000A58                     u7060:
  8918  000A58                     
  8919                           ; BSR set to: 0
  8920                           ;Modbus.c: 268:     ByteHi = generateCRC(MBResCnt, 1);
  8921  000A58  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8922  000A5C  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8923  000A60  0E01               	movlw	1
  8924  000A62  6E07               	movwf	generateCRC@HiOrLo^0,c
  8925  000A64  EC59  F014         	call	_generateCRC	;wreg free
  8926  000A68  C005  F0A7         	movff	?_generateCRC,_ByteHi
  8927  000A6C  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  8928                           
  8929                           ;Modbus.c: 269:     ByteLo = generateCRC(MBResCnt, 0);
  8930  000A70  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  8931  000A74  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  8932  000A78  0E00               	movlw	0
  8933  000A7A  6E07               	movwf	generateCRC@HiOrLo^0,c
  8934  000A7C  EC59  F014         	call	_generateCRC	;wreg free
  8935  000A80  C005  F0BD         	movff	?_generateCRC,_ByteLo
  8936  000A84  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  8937  000A88                     
  8938                           ;Modbus.c: 271:     MBRespon[MBResCnt] = ByteHi;
  8939  000A88  90D8               	bcf	status,0,c
  8940  000A8A  0100               	movlb	0	; () banked
  8941  000A8C  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8942  000A8E  6ED9               	movwf	fsr2l,c
  8943  000A90  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8944  000A92  6EDA               	movwf	fsr2h,c
  8945  000A94  0E41               	movlw	low _MBRespon
  8946  000A96  26D9               	addwf	fsr2l,f,c
  8947  000A98  0E01               	movlw	high _MBRespon
  8948  000A9A  22DA               	addwfc	fsr2h,f,c
  8949  000A9C  C0A7  FFDE         	movff	_ByteHi,postinc2
  8950  000AA0  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  8951  000AA4                     
  8952                           ; BSR set to: 0
  8953                           ;Modbus.c: 272:     MBRespon[MBResCnt +1] = ByteLo;
  8954  000AA4  90D8               	bcf	status,0,c
  8955  000AA6  35A9               	rlcf	_MBResCnt& (0+255),w,b
  8956  000AA8  6ED9               	movwf	fsr2l,c
  8957  000AAA  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  8958  000AAC  6EDA               	movwf	fsr2h,c
  8959  000AAE  0E43               	movlw	low (_MBRespon+2)
  8960  000AB0  26D9               	addwf	fsr2l,f,c
  8961  000AB2  0E01               	movlw	high (_MBRespon+2)
  8962  000AB4  22DA               	addwfc	fsr2h,f,c
  8963  000AB6  C0BD  FFDE         	movff	_ByteLo,postinc2
  8964  000ABA  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  8965  000ABE                     
  8966                           ; BSR set to: 0
  8967                           ;Modbus.c: 273:     MBResCnt = MBResCnt +2;
  8968  000ABE  0E02               	movlw	2
  8969  000AC0  25A9               	addwf	_MBResCnt& (0+255),w,b
  8970  000AC2  6FA9               	movwf	_MBResCnt& (0+255),b
  8971  000AC4  0E00               	movlw	0
  8972  000AC6  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  8973  000AC8  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  8974  000ACA                     
  8975                           ; BSR set to: 0
  8976                           ;Modbus.c: 275:     if(Debug ==1){
  8977  000ACA  05B0               	decf	_Debug& (0+255),w,b
  8978  000ACC  A4D8               	btfss	status,2,c
  8979  000ACE  EF6B  F005         	goto	u7071
  8980  000AD2  EF6D  F005         	goto	u7070
  8981  000AD6                     u7071:
  8982  000AD6  EF79  F005         	goto	l6953
  8983  000ADA                     u7070:
  8984  000ADA                     
  8985                           ; BSR set to: 0
  8986                           ;Modbus.c: 276:         printf("Modbus Response Count %i:\r\n",MBResCnt);
  8987  000ADA  0EB1               	movlw	low STR_20
  8988  000ADC  6F7D               	movwf	printf@fmt& (0+255),b
  8989  000ADE  0EFD               	movlw	high STR_20
  8990  000AE0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8991  000AE2  C0A9  F07F         	movff	_MBResCnt,?_printf+2
  8992  000AE6  C0AA  F080         	movff	_MBResCnt+1,?_printf+3
  8993  000AEA  EC2B  F01E         	call	_printf	;wreg free
  8994                           
  8995                           ;Modbus.c: 277:         PrintModRespon();
  8996  000AEE  ECE3  F013         	call	_PrintModRespon	;wreg free
  8997  000AF2                     l6953:
  8998                           
  8999                           ;Modbus.c: 281:     UART1_Write_string(MBRespon,MBResCnt);
  9000  000AF2  0E41               	movlw	low _MBRespon
  9001  000AF4  6E06               	movwf	UART1_Write_string@data^0,c
  9002  000AF6  0E01               	movlw	high _MBRespon
  9003  000AF8  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9004  000AFA  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9005  000AFE  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9006  000B02  EC33  F01A         	call	_UART1_Write_string	;wreg free
  9007  000B06  0012               	return		;funcret
  9008  000B08                     __end_of_ModbusFC03:
  9009                           	opt callstack 0
  9010                           
  9011 ;; *************** function _ModbusError *****************
  9012 ;; Defined at:
  9013 ;;		line 411 in file "Modbus.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  ErrorCode       2   45[BANK0 ] int 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  i               2    0        int 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;Total ram usage:        6 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:   14
  9034 ;; This function calls:
  9035 ;;		_PrintModRespon
  9036 ;;		_UART1_Write_string
  9037 ;;		_generateCRC
  9038 ;; This function is called by:
  9039 ;;		_main
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text45
  9044  0025CA                     __ptext45:
  9045                           	opt callstack 0
  9046  0025CA                     _ModbusError:
  9047                           	opt callstack 16
  9048  0025CA                     
  9049                           ;Modbus.c: 416:     MBResCnt = 0;
  9050  0025CA  0E00               	movlw	0
  9051  0025CC  0100               	movlb	0	; () banked
  9052  0025CE  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  9053  0025D0  0E00               	movlw	0
  9054  0025D2  6FA9               	movwf	_MBResCnt& (0+255),b
  9055  0025D4                     
  9056                           ; BSR set to: 0
  9057                           ;Modbus.c: 417:     MBRespon[MBResCnt] = ModbusData[0];
  9058  0025D4  0102               	movlb	2	; () banked
  9059  0025D6  5100               	movf	_ModbusData& (0+255),w,b
  9060  0025D8  0100               	movlb	0	; () banked
  9061  0025DA  6F8F               	movwf	??_ModbusError& (0+255),b
  9062  0025DC  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  9063  0025DE  90D8               	bcf	status,0,c
  9064  0025E0  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9065  0025E2  6ED9               	movwf	fsr2l,c
  9066  0025E4  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9067  0025E6  6EDA               	movwf	fsr2h,c
  9068  0025E8  0E41               	movlw	low _MBRespon
  9069  0025EA  26D9               	addwf	fsr2l,f,c
  9070  0025EC  0E01               	movlw	high _MBRespon
  9071  0025EE  22DA               	addwfc	fsr2h,f,c
  9072  0025F0  C08F  FFDE         	movff	??_ModbusError,postinc2
  9073  0025F4  C090  FFDD         	movff	??_ModbusError+1,postdec2
  9074  0025F8                     
  9075                           ; BSR set to: 0
  9076                           ;Modbus.c: 418:     MBResCnt++;
  9077  0025F8  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  9078  0025FA  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  9079  0025FC                     
  9080                           ; BSR set to: 0
  9081                           ;Modbus.c: 419:     MBRespon[MBResCnt] = ModbusData[1] + 128;
  9082  0025FC  0102               	movlb	2	; () banked
  9083  0025FE  5101               	movf	(_ModbusData+1)& (0+255),w,b
  9084  002600  0100               	movlb	0	; () banked
  9085  002602  6F8F               	movwf	??_ModbusError& (0+255),b
  9086  002604  6B90               	clrf	(??_ModbusError+1)& (0+255),b
  9087  002606  0E80               	movlw	128
  9088  002608  278F               	addwf	??_ModbusError& (0+255),f,b
  9089  00260A  0E00               	movlw	0
  9090  00260C  2390               	addwfc	(??_ModbusError+1)& (0+255),f,b
  9091  00260E  90D8               	bcf	status,0,c
  9092  002610  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9093  002612  6ED9               	movwf	fsr2l,c
  9094  002614  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9095  002616  6EDA               	movwf	fsr2h,c
  9096  002618  0E41               	movlw	low _MBRespon
  9097  00261A  26D9               	addwf	fsr2l,f,c
  9098  00261C  0E01               	movlw	high _MBRespon
  9099  00261E  22DA               	addwfc	fsr2h,f,c
  9100  002620  C08F  FFDE         	movff	??_ModbusError,postinc2
  9101  002624  C090  FFDD         	movff	??_ModbusError+1,postdec2
  9102  002628                     
  9103                           ; BSR set to: 0
  9104                           ;Modbus.c: 420:     MBResCnt++;
  9105  002628  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  9106  00262A  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  9107  00262C                     
  9108                           ; BSR set to: 0
  9109                           ;Modbus.c: 421:     MBRespon[MBResCnt] = ErrorCode;
  9110  00262C  90D8               	bcf	status,0,c
  9111  00262E  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9112  002630  6ED9               	movwf	fsr2l,c
  9113  002632  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9114  002634  6EDA               	movwf	fsr2h,c
  9115  002636  0E41               	movlw	low _MBRespon
  9116  002638  26D9               	addwf	fsr2l,f,c
  9117  00263A  0E01               	movlw	high _MBRespon
  9118  00263C  22DA               	addwfc	fsr2h,f,c
  9119  00263E  C08D  FFDE         	movff	ModbusError@ErrorCode,postinc2
  9120  002642  C08E  FFDD         	movff	ModbusError@ErrorCode+1,postdec2
  9121  002646                     
  9122                           ; BSR set to: 0
  9123                           ;Modbus.c: 422:     MBResCnt++;
  9124  002646  4BA9               	infsnz	_MBResCnt& (0+255),f,b
  9125  002648  2BAA               	incf	(_MBResCnt+1)& (0+255),f,b
  9126  00264A                     
  9127                           ; BSR set to: 0
  9128                           ;Modbus.c: 424:     ByteHi = generateCRC(MBResCnt, 1);
  9129  00264A  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9130  00264E  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9131  002652  0E01               	movlw	1
  9132  002654  6E07               	movwf	generateCRC@HiOrLo^0,c
  9133  002656  EC59  F014         	call	_generateCRC	;wreg free
  9134  00265A  C005  F0A7         	movff	?_generateCRC,_ByteHi
  9135  00265E  C006  F0A8         	movff	?_generateCRC+1,_ByteHi+1
  9136  002662                     
  9137                           ;Modbus.c: 425:     ByteLo = generateCRC(MBResCnt, 0);
  9138  002662  C0A9  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9139  002666  C0AA  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9140  00266A  0E00               	movlw	0
  9141  00266C  6E07               	movwf	generateCRC@HiOrLo^0,c
  9142  00266E  EC59  F014         	call	_generateCRC	;wreg free
  9143  002672  C005  F0BD         	movff	?_generateCRC,_ByteLo
  9144  002676  C006  F0BE         	movff	?_generateCRC+1,_ByteLo+1
  9145  00267A                     
  9146                           ;Modbus.c: 427:     MBRespon[MBResCnt] = ByteHi;
  9147  00267A  90D8               	bcf	status,0,c
  9148  00267C  0100               	movlb	0	; () banked
  9149  00267E  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9150  002680  6ED9               	movwf	fsr2l,c
  9151  002682  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9152  002684  6EDA               	movwf	fsr2h,c
  9153  002686  0E41               	movlw	low _MBRespon
  9154  002688  26D9               	addwf	fsr2l,f,c
  9155  00268A  0E01               	movlw	high _MBRespon
  9156  00268C  22DA               	addwfc	fsr2h,f,c
  9157  00268E  C0A7  FFDE         	movff	_ByteHi,postinc2
  9158  002692  C0A8  FFDD         	movff	_ByteHi+1,postdec2
  9159  002696                     
  9160                           ; BSR set to: 0
  9161                           ;Modbus.c: 428:     MBRespon[MBResCnt +1] = ByteLo;
  9162  002696  90D8               	bcf	status,0,c
  9163  002698  35A9               	rlcf	_MBResCnt& (0+255),w,b
  9164  00269A  6ED9               	movwf	fsr2l,c
  9165  00269C  35AA               	rlcf	(_MBResCnt+1)& (0+255),w,b
  9166  00269E  6EDA               	movwf	fsr2h,c
  9167  0026A0  0E43               	movlw	low (_MBRespon+2)
  9168  0026A2  26D9               	addwf	fsr2l,f,c
  9169  0026A4  0E01               	movlw	high (_MBRespon+2)
  9170  0026A6  22DA               	addwfc	fsr2h,f,c
  9171  0026A8  C0BD  FFDE         	movff	_ByteLo,postinc2
  9172  0026AC  C0BE  FFDD         	movff	_ByteLo+1,postdec2
  9173  0026B0                     
  9174                           ; BSR set to: 0
  9175                           ;Modbus.c: 429:     MBResCnt = MBResCnt +2;
  9176  0026B0  0E02               	movlw	2
  9177  0026B2  25A9               	addwf	_MBResCnt& (0+255),w,b
  9178  0026B4  6FA9               	movwf	_MBResCnt& (0+255),b
  9179  0026B6  0E00               	movlw	0
  9180  0026B8  21AA               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9181  0026BA  6FAA               	movwf	(_MBResCnt+1)& (0+255),b
  9182  0026BC                     
  9183                           ; BSR set to: 0
  9184                           ;Modbus.c: 431:     PrintModRespon();
  9185  0026BC  ECE3  F013         	call	_PrintModRespon	;wreg free
  9186  0026C0                     
  9187                           ;Modbus.c: 432:     UART1_Write_string(MBRespon,MBResCnt);
  9188  0026C0  0E41               	movlw	low _MBRespon
  9189  0026C2  6E06               	movwf	UART1_Write_string@data^0,c
  9190  0026C4  0E01               	movlw	high _MBRespon
  9191  0026C6  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9192  0026C8  C0A9  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9193  0026CC  C0AA  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9194  0026D0  EC33  F01A         	call	_UART1_Write_string	;wreg free
  9195  0026D4  0012               	return		;funcret
  9196  0026D6                     __end_of_ModbusError:
  9197                           	opt callstack 0
  9198                           
  9199 ;; *************** function _generateCRC *****************
  9200 ;; Defined at:
  9201 ;;		line 338 in file "Modbus.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;  MessCnt         2    4[COMRAM] int 
  9204 ;;  HiOrLo          1    6[COMRAM] _Bool 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;  crc             2   17[COMRAM] unsigned int 
  9207 ;;  j               2   15[COMRAM] int 
  9208 ;;  i               2   13[COMRAM] int 
  9209 ;;  crcLow          2   11[COMRAM] unsigned int 
  9210 ;;  crcHigh         2    9[COMRAM] unsigned int 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  2    4[COMRAM] unsigned int 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9224 ;;Total ram usage:       15 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:    4
  9227 ;; This function calls:
  9228 ;;		Nothing
  9229 ;; This function is called by:
  9230 ;;		_ModbusFC03
  9231 ;;		_ModbusFC10
  9232 ;;		_ModbusError
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text46
  9237  0028B2                     __ptext46:
  9238                           	opt callstack 0
  9239  0028B2                     _generateCRC:
  9240                           	opt callstack 25
  9241  0028B2                     
  9242                           ;Modbus.c: 339:   unsigned int crc = 0xFFFF;
  9243  0028B2  6812               	setf	generateCRC@crc^0,c
  9244  0028B4  6813               	setf	(generateCRC@crc+1)^0,c
  9245  0028B6                     
  9246                           ;Modbus.c: 341:   unsigned int crcLow = 0;
  9247  0028B6  0E00               	movlw	0
  9248  0028B8  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  9249  0028BA  0E00               	movlw	0
  9250  0028BC  6E0C               	movwf	generateCRC@crcLow^0,c
  9251                           
  9252                           ;Modbus.c: 342:   int i,j = 0;
  9253  0028BE  0E00               	movlw	0
  9254  0028C0  6E11               	movwf	(generateCRC@j+1)^0,c
  9255  0028C2  0E00               	movlw	0
  9256  0028C4  6E10               	movwf	generateCRC@j^0,c
  9257                           
  9258                           ;Modbus.c: 344:     for(i=0;i<MessCnt;i++){
  9259  0028C6  0E00               	movlw	0
  9260  0028C8  6E0F               	movwf	(generateCRC@i+1)^0,c
  9261  0028CA  0E00               	movlw	0
  9262  0028CC  6E0E               	movwf	generateCRC@i^0,c
  9263  0028CE  EF9B  F014         	goto	l5045
  9264  0028D2                     l5027:
  9265                           
  9266                           ;Modbus.c: 345:       crc ^= MBRespon[i];
  9267  0028D2  90D8               	bcf	status,0,c
  9268  0028D4  340E               	rlcf	generateCRC@i^0,w,c
  9269  0028D6  6ED9               	movwf	fsr2l,c
  9270  0028D8  340F               	rlcf	(generateCRC@i+1)^0,w,c
  9271  0028DA  6EDA               	movwf	fsr2h,c
  9272  0028DC  0E41               	movlw	low _MBRespon
  9273  0028DE  26D9               	addwf	fsr2l,f,c
  9274  0028E0  0E01               	movlw	high _MBRespon
  9275  0028E2  22DA               	addwfc	fsr2h,f,c
  9276  0028E4  50DE               	movf	postinc2,w,c
  9277  0028E6  1A12               	xorwf	generateCRC@crc^0,f,c
  9278  0028E8  50DD               	movf	postdec2,w,c
  9279  0028EA  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  9280  0028EC                     
  9281                           ;Modbus.c: 346:       for(j=8; j!=0; j--){
  9282  0028EC  0E00               	movlw	0
  9283  0028EE  6E11               	movwf	(generateCRC@j+1)^0,c
  9284  0028F0  0E08               	movlw	8
  9285  0028F2  6E10               	movwf	generateCRC@j^0,c
  9286  0028F4                     l768:
  9287                           
  9288                           ;Modbus.c: 347:         if((crc & 0x0001) != 0){
  9289  0028F4  A012               	btfss	generateCRC@crc^0,0,c
  9290  0028F6  EF7F  F014         	goto	u4341
  9291  0028FA  EF81  F014         	goto	u4340
  9292  0028FE                     u4341:
  9293  0028FE  EF8A  F014         	goto	l5039
  9294  002902                     u4340:
  9295  002902                     
  9296                           ;Modbus.c: 348:           crc >>= 1;
  9297  002902  90D8               	bcf	status,0,c
  9298  002904  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  9299  002906  3212               	rrcf	generateCRC@crc^0,f,c
  9300  002908                     
  9301                           ;Modbus.c: 349:           crc ^= 0xA001;
  9302  002908  0E01               	movlw	1
  9303  00290A  1A12               	xorwf	generateCRC@crc^0,f,c
  9304  00290C  0EA0               	movlw	160
  9305  00290E  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  9306                           
  9307                           ;Modbus.c: 350:         }
  9308  002910  EF8D  F014         	goto	l771
  9309  002914                     l5039:
  9310                           
  9311                           ;Modbus.c: 352:           crc >>= 1;
  9312  002914  90D8               	bcf	status,0,c
  9313  002916  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  9314  002918  3212               	rrcf	generateCRC@crc^0,f,c
  9315  00291A                     l771:
  9316                           
  9317                           ;Modbus.c: 354:       }
  9318  00291A  0610               	decf	generateCRC@j^0,f,c
  9319  00291C  A0D8               	btfss	status,0,c
  9320  00291E  0611               	decf	(generateCRC@j+1)^0,f,c
  9321  002920  5010               	movf	generateCRC@j^0,w,c
  9322  002922  1011               	iorwf	(generateCRC@j+1)^0,w,c
  9323  002924  A4D8               	btfss	status,2,c
  9324  002926  EF97  F014         	goto	u4351
  9325  00292A  EF99  F014         	goto	u4350
  9326  00292E                     u4351:
  9327  00292E  EF7A  F014         	goto	l768
  9328  002932                     u4350:
  9329  002932                     
  9330                           ;Modbus.c: 355:     }
  9331  002932  4A0E               	infsnz	generateCRC@i^0,f,c
  9332  002934  2A0F               	incf	(generateCRC@i+1)^0,f,c
  9333  002936                     l5045:
  9334  002936  5005               	movf	generateCRC@MessCnt^0,w,c
  9335  002938  5C0E               	subwf	generateCRC@i^0,w,c
  9336  00293A  500F               	movf	(generateCRC@i+1)^0,w,c
  9337  00293C  0A80               	xorlw	128
  9338  00293E  6E08               	movwf	??_generateCRC^0,c
  9339  002940  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
  9340  002942  0A80               	xorlw	128
  9341  002944  5808               	subwfb	??_generateCRC^0,w,c
  9342  002946  A0D8               	btfss	status,0,c
  9343  002948  EFA8  F014         	goto	u4361
  9344  00294C  EFAA  F014         	goto	u4360
  9345  002950                     u4361:
  9346  002950  EF69  F014         	goto	l5027
  9347  002954                     u4360:
  9348  002954                     
  9349                           ;Modbus.c: 357:     crcHigh = (crc & 0x00FF);
  9350  002954  5012               	movf	generateCRC@crc^0,w,c
  9351  002956  6E0A               	movwf	generateCRC@crcHigh^0,c
  9352  002958  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
  9353                           
  9354                           ;Modbus.c: 358:     crcLow = (crc & 0xFF00) >>8;
  9355  00295A  C012  F008         	movff	generateCRC@crc,??_generateCRC
  9356  00295E  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
  9357  002962  C009  F008         	movff	??_generateCRC+1,??_generateCRC
  9358  002966  6A09               	clrf	(??_generateCRC+1)^0,c
  9359  002968  5008               	movf	??_generateCRC^0,w,c
  9360  00296A  6E0C               	movwf	generateCRC@crcLow^0,c
  9361  00296C  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
  9362  00296E                     
  9363                           ;Modbus.c: 360:     if(HiOrLo == 1){
  9364  00296E  0407               	decf	generateCRC@HiOrLo^0,w,c
  9365  002970  A4D8               	btfss	status,2,c
  9366  002972  EFBD  F014         	goto	u4371
  9367  002976  EFBF  F014         	goto	u4370
  9368  00297A                     u4371:
  9369  00297A  EFC5  F014         	goto	l773
  9370  00297E                     u4370:
  9371  00297E                     
  9372                           ;Modbus.c: 361:         return crcHigh;
  9373  00297E  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
  9374  002982  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
  9375  002986  EFC9  F014         	goto	l774
  9376  00298A                     l773:
  9377                           
  9378                           ;Modbus.c: 363:         return crcLow;
  9379  00298A  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
  9380  00298E  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
  9381  002992                     l774:
  9382  002992  0012               	return		;funcret
  9383  002994                     __end_of_generateCRC:
  9384                           	opt callstack 0
  9385                           
  9386 ;; *************** function _UART1_Write_string *****************
  9387 ;; Defined at:
  9388 ;;		line 368 in file "Modbus.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;  data            2    5[COMRAM] PTR unsigned int 
  9391 ;;		 -> MBRespon(64), 
  9392 ;;  data_len        2    7[COMRAM] int 
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;  i               2   10[COMRAM] int 
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9407 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;Total ram usage:        7 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    5
  9411 ;; This function calls:
  9412 ;;		_EUSART1_Write
  9413 ;;		_EUSART1_is_tx_done
  9414 ;;		_EUSART1_is_tx_ready
  9415 ;;		_TXMode
  9416 ;; This function is called by:
  9417 ;;		_ModbusFC03
  9418 ;;		_ModbusFC10
  9419 ;;		_ModbusError
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text47
  9424  003466                     __ptext47:
  9425                           	opt callstack 0
  9426  003466                     _UART1_Write_string:
  9427                           	opt callstack 24
  9428  003466                     
  9429                           ;Modbus.c: 368: void UART1_Write_string(unsigned int * data, int data_len);Modbus.c: 369
      +                          : {;Modbus.c: 370:     TXMode();
  9430  003466  EC1B  F01F         	call	_TXMode	;wreg free
  9431  00346A                     l5081:
  9432  00346A  ECB0  F01E         	call	_EUSART1_is_tx_ready	;wreg free
  9433  00346E  0900               	iorlw	0
  9434  003470  B4D8               	btfsc	status,2,c
  9435  003472  EF3D  F01A         	goto	u4441
  9436  003476  EF3F  F01A         	goto	u4440
  9437  00347A                     u4441:
  9438  00347A  EF35  F01A         	goto	l5081
  9439  00347E                     u4440:
  9440  00347E                     
  9441                           ;Modbus.c: 372:     for (int i = 0; i < data_len; i++) {
  9442  00347E  0E00               	movlw	0
  9443  003480  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  9444  003482  0E00               	movlw	0
  9445  003484  6E0B               	movwf	UART1_Write_string@i^0,c
  9446  003486  EF5D  F01A         	goto	l5091
  9447  00348A                     l5085:
  9448                           
  9449                           ;Modbus.c: 373:         EUSART1_Write(data[i]);
  9450  00348A  90D8               	bcf	status,0,c
  9451  00348C  340B               	rlcf	UART1_Write_string@i^0,w,c
  9452  00348E  6ED9               	movwf	fsr2l,c
  9453  003490  340C               	rlcf	(UART1_Write_string@i+1)^0,w,c
  9454  003492  6EDA               	movwf	fsr2h,c
  9455  003494  5006               	movf	UART1_Write_string@data^0,w,c
  9456  003496  26D9               	addwf	fsr2l,f,c
  9457  003498  5007               	movf	(UART1_Write_string@data+1)^0,w,c
  9458  00349A  22DA               	addwfc	fsr2h,f,c
  9459  00349C  50DF               	movf	indf2,w,c
  9460  00349E  EC02  F01B         	call	_EUSART1_Write
  9461  0034A2                     l5087:
  9462  0034A2  ECD3  F01E         	call	_EUSART1_is_tx_done	;wreg free
  9463  0034A6  0900               	iorlw	0
  9464  0034A8  B4D8               	btfsc	status,2,c
  9465  0034AA  EF59  F01A         	goto	u4451
  9466  0034AE  EF5B  F01A         	goto	u4450
  9467  0034B2                     u4451:
  9468  0034B2  EF51  F01A         	goto	l5087
  9469  0034B6                     u4450:
  9470  0034B6                     
  9471                           ;Modbus.c: 375:     }
  9472  0034B6  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  9473  0034B8  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  9474  0034BA                     l5091:
  9475  0034BA  5008               	movf	UART1_Write_string@data_len^0,w,c
  9476  0034BC  5C0B               	subwf	UART1_Write_string@i^0,w,c
  9477  0034BE  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  9478  0034C0  0A80               	xorlw	128
  9479  0034C2  6E0A               	movwf	??_UART1_Write_string^0,c
  9480  0034C4  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  9481  0034C6  0A80               	xorlw	128
  9482  0034C8  580A               	subwfb	??_UART1_Write_string^0,w,c
  9483  0034CA  A0D8               	btfss	status,0,c
  9484  0034CC  EF6A  F01A         	goto	u4461
  9485  0034D0  EF6C  F01A         	goto	u4460
  9486  0034D4                     u4461:
  9487  0034D4  EF45  F01A         	goto	l5085
  9488  0034D8                     u4460:
  9489  0034D8  0012               	return		;funcret
  9490  0034DA                     __end_of_UART1_Write_string:
  9491                           	opt callstack 0
  9492                           
  9493 ;; *************** function _TXMode *****************
  9494 ;; Defined at:
  9495 ;;		line 47 in file "Modbus.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;		None
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1    wreg      void 
  9502 ;; Registers used:
  9503 ;;		None
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;Total ram usage:        0 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:    4
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_UART1_Write_string
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text48
  9524  003E36                     __ptext48:
  9525                           	opt callstack 0
  9526  003E36                     _TXMode:
  9527                           	opt callstack 24
  9528  003E36  8086               	bsf	134,0,c	;volatile
  9529  003E38  8683               	bsf	131,3,c	;volatile
  9530  003E3A  0012               	return		;funcret
  9531  003E3C                     __end_of_TXMode:
  9532                           	opt callstack 0
  9533                           
  9534 ;; *************** function _EUSART1_is_tx_ready *****************
  9535 ;; Defined at:
  9536 ;;		line 134 in file "mcc_generated_files/eusart1.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      _Bool 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9554 ;;Total ram usage:        0 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    4
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_UART1_Write_string
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text49
  9565  003D60                     __ptext49:
  9566                           	opt callstack 0
  9567  003D60                     _EUSART1_is_tx_ready:
  9568                           	opt callstack 24
  9569  003D60                     
  9570                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
  9571  003D60  0100               	movlb	0	; () banked
  9572  003D62  51BB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  9573  003D64  A4D8               	btfss	status,2,c
  9574  003D66  EFB7  F01E         	goto	u4001
  9575  003D6A  EFBA  F01E         	goto	u4000
  9576  003D6E                     u4001:
  9577  003D6E  0E01               	movlw	1
  9578  003D70  EFBB  F01E         	goto	u4010
  9579  003D74                     u4000:
  9580  003D74  0E00               	movlw	0
  9581  003D76                     u4010:
  9582  003D76                     
  9583                           ; BSR set to: 0
  9584  003D76  0012               	return		;funcret
  9585  003D78                     __end_of_EUSART1_is_tx_ready:
  9586                           	opt callstack 0
  9587                           
  9588 ;; *************** function _EUSART1_is_tx_done *****************
  9589 ;; Defined at:
  9590 ;;		line 144 in file "mcc_generated_files/eusart1.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;		None
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;		None
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      _Bool 
  9597 ;; Registers used:
  9598 ;;		wreg
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;Total ram usage:        0 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    4
  9611 ;; This function calls:
  9612 ;;		Nothing
  9613 ;; This function is called by:
  9614 ;;		_UART1_Write_string
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text50
  9619  003DA6                     __ptext50:
  9620                           	opt callstack 0
  9621  003DA6                     _EUSART1_is_tx_done:
  9622                           	opt callstack 24
  9623  003DA6                     
  9624                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
  9625  003DA6  B29E               	btfsc	158,1,c	;volatile
  9626  003DA8  EFD8  F01E         	goto	u4021
  9627  003DAC  EFDB  F01E         	goto	u4020
  9628  003DB0                     u4021:
  9629  003DB0  0E01               	movlw	1
  9630  003DB2  EFDC  F01E         	goto	u4026
  9631  003DB6                     u4020:
  9632  003DB6  0E00               	movlw	0
  9633  003DB8                     u4026:
  9634  003DB8  0012               	return		;funcret
  9635  003DBA                     __end_of_EUSART1_is_tx_done:
  9636                           	opt callstack 0
  9637                           
  9638 ;; *************** function _EUSART1_Write *****************
  9639 ;; Defined at:
  9640 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  txData          1    wreg     unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  txData          1    4[COMRAM] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9658 ;;Total ram usage:        1 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    4
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_UART1_Write_string
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text51
  9669  003604                     __ptext51:
  9670                           	opt callstack 0
  9671  003604                     _EUSART1_Write:
  9672                           	opt callstack 24
  9673                           
  9674                           ;incstack = 0
  9675                           ;EUSART1_Write@txData stored from wreg
  9676  003604  6E05               	movwf	EUSART1_Write@txData^0,c
  9677  003606                     l4675:
  9678                           
  9679                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
  9680  003606  0100               	movlb	0	; () banked
  9681  003608  51BB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  9682  00360A  B4D8               	btfsc	status,2,c
  9683  00360C  EF0A  F01B         	goto	u4031
  9684  003610  EF0C  F01B         	goto	u4030
  9685  003614                     u4031:
  9686  003614  EF03  F01B         	goto	l4675
  9687  003618                     u4030:
  9688  003618                     
  9689                           ; BSR set to: 0
  9690                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
  9691  003618  010E               	movlb	14	; () banked
  9692  00361A  B9C5               	btfsc	197,4,b	;volatile
  9693  00361C  EF12  F01B         	goto	u4041
  9694  003620  EF14  F01B         	goto	u4040
  9695  003624                     u4041:
  9696  003624  EF18  F01B         	goto	l471
  9697  003628                     u4040:
  9698  003628                     
  9699                           ; BSR set to: 14
  9700                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
  9701  003628  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  9702                           
  9703                           ;mcc_generated_files/eusart1.c: 184:     }
  9704  00362C  EF2E  F01B         	goto	l4689
  9705  003630                     l471:
  9706                           
  9707                           ; BSR set to: 14
  9708                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
  9709  003630  99C5               	bcf	197,4,b	;volatile
  9710  003632                     
  9711                           ; BSR set to: 14
  9712                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
  9713  003632  0EA1               	movlw	low _eusart1TxBuffer
  9714  003634  0100               	movlb	0	; () banked
  9715  003636  25B5               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  9716  003638  6ED9               	movwf	fsr2l,c
  9717  00363A  6ADA               	clrf	fsr2h,c
  9718  00363C  0E01               	movlw	high _eusart1TxBuffer
  9719  00363E  22DA               	addwfc	fsr2h,f,c
  9720  003640  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  9721  003644                     
  9722                           ; BSR set to: 0
  9723  003644  2BB5               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  9724  003646                     
  9725                           ; BSR set to: 0
  9726                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  9727  003646  0E0F               	movlw	15
  9728  003648  65B5               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  9729  00364A  EF29  F01B         	goto	u4051
  9730  00364E  EF2B  F01B         	goto	u4050
  9731  003652                     u4051:
  9732  003652  EF2D  F01B         	goto	l4687
  9733  003656                     u4050:
  9734  003656                     
  9735                           ; BSR set to: 0
  9736                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
  9737  003656  0E00               	movlw	0
  9738  003658  6FB5               	movwf	_eusart1TxHead& (0+255),b	;volatile
  9739  00365A                     l4687:
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
  9743  00365A  07BB               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  9744  00365C                     l4689:
  9745                           
  9746                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
  9747  00365C  010E               	movlb	14	; () banked
  9748  00365E  89C5               	bsf	197,4,b	;volatile
  9749  003660                     
  9750                           ; BSR set to: 14
  9751  003660  0012               	return		;funcret
  9752  003662                     __end_of_EUSART1_Write:
  9753                           	opt callstack 0
  9754                           
  9755 ;; *************** function _PrintModRespon *****************
  9756 ;; Defined at:
  9757 ;;		line 380 in file "Modbus.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;		None
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  i               2   43[BANK0 ] int 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9774 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;Total ram usage:        3 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:   13
  9778 ;; This function calls:
  9779 ;;		_EUSART2_is_tx_done
  9780 ;;		_EUSART2_is_tx_ready
  9781 ;;		_printf
  9782 ;; This function is called by:
  9783 ;;		_ModbusFC03
  9784 ;;		_ModbusFC10
  9785 ;;		_ModbusError
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text52
  9790  0027C6                     __ptext52:
  9791                           	opt callstack 0
  9792  0027C6                     _PrintModRespon:
  9793                           	opt callstack 16
  9794  0027C6                     
  9795                           ;Modbus.c: 385:     printf("Modbus Response Count %i:\r\n",MBResCnt);
  9796  0027C6  0EB1               	movlw	low STR_20
  9797  0027C8  0100               	movlb	0	; () banked
  9798  0027CA  6F7D               	movwf	printf@fmt& (0+255),b
  9799  0027CC  0EFD               	movlw	high STR_20
  9800  0027CE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9801  0027D0  C0A9  F07F         	movff	_MBResCnt,?_printf+2
  9802  0027D4  C0AA  F080         	movff	_MBResCnt+1,?_printf+3
  9803  0027D8  EC2B  F01E         	call	_printf	;wreg free
  9804  0027DC                     l6699:
  9805  0027DC  ECBC  F01E         	call	_EUSART2_is_tx_ready	;wreg free
  9806  0027E0  0900               	iorlw	0
  9807  0027E2  B4D8               	btfsc	status,2,c
  9808  0027E4  EFF6  F013         	goto	u6741
  9809  0027E8  EFF8  F013         	goto	u6740
  9810  0027EC                     u6741:
  9811  0027EC  EFEE  F013         	goto	l6699
  9812  0027F0                     u6740:
  9813  0027F0                     
  9814                           ;Modbus.c: 387:     for(i=0; i< MBResCnt ; i++ ){
  9815  0027F0  0E00               	movlw	0
  9816  0027F2  0100               	movlb	0	; () banked
  9817  0027F4  6F8C               	movwf	(PrintModRespon@i+1)& (0+255),b
  9818  0027F6  0E00               	movlw	0
  9819  0027F8  6F8B               	movwf	PrintModRespon@i& (0+255),b
  9820  0027FA  EF2E  F014         	goto	l6711
  9821  0027FE                     l6703:
  9822  0027FE  ECBC  F01E         	call	_EUSART2_is_tx_ready	;wreg free
  9823  002802  0900               	iorlw	0
  9824  002804  B4D8               	btfsc	status,2,c
  9825  002806  EF07  F014         	goto	u6751
  9826  00280A  EF09  F014         	goto	u6750
  9827  00280E                     u6751:
  9828  00280E  EFFF  F013         	goto	l6703
  9829  002812                     u6750:
  9830  002812                     
  9831                           ;Modbus.c: 389:         printf("   Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
  9832  002812  0E1D               	movlw	low STR_22
  9833  002814  0100               	movlb	0	; () banked
  9834  002816  6F7D               	movwf	printf@fmt& (0+255),b
  9835  002818  0EFE               	movlw	high STR_22
  9836  00281A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9837  00281C  C08B  F07F         	movff	PrintModRespon@i,?_printf+2
  9838  002820  C08C  F080         	movff	PrintModRespon@i+1,?_printf+3
  9839  002824  90D8               	bcf	status,0,c
  9840  002826  358B               	rlcf	PrintModRespon@i& (0+255),w,b
  9841  002828  6ED9               	movwf	fsr2l,c
  9842  00282A  358C               	rlcf	(PrintModRespon@i+1)& (0+255),w,b
  9843  00282C  6EDA               	movwf	fsr2h,c
  9844  00282E  0E41               	movlw	low _MBRespon
  9845  002830  26D9               	addwf	fsr2l,f,c
  9846  002832  0E01               	movlw	high _MBRespon
  9847  002834  22DA               	addwfc	fsr2h,f,c
  9848  002836  CFDE F081          	movff	postinc2,?_printf+4
  9849  00283A  CFDD F082          	movff	postdec2,?_printf+5
  9850  00283E  EC2B  F01E         	call	_printf	;wreg free
  9851  002842                     l6707:
  9852  002842  ECC8  F01E         	call	_EUSART2_is_tx_done	;wreg free
  9853  002846  0900               	iorlw	0
  9854  002848  B4D8               	btfsc	status,2,c
  9855  00284A  EF29  F014         	goto	u6761
  9856  00284E  EF2B  F014         	goto	u6760
  9857  002852                     u6761:
  9858  002852  EF21  F014         	goto	l6707
  9859  002856                     u6760:
  9860  002856                     
  9861                           ;Modbus.c: 392:     }
  9862  002856  0100               	movlb	0	; () banked
  9863  002858  4B8B               	infsnz	PrintModRespon@i& (0+255),f,b
  9864  00285A  2B8C               	incf	(PrintModRespon@i+1)& (0+255),f,b
  9865  00285C                     l6711:
  9866                           
  9867                           ; BSR set to: 0
  9868  00285C  51A9               	movf	_MBResCnt& (0+255),w,b
  9869  00285E  5D8B               	subwf	PrintModRespon@i& (0+255),w,b
  9870  002860  518C               	movf	(PrintModRespon@i+1)& (0+255),w,b
  9871  002862  0A80               	xorlw	128
  9872  002864  6E55               	movwf	??_PrintModRespon^0,c
  9873  002866  51AA               	movf	(_MBResCnt+1)& (0+255),w,b
  9874  002868  0A80               	xorlw	128
  9875  00286A  5855               	subwfb	??_PrintModRespon^0,w,c
  9876  00286C  A0D8               	btfss	status,0,c
  9877  00286E  EF3B  F014         	goto	u6771
  9878  002872  EF3D  F014         	goto	u6770
  9879  002876                     u6771:
  9880  002876  EFFF  F013         	goto	l6703
  9881  00287A                     u6770:
  9882  00287A                     l6713:
  9883  00287A  ECBC  F01E         	call	_EUSART2_is_tx_ready	;wreg free
  9884  00287E  0900               	iorlw	0
  9885  002880  B4D8               	btfsc	status,2,c
  9886  002882  EF45  F014         	goto	u6781
  9887  002886  EF47  F014         	goto	u6780
  9888  00288A                     u6781:
  9889  00288A  EF3D  F014         	goto	l6713
  9890  00288E                     u6780:
  9891  00288E                     
  9892                           ;Modbus.c: 394:     printf("\r\n\n");
  9893  00288E  0E9A               	movlw	low (STR_37+50)
  9894  002890  0100               	movlb	0	; () banked
  9895  002892  6F7D               	movwf	printf@fmt& (0+255),b
  9896  002894  0EFB               	movlw	high (STR_37+50)
  9897  002896  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9898  002898  EC2B  F01E         	call	_printf	;wreg free
  9899  00289C                     l6717:
  9900  00289C  ECC8  F01E         	call	_EUSART2_is_tx_done	;wreg free
  9901  0028A0  0900               	iorlw	0
  9902  0028A2  B4D8               	btfsc	status,2,c
  9903  0028A4  EF56  F014         	goto	u6791
  9904  0028A8  EF58  F014         	goto	u6790
  9905  0028AC                     u6791:
  9906  0028AC  EF4E  F014         	goto	l6717
  9907  0028B0                     u6790:
  9908  0028B0  0012               	return		;funcret
  9909  0028B2                     __end_of_PrintModRespon:
  9910                           	opt callstack 0
  9911                           
  9912 ;; *************** function _printf *****************
  9913 ;; Defined at:
  9914 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  9917 ;;		 -> STR_56(29), STR_54(30), STR_53(24), STR_52(25), 
  9918 ;;		 -> STR_51(17), STR_50(27), STR_49(33), STR_47(36), 
  9919 ;;		 -> STR_46(67), STR_45(19), STR_44(29), STR_43(55), 
  9920 ;;		 -> STR_42(17), STR_41(16), STR_40(4), STR_39(35), 
  9921 ;;		 -> STR_38(34), STR_37(54), STR_36(52), STR_35(28), 
  9922 ;;		 -> STR_32(42), STR_31(22), STR_30(19), STR_29(61), 
  9923 ;;		 -> STR_28(18), STR_27(24), STR_26(33), STR_25(16), 
  9924 ;;		 -> STR_24(24), STR_23(4), STR_22(25), STR_21(28), 
  9925 ;;		 -> STR_20(28), STR_19(18), STR_18(15), STR_17(15), 
  9926 ;;		 -> STR_16(15), STR_15(13), STR_14(11), STR_13(11), 
  9927 ;;		 -> STR_12(14), STR_11(36), STR_10(4), STR_9(23), 
  9928 ;;		 -> STR_8(32), STR_7(28), STR_6(54), STR_5(24), 
  9929 ;;		 -> STR_4(16), STR_2(28), STR_1(21), 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  ap              2   41[BANK0 ] PTR void [1]
  9932 ;;		 -> ?_printf(2), 
  9933 ;;  ret             2    0        int 
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  2   29[BANK0 ] int 
  9936 ;; Registers used:
  9937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9943 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9946 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9947 ;;Total ram usage:       14 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:   12
  9950 ;; This function calls:
  9951 ;;		_vfprintf
  9952 ;; This function is called by:
  9953 ;;		_main
  9954 ;;		_PrintMB400
  9955 ;;		_AddRxBuffToModBus
  9956 ;;		_PrintModbus
  9957 ;;		_checkCRC
  9958 ;;		_ModbusFC03
  9959 ;;		_PrintModRespon
  9960 ;;		_ModbusRx
  9961 ;;		_InitialiseString
  9962 ;;		_ReadRX232
  9963 ;;		_TogDebug
  9964 ;;		_ClearEEAddRange
  9965 ;;		_SaveCardDat
  9966 ;;		_ValidateCmd
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text53
  9971  003C56                     __ptext53:
  9972                           	opt callstack 0
  9973  003C56                     _printf:
  9974                           	opt callstack 18
  9975  003C56  0E7F               	movlw	low (?_printf+2)
  9976  003C58  0100               	movlb	0	; () banked
  9977  003C5A  6F89               	movwf	printf@ap& (0+255),b
  9978  003C5C  0E00               	movlw	high (?_printf+2)
  9979  003C5E  6F8A               	movwf	(printf@ap+1)& (0+255),b
  9980  003C60                     
  9981                           ; BSR set to: 0
  9982  003C60  0E00               	movlw	0
  9983  003C62  6F77               	movwf	vfprintf@fp& (0+255),b
  9984  003C64  0E00               	movlw	0
  9985  003C66  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
  9986  003C68  C07D  F079         	movff	printf@fmt,vfprintf@fmt
  9987  003C6C  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
  9988  003C70  0E89               	movlw	low printf@ap
  9989  003C72  6F7B               	movwf	vfprintf@ap& (0+255),b
  9990  003C74  0E00               	movlw	high printf@ap
  9991  003C76  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
  9992  003C78  ECA1  F01A         	call	_vfprintf	;wreg free
  9993  003C7C  0012               	return		;funcret
  9994  003C7E                     __end_of_printf:
  9995                           	opt callstack 0
  9996                           
  9997 ;; *************** function _vfprintf *****************
  9998 ;; Defined at:
  9999 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 10002 ;;		 -> NULL(0), 
 10003 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 10004 ;;		 -> STR_56(29), STR_54(30), STR_53(24), STR_52(25), 
 10005 ;;		 -> STR_51(17), STR_50(27), STR_49(33), STR_47(36), 
 10006 ;;		 -> STR_46(67), STR_45(19), STR_44(29), STR_43(55), 
 10007 ;;		 -> STR_42(17), STR_41(16), STR_40(4), STR_39(35), 
 10008 ;;		 -> STR_38(34), STR_37(54), STR_36(52), STR_35(28), 
 10009 ;;		 -> STR_32(42), STR_31(22), STR_30(19), STR_29(61), 
 10010 ;;		 -> STR_28(18), STR_27(24), STR_26(33), STR_25(16), 
 10011 ;;		 -> STR_24(24), STR_23(4), STR_22(25), STR_21(28), 
 10012 ;;		 -> STR_20(28), STR_19(18), STR_18(15), STR_17(15), 
 10013 ;;		 -> STR_16(15), STR_15(13), STR_14(11), STR_13(11), 
 10014 ;;		 -> STR_12(14), STR_11(36), STR_10(4), STR_9(23), 
 10015 ;;		 -> STR_8(32), STR_7(28), STR_6(54), STR_5(24), 
 10016 ;;		 -> STR_4(16), STR_2(28), STR_1(21), 
 10017 ;;  ap              2   27[BANK0 ] PTR PTR void 
 10018 ;;		 -> printf@ap(2), 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 10021 ;;		 -> STR_56(29), STR_54(30), STR_53(24), STR_52(25), 
 10022 ;;		 -> STR_51(17), STR_50(27), STR_49(33), STR_47(36), 
 10023 ;;		 -> STR_46(67), STR_45(19), STR_44(29), STR_43(55), 
 10024 ;;		 -> STR_42(17), STR_41(16), STR_40(4), STR_39(35), 
 10025 ;;		 -> STR_38(34), STR_37(54), STR_36(52), STR_35(28), 
 10026 ;;		 -> STR_32(42), STR_31(22), STR_30(19), STR_29(61), 
 10027 ;;		 -> STR_28(18), STR_27(24), STR_26(33), STR_25(16), 
 10028 ;;		 -> STR_24(24), STR_23(4), STR_22(25), STR_21(28), 
 10029 ;;		 -> STR_20(28), STR_19(18), STR_18(15), STR_17(15), 
 10030 ;;		 -> STR_16(15), STR_15(13), STR_14(11), STR_13(11), 
 10031 ;;		 -> STR_12(14), STR_11(36), STR_10(4), STR_9(23), 
 10032 ;;		 -> STR_8(32), STR_7(28), STR_6(54), STR_5(24), 
 10033 ;;		 -> STR_4(16), STR_2(28), STR_1(21), 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  2   23[BANK0 ] int 
 10036 ;; Registers used:
 10037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10043 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10047 ;;Total ram usage:        8 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:   11
 10050 ;; This function calls:
 10051 ;;		_vfpfcnvrt
 10052 ;; This function is called by:
 10053 ;;		_printf
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text54
 10058  003542                     __ptext54:
 10059                           	opt callstack 0
 10060  003542                     _vfprintf:
 10061                           	opt callstack 18
 10062  003542                     
 10063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10064  003542  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 10065  003546  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10066  00354A                     
 10067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10068  00354A  0E00               	movlw	0
 10069  00354C  0101               	movlb	1	; () banked
 10070  00354E  6FB2               	movwf	(_nout+1)& (0+255),b
 10071  003550  0E00               	movlw	0
 10072  003552  6FB1               	movwf	_nout& (0+255),b
 10073                           
 10074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10075  003554  EFBF  F01A         	goto	l6407
 10076  003558                     l6405:
 10077                           
 10078                           ; BSR set to: 1
 10079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10080  003558  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 10081  00355C  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10082  003560  0E53               	movlw	low vfprintf@cfmt
 10083  003562  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 10084  003564  0E00               	movlw	high vfprintf@cfmt
 10085  003566  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 10086  003568  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 10087  00356C  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10088  003570  EC95  F000         	call	_vfpfcnvrt	;wreg free
 10089  003574  5049               	movf	?_vfpfcnvrt^0,w,c
 10090  003576  0101               	movlb	1	; () banked
 10091  003578  27B1               	addwf	_nout& (0+255),f,b
 10092  00357A  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 10093  00357C  23B2               	addwfc	(_nout+1)& (0+255),f,b
 10094  00357E                     l6407:
 10095                           
 10096                           ; BSR set to: 1
 10097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10098  00357E  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 10099  003582  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10100  003586                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10101  003586  6AF8               	clrf	tblptru,c
 10102  003588                     	endif
 10103  003588                     	if	0	;tblptru may be non-zero
 10104  003588                     	endif
 10105  003588  0008               	tblrd		*
 10106  00358A  50F5               	movf	tablat,w,c
 10107  00358C  0900               	iorlw	0
 10108  00358E  A4D8               	btfss	status,2,c
 10109  003590  EFCC  F01A         	goto	u6401
 10110  003594  EFCE  F01A         	goto	u6400
 10111  003598                     u6401:
 10112  003598  EFAC  F01A         	goto	l6405
 10113  00359C                     u6400:
 10114  00359C                     
 10115                           ; BSR set to: 1
 10116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10117  00359C  C1B1  F077         	movff	_nout,?_vfprintf
 10118  0035A0  C1B2  F078         	movff	_nout+1,?_vfprintf+1
 10119  0035A4                     
 10120                           ; BSR set to: 1
 10121  0035A4  0012               	return		;funcret
 10122  0035A6                     __end_of_vfprintf:
 10123                           	opt callstack 0
 10124                           
 10125 ;; *************** function _vfpfcnvrt *****************
 10126 ;; Defined at:
 10127 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 10130 ;;		 -> NULL(0), 
 10131 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 10132 ;;		 -> vfprintf@cfmt(2), 
 10133 ;;  ap              2   76[COMRAM] PTR PTR void 
 10134 ;;		 -> printf@ap(2), 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;  llu             8   15[BANK0 ] unsigned long long 
 10137 ;;  ll              8    0[BANK0 ] long long 
 10138 ;;  f               4    0        long long 
 10139 ;;  vp              3    0        PTR void 
 10140 ;;  ct              3    0        unsigned char [3]
 10141 ;;  done            2   11[BANK0 ] int 
 10142 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 10143 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), 
 10144 ;;		 -> STR_34(9), STR_33(12), InitialiseString@SerialNum(11), Command(16), 
 10145 ;;  i               2    0        int 
 10146 ;;  c               1   10[BANK0 ] unsigned char 
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  2   72[COMRAM] int 
 10149 ;; Registers used:
 10150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10156 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10157 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10159 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10160 ;;Total ram usage:       33 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:   10
 10163 ;; This function calls:
 10164 ;;		_atoi
 10165 ;;		_dtoa
 10166 ;;		_fputc
 10167 ;;		_isdigit
 10168 ;;		_stoa
 10169 ;;		_utoa
 10170 ;;		_xtoa
 10171 ;; This function is called by:
 10172 ;;		_vfprintf
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text55
 10177  00012A                     __ptext55:
 10178                           	opt callstack 0
 10179  00012A                     _vfpfcnvrt:
 10180                           	opt callstack 18
 10181  00012A                     
 10182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10183  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10184  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10185  000132  CFDE FFF6          	movff	postinc2,tblptrl
 10186  000136  CFDD FFF7          	movff	postdec2,tblptrh
 10187  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10188  00013A  6AF8               	clrf	tblptru,c
 10189  00013C                     	endif
 10190  00013C                     	if	0	;tblptru may be non-zero
 10191  00013C                     	endif
 10192  00013C  0008               	tblrd		*
 10193  00013E  50F5               	movf	tablat,w,c
 10194  000140  0A25               	xorlw	37
 10195  000142  A4D8               	btfss	status,2,c
 10196  000144  EFA6  F000         	goto	u6231
 10197  000148  EFA8  F000         	goto	u6230
 10198  00014C                     u6231:
 10199  00014C  EF3D  F003         	goto	l6379
 10200  000150                     u6230:
 10201  000150                     
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10203  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10204  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10205  000158  2ADE               	incf	postinc2,f,c
 10206  00015A  0E00               	movlw	0
 10207  00015C  22DD               	addwfc	postdec2,f,c
 10208  00015E                     
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10210  00015E  0E00               	movlw	0
 10211  000160  0100               	movlb	0	; () banked
 10212  000162  6FA4               	movwf	(_width+1)& (0+255),b
 10213  000164  0E00               	movlw	0
 10214  000166  6FA3               	movwf	_width& (0+255),b
 10215  000168  C0A3  F057         	movff	_width,_flags
 10216  00016C  C0A4  F058         	movff	_width+1,_flags+1
 10217  000170                     
 10218                           ; BSR set to: 0
 10219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10220  000170  69A5               	setf	_prec& (0+255),b
 10221  000172  69A6               	setf	(_prec+1)& (0+255),b
 10222  000174                     
 10223                           ; BSR set to: 0
 10224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10225  000174  0E00               	movlw	0
 10226  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10227  000178  0E00               	movlw	0
 10228  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 10229                           
 10230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10231  00017C  EF07  F001         	goto	l6301
 10232  000180                     l6275:
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10236  000180  8057               	bsf	_flags^0,0,c
 10237  000182                     l6277:
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10241  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10242  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10243  00018A  2ADE               	incf	postinc2,f,c
 10244  00018C  0E00               	movlw	0
 10245  00018E  22DD               	addwfc	postdec2,f,c
 10246                           
 10247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10248  000190  EF07  F001         	goto	l6301
 10249  000194                     l6279:
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10253  000194  8257               	bsf	_flags^0,1,c
 10254  000196  EFC1  F000         	goto	l6277
 10255  00019A                     l6283:
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10259  00019A  8457               	bsf	_flags^0,2,c
 10260  00019C  EFC1  F000         	goto	l6277
 10261  0001A0                     l6287:
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10265  0001A0  8657               	bsf	_flags^0,3,c
 10266  0001A2  EFC1  F000         	goto	l6277
 10267  0001A6                     l6291:
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10271  0001A6  8857               	bsf	_flags^0,4,c
 10272  0001A8  EFC1  F000         	goto	l6277
 10273  0001AC                     l6295:
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10277  0001AC  0E00               	movlw	0
 10278  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10279  0001B0  0E01               	movlw	1
 10280  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 10281                           
 10282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10283  0001B4  EF07  F001         	goto	l6301
 10284  0001B8                     l6299:
 10285                           
 10286                           ; BSR set to: 0
 10287  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10288  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10289  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
 10290  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
 10291  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10292  0001C8  6AF8               	clrf	tblptru,c
 10293  0001CA                     	endif
 10294  0001CA                     	if	0	;tblptru may be non-zero
 10295  0001CA                     	endif
 10296  0001CA  0008               	tblrd		*
 10297  0001CC  50F5               	movf	tablat,w,c
 10298  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
 10299  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 10300                           
 10301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10302                           ; Switch size 1, requested type "simple"
 10303                           ; Number of cases is 1, Range of values is 0 to 0
 10304                           ; switch strategies available:
 10305                           ; Name         Instructions Cycles
 10306                           ; simple_byte            4     3 (average)
 10307                           ;	Chosen strategy is simple_byte
 10308  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 10309  0001D4  0A00               	xorlw	0	; case 0
 10310  0001D6  B4D8               	btfsc	status,2,c
 10311  0001D8  EFF0  F000         	goto	l7285
 10312  0001DC  EFD6  F000         	goto	l6295
 10313  0001E0                     l7285:
 10314                           
 10315                           ; BSR set to: 0
 10316                           ; Switch size 1, requested type "simple"
 10317                           ; Number of cases is 5, Range of values is 32 to 48
 10318                           ; switch strategies available:
 10319                           ; Name         Instructions Cycles
 10320                           ; simple_byte           16     9 (average)
 10321                           ;	Chosen strategy is simple_byte
 10322  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
 10323  0001E2  0A20               	xorlw	32	; case 32
 10324  0001E4  B4D8               	btfsc	status,2,c
 10325  0001E6  EFD0  F000         	goto	l6287
 10326  0001EA  0A03               	xorlw	3	; case 35
 10327  0001EC  B4D8               	btfsc	status,2,c
 10328  0001EE  EFD3  F000         	goto	l6291
 10329  0001F2  0A08               	xorlw	8	; case 43
 10330  0001F4  B4D8               	btfsc	status,2,c
 10331  0001F6  EFCD  F000         	goto	l6283
 10332  0001FA  0A06               	xorlw	6	; case 45
 10333  0001FC  B4D8               	btfsc	status,2,c
 10334  0001FE  EFC0  F000         	goto	l6275
 10335  000202  0A1D               	xorlw	29	; case 48
 10336  000204  B4D8               	btfsc	status,2,c
 10337  000206  EFCA  F000         	goto	l6279
 10338  00020A  EFD6  F000         	goto	l6295
 10339  00020E                     l6301:
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10343  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 10344  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10345  000212  B4D8               	btfsc	status,2,c
 10346  000214  EF0E  F001         	goto	u6241
 10347  000218  EF10  F001         	goto	u6240
 10348  00021C                     u6241:
 10349  00021C  EFDC  F000         	goto	l6299
 10350  000220                     u6240:
 10351  000220                     
 10352                           ; BSR set to: 0
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 10354  000220  A057               	btfss	_flags^0,0,c
 10355  000222  EF15  F001         	goto	u6251
 10356  000226  EF17  F001         	goto	u6250
 10357  00022A                     u6251:
 10358  00022A  EF18  F001         	goto	l6305
 10359  00022E                     u6250:
 10360  00022E                     
 10361                           ; BSR set to: 0
 10362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 10363  00022E  9257               	bcf	_flags^0,1,c
 10364  000230                     l6305:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 10368  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10369  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10370  000238  CFDE FFF6          	movff	postinc2,tblptrl
 10371  00023C  CFDD FFF7          	movff	postdec2,tblptrh
 10372  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10373  000240  6AF8               	clrf	tblptru,c
 10374  000242                     	endif
 10375  000242                     	if	0	;tblptru may be non-zero
 10376  000242                     	endif
 10377  000242  0008               	tblrd		*
 10378  000244  50F5               	movf	tablat,w,c
 10379  000246  0A2A               	xorlw	42
 10380  000248  A4D8               	btfss	status,2,c
 10381  00024A  EF29  F001         	goto	u6261
 10382  00024E  EF2B  F001         	goto	u6260
 10383  000252                     u6261:
 10384  000252  EF54  F001         	goto	l6313
 10385  000256                     u6260:
 10386  000256                     
 10387                           ; BSR set to: 0
 10388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 10389  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10390  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10391  00025E  2ADE               	incf	postinc2,f,c
 10392  000260  0E00               	movlw	0
 10393  000262  22DD               	addwfc	postdec2,f,c
 10394                           
 10395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10396  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10397  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10398  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10399  000270  0E02               	movlw	2
 10400  000272  26DE               	addwf	postinc2,f,c
 10401  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10402  000278  0E00               	movlw	0
 10403  00027A  22DD               	addwfc	postdec2,f,c
 10404  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10405  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10406  000284  CFDE F0A3          	movff	postinc2,_width
 10407  000288  CFDD F0A4          	movff	postdec2,_width+1
 10408  00028C                     
 10409                           ; BSR set to: 0
 10410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 10411  00028C  BFA4               	btfsc	(_width+1)& (0+255),7,b
 10412  00028E  EF4D  F001         	goto	u6270
 10413  000292  EF4B  F001         	goto	u6271
 10414  000296                     u6271:
 10415  000296  EF99  F001         	goto	l6323
 10416  00029A                     u6270:
 10417  00029A                     
 10418                           ; BSR set to: 0
 10419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 10420  00029A  8057               	bsf	_flags^0,0,c
 10421                           
 10422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 10423  00029C  6DA3               	negf	_width& (0+255),b
 10424  00029E  1FA4               	comf	(_width+1)& (0+255),f,b
 10425  0002A0  B0D8               	btfsc	status,0,c
 10426  0002A2  2BA4               	incf	(_width+1)& (0+255),f,b
 10427  0002A4  EF99  F001         	goto	l6323
 10428  0002A8                     l6313:
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 10432  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10433  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10434  0002B0  CFDE F00C          	movff	postinc2,atoi@s
 10435  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
 10436  0002B8  EC43  F00E         	call	_atoi	;wreg free
 10437  0002BC  C00C  F0A3         	movff	?_atoi,_width
 10438  0002C0  C00D  F0A4         	movff	?_atoi+1,_width+1
 10439                           
 10440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10441  0002C4  EF6B  F001         	goto	l6317
 10442  0002C8                     l6315:
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 10446  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10447  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10448  0002D0  2ADE               	incf	postinc2,f,c
 10449  0002D2  0E00               	movlw	0
 10450  0002D4  22DD               	addwfc	postdec2,f,c
 10451  0002D6                     l6317:
 10452  0002D6  0ED0               	movlw	208
 10453  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
 10454  0002DA  0EFF               	movlw	255
 10455  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 10456  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10457  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10458  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
 10459  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
 10460  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10461  0002EE  6AF8               	clrf	tblptru,c
 10462  0002F0                     	endif
 10463  0002F0                     	if	0	;tblptru may be non-zero
 10464  0002F0                     	endif
 10465  0002F0  0008               	tblrd		*
 10466  0002F2  50F5               	movf	tablat,w,c
 10467  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 10468  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 10469  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
 10470  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 10471  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 10472  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 10473  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 10474  000302  E10A               	bnz	u6280
 10475  000304  0E0A               	movlw	10
 10476  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 10477  000308  A0D8               	btfss	status,0,c
 10478  00030A  EF89  F001         	goto	u6281
 10479  00030E  EF8C  F001         	goto	u6280
 10480  000312                     u6281:
 10481  000312  0E01               	movlw	1
 10482  000314  EF8D  F001         	goto	u6290
 10483  000318                     u6280:
 10484  000318  0E00               	movlw	0
 10485  00031A                     u6290:
 10486  00031A  0100               	movlb	0	; () banked
 10487  00031C  6F6D               	movwf	_vfpfcnvrt$1572& (0+255),b
 10488  00031E  6B6E               	clrf	(_vfpfcnvrt$1572+1)& (0+255),b
 10489  000320                     
 10490                           ; BSR set to: 0
 10491  000320  516D               	movf	_vfpfcnvrt$1572& (0+255),w,b
 10492  000322  116E               	iorwf	(_vfpfcnvrt$1572+1)& (0+255),w,b
 10493  000324  A4D8               	btfss	status,2,c
 10494  000326  EF97  F001         	goto	u6301
 10495  00032A  EF99  F001         	goto	u6300
 10496  00032E                     u6301:
 10497  00032E  EF64  F001         	goto	l6315
 10498  000332                     u6300:
 10499  000332                     l6323:
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10503  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10504  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10505  00033A  CFDE FFF6          	movff	postinc2,tblptrl
 10506  00033E  CFDD FFF7          	movff	postdec2,tblptrh
 10507  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10508  000342  6AF8               	clrf	tblptru,c
 10509  000344                     	endif
 10510  000344                     	if	0	;tblptru may be non-zero
 10511  000344                     	endif
 10512  000344  0008               	tblrd		*
 10513  000346  50F5               	movf	tablat,w,c
 10514  000348  0A64               	xorlw	100
 10515  00034A  B4D8               	btfsc	status,2,c
 10516  00034C  EFAA  F001         	goto	u6311
 10517  000350  EFAC  F001         	goto	u6310
 10518  000354                     u6311:
 10519  000354  EFBF  F001         	goto	l6327
 10520  000358                     u6310:
 10521  000358                     
 10522                           ; BSR set to: 0
 10523  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10524  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10525  000360  CFDE FFF6          	movff	postinc2,tblptrl
 10526  000364  CFDD FFF7          	movff	postdec2,tblptrh
 10527  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10528  000368  6AF8               	clrf	tblptru,c
 10529  00036A                     	endif
 10530  00036A                     	if	0	;tblptru may be non-zero
 10531  00036A                     	endif
 10532  00036A  0008               	tblrd		*
 10533  00036C  50F5               	movf	tablat,w,c
 10534  00036E  0A69               	xorlw	105
 10535  000370  A4D8               	btfss	status,2,c
 10536  000372  EFBD  F001         	goto	u6321
 10537  000376  EFBF  F001         	goto	u6320
 10538  00037A                     u6321:
 10539  00037A  EFFF  F001         	goto	l6333
 10540  00037E                     u6320:
 10541  00037E                     l6327:
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 10545  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10546  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10547  000386  2ADE               	incf	postinc2,f,c
 10548  000388  0E00               	movlw	0
 10549  00038A  22DD               	addwfc	postdec2,f,c
 10550                           
 10551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10552  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10553  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10554  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10555  000398  0E02               	movlw	2
 10556  00039A  26DE               	addwf	postinc2,f,c
 10557  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10558  0003A0  0E00               	movlw	0
 10559  0003A2  22DD               	addwfc	postdec2,f,c
 10560  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10561  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10562  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 10563  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 10564  0003B4  0E00               	movlw	0
 10565  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10566  0003B8  0EFF               	movlw	-1
 10567  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10568  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10569  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10570  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10571  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10572  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10573  0003C6                     
 10574                           ; BSR set to: 0
 10575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 10576  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 10577  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10578  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 10579  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10580  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10581  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10582  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10583  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10584  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10585  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10586  0003EE  EC84  F005         	call	_dtoa	;wreg free
 10587  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 10588  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10589  0003FA  EF59  F003         	goto	l1122
 10590  0003FE                     l6333:
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 10594  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10595  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10596  000406  CFDE FFF6          	movff	postinc2,tblptrl
 10597  00040A  CFDD FFF7          	movff	postdec2,tblptrh
 10598  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10599  00040E  6AF8               	clrf	tblptru,c
 10600  000410                     	endif
 10601  000410                     	if	0	;tblptru may be non-zero
 10602  000410                     	endif
 10603  000410  0008               	tblrd		*
 10604  000412  50F5               	movf	tablat,w,c
 10605  000414  0A73               	xorlw	115
 10606  000416  A4D8               	btfss	status,2,c
 10607  000418  EF10  F002         	goto	u6331
 10608  00041C  EF12  F002         	goto	u6330
 10609  000420                     u6331:
 10610  000420  EF3D  F002         	goto	l6341
 10611  000424                     u6330:
 10612  000424                     
 10613                           ; BSR set to: 0
 10614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 10615  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10616  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10617  00042C  2ADE               	incf	postinc2,f,c
 10618  00042E  0E00               	movlw	0
 10619  000430  22DD               	addwfc	postdec2,f,c
 10620                           
 10621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 10622  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10623  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10624  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10625  00043E  0E02               	movlw	2
 10626  000440  26DE               	addwf	postinc2,f,c
 10627  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10628  000446  0E00               	movlw	0
 10629  000448  22DD               	addwfc	postdec2,f,c
 10630  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10631  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10632  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 10633  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 10634  00045A                     
 10635                           ; BSR set to: 0
 10636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 10637  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 10638  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 10639  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 10640  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 10641  00046A  EC76  F00D         	call	_stoa	;wreg free
 10642  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 10643  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 10644  000476  EF59  F003         	goto	l1122
 10645  00047A                     l6341:
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 10649  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10650  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10651  000482  CFDE FFF6          	movff	postinc2,tblptrl
 10652  000486  CFDD FFF7          	movff	postdec2,tblptrh
 10653  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10654  00048A  6AF8               	clrf	tblptru,c
 10655  00048C                     	endif
 10656  00048C                     	if	0	;tblptru may be non-zero
 10657  00048C                     	endif
 10658  00048C  0008               	tblrd		*
 10659  00048E  50F5               	movf	tablat,w,c
 10660  000490  0A75               	xorlw	117
 10661  000492  A4D8               	btfss	status,2,c
 10662  000494  EF4E  F002         	goto	u6341
 10663  000498  EF50  F002         	goto	u6340
 10664  00049C                     u6341:
 10665  00049C  EF91  F002         	goto	l6349
 10666  0004A0                     u6340:
 10667  0004A0                     
 10668                           ; BSR set to: 0
 10669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 10670  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10671  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10672  0004A8  2ADE               	incf	postinc2,f,c
 10673  0004AA  0E00               	movlw	0
 10674  0004AC  22DD               	addwfc	postdec2,f,c
 10675                           
 10676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10677  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10678  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10679  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10680  0004BA  0E02               	movlw	2
 10681  0004BC  26DE               	addwf	postinc2,f,c
 10682  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10683  0004C2  0E00               	movlw	0
 10684  0004C4  22DD               	addwfc	postdec2,f,c
 10685  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10686  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10687  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 10688  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 10689  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10690  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10691  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10692  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10693  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10694  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10695  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10696  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10697  0004EA                     
 10698                           ; BSR set to: 0
 10699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 10700  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 10701  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10702  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 10703  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10704  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10705  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10706  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10707  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10708  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10709  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10710  000512  ECCE  F00A         	call	_utoa	;wreg free
 10711  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 10712  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 10713  00051E  EF59  F003         	goto	l1122
 10714  000522                     l6349:
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10718  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10719  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10720  00052A  CFDE FFF6          	movff	postinc2,tblptrl
 10721  00052E  CFDD FFF7          	movff	postdec2,tblptrh
 10722  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10723  000532  6AF8               	clrf	tblptru,c
 10724  000534                     	endif
 10725  000534                     	if	0	;tblptru may be non-zero
 10726  000534                     	endif
 10727  000534  0008               	tblrd		*
 10728  000536  50F5               	movf	tablat,w,c
 10729  000538  0A78               	xorlw	120
 10730  00053A  B4D8               	btfsc	status,2,c
 10731  00053C  EFA2  F002         	goto	u6351
 10732  000540  EFA4  F002         	goto	u6350
 10733  000544                     u6351:
 10734  000544  EFB7  F002         	goto	l6353
 10735  000548                     u6350:
 10736  000548                     
 10737                           ; BSR set to: 0
 10738  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10739  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10740  000550  CFDE FFF6          	movff	postinc2,tblptrl
 10741  000554  CFDD FFF7          	movff	postdec2,tblptrh
 10742  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10743  000558  6AF8               	clrf	tblptru,c
 10744  00055A                     	endif
 10745  00055A                     	if	0	;tblptru may be non-zero
 10746  00055A                     	endif
 10747  00055A  0008               	tblrd		*
 10748  00055C  50F5               	movf	tablat,w,c
 10749  00055E  0A58               	xorlw	88
 10750  000560  A4D8               	btfss	status,2,c
 10751  000562  EFB5  F002         	goto	u6361
 10752  000566  EFB7  F002         	goto	u6360
 10753  00056A                     u6361:
 10754  00056A  EF06  F003         	goto	l6363
 10755  00056E                     u6360:
 10756  00056E                     l6353:
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 10760  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10761  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10762  000576  CFDE FFF6          	movff	postinc2,tblptrl
 10763  00057A  CFDD FFF7          	movff	postdec2,tblptrh
 10764  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10765  00057E  6AF8               	clrf	tblptru,c
 10766  000580                     	endif
 10767  000580                     	if	0	;tblptru may be non-zero
 10768  000580                     	endif
 10769  000580  0008               	tblrd		*
 10770  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 10771  000586                     
 10772                           ; BSR set to: 0
 10773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 10774  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10775  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10776  00058E  2ADE               	incf	postinc2,f,c
 10777  000590  0E00               	movlw	0
 10778  000592  22DD               	addwfc	postdec2,f,c
 10779  000594                     
 10780                           ; BSR set to: 0
 10781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10782  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10783  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10784  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 10785  0005A0  0E02               	movlw	2
 10786  0005A2  26DE               	addwf	postinc2,f,c
 10787  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 10788  0005A8  0E00               	movlw	0
 10789  0005AA  22DD               	addwfc	postdec2,f,c
 10790  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10791  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10792  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 10793  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 10794  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10795  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10796  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10797  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10798  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10799  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10800  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10801  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10802  0005D0                     
 10803                           ; BSR set to: 0
 10804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 10805  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 10806  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10807  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 10808  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10809  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10810  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10811  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10812  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10813  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10814  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10815  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 10816  0005FC  ECF4  F006         	call	_xtoa	;wreg free
 10817  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 10818  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10819  000608  EF59  F003         	goto	l1122
 10820  00060C                     l6363:
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10824  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10825  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10826  000614  CFDE FFF6          	movff	postinc2,tblptrl
 10827  000618  CFDD FFF7          	movff	postdec2,tblptrh
 10828  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10829  00061C  6AF8               	clrf	tblptru,c
 10830  00061E                     	endif
 10831  00061E                     	if	0	;tblptru may be non-zero
 10832  00061E                     	endif
 10833  00061E  0008               	tblrd		*
 10834  000620  50F5               	movf	tablat,w,c
 10835  000622  0A25               	xorlw	37
 10836  000624  A4D8               	btfss	status,2,c
 10837  000626  EF17  F003         	goto	u6371
 10838  00062A  EF19  F003         	goto	u6370
 10839  00062E                     u6371:
 10840  00062E  EF30  F003         	goto	l6373
 10841  000632                     u6370:
 10842  000632                     
 10843                           ; BSR set to: 0
 10844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10845  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10846  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10847  00063A  2ADE               	incf	postinc2,f,c
 10848  00063C  0E00               	movlw	0
 10849  00063E  22DD               	addwfc	postdec2,f,c
 10850  000640                     
 10851                           ; BSR set to: 0
 10852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10853  000640  0E00               	movlw	0
 10854  000642  6E08               	movwf	(fputc@c+1)^0,c
 10855  000644  0E25               	movlw	37
 10856  000646  6E07               	movwf	fputc@c^0,c
 10857  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 10858  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10859  000650  ECE4  F017         	call	_fputc	;wreg free
 10860  000654                     l6369:
 10861                           
 10862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10863  000654  0E00               	movlw	0
 10864  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 10865  000658  0E01               	movlw	1
 10866  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
 10867  00065C  EF59  F003         	goto	l1122
 10868  000660                     l6373:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10872  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10873  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10874  000668  2ADE               	incf	postinc2,f,c
 10875  00066A  0E00               	movlw	0
 10876  00066C  22DD               	addwfc	postdec2,f,c
 10877  00066E                     
 10878                           ; BSR set to: 0
 10879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10880  00066E  0E00               	movlw	0
 10881  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 10882  000672  0E00               	movlw	0
 10883  000674  6E49               	movwf	?_vfpfcnvrt^0,c
 10884  000676  EF59  F003         	goto	l1122
 10885  00067A                     l6379:
 10886                           
 10887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10888  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10889  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10890  000682  CFDE FFF6          	movff	postinc2,tblptrl
 10891  000686  CFDD FFF7          	movff	postdec2,tblptrh
 10892  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10893  00068A  6AF8               	clrf	tblptru,c
 10894  00068C                     	endif
 10895  00068C                     	if	0	;tblptru may be non-zero
 10896  00068C                     	endif
 10897  00068C  0008               	tblrd		*
 10898  00068E  50F5               	movf	tablat,w,c
 10899  000690  6E07               	movwf	fputc@c^0,c
 10900  000692  6A08               	clrf	(fputc@c+1)^0,c
 10901  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 10902  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10903  00069C  ECE4  F017         	call	_fputc	;wreg free
 10904  0006A0                     
 10905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10906  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10907  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10908  0006A8  2ADE               	incf	postinc2,f,c
 10909  0006AA  0E00               	movlw	0
 10910  0006AC  22DD               	addwfc	postdec2,f,c
 10911  0006AE  EF2A  F003         	goto	l6369
 10912  0006B2                     l1122:
 10913  0006B2  0012               	return		;funcret
 10914  0006B4                     __end_of_vfpfcnvrt:
 10915                           	opt callstack 0
 10916                           
 10917 ;; *************** function _xtoa *****************
 10918 ;; Defined at:
 10919 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 10922 ;;		 -> NULL(0), 
 10923 ;;  d               8   35[COMRAM] unsigned long long 
 10924 ;;  x               1   43[COMRAM] unsigned char 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  n               8   60[COMRAM] unsigned long long 
 10927 ;;  c               2   70[COMRAM] int 
 10928 ;;  i               2   68[COMRAM] int 
 10929 ;;  w               2   58[COMRAM] int 
 10930 ;;  p               2   56[COMRAM] int 
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  2   33[COMRAM] int 
 10933 ;; Registers used:
 10934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10940 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10941 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10942 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10943 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10944 ;;Total ram usage:       39 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:    9
 10947 ;; This function calls:
 10948 ;;		_isalpha
 10949 ;;		_isupper
 10950 ;;		_pad
 10951 ;;		_toupper
 10952 ;; This function is called by:
 10953 ;;		_vfpfcnvrt
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           	psect	text56
 10958  000DE8                     __ptext56:
 10959                           	opt callstack 0
 10960  000DE8                     _xtoa:
 10961                           	opt callstack 18
 10962  000DE8                     
 10963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10964  000DE8  0100               	movlb	0	; () banked
 10965  000DEA  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10966  000DEC  EFFA  F006         	goto	u5991
 10967  000DF0  EFFC  F006         	goto	u5990
 10968  000DF4                     u5991:
 10969  000DF4  EFFD  F006         	goto	l6161
 10970  000DF8                     u5990:
 10971  000DF8                     
 10972                           ; BSR set to: 0
 10973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10974  000DF8  9257               	bcf	_flags^0,1,c
 10975  000DFA                     l6161:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10979  000DFA  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 10980  000DFC  EF0A  F007         	goto	u6000
 10981  000E00  51A6               	movf	(_prec+1)& (0+255),w,b
 10982  000E02  E106               	bnz	u6001
 10983  000E04  05A5               	decf	_prec& (0+255),w,b
 10984  000E06  B0D8               	btfsc	status,0,c
 10985  000E08  EF08  F007         	goto	u6001
 10986  000E0C  EF0A  F007         	goto	u6000
 10987  000E10                     u6001:
 10988  000E10  EF10  F007         	goto	l1068
 10989  000E14                     u6000:
 10990  000E14                     
 10991                           ; BSR set to: 0
 10992  000E14  0E00               	movlw	0
 10993  000E16  6E3A               	movwf	(xtoa@p+1)^0,c
 10994  000E18  0E01               	movlw	1
 10995  000E1A  6E39               	movwf	xtoa@p^0,c
 10996  000E1C  EF14  F007         	goto	l1070
 10997  000E20                     l1068:
 10998                           
 10999                           ; BSR set to: 0
 11000  000E20  C0A5  F039         	movff	_prec,xtoa@p
 11001  000E24  C0A6  F03A         	movff	_prec+1,xtoa@p+1
 11002  000E28                     l1070:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11006  000E28  C0A3  F03B         	movff	_width,xtoa@w
 11007  000E2C  C0A4  F03C         	movff	_width+1,xtoa@w+1
 11008                           
 11009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11010  000E30  A857               	btfss	_flags^0,4,c
 11011  000E32  EF1D  F007         	goto	u6011
 11012  000E36  EF1F  F007         	goto	u6010
 11013  000E3A                     u6011:
 11014  000E3A  EF23  F007         	goto	l6167
 11015  000E3E                     u6010:
 11016  000E3E                     
 11017                           ; BSR set to: 0
 11018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11019  000E3E  0EFE               	movlw	254
 11020  000E40  263B               	addwf	xtoa@w^0,f,c
 11021  000E42  0EFF               	movlw	255
 11022  000E44  223C               	addwfc	(xtoa@w+1)^0,f,c
 11023  000E46                     l6167:
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11027  000E46  C024  F03D         	movff	xtoa@d,xtoa@n
 11028  000E4A  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 11029  000E4E  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 11030  000E52  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 11031  000E56  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 11032  000E5A  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 11033  000E5E  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 11034  000E62  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 11035  000E66                     
 11036                           ; BSR set to: 0
 11037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11038  000E66  0E00               	movlw	0
 11039  000E68  6E46               	movwf	(xtoa@i+1)^0,c
 11040  000E6A  0E1F               	movlw	31
 11041  000E6C  6E45               	movwf	xtoa@i^0,c
 11042  000E6E                     
 11043                           ; BSR set to: 0
 11044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11045  000E6E  0E00               	movlw	0
 11046  000E70  0101               	movlb	1	; () banked
 11047  000E72  6FD3               	movwf	(_dbuf+31)& (0+255),b
 11048                           
 11049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11050  000E74  EFEF  F007         	goto	l6203
 11051  000E78                     l6173:
 11052                           
 11053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11054  000E78  0645               	decf	xtoa@i^0,f,c
 11055  000E7A  A0D8               	btfss	status,0,c
 11056  000E7C  0646               	decf	(xtoa@i+1)^0,f,c
 11057  000E7E                     
 11058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11059  000E7E  0E0F               	movlw	15
 11060  000E80  143D               	andwf	xtoa@n^0,w,c
 11061  000E82  6E47               	movwf	xtoa@c^0,c
 11062  000E84  6A48               	clrf	(xtoa@c+1)^0,c
 11063  000E86                     
 11064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11065  000E86  BE48               	btfsc	(xtoa@c+1)^0,7,c
 11066  000E88  EF4F  F007         	goto	u6021
 11067  000E8C  5048               	movf	(xtoa@c+1)^0,w,c
 11068  000E8E  E109               	bnz	u6020
 11069  000E90  0E0A               	movlw	10
 11070  000E92  5C47               	subwf	xtoa@c^0,w,c
 11071  000E94  A0D8               	btfss	status,0,c
 11072  000E96  EF4F  F007         	goto	u6021
 11073  000E9A  EF51  F007         	goto	u6020
 11074  000E9E                     u6021:
 11075  000E9E  EF59  F007         	goto	l6181
 11076  000EA2                     u6020:
 11077  000EA2  0E57               	movlw	87
 11078  000EA4  2447               	addwf	xtoa@c^0,w,c
 11079  000EA6  6E47               	movwf	xtoa@c^0,c
 11080  000EA8  0E00               	movlw	0
 11081  000EAA  2048               	addwfc	(xtoa@c+1)^0,w,c
 11082  000EAC  6E48               	movwf	(xtoa@c+1)^0,c
 11083  000EAE  EF5F  F007         	goto	l1077
 11084  000EB2                     l6181:
 11085  000EB2  0E30               	movlw	48
 11086  000EB4  2447               	addwf	xtoa@c^0,w,c
 11087  000EB6  6E47               	movwf	xtoa@c^0,c
 11088  000EB8  0E00               	movlw	0
 11089  000EBA  2048               	addwfc	(xtoa@c+1)^0,w,c
 11090  000EBC  6E48               	movwf	(xtoa@c+1)^0,c
 11091  000EBE                     l1077:
 11092  000EBE  0EBF               	movlw	191
 11093  000EC0  6E2D               	movwf	??_xtoa^0,c
 11094  000EC2  0EFF               	movlw	255
 11095  000EC4  6E2E               	movwf	(??_xtoa+1)^0,c
 11096  000EC6  502C               	movf	xtoa@x^0,w,c
 11097  000EC8  6E2F               	movwf	(??_xtoa+2)^0,c
 11098  000ECA  6A30               	clrf	(??_xtoa+3)^0,c
 11099  000ECC  502D               	movf	??_xtoa^0,w,c
 11100  000ECE  262F               	addwf	(??_xtoa+2)^0,f,c
 11101  000ED0  502E               	movf	(??_xtoa+1)^0,w,c
 11102  000ED2  2230               	addwfc	(??_xtoa+3)^0,f,c
 11103  000ED4  5030               	movf	(??_xtoa+3)^0,w,c
 11104  000ED6  E10A               	bnz	u6030
 11105  000ED8  0E1A               	movlw	26
 11106  000EDA  5C2F               	subwf	(??_xtoa+2)^0,w,c
 11107  000EDC  A0D8               	btfss	status,0,c
 11108  000EDE  EF73  F007         	goto	u6031
 11109  000EE2  EF76  F007         	goto	u6030
 11110  000EE6                     u6031:
 11111  000EE6  0E01               	movlw	1
 11112  000EE8  EF77  F007         	goto	u6040
 11113  000EEC                     u6030:
 11114  000EEC  0E00               	movlw	0
 11115  000EEE                     u6040:
 11116  000EEE  6E35               	movwf	_xtoa$1557^0,c
 11117  000EF0  6A36               	clrf	(_xtoa$1557+1)^0,c
 11118  000EF2  5035               	movf	_xtoa$1557^0,w,c
 11119  000EF4  1036               	iorwf	(_xtoa$1557+1)^0,w,c
 11120  000EF6  B4D8               	btfsc	status,2,c
 11121  000EF8  EF80  F007         	goto	u6051
 11122  000EFC  EF82  F007         	goto	u6050
 11123  000F00                     u6051:
 11124  000F00  EFB2  F007         	goto	l6195
 11125  000F04                     u6050:
 11126  000F04  0E9F               	movlw	159
 11127  000F06  6E2D               	movwf	??_xtoa^0,c
 11128  000F08  0EFF               	movlw	255
 11129  000F0A  6E2E               	movwf	(??_xtoa+1)^0,c
 11130  000F0C  0E20               	movlw	32
 11131  000F0E  1047               	iorwf	xtoa@c^0,w,c
 11132  000F10  6E2F               	movwf	(??_xtoa+2)^0,c
 11133  000F12  0E00               	movlw	0
 11134  000F14  1048               	iorwf	(xtoa@c+1)^0,w,c
 11135  000F16  6E30               	movwf	(??_xtoa+3)^0,c
 11136  000F18  502D               	movf	??_xtoa^0,w,c
 11137  000F1A  262F               	addwf	(??_xtoa+2)^0,f,c
 11138  000F1C  502E               	movf	(??_xtoa+1)^0,w,c
 11139  000F1E  2230               	addwfc	(??_xtoa+3)^0,f,c
 11140  000F20  5030               	movf	(??_xtoa+3)^0,w,c
 11141  000F22  E10A               	bnz	u6060
 11142  000F24  0E1A               	movlw	26
 11143  000F26  5C2F               	subwf	(??_xtoa+2)^0,w,c
 11144  000F28  A0D8               	btfss	status,0,c
 11145  000F2A  EF99  F007         	goto	u6061
 11146  000F2E  EF9C  F007         	goto	u6060
 11147  000F32                     u6061:
 11148  000F32  0E01               	movlw	1
 11149  000F34  EF9D  F007         	goto	u6070
 11150  000F38                     u6060:
 11151  000F38  0E00               	movlw	0
 11152  000F3A                     u6070:
 11153  000F3A  6E37               	movwf	_xtoa$1558^0,c
 11154  000F3C  6A38               	clrf	(_xtoa$1558+1)^0,c
 11155  000F3E  5037               	movf	_xtoa$1558^0,w,c
 11156  000F40  1038               	iorwf	(_xtoa$1558+1)^0,w,c
 11157  000F42  B4D8               	btfsc	status,2,c
 11158  000F44  EFA6  F007         	goto	u6081
 11159  000F48  EFA8  F007         	goto	u6080
 11160  000F4C                     u6081:
 11161  000F4C  EFB2  F007         	goto	l6195
 11162  000F50                     u6080:
 11163  000F50                     
 11164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11165  000F50  C047  F00B         	movff	xtoa@c,toupper@c
 11166  000F54  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 11167  000F58  EC31  F01B         	call	_toupper	;wreg free
 11168  000F5C  C00B  F047         	movff	?_toupper,xtoa@c
 11169  000F60  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 11170  000F64                     l6195:
 11171                           
 11172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11173  000F64  0EB4               	movlw	low _dbuf
 11174  000F66  2445               	addwf	xtoa@i^0,w,c
 11175  000F68  6ED9               	movwf	fsr2l,c
 11176  000F6A  0E01               	movlw	high _dbuf
 11177  000F6C  2046               	addwfc	(xtoa@i+1)^0,w,c
 11178  000F6E  6EDA               	movwf	fsr2h,c
 11179  000F70  C047  FFDF         	movff	xtoa@c,indf2
 11180  000F74                     
 11181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11182  000F74  0639               	decf	xtoa@p^0,f,c
 11183  000F76  A0D8               	btfss	status,0,c
 11184  000F78  063A               	decf	(xtoa@p+1)^0,f,c
 11185  000F7A                     
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11187  000F7A  063B               	decf	xtoa@w^0,f,c
 11188  000F7C  A0D8               	btfss	status,0,c
 11189  000F7E  063C               	decf	(xtoa@w+1)^0,f,c
 11190  000F80                     
 11191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11192  000F80  C03D  F02D         	movff	xtoa@n,??_xtoa
 11193  000F84  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 11194  000F88  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 11195  000F8C  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 11196  000F90  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 11197  000F94  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 11198  000F98  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 11199  000F9C  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 11200  000FA0  0E05               	movlw	5
 11201  000FA2  EFDC  F007         	goto	u6090
 11202  000FA6                     u6095:
 11203  000FA6  90D8               	bcf	status,0,c
 11204  000FA8  3234               	rrcf	(??_xtoa+7)^0,f,c
 11205  000FAA  3233               	rrcf	(??_xtoa+6)^0,f,c
 11206  000FAC  3232               	rrcf	(??_xtoa+5)^0,f,c
 11207  000FAE  3231               	rrcf	(??_xtoa+4)^0,f,c
 11208  000FB0  3230               	rrcf	(??_xtoa+3)^0,f,c
 11209  000FB2  322F               	rrcf	(??_xtoa+2)^0,f,c
 11210  000FB4  322E               	rrcf	(??_xtoa+1)^0,f,c
 11211  000FB6  322D               	rrcf	??_xtoa^0,f,c
 11212  000FB8                     u6090:
 11213  000FB8  2EE8               	decfsz	wreg,f,c
 11214  000FBA  EFD3  F007         	goto	u6095
 11215  000FBE  C02D  F03D         	movff	??_xtoa,xtoa@n
 11216  000FC2  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 11217  000FC6  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 11218  000FCA  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 11219  000FCE  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 11220  000FD2  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 11221  000FD6  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 11222  000FDA  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 11223  000FDE                     l6203:
 11224                           
 11225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11226  000FDE  BE46               	btfsc	(xtoa@i+1)^0,7,c
 11227  000FE0  EFFB  F007         	goto	u6101
 11228  000FE4  5046               	movf	(xtoa@i+1)^0,w,c
 11229  000FE6  E109               	bnz	u6100
 11230  000FE8  0E02               	movlw	2
 11231  000FEA  5C45               	subwf	xtoa@i^0,w,c
 11232  000FEC  A0D8               	btfss	status,0,c
 11233  000FEE  EFFB  F007         	goto	u6101
 11234  000FF2  EFFD  F007         	goto	u6100
 11235  000FF6                     u6101:
 11236  000FF6  EF2D  F008         	goto	l1091
 11237  000FFA                     u6100:
 11238  000FFA  503D               	movf	xtoa@n^0,w,c
 11239  000FFC  103E               	iorwf	(xtoa@n+1)^0,w,c
 11240  000FFE  103F               	iorwf	(xtoa@n+2)^0,w,c
 11241  001000  1040               	iorwf	(xtoa@n+3)^0,w,c
 11242  001002  1041               	iorwf	(xtoa@n+4)^0,w,c
 11243  001004  1042               	iorwf	(xtoa@n+5)^0,w,c
 11244  001006  1043               	iorwf	(xtoa@n+6)^0,w,c
 11245  001008  1044               	iorwf	(xtoa@n+7)^0,w,c
 11246  00100A  A4D8               	btfss	status,2,c
 11247  00100C  EF0A  F008         	goto	u6111
 11248  001010  EF0C  F008         	goto	u6110
 11249  001014                     u6111:
 11250  001014  EF3C  F007         	goto	l6173
 11251  001018                     u6110:
 11252  001018  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 11253  00101A  EF19  F008         	goto	u6120
 11254  00101E  503A               	movf	(xtoa@p+1)^0,w,c
 11255  001020  E106               	bnz	u6121
 11256  001022  0439               	decf	xtoa@p^0,w,c
 11257  001024  B0D8               	btfsc	status,0,c
 11258  001026  EF17  F008         	goto	u6121
 11259  00102A  EF19  F008         	goto	u6120
 11260  00102E                     u6121:
 11261  00102E  EF3C  F007         	goto	l6173
 11262  001032                     u6120:
 11263  001032  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 11264  001034  EF24  F008         	goto	u6131
 11265  001038  503C               	movf	(xtoa@w+1)^0,w,c
 11266  00103A  E108               	bnz	u6130
 11267  00103C  043B               	decf	xtoa@w^0,w,c
 11268  00103E  A0D8               	btfss	status,0,c
 11269  001040  EF24  F008         	goto	u6131
 11270  001044  EF26  F008         	goto	u6130
 11271  001048                     u6131:
 11272  001048  EF2D  F008         	goto	l1091
 11273  00104C                     u6130:
 11274  00104C  B257               	btfsc	_flags^0,1,c
 11275  00104E  EF2B  F008         	goto	u6141
 11276  001052  EF2D  F008         	goto	u6140
 11277  001056                     u6141:
 11278  001056  EF3C  F007         	goto	l6173
 11279  00105A                     u6140:
 11280  00105A                     l1091:
 11281                           
 11282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11283  00105A  A857               	btfss	_flags^0,4,c
 11284  00105C  EF32  F008         	goto	u6151
 11285  001060  EF34  F008         	goto	u6150
 11286  001064                     u6151:
 11287  001064  EF4A  F008         	goto	l6219
 11288  001068                     u6150:
 11289  001068                     
 11290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11291  001068  0645               	decf	xtoa@i^0,f,c
 11292  00106A  A0D8               	btfss	status,0,c
 11293  00106C  0646               	decf	(xtoa@i+1)^0,f,c
 11294  00106E                     
 11295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11296  00106E  0EB4               	movlw	low _dbuf
 11297  001070  2445               	addwf	xtoa@i^0,w,c
 11298  001072  6ED9               	movwf	fsr2l,c
 11299  001074  0E01               	movlw	high _dbuf
 11300  001076  2046               	addwfc	(xtoa@i+1)^0,w,c
 11301  001078  6EDA               	movwf	fsr2h,c
 11302  00107A  C02C  FFDF         	movff	xtoa@x,indf2
 11303  00107E                     
 11304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11305  00107E  0645               	decf	xtoa@i^0,f,c
 11306  001080  A0D8               	btfss	status,0,c
 11307  001082  0646               	decf	(xtoa@i+1)^0,f,c
 11308                           
 11309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11310  001084  0EB4               	movlw	low _dbuf
 11311  001086  2445               	addwf	xtoa@i^0,w,c
 11312  001088  6ED9               	movwf	fsr2l,c
 11313  00108A  0E01               	movlw	high _dbuf
 11314  00108C  2046               	addwfc	(xtoa@i+1)^0,w,c
 11315  00108E  6EDA               	movwf	fsr2h,c
 11316  001090  0E30               	movlw	48
 11317  001092  6EDF               	movwf	indf2,c
 11318  001094                     l6219:
 11319                           
 11320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11321  001094  C022  F017         	movff	xtoa@fp,pad@fp
 11322  001098  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 11323  00109C  0EB4               	movlw	low _dbuf
 11324  00109E  2445               	addwf	xtoa@i^0,w,c
 11325  0010A0  6E19               	movwf	pad@buf^0,c
 11326  0010A2  0E01               	movlw	high _dbuf
 11327  0010A4  2046               	addwfc	(xtoa@i+1)^0,w,c
 11328  0010A6  6E1A               	movwf	(pad@buf+1)^0,c
 11329  0010A8  C03B  F01B         	movff	xtoa@w,pad@p
 11330  0010AC  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 11331  0010B0  EC6C  F016         	call	_pad	;wreg free
 11332  0010B4  C017  F022         	movff	?_pad,?_xtoa
 11333  0010B8  C018  F023         	movff	?_pad+1,?_xtoa+1
 11334  0010BC  0012               	return		;funcret
 11335  0010BE                     __end_of_xtoa:
 11336                           	opt callstack 0
 11337                           
 11338 ;; *************** function _toupper *****************
 11339 ;; Defined at:
 11340 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  c               2   10[COMRAM] int 
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;		None
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  2   10[COMRAM] int 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, status,0
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11358 ;;Total ram usage:        8 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    5
 11361 ;; This function calls:
 11362 ;;		_islower
 11363 ;; This function is called by:
 11364 ;;		_xtoa
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           	psect	text57
 11369  003662                     __ptext57:
 11370                           	opt callstack 0
 11371  003662                     _toupper:
 11372                           	opt callstack 21
 11373  003662  0E9F               	movlw	159
 11374  003664  6E0D               	movwf	??_toupper^0,c
 11375  003666  0EFF               	movlw	255
 11376  003668  6E0E               	movwf	(??_toupper+1)^0,c
 11377  00366A  C00B  F00F         	movff	toupper@c,??_toupper+2
 11378  00366E  C00C  F010         	movff	toupper@c+1,??_toupper+3
 11379  003672  500D               	movf	??_toupper^0,w,c
 11380  003674  260F               	addwf	(??_toupper+2)^0,f,c
 11381  003676  500E               	movf	(??_toupper+1)^0,w,c
 11382  003678  2210               	addwfc	(??_toupper+3)^0,f,c
 11383  00367A  5010               	movf	(??_toupper+3)^0,w,c
 11384  00367C  E10A               	bnz	u5400
 11385  00367E  0E1A               	movlw	26
 11386  003680  5C0F               	subwf	(??_toupper+2)^0,w,c
 11387  003682  A0D8               	btfss	status,0,c
 11388  003684  EF46  F01B         	goto	u5401
 11389  003688  EF49  F01B         	goto	u5400
 11390  00368C                     u5401:
 11391  00368C  0E01               	movlw	1
 11392  00368E  EF4A  F01B         	goto	u5410
 11393  003692                     u5400:
 11394  003692  0E00               	movlw	0
 11395  003694                     u5410:
 11396  003694  6E11               	movwf	_toupper$2146^0,c
 11397  003696  6A12               	clrf	(_toupper$2146+1)^0,c
 11398  003698  5011               	movf	_toupper$2146^0,w,c
 11399  00369A  1012               	iorwf	(_toupper$2146+1)^0,w,c
 11400  00369C  B4D8               	btfsc	status,2,c
 11401  00369E  EF53  F01B         	goto	u5421
 11402  0036A2  EF55  F01B         	goto	u5420
 11403  0036A6                     u5421:
 11404  0036A6  EF5B  F01B         	goto	l1941
 11405  0036AA                     u5420:
 11406  0036AA  0E5F               	movlw	95
 11407  0036AC  140B               	andwf	toupper@c^0,w,c
 11408  0036AE  6E0B               	movwf	?_toupper^0,c
 11409  0036B0  6A0C               	clrf	(?_toupper+1)^0,c
 11410  0036B2  EF5F  F01B         	goto	l1946
 11411  0036B6                     l1941:
 11412  0036B6  C00B  F00B         	movff	toupper@c,?_toupper
 11413  0036BA  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 11414  0036BE                     l1946:
 11415  0036BE  0012               	return		;funcret
 11416  0036C0                     __end_of_toupper:
 11417                           	opt callstack 0
 11418                           
 11419 ;; *************** function _islower *****************
 11420 ;; Defined at:
 11421 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  c               2    4[COMRAM] int 
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  2    4[COMRAM] int 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11438 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11439 ;;Total ram usage:        6 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    4
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_toupper
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text58
 11450  003B56                     __ptext58:
 11451                           	opt callstack 0
 11452  003B56                     _islower:
 11453                           	opt callstack 21
 11454  003B56  0E9F               	movlw	159
 11455  003B58  6E07               	movwf	??_islower^0,c
 11456  003B5A  0EFF               	movlw	255
 11457  003B5C  6E08               	movwf	(??_islower+1)^0,c
 11458  003B5E  C005  F009         	movff	islower@c,??_islower+2
 11459  003B62  C006  F00A         	movff	islower@c+1,??_islower+3
 11460  003B66  5007               	movf	??_islower^0,w,c
 11461  003B68  2609               	addwf	(??_islower+2)^0,f,c
 11462  003B6A  5008               	movf	(??_islower+1)^0,w,c
 11463  003B6C  220A               	addwfc	(??_islower+3)^0,f,c
 11464  003B6E  500A               	movf	(??_islower+3)^0,w,c
 11465  003B70  E10A               	bnz	u5290
 11466  003B72  0E1A               	movlw	26
 11467  003B74  5C09               	subwf	(??_islower+2)^0,w,c
 11468  003B76  A0D8               	btfss	status,0,c
 11469  003B78  EFC0  F01D         	goto	u5291
 11470  003B7C  EFC3  F01D         	goto	u5290
 11471  003B80                     u5291:
 11472  003B80  0E01               	movlw	1
 11473  003B82  EFC4  F01D         	goto	u5300
 11474  003B86                     u5290:
 11475  003B86  0E00               	movlw	0
 11476  003B88                     u5300:
 11477  003B88  6E05               	movwf	?_islower^0,c
 11478  003B8A  6A06               	clrf	(?_islower+1)^0,c
 11479  003B8C  0012               	return		;funcret
 11480  003B8E                     __end_of_islower:
 11481                           	opt callstack 0
 11482                           
 11483 ;; *************** function _isupper *****************
 11484 ;; Defined at:
 11485 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;  c               2    4[COMRAM] int 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  2    4[COMRAM] int 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2, status,0
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11501 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11502 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11503 ;;Total ram usage:        6 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    4
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_xtoa
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text59
 11514  003B8E                     __ptext59:
 11515                           	opt callstack 0
 11516  003B8E                     _isupper:
 11517                           	opt callstack 22
 11518  003B8E  0EBF               	movlw	191
 11519  003B90  6E07               	movwf	??_isupper^0,c
 11520  003B92  0EFF               	movlw	255
 11521  003B94  6E08               	movwf	(??_isupper+1)^0,c
 11522  003B96  C005  F009         	movff	isupper@c,??_isupper+2
 11523  003B9A  C006  F00A         	movff	isupper@c+1,??_isupper+3
 11524  003B9E  5007               	movf	??_isupper^0,w,c
 11525  003BA0  2609               	addwf	(??_isupper+2)^0,f,c
 11526  003BA2  5008               	movf	(??_isupper+1)^0,w,c
 11527  003BA4  220A               	addwfc	(??_isupper+3)^0,f,c
 11528  003BA6  500A               	movf	(??_isupper+3)^0,w,c
 11529  003BA8  E10A               	bnz	u5360
 11530  003BAA  0E1A               	movlw	26
 11531  003BAC  5C09               	subwf	(??_isupper+2)^0,w,c
 11532  003BAE  A0D8               	btfss	status,0,c
 11533  003BB0  EFDC  F01D         	goto	u5361
 11534  003BB4  EFDF  F01D         	goto	u5360
 11535  003BB8                     u5361:
 11536  003BB8  0E01               	movlw	1
 11537  003BBA  EFE0  F01D         	goto	u5370
 11538  003BBE                     u5360:
 11539  003BBE  0E00               	movlw	0
 11540  003BC0                     u5370:
 11541  003BC0  6E05               	movwf	?_isupper^0,c
 11542  003BC2  6A06               	clrf	(?_isupper+1)^0,c
 11543  003BC4  0012               	return		;funcret
 11544  003BC6                     __end_of_isupper:
 11545                           	opt callstack 0
 11546                           
 11547 ;; *************** function _isalpha *****************
 11548 ;; Defined at:
 11549 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;  c               2    4[COMRAM] int 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;		None
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  2    4[COMRAM] int 
 11556 ;; Registers used:
 11557 ;;		wreg, status,2, status,0
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11567 ;;Total ram usage:        6 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:    4
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		_xtoa
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text60
 11578  003AE2                     __ptext60:
 11579                           	opt callstack 0
 11580  003AE2                     _isalpha:
 11581                           	opt callstack 22
 11582  003AE2  0E9F               	movlw	159
 11583  003AE4  6E07               	movwf	??_isalpha^0,c
 11584  003AE6  0EFF               	movlw	255
 11585  003AE8  6E08               	movwf	(??_isalpha+1)^0,c
 11586  003AEA  0E20               	movlw	32
 11587  003AEC  1005               	iorwf	isalpha@c^0,w,c
 11588  003AEE  6E09               	movwf	(??_isalpha+2)^0,c
 11589  003AF0  0E00               	movlw	0
 11590  003AF2  1006               	iorwf	(isalpha@c+1)^0,w,c
 11591  003AF4  6E0A               	movwf	(??_isalpha+3)^0,c
 11592  003AF6  5007               	movf	??_isalpha^0,w,c
 11593  003AF8  2609               	addwf	(??_isalpha+2)^0,f,c
 11594  003AFA  5008               	movf	(??_isalpha+1)^0,w,c
 11595  003AFC  220A               	addwfc	(??_isalpha+3)^0,f,c
 11596  003AFE  500A               	movf	(??_isalpha+3)^0,w,c
 11597  003B00  E10A               	bnz	u5380
 11598  003B02  0E1A               	movlw	26
 11599  003B04  5C09               	subwf	(??_isalpha+2)^0,w,c
 11600  003B06  A0D8               	btfss	status,0,c
 11601  003B08  EF88  F01D         	goto	u5381
 11602  003B0C  EF8B  F01D         	goto	u5380
 11603  003B10                     u5381:
 11604  003B10  0E01               	movlw	1
 11605  003B12  EF8C  F01D         	goto	u5390
 11606  003B16                     u5380:
 11607  003B16  0E00               	movlw	0
 11608  003B18                     u5390:
 11609  003B18  6E05               	movwf	?_isalpha^0,c
 11610  003B1A  6A06               	clrf	(?_isalpha+1)^0,c
 11611  003B1C  0012               	return		;funcret
 11612  003B1E                     __end_of_isalpha:
 11613                           	opt callstack 0
 11614                           
 11615 ;; *************** function _utoa *****************
 11616 ;; Defined at:
 11617 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11620 ;;		 -> NULL(0), 
 11621 ;;  d               8   35[COMRAM] unsigned long long 
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;  n               8   55[COMRAM] unsigned long long 
 11624 ;;  i               2   63[COMRAM] int 
 11625 ;;  w               2   53[COMRAM] int 
 11626 ;;  p               2   51[COMRAM] int 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  2   33[COMRAM] int 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11636 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11637 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11638 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11639 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11640 ;;Total ram usage:       32 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    9
 11643 ;; This function calls:
 11644 ;;		___lodiv
 11645 ;;		___lomod
 11646 ;;		_pad
 11647 ;; This function is called by:
 11648 ;;		_vfpfcnvrt
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text61
 11653  00159C                     __ptext61:
 11654                           	opt callstack 0
 11655  00159C                     _utoa:
 11656                           	opt callstack 18
 11657  00159C                     
 11658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11659  00159C  0100               	movlb	0	; () banked
 11660  00159E  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11661  0015A0  EFD4  F00A         	goto	u5921
 11662  0015A4  EFD6  F00A         	goto	u5920
 11663  0015A8                     u5921:
 11664  0015A8  EFD7  F00A         	goto	l6125
 11665  0015AC                     u5920:
 11666  0015AC                     
 11667                           ; BSR set to: 0
 11668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 11669  0015AC  9257               	bcf	_flags^0,1,c
 11670  0015AE                     l6125:
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 11674  0015AE  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 11675  0015B0  EFE4  F00A         	goto	u5930
 11676  0015B4  51A6               	movf	(_prec+1)& (0+255),w,b
 11677  0015B6  E106               	bnz	u5931
 11678  0015B8  05A5               	decf	_prec& (0+255),w,b
 11679  0015BA  B0D8               	btfsc	status,0,c
 11680  0015BC  EFE2  F00A         	goto	u5931
 11681  0015C0  EFE4  F00A         	goto	u5930
 11682  0015C4                     u5931:
 11683  0015C4  EFEA  F00A         	goto	l1053
 11684  0015C8                     u5930:
 11685  0015C8                     
 11686                           ; BSR set to: 0
 11687  0015C8  0E00               	movlw	0
 11688  0015CA  6E35               	movwf	(utoa@p+1)^0,c
 11689  0015CC  0E01               	movlw	1
 11690  0015CE  6E34               	movwf	utoa@p^0,c
 11691  0015D0  EFEE  F00A         	goto	l1055
 11692  0015D4                     l1053:
 11693                           
 11694                           ; BSR set to: 0
 11695  0015D4  C0A5  F034         	movff	_prec,utoa@p
 11696  0015D8  C0A6  F035         	movff	_prec+1,utoa@p+1
 11697  0015DC                     l1055:
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 11701  0015DC  C0A3  F036         	movff	_width,utoa@w
 11702  0015E0  C0A4  F037         	movff	_width+1,utoa@w+1
 11703                           
 11704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 11705  0015E4  C024  F038         	movff	utoa@d,utoa@n
 11706  0015E8  C025  F039         	movff	utoa@d+1,utoa@n+1
 11707  0015EC  C026  F03A         	movff	utoa@d+2,utoa@n+2
 11708  0015F0  C027  F03B         	movff	utoa@d+3,utoa@n+3
 11709  0015F4  C028  F03C         	movff	utoa@d+4,utoa@n+4
 11710  0015F8  C029  F03D         	movff	utoa@d+5,utoa@n+5
 11711  0015FC  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 11712  001600  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 11713  001604                     
 11714                           ; BSR set to: 0
 11715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 11716  001604  0E00               	movlw	0
 11717  001606  6E41               	movwf	(utoa@i+1)^0,c
 11718  001608  0E1F               	movlw	31
 11719  00160A  6E40               	movwf	utoa@i^0,c
 11720  00160C                     
 11721                           ; BSR set to: 0
 11722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 11723  00160C  0E00               	movlw	0
 11724  00160E  0101               	movlb	1	; () banked
 11725  001610  6FD3               	movwf	(_dbuf+31)& (0+255),b
 11726                           
 11727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11728  001612  EF81  F00B         	goto	l6143
 11729  001616                     l6133:
 11730                           
 11731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 11732  001616  0640               	decf	utoa@i^0,f,c
 11733  001618  A0D8               	btfss	status,0,c
 11734  00161A  0641               	decf	(utoa@i+1)^0,f,c
 11735  00161C                     
 11736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 11737  00161C  0EB4               	movlw	low _dbuf
 11738  00161E  2440               	addwf	utoa@i^0,w,c
 11739  001620  6ED9               	movwf	fsr2l,c
 11740  001622  0E01               	movlw	high _dbuf
 11741  001624  2041               	addwfc	(utoa@i+1)^0,w,c
 11742  001626  6EDA               	movwf	fsr2h,c
 11743  001628  C038  F005         	movff	utoa@n,___lomod@dividend
 11744  00162C  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 11745  001630  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 11746  001634  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 11747  001638  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 11748  00163C  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 11749  001640  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 11750  001644  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 11751  001648  0E0A               	movlw	10
 11752  00164A  6E0D               	movwf	___lomod@divisor^0,c
 11753  00164C  0E00               	movlw	0
 11754  00164E  6E0E               	movwf	(___lomod@divisor+1)^0,c
 11755  001650  0E00               	movlw	0
 11756  001652  6E0F               	movwf	(___lomod@divisor+2)^0,c
 11757  001654  0E00               	movlw	0
 11758  001656  6E10               	movwf	(___lomod@divisor+3)^0,c
 11759  001658  0E00               	movlw	0
 11760  00165A  6E11               	movwf	(___lomod@divisor+4)^0,c
 11761  00165C  0E00               	movlw	0
 11762  00165E  6E12               	movwf	(___lomod@divisor+5)^0,c
 11763  001660  0E00               	movlw	0
 11764  001662  6E13               	movwf	(___lomod@divisor+6)^0,c
 11765  001664  0E00               	movlw	0
 11766  001666  6E14               	movwf	(___lomod@divisor+7)^0,c
 11767  001668  ECA1  F015         	call	___lomod	;wreg free
 11768  00166C  C005  F02C         	movff	?___lomod,??_utoa
 11769  001670  C006  F02D         	movff	?___lomod+1,??_utoa+1
 11770  001674  C007  F02E         	movff	?___lomod+2,??_utoa+2
 11771  001678  C008  F02F         	movff	?___lomod+3,??_utoa+3
 11772  00167C  C009  F030         	movff	?___lomod+4,??_utoa+4
 11773  001680  C00A  F031         	movff	?___lomod+5,??_utoa+5
 11774  001684  C00B  F032         	movff	?___lomod+6,??_utoa+6
 11775  001688  C00C  F033         	movff	?___lomod+7,??_utoa+7
 11776  00168C  502C               	movf	??_utoa^0,w,c
 11777  00168E  0F30               	addlw	48
 11778  001690  6EDF               	movwf	indf2,c
 11779  001692                     
 11780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 11781  001692  0634               	decf	utoa@p^0,f,c
 11782  001694  A0D8               	btfss	status,0,c
 11783  001696  0635               	decf	(utoa@p+1)^0,f,c
 11784  001698                     
 11785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 11786  001698  0636               	decf	utoa@w^0,f,c
 11787  00169A  A0D8               	btfss	status,0,c
 11788  00169C  0637               	decf	(utoa@w+1)^0,f,c
 11789  00169E                     
 11790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 11791  00169E  C038  F005         	movff	utoa@n,___lodiv@dividend
 11792  0016A2  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 11793  0016A6  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 11794  0016AA  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 11795  0016AE  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 11796  0016B2  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 11797  0016B6  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 11798  0016BA  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 11799  0016BE  0E0A               	movlw	10
 11800  0016C0  6E0D               	movwf	___lodiv@divisor^0,c
 11801  0016C2  0E00               	movlw	0
 11802  0016C4  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 11803  0016C6  0E00               	movlw	0
 11804  0016C8  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 11805  0016CA  0E00               	movlw	0
 11806  0016CC  6E10               	movwf	(___lodiv@divisor+3)^0,c
 11807  0016CE  0E00               	movlw	0
 11808  0016D0  6E11               	movwf	(___lodiv@divisor+4)^0,c
 11809  0016D2  0E00               	movlw	0
 11810  0016D4  6E12               	movwf	(___lodiv@divisor+5)^0,c
 11811  0016D6  0E00               	movlw	0
 11812  0016D8  6E13               	movwf	(___lodiv@divisor+6)^0,c
 11813  0016DA  0E00               	movlw	0
 11814  0016DC  6E14               	movwf	(___lodiv@divisor+7)^0,c
 11815  0016DE  EC6B  F013         	call	___lodiv	;wreg free
 11816  0016E2  C005  F038         	movff	?___lodiv,utoa@n
 11817  0016E6  C006  F039         	movff	?___lodiv+1,utoa@n+1
 11818  0016EA  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 11819  0016EE  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 11820  0016F2  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 11821  0016F6  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 11822  0016FA  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 11823  0016FE  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 11824  001702                     l6143:
 11825                           
 11826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11827  001702  5040               	movf	utoa@i^0,w,c
 11828  001704  1041               	iorwf	(utoa@i+1)^0,w,c
 11829  001706  B4D8               	btfsc	status,2,c
 11830  001708  EF88  F00B         	goto	u5941
 11831  00170C  EF8A  F00B         	goto	u5940
 11832  001710                     u5941:
 11833  001710  EFBA  F00B         	goto	l6153
 11834  001714                     u5940:
 11835  001714  5038               	movf	utoa@n^0,w,c
 11836  001716  1039               	iorwf	(utoa@n+1)^0,w,c
 11837  001718  103A               	iorwf	(utoa@n+2)^0,w,c
 11838  00171A  103B               	iorwf	(utoa@n+3)^0,w,c
 11839  00171C  103C               	iorwf	(utoa@n+4)^0,w,c
 11840  00171E  103D               	iorwf	(utoa@n+5)^0,w,c
 11841  001720  103E               	iorwf	(utoa@n+6)^0,w,c
 11842  001722  103F               	iorwf	(utoa@n+7)^0,w,c
 11843  001724  A4D8               	btfss	status,2,c
 11844  001726  EF97  F00B         	goto	u5951
 11845  00172A  EF99  F00B         	goto	u5950
 11846  00172E                     u5951:
 11847  00172E  EF0B  F00B         	goto	l6133
 11848  001732                     u5950:
 11849  001732  BE35               	btfsc	(utoa@p+1)^0,7,c
 11850  001734  EFA6  F00B         	goto	u5960
 11851  001738  5035               	movf	(utoa@p+1)^0,w,c
 11852  00173A  E106               	bnz	u5961
 11853  00173C  0434               	decf	utoa@p^0,w,c
 11854  00173E  B0D8               	btfsc	status,0,c
 11855  001740  EFA4  F00B         	goto	u5961
 11856  001744  EFA6  F00B         	goto	u5960
 11857  001748                     u5961:
 11858  001748  EF0B  F00B         	goto	l6133
 11859  00174C                     u5960:
 11860  00174C  BE37               	btfsc	(utoa@w+1)^0,7,c
 11861  00174E  EFB1  F00B         	goto	u5971
 11862  001752  5037               	movf	(utoa@w+1)^0,w,c
 11863  001754  E108               	bnz	u5970
 11864  001756  0436               	decf	utoa@w^0,w,c
 11865  001758  A0D8               	btfss	status,0,c
 11866  00175A  EFB1  F00B         	goto	u5971
 11867  00175E  EFB3  F00B         	goto	u5970
 11868  001762                     u5971:
 11869  001762  EFBA  F00B         	goto	l6153
 11870  001766                     u5970:
 11871  001766  B257               	btfsc	_flags^0,1,c
 11872  001768  EFB8  F00B         	goto	u5981
 11873  00176C  EFBA  F00B         	goto	u5980
 11874  001770                     u5981:
 11875  001770  EF0B  F00B         	goto	l6133
 11876  001774                     u5980:
 11877  001774                     l6153:
 11878                           
 11879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 11880  001774  C022  F017         	movff	utoa@fp,pad@fp
 11881  001778  C023  F018         	movff	utoa@fp+1,pad@fp+1
 11882  00177C  0EB4               	movlw	low _dbuf
 11883  00177E  2440               	addwf	utoa@i^0,w,c
 11884  001780  6E19               	movwf	pad@buf^0,c
 11885  001782  0E01               	movlw	high _dbuf
 11886  001784  2041               	addwfc	(utoa@i+1)^0,w,c
 11887  001786  6E1A               	movwf	(pad@buf+1)^0,c
 11888  001788  C036  F01B         	movff	utoa@w,pad@p
 11889  00178C  C037  F01C         	movff	utoa@w+1,pad@p+1
 11890  001790  EC6C  F016         	call	_pad	;wreg free
 11891  001794  C017  F022         	movff	?_pad,?_utoa
 11892  001798  C018  F023         	movff	?_pad+1,?_utoa+1
 11893  00179C  0012               	return		;funcret
 11894  00179E                     __end_of_utoa:
 11895                           	opt callstack 0
 11896                           
 11897 ;; *************** function ___lomod *****************
 11898 ;; Defined at:
 11899 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;  dividend        8    4[COMRAM] unsigned long long 
 11902 ;;  divisor         8   12[COMRAM] unsigned long long 
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;  counter         1   20[COMRAM] unsigned char 
 11905 ;; Return value:  Size  Location     Type
 11906 ;;                  8    4[COMRAM] unsigned long long 
 11907 ;; Registers used:
 11908 ;;		wreg, status,2, status,0
 11909 ;; Tracked objects:
 11910 ;;		On entry : 0/0
 11911 ;;		On exit  : 0/0
 11912 ;;		Unchanged: 0/0
 11913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11914 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11917 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;Total ram usage:       17 bytes
 11919 ;; Hardware stack levels used:    1
 11920 ;; Hardware stack levels required when called:    4
 11921 ;; This function calls:
 11922 ;;		Nothing
 11923 ;; This function is called by:
 11924 ;;		_utoa
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           	psect	text62
 11929  002B42                     __ptext62:
 11930                           	opt callstack 0
 11931  002B42                     ___lomod:
 11932                           	opt callstack 22
 11933  002B42  500D               	movf	___lomod@divisor^0,w,c
 11934  002B44  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 11935  002B46  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 11936  002B48  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 11937  002B4A  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 11938  002B4C  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 11939  002B4E  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 11940  002B50  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 11941  002B52  B4D8               	btfsc	status,2,c
 11942  002B54  EFAE  F015         	goto	u5621
 11943  002B58  EFB0  F015         	goto	u5620
 11944  002B5C                     u5621:
 11945  002B5C  EFF8  F015         	goto	l1585
 11946  002B60                     u5620:
 11947  002B60  0E01               	movlw	1
 11948  002B62  6E15               	movwf	___lomod@counter^0,c
 11949  002B64  EFBE  F015         	goto	l5995
 11950  002B68                     l5993:
 11951  002B68  90D8               	bcf	status,0,c
 11952  002B6A  360D               	rlcf	___lomod@divisor^0,f,c
 11953  002B6C  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 11954  002B6E  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 11955  002B70  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 11956  002B72  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 11957  002B74  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 11958  002B76  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 11959  002B78  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 11960  002B7A  2A15               	incf	___lomod@counter^0,f,c
 11961  002B7C                     l5995:
 11962  002B7C  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 11963  002B7E  EFC3  F015         	goto	u5631
 11964  002B82  EFC5  F015         	goto	u5630
 11965  002B86                     u5631:
 11966  002B86  EFB4  F015         	goto	l5993
 11967  002B8A                     u5630:
 11968  002B8A                     l5997:
 11969  002B8A  500D               	movf	___lomod@divisor^0,w,c
 11970  002B8C  5C05               	subwf	___lomod@dividend^0,w,c
 11971  002B8E  500E               	movf	(___lomod@divisor+1)^0,w,c
 11972  002B90  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 11973  002B92  500F               	movf	(___lomod@divisor+2)^0,w,c
 11974  002B94  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 11975  002B96  5010               	movf	(___lomod@divisor+3)^0,w,c
 11976  002B98  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 11977  002B9A  5011               	movf	(___lomod@divisor+4)^0,w,c
 11978  002B9C  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 11979  002B9E  5012               	movf	(___lomod@divisor+5)^0,w,c
 11980  002BA0  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 11981  002BA2  5013               	movf	(___lomod@divisor+6)^0,w,c
 11982  002BA4  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 11983  002BA6  5014               	movf	(___lomod@divisor+7)^0,w,c
 11984  002BA8  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 11985  002BAA  A0D8               	btfss	status,0,c
 11986  002BAC  EFDA  F015         	goto	u5641
 11987  002BB0  EFDC  F015         	goto	u5640
 11988  002BB4                     u5641:
 11989  002BB4  EFEC  F015         	goto	l6001
 11990  002BB8                     u5640:
 11991  002BB8  500D               	movf	___lomod@divisor^0,w,c
 11992  002BBA  5E05               	subwf	___lomod@dividend^0,f,c
 11993  002BBC  500E               	movf	(___lomod@divisor+1)^0,w,c
 11994  002BBE  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 11995  002BC0  500F               	movf	(___lomod@divisor+2)^0,w,c
 11996  002BC2  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 11997  002BC4  5010               	movf	(___lomod@divisor+3)^0,w,c
 11998  002BC6  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 11999  002BC8  5011               	movf	(___lomod@divisor+4)^0,w,c
 12000  002BCA  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 12001  002BCC  5012               	movf	(___lomod@divisor+5)^0,w,c
 12002  002BCE  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 12003  002BD0  5013               	movf	(___lomod@divisor+6)^0,w,c
 12004  002BD2  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 12005  002BD4  5014               	movf	(___lomod@divisor+7)^0,w,c
 12006  002BD6  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 12007  002BD8                     l6001:
 12008  002BD8  90D8               	bcf	status,0,c
 12009  002BDA  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 12010  002BDC  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 12011  002BDE  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 12012  002BE0  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 12013  002BE2  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 12014  002BE4  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 12015  002BE6  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 12016  002BE8  320D               	rrcf	___lomod@divisor^0,f,c
 12017  002BEA  2E15               	decfsz	___lomod@counter^0,f,c
 12018  002BEC  EFC5  F015         	goto	l5997
 12019  002BF0                     l1585:
 12020  002BF0  C005  F005         	movff	___lomod@dividend,?___lomod
 12021  002BF4  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 12022  002BF8  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 12023  002BFC  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 12024  002C00  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 12025  002C04  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 12026  002C08  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 12027  002C0C  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 12028  002C10  0012               	return		;funcret
 12029  002C12                     __end_of___lomod:
 12030                           	opt callstack 0
 12031                           
 12032 ;; *************** function ___lodiv *****************
 12033 ;; Defined at:
 12034 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;  dividend        8    4[COMRAM] unsigned long long 
 12037 ;;  divisor         8   12[COMRAM] unsigned long long 
 12038 ;; Auto vars:     Size  Location     Type
 12039 ;;  quotient        8   20[COMRAM] unsigned long long 
 12040 ;;  counter         1   28[COMRAM] unsigned char 
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  8    4[COMRAM] unsigned long long 
 12043 ;; Registers used:
 12044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12050 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12051 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12053 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12054 ;;Total ram usage:       25 bytes
 12055 ;; Hardware stack levels used:    1
 12056 ;; Hardware stack levels required when called:    4
 12057 ;; This function calls:
 12058 ;;		Nothing
 12059 ;; This function is called by:
 12060 ;;		_utoa
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text63
 12065  0026D6                     __ptext63:
 12066                           	opt callstack 0
 12067  0026D6                     ___lodiv:
 12068                           	opt callstack 22
 12069  0026D6  EE20  F015         	lfsr	2,___lodiv@quotient
 12070  0026DA  0E07               	movlw	7
 12071  0026DC                     u5581:
 12072  0026DC  6ADE               	clrf	postinc2,c
 12073  0026DE  06E8               	decf	wreg,f,c
 12074  0026E0  E2FD               	bc	u5581
 12075  0026E2  500D               	movf	___lodiv@divisor^0,w,c
 12076  0026E4  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 12077  0026E6  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 12078  0026E8  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 12079  0026EA  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 12080  0026EC  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 12081  0026EE  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 12082  0026F0  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 12083  0026F2  B4D8               	btfsc	status,2,c
 12084  0026F4  EF7E  F013         	goto	u5591
 12085  0026F8  EF80  F013         	goto	u5590
 12086  0026FC                     u5591:
 12087  0026FC  EFD2  F013         	goto	l1575
 12088  002700                     u5590:
 12089  002700  0E01               	movlw	1
 12090  002702  6E1D               	movwf	___lodiv@counter^0,c
 12091  002704  EF8E  F013         	goto	l5975
 12092  002708                     l5973:
 12093  002708  90D8               	bcf	status,0,c
 12094  00270A  360D               	rlcf	___lodiv@divisor^0,f,c
 12095  00270C  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 12096  00270E  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 12097  002710  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 12098  002712  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 12099  002714  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 12100  002716  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 12101  002718  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 12102  00271A  2A1D               	incf	___lodiv@counter^0,f,c
 12103  00271C                     l5975:
 12104  00271C  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 12105  00271E  EF93  F013         	goto	u5601
 12106  002722  EF95  F013         	goto	u5600
 12107  002726                     u5601:
 12108  002726  EF84  F013         	goto	l5973
 12109  00272A                     u5600:
 12110  00272A                     l5977:
 12111  00272A  90D8               	bcf	status,0,c
 12112  00272C  3615               	rlcf	___lodiv@quotient^0,f,c
 12113  00272E  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 12114  002730  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 12115  002732  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 12116  002734  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 12117  002736  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 12118  002738  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 12119  00273A  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 12120  00273C  500D               	movf	___lodiv@divisor^0,w,c
 12121  00273E  5C05               	subwf	___lodiv@dividend^0,w,c
 12122  002740  500E               	movf	(___lodiv@divisor+1)^0,w,c
 12123  002742  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 12124  002744  500F               	movf	(___lodiv@divisor+2)^0,w,c
 12125  002746  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 12126  002748  5010               	movf	(___lodiv@divisor+3)^0,w,c
 12127  00274A  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 12128  00274C  5011               	movf	(___lodiv@divisor+4)^0,w,c
 12129  00274E  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 12130  002750  5012               	movf	(___lodiv@divisor+5)^0,w,c
 12131  002752  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 12132  002754  5013               	movf	(___lodiv@divisor+6)^0,w,c
 12133  002756  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 12134  002758  5014               	movf	(___lodiv@divisor+7)^0,w,c
 12135  00275A  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 12136  00275C  A0D8               	btfss	status,0,c
 12137  00275E  EFB3  F013         	goto	u5611
 12138  002762  EFB5  F013         	goto	u5610
 12139  002766                     u5611:
 12140  002766  EFC6  F013         	goto	l5985
 12141  00276A                     u5610:
 12142  00276A  500D               	movf	___lodiv@divisor^0,w,c
 12143  00276C  5E05               	subwf	___lodiv@dividend^0,f,c
 12144  00276E  500E               	movf	(___lodiv@divisor+1)^0,w,c
 12145  002770  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 12146  002772  500F               	movf	(___lodiv@divisor+2)^0,w,c
 12147  002774  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 12148  002776  5010               	movf	(___lodiv@divisor+3)^0,w,c
 12149  002778  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 12150  00277A  5011               	movf	(___lodiv@divisor+4)^0,w,c
 12151  00277C  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 12152  00277E  5012               	movf	(___lodiv@divisor+5)^0,w,c
 12153  002780  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 12154  002782  5013               	movf	(___lodiv@divisor+6)^0,w,c
 12155  002784  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 12156  002786  5014               	movf	(___lodiv@divisor+7)^0,w,c
 12157  002788  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 12158  00278A  8015               	bsf	___lodiv@quotient^0,0,c
 12159  00278C                     l5985:
 12160  00278C  90D8               	bcf	status,0,c
 12161  00278E  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 12162  002790  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 12163  002792  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 12164  002794  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 12165  002796  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 12166  002798  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 12167  00279A  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 12168  00279C  320D               	rrcf	___lodiv@divisor^0,f,c
 12169  00279E  2E1D               	decfsz	___lodiv@counter^0,f,c
 12170  0027A0  EF95  F013         	goto	l5977
 12171  0027A4                     l1575:
 12172  0027A4  C015  F005         	movff	___lodiv@quotient,?___lodiv
 12173  0027A8  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 12174  0027AC  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 12175  0027B0  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 12176  0027B4  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 12177  0027B8  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 12178  0027BC  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 12179  0027C0  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 12180  0027C4  0012               	return		;funcret
 12181  0027C6                     __end_of___lodiv:
 12182                           	opt callstack 0
 12183                           
 12184 ;; *************** function _stoa *****************
 12185 ;; Defined at:
 12186 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 12189 ;;		 -> NULL(0), 
 12190 ;;  s               2   17[COMRAM] PTR unsigned char 
 12191 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), 
 12192 ;;		 -> STR_34(9), STR_33(12), InitialiseString@SerialNum(11), Command(16), 
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;  nuls            7   20[COMRAM] unsigned char [7]
 12195 ;;  l               2   35[COMRAM] int 
 12196 ;;  p               2   33[COMRAM] int 
 12197 ;;  cp              2   31[COMRAM] PTR unsigned char 
 12198 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1453(20), ValidateCmd@ConfName_1449(20), 
 12199 ;;		 -> ValidateCmd@ConfName(20), STR_34(9), STR_33(12), InitialiseString@SerialNum(11), 
 12200 ;;		 -> Command(16), 
 12201 ;;  w               2   29[COMRAM] int 
 12202 ;;  i               2   27[COMRAM] int 
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  2   15[COMRAM] int 
 12205 ;; Registers used:
 12206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12213 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12215 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;Total ram usage:       22 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:    7
 12219 ;; This function calls:
 12220 ;;		_fputc
 12221 ;;		_strlen
 12222 ;; This function is called by:
 12223 ;;		_vfpfcnvrt
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           	psect	text64
 12228  001AEC                     __ptext64:
 12229                           	opt callstack 0
 12230  001AEC                     _stoa:
 12231                           	opt callstack 20
 12232  001AEC                     
 12233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12234  001AEC  EE21  F022         	lfsr	2,stoa@F1139
 12235  001AF0  EE10  F015         	lfsr	1,stoa@nuls
 12236  001AF4  0E06               	movlw	6
 12237  001AF6                     u5821:
 12238  001AF6  CFDB FFE3          	movff	plusw2,plusw1
 12239  001AFA  06E8               	decf	wreg,f,c
 12240  001AFC  E2FC               	bc	u5821
 12241  001AFE                     
 12242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 12243  001AFE  C012  F020         	movff	stoa@s,stoa@cp
 12244  001B02  C013  F021         	movff	stoa@s+1,stoa@cp+1
 12245  001B06                     
 12246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 12247  001B06  5020               	movf	stoa@cp^0,w,c
 12248  001B08  1021               	iorwf	(stoa@cp+1)^0,w,c
 12249  001B0A  A4D8               	btfss	status,2,c
 12250  001B0C  EF8A  F00D         	goto	u5831
 12251  001B10  EF8C  F00D         	goto	u5830
 12252  001B14                     u5831:
 12253  001B14  EF90  F00D         	goto	l6087
 12254  001B18                     u5830:
 12255  001B18                     
 12256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 12257  001B18  0E15               	movlw	low stoa@nuls
 12258  001B1A  6E20               	movwf	stoa@cp^0,c
 12259  001B1C  0E00               	movlw	high stoa@nuls
 12260  001B1E  6E21               	movwf	(stoa@cp+1)^0,c
 12261  001B20                     l6087:
 12262                           
 12263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 12264  001B20  C020  F005         	movff	stoa@cp,strlen@s
 12265  001B24  C021  F006         	movff	stoa@cp+1,strlen@s+1
 12266  001B28  EC10  F01C         	call	_strlen	;wreg free
 12267  001B2C  C005  F024         	movff	?_strlen,stoa@l
 12268  001B30  C006  F025         	movff	?_strlen+1,stoa@l+1
 12269  001B34                     
 12270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 12271  001B34  C0A5  F022         	movff	_prec,stoa@p
 12272  001B38  C0A6  F023         	movff	_prec+1,stoa@p+1
 12273  001B3C                     
 12274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 12275  001B3C  BE23               	btfsc	(stoa@p+1)^0,7,c
 12276  001B3E  EFA3  F00D         	goto	u5841
 12277  001B42  EFA5  F00D         	goto	u5840
 12278  001B46                     u5841:
 12279  001B46  EFBA  F00D         	goto	l1034
 12280  001B4A                     u5840:
 12281  001B4A  5024               	movf	stoa@l^0,w,c
 12282  001B4C  5C22               	subwf	stoa@p^0,w,c
 12283  001B4E  5023               	movf	(stoa@p+1)^0,w,c
 12284  001B50  0A80               	xorlw	128
 12285  001B52  6E14               	movwf	??_stoa^0,c
 12286  001B54  5025               	movf	(stoa@l+1)^0,w,c
 12287  001B56  0A80               	xorlw	128
 12288  001B58  5814               	subwfb	??_stoa^0,w,c
 12289  001B5A  A0D8               	btfss	status,0,c
 12290  001B5C  EFB2  F00D         	goto	u5851
 12291  001B60  EFB4  F00D         	goto	u5850
 12292  001B64                     u5851:
 12293  001B64  EFB6  F00D         	goto	l1032
 12294  001B68                     u5850:
 12295  001B68  EFBA  F00D         	goto	l1034
 12296  001B6C                     l1032:
 12297  001B6C  C022  F024         	movff	stoa@p,stoa@l
 12298  001B70  C023  F025         	movff	stoa@p+1,stoa@l+1
 12299  001B74                     l1034:
 12300                           
 12301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 12302  001B74  C024  F022         	movff	stoa@l,stoa@p
 12303  001B78  C025  F023         	movff	stoa@l+1,stoa@p+1
 12304                           
 12305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 12306  001B7C  C0A3  F01E         	movff	_width,stoa@w
 12307  001B80  C0A4  F01F         	movff	_width+1,stoa@w+1
 12308                           
 12309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 12310  001B84  B057               	btfsc	_flags^0,0,c
 12311  001B86  EFC7  F00D         	goto	u5861
 12312  001B8A  EFC9  F00D         	goto	u5860
 12313  001B8E                     u5861:
 12314  001B8E  EFE6  F00D         	goto	l6103
 12315  001B92                     u5860:
 12316  001B92  EFD7  F00D         	goto	l6101
 12317  001B96                     l6097:
 12318                           
 12319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 12320  001B96  0E00               	movlw	0
 12321  001B98  6E08               	movwf	(fputc@c+1)^0,c
 12322  001B9A  0E20               	movlw	32
 12323  001B9C  6E07               	movwf	fputc@c^0,c
 12324  001B9E  C010  F009         	movff	stoa@fp,fputc@fp
 12325  001BA2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12326  001BA6  ECE4  F017         	call	_fputc	;wreg free
 12327  001BAA                     
 12328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 12329  001BAA  4A24               	infsnz	stoa@l^0,f,c
 12330  001BAC  2A25               	incf	(stoa@l+1)^0,f,c
 12331  001BAE                     l6101:
 12332                           
 12333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 12334  001BAE  501E               	movf	stoa@w^0,w,c
 12335  001BB0  5C24               	subwf	stoa@l^0,w,c
 12336  001BB2  5025               	movf	(stoa@l+1)^0,w,c
 12337  001BB4  0A80               	xorlw	128
 12338  001BB6  6E14               	movwf	??_stoa^0,c
 12339  001BB8  501F               	movf	(stoa@w+1)^0,w,c
 12340  001BBA  0A80               	xorlw	128
 12341  001BBC  5814               	subwfb	??_stoa^0,w,c
 12342  001BBE  A0D8               	btfss	status,0,c
 12343  001BC0  EFE4  F00D         	goto	u5871
 12344  001BC4  EFE6  F00D         	goto	u5870
 12345  001BC8                     u5871:
 12346  001BC8  EFCB  F00D         	goto	l6097
 12347  001BCC                     u5870:
 12348  001BCC                     l6103:
 12349                           
 12350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 12351  001BCC  0E00               	movlw	0
 12352  001BCE  6E1D               	movwf	(stoa@i+1)^0,c
 12353  001BD0  0E00               	movlw	0
 12354  001BD2  6E1C               	movwf	stoa@i^0,c
 12355                           
 12356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12357  001BD4  EF0B  F00E         	goto	l6111
 12358  001BD8                     l6105:
 12359                           
 12360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 12361  001BD8  C020  FFF6         	movff	stoa@cp,tblptrl
 12362  001BDC  C021  FFF7         	movff	stoa@cp+1,tblptrh
 12363  001BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 12364  001BE2  6EF8               	movwf	tblptru,c
 12365  001BE4  0E0E               	movlw	(high __ramtop+-1)
 12366  001BE6  64F7               	cpfsgt	tblptrh,c
 12367  001BE8  D003               	bra	u5887
 12368  001BEA  0008               	tblrd		*
 12369  001BEC  50F5               	movf	tablat,w,c
 12370  001BEE  D005               	bra	u5880
 12371  001BF0                     u5887:
 12372  001BF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12373  001BF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12374  001BF8  50EF               	movf	indf0,w,c
 12375  001BFA                     u5880:
 12376  001BFA  6E14               	movwf	??_stoa^0,c
 12377  001BFC  5014               	movf	??_stoa^0,w,c
 12378  001BFE  6E07               	movwf	fputc@c^0,c
 12379  001C00  6A08               	clrf	(fputc@c+1)^0,c
 12380  001C02  C010  F009         	movff	stoa@fp,fputc@fp
 12381  001C06  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12382  001C0A  ECE4  F017         	call	_fputc	;wreg free
 12383  001C0E                     
 12384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 12385  001C0E  4A20               	infsnz	stoa@cp^0,f,c
 12386  001C10  2A21               	incf	(stoa@cp+1)^0,f,c
 12387  001C12                     
 12388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 12389  001C12  4A1C               	infsnz	stoa@i^0,f,c
 12390  001C14  2A1D               	incf	(stoa@i+1)^0,f,c
 12391  001C16                     l6111:
 12392                           
 12393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12394  001C16  5022               	movf	stoa@p^0,w,c
 12395  001C18  5C1C               	subwf	stoa@i^0,w,c
 12396  001C1A  501D               	movf	(stoa@i+1)^0,w,c
 12397  001C1C  0A80               	xorlw	128
 12398  001C1E  6E14               	movwf	??_stoa^0,c
 12399  001C20  5023               	movf	(stoa@p+1)^0,w,c
 12400  001C22  0A80               	xorlw	128
 12401  001C24  5814               	subwfb	??_stoa^0,w,c
 12402  001C26  A0D8               	btfss	status,0,c
 12403  001C28  EF18  F00E         	goto	u5891
 12404  001C2C  EF1A  F00E         	goto	u5890
 12405  001C30                     u5891:
 12406  001C30  EFEC  F00D         	goto	l6105
 12407  001C34                     u5890:
 12408  001C34                     
 12409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 12410  001C34  A057               	btfss	_flags^0,0,c
 12411  001C36  EF1F  F00E         	goto	u5901
 12412  001C3A  EF21  F00E         	goto	u5900
 12413  001C3E                     u5901:
 12414  001C3E  EF3E  F00E         	goto	l1044
 12415  001C42                     u5900:
 12416  001C42  EF2F  F00E         	goto	l6119
 12417  001C46                     l6115:
 12418                           
 12419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 12420  001C46  0E00               	movlw	0
 12421  001C48  6E08               	movwf	(fputc@c+1)^0,c
 12422  001C4A  0E20               	movlw	32
 12423  001C4C  6E07               	movwf	fputc@c^0,c
 12424  001C4E  C010  F009         	movff	stoa@fp,fputc@fp
 12425  001C52  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 12426  001C56  ECE4  F017         	call	_fputc	;wreg free
 12427  001C5A                     
 12428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 12429  001C5A  4A24               	infsnz	stoa@l^0,f,c
 12430  001C5C  2A25               	incf	(stoa@l+1)^0,f,c
 12431  001C5E                     l6119:
 12432                           
 12433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 12434  001C5E  501E               	movf	stoa@w^0,w,c
 12435  001C60  5C24               	subwf	stoa@l^0,w,c
 12436  001C62  5025               	movf	(stoa@l+1)^0,w,c
 12437  001C64  0A80               	xorlw	128
 12438  001C66  6E14               	movwf	??_stoa^0,c
 12439  001C68  501F               	movf	(stoa@w+1)^0,w,c
 12440  001C6A  0A80               	xorlw	128
 12441  001C6C  5814               	subwfb	??_stoa^0,w,c
 12442  001C6E  A0D8               	btfss	status,0,c
 12443  001C70  EF3C  F00E         	goto	u5911
 12444  001C74  EF3E  F00E         	goto	u5910
 12445  001C78                     u5911:
 12446  001C78  EF23  F00E         	goto	l6115
 12447  001C7C                     u5910:
 12448  001C7C                     l1044:
 12449                           
 12450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 12451  001C7C  C024  F010         	movff	stoa@l,?_stoa
 12452  001C80  C025  F011         	movff	stoa@l+1,?_stoa+1
 12453  001C84  0012               	return		;funcret
 12454  001C86                     __end_of_stoa:
 12455                           	opt callstack 0
 12456                           
 12457 ;; *************** function _dtoa *****************
 12458 ;; Defined at:
 12459 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12462 ;;		 -> NULL(0), 
 12463 ;;  d               8   35[COMRAM] long long 
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;  n               8   59[COMRAM] long long 
 12466 ;;  i               2   67[COMRAM] int 
 12467 ;;  s               2   57[COMRAM] int 
 12468 ;;  w               2   55[COMRAM] int 
 12469 ;;  p               2   53[COMRAM] int 
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  2   33[COMRAM] int 
 12472 ;; Registers used:
 12473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12479 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12480 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12481 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12482 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12483 ;;Total ram usage:       36 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:    9
 12486 ;; This function calls:
 12487 ;;		___aodiv
 12488 ;;		___aomod
 12489 ;;		_abs
 12490 ;;		_pad
 12491 ;; This function is called by:
 12492 ;;		_vfpfcnvrt
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           	psect	text65
 12497  000B08                     __ptext65:
 12498                           	opt callstack 0
 12499  000B08                     _dtoa:
 12500                           	opt callstack 18
 12501  000B08                     
 12502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12503  000B08  C024  F03C         	movff	dtoa@d,dtoa@n
 12504  000B0C  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 12505  000B10  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 12506  000B14  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 12507  000B18  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 12508  000B1C  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 12509  000B20  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 12510  000B24  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 12511  000B28                     
 12512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12513  000B28  BE43               	btfsc	(dtoa@n+7)^0,7,c
 12514  000B2A  EF99  F005         	goto	u5671
 12515  000B2E  EF9C  F005         	goto	u5670
 12516  000B32                     u5671:
 12517  000B32  0E01               	movlw	1
 12518  000B34  EF9D  F005         	goto	u5680
 12519  000B38                     u5670:
 12520  000B38  0E00               	movlw	0
 12521  000B3A                     u5680:
 12522  000B3A  6E3A               	movwf	dtoa@s^0,c
 12523  000B3C  6A3B               	clrf	(dtoa@s+1)^0,c
 12524                           
 12525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12526  000B3E  503A               	movf	dtoa@s^0,w,c
 12527  000B40  103B               	iorwf	(dtoa@s+1)^0,w,c
 12528  000B42  B4D8               	btfsc	status,2,c
 12529  000B44  EFA6  F005         	goto	u5691
 12530  000B48  EFA8  F005         	goto	u5690
 12531  000B4C                     u5691:
 12532  000B4C  EFB8  F005         	goto	l6023
 12533  000B50                     u5690:
 12534  000B50                     
 12535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12536  000B50  1E43               	comf	(dtoa@n+7)^0,f,c
 12537  000B52  1E42               	comf	(dtoa@n+6)^0,f,c
 12538  000B54  1E41               	comf	(dtoa@n+5)^0,f,c
 12539  000B56  1E40               	comf	(dtoa@n+4)^0,f,c
 12540  000B58  1E3F               	comf	(dtoa@n+3)^0,f,c
 12541  000B5A  1E3E               	comf	(dtoa@n+2)^0,f,c
 12542  000B5C  1E3D               	comf	(dtoa@n+1)^0,f,c
 12543  000B5E  6C3C               	negf	dtoa@n^0,c
 12544  000B60  0E00               	movlw	0
 12545  000B62  223D               	addwfc	(dtoa@n+1)^0,f,c
 12546  000B64  223E               	addwfc	(dtoa@n+2)^0,f,c
 12547  000B66  223F               	addwfc	(dtoa@n+3)^0,f,c
 12548  000B68  2240               	addwfc	(dtoa@n+4)^0,f,c
 12549  000B6A  2241               	addwfc	(dtoa@n+5)^0,f,c
 12550  000B6C  2242               	addwfc	(dtoa@n+6)^0,f,c
 12551  000B6E  2243               	addwfc	(dtoa@n+7)^0,f,c
 12552  000B70                     l6023:
 12553                           
 12554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12555  000B70  0100               	movlb	0	; () banked
 12556  000B72  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 12557  000B74  EFBE  F005         	goto	u5701
 12558  000B78  EFC0  F005         	goto	u5700
 12559  000B7C                     u5701:
 12560  000B7C  EFC1  F005         	goto	l6027
 12561  000B80                     u5700:
 12562  000B80                     
 12563                           ; BSR set to: 0
 12564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12565  000B80  9257               	bcf	_flags^0,1,c
 12566  000B82                     l6027:
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12570  000B82  BFA6               	btfsc	(_prec+1)& (0+255),7,b
 12571  000B84  EFCE  F005         	goto	u5710
 12572  000B88  51A6               	movf	(_prec+1)& (0+255),w,b
 12573  000B8A  E106               	bnz	u5711
 12574  000B8C  05A5               	decf	_prec& (0+255),w,b
 12575  000B8E  B0D8               	btfsc	status,0,c
 12576  000B90  EFCC  F005         	goto	u5711
 12577  000B94  EFCE  F005         	goto	u5710
 12578  000B98                     u5711:
 12579  000B98  EFD4  F005         	goto	l1005
 12580  000B9C                     u5710:
 12581  000B9C                     
 12582                           ; BSR set to: 0
 12583  000B9C  0E00               	movlw	0
 12584  000B9E  6E37               	movwf	(dtoa@p+1)^0,c
 12585  000BA0  0E01               	movlw	1
 12586  000BA2  6E36               	movwf	dtoa@p^0,c
 12587  000BA4  EFD8  F005         	goto	l1007
 12588  000BA8                     l1005:
 12589                           
 12590                           ; BSR set to: 0
 12591  000BA8  C0A5  F036         	movff	_prec,dtoa@p
 12592  000BAC  C0A6  F037         	movff	_prec+1,dtoa@p+1
 12593  000BB0                     l1007:
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12597  000BB0  C0A3  F038         	movff	_width,dtoa@w
 12598  000BB4  C0A4  F039         	movff	_width+1,dtoa@w+1
 12599  000BB8                     
 12600                           ; BSR set to: 0
 12601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12602  000BB8  503A               	movf	dtoa@s^0,w,c
 12603  000BBA  103B               	iorwf	(dtoa@s+1)^0,w,c
 12604  000BBC  A4D8               	btfss	status,2,c
 12605  000BBE  EFE3  F005         	goto	u5721
 12606  000BC2  EFE5  F005         	goto	u5720
 12607  000BC6                     u5721:
 12608  000BC6  EFEC  F005         	goto	l6035
 12609  000BCA                     u5720:
 12610  000BCA                     
 12611                           ; BSR set to: 0
 12612  000BCA  A457               	btfss	_flags^0,2,c
 12613  000BCC  EFEA  F005         	goto	u5731
 12614  000BD0  EFEC  F005         	goto	u5730
 12615  000BD4                     u5731:
 12616  000BD4  EFEF  F005         	goto	l6037
 12617  000BD8                     u5730:
 12618  000BD8                     l6035:
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12622  000BD8  0638               	decf	dtoa@w^0,f,c
 12623  000BDA  A0D8               	btfss	status,0,c
 12624  000BDC  0639               	decf	(dtoa@w+1)^0,f,c
 12625  000BDE                     l6037:
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12629  000BDE  0E00               	movlw	0
 12630  000BE0  6E45               	movwf	(dtoa@i+1)^0,c
 12631  000BE2  0E1F               	movlw	31
 12632  000BE4  6E44               	movwf	dtoa@i^0,c
 12633  000BE6                     
 12634                           ; BSR set to: 0
 12635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12636  000BE6  0E00               	movlw	0
 12637  000BE8  0101               	movlb	1	; () banked
 12638  000BEA  6FD3               	movwf	(_dbuf+31)& (0+255),b
 12639                           
 12640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12641  000BEC  EF74  F006         	goto	l6051
 12642  000BF0                     l6041:
 12643                           
 12644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12645  000BF0  0644               	decf	dtoa@i^0,f,c
 12646  000BF2  A0D8               	btfss	status,0,c
 12647  000BF4  0645               	decf	(dtoa@i+1)^0,f,c
 12648  000BF6                     
 12649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12650  000BF6  0EB4               	movlw	low _dbuf
 12651  000BF8  2444               	addwf	dtoa@i^0,w,c
 12652  000BFA  6ED9               	movwf	fsr2l,c
 12653  000BFC  0E01               	movlw	high _dbuf
 12654  000BFE  2045               	addwfc	(dtoa@i+1)^0,w,c
 12655  000C00  6EDA               	movwf	fsr2h,c
 12656  000C02  C03C  F005         	movff	dtoa@n,___aomod@dividend
 12657  000C06  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 12658  000C0A  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 12659  000C0E  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 12660  000C12  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 12661  000C16  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 12662  000C1A  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 12663  000C1E  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 12664  000C22  0E0A               	movlw	10
 12665  000C24  6E0D               	movwf	___aomod@divisor^0,c
 12666  000C26  0E00               	movlw	0
 12667  000C28  6E0E               	movwf	(___aomod@divisor+1)^0,c
 12668  000C2A  0E00               	movlw	0
 12669  000C2C  6E0F               	movwf	(___aomod@divisor+2)^0,c
 12670  000C2E  0E00               	movlw	0
 12671  000C30  6E10               	movwf	(___aomod@divisor+3)^0,c
 12672  000C32  0E00               	movlw	0
 12673  000C34  6E11               	movwf	(___aomod@divisor+4)^0,c
 12674  000C36  0E00               	movlw	0
 12675  000C38  6E12               	movwf	(___aomod@divisor+5)^0,c
 12676  000C3A  0E00               	movlw	0
 12677  000C3C  6E13               	movwf	(___aomod@divisor+6)^0,c
 12678  000C3E  0E00               	movlw	0
 12679  000C40  6E14               	movwf	(___aomod@divisor+7)^0,c
 12680  000C42  ECD4  F00F         	call	___aomod	;wreg free
 12681  000C46  C005  F02C         	movff	?___aomod,??_dtoa
 12682  000C4A  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 12683  000C4E  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 12684  000C52  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 12685  000C56  C009  F030         	movff	?___aomod+4,??_dtoa+4
 12686  000C5A  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 12687  000C5E  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 12688  000C62  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 12689  000C66  C02C  F017         	movff	??_dtoa,abs@a
 12690  000C6A  C02E  F018         	movff	??_dtoa+2,abs@a+1
 12691  000C6E  EC33  F01D         	call	_abs	;wreg free
 12692  000C72  5017               	movf	?_abs^0,w,c
 12693  000C74  0F30               	addlw	48
 12694  000C76  6EDF               	movwf	indf2,c
 12695  000C78                     
 12696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12697  000C78  0636               	decf	dtoa@p^0,f,c
 12698  000C7A  A0D8               	btfss	status,0,c
 12699  000C7C  0637               	decf	(dtoa@p+1)^0,f,c
 12700  000C7E                     
 12701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12702  000C7E  0638               	decf	dtoa@w^0,f,c
 12703  000C80  A0D8               	btfss	status,0,c
 12704  000C82  0639               	decf	(dtoa@w+1)^0,f,c
 12705  000C84                     
 12706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12707  000C84  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 12708  000C88  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 12709  000C8C  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 12710  000C90  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 12711  000C94  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 12712  000C98  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 12713  000C9C  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 12714  000CA0  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 12715  000CA4  0E0A               	movlw	10
 12716  000CA6  6E0D               	movwf	___aodiv@divisor^0,c
 12717  000CA8  0E00               	movlw	0
 12718  000CAA  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 12719  000CAC  0E00               	movlw	0
 12720  000CAE  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 12721  000CB0  0E00               	movlw	0
 12722  000CB2  6E10               	movwf	(___aodiv@divisor+3)^0,c
 12723  000CB4  0E00               	movlw	0
 12724  000CB6  6E11               	movwf	(___aodiv@divisor+4)^0,c
 12725  000CB8  0E00               	movlw	0
 12726  000CBA  6E12               	movwf	(___aodiv@divisor+5)^0,c
 12727  000CBC  0E00               	movlw	0
 12728  000CBE  6E13               	movwf	(___aodiv@divisor+6)^0,c
 12729  000CC0  0E00               	movlw	0
 12730  000CC2  6E14               	movwf	(___aodiv@divisor+7)^0,c
 12731  000CC4  EC10  F00F         	call	___aodiv	;wreg free
 12732  000CC8  C005  F03C         	movff	?___aodiv,dtoa@n
 12733  000CCC  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 12734  000CD0  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 12735  000CD4  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 12736  000CD8  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 12737  000CDC  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 12738  000CE0  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 12739  000CE4  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 12740  000CE8                     l6051:
 12741                           
 12742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12743  000CE8  BE45               	btfsc	(dtoa@i+1)^0,7,c
 12744  000CEA  EF7F  F006         	goto	u5741
 12745  000CEE  5045               	movf	(dtoa@i+1)^0,w,c
 12746  000CF0  E108               	bnz	u5740
 12747  000CF2  0444               	decf	dtoa@i^0,w,c
 12748  000CF4  A0D8               	btfss	status,0,c
 12749  000CF6  EF7F  F006         	goto	u5741
 12750  000CFA  EF81  F006         	goto	u5740
 12751  000CFE                     u5741:
 12752  000CFE  EFB1  F006         	goto	l6061
 12753  000D02                     u5740:
 12754  000D02  503C               	movf	dtoa@n^0,w,c
 12755  000D04  103D               	iorwf	(dtoa@n+1)^0,w,c
 12756  000D06  103E               	iorwf	(dtoa@n+2)^0,w,c
 12757  000D08  103F               	iorwf	(dtoa@n+3)^0,w,c
 12758  000D0A  1040               	iorwf	(dtoa@n+4)^0,w,c
 12759  000D0C  1041               	iorwf	(dtoa@n+5)^0,w,c
 12760  000D0E  1042               	iorwf	(dtoa@n+6)^0,w,c
 12761  000D10  1043               	iorwf	(dtoa@n+7)^0,w,c
 12762  000D12  A4D8               	btfss	status,2,c
 12763  000D14  EF8E  F006         	goto	u5751
 12764  000D18  EF90  F006         	goto	u5750
 12765  000D1C                     u5751:
 12766  000D1C  EFF8  F005         	goto	l6041
 12767  000D20                     u5750:
 12768  000D20  BE37               	btfsc	(dtoa@p+1)^0,7,c
 12769  000D22  EF9D  F006         	goto	u5760
 12770  000D26  5037               	movf	(dtoa@p+1)^0,w,c
 12771  000D28  E106               	bnz	u5761
 12772  000D2A  0436               	decf	dtoa@p^0,w,c
 12773  000D2C  B0D8               	btfsc	status,0,c
 12774  000D2E  EF9B  F006         	goto	u5761
 12775  000D32  EF9D  F006         	goto	u5760
 12776  000D36                     u5761:
 12777  000D36  EFF8  F005         	goto	l6041
 12778  000D3A                     u5760:
 12779  000D3A  BE39               	btfsc	(dtoa@w+1)^0,7,c
 12780  000D3C  EFA8  F006         	goto	u5771
 12781  000D40  5039               	movf	(dtoa@w+1)^0,w,c
 12782  000D42  E108               	bnz	u5770
 12783  000D44  0438               	decf	dtoa@w^0,w,c
 12784  000D46  A0D8               	btfss	status,0,c
 12785  000D48  EFA8  F006         	goto	u5771
 12786  000D4C  EFAA  F006         	goto	u5770
 12787  000D50                     u5771:
 12788  000D50  EFB1  F006         	goto	l6061
 12789  000D54                     u5770:
 12790  000D54  B257               	btfsc	_flags^0,1,c
 12791  000D56  EFAF  F006         	goto	u5781
 12792  000D5A  EFB1  F006         	goto	u5780
 12793  000D5E                     u5781:
 12794  000D5E  EFF8  F005         	goto	l6041
 12795  000D62                     u5780:
 12796  000D62                     l6061:
 12797                           
 12798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12799  000D62  503A               	movf	dtoa@s^0,w,c
 12800  000D64  103B               	iorwf	(dtoa@s+1)^0,w,c
 12801  000D66  A4D8               	btfss	status,2,c
 12802  000D68  EFB8  F006         	goto	u5791
 12803  000D6C  EFBA  F006         	goto	u5790
 12804  000D70                     u5791:
 12805  000D70  EFC1  F006         	goto	l6065
 12806  000D74                     u5790:
 12807  000D74  A457               	btfss	_flags^0,2,c
 12808  000D76  EFBF  F006         	goto	u5801
 12809  000D7A  EFC1  F006         	goto	u5800
 12810  000D7E                     u5801:
 12811  000D7E  EFDF  F006         	goto	l6075
 12812  000D82                     u5800:
 12813  000D82                     l6065:
 12814                           
 12815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12816  000D82  0644               	decf	dtoa@i^0,f,c
 12817  000D84  A0D8               	btfss	status,0,c
 12818  000D86  0645               	decf	(dtoa@i+1)^0,f,c
 12819  000D88                     
 12820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12821  000D88  503A               	movf	dtoa@s^0,w,c
 12822  000D8A  103B               	iorwf	(dtoa@s+1)^0,w,c
 12823  000D8C  A4D8               	btfss	status,2,c
 12824  000D8E  EFCB  F006         	goto	u5811
 12825  000D92  EFCD  F006         	goto	u5810
 12826  000D96                     u5811:
 12827  000D96  EFD3  F006         	goto	l6071
 12828  000D9A                     u5810:
 12829  000D9A  0E00               	movlw	0
 12830  000D9C  6E35               	movwf	(_dtoa$1528+1)^0,c
 12831  000D9E  0E2B               	movlw	43
 12832  000DA0  6E34               	movwf	_dtoa$1528^0,c
 12833  000DA2  EFD7  F006         	goto	l6073
 12834  000DA6                     l6071:
 12835  000DA6  0E00               	movlw	0
 12836  000DA8  6E35               	movwf	(_dtoa$1528+1)^0,c
 12837  000DAA  0E2D               	movlw	45
 12838  000DAC  6E34               	movwf	_dtoa$1528^0,c
 12839  000DAE                     l6073:
 12840  000DAE  0EB4               	movlw	low _dbuf
 12841  000DB0  2444               	addwf	dtoa@i^0,w,c
 12842  000DB2  6ED9               	movwf	fsr2l,c
 12843  000DB4  0E01               	movlw	high _dbuf
 12844  000DB6  2045               	addwfc	(dtoa@i+1)^0,w,c
 12845  000DB8  6EDA               	movwf	fsr2h,c
 12846  000DBA  C034  FFDF         	movff	_dtoa$1528,indf2
 12847  000DBE                     l6075:
 12848                           
 12849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12850  000DBE  C022  F017         	movff	dtoa@fp,pad@fp
 12851  000DC2  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 12852  000DC6  0EB4               	movlw	low _dbuf
 12853  000DC8  2444               	addwf	dtoa@i^0,w,c
 12854  000DCA  6E19               	movwf	pad@buf^0,c
 12855  000DCC  0E01               	movlw	high _dbuf
 12856  000DCE  2045               	addwfc	(dtoa@i+1)^0,w,c
 12857  000DD0  6E1A               	movwf	(pad@buf+1)^0,c
 12858  000DD2  C038  F01B         	movff	dtoa@w,pad@p
 12859  000DD6  C039  F01C         	movff	dtoa@w+1,pad@p+1
 12860  000DDA  EC6C  F016         	call	_pad	;wreg free
 12861  000DDE  C017  F022         	movff	?_pad,?_dtoa
 12862  000DE2  C018  F023         	movff	?_pad+1,?_dtoa+1
 12863  000DE6  0012               	return		;funcret
 12864  000DE8                     __end_of_dtoa:
 12865                           	opt callstack 0
 12866                           
 12867 ;; *************** function _pad *****************
 12868 ;; Defined at:
 12869 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12872 ;;		 -> NULL(0), 
 12873 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12874 ;;		 -> dbuf(32), 
 12875 ;;  p               2   26[COMRAM] int 
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;  w               2   31[COMRAM] int 
 12878 ;;  i               2   29[COMRAM] int 
 12879 ;; Return value:  Size  Location     Type
 12880 ;;                  2   22[COMRAM] int 
 12881 ;; Registers used:
 12882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12883 ;; Tracked objects:
 12884 ;;		On entry : 0/0
 12885 ;;		On exit  : 0/0
 12886 ;;		Unchanged: 0/0
 12887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12888 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12891 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12892 ;;Total ram usage:       11 bytes
 12893 ;; Hardware stack levels used:    1
 12894 ;; Hardware stack levels required when called:    8
 12895 ;; This function calls:
 12896 ;;		_fputc
 12897 ;;		_fputs
 12898 ;;		_strlen
 12899 ;; This function is called by:
 12900 ;;		_dtoa
 12901 ;;		_utoa
 12902 ;;		_xtoa
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text66
 12907  002CD8                     __ptext66:
 12908                           	opt callstack 0
 12909  002CD8                     _pad:
 12910                           	opt callstack 18
 12911  002CD8                     
 12912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12913  002CD8  A057               	btfss	_flags^0,0,c
 12914  002CDA  EF71  F016         	goto	u5311
 12915  002CDE  EF73  F016         	goto	u5310
 12916  002CE2                     u5311:
 12917  002CE2  EF7D  F016         	goto	l5837
 12918  002CE6                     u5310:
 12919  002CE6                     
 12920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12921  002CE6  C019  F010         	movff	pad@buf,fputs@s
 12922  002CEA  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12923  002CEE  C017  F012         	movff	pad@fp,fputs@fp
 12924  002CF2  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12925  002CF6  ECEF  F01C         	call	_fputs	;wreg free
 12926  002CFA                     l5837:
 12927                           
 12928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 12929  002CFA  BE1C               	btfsc	(pad@p+1)^0,7,c
 12930  002CFC  EF82  F016         	goto	u5321
 12931  002D00  EF84  F016         	goto	u5320
 12932  002D04                     u5321:
 12933  002D04  EF8A  F016         	goto	l5841
 12934  002D08                     u5320:
 12935  002D08  C01B  F020         	movff	pad@p,pad@w
 12936  002D0C  C01C  F021         	movff	pad@p+1,pad@w+1
 12937  002D10  EF8E  F016         	goto	l994
 12938  002D14                     l5841:
 12939  002D14  0E00               	movlw	0
 12940  002D16  6E21               	movwf	(pad@w+1)^0,c
 12941  002D18  0E00               	movlw	0
 12942  002D1A  6E20               	movwf	pad@w^0,c
 12943  002D1C                     l994:
 12944                           
 12945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12946  002D1C  0E00               	movlw	0
 12947  002D1E  6E1F               	movwf	(pad@i+1)^0,c
 12948  002D20  0E00               	movlw	0
 12949  002D22  6E1E               	movwf	pad@i^0,c
 12950                           
 12951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12952  002D24  EFA0  F016         	goto	l5847
 12953  002D28                     l5843:
 12954                           
 12955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12956  002D28  0E00               	movlw	0
 12957  002D2A  6E08               	movwf	(fputc@c+1)^0,c
 12958  002D2C  0E20               	movlw	32
 12959  002D2E  6E07               	movwf	fputc@c^0,c
 12960  002D30  C017  F009         	movff	pad@fp,fputc@fp
 12961  002D34  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12962  002D38  ECE4  F017         	call	_fputc	;wreg free
 12963  002D3C                     
 12964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12965  002D3C  4A1E               	infsnz	pad@i^0,f,c
 12966  002D3E  2A1F               	incf	(pad@i+1)^0,f,c
 12967  002D40                     l5847:
 12968                           
 12969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12970  002D40  5020               	movf	pad@w^0,w,c
 12971  002D42  5C1E               	subwf	pad@i^0,w,c
 12972  002D44  501F               	movf	(pad@i+1)^0,w,c
 12973  002D46  0A80               	xorlw	128
 12974  002D48  6E1D               	movwf	??_pad^0,c
 12975  002D4A  5021               	movf	(pad@w+1)^0,w,c
 12976  002D4C  0A80               	xorlw	128
 12977  002D4E  581D               	subwfb	??_pad^0,w,c
 12978  002D50  A0D8               	btfss	status,0,c
 12979  002D52  EFAD  F016         	goto	u5331
 12980  002D56  EFAF  F016         	goto	u5330
 12981  002D5A                     u5331:
 12982  002D5A  EF94  F016         	goto	l5843
 12983  002D5E                     u5330:
 12984  002D5E                     
 12985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12986  002D5E  B057               	btfsc	_flags^0,0,c
 12987  002D60  EFB4  F016         	goto	u5341
 12988  002D64  EFB6  F016         	goto	u5340
 12989  002D68                     u5341:
 12990  002D68  EFC0  F016         	goto	l5851
 12991  002D6C                     u5340:
 12992  002D6C                     
 12993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12994  002D6C  C019  F010         	movff	pad@buf,fputs@s
 12995  002D70  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12996  002D74  C017  F012         	movff	pad@fp,fputs@fp
 12997  002D78  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12998  002D7C  ECEF  F01C         	call	_fputs	;wreg free
 12999  002D80                     l5851:
 13000                           
 13001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13002  002D80  C019  F005         	movff	pad@buf,strlen@s
 13003  002D84  C01A  F006         	movff	pad@buf+1,strlen@s+1
 13004  002D88  EC10  F01C         	call	_strlen	;wreg free
 13005  002D8C  5020               	movf	pad@w^0,w,c
 13006  002D8E  2405               	addwf	?_strlen^0,w,c
 13007  002D90  6E17               	movwf	?_pad^0,c
 13008  002D92  5021               	movf	(pad@w+1)^0,w,c
 13009  002D94  2006               	addwfc	(?_strlen+1)^0,w,c
 13010  002D96  6E18               	movwf	(?_pad+1)^0,c
 13011  002D98  0012               	return		;funcret
 13012  002D9A                     __end_of_pad:
 13013                           	opt callstack 0
 13014                           
 13015 ;; *************** function _strlen *****************
 13016 ;; Defined at:
 13017 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;  s               2    4[COMRAM] PTR const unsigned char 
 13020 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1453(20), 
 13021 ;;		 -> ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), STR_34(9), STR_33(12), 
 13022 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;  a               2    6[COMRAM] PTR const unsigned char 
 13025 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1453(20), 
 13026 ;;		 -> ValidateCmd@ConfName_1449(20), ValidateCmd@ConfName(20), STR_34(9), STR_33(12), 
 13027 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  2    4[COMRAM] unsigned int 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13041 ;;Total ram usage:        4 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:    4
 13044 ;; This function calls:
 13045 ;;		Nothing
 13046 ;; This function is called by:
 13047 ;;		_ReadRX232
 13048 ;;		_SaveCardDat
 13049 ;;		_pad
 13050 ;;		_stoa
 13051 ;;		_strcat
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text67
 13056  003820                     __ptext67:
 13057                           	opt callstack 0
 13058  003820                     _strlen:
 13059                           	opt callstack 21
 13060  003820  C005  F007         	movff	strlen@s,strlen@a
 13061  003824  C006  F008         	movff	strlen@s+1,strlen@a+1
 13062  003828  EF18  F01C         	goto	l5815
 13063  00382C                     l5813:
 13064  00382C  4A05               	infsnz	strlen@s^0,f,c
 13065  00382E  2A06               	incf	(strlen@s+1)^0,f,c
 13066  003830                     l5815:
 13067  003830  C005  FFF6         	movff	strlen@s,tblptrl
 13068  003834  C006  FFF7         	movff	strlen@s+1,tblptrh
 13069  003838  0E00               	movlw	low (__mediumconst shr (0+16))
 13070  00383A  6EF8               	movwf	tblptru,c
 13071  00383C  0E0E               	movlw	(high __ramtop+-1)
 13072  00383E  64F7               	cpfsgt	tblptrh,c
 13073  003840  D003               	bra	u5267
 13074  003842  0008               	tblrd		*
 13075  003844  50F5               	movf	tablat,w,c
 13076  003846  D005               	bra	u5260
 13077  003848                     u5267:
 13078  003848  CFF6 FFE9          	movff	tblptrl,fsr0l
 13079  00384C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13080  003850  50EF               	movf	indf0,w,c
 13081  003852                     u5260:
 13082  003852  0900               	iorlw	0
 13083  003854  A4D8               	btfss	status,2,c
 13084  003856  EF2F  F01C         	goto	u5271
 13085  00385A  EF31  F01C         	goto	u5270
 13086  00385E                     u5271:
 13087  00385E  EF16  F01C         	goto	l5813
 13088  003862                     u5270:
 13089  003862  5007               	movf	strlen@a^0,w,c
 13090  003864  5C05               	subwf	strlen@s^0,w,c
 13091  003866  6E05               	movwf	?_strlen^0,c
 13092  003868  5008               	movf	(strlen@a+1)^0,w,c
 13093  00386A  5806               	subwfb	(strlen@s+1)^0,w,c
 13094  00386C  6E06               	movwf	(?_strlen+1)^0,c
 13095  00386E  0012               	return		;funcret
 13096  003870                     __end_of_strlen:
 13097                           	opt callstack 0
 13098                           
 13099 ;; *************** function _fputs *****************
 13100 ;; Defined at:
 13101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;  s               2   15[COMRAM] PTR const unsigned char 
 13104 ;;		 -> dbuf(32), 
 13105 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 13106 ;;		 -> NULL(0), 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;  i               2   20[COMRAM] int 
 13109 ;;  c               1   19[COMRAM] unsigned char 
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  2   15[COMRAM] int 
 13112 ;; Registers used:
 13113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/0
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13120 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13123 ;;Total ram usage:        7 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:    7
 13126 ;; This function calls:
 13127 ;;		_fputc
 13128 ;; This function is called by:
 13129 ;;		_pad
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text68
 13134  0039DE                     __ptext68:
 13135                           	opt callstack 0
 13136  0039DE                     _fputs:
 13137                           	opt callstack 18
 13138  0039DE  0E00               	movlw	0
 13139  0039E0  6E16               	movwf	(fputs@i+1)^0,c
 13140  0039E2  0E00               	movlw	0
 13141  0039E4  6E15               	movwf	fputs@i^0,c
 13142  0039E6  EF00  F01D         	goto	l5827
 13143  0039EA                     l5823:
 13144  0039EA  C014  F007         	movff	fputs@c,fputc@c
 13145  0039EE  6A08               	clrf	(fputc@c+1)^0,c
 13146  0039F0  C012  F009         	movff	fputs@fp,fputc@fp
 13147  0039F4  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 13148  0039F8  ECE4  F017         	call	_fputc	;wreg free
 13149  0039FC  4A15               	infsnz	fputs@i^0,f,c
 13150  0039FE  2A16               	incf	(fputs@i+1)^0,f,c
 13151  003A00                     l5827:
 13152  003A00  5015               	movf	fputs@i^0,w,c
 13153  003A02  2410               	addwf	fputs@s^0,w,c
 13154  003A04  6ED9               	movwf	fsr2l,c
 13155  003A06  5016               	movf	(fputs@i+1)^0,w,c
 13156  003A08  2011               	addwfc	(fputs@s+1)^0,w,c
 13157  003A0A  6EDA               	movwf	fsr2h,c
 13158  003A0C  50DF               	movf	indf2,w,c
 13159  003A0E  6E14               	movwf	fputs@c^0,c
 13160  003A10  5014               	movf	fputs@c^0,w,c
 13161  003A12  A4D8               	btfss	status,2,c
 13162  003A14  EF0E  F01D         	goto	u5281
 13163  003A18  EF10  F01D         	goto	u5280
 13164  003A1C                     u5281:
 13165  003A1C  EFF5  F01C         	goto	l5823
 13166  003A20                     u5280:
 13167  003A20  0012               	return		;funcret
 13168  003A22                     __end_of_fputs:
 13169                           	opt callstack 0
 13170                           
 13171 ;; *************** function _fputc *****************
 13172 ;; Defined at:
 13173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  c               2    6[COMRAM] int 
 13176 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 13177 ;;		 -> NULL(0), 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;		None
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  2    6[COMRAM] int 
 13182 ;; Registers used:
 13183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13193 ;;Total ram usage:        9 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:    6
 13196 ;; This function calls:
 13197 ;;		_putch
 13198 ;; This function is called by:
 13199 ;;		_pad
 13200 ;;		_stoa
 13201 ;;		_vfpfcnvrt
 13202 ;;		_fputs
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text69
 13207  002FC8                     __ptext69:
 13208                           	opt callstack 0
 13209  002FC8                     _fputc:
 13210                           	opt callstack 18
 13211  002FC8  5009               	movf	fputc@fp^0,w,c
 13212  002FCA  100A               	iorwf	(fputc@fp+1)^0,w,c
 13213  002FCC  B4D8               	btfsc	status,2,c
 13214  002FCE  EFEB  F017         	goto	u5221
 13215  002FD2  EFED  F017         	goto	u5220
 13216  002FD6                     u5221:
 13217  002FD6  EFF6  F017         	goto	l5801
 13218  002FDA                     u5220:
 13219  002FDA  5009               	movf	fputc@fp^0,w,c
 13220  002FDC  100A               	iorwf	(fputc@fp+1)^0,w,c
 13221  002FDE  A4D8               	btfss	status,2,c
 13222  002FE0  EFF4  F017         	goto	u5231
 13223  002FE4  EFF6  F017         	goto	u5230
 13224  002FE8                     u5231:
 13225  002FE8  EFFB  F017         	goto	l5803
 13226  002FEC                     u5230:
 13227  002FEC                     l5801:
 13228  002FEC  5007               	movf	fputc@c^0,w,c
 13229  002FEE  EC0F  F01F         	call	_putch
 13230  002FF2  EF2E  F018         	goto	l1894
 13231  002FF6                     l5803:
 13232  002FF6  EE20 F004          	lfsr	2,4
 13233  002FFA  5009               	movf	fputc@fp^0,w,c
 13234  002FFC  26D9               	addwf	fsr2l,f,c
 13235  002FFE  500A               	movf	(fputc@fp+1)^0,w,c
 13236  003000  22DA               	addwfc	fsr2h,f,c
 13237  003002  50DE               	movf	postinc2,w,c
 13238  003004  10DE               	iorwf	postinc2,w,c
 13239  003006  B4D8               	btfsc	status,2,c
 13240  003008  EF08  F018         	goto	u5241
 13241  00300C  EF0A  F018         	goto	u5240
 13242  003010                     u5241:
 13243  003010  EF25  F018         	goto	l5807
 13244  003014                     u5240:
 13245  003014  EE20 F004          	lfsr	2,4
 13246  003018  5009               	movf	fputc@fp^0,w,c
 13247  00301A  26D9               	addwf	fsr2l,f,c
 13248  00301C  500A               	movf	(fputc@fp+1)^0,w,c
 13249  00301E  22DA               	addwfc	fsr2h,f,c
 13250  003020  EE10 F002          	lfsr	1,2
 13251  003024  5009               	movf	fputc@fp^0,w,c
 13252  003026  26E1               	addwf	fsr1l,f,c
 13253  003028  500A               	movf	(fputc@fp+1)^0,w,c
 13254  00302A  22E2               	addwfc	fsr1h,f,c
 13255  00302C  50DE               	movf	postinc2,w,c
 13256  00302E  5CE6               	subwf	postinc1,w,c
 13257  003030  50E6               	movf	postinc1,w,c
 13258  003032  0A80               	xorlw	128
 13259  003034  6E0F               	movwf	(??_fputc+4)^0,c
 13260  003036  50DE               	movf	postinc2,w,c
 13261  003038  0A80               	xorlw	128
 13262  00303A  580F               	subwfb	(??_fputc+4)^0,w,c
 13263  00303C  B0D8               	btfsc	status,0,c
 13264  00303E  EF23  F018         	goto	u5251
 13265  003042  EF25  F018         	goto	u5250
 13266  003046                     u5251:
 13267  003046  EF2E  F018         	goto	l1894
 13268  00304A                     u5250:
 13269  00304A                     l5807:
 13270  00304A  EE20 F002          	lfsr	2,2
 13271  00304E  5009               	movf	fputc@fp^0,w,c
 13272  003050  26D9               	addwf	fsr2l,f,c
 13273  003052  500A               	movf	(fputc@fp+1)^0,w,c
 13274  003054  22DA               	addwfc	fsr2h,f,c
 13275  003056  2ADE               	incf	postinc2,f,c
 13276  003058  0E00               	movlw	0
 13277  00305A  22DD               	addwfc	postdec2,f,c
 13278  00305C                     l1894:
 13279  00305C  0012               	return		;funcret
 13280  00305E                     __end_of_fputc:
 13281                           	opt callstack 0
 13282                           
 13283 ;; *************** function _putch *****************
 13284 ;; Defined at:
 13285 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;  txData          1    wreg     unsigned char 
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;  txData          1    5[COMRAM] unsigned char 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      void 
 13292 ;; Registers used:
 13293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13303 ;;Total ram usage:        1 bytes
 13304 ;; Hardware stack levels used:    1
 13305 ;; Hardware stack levels required when called:    5
 13306 ;; This function calls:
 13307 ;;		_EUSART2_Write
 13308 ;; This function is called by:
 13309 ;;		_fputc
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text70
 13314  003E1E                     __ptext70:
 13315                           	opt callstack 0
 13316  003E1E                     _putch:
 13317                           	opt callstack 18
 13318                           
 13319                           ;incstack = 0
 13320                           ;putch@txData stored from wreg
 13321  003E1E  6E06               	movwf	putch@txData^0,c
 13322  003E20                     
 13323                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 13324  003E20  5006               	movf	putch@txData^0,w,c
 13325  003E22  EC60  F01B         	call	_EUSART2_Write
 13326  003E26  0012               	return		;funcret
 13327  003E28                     __end_of_putch:
 13328                           	opt callstack 0
 13329                           
 13330 ;; *************** function _EUSART2_Write *****************
 13331 ;; Defined at:
 13332 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  txData          1    wreg     unsigned char 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  txData          1    4[COMRAM] unsigned char 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  1    wreg      void 
 13339 ;; Registers used:
 13340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13350 ;;Total ram usage:        1 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:    4
 13353 ;; This function calls:
 13354 ;;		Nothing
 13355 ;; This function is called by:
 13356 ;;		_putch
 13357 ;;		_ReadRX232
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text71
 13362  0036C0                     __ptext71:
 13363                           	opt callstack 0
 13364  0036C0                     _EUSART2_Write:
 13365                           	opt callstack 18
 13366                           
 13367                           ;incstack = 0
 13368                           ;EUSART2_Write@txData stored from wreg
 13369  0036C0  6E05               	movwf	EUSART2_Write@txData^0,c
 13370  0036C2                     l5779:
 13371                           
 13372                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 13373  0036C2  0100               	movlb	0	; () banked
 13374  0036C4  51BC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 13375  0036C6  B4D8               	btfsc	status,2,c
 13376  0036C8  EF68  F01B         	goto	u5191
 13377  0036CC  EF6A  F01B         	goto	u5190
 13378  0036D0                     u5191:
 13379  0036D0  EF61  F01B         	goto	l5779
 13380  0036D4                     u5190:
 13381  0036D4                     
 13382                           ; BSR set to: 0
 13383                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 13384  0036D4  010E               	movlb	14	; () banked
 13385  0036D6  BDC5               	btfsc	197,6,b	;volatile
 13386  0036D8  EF70  F01B         	goto	u5201
 13387  0036DC  EF72  F01B         	goto	u5200
 13388  0036E0                     u5201:
 13389  0036E0  EF76  F01B         	goto	l321
 13390  0036E4                     u5200:
 13391  0036E4                     
 13392                           ; BSR set to: 14
 13393                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 13394  0036E4  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 13395                           
 13396                           ;mcc_generated_files/eusart2.c: 184:     }
 13397  0036E8  EF8C  F01B         	goto	l5793
 13398  0036EC                     l321:
 13399                           
 13400                           ; BSR set to: 14
 13401                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 13402  0036EC  9DC5               	bcf	197,6,b	;volatile
 13403  0036EE                     
 13404                           ; BSR set to: 14
 13405                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 13406  0036EE  0E84               	movlw	low _eusart2TxBuffer
 13407  0036F0  0100               	movlb	0	; () banked
 13408  0036F2  25BA               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 13409  0036F4  6ED9               	movwf	fsr2l,c
 13410  0036F6  6ADA               	clrf	fsr2h,c
 13411  0036F8  0E02               	movlw	high _eusart2TxBuffer
 13412  0036FA  22DA               	addwfc	fsr2h,f,c
 13413  0036FC  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 13414  003700                     
 13415                           ; BSR set to: 0
 13416  003700  2BBA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 13417  003702                     
 13418                           ; BSR set to: 0
 13419                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 13420  003702  0E1F               	movlw	31
 13421  003704  65BA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 13422  003706  EF87  F01B         	goto	u5211
 13423  00370A  EF89  F01B         	goto	u5210
 13424  00370E                     u5211:
 13425  00370E  EF8B  F01B         	goto	l5791
 13426  003712                     u5210:
 13427  003712                     
 13428                           ; BSR set to: 0
 13429                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 13430  003712  0E00               	movlw	0
 13431  003714  6FBA               	movwf	_eusart2TxHead& (0+255),b	;volatile
 13432  003716                     l5791:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 13436  003716  07BC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13437  003718                     l5793:
 13438                           
 13439                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 13440  003718  010E               	movlb	14	; () banked
 13441  00371A  8DC5               	bsf	197,6,b	;volatile
 13442  00371C                     
 13443                           ; BSR set to: 14
 13444  00371C  0012               	return		;funcret
 13445  00371E                     __end_of_EUSART2_Write:
 13446                           	opt callstack 0
 13447                           
 13448 ;; *************** function _abs *****************
 13449 ;; Defined at:
 13450 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;  a               2   22[COMRAM] int 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  2   22[COMRAM] int 
 13457 ;; Registers used:
 13458 ;;		wreg, status,2, status,0
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13468 ;;Total ram usage:        4 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    4
 13471 ;; This function calls:
 13472 ;;		Nothing
 13473 ;; This function is called by:
 13474 ;;		_dtoa
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           	psect	text72
 13479  003A66                     __ptext72:
 13480                           	opt callstack 0
 13481  003A66                     _abs:
 13482                           	opt callstack 22
 13483  003A66  BE18               	btfsc	(abs@a+1)^0,7,c
 13484  003A68  EF40  F01D         	goto	u5350
 13485  003A6C  5018               	movf	(abs@a+1)^0,w,c
 13486  003A6E  E106               	bnz	u5351
 13487  003A70  0417               	decf	abs@a^0,w,c
 13488  003A72  B0D8               	btfsc	status,0,c
 13489  003A74  EF3E  F01D         	goto	u5351
 13490  003A78  EF40  F01D         	goto	u5350
 13491  003A7C                     u5351:
 13492  003A7C  EF4E  F01D         	goto	l1812
 13493  003A80                     u5350:
 13494  003A80  C017  F019         	movff	abs@a,??_abs
 13495  003A84  C018  F01A         	movff	abs@a+1,??_abs+1
 13496  003A88  1E19               	comf	??_abs^0,f,c
 13497  003A8A  1E1A               	comf	(??_abs+1)^0,f,c
 13498  003A8C  4A19               	infsnz	??_abs^0,f,c
 13499  003A8E  2A1A               	incf	(??_abs+1)^0,f,c
 13500  003A90  C019  F017         	movff	??_abs,?_abs
 13501  003A94  C01A  F018         	movff	??_abs+1,?_abs+1
 13502  003A98  EF52  F01D         	goto	l1815
 13503  003A9C                     l1812:
 13504  003A9C  C017  F017         	movff	abs@a,?_abs
 13505  003AA0  C018  F018         	movff	abs@a+1,?_abs+1
 13506  003AA4                     l1815:
 13507  003AA4  0012               	return		;funcret
 13508  003AA6                     __end_of_abs:
 13509                           	opt callstack 0
 13510                           
 13511 ;; *************** function ___aomod *****************
 13512 ;; Defined at:
 13513 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  dividend        8    4[COMRAM] long long 
 13516 ;;  divisor         8   12[COMRAM] long long 
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;  sign            1   21[COMRAM] unsigned char 
 13519 ;;  counter         1   20[COMRAM] unsigned char 
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  8    4[COMRAM] long long 
 13522 ;; Registers used:
 13523 ;;		wreg, status,2, status,0
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13529 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13532 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13533 ;;Total ram usage:       18 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; Hardware stack levels required when called:    4
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_dtoa
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text73
 13544  001FA8                     __ptext73:
 13545                           	opt callstack 0
 13546  001FA8                     ___aomod:
 13547                           	opt callstack 22
 13548  001FA8  0E00               	movlw	0
 13549  001FAA  6E16               	movwf	___aomod@sign^0,c
 13550  001FAC  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 13551  001FAE  EFDD  F00F         	goto	u5520
 13552  001FB2  EFDB  F00F         	goto	u5521
 13553  001FB6                     u5521:
 13554  001FB6  EFEF  F00F         	goto	l5939
 13555  001FBA                     u5520:
 13556  001FBA  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 13557  001FBC  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 13558  001FBE  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 13559  001FC0  1E09               	comf	(___aomod@dividend+4)^0,f,c
 13560  001FC2  1E08               	comf	(___aomod@dividend+3)^0,f,c
 13561  001FC4  1E07               	comf	(___aomod@dividend+2)^0,f,c
 13562  001FC6  1E06               	comf	(___aomod@dividend+1)^0,f,c
 13563  001FC8  6C05               	negf	___aomod@dividend^0,c
 13564  001FCA  0E00               	movlw	0
 13565  001FCC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 13566  001FCE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 13567  001FD0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 13568  001FD2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 13569  001FD4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 13570  001FD6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 13571  001FD8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 13572  001FDA  0E01               	movlw	1
 13573  001FDC  6E16               	movwf	___aomod@sign^0,c
 13574  001FDE                     l5939:
 13575  001FDE  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 13576  001FE0  EFF6  F00F         	goto	u5530
 13577  001FE4  EFF4  F00F         	goto	u5531
 13578  001FE8                     u5531:
 13579  001FE8  EF06  F010         	goto	l5943
 13580  001FEC                     u5530:
 13581  001FEC  1E14               	comf	(___aomod@divisor+7)^0,f,c
 13582  001FEE  1E13               	comf	(___aomod@divisor+6)^0,f,c
 13583  001FF0  1E12               	comf	(___aomod@divisor+5)^0,f,c
 13584  001FF2  1E11               	comf	(___aomod@divisor+4)^0,f,c
 13585  001FF4  1E10               	comf	(___aomod@divisor+3)^0,f,c
 13586  001FF6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 13587  001FF8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 13588  001FFA  6C0D               	negf	___aomod@divisor^0,c
 13589  001FFC  0E00               	movlw	0
 13590  001FFE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 13591  002000  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 13592  002002  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 13593  002004  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 13594  002006  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 13595  002008  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 13596  00200A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 13597  00200C                     l5943:
 13598  00200C  500D               	movf	___aomod@divisor^0,w,c
 13599  00200E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 13600  002010  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 13601  002012  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 13602  002014  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 13603  002016  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 13604  002018  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 13605  00201A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 13606  00201C  B4D8               	btfsc	status,2,c
 13607  00201E  EF13  F010         	goto	u5541
 13608  002022  EF15  F010         	goto	u5540
 13609  002026                     u5541:
 13610  002026  EF5D  F010         	goto	l5959
 13611  00202A                     u5540:
 13612  00202A  0E01               	movlw	1
 13613  00202C  6E15               	movwf	___aomod@counter^0,c
 13614  00202E  EF23  F010         	goto	l5949
 13615  002032                     l5947:
 13616  002032  90D8               	bcf	status,0,c
 13617  002034  360D               	rlcf	___aomod@divisor^0,f,c
 13618  002036  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 13619  002038  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 13620  00203A  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 13621  00203C  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 13622  00203E  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 13623  002040  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 13624  002042  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 13625  002044  2A15               	incf	___aomod@counter^0,f,c
 13626  002046                     l5949:
 13627  002046  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 13628  002048  EF28  F010         	goto	u5551
 13629  00204C  EF2A  F010         	goto	u5550
 13630  002050                     u5551:
 13631  002050  EF19  F010         	goto	l5947
 13632  002054                     u5550:
 13633  002054                     l5951:
 13634  002054  500D               	movf	___aomod@divisor^0,w,c
 13635  002056  5C05               	subwf	___aomod@dividend^0,w,c
 13636  002058  500E               	movf	(___aomod@divisor+1)^0,w,c
 13637  00205A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 13638  00205C  500F               	movf	(___aomod@divisor+2)^0,w,c
 13639  00205E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 13640  002060  5010               	movf	(___aomod@divisor+3)^0,w,c
 13641  002062  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 13642  002064  5011               	movf	(___aomod@divisor+4)^0,w,c
 13643  002066  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 13644  002068  5012               	movf	(___aomod@divisor+5)^0,w,c
 13645  00206A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 13646  00206C  5013               	movf	(___aomod@divisor+6)^0,w,c
 13647  00206E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 13648  002070  5014               	movf	(___aomod@divisor+7)^0,w,c
 13649  002072  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 13650  002074  A0D8               	btfss	status,0,c
 13651  002076  EF3F  F010         	goto	u5561
 13652  00207A  EF41  F010         	goto	u5560
 13653  00207E                     u5561:
 13654  00207E  EF51  F010         	goto	l5955
 13655  002082                     u5560:
 13656  002082  500D               	movf	___aomod@divisor^0,w,c
 13657  002084  5E05               	subwf	___aomod@dividend^0,f,c
 13658  002086  500E               	movf	(___aomod@divisor+1)^0,w,c
 13659  002088  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 13660  00208A  500F               	movf	(___aomod@divisor+2)^0,w,c
 13661  00208C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 13662  00208E  5010               	movf	(___aomod@divisor+3)^0,w,c
 13663  002090  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 13664  002092  5011               	movf	(___aomod@divisor+4)^0,w,c
 13665  002094  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 13666  002096  5012               	movf	(___aomod@divisor+5)^0,w,c
 13667  002098  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 13668  00209A  5013               	movf	(___aomod@divisor+6)^0,w,c
 13669  00209C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 13670  00209E  5014               	movf	(___aomod@divisor+7)^0,w,c
 13671  0020A0  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 13672  0020A2                     l5955:
 13673  0020A2  90D8               	bcf	status,0,c
 13674  0020A4  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 13675  0020A6  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 13676  0020A8  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 13677  0020AA  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 13678  0020AC  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 13679  0020AE  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 13680  0020B0  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 13681  0020B2  320D               	rrcf	___aomod@divisor^0,f,c
 13682  0020B4  2E15               	decfsz	___aomod@counter^0,f,c
 13683  0020B6  EF2A  F010         	goto	l5951
 13684  0020BA                     l5959:
 13685  0020BA  5016               	movf	___aomod@sign^0,w,c
 13686  0020BC  B4D8               	btfsc	status,2,c
 13687  0020BE  EF63  F010         	goto	u5571
 13688  0020C2  EF65  F010         	goto	u5570
 13689  0020C6                     u5571:
 13690  0020C6  EF75  F010         	goto	l5963
 13691  0020CA                     u5570:
 13692  0020CA  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 13693  0020CC  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 13694  0020CE  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 13695  0020D0  1E09               	comf	(___aomod@dividend+4)^0,f,c
 13696  0020D2  1E08               	comf	(___aomod@dividend+3)^0,f,c
 13697  0020D4  1E07               	comf	(___aomod@dividend+2)^0,f,c
 13698  0020D6  1E06               	comf	(___aomod@dividend+1)^0,f,c
 13699  0020D8  6C05               	negf	___aomod@dividend^0,c
 13700  0020DA  0E00               	movlw	0
 13701  0020DC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 13702  0020DE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 13703  0020E0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 13704  0020E2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 13705  0020E4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 13706  0020E6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 13707  0020E8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 13708  0020EA                     l5963:
 13709  0020EA  C005  F005         	movff	___aomod@dividend,?___aomod
 13710  0020EE  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 13711  0020F2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 13712  0020F6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 13713  0020FA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 13714  0020FE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 13715  002102  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 13716  002106  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 13717  00210A  0012               	return		;funcret
 13718  00210C                     __end_of___aomod:
 13719                           	opt callstack 0
 13720                           
 13721 ;; *************** function ___aodiv *****************
 13722 ;; Defined at:
 13723 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13724 ;; Parameters:    Size  Location     Type
 13725 ;;  dividend        8    4[COMRAM] long long 
 13726 ;;  divisor         8   12[COMRAM] long long 
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;  quotient        8   22[COMRAM] long long 
 13729 ;;  sign            1   21[COMRAM] unsigned char 
 13730 ;;  counter         1   20[COMRAM] unsigned char 
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  8    4[COMRAM] long long 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13740 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13741 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13743 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13744 ;;Total ram usage:       26 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; Hardware stack levels required when called:    4
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_dtoa
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text74
 13755  001E20                     __ptext74:
 13756                           	opt callstack 0
 13757  001E20                     ___aodiv:
 13758                           	opt callstack 22
 13759  001E20  0E00               	movlw	0
 13760  001E22  6E16               	movwf	___aodiv@sign^0,c
 13761  001E24  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 13762  001E26  EF19  F00F         	goto	u5450
 13763  001E2A  EF17  F00F         	goto	u5451
 13764  001E2E                     u5451:
 13765  001E2E  EF2B  F00F         	goto	l5895
 13766  001E32                     u5450:
 13767  001E32  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 13768  001E34  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 13769  001E36  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 13770  001E38  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 13771  001E3A  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 13772  001E3C  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 13773  001E3E  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 13774  001E40  6C0D               	negf	___aodiv@divisor^0,c
 13775  001E42  0E00               	movlw	0
 13776  001E44  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 13777  001E46  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 13778  001E48  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 13779  001E4A  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 13780  001E4C  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 13781  001E4E  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 13782  001E50  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 13783  001E52  0E01               	movlw	1
 13784  001E54  6E16               	movwf	___aodiv@sign^0,c
 13785  001E56                     l5895:
 13786  001E56  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 13787  001E58  EF32  F00F         	goto	u5460
 13788  001E5C  EF30  F00F         	goto	u5461
 13789  001E60                     u5461:
 13790  001E60  EF44  F00F         	goto	l5901
 13791  001E64                     u5460:
 13792  001E64  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 13793  001E66  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 13794  001E68  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 13795  001E6A  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 13796  001E6C  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 13797  001E6E  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 13798  001E70  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 13799  001E72  6C05               	negf	___aodiv@dividend^0,c
 13800  001E74  0E00               	movlw	0
 13801  001E76  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 13802  001E78  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 13803  001E7A  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 13804  001E7C  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 13805  001E7E  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 13806  001E80  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 13807  001E82  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 13808  001E84  0E01               	movlw	1
 13809  001E86  1A16               	xorwf	___aodiv@sign^0,f,c
 13810  001E88                     l5901:
 13811  001E88  EE20  F017         	lfsr	2,___aodiv@quotient
 13812  001E8C  0E07               	movlw	7
 13813  001E8E                     u5471:
 13814  001E8E  6ADE               	clrf	postinc2,c
 13815  001E90  06E8               	decf	wreg,f,c
 13816  001E92  E2FD               	bc	u5471
 13817  001E94  500D               	movf	___aodiv@divisor^0,w,c
 13818  001E96  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 13819  001E98  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 13820  001E9A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 13821  001E9C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 13822  001E9E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 13823  001EA0  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 13824  001EA2  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 13825  001EA4  B4D8               	btfsc	status,2,c
 13826  001EA6  EF57  F00F         	goto	u5481
 13827  001EAA  EF59  F00F         	goto	u5480
 13828  001EAE                     u5481:
 13829  001EAE  EFAB  F00F         	goto	l5923
 13830  001EB2                     u5480:
 13831  001EB2  0E01               	movlw	1
 13832  001EB4  6E15               	movwf	___aodiv@counter^0,c
 13833  001EB6  EF67  F00F         	goto	l5909
 13834  001EBA                     l5907:
 13835  001EBA  90D8               	bcf	status,0,c
 13836  001EBC  360D               	rlcf	___aodiv@divisor^0,f,c
 13837  001EBE  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 13838  001EC0  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 13839  001EC2  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 13840  001EC4  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 13841  001EC6  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 13842  001EC8  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 13843  001ECA  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 13844  001ECC  2A15               	incf	___aodiv@counter^0,f,c
 13845  001ECE                     l5909:
 13846  001ECE  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 13847  001ED0  EF6C  F00F         	goto	u5491
 13848  001ED4  EF6E  F00F         	goto	u5490
 13849  001ED8                     u5491:
 13850  001ED8  EF5D  F00F         	goto	l5907
 13851  001EDC                     u5490:
 13852  001EDC                     l5911:
 13853  001EDC  90D8               	bcf	status,0,c
 13854  001EDE  3617               	rlcf	___aodiv@quotient^0,f,c
 13855  001EE0  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 13856  001EE2  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 13857  001EE4  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 13858  001EE6  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 13859  001EE8  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 13860  001EEA  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 13861  001EEC  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 13862  001EEE  500D               	movf	___aodiv@divisor^0,w,c
 13863  001EF0  5C05               	subwf	___aodiv@dividend^0,w,c
 13864  001EF2  500E               	movf	(___aodiv@divisor+1)^0,w,c
 13865  001EF4  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 13866  001EF6  500F               	movf	(___aodiv@divisor+2)^0,w,c
 13867  001EF8  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 13868  001EFA  5010               	movf	(___aodiv@divisor+3)^0,w,c
 13869  001EFC  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 13870  001EFE  5011               	movf	(___aodiv@divisor+4)^0,w,c
 13871  001F00  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 13872  001F02  5012               	movf	(___aodiv@divisor+5)^0,w,c
 13873  001F04  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 13874  001F06  5013               	movf	(___aodiv@divisor+6)^0,w,c
 13875  001F08  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 13876  001F0A  5014               	movf	(___aodiv@divisor+7)^0,w,c
 13877  001F0C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 13878  001F0E  A0D8               	btfss	status,0,c
 13879  001F10  EF8C  F00F         	goto	u5501
 13880  001F14  EF8E  F00F         	goto	u5500
 13881  001F18                     u5501:
 13882  001F18  EF9F  F00F         	goto	l5919
 13883  001F1C                     u5500:
 13884  001F1C  500D               	movf	___aodiv@divisor^0,w,c
 13885  001F1E  5E05               	subwf	___aodiv@dividend^0,f,c
 13886  001F20  500E               	movf	(___aodiv@divisor+1)^0,w,c
 13887  001F22  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 13888  001F24  500F               	movf	(___aodiv@divisor+2)^0,w,c
 13889  001F26  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 13890  001F28  5010               	movf	(___aodiv@divisor+3)^0,w,c
 13891  001F2A  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 13892  001F2C  5011               	movf	(___aodiv@divisor+4)^0,w,c
 13893  001F2E  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 13894  001F30  5012               	movf	(___aodiv@divisor+5)^0,w,c
 13895  001F32  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 13896  001F34  5013               	movf	(___aodiv@divisor+6)^0,w,c
 13897  001F36  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 13898  001F38  5014               	movf	(___aodiv@divisor+7)^0,w,c
 13899  001F3A  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 13900  001F3C  8017               	bsf	___aodiv@quotient^0,0,c
 13901  001F3E                     l5919:
 13902  001F3E  90D8               	bcf	status,0,c
 13903  001F40  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 13904  001F42  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 13905  001F44  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 13906  001F46  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 13907  001F48  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 13908  001F4A  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 13909  001F4C  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 13910  001F4E  320D               	rrcf	___aodiv@divisor^0,f,c
 13911  001F50  2E15               	decfsz	___aodiv@counter^0,f,c
 13912  001F52  EF6E  F00F         	goto	l5911
 13913  001F56                     l5923:
 13914  001F56  5016               	movf	___aodiv@sign^0,w,c
 13915  001F58  B4D8               	btfsc	status,2,c
 13916  001F5A  EFB1  F00F         	goto	u5511
 13917  001F5E  EFB3  F00F         	goto	u5510
 13918  001F62                     u5511:
 13919  001F62  EFC3  F00F         	goto	l5927
 13920  001F66                     u5510:
 13921  001F66  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 13922  001F68  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 13923  001F6A  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 13924  001F6C  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 13925  001F6E  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 13926  001F70  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 13927  001F72  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 13928  001F74  6C17               	negf	___aodiv@quotient^0,c
 13929  001F76  0E00               	movlw	0
 13930  001F78  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 13931  001F7A  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 13932  001F7C  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 13933  001F7E  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 13934  001F80  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 13935  001F82  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 13936  001F84  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 13937  001F86                     l5927:
 13938  001F86  C017  F005         	movff	___aodiv@quotient,?___aodiv
 13939  001F8A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 13940  001F8E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 13941  001F92  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 13942  001F96  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 13943  001F9A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 13944  001F9E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 13945  001FA2  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 13946  001FA6  0012               	return		;funcret
 13947  001FA8                     __end_of___aodiv:
 13948                           	opt callstack 0
 13949                           
 13950 ;; *************** function _atoi *****************
 13951 ;; Defined at:
 13952 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13953 ;; Parameters:    Size  Location     Type
 13954 ;;  s               2   11[COMRAM] PTR const unsigned char 
 13955 ;;		 -> STR_56(29), STR_54(30), STR_53(24), STR_52(25), 
 13956 ;;		 -> STR_51(17), STR_50(27), STR_49(33), STR_47(36), 
 13957 ;;		 -> STR_46(67), STR_45(19), STR_44(29), STR_43(55), 
 13958 ;;		 -> STR_42(17), STR_41(16), STR_40(4), STR_39(35), 
 13959 ;;		 -> STR_38(34), STR_37(54), STR_36(52), STR_35(28), 
 13960 ;;		 -> STR_32(42), STR_31(22), STR_30(19), STR_29(61), 
 13961 ;;		 -> STR_28(18), STR_27(24), STR_26(33), STR_25(16), 
 13962 ;;		 -> STR_24(24), STR_23(4), STR_22(25), STR_21(28), 
 13963 ;;		 -> STR_20(28), STR_19(18), STR_18(15), STR_17(15), 
 13964 ;;		 -> STR_16(15), STR_15(13), STR_14(11), STR_13(11), 
 13965 ;;		 -> STR_12(14), STR_11(36), STR_10(4), STR_9(23), 
 13966 ;;		 -> STR_8(32), STR_7(28), STR_6(54), STR_5(24), 
 13967 ;;		 -> STR_4(16), STR_2(28), STR_1(21), 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  n               2   24[COMRAM] int 
 13970 ;;  neg             2   17[COMRAM] int 
 13971 ;; Return value:  Size  Location     Type
 13972 ;;                  2   11[COMRAM] int 
 13973 ;; Registers used:
 13974 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13975 ;; Tracked objects:
 13976 ;;		On entry : 0/0
 13977 ;;		On exit  : 0/0
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13981 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13983 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13984 ;;Total ram usage:       15 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    5
 13987 ;; This function calls:
 13988 ;;		___wmul
 13989 ;;		_isdigit
 13990 ;;		_isspace
 13991 ;; This function is called by:
 13992 ;;		_vfpfcnvrt
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996                           	psect	text75
 13997  001C86                     __ptext75:
 13998                           	opt callstack 0
 13999  001C86                     _atoi:
 14000                           	opt callstack 22
 14001  001C86  0E00               	movlw	0
 14002  001C88  6E1A               	movwf	(atoi@n+1)^0,c
 14003  001C8A  0E00               	movlw	0
 14004  001C8C  6E19               	movwf	atoi@n^0,c
 14005  001C8E  0E00               	movlw	0
 14006  001C90  6E13               	movwf	(atoi@neg+1)^0,c
 14007  001C92  0E00               	movlw	0
 14008  001C94  6E12               	movwf	atoi@neg^0,c
 14009  001C96  EF4F  F00E         	goto	l6227
 14010  001C9A                     l6225:
 14011  001C9A  4A0C               	infsnz	atoi@s^0,f,c
 14012  001C9C  2A0D               	incf	(atoi@s+1)^0,f,c
 14013  001C9E                     l6227:
 14014  001C9E  0E01               	movlw	1
 14015  001CA0  6E18               	movwf	_atoi$2033^0,c
 14016  001CA2  C00C  FFF6         	movff	atoi@s,tblptrl
 14017  001CA6  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14018  001CAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14019  001CAA  6AF8               	clrf	tblptru,c
 14020  001CAC                     	endif
 14021  001CAC                     	if	0	;tblptru may be non-zero
 14022  001CAC                     	endif
 14023  001CAC  0008               	tblrd		*
 14024  001CAE  50F5               	movf	tablat,w,c
 14025  001CB0  0A20               	xorlw	32
 14026  001CB2  B4D8               	btfsc	status,2,c
 14027  001CB4  EF5E  F00E         	goto	u6161
 14028  001CB8  EF60  F00E         	goto	u6160
 14029  001CBC                     u6161:
 14030  001CBC  EF7E  F00E         	goto	l6235
 14031  001CC0                     u6160:
 14032  001CC0  0EF7               	movlw	247
 14033  001CC2  6E0E               	movwf	??_atoi^0,c
 14034  001CC4  0EFF               	movlw	255
 14035  001CC6  6E0F               	movwf	(??_atoi+1)^0,c
 14036  001CC8  C00C  FFF6         	movff	atoi@s,tblptrl
 14037  001CCC  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14038  001CD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14039  001CD0  6AF8               	clrf	tblptru,c
 14040  001CD2                     	endif
 14041  001CD2                     	if	0	;tblptru may be non-zero
 14042  001CD2                     	endif
 14043  001CD2  0008               	tblrd		*
 14044  001CD4  50F5               	movf	tablat,w,c
 14045  001CD6  6E10               	movwf	(??_atoi+2)^0,c
 14046  001CD8  6A11               	clrf	(??_atoi+3)^0,c
 14047  001CDA  500E               	movf	??_atoi^0,w,c
 14048  001CDC  2610               	addwf	(??_atoi+2)^0,f,c
 14049  001CDE  500F               	movf	(??_atoi+1)^0,w,c
 14050  001CE0  2211               	addwfc	(??_atoi+3)^0,f,c
 14051  001CE2  5011               	movf	(??_atoi+3)^0,w,c
 14052  001CE4  E109               	bnz	u6170
 14053  001CE6  0E05               	movlw	5
 14054  001CE8  5C10               	subwf	(??_atoi+2)^0,w,c
 14055  001CEA  A0D8               	btfss	status,0,c
 14056  001CEC  EF7A  F00E         	goto	u6171
 14057  001CF0  EF7C  F00E         	goto	u6170
 14058  001CF4                     u6171:
 14059  001CF4  EF7E  F00E         	goto	l6235
 14060  001CF8                     u6170:
 14061  001CF8  0E00               	movlw	0
 14062  001CFA  6E18               	movwf	_atoi$2033^0,c
 14063  001CFC                     l6235:
 14064  001CFC  C018  F014         	movff	_atoi$2033,_atoi$2032
 14065  001D00  6A15               	clrf	(_atoi$2032+1)^0,c
 14066  001D02  5014               	movf	_atoi$2032^0,w,c
 14067  001D04  1015               	iorwf	(_atoi$2032+1)^0,w,c
 14068  001D06  A4D8               	btfss	status,2,c
 14069  001D08  EF88  F00E         	goto	u6181
 14070  001D0C  EF8A  F00E         	goto	u6180
 14071  001D10                     u6181:
 14072  001D10  EF4D  F00E         	goto	l6225
 14073  001D14                     u6180:
 14074  001D14  EF94  F00E         	goto	l6245
 14075  001D18                     l6241:
 14076  001D18  0E00               	movlw	0
 14077  001D1A  6E13               	movwf	(atoi@neg+1)^0,c
 14078  001D1C  0E01               	movlw	1
 14079  001D1E  6E12               	movwf	atoi@neg^0,c
 14080  001D20                     l6243:
 14081  001D20  4A0C               	infsnz	atoi@s^0,f,c
 14082  001D22  2A0D               	incf	(atoi@s+1)^0,f,c
 14083  001D24  EFCB  F00E         	goto	l6251
 14084  001D28                     l6245:
 14085  001D28  C00C  FFF6         	movff	atoi@s,tblptrl
 14086  001D2C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14087  001D30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14088  001D30  6AF8               	clrf	tblptru,c
 14089  001D32                     	endif
 14090  001D32                     	if	0	;tblptru may be non-zero
 14091  001D32                     	endif
 14092  001D32  0008               	tblrd		*
 14093  001D34  50F5               	movf	tablat,w,c
 14094  001D36  6E0E               	movwf	??_atoi^0,c
 14095  001D38  6A0F               	clrf	(??_atoi+1)^0,c
 14096                           
 14097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14098                           ; Switch size 1, requested type "simple"
 14099                           ; Number of cases is 1, Range of values is 0 to 0
 14100                           ; switch strategies available:
 14101                           ; Name         Instructions Cycles
 14102                           ; simple_byte            4     3 (average)
 14103                           ;	Chosen strategy is simple_byte
 14104  001D3A  500F               	movf	(??_atoi+1)^0,w,c
 14105  001D3C  0A00               	xorlw	0	; case 0
 14106  001D3E  B4D8               	btfsc	status,2,c
 14107  001D40  EFA4  F00E         	goto	l7287
 14108  001D44  EFCB  F00E         	goto	l6251
 14109  001D48                     l7287:
 14110                           
 14111                           ; Switch size 1, requested type "simple"
 14112                           ; Number of cases is 2, Range of values is 43 to 45
 14113                           ; switch strategies available:
 14114                           ; Name         Instructions Cycles
 14115                           ; simple_byte            7     4 (average)
 14116                           ;	Chosen strategy is simple_byte
 14117  001D48  500E               	movf	??_atoi^0,w,c
 14118  001D4A  0A2B               	xorlw	43	; case 43
 14119  001D4C  B4D8               	btfsc	status,2,c
 14120  001D4E  EF90  F00E         	goto	l6243
 14121  001D52  0A06               	xorlw	6	; case 45
 14122  001D54  B4D8               	btfsc	status,2,c
 14123  001D56  EF8C  F00E         	goto	l6241
 14124  001D5A  EFCB  F00E         	goto	l6251
 14125  001D5E                     l6247:
 14126  001D5E  C019  F005         	movff	atoi@n,___wmul@multiplier
 14127  001D62  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 14128  001D66  0E00               	movlw	0
 14129  001D68  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 14130  001D6A  0E0A               	movlw	10
 14131  001D6C  6E07               	movwf	___wmul@multiplicand^0,c
 14132  001D6E  EC52  F01E         	call	___wmul	;wreg free
 14133  001D72  C00C  FFF6         	movff	atoi@s,tblptrl
 14134  001D76  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14135  001D7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14136  001D7A  6AF8               	clrf	tblptru,c
 14137  001D7C                     	endif
 14138  001D7C                     	if	0	;tblptru may be non-zero
 14139  001D7C                     	endif
 14140  001D7C  0008               	tblrd		*
 14141  001D7E  50F5               	movf	tablat,w,c
 14142  001D80  5E05               	subwf	?___wmul^0,f,c
 14143  001D82  0E00               	movlw	0
 14144  001D84  5A06               	subwfb	(?___wmul+1)^0,f,c
 14145  001D86  0E30               	movlw	48
 14146  001D88  2405               	addwf	?___wmul^0,w,c
 14147  001D8A  6E19               	movwf	atoi@n^0,c
 14148  001D8C  0E00               	movlw	0
 14149  001D8E  2006               	addwfc	(?___wmul+1)^0,w,c
 14150  001D90  6E1A               	movwf	(atoi@n+1)^0,c
 14151  001D92  EF90  F00E         	goto	l6243
 14152  001D96                     l6251:
 14153  001D96  0ED0               	movlw	208
 14154  001D98  6E0E               	movwf	??_atoi^0,c
 14155  001D9A  0EFF               	movlw	255
 14156  001D9C  6E0F               	movwf	(??_atoi+1)^0,c
 14157  001D9E  C00C  FFF6         	movff	atoi@s,tblptrl
 14158  001DA2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 14159  001DA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14160  001DA6  6AF8               	clrf	tblptru,c
 14161  001DA8                     	endif
 14162  001DA8                     	if	0	;tblptru may be non-zero
 14163  001DA8                     	endif
 14164  001DA8  0008               	tblrd		*
 14165  001DAA  50F5               	movf	tablat,w,c
 14166  001DAC  6E10               	movwf	(??_atoi+2)^0,c
 14167  001DAE  6A11               	clrf	(??_atoi+3)^0,c
 14168  001DB0  500E               	movf	??_atoi^0,w,c
 14169  001DB2  2610               	addwf	(??_atoi+2)^0,f,c
 14170  001DB4  500F               	movf	(??_atoi+1)^0,w,c
 14171  001DB6  2211               	addwfc	(??_atoi+3)^0,f,c
 14172  001DB8  5011               	movf	(??_atoi+3)^0,w,c
 14173  001DBA  E10A               	bnz	u6190
 14174  001DBC  0E0A               	movlw	10
 14175  001DBE  5C10               	subwf	(??_atoi+2)^0,w,c
 14176  001DC0  A0D8               	btfss	status,0,c
 14177  001DC2  EFE5  F00E         	goto	u6191
 14178  001DC6  EFE8  F00E         	goto	u6190
 14179  001DCA                     u6191:
 14180  001DCA  0E01               	movlw	1
 14181  001DCC  EFE9  F00E         	goto	u6200
 14182  001DD0                     u6190:
 14183  001DD0  0E00               	movlw	0
 14184  001DD2                     u6200:
 14185  001DD2  6E16               	movwf	_atoi$2034^0,c
 14186  001DD4  6A17               	clrf	(_atoi$2034+1)^0,c
 14187  001DD6  5016               	movf	_atoi$2034^0,w,c
 14188  001DD8  1017               	iorwf	(_atoi$2034+1)^0,w,c
 14189  001DDA  A4D8               	btfss	status,2,c
 14190  001DDC  EFF2  F00E         	goto	u6211
 14191  001DE0  EFF4  F00E         	goto	u6210
 14192  001DE4                     u6211:
 14193  001DE4  EFAF  F00E         	goto	l6247
 14194  001DE8                     u6210:
 14195  001DE8  5012               	movf	atoi@neg^0,w,c
 14196  001DEA  1013               	iorwf	(atoi@neg+1)^0,w,c
 14197  001DEC  A4D8               	btfss	status,2,c
 14198  001DEE  EFFB  F00E         	goto	u6221
 14199  001DF2  EFFD  F00E         	goto	u6220
 14200  001DF6                     u6221:
 14201  001DF6  EF0B  F00F         	goto	l1843
 14202  001DFA                     u6220:
 14203  001DFA  C019  F00E         	movff	atoi@n,??_atoi
 14204  001DFE  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 14205  001E02  1E0E               	comf	??_atoi^0,f,c
 14206  001E04  1E0F               	comf	(??_atoi+1)^0,f,c
 14207  001E06  4A0E               	infsnz	??_atoi^0,f,c
 14208  001E08  2A0F               	incf	(??_atoi+1)^0,f,c
 14209  001E0A  C00E  F00C         	movff	??_atoi,?_atoi
 14210  001E0E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 14211  001E12  EF0F  F00F         	goto	l1846
 14212  001E16                     l1843:
 14213  001E16  C019  F00C         	movff	atoi@n,?_atoi
 14214  001E1A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 14215  001E1E                     l1846:
 14216  001E1E  0012               	return		;funcret
 14217  001E20                     __end_of_atoi:
 14218                           	opt callstack 0
 14219                           
 14220 ;; *************** function _isspace *****************
 14221 ;; Defined at:
 14222 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;  c               2    4[COMRAM] int 
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;		None
 14227 ;; Return value:  Size  Location     Type
 14228 ;;                  2    4[COMRAM] int 
 14229 ;; Registers used:
 14230 ;;		wreg, status,2, status,0
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14239 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14240 ;;Total ram usage:        7 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; Hardware stack levels required when called:    4
 14243 ;; This function calls:
 14244 ;;		Nothing
 14245 ;; This function is called by:
 14246 ;;		_atoi
 14247 ;; This function uses a non-reentrant model
 14248 ;;
 14249                           
 14250                           	psect	text76
 14251  0037CE                     __ptext76:
 14252                           	opt callstack 0
 14253  0037CE                     _isspace:
 14254                           	opt callstack 22
 14255  0037CE  0E01               	movlw	1
 14256  0037D0  6E0B               	movwf	_isspace$2059^0,c
 14257  0037D2  0E20               	movlw	32
 14258  0037D4  1805               	xorwf	isspace@c^0,w,c
 14259  0037D6  1006               	iorwf	(isspace@c+1)^0,w,c
 14260  0037D8  B4D8               	btfsc	status,2,c
 14261  0037DA  EFF1  F01B         	goto	u5651
 14262  0037DE  EFF3  F01B         	goto	u5650
 14263  0037E2                     u5651:
 14264  0037E2  EF0C  F01C         	goto	l6013
 14265  0037E6                     u5650:
 14266  0037E6  0EF7               	movlw	247
 14267  0037E8  6E07               	movwf	??_isspace^0,c
 14268  0037EA  0EFF               	movlw	255
 14269  0037EC  6E08               	movwf	(??_isspace+1)^0,c
 14270  0037EE  C005  F009         	movff	isspace@c,??_isspace+2
 14271  0037F2  C006  F00A         	movff	isspace@c+1,??_isspace+3
 14272  0037F6  5007               	movf	??_isspace^0,w,c
 14273  0037F8  2609               	addwf	(??_isspace+2)^0,f,c
 14274  0037FA  5008               	movf	(??_isspace+1)^0,w,c
 14275  0037FC  220A               	addwfc	(??_isspace+3)^0,f,c
 14276  0037FE  500A               	movf	(??_isspace+3)^0,w,c
 14277  003800  E109               	bnz	u5660
 14278  003802  0E05               	movlw	5
 14279  003804  5C09               	subwf	(??_isspace+2)^0,w,c
 14280  003806  A0D8               	btfss	status,0,c
 14281  003808  EF08  F01C         	goto	u5661
 14282  00380C  EF0A  F01C         	goto	u5660
 14283  003810                     u5661:
 14284  003810  EF0C  F01C         	goto	l6013
 14285  003814                     u5660:
 14286  003814  0E00               	movlw	0
 14287  003816  6E0B               	movwf	_isspace$2059^0,c
 14288  003818                     l6013:
 14289  003818  C00B  F005         	movff	_isspace$2059,?_isspace
 14290  00381C  6A06               	clrf	(?_isspace+1)^0,c
 14291  00381E  0012               	return		;funcret
 14292  003820                     __end_of_isspace:
 14293                           	opt callstack 0
 14294                           
 14295 ;; *************** function _isdigit *****************
 14296 ;; Defined at:
 14297 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;  c               2    4[COMRAM] int 
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;		None
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  2    4[COMRAM] int 
 14304 ;; Registers used:
 14305 ;;		wreg, status,2, status,0
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14315 ;;Total ram usage:        6 bytes
 14316 ;; Hardware stack levels used:    1
 14317 ;; Hardware stack levels required when called:    4
 14318 ;; This function calls:
 14319 ;;		Nothing
 14320 ;; This function is called by:
 14321 ;;		_vfpfcnvrt
 14322 ;;		_atoi
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	text77
 14327  003BC6                     __ptext77:
 14328                           	opt callstack 0
 14329  003BC6                     _isdigit:
 14330                           	opt callstack 23
 14331  003BC6  0ED0               	movlw	208
 14332  003BC8  6E07               	movwf	??_isdigit^0,c
 14333  003BCA  0EFF               	movlw	255
 14334  003BCC  6E08               	movwf	(??_isdigit+1)^0,c
 14335  003BCE  C005  F009         	movff	isdigit@c,??_isdigit+2
 14336  003BD2  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 14337  003BD6  5007               	movf	??_isdigit^0,w,c
 14338  003BD8  2609               	addwf	(??_isdigit+2)^0,f,c
 14339  003BDA  5008               	movf	(??_isdigit+1)^0,w,c
 14340  003BDC  220A               	addwfc	(??_isdigit+3)^0,f,c
 14341  003BDE  500A               	movf	(??_isdigit+3)^0,w,c
 14342  003BE0  E10A               	bnz	u5430
 14343  003BE2  0E0A               	movlw	10
 14344  003BE4  5C09               	subwf	(??_isdigit+2)^0,w,c
 14345  003BE6  A0D8               	btfss	status,0,c
 14346  003BE8  EFF8  F01D         	goto	u5431
 14347  003BEC  EFFB  F01D         	goto	u5430
 14348  003BF0                     u5431:
 14349  003BF0  0E01               	movlw	1
 14350  003BF2  EFFC  F01D         	goto	u5440
 14351  003BF6                     u5430:
 14352  003BF6  0E00               	movlw	0
 14353  003BF8                     u5440:
 14354  003BF8  6E05               	movwf	?_isdigit^0,c
 14355  003BFA  6A06               	clrf	(?_isdigit+1)^0,c
 14356  003BFC  0012               	return		;funcret
 14357  003BFE                     __end_of_isdigit:
 14358                           	opt callstack 0
 14359                           
 14360 ;; *************** function ___wmul *****************
 14361 ;; Defined at:
 14362 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;  multiplier      2    4[COMRAM] unsigned int 
 14365 ;;  multiplicand    2    6[COMRAM] unsigned int 
 14366 ;; Auto vars:     Size  Location     Type
 14367 ;;  product         2    8[COMRAM] unsigned int 
 14368 ;; Return value:  Size  Location     Type
 14369 ;;                  2    4[COMRAM] unsigned int 
 14370 ;; Registers used:
 14371 ;;		wreg, status,2, status,0, prodl, prodh
 14372 ;; Tracked objects:
 14373 ;;		On entry : 0/0
 14374 ;;		On exit  : 0/0
 14375 ;;		Unchanged: 0/0
 14376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14380 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14381 ;;Total ram usage:        6 bytes
 14382 ;; Hardware stack levels used:    1
 14383 ;; Hardware stack levels required when called:    4
 14384 ;; This function calls:
 14385 ;;		Nothing
 14386 ;; This function is called by:
 14387 ;;		_atoi
 14388 ;; This function uses a non-reentrant model
 14389 ;;
 14390                           
 14391                           	psect	text78
 14392  003CA4                     __ptext78:
 14393                           	opt callstack 0
 14394  003CA4                     ___wmul:
 14395                           	opt callstack 22
 14396  003CA4  5005               	movf	___wmul@multiplier^0,w,c
 14397  003CA6  0207               	mulwf	___wmul@multiplicand^0,c
 14398  003CA8  CFF3 F009          	movff	prodl,___wmul@product
 14399  003CAC  CFF4 F00A          	movff	prodh,___wmul@product+1
 14400  003CB0  5005               	movf	___wmul@multiplier^0,w,c
 14401  003CB2  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 14402  003CB4  50F3               	movf	243,w,c
 14403  003CB6  260A               	addwf	(___wmul@product+1)^0,f,c
 14404  003CB8  5006               	movf	(___wmul@multiplier+1)^0,w,c
 14405  003CBA  0207               	mulwf	___wmul@multiplicand^0,c
 14406  003CBC  50F3               	movf	243,w,c
 14407  003CBE  260A               	addwf	(___wmul@product+1)^0,f,c
 14408  003CC0  C009  F005         	movff	___wmul@product,?___wmul
 14409  003CC4  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 14410  003CC8  0012               	return		;funcret
 14411  003CCA                     __end_of___wmul:
 14412                           	opt callstack 0
 14413                           
 14414 ;; *************** function _EUSART2_is_tx_ready *****************
 14415 ;; Defined at:
 14416 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;		None
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;		None
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      _Bool 
 14423 ;; Registers used:
 14424 ;;		wreg, status,2
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14434 ;;Total ram usage:        0 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:    4
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_PrintModRespon
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           	psect	text79
 14445  003D78                     __ptext79:
 14446                           	opt callstack 0
 14447  003D78                     _EUSART2_is_tx_ready:
 14448                           	opt callstack 24
 14449  003D78                     
 14450                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 14451  003D78  0100               	movlb	0	; () banked
 14452  003D7A  51BC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 14453  003D7C  A4D8               	btfss	status,2,c
 14454  003D7E  EFC3  F01E         	goto	u3961
 14455  003D82  EFC6  F01E         	goto	u3960
 14456  003D86                     u3961:
 14457  003D86  0E01               	movlw	1
 14458  003D88  EFC7  F01E         	goto	u3970
 14459  003D8C                     u3960:
 14460  003D8C  0E00               	movlw	0
 14461  003D8E                     u3970:
 14462  003D8E                     
 14463                           ; BSR set to: 0
 14464  003D8E  0012               	return		;funcret
 14465  003D90                     __end_of_EUSART2_is_tx_ready:
 14466                           	opt callstack 0
 14467                           
 14468 ;; *************** function _EUSART2_is_tx_done *****************
 14469 ;; Defined at:
 14470 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;		None
 14473 ;; Auto vars:     Size  Location     Type
 14474 ;;		None
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  1    wreg      _Bool 
 14477 ;; Registers used:
 14478 ;;		wreg
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;Total ram usage:        0 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:    4
 14491 ;; This function calls:
 14492 ;;		Nothing
 14493 ;; This function is called by:
 14494 ;;		_PrintModRespon
 14495 ;; This function uses a non-reentrant model
 14496 ;;
 14497                           
 14498                           	psect	text80
 14499  003D90                     __ptext80:
 14500                           	opt callstack 0
 14501  003D90                     _EUSART2_is_tx_done:
 14502                           	opt callstack 24
 14503  003D90                     
 14504                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 14505  003D90  010E               	movlb	14	; () banked
 14506  003D92  B39E               	btfsc	158,1,b	;volatile
 14507  003D94  EFCE  F01E         	goto	u3981
 14508  003D98  EFD1  F01E         	goto	u3980
 14509  003D9C                     u3981:
 14510  003D9C  0E01               	movlw	1
 14511  003D9E  EFD2  F01E         	goto	u3986
 14512  003DA2                     u3980:
 14513  003DA2  0E00               	movlw	0
 14514  003DA4                     u3986:
 14515  003DA4                     
 14516                           ; BSR set to: 14
 14517  003DA4  0012               	return		;funcret
 14518  003DA6                     __end_of_EUSART2_is_tx_done:
 14519                           	opt callstack 0
 14520                           
 14521 ;; *************** function _ClearModbusRespon *****************
 14522 ;; Defined at:
 14523 ;;		line 401 in file "Modbus.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;		None
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  i               2    4[COMRAM] int 
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14541 ;;Total ram usage:        2 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    4
 14544 ;; This function calls:
 14545 ;;		Nothing
 14546 ;; This function is called by:
 14547 ;;		_main
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text81
 14552  003870                     __ptext81:
 14553                           	opt callstack 0
 14554  003870                     _ClearModbusRespon:
 14555                           	opt callstack 26
 14556  003870                     
 14557                           ;Modbus.c: 402:     int i = 0;
 14558  003870  0E00               	movlw	0
 14559  003872  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 14560  003874  0E00               	movlw	0
 14561  003876  6E05               	movwf	ClearModbusRespon@i^0,c
 14562                           
 14563                           ;Modbus.c: 403:     for(i=0; i<32; i++ ){
 14564  003878  0E00               	movlw	0
 14565  00387A  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 14566  00387C  0E00               	movlw	0
 14567  00387E  6E05               	movwf	ClearModbusRespon@i^0,c
 14568  003880                     l5265:
 14569                           
 14570                           ;Modbus.c: 404:         MBRespon[i] = 0xFFFF;
 14571  003880  90D8               	bcf	status,0,c
 14572  003882  3405               	rlcf	ClearModbusRespon@i^0,w,c
 14573  003884  6ED9               	movwf	fsr2l,c
 14574  003886  3406               	rlcf	(ClearModbusRespon@i+1)^0,w,c
 14575  003888  6EDA               	movwf	fsr2h,c
 14576  00388A  0E41               	movlw	low _MBRespon
 14577  00388C  26D9               	addwf	fsr2l,f,c
 14578  00388E  0E01               	movlw	high _MBRespon
 14579  003890  22DA               	addwfc	fsr2h,f,c
 14580  003892  0EFF               	movlw	255
 14581  003894  6EDE               	movwf	postinc2,c
 14582  003896  0EFF               	movlw	255
 14583  003898  6EDD               	movwf	postdec2,c
 14584  00389A                     
 14585                           ;Modbus.c: 405:     }
 14586  00389A  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 14587  00389C  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 14588  00389E  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 14589  0038A0  EF5B  F01C         	goto	u4721
 14590  0038A4  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 14591  0038A6  E109               	bnz	u4720
 14592  0038A8  0E20               	movlw	32
 14593  0038AA  5C05               	subwf	ClearModbusRespon@i^0,w,c
 14594  0038AC  A0D8               	btfss	status,0,c
 14595  0038AE  EF5B  F01C         	goto	u4721
 14596  0038B2  EF5D  F01C         	goto	u4720
 14597  0038B6                     u4721:
 14598  0038B6  EF40  F01C         	goto	l5265
 14599  0038BA                     u4720:
 14600  0038BA  0012               	return		;funcret
 14601  0038BC                     __end_of_ClearModbusRespon:
 14602                           	opt callstack 0
 14603                           
 14604 ;; *************** function _ClearModbusData *****************
 14605 ;; Defined at:
 14606 ;;		line 59 in file "Modbus.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;		None
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;  i               2    4[COMRAM] int 
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  1    wreg      void 
 14613 ;; Registers used:
 14614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14624 ;;Total ram usage:        2 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; Hardware stack levels required when called:    4
 14627 ;; This function calls:
 14628 ;;		Nothing
 14629 ;; This function is called by:
 14630 ;;		_main
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           	psect	text82
 14635  0038BC                     __ptext82:
 14636                           	opt callstack 0
 14637  0038BC                     _ClearModbusData:
 14638                           	opt callstack 26
 14639  0038BC                     
 14640                           ;Modbus.c: 60:     int i = 0;
 14641  0038BC  0E00               	movlw	0
 14642  0038BE  6E06               	movwf	(ClearModbusData@i+1)^0,c
 14643  0038C0  0E00               	movlw	0
 14644  0038C2  6E05               	movwf	ClearModbusData@i^0,c
 14645                           
 14646                           ;Modbus.c: 61:     for(i=0; i<99; i++ ){
 14647  0038C4  0E00               	movlw	0
 14648  0038C6  6E06               	movwf	(ClearModbusData@i+1)^0,c
 14649  0038C8  0E00               	movlw	0
 14650  0038CA  6E05               	movwf	ClearModbusData@i^0,c
 14651  0038CC                     l5505:
 14652                           
 14653                           ;Modbus.c: 62:         ModbusData[i] = 0xFF;
 14654  0038CC  0E00               	movlw	low _ModbusData
 14655  0038CE  2405               	addwf	ClearModbusData@i^0,w,c
 14656  0038D0  6ED9               	movwf	fsr2l,c
 14657  0038D2  0E02               	movlw	high _ModbusData
 14658  0038D4  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 14659  0038D6  6EDA               	movwf	fsr2h,c
 14660  0038D8  0EFF               	movlw	255
 14661  0038DA  6EDF               	movwf	indf2,c
 14662  0038DC                     
 14663                           ;Modbus.c: 63:     }
 14664  0038DC  4A05               	infsnz	ClearModbusData@i^0,f,c
 14665  0038DE  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 14666  0038E0  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 14667  0038E2  EF7C  F01C         	goto	u4941
 14668  0038E6  5006               	movf	(ClearModbusData@i+1)^0,w,c
 14669  0038E8  E109               	bnz	u4940
 14670  0038EA  0E63               	movlw	99
 14671  0038EC  5C05               	subwf	ClearModbusData@i^0,w,c
 14672  0038EE  A0D8               	btfss	status,0,c
 14673  0038F0  EF7C  F01C         	goto	u4941
 14674  0038F4  EF7E  F01C         	goto	u4940
 14675  0038F8                     u4941:
 14676  0038F8  EF66  F01C         	goto	l5505
 14677  0038FC                     u4940:
 14678  0038FC                     
 14679                           ;Modbus.c: 65:     ModDataCnt = 0;
 14680  0038FC  0E00               	movlw	0
 14681  0038FE  0100               	movlb	0	; () banked
 14682  003900  6FAE               	movwf	(_ModDataCnt+1)& (0+255),b
 14683  003902  0E00               	movlw	0
 14684  003904  6FAD               	movwf	_ModDataCnt& (0+255),b
 14685  003906                     
 14686                           ; BSR set to: 0
 14687  003906  0012               	return		;funcret
 14688  003908                     __end_of_ClearModbusData:
 14689                           	opt callstack 0
 14690                           
 14691 ;; *************** function _INTERRUPT_InterruptManager *****************
 14692 ;; Defined at:
 14693 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14694 ;; Parameters:    Size  Location     Type
 14695 ;;		None
 14696 ;; Auto vars:     Size  Location     Type
 14697 ;;		None
 14698 ;; Return value:  Size  Location     Type
 14699 ;;                  1    wreg      void 
 14700 ;; Registers used:
 14701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14702 ;; Tracked objects:
 14703 ;;		On entry : 0/0
 14704 ;;		On exit  : 0/0
 14705 ;;		Unchanged: 0/0
 14706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14711 ;;Total ram usage:        4 bytes
 14712 ;; Hardware stack levels used:    1
 14713 ;; Hardware stack levels required when called:    3
 14714 ;; This function calls:
 14715 ;;		Absolute function
 14716 ;;		_EUSART1_Receive_ISR
 14717 ;;		_EUSART1_Transmit_ISR
 14718 ;;		_EUSART2_Receive_ISR
 14719 ;;		_EUSART2_Transmit_ISR
 14720 ;; This function is called by:
 14721 ;;		Interrupt level 2
 14722 ;; This function uses a non-reentrant model
 14723 ;;
 14724                           
 14725                           	psect	intcode
 14726  000008                     __pintcode:
 14727                           	opt callstack 0
 14728  000008                     _INTERRUPT_InterruptManager:
 14729                           	opt callstack 15
 14730                           
 14731                           ; BSR set to: 0
 14732                           ;incstack = 0
 14733  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14734  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 14735  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14736  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14737  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14738  00001A                     
 14739                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 14740  00001A  ACF2               	btfss	242,6,c	;volatile
 14741  00001C  EF12  F000         	goto	i2u503_41
 14742  000020  EF14  F000         	goto	i2u503_40
 14743  000024                     i2u503_41:
 14744  000024  EF89  F000         	goto	i2l159
 14745  000028                     i2u503_40:
 14746  000028                     
 14747                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 14748  000028  010E               	movlb	14	; () banked
 14749  00002A  ADC5               	btfss	197,6,b	;volatile
 14750  00002C  EF1A  F000         	goto	i2u504_41
 14751  000030  EF1C  F000         	goto	i2u504_40
 14752  000034                     i2u504_41:
 14753  000034  EF32  F000         	goto	i2l150
 14754  000038                     i2u504_40:
 14755  000038                     
 14756                           ; BSR set to: 14
 14757  000038  ADCD               	btfss	205,6,b	;volatile
 14758  00003A  EF21  F000         	goto	i2u505_41
 14759  00003E  EF23  F000         	goto	i2u505_40
 14760  000042                     i2u505_41:
 14761  000042  EF32  F000         	goto	i2l150
 14762  000046                     i2u505_40:
 14763  000046                     
 14764                           ; BSR set to: 14
 14765                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 14766  000046  D802               	call	i2u506_48
 14767  000048  EF30  F000         	goto	i2u506_49
 14768  00004C                     i2u506_48:
 14769  00004C  0005               	push	
 14770  00004E  6EFA               	movwf	pclath,c
 14771  000050  0101               	movlb	1	; () banked
 14772  000052  51F6               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 14773  000054  6EFD               	movwf	tosl,c
 14774  000056  51F7               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 14775  000058  6EFE               	movwf	tosh,c
 14776  00005A  6AFF               	clrf	tosu,c
 14777  00005C  50FA               	movf	pclath,w,c
 14778  00005E  0012               	return		;indir
 14779  000060                     i2u506_49:
 14780                           
 14781                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 14782  000060  EF89  F000         	goto	i2l159
 14783  000064                     i2l150:
 14784                           
 14785                           ; BSR set to: 14
 14786  000064  AFC5               	btfss	197,7,b	;volatile
 14787  000066  EF37  F000         	goto	i2u507_41
 14788  00006A  EF39  F000         	goto	i2u507_40
 14789  00006E                     i2u507_41:
 14790  00006E  EF4F  F000         	goto	i2l152
 14791  000072                     i2u507_40:
 14792  000072                     
 14793                           ; BSR set to: 14
 14794  000072  AFCD               	btfss	205,7,b	;volatile
 14795  000074  EF3E  F000         	goto	i2u508_41
 14796  000078  EF40  F000         	goto	i2u508_40
 14797  00007C                     i2u508_41:
 14798  00007C  EF4F  F000         	goto	i2l152
 14799  000080                     i2u508_40:
 14800  000080                     
 14801                           ; BSR set to: 14
 14802                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 14803  000080  D802               	call	i2u509_48
 14804  000082  EF4D  F000         	goto	i2u509_49
 14805  000086                     i2u509_48:
 14806  000086  0005               	push	
 14807  000088  6EFA               	movwf	pclath,c
 14808  00008A  0101               	movlb	1	; () banked
 14809  00008C  51F4               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 14810  00008E  6EFD               	movwf	tosl,c
 14811  000090  51F5               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 14812  000092  6EFE               	movwf	tosh,c
 14813  000094  6AFF               	clrf	tosu,c
 14814  000096  50FA               	movf	pclath,w,c
 14815  000098  0012               	return		;indir
 14816  00009A                     i2u509_49:
 14817                           
 14818                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 14819  00009A  EF89  F000         	goto	i2l159
 14820  00009E                     i2l152:
 14821                           
 14822                           ; BSR set to: 14
 14823  00009E  A9C5               	btfss	197,4,b	;volatile
 14824  0000A0  EF54  F000         	goto	i2u510_41
 14825  0000A4  EF56  F000         	goto	i2u510_40
 14826  0000A8                     i2u510_41:
 14827  0000A8  EF6C  F000         	goto	i2l154
 14828  0000AC                     i2u510_40:
 14829  0000AC                     
 14830                           ; BSR set to: 14
 14831  0000AC  A9CD               	btfss	205,4,b	;volatile
 14832  0000AE  EF5B  F000         	goto	i2u511_41
 14833  0000B2  EF5D  F000         	goto	i2u511_40
 14834  0000B6                     i2u511_41:
 14835  0000B6  EF6C  F000         	goto	i2l154
 14836  0000BA                     i2u511_40:
 14837  0000BA                     
 14838                           ; BSR set to: 14
 14839                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 14840  0000BA  D802               	call	i2u512_48
 14841  0000BC  EF6A  F000         	goto	i2u512_49
 14842  0000C0                     i2u512_48:
 14843  0000C0  0005               	push	
 14844  0000C2  6EFA               	movwf	pclath,c
 14845  0000C4  0101               	movlb	1	; () banked
 14846  0000C6  51F2               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 14847  0000C8  6EFD               	movwf	tosl,c
 14848  0000CA  51F3               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 14849  0000CC  6EFE               	movwf	tosh,c
 14850  0000CE  6AFF               	clrf	tosu,c
 14851  0000D0  50FA               	movf	pclath,w,c
 14852  0000D2  0012               	return		;indir
 14853  0000D4                     i2u512_49:
 14854                           
 14855                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 14856  0000D4  EF89  F000         	goto	i2l159
 14857  0000D8                     i2l154:
 14858                           
 14859                           ; BSR set to: 14
 14860  0000D8  ABC5               	btfss	197,5,b	;volatile
 14861  0000DA  EF71  F000         	goto	i2u513_41
 14862  0000DE  EF73  F000         	goto	i2u513_40
 14863  0000E2                     i2u513_41:
 14864  0000E2  EF89  F000         	goto	i2l153
 14865  0000E6                     i2u513_40:
 14866  0000E6                     
 14867                           ; BSR set to: 14
 14868  0000E6  ABCD               	btfss	205,5,b	;volatile
 14869  0000E8  EF78  F000         	goto	i2u514_41
 14870  0000EC  EF7A  F000         	goto	i2u514_40
 14871  0000F0                     i2u514_41:
 14872  0000F0  EF89  F000         	goto	i2l153
 14873  0000F4                     i2u514_40:
 14874  0000F4                     
 14875                           ; BSR set to: 14
 14876                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 14877  0000F4  D802               	call	i2u515_48
 14878  0000F6  EF87  F000         	goto	i2u515_49
 14879  0000FA                     i2u515_48:
 14880  0000FA  0005               	push	
 14881  0000FC  6EFA               	movwf	pclath,c
 14882  0000FE  0101               	movlb	1	; () banked
 14883  000100  51F0               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 14884  000102  6EFD               	movwf	tosl,c
 14885  000104  51F1               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 14886  000106  6EFE               	movwf	tosh,c
 14887  000108  6AFF               	clrf	tosu,c
 14888  00010A  50FA               	movf	pclath,w,c
 14889  00010C  0012               	return		;indir
 14890  00010E                     i2u515_49:
 14891                           
 14892                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 14893  00010E  EF89  F000         	goto	i2l159
 14894  000112                     i2l153:
 14895  000112                     i2l159:
 14896  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14897  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14898  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14899  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14900  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14901  000124  0011               	retfie		f
 14902  000126                     __end_of_INTERRUPT_InterruptManager:
 14903                           	opt callstack 0
 14904                           
 14905 ;; *************** function _EUSART2_Transmit_ISR *****************
 14906 ;; Defined at:
 14907 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;		None
 14910 ;; Auto vars:     Size  Location     Type
 14911 ;;		None
 14912 ;; Return value:  Size  Location     Type
 14913 ;;                  1    wreg      void 
 14914 ;; Registers used:
 14915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14916 ;; Tracked objects:
 14917 ;;		On entry : 0/0
 14918 ;;		On exit  : 0/0
 14919 ;;		Unchanged: 0/0
 14920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14925 ;;Total ram usage:        0 bytes
 14926 ;; Hardware stack levels used:    1
 14927 ;; This function calls:
 14928 ;;		Nothing
 14929 ;; This function is called by:
 14930 ;;		_EUSART2_Initialize
 14931 ;;		_INTERRUPT_InterruptManager
 14932 ;; This function uses a non-reentrant model
 14933 ;;
 14934                           
 14935                           	psect	text84
 14936  003952                     __ptext84:
 14937                           	opt callstack 0
 14938  003952                     _EUSART2_Transmit_ISR:
 14939                           	opt callstack 17
 14940  003952                     
 14941                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 14942  003952  0E20               	movlw	32
 14943  003954  0100               	movlb	0	; () banked
 14944  003956  61BC               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 14945  003958  EFB0  F01C         	goto	i2u456_41
 14946  00395C  EFB2  F01C         	goto	i2u456_40
 14947  003960                     i2u456_41:
 14948  003960  EFCA  F01C         	goto	i2l333
 14949  003964                     i2u456_40:
 14950  003964                     
 14951                           ; BSR set to: 0
 14952                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 14953  003964  0E84               	movlw	low _eusart2TxBuffer
 14954  003966  25B9               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 14955  003968  6ED9               	movwf	fsr2l,c
 14956  00396A  6ADA               	clrf	fsr2h,c
 14957  00396C  0E02               	movlw	high _eusart2TxBuffer
 14958  00396E  22DA               	addwfc	fsr2h,f,c
 14959  003970  50DF               	movf	indf2,w,c
 14960  003972  010E               	movlb	14	; () banked
 14961  003974  6F9A               	movwf	154,b	;volatile
 14962  003976                     
 14963                           ; BSR set to: 14
 14964  003976  0100               	movlb	0	; () banked
 14965  003978  2BB9               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 14966  00397A                     
 14967                           ; BSR set to: 0
 14968                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 14969  00397A  0E1F               	movlw	31
 14970  00397C  65B9               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 14971  00397E  EFC3  F01C         	goto	i2u457_41
 14972  003982  EFC5  F01C         	goto	i2u457_40
 14973  003986                     i2u457_41:
 14974  003986  EFC7  F01C         	goto	i2l5205
 14975  00398A                     i2u457_40:
 14976  00398A                     
 14977                           ; BSR set to: 0
 14978                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 14979  00398A  0E00               	movlw	0
 14980  00398C  6FB9               	movwf	_eusart2TxTail& (0+255),b	;volatile
 14981  00398E                     i2l5205:
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 14985  00398E  2BBC               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14986                           
 14987                           ;mcc_generated_files/eusart2.c: 220:     }
 14988  003990  EFCC  F01C         	goto	i2l336
 14989  003994                     i2l333:
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 14993  003994  010E               	movlb	14	; () banked
 14994  003996  9DC5               	bcf	197,6,b	;volatile
 14995  003998                     i2l336:
 14996  003998  0012               	return		;funcret
 14997  00399A                     __end_of_EUSART2_Transmit_ISR:
 14998                           	opt callstack 0
 14999                           
 15000 ;; *************** function _EUSART2_Receive_ISR *****************
 15001 ;; Defined at:
 15002 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;		None
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;		None
 15007 ;; Return value:  Size  Location     Type
 15008 ;;                  1    wreg      void 
 15009 ;; Registers used:
 15010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15011 ;; Tracked objects:
 15012 ;;		On entry : 0/0
 15013 ;;		On exit  : 0/0
 15014 ;;		Unchanged: 0/0
 15015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15020 ;;Total ram usage:        0 bytes
 15021 ;; Hardware stack levels used:    1
 15022 ;; Hardware stack levels required when called:    2
 15023 ;; This function calls:
 15024 ;;		Absolute function
 15025 ;;		_EUSART2_DefaultErrorHandler
 15026 ;;		_EUSART2_DefaultFramingErrorHandler
 15027 ;;		_EUSART2_DefaultOverrunErrorHandler
 15028 ;;		_EUSART2_RxDataHandler
 15029 ;; This function is called by:
 15030 ;;		_EUSART2_Initialize
 15031 ;;		_INTERRUPT_InterruptManager
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           
 15035                           	psect	text85
 15036  002D9A                     __ptext85:
 15037                           	opt callstack 0
 15038  002D9A                     _EUSART2_Receive_ISR:
 15039                           	opt callstack 15
 15040  002D9A                     
 15041                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 15042  002D9A  0E81               	movlw	low _eusart2RxStatusBuffer
 15043  002D9C  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15044  002D9E  6ED9               	movwf	fsr2l,c
 15045  002DA0  6ADA               	clrf	fsr2h,c
 15046  002DA2  0E01               	movlw	high _eusart2RxStatusBuffer
 15047  002DA4  22DA               	addwfc	fsr2h,f,c
 15048  002DA6  0E00               	movlw	0
 15049  002DA8  6EDF               	movwf	indf2,c
 15050  002DAA                     
 15051                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 15052  002DAA  010E               	movlb	14	; () banked
 15053  002DAC  A59D               	btfss	157,2,b	;volatile
 15054  002DAE  EFDB  F016         	goto	i2u458_41
 15055  002DB2  EFDD  F016         	goto	i2u458_40
 15056  002DB6                     i2u458_41:
 15057  002DB6  EFF1  F016         	goto	i2l5215
 15058  002DBA                     i2u458_40:
 15059  002DBA                     
 15060                           ; BSR set to: 14
 15061                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 15062  002DBA  0E81               	movlw	low _eusart2RxStatusBuffer
 15063  002DBC  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15064  002DBE  6ED9               	movwf	fsr2l,c
 15065  002DC0  6ADA               	clrf	fsr2h,c
 15066  002DC2  0E01               	movlw	high _eusart2RxStatusBuffer
 15067  002DC4  22DA               	addwfc	fsr2h,f,c
 15068  002DC6  0101               	movlb	1	; () banked
 15069  002DC8  82DF               	bsf	indf2,1,c
 15070  002DCA                     
 15071                           ; BSR set to: 1
 15072                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 15073  002DCA  D802               	call	i2u459_48
 15074  002DCC  EFF1  F016         	goto	i2u459_49
 15075  002DD0                     i2u459_48:
 15076  002DD0  0005               	push	
 15077  002DD2  6EFA               	movwf	pclath,c
 15078  002DD4  51EE               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 15079  002DD6  6EFD               	movwf	tosl,c
 15080  002DD8  51EF               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 15081  002DDA  6EFE               	movwf	tosh,c
 15082  002DDC  6AFF               	clrf	tosu,c
 15083  002DDE  50FA               	movf	pclath,w,c
 15084  002DE0  0012               	return		;indir
 15085  002DE2                     i2u459_49:
 15086  002DE2                     i2l5215:
 15087                           
 15088                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 15089  002DE2  010E               	movlb	14	; () banked
 15090  002DE4  A39D               	btfss	157,1,b	;volatile
 15091  002DE6  EFF7  F016         	goto	i2u460_41
 15092  002DEA  EFF9  F016         	goto	i2u460_40
 15093  002DEE                     i2u460_41:
 15094  002DEE  EF0D  F017         	goto	i2l5221
 15095  002DF2                     i2u460_40:
 15096  002DF2                     
 15097                           ; BSR set to: 14
 15098                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 15099  002DF2  0E81               	movlw	low _eusart2RxStatusBuffer
 15100  002DF4  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15101  002DF6  6ED9               	movwf	fsr2l,c
 15102  002DF8  6ADA               	clrf	fsr2h,c
 15103  002DFA  0E01               	movlw	high _eusart2RxStatusBuffer
 15104  002DFC  22DA               	addwfc	fsr2h,f,c
 15105  002DFE  0101               	movlb	1	; () banked
 15106  002E00  84DF               	bsf	indf2,2,c
 15107  002E02                     
 15108                           ; BSR set to: 1
 15109                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 15110  002E02  D802               	call	i2u461_48
 15111  002E04  EF0D  F017         	goto	i2u461_49
 15112  002E08                     i2u461_48:
 15113  002E08  0005               	push	
 15114  002E0A  6EFA               	movwf	pclath,c
 15115  002E0C  51EC               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 15116  002E0E  6EFD               	movwf	tosl,c
 15117  002E10  51ED               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 15118  002E12  6EFE               	movwf	tosh,c
 15119  002E14  6AFF               	clrf	tosu,c
 15120  002E16  50FA               	movf	pclath,w,c
 15121  002E18  0012               	return		;indir
 15122  002E1A                     i2u461_49:
 15123  002E1A                     i2l5221:
 15124                           
 15125                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 15126  002E1A  0E81               	movlw	low _eusart2RxStatusBuffer
 15127  002E1C  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15128  002E1E  6ED9               	movwf	fsr2l,c
 15129  002E20  6ADA               	clrf	fsr2h,c
 15130  002E22  0E01               	movlw	high _eusart2RxStatusBuffer
 15131  002E24  22DA               	addwfc	fsr2h,f,c
 15132  002E26  50DF               	movf	indf2,w,c
 15133  002E28  B4D8               	btfsc	status,2,c
 15134  002E2A  EF19  F017         	goto	i2u462_41
 15135  002E2E  EF1B  F017         	goto	i2u462_40
 15136  002E32                     i2u462_41:
 15137  002E32  EF2A  F017         	goto	i2l5225
 15138  002E36                     i2u462_40:
 15139  002E36                     
 15140                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 15141  002E36  D802               	call	i2u463_48
 15142  002E38  EF28  F017         	goto	i2u463_49
 15143  002E3C                     i2u463_48:
 15144  002E3C  0005               	push	
 15145  002E3E  6EFA               	movwf	pclath,c
 15146  002E40  0101               	movlb	1	; () banked
 15147  002E42  51EA               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 15148  002E44  6EFD               	movwf	tosl,c
 15149  002E46  51EB               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 15150  002E48  6EFE               	movwf	tosh,c
 15151  002E4A  6AFF               	clrf	tosu,c
 15152  002E4C  50FA               	movf	pclath,w,c
 15153  002E4E  0012               	return		;indir
 15154  002E50                     i2u463_49:
 15155                           
 15156                           ;mcc_generated_files/eusart2.c: 244:     } else {
 15157  002E50  EF2C  F017         	goto	i2l343
 15158  002E54                     i2l5225:
 15159                           
 15160                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 15161  002E54  ECFF  F01D         	call	_EUSART2_RxDataHandler	;wreg free
 15162  002E58                     i2l343:
 15163  002E58  0012               	return		;funcret
 15164  002E5A                     __end_of_EUSART2_Receive_ISR:
 15165                           	opt callstack 0
 15166                           
 15167 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 15168 ;; Defined at:
 15169 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 15170 ;; Parameters:    Size  Location     Type
 15171 ;;		None
 15172 ;; Auto vars:     Size  Location     Type
 15173 ;;		None
 15174 ;; Return value:  Size  Location     Type
 15175 ;;                  1    wreg      void 
 15176 ;; Registers used:
 15177 ;;		None
 15178 ;; Tracked objects:
 15179 ;;		On entry : 0/0
 15180 ;;		On exit  : 0/0
 15181 ;;		Unchanged: 0/0
 15182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;Total ram usage:        0 bytes
 15188 ;; Hardware stack levels used:    1
 15189 ;; This function calls:
 15190 ;;		Nothing
 15191 ;; This function is called by:
 15192 ;;		_EUSART2_Initialize
 15193 ;;		_EUSART2_Receive_ISR
 15194 ;; This function uses a non-reentrant model
 15195 ;;
 15196                           
 15197                           	psect	text86
 15198  003E28                     __ptext86:
 15199                           	opt callstack 0
 15200  003E28                     _EUSART2_DefaultOverrunErrorHandler:
 15201                           	opt callstack 16
 15202  003E28                     
 15203                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 15204  003E28  010E               	movlb	14	; () banked
 15205  003E2A  999D               	bcf	157,4,b	;volatile
 15206                           
 15207                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 15208  003E2C  899D               	bsf	157,4,b	;volatile
 15209  003E2E                     
 15210                           ; BSR set to: 14
 15211  003E2E  0012               	return		;funcret
 15212  003E30                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 15213                           	opt callstack 0
 15214                           
 15215 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 15216 ;; Defined at:
 15217 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 15218 ;; Parameters:    Size  Location     Type
 15219 ;;		None
 15220 ;; Auto vars:     Size  Location     Type
 15221 ;;		None
 15222 ;; Return value:  Size  Location     Type
 15223 ;;                  1    wreg      void 
 15224 ;; Registers used:
 15225 ;;		None
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15235 ;;Total ram usage:        0 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; This function calls:
 15238 ;;		Nothing
 15239 ;; This function is called by:
 15240 ;;		_EUSART2_Initialize
 15241 ;;		_EUSART2_Receive_ISR
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           	psect	text87
 15246  003E56                     __ptext87:
 15247                           	opt callstack 0
 15248  003E56                     _EUSART2_DefaultFramingErrorHandler:
 15249                           	opt callstack 16
 15250  003E56  0012               	return		;funcret
 15251  003E58                     __end_of_EUSART2_DefaultFramingErrorHandler:
 15252                           	opt callstack 0
 15253                           
 15254 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 15255 ;; Defined at:
 15256 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  1    wreg      void 
 15263 ;; Registers used:
 15264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15274 ;;Total ram usage:        0 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:    1
 15277 ;; This function calls:
 15278 ;;		_EUSART2_RxDataHandler
 15279 ;; This function is called by:
 15280 ;;		_EUSART2_Initialize
 15281 ;;		_EUSART2_Receive_ISR
 15282 ;; This function uses a non-reentrant model
 15283 ;;
 15284                           
 15285                           	psect	text88
 15286  003E3C                     __ptext88:
 15287                           	opt callstack 0
 15288  003E3C                     _EUSART2_DefaultErrorHandler:
 15289                           	opt callstack 15
 15290  003E3C                     
 15291                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 15292  003E3C  ECFF  F01D         	call	_EUSART2_RxDataHandler	;wreg free
 15293  003E40  0012               	return		;funcret
 15294  003E42                     __end_of_EUSART2_DefaultErrorHandler:
 15295                           	opt callstack 0
 15296                           
 15297 ;; *************** function _EUSART2_RxDataHandler *****************
 15298 ;; Defined at:
 15299 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;		None
 15302 ;; Auto vars:     Size  Location     Type
 15303 ;;		None
 15304 ;; Return value:  Size  Location     Type
 15305 ;;                  1    wreg      void 
 15306 ;; Registers used:
 15307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15308 ;; Tracked objects:
 15309 ;;		On entry : 0/0
 15310 ;;		On exit  : 0/0
 15311 ;;		Unchanged: 0/0
 15312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15317 ;;Total ram usage:        0 bytes
 15318 ;; Hardware stack levels used:    1
 15319 ;; This function calls:
 15320 ;;		Nothing
 15321 ;; This function is called by:
 15322 ;;		_EUSART2_Receive_ISR
 15323 ;;		_EUSART2_DefaultErrorHandler
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text89
 15328  003BFE                     __ptext89:
 15329                           	opt callstack 0
 15330  003BFE                     _EUSART2_RxDataHandler:
 15331                           	opt callstack 16
 15332  003BFE                     
 15333                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 15334  003BFE  0E64               	movlw	low _eusart2RxBuffer
 15335  003C00  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 15336  003C02  6ED9               	movwf	fsr2l,c
 15337  003C04  6ADA               	clrf	fsr2h,c
 15338  003C06  0E02               	movlw	high _eusart2RxBuffer
 15339  003C08  22DA               	addwfc	fsr2h,f,c
 15340  003C0A  CE99 FFDF          	movff	3737,indf2	;volatile
 15341  003C0E  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 15342  003C10                     
 15343                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 15344  003C10  0E1F               	movlw	31
 15345  003C12  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 15346  003C14  EF0E  F01E         	goto	i2u399_41
 15347  003C18  EF10  F01E         	goto	i2u399_40
 15348  003C1C                     i2u399_41:
 15349  003C1C  EF12  F01E         	goto	i2l4653
 15350  003C20                     i2u399_40:
 15351  003C20                     
 15352                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 15353  003C20  0E00               	movlw	0
 15354  003C22  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 15355  003C24                     i2l4653:
 15356                           
 15357                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 15358  003C24  0100               	movlb	0	; () banked
 15359  003C26  2BB7               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 15360  003C28                     
 15361                           ; BSR set to: 0
 15362  003C28  0012               	return		;funcret
 15363  003C2A                     __end_of_EUSART2_RxDataHandler:
 15364                           	opt callstack 0
 15365                           
 15366 ;; *************** function _EUSART1_Transmit_ISR *****************
 15367 ;; Defined at:
 15368 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;		None
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;		None
 15373 ;; Return value:  Size  Location     Type
 15374 ;;                  1    wreg      void 
 15375 ;; Registers used:
 15376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15377 ;; Tracked objects:
 15378 ;;		On entry : 0/0
 15379 ;;		On exit  : 0/0
 15380 ;;		Unchanged: 0/0
 15381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;Total ram usage:        0 bytes
 15387 ;; Hardware stack levels used:    1
 15388 ;; This function calls:
 15389 ;;		Nothing
 15390 ;; This function is called by:
 15391 ;;		_EUSART1_Initialize
 15392 ;;		_INTERRUPT_InterruptManager
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396                           	psect	text90
 15397  003A22                     __ptext90:
 15398                           	opt callstack 0
 15399  003A22                     _EUSART1_Transmit_ISR:
 15400                           	opt callstack 17
 15401  003A22                     
 15402                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 15403  003A22  0E10               	movlw	16
 15404  003A24  0100               	movlb	0	; () banked
 15405  003A26  61BB               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 15406  003A28  EF18  F01D         	goto	i2u464_41
 15407  003A2C  EF1A  F01D         	goto	i2u464_40
 15408  003A30                     i2u464_41:
 15409  003A30  EF30  F01D         	goto	i2l477
 15410  003A34                     i2u464_40:
 15411  003A34                     
 15412                           ; BSR set to: 0
 15413                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 15414  003A34  0EA1               	movlw	low _eusart1TxBuffer
 15415  003A36  25B4               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 15416  003A38  6ED9               	movwf	fsr2l,c
 15417  003A3A  6ADA               	clrf	fsr2h,c
 15418  003A3C  0E01               	movlw	high _eusart1TxBuffer
 15419  003A3E  22DA               	addwfc	fsr2h,f,c
 15420  003A40  50DF               	movf	indf2,w,c
 15421  003A42  6E9A               	movwf	154,c	;volatile
 15422  003A44                     
 15423                           ; BSR set to: 0
 15424  003A44  2BB4               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 15425  003A46                     
 15426                           ; BSR set to: 0
 15427                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 15428  003A46  0E0F               	movlw	15
 15429  003A48  65B4               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 15430  003A4A  EF29  F01D         	goto	i2u465_41
 15431  003A4E  EF2B  F01D         	goto	i2u465_40
 15432  003A52                     i2u465_41:
 15433  003A52  EF2D  F01D         	goto	i2l5237
 15434  003A56                     i2u465_40:
 15435  003A56                     
 15436                           ; BSR set to: 0
 15437                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 15438  003A56  0E00               	movlw	0
 15439  003A58  6FB4               	movwf	_eusart1TxTail& (0+255),b	;volatile
 15440  003A5A                     i2l5237:
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 15444  003A5A  2BBB               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 15445                           
 15446                           ;mcc_generated_files/eusart1.c: 211:     }
 15447  003A5C  EF32  F01D         	goto	i2l480
 15448  003A60                     i2l477:
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 15452  003A60  010E               	movlb	14	; () banked
 15453  003A62  99C5               	bcf	197,4,b	;volatile
 15454  003A64                     i2l480:
 15455  003A64  0012               	return		;funcret
 15456  003A66                     __end_of_EUSART1_Transmit_ISR:
 15457                           	opt callstack 0
 15458                           
 15459 ;; *************** function _EUSART1_Receive_ISR *****************
 15460 ;; Defined at:
 15461 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;		None
 15464 ;; Auto vars:     Size  Location     Type
 15465 ;;		None
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  1    wreg      void 
 15468 ;; Registers used:
 15469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15470 ;; Tracked objects:
 15471 ;;		On entry : 0/0
 15472 ;;		On exit  : 0/0
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15479 ;;Total ram usage:        0 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    2
 15482 ;; This function calls:
 15483 ;;		Absolute function
 15484 ;;		_EUSART1_DefaultErrorHandler
 15485 ;;		_EUSART1_DefaultFramingErrorHandler
 15486 ;;		_EUSART1_DefaultOverrunErrorHandler
 15487 ;;		_EUSART1_RxDataHandler
 15488 ;; This function is called by:
 15489 ;;		_EUSART1_Initialize
 15490 ;;		_INTERRUPT_InterruptManager
 15491 ;; This function uses a non-reentrant model
 15492 ;;
 15493                           
 15494                           	psect	text91
 15495  002E5A                     __ptext91:
 15496                           	opt callstack 0
 15497  002E5A                     _EUSART1_Receive_ISR:
 15498                           	opt callstack 15
 15499  002E5A                     
 15500                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15501  002E5A  0E80               	movlw	low _eusart1RxStatusBuffer
 15502  002E5C  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15503  002E5E  6ED9               	movwf	fsr2l,c
 15504  002E60  6ADA               	clrf	fsr2h,c
 15505  002E62  0E03               	movlw	high _eusart1RxStatusBuffer
 15506  002E64  22DA               	addwfc	fsr2h,f,c
 15507  002E66  0E00               	movlw	0
 15508  002E68  6EDF               	movwf	indf2,c
 15509  002E6A                     
 15510                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 15511  002E6A  A49D               	btfss	157,2,c	;volatile
 15512  002E6C  EF3A  F017         	goto	i2u466_41
 15513  002E70  EF3C  F017         	goto	i2u466_40
 15514  002E74                     i2u466_41:
 15515  002E74  EF51  F017         	goto	i2l5247
 15516  002E78                     i2u466_40:
 15517  002E78                     
 15518                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15519  002E78  0E80               	movlw	low _eusart1RxStatusBuffer
 15520  002E7A  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15521  002E7C  6ED9               	movwf	fsr2l,c
 15522  002E7E  6ADA               	clrf	fsr2h,c
 15523  002E80  0E03               	movlw	high _eusart1RxStatusBuffer
 15524  002E82  22DA               	addwfc	fsr2h,f,c
 15525  002E84  0103               	movlb	3	; () banked
 15526  002E86  82DF               	bsf	indf2,1,c
 15527  002E88                     
 15528                           ; BSR set to: 3
 15529                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 15530  002E88  D802               	call	i2u467_48
 15531  002E8A  EF51  F017         	goto	i2u467_49
 15532  002E8E                     i2u467_48:
 15533  002E8E  0005               	push	
 15534  002E90  6EFA               	movwf	pclath,c
 15535  002E92  0101               	movlb	1	; () banked
 15536  002E94  51E8               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 15537  002E96  6EFD               	movwf	tosl,c
 15538  002E98  51E9               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 15539  002E9A  6EFE               	movwf	tosh,c
 15540  002E9C  6AFF               	clrf	tosu,c
 15541  002E9E  50FA               	movf	pclath,w,c
 15542  002EA0  0012               	return		;indir
 15543  002EA2                     i2u467_49:
 15544  002EA2                     i2l5247:
 15545                           
 15546                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 15547  002EA2  A29D               	btfss	157,1,c	;volatile
 15548  002EA4  EF56  F017         	goto	i2u468_41
 15549  002EA8  EF58  F017         	goto	i2u468_40
 15550  002EAC                     i2u468_41:
 15551  002EAC  EF6D  F017         	goto	i2l5253
 15552  002EB0                     i2u468_40:
 15553  002EB0                     
 15554                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 15555  002EB0  0E80               	movlw	low _eusart1RxStatusBuffer
 15556  002EB2  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15557  002EB4  6ED9               	movwf	fsr2l,c
 15558  002EB6  6ADA               	clrf	fsr2h,c
 15559  002EB8  0E03               	movlw	high _eusart1RxStatusBuffer
 15560  002EBA  22DA               	addwfc	fsr2h,f,c
 15561  002EBC  0103               	movlb	3	; () banked
 15562  002EBE  84DF               	bsf	indf2,2,c
 15563  002EC0                     
 15564                           ; BSR set to: 3
 15565                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 15566  002EC0  D802               	call	i2u469_48
 15567  002EC2  EF6D  F017         	goto	i2u469_49
 15568  002EC6                     i2u469_48:
 15569  002EC6  0005               	push	
 15570  002EC8  6EFA               	movwf	pclath,c
 15571  002ECA  0101               	movlb	1	; () banked
 15572  002ECC  51E6               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 15573  002ECE  6EFD               	movwf	tosl,c
 15574  002ED0  51E7               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 15575  002ED2  6EFE               	movwf	tosh,c
 15576  002ED4  6AFF               	clrf	tosu,c
 15577  002ED6  50FA               	movf	pclath,w,c
 15578  002ED8  0012               	return		;indir
 15579  002EDA                     i2u469_49:
 15580  002EDA                     i2l5253:
 15581                           
 15582                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 15583  002EDA  0E80               	movlw	low _eusart1RxStatusBuffer
 15584  002EDC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15585  002EDE  6ED9               	movwf	fsr2l,c
 15586  002EE0  6ADA               	clrf	fsr2h,c
 15587  002EE2  0E03               	movlw	high _eusart1RxStatusBuffer
 15588  002EE4  22DA               	addwfc	fsr2h,f,c
 15589  002EE6  50DF               	movf	indf2,w,c
 15590  002EE8  B4D8               	btfsc	status,2,c
 15591  002EEA  EF79  F017         	goto	i2u470_41
 15592  002EEE  EF7B  F017         	goto	i2u470_40
 15593  002EF2                     i2u470_41:
 15594  002EF2  EF8A  F017         	goto	i2l5257
 15595  002EF6                     i2u470_40:
 15596  002EF6                     
 15597                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 15598  002EF6  D802               	call	i2u471_48
 15599  002EF8  EF88  F017         	goto	i2u471_49
 15600  002EFC                     i2u471_48:
 15601  002EFC  0005               	push	
 15602  002EFE  6EFA               	movwf	pclath,c
 15603  002F00  0101               	movlb	1	; () banked
 15604  002F02  51E4               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 15605  002F04  6EFD               	movwf	tosl,c
 15606  002F06  51E5               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 15607  002F08  6EFE               	movwf	tosh,c
 15608  002F0A  6AFF               	clrf	tosu,c
 15609  002F0C  50FA               	movf	pclath,w,c
 15610  002F0E  0012               	return		;indir
 15611  002F10                     i2u471_49:
 15612                           
 15613                           ;mcc_generated_files/eusart1.c: 235:     } else {
 15614  002F10  EF8C  F017         	goto	i2l487
 15615  002F14                     i2l5257:
 15616                           
 15617                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 15618  002F14  EC15  F01E         	call	_EUSART1_RxDataHandler	;wreg free
 15619  002F18                     i2l487:
 15620  002F18  0012               	return		;funcret
 15621  002F1A                     __end_of_EUSART1_Receive_ISR:
 15622                           	opt callstack 0
 15623                           
 15624 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 15625 ;; Defined at:
 15626 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 15627 ;; Parameters:    Size  Location     Type
 15628 ;;		None
 15629 ;; Auto vars:     Size  Location     Type
 15630 ;;		None
 15631 ;; Return value:  Size  Location     Type
 15632 ;;                  1    wreg      void 
 15633 ;; Registers used:
 15634 ;;		None
 15635 ;; Tracked objects:
 15636 ;;		On entry : 0/0
 15637 ;;		On exit  : 0/0
 15638 ;;		Unchanged: 0/0
 15639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;Total ram usage:        0 bytes
 15645 ;; Hardware stack levels used:    1
 15646 ;; This function calls:
 15647 ;;		Nothing
 15648 ;; This function is called by:
 15649 ;;		_EUSART1_Initialize
 15650 ;;		_EUSART1_Receive_ISR
 15651 ;; This function uses a non-reentrant model
 15652 ;;
 15653                           
 15654                           	psect	text92
 15655  003E42                     __ptext92:
 15656                           	opt callstack 0
 15657  003E42                     _EUSART1_DefaultOverrunErrorHandler:
 15658                           	opt callstack 16
 15659  003E42                     
 15660                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 15661  003E42  989D               	bcf	157,4,c	;volatile
 15662                           
 15663                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 15664  003E44  889D               	bsf	157,4,c	;volatile
 15665  003E46  0012               	return		;funcret
 15666  003E48                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 15667                           	opt callstack 0
 15668                           
 15669 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 15670 ;; Defined at:
 15671 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;		None
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		None
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15689 ;;Total ram usage:        0 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; This function calls:
 15692 ;;		Nothing
 15693 ;; This function is called by:
 15694 ;;		_EUSART1_Initialize
 15695 ;;		_EUSART1_Receive_ISR
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text93
 15700  003E58                     __ptext93:
 15701                           	opt callstack 0
 15702  003E58                     _EUSART1_DefaultFramingErrorHandler:
 15703                           	opt callstack 16
 15704  003E58  0012               	return		;funcret
 15705  003E5A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 15706                           	opt callstack 0
 15707                           
 15708 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 15709 ;; Defined at:
 15710 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;Total ram usage:        0 bytes
 15729 ;; Hardware stack levels used:    1
 15730 ;; Hardware stack levels required when called:    1
 15731 ;; This function calls:
 15732 ;;		_EUSART1_RxDataHandler
 15733 ;; This function is called by:
 15734 ;;		_EUSART1_Initialize
 15735 ;;		_EUSART1_Receive_ISR
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text94
 15740  003E48                     __ptext94:
 15741                           	opt callstack 0
 15742  003E48                     _EUSART1_DefaultErrorHandler:
 15743                           	opt callstack 15
 15744  003E48                     
 15745                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 15746  003E48  EC15  F01E         	call	_EUSART1_RxDataHandler	;wreg free
 15747  003E4C  0012               	return		;funcret
 15748  003E4E                     __end_of_EUSART1_DefaultErrorHandler:
 15749                           	opt callstack 0
 15750                           
 15751 ;; *************** function _EUSART1_RxDataHandler *****************
 15752 ;; Defined at:
 15753 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 15754 ;; Parameters:    Size  Location     Type
 15755 ;;		None
 15756 ;; Auto vars:     Size  Location     Type
 15757 ;;		None
 15758 ;; Return value:  Size  Location     Type
 15759 ;;                  1    wreg      void 
 15760 ;; Registers used:
 15761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15762 ;; Tracked objects:
 15763 ;;		On entry : 0/0
 15764 ;;		On exit  : 0/0
 15765 ;;		Unchanged: 0/0
 15766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15771 ;;Total ram usage:        0 bytes
 15772 ;; Hardware stack levels used:    1
 15773 ;; This function calls:
 15774 ;;		Nothing
 15775 ;; This function is called by:
 15776 ;;		_EUSART1_Receive_ISR
 15777 ;;		_EUSART1_DefaultErrorHandler
 15778 ;; This function uses a non-reentrant model
 15779 ;;
 15780                           
 15781                           	psect	text95
 15782  003C2A                     __ptext95:
 15783                           	opt callstack 0
 15784  003C2A                     _EUSART1_RxDataHandler:
 15785                           	opt callstack 16
 15786  003C2A                     
 15787                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 15788  003C2A  0E64               	movlw	low _eusart1RxBuffer
 15789  003C2C  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 15790  003C2E  6ED9               	movwf	fsr2l,c
 15791  003C30  6ADA               	clrf	fsr2h,c
 15792  003C32  0E04               	movlw	high _eusart1RxBuffer
 15793  003C34  22DA               	addwfc	fsr2h,f,c
 15794  003C36  CF99 FFDF          	movff	3993,indf2	;volatile
 15795  003C3A  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 15796  003C3C                     
 15797                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 15798  003C3C  0E63               	movlw	99
 15799  003C3E  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 15800  003C40  EF24  F01E         	goto	i2u406_41
 15801  003C44  EF26  F01E         	goto	i2u406_40
 15802  003C48                     i2u406_41:
 15803  003C48  EF28  F01E         	goto	i2l4699
 15804  003C4C                     i2u406_40:
 15805  003C4C                     
 15806                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 15807  003C4C  0E00               	movlw	0
 15808  003C4E  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 15809  003C50                     i2l4699:
 15810                           
 15811                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 15812  003C50  0100               	movlb	0	; () banked
 15813  003C52  2BB2               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 15814  003C54                     
 15815                           ; BSR set to: 0
 15816  003C54  0012               	return		;funcret
 15817  003C56                     __end_of_EUSART1_RxDataHandler:
 15818                           	opt callstack 0
 15819                           
 15820                           	psect	text96
 15821  000000                     __ptext96:
 15822                           	opt callstack 0
 15823  000000                     
 15824                           	psect	rparam
 15825  0000                     
 15826                           	psect	temp
 15827  00005B                     btemp:
 15828                           	opt callstack 0
 15829  00005B                     	ds	1
 15830  0000                     int$flags	set	btemp
 15831  0000                     wtemp8	set	btemp+1
 15832  0000                     ttemp5	set	btemp+1
 15833  0000                     ttemp6	set	btemp+4
 15834  0000                     ttemp7	set	btemp+8
 15835                           tosu	equ	0xFFF
 15836                           tosh	equ	0xFFE
 15837                           tosl	equ	0xFFD
 15838                           stkptr	equ	0xFFC
 15839                           pclatu	equ	0xFFB
 15840                           pclath	equ	0xFFA
 15841                           pcl	equ	0xFF9
 15842                           tblptru	equ	0xFF8
 15843                           tblptrh	equ	0xFF7
 15844                           tblptrl	equ	0xFF6
 15845                           tablat	equ	0xFF5
 15846                           prodh	equ	0xFF4
 15847                           prodl	equ	0xFF3
 15848                           indf0	equ	0xFEF
 15849                           postinc0	equ	0xFEE
 15850                           postdec0	equ	0xFED
 15851                           preinc0	equ	0xFEC
 15852                           plusw0	equ	0xFEB
 15853                           fsr0h	equ	0xFEA
 15854                           fsr0l	equ	0xFE9
 15855                           wreg	equ	0xFE8
 15856                           indf1	equ	0xFE7
 15857                           postinc1	equ	0xFE6
 15858                           postdec1	equ	0xFE5
 15859                           preinc1	equ	0xFE4
 15860                           plusw1	equ	0xFE3
 15861                           fsr1h	equ	0xFE2
 15862                           fsr1l	equ	0xFE1
 15863                           bsr	equ	0xFE0
 15864                           indf2	equ	0xFDF
 15865                           postinc2	equ	0xFDE
 15866                           postdec2	equ	0xFDD
 15867                           preinc2	equ	0xFDC
 15868                           plusw2	equ	0xFDB
 15869                           fsr2h	equ	0xFDA
 15870                           fsr2l	equ	0xFD9
 15871                           status	equ	0xFD8


Data Sizes:
    Strings     1358
    Constant    0
    Data        319
    BSS         602
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     68      96
    BANK1           256      0     248
    BANK2           256      0     235
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256     68      68
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1453(BANK5[20]), 
		 -> ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), STR_34(CODE[9]), STR_33(CODE[12]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1453(BANK5[20]), 
		 -> ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), STR_34(CODE[9]), STR_33(CODE[12]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[1]), STR_48(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_3(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[1]), STR_48(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_3(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_66(CODE[4]), STR_64(CODE[5]), STR_62(CODE[7]), STR_60(CODE[2]), 
		 -> STR_58(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_56(CODE[29]), STR_54(CODE[30]), STR_53(CODE[24]), STR_52(CODE[25]), 
		 -> STR_51(CODE[17]), STR_50(CODE[27]), STR_49(CODE[33]), STR_47(CODE[36]), 
		 -> STR_46(CODE[67]), STR_45(CODE[19]), STR_44(CODE[29]), STR_43(CODE[55]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[4]), STR_39(CODE[35]), 
		 -> STR_38(CODE[34]), STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), 
		 -> STR_32(CODE[42]), STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), 
		 -> STR_28(CODE[18]), STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), 
		 -> STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), STR_21(CODE[28]), 
		 -> STR_20(CODE[28]), STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[14]), STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), 
		 -> STR_8(CODE[32]), STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), 
		 -> STR_4(CODE[16]), STR_2(CODE[28]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2078_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_56(CODE[29]), STR_54(CODE[30]), STR_53(CODE[24]), STR_52(CODE[25]), 
		 -> STR_51(CODE[17]), STR_50(CODE[27]), STR_49(CODE[33]), STR_47(CODE[36]), 
		 -> STR_46(CODE[67]), STR_45(CODE[19]), STR_44(CODE[29]), STR_43(CODE[55]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[4]), STR_39(CODE[35]), 
		 -> STR_38(CODE[34]), STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), 
		 -> STR_32(CODE[42]), STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), 
		 -> STR_28(CODE[18]), STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), 
		 -> STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), STR_21(CODE[28]), 
		 -> STR_20(CODE[28]), STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[14]), STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), 
		 -> STR_8(CODE[32]), STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), 
		 -> STR_4(CODE[16]), STR_2(CODE[28]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_56(CODE[29]), STR_54(CODE[30]), STR_53(CODE[24]), STR_52(CODE[25]), 
		 -> STR_51(CODE[17]), STR_50(CODE[27]), STR_49(CODE[33]), STR_47(CODE[36]), 
		 -> STR_46(CODE[67]), STR_45(CODE[19]), STR_44(CODE[29]), STR_43(CODE[55]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[4]), STR_39(CODE[35]), 
		 -> STR_38(CODE[34]), STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), 
		 -> STR_32(CODE[42]), STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), 
		 -> STR_28(CODE[18]), STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), 
		 -> STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), STR_21(CODE[28]), 
		 -> STR_20(CODE[28]), STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[14]), STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), 
		 -> STR_8(CODE[32]), STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), 
		 -> STR_4(CODE[16]), STR_2(CODE[28]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 67
		 -> STR_56(CODE[29]), STR_54(CODE[30]), STR_53(CODE[24]), STR_52(CODE[25]), 
		 -> STR_51(CODE[17]), STR_50(CODE[27]), STR_49(CODE[33]), STR_47(CODE[36]), 
		 -> STR_46(CODE[67]), STR_45(CODE[19]), STR_44(CODE[29]), STR_43(CODE[55]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[4]), STR_39(CODE[35]), 
		 -> STR_38(CODE[34]), STR_37(CODE[54]), STR_36(CODE[52]), STR_35(CODE[28]), 
		 -> STR_32(CODE[42]), STR_31(CODE[22]), STR_30(CODE[19]), STR_29(CODE[61]), 
		 -> STR_28(CODE[18]), STR_27(CODE[24]), STR_26(CODE[33]), STR_25(CODE[16]), 
		 -> STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), STR_21(CODE[28]), 
		 -> STR_20(CODE[28]), STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[13]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[14]), STR_11(CODE[36]), STR_10(CODE[4]), STR_9(CODE[23]), 
		 -> STR_8(CODE[32]), STR_7(CODE[28]), STR_6(CODE[54]), STR_5(CODE[24]), 
		 -> STR_4(CODE[16]), STR_2(CODE[28]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), 
		 -> STR_34(CODE[9]), STR_33(CODE[12]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), 
		 -> STR_34(CODE[9]), STR_33(CODE[12]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), 
		 -> ValidateCmd@ConfName(BANK5[20]), STR_34(CODE[9]), STR_33(CODE[12]), InitialiseString@SerialNum(BANK0[11]), 
		 -> Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1453(BANK5[20]), ValidateCmd@ConfName_1449(BANK5[20]), ValidateCmd@ConfName(BANK5[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    SerIni@SerialNum	PTR unsigned char  size(2) Largest target is 11
		 -> InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned int  size(2) Largest target is 64
		 -> MBRespon(BANK1[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _SerIni->_DATAEE_ReadByte
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _ValidateCmd->_SaveCardDat
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  738055
                                             65 BANK0      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  236885
                                              0 BANK5     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1061
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   37417
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  122274
                                             47 BANK0     18    10      8
                    _ClearEEAddRange
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   41913
                                             84 COMRAM     2     2      0
                                             43 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2167
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   38369
                                             84 COMRAM     2     2      0
                                             43 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    15    15      0   38491
                                             43 BANK0     13    13      0
                      _Initalisation
                             _SerIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SerIni                                              12    10      2     982
                                              6 COMRAM    12    10      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     332
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Initalisation                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   37519
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  112838
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   37862
                                             43 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   37488
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   77034
                                             45 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   37550
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   76982
                                             45 BANK0      6     6      0
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          6     4      2   39401
                                             45 BANK0      6     4      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1168
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     590
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PrintModRespon                                       3     3      0   37519
                                             84 COMRAM     1     1      0
                                             43 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   37417
                                             29 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32722
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   32159
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7877
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7259
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3452
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8113
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5847
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2    1030
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _Initalisation
     _SerIni
       _DATAEE_ReadByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _Initalisation
       _SerIni
         _DATAEE_ReadByte
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_ReadByte
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     44      44      16       26.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      EB      10       91.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F8       8       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      60       5       60.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     48D       6        0.0%
DATA                 0      0     48D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 19 19:07:15 2021

                      _eusart1TxBufferRemaining 00BB                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 30EA  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 3CFE                                             l124 3D46  
                                           l212 39C2                                             l214 39D0  
                                           l302 3D16                                             l127 3CE4  
                                           l215 39DC                                             l320 36D4  
                                           l144 3E50                                             l305 3DA4  
                                           l321 36EC                                             l330 3E26  
                                           l218 3D2E                                             l315 3774  
                                           l324 371C                                             l503 3E12  
                                           l512 3DF4                                             l506 3E08  
                                           l362 3DD6                                             l515 3DFE  
                                           l371 3DCC                                             l452 3D5E  
                                           l701 3950                                             l509 3E1C  
                                           l365 3DEA                                             l470 3618  
                                           l446 32F4                                             l471 3630  
                                           l455 3DB8                                             l359 3DE0  
                                           l712 2B40                                             l368 3DC2  
                                           l296 33F0                                             l449 3D76  
                                           l465 37CC                                             l474 3660  
                                           l299 3D8E                                             l731 2266  
                                           l724 214A                                             l813 38BA  
                                           l727 2170                                             l719 3172  
                                           l808 28B0                                             l816 26D4  
                                           l920 3372                                             l681 3E38  
                                           l690 3E34                                             l914 3B54  
                                           l594 25C2                                             l683 3E3A  
                                           l771 291A                                             l763 159A  
                                           l931 11A8                                             l756 0B06  
                                           l748 09EE                                             l676 3540  
                                           l836 194C                                             l908 23A0  
                                           l773 298A                                             l774 2992  
                                           l686 3E30                                             l942 1AEA  
                                           l695 3906                                             l679 3E36  
                                           l768 28F4                                             l688 3E32  
                                           l938 1350                                             l787 34D8  
                                           l892 24BC                                             l885 3E54  
                                           l897 2FC6                                             l994 2D1C  
                                           l997 2D5E                                             l999 2D98  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 3DE2  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 3DD8  
                                           _abs 3A66                                             _pad 2CD8  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1005 0BA8                                            l1007 0BB0  
                                          l1032 1B6C                                            l1025 0DE6  
                                          l1034 1B74                                            l1122 06B2  
                                          l1043 1C34                                            l1107 0220  
                                          ?_abs 0017                                            l1044 1C7C  
                                          l1053 15D4                                            l1133 359C  
                                          l1070 0E28                                            l1134 35A4  
                                          l1063 179C                                            l1055 15DC  
                                          l1048 1C84                                            l1137 3CC8  
                                          l1251 1FA6                                            l1091 105A  
                                          l1068 0E20                                            l1093 10BC  
                                          l1077 0EBE                                            l1264 210A  
                                          l1812 3A9C                                            l1902 3A20  
                                          l1582 27C4                                            l1815 3AA4  
                                          l1575 27A4                                            l5023 28B2  
                                          l1592 2C10                                            l6001 2BD8  
                                          l1585 2BF0                                            l5041 2920  
                                          l5025 28B6                                            l1930 3602  
                                          l6011 3814                                            l1843 1E16  
                                          l6003 2BEA                                            l5051 297E  
                                          l5043 2932                                            l5035 2902  
                                          l5027 28D2                                            l1916 3CA2  
                                          l1924 3464                                            l6013 3818  
                                          l6005 37CE                                            l6021 0B50  
                                          l6101 1BAE                                            l1941 36B6  
                                          l1909 3C7C                                            l5037 2908  
                                          l5029 28EC                                            l5045 2936  
                                          l1846 1E1E                                            l1855 3BFC  
                                          l1863 381E                                            l6007 37D2  
                                          l6031 0BB8                                            l6023 0B70  
                                          l6111 1C16                                            l6103 1BCC  
                                          l5047 2954                                            l5039 2914  
                                          l1936 386E                                            l1952 3B8C  
                                          l6009 37E6                                            l6041 0BF0  
                                          l6033 0BCA                                            l6025 0B80  
                                          l6017 0B08                                            l6105 1BD8  
                                          l6121 159C                                            l1849 3B1C  
                                          l6201 0F80                                            l5081 346A  
                                          l5049 296E                                            l7001 1562  
                                          l1946 36BE                                            l1882 2A6E  
                                          l6043 0BF6                                            l6051 0CE8  
                                          l6035 0BD8                                            l6027 0B82  
                                          l6019 0B28                                            l6115 1C46  
                                          l6107 1C0E                                            l6131 160C  
                                          l6123 15AC                                            l6211 104C  
                                          l6203 0FDE                                            l5091 34BA  
                                          l5083 347E                                            l7011 25D4  
                                          l7003 156E                                            l6053 0D02  
                                          l6061 0D62                                            l6045 0C78  
                                          l6037 0BDE                                            l6029 0B9C  
                                          l6117 1C5A                                            l6109 1C12  
                                          l6141 169E                                            l6133 1616  
                                          l6125 15AE                                            l1869 3BC4  
                                          l6213 1068                                            l6205 0FFA  
                                          l6301 020E                                            l5085 348A  
                                          l7021 2646                                            l7013 25F8  
                                          l7005 157E                                            l1894 305C  
                                          ?_pad 0017                                            l5511 38FC  
                                          l6231 1CC0                                            l6223 1C86  
                                          l6071 0DA6                                            l6063 0D74  
                                          l6055 0D20                                            l6047 0C7E  
                                          l6039 0BE6                                            l6119 1C5E  
                                          l6151 1766                                            l6135 161C  
                                          l6143 1702                                            l6127 15C8  
                                          l6215 106E                                            l6207 1018  
                                          l6311 029A                                            l6303 022E  
                                          l5087 34A2                                            l5079 3466  
                                          l7031 26B0                                            l7023 264A  
                                          l7015 25FC                                            l7007 1586  
                                          l4631 3DD8                                            l5191 3CF6  
                                          l5183 3CE6                                            l5505 38CC  
                                          l5265 3880                                            l4641 3D90  
                                          l6241 1D18                                            l6233 1CF8  
                                          l6225 1C9A                                            l6073 0DAE  
                                          l6065 0D82                                            l6057 0D3A  
                                          l6049 0C84                                            l6081 1AFE  
                                          l6145 1714                                            l6153 1774  
                                          l6137 1692                                            l6129 1604  
                                          l6217 107E                                            l6209 1032  
                                          l6161 0DFA                                            l6321 0320  
                                          l6313 02A8                                            l6305 0230  
                                          l6401 3542                                            l5089 34B6  
                                          l7033 26BC                                            l7025 2662  
                                          l7017 2628                                            l7009 25CA  
                                          l4633 3DCE                                            l4801 30CC  
                                          l5193 3CFA                                            l5185 3CEA  
                                          l7105 1AE8                                            l7041 1964  
                                          l7121 24C4                                            l5507 38DC  
                                          l5267 389A                                            l5259 3870  
                                          l6251 1D96                                            l6243 1D20  
                                          l6235 1CFC                                            l6227 1C9E  
                                          l6067 0D88                                            l6075 0DBE  
                                          l6059 0D54                                            l6091 1B3C  
                                          l6083 1B06                                            l6147 1732  
                                          l6139 1698                                            l6219 1094  
                                          l6171 0E6E                                            l6163 0E14  
                                          l6315 02C8                                            l6323 0332  
                                          l6307 0256                                            l6403 354A  
                                          l7035 26C0                                            l7027 267A  
                                          l7019 262C                                            l4635 3DE2  
                                          l4627 3DC4                                            l4803 30CE  
                                          l4811 3CCA                                            l5187 3CEE  
                                          l6411 39A2                                            l7043 198A  
                                          l7051 1994                                            l7131 24CE  
                                          l7123 24C6                                            l5509 38E0  
                                          l5269 389E                                            l4637 3D78  
                                          l6245 1D28                                            l6229 1CA2  
                                          l6069 0D9A                                            l6093 1B4A  
                                          l6085 1B18                                            l6149 174C  
                                          l6181 0EB2                                            l6173 0E78  
                                          l6165 0E3E                                            l6157 0DE8  
                                          l6341 047A                                            l6333 03FE  
                                          l6325 0358                                            l6317 02D6  
                                          l6309 028C                                            l6405 3558  
                                          l7029 2696                                            l4661 3E00  
                                          l4821 3296                                            l4629 3DBA  
                                          l4813 3D30                                            l4805 30D0  
                                          l5189 3CF2                                            l6421 39B6  
                                          l6413 39A8                                            l6501 2268  
                                          l7053 19BA                                            l7061 19C2  
                                          l7045 198E                                            l7037 194E  
                                          l7141 24DE                                            l7133 24D2  
                                          l7125 24C8                                            l7117 24BE  
                                          l6255 1DD6                                            l6247 1D5E  
                                          l6239 1D02                                            l6087 1B20  
                                          l6079 1AEC                                            l6191 0F3E  
                                          l6175 0E7E                                            l6167 0E46  
                                          l6159 0DF8                                            l6351 0548  
                                          l6343 04A0                                            l6335 0424  
                                          l6327 037E                                            l6271 0170  
                                          l6407 357E                                            l4663 3E14  
                                          l4655 3DF6                                            l4831 32AA  
                                          l4823 329A                                            l4815 3276  
                                          l4807 30D2                                            l6431 3D1E  
                                          l6423 39B8                                            l6415 39AC  
                                          l6511 22B6                                            l6503 2270  
                                          l7063 19E8                                            l7039 194E  
                                          l7151 252C                                            l7143 24F2  
                                          l7135 24D6                                            l7127 24CA  
                                          l7119 24C2                                            l6257 1DE8  
                                          l5801 2FEC                                            l6097 1B96  
                                          l6089 1B34                                            l6193 0F50  
                                          l6185 0EF2                                            l6177 0E86  
                                          l6169 0E66                                            l6353 056E  
                                          l6345 04EA                                            l6337 045A  
                                          l6329 03C6                                            l6273 0174  
                                          l6265 012A                                            l4681 3644  
                                          l4673 3606                                            l4665 3D60  
                                          l4657 3DEC                                            l4841 32E4  
                                          l4833 32D2                                            l4825 329E  
                                          l4817 327A                                            l4809 3E4E  
                                          l6441 3D2C                                            l6433 3D22  
                                          l6601 2F68                                            l6425 39BC  
                                          l6417 39B0                                            l6409 399A  
                                          l6521 233E                                            l6513 22CA  
                                          l6505 2284                                            l7081 1A5C  
                                          l7065 19FA                                            l7161 25A6  
                                          l7145 2504                                            l7137 24DA  
                                          l7129 24CC                                            l6259 1DFA  
                                          l5803 2FF6                                            l5811 3820  
                                          l6099 1BAA                                            l6187 0F04  
                                          l6195 0F64                                            l6179 0EA2  
                                          l6355 0586                                            l6363 060C  
                                          l6291 01A6                                            l6283 019A  
                                          l6275 0180                                            l6267 0150  
                                          l4683 3646                                            l4675 3606  
                                          l6611 34DA                                            l4931 3908  
                                          l4659 3E0A                                            l4843 32E8  
                                          l4835 32D8                                            l4827 32A2  
                                          l4819 3286                                            l4851 3378  
                                          l6435 3D26                                            l6603 2F8E  
                                          l6427 39C0                                            l6419 39B4  
                                          l6451 371E                                            l6531 237C  
                                          l6523 2342                                            l6515 22EE  
                                          l6507 2298                                            l7083 1A5C  
                                          l7091 1A86                                            l7067 19FA  
                                          l7147 250C                                            l7155 254A  
                                          l7139 24DE                                            l5901 1E88  
                                          l5805 3014                                            l5821 39DE  
                                          l5813 382C                                            l6197 0F74  
                                          l6381 06A0                                            l6365 0632  
                                          l6373 0660                                            l6357 0594  
                                          l6349 0522                                            l6277 0182  
                                          l6269 015E                                            l6701 27F0  
                                          l4685 3656                                            l4677 3628  
                                          l4669 3DA6                                            l6621 34F0  
                                          l6613 34E8                                            l4933 391C  
                                          l4845 32EC                                            l4837 32DC  
                                          l4829 32A6                                            l4861 33A2  
                                          l4853 3384                                            l6437 3D28  
                                          l6429 3D18                                            l6605 2F9C  
                                          l6461 3766                                            l6453 3730  
                                          l6445 3D00                                            l6533 238A  
                                          l6517 2316                                            l6509 22A4  
                                          l7093 1AAC                                            l7077 1A24  
                                          l7165 25AA                                            l7149 2514  
                                          l7157 2578                                            l5911 1EDC  
                                          l5903 1E94                                            l5807 304A  
                                          l5823 39EA                                            l5815 3830  
                                          l6199 0F7A                                            l6375 066E  
                                          l6367 0640                                            l6359 05D0  
                                          l6295 01AC                                            l6287 01A0  
                                          l6279 0194                                            l6471 3C56  
                                          l6703 27FE                                            l6711 285C  
                                          l4687 365A                                            l4679 3632  
                                          l6623 3520                                            l6615 34E8  
                                          l6631 2AA2                                            l4935 392C  
                                          l4847 32F0                                            l4839 32E0  
                                          l4871 33EC                                            l4863 33A6  
                                          l4855 3394                                            l4791 3096  
                                          l6439 3D2A                                            l6551 23F8  
                                          l6607 2FAA                                            l6463 376A  
                                          l6455 3750                                            l6519 232C  
                                          l6527 234E                                            l6535 2396  
                                          l7095 1ABE                                            l7079 1A4A  
                                          l7159 2584                                            l5921 1F50  
                                          l5913 1EEE                                            l5905 1EB2  
                                          l5825 39FC                                            l5817 3862  
                                          l5841 2D14                                            l5833 2CD8  
                                          l6369 0654                                            l6473 3C60  
                                          l6713 287A                                            l6705 2812  
                                          l4689 365C                                            l6625 3524  
                                          l6641 2AFA                                            l6633 2AA6  
                                          l4937 3930                                            l4881 3776  
                                          l4865 33AA                                            l4857 339A  
                                          l4849 3374                                            l4793 30C0  
                                          l6561 2422                                            l6553 2408  
                                          l6545 23C2                                            l6609 2FB8  
                                          l6465 376E                                            l6457 3752  
                                          l6449 371E                                            l6481 2994  
                                          l6529 2360                                            l6721 3B30  
                                          l6801 33FE                                            l7097 1ABE  
                                          l7281 2562                                            l5499 38BC  
                                          l5915 1F1C                                            l5907 1EBA  
                                          l5923 1F56                                            l5931 1FA8  
                                          l5827 3A00                                            l5851 2D80  
                                          l5843 2D28                                            l5835 2CE6  
                                          l6299 01B8                                            l6379 067A  
                                          l6715 288E                                            l6707 2842  
                                          l7283 07D0                                            l6643 2B0E  
                                          l6635 2AAA                                            l6627 2A70  
                                          l4891 37BA                                            l4883 3776  
                                          l6651 210C                                            l6811 17A2  
                                          l4867 33B6                                            l4859 339E  
                                          l4795 30C2                                            l4787 305E  
                                          l6571 2490                                            l6563 243A  
                                          l6555 240C                                            l6547 23D0  
                                          l6539 23A2                                            l6467 3772  
                                          l6459 3762                                            l6483 29BA  
                                          l6491 2A28                                            l6731 10BE  
                                          l6723 3B34                                            l6803 3428  
                                          l5925 1F66                                            l5917 1F3C  
                                          l5909 1ECE                                            l5941 1FEC  
                                          l5933 1FAC                                            l5781 36E4  
                                          l5845 2D3C                                            l5837 2CFA  
                                          l5829 3B56                                            l7285 01E0  
                                          l6717 289C                                            l6709 2856  
                                          l6901 0758                                            l6645 2B20  
                                          l6637 2AC8                                            l6629 2A86  
                                          l4893 37BE                                            l4885 3788  
                                          l4877 3D48                                            l6653 2112  
                                          l6821 17EC                                            l6813 17B6  
                                          l4869 33C2                                            l4797 30C4  
                                          l4789 3086                                            l6573 24AC  
                                          l6565 244A                                            l6557 2410  
                                          l6549 23E8                                            l6581 3334  
                                          l6493 2A3A                                            l6485 29DC  
                                          l6397 35A6                                            l6477 3C7E  
                                          l6741 1134                                            l6733 10C6  
                                          l6725 3B44                                            l6805 3440  
                                          l7287 1D48                                            l5927 1F86  
                                          l5919 1F3E                                            l5951 2054  
                                          l5943 200C                                            l5935 1FBA  
                                          l5855 3A66                                            l5791 3716  
                                          l5783 36EE                                            l5847 2D40  
                                          l5839 2D08                                            l5863 3AE2  
                                          l5871 3698                                            l6911 07A8  
                                          l6903 0768                                            l6639 2AD8  
                                          l4895 37C2                                            l4887 37A8  
                                          l6671 2188                                            l6663 2158  
                                          l6655 212E                                            l6831 1850  
                                          l6823 1804                                            l6815 17C8  
                                          l4799 30C6                                            l6567 245A  
                                          l6559 241E                                            l6591 2F26  
                                          l6583 3356                                            l6575 32F6  
                                          l6495 2A4E                                            l6487 29EC  
                                          l6399 35B6                                            l6751 1196  
                                          l6743 1154                                            l6735 10D4  
                                          l6727 3B48                                            l6719 3B1E  
                                          l5881 3CA4                                            l5961 20CA  
                                          l5953 2082                                            l5945 202A  
                                          l5937 1FDA                                            l5857 3A80  
                                          l5785 3700                                            l5793 3718  
                                          l5777 36C2                                            l5849 2D6C  
                                          l5873 36AA                                            l6921 0838  
                                          l6905 0778                                            l6649 2B36  
                                          l4897 37C6                                            l4889 37AA  
                                          l6681 2208                                            l6665 215E  
                                          l6657 2142                                            l6673 218C  
                                          l6841 1876                                            l6825 1814  
                                          l6833 1856                                            l6817 17D4  
                                          l6809 179E                                            l6569 245E  
                                          l6593 2F32                                            l6585 335A  
                                          l6577 3314                                            l6497 2A52  
                                          l6489 2A0C                                            l6761 11F2  
                                          l6753 11A8                                            l6745 1168  
                                          l6737 1102                                            l6729 10BE  
                                          l5883 3CC0                                            l5891 1E32  
                                          l5963 20EA                                            l5955 20A2  
                                          l5947 2032                                            l5939 1FDE  
                                          l5787 3702                                            l5779 36C2  
                                          l5795 3E20                                            l5971 2700  
                                          l5859 3B8E                                            l5867 3662  
                                          l6931 0980                                            l6923 089A  
                                          l6907 0788                                            l6915 07B8  
                                          l4899 37CA                                            l6683 2234  
                                          l6691 2264                                            l6675 21C2  
                                          l6667 216A                                            l6851 18EC  
                                          l6843 187E                                            l6835 1868  
                                          l6827 1836                                            l6595 2F40  
                                          l6587 2F1A                                            l6579 3320  
                                          l6499 2A56                                            l6771 1266  
                                          l6763 1200                                            l6755 11B4  
                                          l6747 117C                                            l6739 1120  
                                          l5877 3BC6                                            l5893 1E52  
                                          l5957 20B4                                            l5949 2046  
                                          l5789 3712                                            l5797 2FC8  
                                          l5981 276A                                            l5973 2708  
                                          l6941 0A58                                            l6933 0990  
                                          l6925 08AA                                            l6909 0798  
                                          l6917 0816                                            l6685 225E  
                                          l6677 21DC                                            l6669 2176  
                                          l6853 1910                                            l6837 186C  
                                          l6845 18A0                                            l6829 183C  
                                          l6597 2F44                                            l6589 2F1A  
                                          l6781 12BC                                            l6765 122A  
                                          l6773 126C                                            l6757 11C8  
                                          l6749 1184                                            l5895 1E56  
                                          l5887 1E20                                            l5959 20BA  
                                          l5799 2FDA                                            l5983 278A  
                                          l5975 271C                                            l5967 26D6  
                                          l5991 2B60                                            l6695 27C6  
                                          l6951 0ADA                                            l6943 0A88  
                                          l6935 0A0A                                            l6927 090C  
                                          l6919 0824                                            l6679 21EC  
                                          l6855 1924                                            l6847 18B0  
                                          l6839 1870                                            l6863 194A  
                                          l6871 30FA                                            l6599 2F5A  
                                          l6791 1312                                            l6783 12CA  
                                          l6775 1290                                            l6767 1248  
                                          l6759 11DE                                            l5897 1E64  
                                          l5889 1E24                                            l5985 278C  
                                          l5977 272A                                            l5969 26E2  
                                          l5993 2B68                                            l6697 27C6  
                                          l6953 0AF2                                            l6945 0AA4  
                                          l6937 0A0E                                            l6929 091E  
                                          l6961 136C                                            l6857 1936  
                                          l6849 18CC                                            l6881 3166  
                                          l6873 310C                                            l6785 12DA  
                                          l6793 1318                                            l6777 129C  
                                          l6769 124E                                            l5899 1E84  
                                          l5987 279E                                            l5979 273C  
                                          l5995 2B7C                                            l6699 27DC  
                                          l6947 0ABE                                            l6939 0A30  
                                          l6891 070A                                            l6883 06B4  
                                          l6971 13E0                                            l6963 1390  
                                          l6859 1944                                            l6875 3118  
                                          l6867 30EC                                            l6795 133C  
                                          l6787 12F4                                            l6779 12A4  
                                          l5997 2B8A                                            l5989 2B42  
                                          l6949 0ACA                                            l6893 070E  
                                          l6885 06BE                                            l6981 1434  
                                          l6973 13E4                                            l6965 1394  
                                          l6877 3142                                            l6869 30EC  
                                          l6789 12FA                                            l6797 33F2  
                                          l5999 2BB8                                            l6895 0730  
                                          l6887 06E2                                            l6991 14D0  
                                          l6983 1458                                            l6975 1408  
                                          l6967 13B8                                            l6959 1352  
                                          l6879 3148                                            l6799 33F6  
                                          l6897 0738                                            l6889 06E6  
                                          l6985 1468                                            l6993 14D4  
                                          l6977 140C                                            l6969 13BC  
                                          l6899 0748                                            l6995 14FC  
                                          l6987 149A                                            l6979 1430  
                                          l6997 152C                                            l6989 14A6  
                                          l6999 1548                                            STR_1 FEC3  
                                          STR_2 FDCD                                            STR_3 FB9D  
                                          STR_4 FF54                                            STR_5 FE7E  
                                          STR_6 FB9E                                            STR_7 FD95  
                                          STR_8 FD01                                            STR_9 FE96  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            u4000 3D74  
                                          _LATD 000F86                                            u4001 3D6E  
                                          _LATE 000F87                                            u4010 3D76  
                                          u4020 3DB6                                            u4021 3DB0  
                                          u4030 3618                                            u4031 3614  
                                          u4040 3628                                            u4200 37BA  
                                          u4041 3624                                            u4201 37B6  
                                          u4050 3656                                            u4026 3DB8  
                                          u4051 3652                                            u4220 3950  
                                          u4221 394C                                            u5200 36E4  
                                          u6000 0E14                                            u5201 36E0  
                                          u6001 0E10                                            u5210 3712  
                                          u6010 0E3E                                            u4170 3D5C  
                                          u5211 370E                                            u6011 0E3A  
                                          u4171 3D56                                            u5220 2FDA  
                                          u5300 3B88                                            u6100 0FFA  
                                          u6020 0EA2                                            u4340 2902  
                                          u4180 3D5E                                            u5221 2FD6  
                                          u6101 0FF6                                            u6021 0E9E  
                                          u4341 28FE                                            u5230 2FEC  
                                          u5310 2CE6                                            u6110 1018  
                                          u6030 0EEC                                            u4350 2932  
                                          u4190 3788                                            u5231 2FE8  
                                          u5311 2CE2                                            u6111 1014  
                                          u6031 0EE6                                            u4351 292E  
                                          u4191 3784                                            u6200 1DD2  
                                          u5240 3014                                            u5320 2D08  
                                          u5400 3692                                            u6120 1032  
                                          u6040 0EEE                                            u4440 347E  
                                          u4360 2954                                            u7000 310C  
                                          u5241 3010                                            u5321 2D04  
                                          u5401 368C                                            u6121 102E  
                                          u4441 347A                                            u4361 2950  
                                          u7001 3108                                            u6210 1DE8  
                                          u5250 304A                                            u5330 2D5E  
                                          u5410 3694                                            u6130 104C  
                                          u6050 0F04                                            u4450 34B6  
                                          u4370 297E                                            u7010 3166  
                                          u6211 1DE4                                            u5251 3046  
                                          u5331 2D5A                                            u6131 1048  
                                          u6051 0F00                                            u4451 34B2  
                                          u4371 297A                                            u7011 3162  
                                          u6220 1DFA                                            u5500 1F1C  
                                          u5260 3852                                            u5340 2D6C  
                                          u5420 36AA                                            u6140 105A  
                                          u6060 0F38                                            u6300 0332  
                                          u4460 34D8                                            u7020 0838  
                                          u7100 198A                                            _PMD0 000EE1  
                                          u6221 1DF6                                            u5501 1F18  
                                          u5341 2D68                                            u5421 36A6  
                                          u6141 1056                                            u6061 0F32  
                                          u6301 032E                                            u4461 34D4  
                                          u7021 0834                                            u7101 1986  
                                          _PMD1 000EE2                                            u5430 3BF6  
                                          u5510 1F66                                            u5350 3A80  
                                          u5190 36D4                                            u5270 3862  
                                          u6150 1068                                            u6070 0F3A  
                                          u6310 0358                                            u6230 0150  
                                          u7030 08AA                                            u7110 19BA  
                                          _PMD2 000EE3                                            u5431 3BF0  
                                          u5511 1F62                                            u5351 3A7C  
                                          u5191 36D0                                            u5271 385E  
                                          u6151 1064                                            u6311 0354  
                                          u6231 014C                                            u7031 08A6  
                                          u7111 19B6                                            _PMD3 000EE4  
                                          u4720 38BA                                            u5440 3BF8  
                                          u6160 1CC0                                            u5520 1FBA  
                                          u5280 3A20                                            u5600 272A  
                                          u5360 3BBE                                            u6080 0F50  
                                          u6320 037E                                            u6240 0220  
                                          u6400 359C                                            u7040 091E  
                                          u7120 19E8                                            u7200 25A6  
                                          _PMD4 000EE5                                            u4721 38B6  
                                          u6161 1CBC                                            u5521 1FB6  
                                          u5281 3A1C                                            u5601 2726  
                                          u5361 3BB8                                            u6081 0F4C  
                                          u6321 037A                                            u6241 021C  
                                          u6401 3598                                            u7041 091A  
                                          u7121 19E4                                            u7201 25A2  
                                          _PMD5 000EE6                                            u6170 1CF8  
                                          u5450 1E32                                            u5530 1FEC  
                                          u5610 276A                                            u5370 3BC0  
                                          u5290 3B86                                            u6090 0FB8  
                                          u6330 0424                                            u6250 022E  
                                          u7050 0990                                            u6410 39D0  
                                          u6171 1CF4                                            u5451 1E2E  
                                          u5531 1FE8                                            u5267 3848  
                                          u5611 2766                                            u5291 3B80  
                                          u6331 0420                                            u6251 022A  
                                          u7051 098C                                            u6411 39CC  
                                          u7131 19F2                                            u6180 1D14  
                                          u5460 1E64                                            u5540 202A  
                                          u5700 0B80                                            u5620 2B60  
                                          u5380 3B16                                            u6340 04A0  
                                          u6260 0256                                            u7060 0A58  
                                          u6500 2A3A                                            u7140 1A4A  
                                          u6181 1D10                                            u5461 1E60  
                                          u5541 2026                                            u5701 0B7C  
                                          u5621 2B5C                                            u5381 3B10  
                                          u6341 049C                                            u6261 0252  
                                          u7061 0A54                                            u6501 2A36  
                                          u7141 1A46                                            u6190 1DD0  
                                          u5550 2054                                            u5710 0B9C  
                                          u5630 2B8A                                            u5390 3B18  
                                          u6350 0548                                            u6270 029A  
                                          u7070 0ADA                                            u6430 3D14  
                                          u6510 2A6E                                            u6191 1DCA  
                                          u5471 1E8E                                            u5551 2050  
                                          u5711 0B98                                            u5631 2B86  
                                          u6095 0FA6                                            u6351 0544  
                                          u6271 0296                                            u7071 0AD6  
                                          u6431 3D0E                                            u6511 2A6A  
                                          u7151 1A54                                            u3960 3D8C  
                                          u5480 1EB2                                            u5560 2082  
                                          u5800 0D82                                            u5720 0BCA  
                                          u5640 2BB8                                            u6360 056E  
                                          u6280 0318                                            u7080 14FC  
                                          u6600 24AC                                            u6440 3D16  
                                          u6520 2284                                            u7160 1AAC  
                                          u3961 3D86                                            u5481 1EAE  
                                          u5561 207E                                            u5801 0D7E  
                                          u5721 0BC6                                            u5641 2BB4  
                                          u6361 056A                                            u6281 0312  
                                          u7081 14F8                                            u6601 24A8  
                                          u6425 39DA                                            u6521 2280  
                                          u7217 125A                                            u7161 1AA8  
                                          u3970 3D8E                                            u5650 37E6  
                                          u5490 1EDC                                            u5570 20CA  
                                          u5810 0D9A                                            u5730 0BD8  
                                          u6370 0632                                            u6290 031A  
                                          u7090 157E                                            u6426 39DC  
                                          u6610 3372                                            u6450 3730  
                                          u6530 2298                                            u5651 37E2  
                                          u5491 1ED8                                            u5571 20C6  
                                          u5811 0D96                                            u5731 0BD4  
                                          u6371 062E                                            u7091 157A  
                                          u6611 336E                                            u6451 372C  
                                          u6531 2294                                            u7227 12B0  
                                          u7171 1AB6                                            u4940 38FC  
                                          u3980 3DA2                                            u5660 3814  
                                          u5740 0D02                                            u5900 1C42  
                                          u6700 21C2                                            u6460 3762  
                                          u6380 35F0                                            u6540 22B6  
                                          u7180 24F2                                            u4941 38F8  
                                          u3981 3D9C                                            u5661 3810  
                                          u5741 0CFE                                            u5901 1C3E  
                                          u5821 1AF6                                            u5581 26DC  
                                          u6701 21BE                                            u6621 2F20  
                                          u6461 375E                                            u6541 22B2  
                                          u7237 1306                                            u7181 24EE  
                                          u5750 0D20                                            u5670 0B38  
                                          u5910 1C7C                                            u5830 1B18  
                                          u5590 2700                                            u6630 3540  
                                          u6710 21EC                                            u6470 29BA  
                                          u6390 3602                                            u6550 22EE  
                                          u7190 2504                                            u5751 0D1C  
                                          u5671 0B32                                            u5911 1C78  
                                          u5831 1B14                                            u5591 26FC  
                                          u6631 353C                                            u6711 21E8  
                                          u7247 23DA                                            u6471 29B6  
                                          u6391 35FE                                            u6551 22EA  
                                          u7191 2500                                            u5760 0D3A  
                                          u5680 0B3A                                            u5840 1B4A  
                                          u5920 15AC                                            u6640 2AC8  
                                          u6720 2234                                            u6480 29DC  
                                          u6560 233E                                            u6800 3B30  
                                          u5761 0D36                                            u5841 1B46  
                                          u5921 15A8                                            u6641 2AC4  
                                          u6721 2230                                            u7257 242C  
                                          u6481 29D8                                            u6561 233A  
                                          u6801 3B2C                                            u3986 3DA4  
                                          u5770 0D54                                            u5690 0B50  
                                          u5850 1B68                                            u5930 15C8  
                                          u6650 2AD8                                            u6730 225E  
                                          u6490 2A24                                            u6570 2360  
                                          u6810 1154                                            u5771 0D50  
                                          u5691 0B4C                                            u5851 1B64  
                                          u5931 15C4                                            u6651 2AD4  
                                          u6731 225A                                            u6491 2A20  
                                          u6387 35E6                                            u6571 235C  
                                          u6811 1150                                            u5780 0D62  
                                          u5860 1B92                                            u5940 1714  
                                          u6740 27F0                                            u6660 2B0E  
                                          u6900 17C8                                            u6580 23F8  
                                          u6820 117C                                            u5781 0D5E  
                                          u5861 1B8E                                            u5941 1710  
                                          u6741 27EC                                            u6661 2B0A  
                                          u6901 17C4                                            u6581 23F4  
                                          u6821 1178                                            u5790 0D74  
                                          u5870 1BCC                                            u5950 1732  
                                          u6750 2812                                            u6670 2B32  
                                          u6910 17E8                                            u6590 244A  
                                          u6830 1196                                            u5791 0D70  
                                          u5871 1BC8                                            u5951 172E  
                                          u6751 280E                                            u6671 2B2E  
                                          u6911 17E4                                            u6591 2446  
                                          u6831 1192                                            u5880 1BFA  
                                          u5960 174C                                            u6760 2856  
                                          u6680 2158                                            u6920 1814  
                                          u6840 11A8                                            u5961 1748  
                                          u6761 2852                                            u6681 2154  
                                          u6921 1810                                            u6841 11A4  
                                          u5890 1C34                                            u5970 1766  
                                          u6770 287A                                            u6690 2188  
                                          u6930 1850                                            u6850 1290  
                                          u5891 1C30                                            u5971 1762  
                                          u6771 2876                                            u6691 2184  
                                          u6931 184C                                            u6851 128C  
                                          u5980 1774                                            u6780 288E  
                                          u6940 1868                                            u6860 133C  
                                          u5981 1770                                            u6781 288A  
                                          u6941 1864                                            u6861 1338  
                                          u5990 0DF8                                            u6790 28B0  
                                          u6950 188E                                            u6870 3428  
                                          u5887 1BF0                                            u5991 0DF4  
                                          u6791 28AC                                            u6951 1888  
                                          u6871 3424                                            u6960 18B0  
                                          u6880 3440                                            u6961 18AC  
                                          u6881 343C                                            u6970 18EC  
                                          u6890 17B6                                            u6971 18E8  
                                          u6891 17B2                                            u6980 18FC  
                                          u6956 1890                                            u6981 18F6  
                                          u6990 1924                                            u6991 1920  
                                          u6986 18FE                             ValidateCmd@ConfName 0500  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 3604                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 36C0                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 01B4                                            _atoi 1C86  
                                          _main 24BE                                            _dtoa 0B08  
                                 ?_EUSART1_Read 0001                                            _prec 00A5  
                                 ?_EUSART2_Read 0001                                            _nout 01B1  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 1AEC                                            btemp 005B  
                                          _utoa 159C                                            _xtoa 0DE8  
                        __size_of_Initalisation 0002                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 399A                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                     __size_of_DATAEE_WriteByte 0044                              SerIni@readDataEven 000E  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 3D48  
                         _eusart1RxStatusBuffer 0380                                 __end_of___aodiv 1FA8  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 210C  
                                         STR_10 FB9A                                           STR_11 FC56  
                                         STR_12 FFA1                                           STR_20 FDB1  
                                         STR_21 FDB1                                           STR_13 FFC8  
                                         STR_14 FFD3                                           STR_30 FED8  
                                         STR_22 FE1D                                           STR_23 FB9A  
                                         STR_15 FFAF                                           STR_31 FEAD  
                                         STR_40 FB9A                                           STR_16 FF83  
                                         STR_24 FE66                                           STR_32 FC08  
                                         STR_33 FFBC                                           STR_17 FF74  
                                         STR_25 FF64                                           STR_41 FF44  
                                 __CFG_WDTE$OFF 000000                                           STR_34 FFDE  
                                         STR_18 FF92                                           STR_42 FF33  
                                         STR_50 FDE9                                           STR_26 FCE0  
                                         STR_51 FF22                                           STR_19 FF10  
                                         STR_27 FE4E                                           STR_35 FD79  
                                         STR_43 FB31                                           STR_60 FFFD  
                                         STR_28 FEFE                                           STR_52 FE04  
                                         STR_44 FD3F                                           STR_36 FBD4  
                                         STR_61 FFE7                                           STR_45 FEEB  
                                         STR_53 FE36                                           STR_37 FB68  
                                         STR_29 FAF4                                           STR_62 FFE7  
                                         STR_54 FD21                                           STR_38 FC9D  
                                         STR_46 FAB1                                           STR_55 FB9D  
                                         STR_63 FFF4                                           STR_39 FC7A  
                                         STR_47 FC32                                           STR_48 FB9D  
                                         STR_64 FFF4                                           STR_56 FD5C  
                                         STR_65 FFF9                                           STR_57 FFEE  
                                         STR_49 FCBF                                           STR_58 FFEE  
                                         STR_66 FFF9                                ?_ClearModbusData 0001  
                                         STR_59 FFFD                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 27C6  
                                         ?_xtoa 0022                                 __end_of___lomod 2C12  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 3E4C  
                                         i2l333 3994                                           i2l350 3E56  
                                         i2l343 2E58                                           i2l159 0112  
                                         i2l336 3998                                           i2l353 3E2E  
                                         i2l347 3C28                                           i2l356 3E40  
                                         i2l480 3A64                                           i2l491 3C54  
                                         i2l477 3A60                                           i2l494 3E58  
                                         i2l487 2F18                                           i2l497 3E46  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 00B0  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 3A22                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 3D18                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                                           _fputc 2FC8  
                               __end_of_isalpha 3B1E                                           _fputs 39DE  
                               __end_of_isdigit 3BFE                        SaveCardDat@dataeeAddrWrk 009D  
                               __end_of_memmove 2A70                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00A3  
                                         _putch 3E1E                        __size_of_ClearEEAddRange 007E  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 3B8E                                 __end_of_isspace 3820  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 3BC6                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 3908  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00AD                                   ??_ModbusError 008F  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 36C0                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 3E5A  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 3E58  
                   __size_of_EUSART2_is_tx_done 0016                                   ??_SaveCardDat 0097  
                                checkCRC@crcLow 0092           __end_of_EUSART2_SetTxInterruptHandler 3DC4  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 3DBA  
                                  _toupper$2146 0011                                 __initialization 2C12  
                                  __end_of_atoi 1E20                      __end_of_EUSART1_Initialize 32F6  
                                  __end_of_main 25CA                                    __end_of_dtoa 0DE8  
                     __size_of_InitialiseString 00AE                                    __end_of_stoa 1C86  
                                  __end_of_utoa 179E                                    __end_of_xtoa 10BE  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 194E  
                                        ??_atoi 000E                                          ??_main 00A1  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 1352                                      _ModbusFC03 06B4  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 3B56  
                                 _Initalisation 3E54                             SaveCardDat@NumBytes 0095  
           __end_of_EUSART2_DefaultErrorHandler 3E42                     _EUSART2_DefaultErrorHandler 3E3C  
                                    _ModbusData 0200                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                            SaveCardDat@MBAddress 0091  
                    __end_of_EUSART2_Initialize 33F2                        _eusart2TxBufferRemaining 00BC  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                     InitialiseString@SerialNum 008B                                ClearEEAddRange@i 0055  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                            __size_of_ReadRX232 013A                                  __CFG_WDTCCS$SC 000000  
                                        i2l5201 397A                                          i2l5211 2DBA  
                                        i2l5203 398A                                          i2l5221 2E1A  
                                        i2l5213 2DCA                                          i2l5205 398E  
                                        i2l5231 3A44                                          i2l5223 2E36  
                                        i2l5215 2DE2                                          i2l5207 2D9A  
                                        i2l5241 2E6A                                          i2l5233 3A46  
                                        i2l5225 2E54                                          i2l5217 2DF2  
                                        i2l5209 2DAA                                          i2l5251 2EC0  
                                        i2l5243 2E78                                          i2l5235 3A56  
                                        i2l5227 3A22                                          i2l5219 2E02  
                                        i2l5253 2EDA                                          i2l5245 2E88  
                                        i2l5237 3A5A                                          i2l5229 3A34  
                                        i2l5255 2EF6                                          i2l5247 2EA2  
                                        i2l5239 2E5A                                          i2l5257 2F14  
                                        i2l5249 2EB0                                          i2l5601 00AC  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        i2l4651 3C20                                          i2l5195 3952  
                                        i2l5603 00BA                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          i2l4653 3C24  
                                        i2l4645 3BFE                                          i2l5197 3964  
                                        i2l5605 00E6                                          _INLVLE 000F2A  
                                        i2l4903 3E42                                          i2l4647 3C0E  
                                        i2l5199 3976                                          i2l5607 00F4  
                                        i2l4905 3E48                                          i2l4649 3C10  
                                        i2l4691 3C2A                                          i2l4693 3C3A  
                                        i2l4695 3C3C                                          i2l5591 0028  
                                        i2l4697 3C4C                                          i2l4873 3E28  
                                        i2l5593 0038                                          i2l4699 3C50  
                                        i2l4875 3E3C                                          i2l5595 0046  
                                        i2l5597 0072                                          i2l5589 001A  
                                        _TABLAT 000FF5                                          i2l5599 0080  
                                 ??_ValidateCmd 0057                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 006B                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 2268  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 0093                                     ModbusFC10@j 0095  
                                   ModbusFC03@i 0091                                          _RXMode 3E30  
                                        _TXMode 3E36                                          _RXStat 00AF  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00E2  
                                        _ByteHi 00A7                                          _ByteLo 00BD  
                            _UART1_Write_string 3466                                  __CFG_XINST$OFF 000000  
                                        _SerIni 23A2                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 008B  
                                    _PrintMB400 34DA                             __end_of_ModbusError 26D6  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 3CA4                                  __CFG_STVREN$ON 000000  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           SaveCardDat@readData 009B                             __end_of_SaveCardDat 1352  
                                        clear_0 2C90                                          clear_1 2C9C  
                                        clear_2 2CA8                                          clear_3 2CB4  
                                        clear_4 2CC0                                          _rxData 0400  
                   _EUSART2_FramingErrorHandler 01EE                                          _printf 3C56  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                ?_Initalisation 0001                                          _strcat 3C7E  
                                        dtoa@fp 0022                         __end_of_DATAEE_ReadByte 3D30  
                                        _strcmp 33F2                                          _strcpy 35A6  
                                        _strlen 3820                                   _ExpectedBytes 013D  
                                        fputc@c 0007                                  _PMD_Initialize 3CCA  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst FAB0                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 3952                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 35A6  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0464                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0264                                 _eusart1TxBuffer 01A1  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 3CE6  
                       __size_of_PrintModRespon 00EC                                 _eusart2TxBuffer 0284  
                                    __accesstop 0060                         __end_of__initialization 2CCE  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 0090  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 3C56  
                           __end_of_ValidateCmd 1AEC                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 3E52                                    __pidataBANK1 3174  
                                  __pidataBANK2 3AA6                                    __pidataBANK3 31F5  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 399A  
                                 __end_of_fputc 305E                                   __end_of_fputs 3A22  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 3E28  
                             __end_of_ReadRX232 23A2                          __end_of_PMD_Initialize 3CE6  
                          __end_of_EUSART1_Read 37CE                            __end_of_EUSART2_Read 3776  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 2F1A  
                          ModbusError@ErrorCode 008D                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 3D00                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 00B5                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 00B3                                   _eusart2TxHead 00BA  
                                    __pbssBANK0 00A3                                      __pbssBANK1 0181  
                                    __pbssBANK2 0200                                      __pbssBANK3 0380  
                                    __pbssBANK4 0400                                   _eusart2RxTail 00B8  
                                 _eusart1TxTail 00B4               _EUSART1_TxDefaultInterruptHandler 01F2  
                                 _eusart2TxTail 00B9                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 3174                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 25CA  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                                         ?_SerIni 0007  
               __end_of_EUSART1_SetErrorHandler 3E1E                                     _SaveCardDat 10BE  
                                   ?_PrintMB400 0001                                _InitialiseString 2F1A  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                               ??_Initalisation 0005                                         _MB300xx 0340  
                                       _MB301xx 0100                                         _MB302xx 013F  
                                       _MB303xx 0118                                         _MB304xx 010E  
                                       _MB400xx 0300                                         _MB305xx 012F  
                                       _MB306xx 0135                                         _MB307xx 0129  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 3870                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 3E14  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 3E0A  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 0181  
                                     ?_checkCRC 0001                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 2E5A  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                             ??_ClearModbusRespon 0005  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                   PrintMB400@i 0055                            DATAEE_WriteByte@bAdd 0005  
                                   _ValidateCmd 194E                                         _Command 01D4  
                                       SerIni@i 000F                                         SerIni@j 0011  
                             generateCRC@HiOrLo 0007                                      ??_ModbusRx 0056  
                                       _ByteNum 00AB                             __size_of_ModbusFC10 024A  
                           __size_of_ModbusFC03 0454                                 __size_of_RXMode 0006  
                               __size_of_TXMode 0006                                         __Hparam 0000  
                                    ??_TogDebug 0055                                         __Lparam 0000  
                               __size_of_SerIni 011C                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 1E20                                         ___aomod 1FA8  
                             generateCRC@crcLow 000C                                 __size_of___wmul 0026  
                                       ___lodiv 26D6                                         ___lomod 2B42  
                                     ?_vfprintf 0077                       __end_of_ClearModbusRespon 38BC  
                           _EUSART1_is_rx_ready 3D48                          InitialiseString@F10709 02A4  
                    __end_of_EUSART1_is_tx_done 3DBA                                         __pcinit 2C12  
               __end_of_EUSART2_SetErrorHandler 3DEC                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 3D60                                         __ptext0 24BE  
                                       __ptext1 194E                                         __ptext2 33F2  
                                       __ptext3 3B1E                                         __ptext4 10BE  
                                       __ptext5 2268                                         __ptext6 3C7E  
                                       __ptext7 35A6                                         __ptext8 2994  
                                       __ptext9 3D00                                 __size_of_printf 0028  
                               __size_of_strcat 0026                                 __size_of_strcmp 0074  
                               __size_of_strcpy 005E                                 __size_of_strlen 0050  
                             ReadRX232@NumChars 008B                                      ??_checkCRC 008B  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 3E30  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 3E28  
                         _OSCILLATOR_Initialize 3D30                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 3AE2                                         _isdigit 3BC6  
                                       _memmove 2994                              _EUSART1_Initialize 3276  
                                       _islower 3B56                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 37CE                                     _PrintModbus 30EC  
                                       _isupper 3B8E                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0068  
                                       _toupper 3662                            end_of_initialization 2CCE  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                _PrintModRespon 27C6                      __end_of_EUSART2_is_tx_done 3DA6  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01E6                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 3E00          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 3DF6                                    SaveCardDat@i 009F  
                            _EUSART2_Initialize 3374                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                             SerIni@dataeeAddrWrk 000B  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                                       strcmp@l 0005                                         strcmp@r 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strcpy@d 0011                                         strlen@a 0007  
                           _EUSART2_is_rx_ready 3D00                                         strcpy@s 000F  
                                       strlen@s 0005                               ValidateCmd@F10731 02D7  
                             ValidateCmd@F10734 02C3                               ValidateCmd@F10737 02AF  
                           _EUSART2_is_tx_ready 3D78                        ValidateCmd@ConfName_1453 0528  
                      ValidateCmd@ConfName_1449 0514                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                                 _ClearEEAddRange 32F6  
                        __end_of_PrintModRespon 28B2                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                        __end_of_DATAEE_WriteByte 39DE  
                          ??_EUSART2_Initialize 0007                            ?_EUSART2_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                          ?_EUSART2_is_tx_ready 0001                                    _EUSART1_Read 3776  
                                  _EUSART2_Read 371E            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 3E36                                 SerIni@SerialNum 0007  
                                __end_of_TXMode 3E3C                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 3C2A  
                                __end_of_SerIni 24BE                               SerIni@readDataOdd 000D  
                  __end_of_INTERRUPT_Initialize 3E52                      __size_of_ClearModbusRespon 004C  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 3CCA                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008D                                    ??_ModbusFC03 008D  
                                __end_of_printf 3C7E                                  __end_of_strcat 3CA4  
                                __end_of_strcmp 3466                                  __end_of_strcpy 3604  
                                     _ReadRX232 2268                                  __end_of_strlen 3870  
                           start_initialization 2C12                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 3AA6                                     __end_of_pad 2D9A  
                      __end_of_InitialiseString 2FC8   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 3662                     __size_of_UART1_Write_string 0074  
                         __end_of_EUSART2_Write 371E                           ??_EUSART2_is_tx_ready 0005  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 008D  
              __size_of_EUSART2_SetErrorHandler 000A                             DATAEE_ReadByte@bAdd 0005  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 3DD8         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 3DCE                              __end_of_ModbusFC10 159C  
                            __end_of_ModbusFC03 0B08                                    ?_SaveCardDat 008F  
                                      ??_SerIni 0009                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                _SaveCardDat$2436 0099  
                             __size_of_ModbusRx 01B0                                     vfprintf@fmt 0079  
                           __end_of_generateCRC 2994                                    ??_PrintMB400 0055  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                             __size_of_TogDebug 0038                           _EUSART1_RxDataHandler 3C2A  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00BD  
                                   __pdataBANK1 0100                                     __pdataBANK2 02AF  
                                   __pdataBANK3 0300                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00B2                         __end_of_ClearEEAddRange 3374  
                                _eusart2RxCount 00B7                                      ?_ReadRX232 008B  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 01F0  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 0060  
                                 __pcstackBANK5 0500                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 015C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 2A70                             EUSART2_Write@txData 0005  
                            __end_of_PrintMB400 3542                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                                  ?_ValidateCmd 0001                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$2032 0014  
                                     _atoi$2033 0018                                       _atoi$2034 0016  
                                     __pnvBANK0 00BB                                       __pnvBANK1 01E4  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 305E  
                                     _dtoa$1528 0034                                       __pintcode 0008  
                                 __pmediumconst FAB0                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 01F6                    ??_INTERRUPT_InterruptManager 0001  
                         __end_of_Initalisation 3E56                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0098  
                                     checkCRC@j 0094                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 3E48  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3E42  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01E4  
                               SaveCardDat@Conf 009C                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008F                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 2B42                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 3E14                              _EUSART1_is_tx_done 3DA6  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 3E4E  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 28B2  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 013B  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u406_40 3C4C  
                                      i2u510_40 00AC                                        _MBResCnt 00A9  
                                      i2u406_41 3C48                                        i2u510_41 00A8  
                                      i2u511_40 00BA                                        i2u503_40 0028  
                                      i2u511_41 00B6                                        i2u503_41 0024  
                                      i2u504_40 0038                                        i2u504_41 0034  
                                      i2u513_40 00E6                                        i2u512_48 00C0  
                                      i2u505_40 0046                                        i2u513_41 00E2  
                                      i2u512_49 00D4                                        i2u505_41 0042  
                                      i2u514_40 00F4                                        i2u514_41 00F0  
                                      i2u507_40 0072                                        i2u506_48 004C  
                                      i2u507_41 006E                                        i2u506_49 0060  
                                      i2u460_40 2DF2                                        i2u515_48 00FA  
                                      i2u508_40 0080                                        i2u460_41 2DEE  
                                      i2u515_49 010E                                        i2u508_41 007C  
                                      _PIR3bits 000ECD                                        i2u470_40 2EF6  
                                      i2u462_40 2E36                                        i2u461_48 2E08  
                                      i2u509_48 0086                                        i2u470_41 2EF2  
                                      i2u462_41 2E32                                        i2u461_49 2E1A  
                                      i2u509_49 009A                                        i2u471_48 2EFC  
                                      i2u464_40 3A34                                        i2u463_48 2E3C  
                                      i2u456_40 3964                                        i2u471_49 2F10  
                                      i2u464_41 3A30                                        i2u463_49 2E50  
                                      i2u456_41 3960                                        i2u465_40 3A56  
                                      i2u457_40 398A                                        i2u465_41 3A52  
                                      i2u457_41 3986                                        i2u466_40 2E78  
                                      i2u458_40 2DBA                                        i2u466_41 2E74  
                                      i2u458_41 2DB6                                        i2u468_40 2EB0  
                                      i2u467_48 2E8E                                        i2u459_48 2DD0  
                                      i2u468_41 2EAC                                        i2u467_49 2EA2  
                                      i2u459_49 2DE2                                        _PIR7bits 000ED1  
                                      i2u469_48 2EC6                                        i2u469_49 2EDA  
                                      i2u399_40 3C20                                        i2u399_41 3C1C  
                                      _MBRespon 0141                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 3D90                                       _vfpfcnvrt 012A  
                                     _xtoa$1557 0035                                       _xtoa$1558 0037  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 008B                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0093  
                                   checkCRC@crc 0096                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2059 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 2C26                                       copy_data1 2C46  
                                     copy_data2 2C66                              ModbusFC10@TempData 0091  
                         ?_INTERRUPT_Initialize 0001                               ?_DATAEE_WriteByte 0005  
                       _EUSART2_SetErrorHandler 3DE2                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 01EC                              ??_DATAEE_WriteByte 0008  
                          ??_EUSART2_is_tx_done 0005                                        _ModbusRx 179E  
                            generateCRC@MessCnt 0005           __end_of_EUSART1_SetTxInterruptHandler 3DF6  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 3DEC  
                                      __Hrparam 0000                                        _TogDebug 3B1E  
         __end_of_EUSART2_SetRxInterruptHandler 3DCE          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 3DC4                            __size_of_ModbusError 010C  
                                    vfprintf@ap 007B                                        __Lrparam 0000  
                                    vfprintf@fp 0077                              __CFG_BOREN$SBORDIS 000000  
                          __size_of_SaveCardDat 0294                         ??_OSCILLATOR_Initialize 0005  
                                     memmove@d1 0009                                       memmove@s1 000B  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                            generateCRC@crcHigh 000A                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 0080  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                 ReadRX232@F10713 0139  
                     ??_EUSART1_SetErrorHandler 0007                                        _checkCRC 210C  
           __end_of_EUSART1_DefaultErrorHandler 3E4E                     _EUSART1_DefaultErrorHandler 3E48  
                              ??_PrintModRespon 0055                     __end_of_EUSART1_is_rx_ready 3D60  
                                    strcat@dest 0013                            _EUSART2_ErrorHandler 01EA  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 3D78                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 38BC  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 371E                                        __ptext11 32F6  
                                      __ptext20 3D30                                        __ptext12 399A  
                                      __ptext21 3E4E                                        __ptext13 2F1A  
                                      __ptext30 3DF6                                        __ptext22 3374  
                                      __ptext14 23A2                                        __ptext31 3E00  
                                      __ptext23 3DBA                                        __ptext15 3D18  
                                      __ptext40 3908                                        __ptext32 3E0A  
                                      __ptext24 3DC4                                        __ptext16 3E54  
                                      __ptext41 2A70                                        __ptext33 3E14  
                                      __ptext25 3DCE                                        __ptext17 3CE6  
                                      __ptext50 3DA6                                        __ptext42 1352  
                                      __ptext34 30EC                                        __ptext26 3DD8  
                                      __ptext18 3CCA                                        __ptext51 3604  
                                      __ptext43 34DA                                        __ptext35 179E  
                                      __ptext27 3DE2                                        __ptext19 305E  
                                      __ptext60 3AE2                                        __ptext52 27C6  
                                      __ptext44 06B4                                        __ptext36 210C  
                                      __ptext28 3276                                        __ptext61 159C  
                                      __ptext53 3C56                                        __ptext45 25CA  
                                      __ptext37 3E30                                        __ptext29 3DEC  
                                      __ptext70 3E1E                                        __ptext62 2B42  
                                      __ptext54 3542                                        __ptext46 28B2  
                                      __ptext38 3D48                                        __ptext71 36C0  
                                      __ptext63 26D6                                        __ptext55 012A  
                                      __ptext47 3466                                        __ptext39 3776  
                                      __ptext80 3D90                                        __ptext72 3A66  
                                      __ptext64 1AEC                                        __ptext56 0DE8  
                                      __ptext48 3E36                                        __ptext81 3870  
                                      __ptext73 1FA8                                        __ptext65 0B08  
                                      __ptext57 3662                                        __ptext49 3D60  
                                      __ptext90 3A22                                        __ptext82 38BC  
                                      __ptext74 1E20                                        __ptext66 2CD8  
                                      __ptext58 3B56                                        __ptext91 2E5A  
                                      __ptext75 1C86                                        __ptext67 3820  
                                      __ptext59 3B8E                                        __ptext92 3E42  
                                      __ptext84 3952                                        __ptext76 37CE  
                                      __ptext68 39DE                                        __ptext93 3E58  
                                      __ptext85 2D9A                                        __ptext77 3BC6  
                                      __ptext69 2FC8                                        __ptext94 3E48  
                                      __ptext86 3E28                                        __ptext78 3CA4  
                                      __ptext95 3C2A                                        __ptext87 3E56  
                                      __ptext79 3D78                                        __ptext96 0000  
                                      __ptext88 3E3C                                        __ptext89 3BFE  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 008D                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 010C  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 3E58  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 3E56  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019E  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008B  
                                  PrintModbus@i 008B            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 0122  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                 PrintModRespon@i 008B  
                                      _rxStatus 01B3                                        int$flags 005B  
                                      _vfprintf 3542              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 3BFE  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01E8  
                           _EUSART1_Receive_ISR 2E5A                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                                _vfpfcnvrt$1572 006D                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 3D18                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 3D90                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 34DA                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0088  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 3E0A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 3E00                                       strcpy@src 000B  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 3A66  
                                      printf@ap 0089  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 00B1                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 2D9A                         __end_of_ClearModbusData 3908  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 30EC  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00B6                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 01F4                             __end_of_ClearRxBuff 3952  
