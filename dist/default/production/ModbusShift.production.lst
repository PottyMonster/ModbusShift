

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 01 17:59:16 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F46K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataBANK1
   114  002908                     __pidataBANK1:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _data1
   118  002908  11                 	db	17
   119  002909  03                 	db	3
   120  00290A  06                 	db	6
   121  00290B  AE                 	db	174
   122  00290C  41                 	db	65
   123  00290D  56                 	db	86
   124  00290E  52                 	db	82
   125  00290F  43                 	db	67
   126  002910  40                 	db	64
   127  002911  49                 	db	73
   128  002912  AD                 	db	173
   129                           
   130                           	psect	nvBANK0
   131  0000E6                     __pnvBANK0:
   132                           	opt callstack 0
   133  0000E6                     _EUSART1_ErrorHandler:
   134                           	opt callstack 0
   135  0000E6                     	ds	2
   136  0000E8                     _EUSART1_OverrunErrorHandler:
   137                           	opt callstack 0
   138  0000E8                     	ds	2
   139  0000EA                     _EUSART1_FramingErrorHandler:
   140                           	opt callstack 0
   141  0000EA                     	ds	2
   142  0000EC                     _EUSART2_ErrorHandler:
   143                           	opt callstack 0
   144  0000EC                     	ds	2
   145  0000EE                     _EUSART2_OverrunErrorHandler:
   146                           	opt callstack 0
   147  0000EE                     	ds	2
   148  0000F0                     _EUSART2_FramingErrorHandler:
   149                           	opt callstack 0
   150  0000F0                     	ds	2
   151  0000F2                     _EUSART1_RxDefaultInterruptHandler:
   152                           	opt callstack 0
   153  0000F2                     	ds	2
   154  0000F4                     _EUSART1_TxDefaultInterruptHandler:
   155                           	opt callstack 0
   156  0000F4                     	ds	2
   157  0000F6                     _EUSART2_RxDefaultInterruptHandler:
   158                           	opt callstack 0
   159  0000F6                     	ds	2
   160  0000F8                     _EUSART2_TxDefaultInterruptHandler:
   161                           	opt callstack 0
   162  0000F8                     	ds	2
   163  0000FA                     _eusart1TxBufferRemaining:
   164                           	opt callstack 0
   165  0000FA                     	ds	1
   166  0000FB                     _eusart2TxBufferRemaining:
   167                           	opt callstack 0
   168  0000FB                     	ds	1
   169  0000                     _RC2REG	set	3737
   170  0000                     _RC2STAbits	set	3741
   171  0000                     _TX2REG	set	3738
   172  0000                     _TX2STAbits	set	3742
   173  0000                     _SP2BRGH	set	3740
   174  0000                     _SP2BRGL	set	3739
   175  0000                     _TX2STA	set	3742
   176  0000                     _RC2STA	set	3741
   177  0000                     _BAUD2CON	set	3743
   178  0000                     _PIR7bits	set	3793
   179  0000                     _PIR3bits	set	3789
   180  0000                     _PIE3bits	set	3781
   181  0000                     _PMD5	set	3814
   182  0000                     _PMD4	set	3813
   183  0000                     _PMD3	set	3812
   184  0000                     _PMD2	set	3811
   185  0000                     _PMD1	set	3810
   186  0000                     _PMD0	set	3809
   187  0000                     _OSCTUNE	set	3805
   188  0000                     _OSCFRQ	set	3806
   189  0000                     _OSCEN	set	3804
   190  0000                     _OSCCON3	set	3802
   191  0000                     _OSCCON1	set	3800
   192  0000                     _RX2PPS	set	3725
   193  0000                     _RC6PPS	set	3837
   194  0000                     _RB6PPS	set	3829
   195  0000                     _RX1PPS	set	3765
   196  0000                     _INLVLE	set	3882
   197  0000                     _INLVLD	set	3874
   198  0000                     _INLVLC	set	3869
   199  0000                     _INLVLB	set	3861
   200  0000                     _INLVLA	set	3853
   201  0000                     _SLRCONE	set	3883
   202  0000                     _SLRCOND	set	3875
   203  0000                     _SLRCONC	set	3870
   204  0000                     _SLRCONB	set	3862
   205  0000                     _SLRCONA	set	3854
   206  0000                     _ODCOND	set	3876
   207  0000                     _ODCONC	set	3871
   208  0000                     _ODCONB	set	3863
   209  0000                     _ODCONA	set	3855
   210  0000                     _ODCONE	set	3884
   211  0000                     _WPUC	set	3872
   212  0000                     _WPUA	set	3856
   213  0000                     _WPUB	set	3864
   214  0000                     _WPUE	set	3885
   215  0000                     _WPUD	set	3877
   216  0000                     _ANSELA	set	3857
   217  0000                     _ANSELE	set	3886
   218  0000                     _ANSELB	set	3865
   219  0000                     _ANSELC	set	3873
   220  0000                     _ANSELD	set	3878
   221  0000                     _LATAbits	set	3971
   222  0000                     _LATDbits	set	3974
   223  0000                     _RC1REG	set	3993
   224  0000                     _RC1STAbits	set	3997
   225  0000                     _TX1REG	set	3994
   226  0000                     _TX1STAbits	set	3998
   227  0000                     _SP1BRGH	set	3996
   228  0000                     _SP1BRGL	set	3995
   229  0000                     _TX1STA	set	3998
   230  0000                     _RC1STA	set	3997
   231  0000                     _BAUD1CON	set	3999
   232  0000                     _NVMDAT	set	3968
   233  0000                     _NVMADRL	set	3966
   234  0000                     _NVMADRH	set	3967
   235  0000                     _NVMCON2	set	3970
   236  0000                     _TABLAT	set	4085
   237  0000                     _TBLPTRL	set	4086
   238  0000                     _TBLPTRH	set	4087
   239  0000                     _TBLPTRU	set	4088
   240  0000                     _NVMCON1bits	set	3969
   241  0000                     _INTCONbits	set	4082
   242  0000                     _TRISD	set	3979
   243  0000                     _TRISC	set	3978
   244  0000                     _TRISB	set	3977
   245  0000                     _TRISA	set	3976
   246  0000                     _TRISE	set	3980
   247  0000                     _LATC	set	3973
   248  0000                     _LATB	set	3972
   249  0000                     _LATA	set	3971
   250  0000                     _LATD	set	3974
   251  0000                     _LATE	set	3975
   252                           
   253                           	psect	smallconst
   254  000F00                     __psmallconst:
   255                           	opt callstack 0
   256  000F00  00                 	db	0
   257  000F01                     STR_1:
   258                           
   259                           ; BSR set to: 0
   260  000F01  42                 	db	66	;'B'
   261  000F02  79                 	db	121	;'y'
   262  000F03  74                 	db	116	;'t'
   263  000F04  65                 	db	101	;'e'
   264  000F05  20                 	db	32
   265  000F06  25                 	db	37
   266  000F07  69                 	db	105	;'i'
   267  000F08  2E                 	db	46
   268  000F09  20                 	db	32
   269  000F0A  56                 	db	86	;'V'
   270  000F0B  61                 	db	97	;'a'
   271  000F0C  6C                 	db	108	;'l'
   272  000F0D  3A                 	db	58	;':'
   273  000F0E  20                 	db	32
   274  000F0F  30                 	db	48	;'0'
   275  000F10  78                 	db	120	;'x'
   276  000F11  25                 	db	37
   277  000F12  30                 	db	48	;'0'
   278  000F13  32                 	db	50	;'2'
   279  000F14  78                 	db	120	;'x'
   280  000F15  20                 	db	32
   281  000F16  0D                 	db	13
   282  000F17  0A                 	db	10
   283  000F18  00                 	db	0
   284  000F19                     STR_2:
   285                           
   286                           ; BSR set to: 0
   287  000F19  49                 	db	73	;'I'
   288  000F1A  6E                 	db	110	;'n'
   289  000F1B  69                 	db	105	;'i'
   290  000F1C  74                 	db	116	;'t'
   291  000F1D  61                 	db	97	;'a'
   292  000F1E  6C                 	db	108	;'l'
   293  000F1F  69                 	db	105	;'i'
   294  000F20  73                 	db	115	;'s'
   295  000F21  65                 	db	101	;'e'
   296  000F22  64                 	db	100	;'d'
   297  000F23  0D                 	db	13
   298  000F24  0A                 	db	10
   299  000F25  0A                 	db	10
   300  000F26  00                 	db	0
   301                           
   302                           ; #config settings
   303  000F27  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  00253E                     __pcinit:
   307                           	opt callstack 0
   308  00253E                     start_initialization:
   309                           	opt callstack 0
   310  00253E                     __initialization:
   311                           	opt callstack 0
   312                           
   313                           ; Initialize objects allocated to BANK1 (11 bytes)
   314                           ; load TBLPTR registers with __pidataBANK1
   315  00253E  0E08               	movlw	low __pidataBANK1
   316  002540  6EF6               	movwf	tblptrl,c
   317  002542  0E29               	movlw	high __pidataBANK1
   318  002544  6EF7               	movwf	tblptrh,c
   319  002546  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   320  002548  6EF8               	movwf	tblptru,c
   321  00254A  EE01  F084         	lfsr	0,__pdataBANK1
   322  00254E  EE10 F00B          	lfsr	1,11
   323  002552                     copy_data0:
   324  002552  0009               	tblrd		*+
   325  002554  CFF5 FFEE          	movff	tablat,postinc0
   326  002558  50E5               	movf	postdec1,w,c
   327  00255A  50E1               	movf	fsr1l,w,c
   328  00255C  E1FA               	bnz	copy_data0
   329                           
   330                           ; Clear objects allocated to BANK1 (132 bytes)
   331  00255E  EE01  F000         	lfsr	0,__pbssBANK1
   332  002562  0E84               	movlw	132
   333  002564                     clear_0:
   334  002564  6AEE               	clrf	postinc0,c
   335  002566  06E8               	decf	wreg,f,c
   336  002568  E1FD               	bnz	clear_0
   337                           
   338                           ; Clear objects allocated to BANK0 (94 bytes)
   339  00256A  EE00  F060         	lfsr	0,__pbssBANK0
   340  00256E  0E5E               	movlw	94
   341  002570                     clear_1:
   342  002570  6AEE               	clrf	postinc0,c
   343  002572  06E8               	decf	wreg,f,c
   344  002574  E1FD               	bnz	clear_1
   345                           
   346                           ; Clear objects allocated to COMRAM (4 bytes)
   347  002576  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   348  002578  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   349  00257A  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   350  00257C  6A57               	clrf	__pbssCOMRAM& (0+255),c
   351  00257E                     end_of_initialization:
   352                           	opt callstack 0
   353  00257E                     __end_of__initialization:
   354                           	opt callstack 0
   355  00257E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   356  002580  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   357  002582  0100               	movlb	0
   358  002584  EFE5  F00E         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMRAM
   361  000057                     __pbssCOMRAM:
   362                           	opt callstack 0
   363  000057                     _flags:
   364                           	opt callstack 0
   365  000057                     	ds	2
   366  000059                     _eusart1RxHead:
   367                           	opt callstack 0
   368  000059                     	ds	1
   369  00005A                     _eusart2RxHead:
   370                           	opt callstack 0
   371  00005A                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  000060                     __pbssBANK0:
   375                           	opt callstack 0
   376  000060                     _eusart1RxStatusBuffer:
   377                           	opt callstack 0
   378  000060                     	ds	16
   379  000070                     _eusart1RxBuffer:
   380                           	opt callstack 0
   381  000070                     	ds	16
   382  000080                     _eusart1TxBuffer:
   383                           	opt callstack 0
   384  000080                     	ds	16
   385  000090                     _eusart2RxStatusBuffer:
   386                           	opt callstack 0
   387  000090                     	ds	8
   388  000098                     _eusart2RxBuffer:
   389                           	opt callstack 0
   390  000098                     	ds	8
   391  0000A0                     _eusart2TxBuffer:
   392                           	opt callstack 0
   393  0000A0                     	ds	8
   394  0000A8                     _nout:
   395                           	opt callstack 0
   396  0000A8                     	ds	2
   397  0000AA                     _width:
   398                           	opt callstack 0
   399  0000AA                     	ds	2
   400  0000AC                     _prec:
   401                           	opt callstack 0
   402  0000AC                     	ds	2
   403  0000AE                     _ByteNum:
   404                           	opt callstack 0
   405  0000AE                     	ds	2
   406  0000B0                     _loop:
   407                           	opt callstack 0
   408  0000B0                     	ds	2
   409  0000B2                     _rxStatus:
   410                           	opt callstack 0
   411  0000B2                     	ds	1
   412  0000B3                     _Debug:
   413                           	opt callstack 0
   414  0000B3                     	ds	1
   415  0000B4                     _eusart1RxLastError:
   416                           	opt callstack 0
   417  0000B4                     	ds	1
   418  0000B5                     _eusart1RxCount:
   419                           	opt callstack 0
   420  0000B5                     	ds	1
   421  0000B6                     _eusart1RxTail:
   422                           	opt callstack 0
   423  0000B6                     	ds	1
   424  0000B7                     _eusart1TxTail:
   425                           	opt callstack 0
   426  0000B7                     	ds	1
   427  0000B8                     _eusart1TxHead:
   428                           	opt callstack 0
   429  0000B8                     	ds	1
   430  0000B9                     _eusart2RxLastError:
   431                           	opt callstack 0
   432  0000B9                     	ds	1
   433  0000BA                     _eusart2RxCount:
   434                           	opt callstack 0
   435  0000BA                     	ds	1
   436  0000BB                     _eusart2RxTail:
   437                           	opt callstack 0
   438  0000BB                     	ds	1
   439  0000BC                     _eusart2TxTail:
   440                           	opt callstack 0
   441  0000BC                     	ds	1
   442  0000BD                     _eusart2TxHead:
   443                           	opt callstack 0
   444  0000BD                     	ds	1
   445                           
   446                           	psect	bssBANK1
   447  000100                     __pbssBANK1:
   448                           	opt callstack 0
   449  000100                     _rxData:
   450                           	opt callstack 0
   451  000100                     	ds	100
   452  000164                     _dbuf:
   453                           	opt callstack 0
   454  000164                     	ds	32
   455                           
   456                           	psect	dataBANK1
   457  000184                     __pdataBANK1:
   458                           	opt callstack 0
   459  000184                     _data1:
   460                           	opt callstack 0
   461  000184                     	ds	11
   462                           
   463                           	psect	cstackBANK0
   464  0000BE                     __pcstackBANK0:
   465                           	opt callstack 0
   466  0000BE                     vfpfcnvrt@ll:
   467                           	opt callstack 0
   468                           
   469                           ; 8 bytes @ 0x0
   470  0000BE                     	ds	8
   471  0000C6                     vfpfcnvrt@llu:
   472                           	opt callstack 0
   473                           
   474                           ; 8 bytes @ 0x8
   475  0000C6                     	ds	8
   476  0000CE                     vfpfcnvrt@done:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x10
   480  0000CE                     	ds	2
   481  0000D0                     _vfpfcnvrt$1234:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x12
   485  0000D0                     	ds	2
   486  0000D2                     vfpfcnvrt@c:
   487                           	opt callstack 0
   488                           
   489                           ; 1 bytes @ 0x14
   490  0000D2                     	ds	1
   491  0000D3                     ?_vfprintf:
   492                           	opt callstack 0
   493  0000D3                     vfprintf@fp:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x15
   497  0000D3                     	ds	2
   498  0000D5                     vfprintf@fmt:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x17
   502  0000D5                     	ds	2
   503  0000D7                     vfprintf@ap:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x19
   507  0000D7                     	ds	2
   508  0000D9                     ?_printf:
   509                           	opt callstack 0
   510  0000D9                     printf@fmt:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x1B
   514  0000D9                     	ds	8
   515  0000E1                     printf@ap:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x23
   519  0000E1                     	ds	2
   520  0000E3                     PrintRXBuff@i:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x25
   524  0000E3                     	ds	2
   525  0000E5                     main@RXStat:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x27
   529  0000E5                     	ds	1
   530                           
   531                           	psect	cstackCOMRAM
   532  000001                     __pcstackCOMRAM:
   533                           	opt callstack 0
   534  000001                     ??_INTERRUPT_InterruptManager:
   535  000001                     
   536                           ; 1 bytes @ 0x0
   537  000001                     	ds	4
   538  000005                     ??_ClearRxBuff:
   539  000005                     ?_strlen:
   540                           	opt callstack 0
   541  000005                     ?_isupper:
   542                           	opt callstack 0
   543  000005                     ?_isalpha:
   544                           	opt callstack 0
   545  000005                     ?_isdigit:
   546                           	opt callstack 0
   547  000005                     ?_isspace:
   548                           	opt callstack 0
   549  000005                     ?_islower:
   550                           	opt callstack 0
   551  000005                     ?___wmul:
   552                           	opt callstack 0
   553  000005                     ?___aodiv:
   554                           	opt callstack 0
   555  000005                     ?___aomod:
   556                           	opt callstack 0
   557  000005                     EUSART2_Write@txData:
   558                           	opt callstack 0
   559  000005                     EUSART1_Read@readValue:
   560                           	opt callstack 0
   561  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   562                           	opt callstack 0
   563  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   564                           	opt callstack 0
   565  000005                     EUSART2_SetErrorHandler@interruptHandler:
   566                           	opt callstack 0
   567  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   568                           	opt callstack 0
   569  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   570                           	opt callstack 0
   571  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   572                           	opt callstack 0
   573  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   574                           	opt callstack 0
   575  000005                     EUSART1_SetErrorHandler@interruptHandler:
   576                           	opt callstack 0
   577  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   578                           	opt callstack 0
   579  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   580                           	opt callstack 0
   581  000005                     ___wmul@multiplier:
   582                           	opt callstack 0
   583  000005                     isalpha@c:
   584                           	opt callstack 0
   585  000005                     isdigit@c:
   586                           	opt callstack 0
   587  000005                     isspace@c:
   588                           	opt callstack 0
   589  000005                     isupper@c:
   590                           	opt callstack 0
   591  000005                     strlen@s:
   592                           	opt callstack 0
   593  000005                     islower@c:
   594                           	opt callstack 0
   595  000005                     ___aodiv@dividend:
   596                           	opt callstack 0
   597  000005                     ___aomod@dividend:
   598                           	opt callstack 0
   599                           
   600                           ; 8 bytes @ 0x4
   601  000005                     	ds	1
   602  000006                     putch@txData:
   603                           	opt callstack 0
   604  000006                     ClearRxBuff@i:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x5
   608  000006                     	ds	1
   609  000007                     ??_isupper:
   610  000007                     ??_isalpha:
   611  000007                     ??_isdigit:
   612  000007                     ??_isspace:
   613  000007                     ??_islower:
   614  000007                     ___wmul@multiplicand:
   615                           	opt callstack 0
   616  000007                     fputc@c:
   617                           	opt callstack 0
   618  000007                     strlen@a:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x6
   622  000007                     	ds	2
   623  000009                     ___wmul@product:
   624                           	opt callstack 0
   625  000009                     fputc@fp:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x8
   629  000009                     	ds	2
   630  00000B                     ??_fputc:
   631  00000B                     ?_toupper:
   632                           	opt callstack 0
   633  00000B                     _isspace$1719:
   634                           	opt callstack 0
   635  00000B                     toupper@c:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0xA
   639  00000B                     	ds	1
   640  00000C                     ?_atoi:
   641                           	opt callstack 0
   642  00000C                     atoi@s:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0xB
   646  00000C                     	ds	1
   647  00000D                     ??_toupper:
   648  00000D                     ___aodiv@divisor:
   649                           	opt callstack 0
   650  00000D                     ___aomod@divisor:
   651                           	opt callstack 0
   652                           
   653                           ; 8 bytes @ 0xC
   654  00000D                     	ds	1
   655  00000E                     ??_atoi:
   656                           
   657                           ; 1 bytes @ 0xD
   658  00000E                     	ds	2
   659  000010                     fputs@s:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xF
   663  000010                     	ds	1
   664  000011                     _toupper$1784:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x10
   668  000011                     	ds	1
   669  000012                     atoi@neg:
   670                           	opt callstack 0
   671  000012                     fputs@fp:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x11
   675  000012                     	ds	2
   676  000014                     fputs@c:
   677                           	opt callstack 0
   678  000014                     _atoi$1692:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x13
   682  000014                     	ds	1
   683  000015                     ___aodiv@counter:
   684                           	opt callstack 0
   685  000015                     ___aomod@counter:
   686                           	opt callstack 0
   687  000015                     fputs@i:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x14
   691  000015                     	ds	1
   692  000016                     ___aodiv@sign:
   693                           	opt callstack 0
   694  000016                     ___aomod@sign:
   695                           	opt callstack 0
   696  000016                     _atoi$1694:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x15
   700  000016                     	ds	1
   701  000017                     ?_abs:
   702                           	opt callstack 0
   703  000017                     ?_pad:
   704                           	opt callstack 0
   705  000017                     pad@fp:
   706                           	opt callstack 0
   707  000017                     abs@a:
   708                           	opt callstack 0
   709  000017                     ___aodiv@quotient:
   710                           	opt callstack 0
   711                           
   712                           ; 8 bytes @ 0x16
   713  000017                     	ds	1
   714  000018                     _atoi$1693:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0x17
   718  000018                     	ds	1
   719  000019                     ??_abs:
   720  000019                     pad@buf:
   721                           	opt callstack 0
   722  000019                     atoi@n:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x18
   726  000019                     	ds	2
   727  00001B                     pad@p:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x1A
   731  00001B                     	ds	2
   732  00001D                     ??_pad:
   733                           
   734                           ; 1 bytes @ 0x1C
   735  00001D                     	ds	1
   736  00001E                     pad@i:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x1D
   740  00001E                     	ds	2
   741  000020                     pad@w:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x1F
   745  000020                     	ds	2
   746  000022                     ?_dtoa:
   747                           	opt callstack 0
   748  000022                     ?_xtoa:
   749                           	opt callstack 0
   750  000022                     dtoa@fp:
   751                           	opt callstack 0
   752  000022                     xtoa@fp:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x21
   756  000022                     	ds	2
   757  000024                     dtoa@d:
   758                           	opt callstack 0
   759  000024                     xtoa@d:
   760                           	opt callstack 0
   761                           
   762                           ; 8 bytes @ 0x23
   763  000024                     	ds	8
   764  00002C                     ??_dtoa:
   765  00002C                     xtoa@x:
   766                           	opt callstack 0
   767                           
   768                           ; 1 bytes @ 0x2B
   769  00002C                     	ds	1
   770  00002D                     ??_xtoa:
   771                           
   772                           ; 1 bytes @ 0x2C
   773  00002D                     	ds	7
   774  000034                     _dtoa$1208:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x33
   778  000034                     	ds	1
   779  000035                     _xtoa$1219:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x34
   783  000035                     	ds	1
   784  000036                     dtoa@p:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x35
   788  000036                     	ds	1
   789  000037                     _xtoa$1220:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x36
   793  000037                     	ds	1
   794  000038                     dtoa@w:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x37
   798  000038                     	ds	1
   799  000039                     xtoa@p:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x38
   803  000039                     	ds	1
   804  00003A                     dtoa@s:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x39
   808  00003A                     	ds	1
   809  00003B                     xtoa@w:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x3A
   813  00003B                     	ds	1
   814  00003C                     dtoa@n:
   815                           	opt callstack 0
   816                           
   817                           ; 8 bytes @ 0x3B
   818  00003C                     	ds	1
   819  00003D                     xtoa@n:
   820                           	opt callstack 0
   821                           
   822                           ; 8 bytes @ 0x3C
   823  00003D                     	ds	7
   824  000044                     dtoa@i:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x43
   828  000044                     	ds	1
   829  000045                     xtoa@i:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x44
   833  000045                     	ds	2
   834  000047                     xtoa@c:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x46
   838  000047                     	ds	2
   839  000049                     ?_vfpfcnvrt:
   840                           	opt callstack 0
   841  000049                     vfpfcnvrt@fp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x48
   845  000049                     	ds	2
   846  00004B                     vfpfcnvrt@fmt:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x4A
   850  00004B                     	ds	2
   851  00004D                     vfpfcnvrt@ap:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x4C
   855  00004D                     	ds	2
   856  00004F                     ??_vfpfcnvrt:
   857                           
   858                           ; 1 bytes @ 0x4E
   859  00004F                     	ds	4
   860  000053                     vfprintf@cfmt:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x52
   864  000053                     	ds	2
   865  000055                     ??_PrintRXBuff:
   866                           
   867                           ; 1 bytes @ 0x54
   868  000055                     	ds	1
   869  000056                     ??_main:
   870                           
   871                           ; 1 bytes @ 0x55
   872  000056                     	ds	1
   873                           
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 65 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  RXStat          1   39[BANK0 ] _Bool 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   896 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   897 ;;Total ram usage:        2 bytes
   898 ;; Hardware stack levels required when called:   14
   899 ;; This function calls:
   900 ;;		_ClearRxBuff
   901 ;;		_EUSART1_Read
   902 ;;		_EUSART1_is_rx_ready
   903 ;;		_PrintRXBuff
   904 ;;		_RXMode
   905 ;;		_SYSTEM_Initialize
   906 ;;		_printf
   907 ;; This function is called by:
   908 ;;		Startup code after reset
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text0
   913  001DCA                     __ptext0:
   914                           	opt callstack 0
   915  001DCA                     _main:
   916                           	opt callstack 17
   917  001DCA                     
   918                           ;main.c: 68:     SYSTEM_Initialize();
   919  001DCA  EC5F  F014         	call	_SYSTEM_Initialize	;wreg free
   920  001DCE                     
   921                           ;main.c: 75:     (INTCONbits.GIE = 1);
   922  001DCE  8EF2               	bsf	242,7,c	;volatile
   923  001DD0                     
   924                           ;main.c: 81:     (INTCONbits.PEIE = 1);
   925  001DD0  8CF2               	bsf	242,6,c	;volatile
   926  001DD2  9883               	bcf	131,4,c	;volatile
   927  001DD4  9A83               	bcf	131,5,c	;volatile
   928  001DD6  9C83               	bcf	131,6,c	;volatile
   929  001DD8  9E83               	bcf	131,7,c	;volatile
   930  001DDA                     
   931                           ;main.c: 96:     printf("Initalised\r\n\n");
   932  001DDA  0E19               	movlw	low STR_2
   933  001DDC  0100               	movlb	0	; () banked
   934  001DDE  6FD9               	movwf	printf@fmt& (0+255),b
   935  001DE0  0E0F               	movlw	high STR_2
   936  001DE2  6FDA               	movwf	(printf@fmt+1)& (0+255),b
   937  001DE4  EC2A  F014         	call	_printf	;wreg free
   938  001DE8                     
   939                           ;main.c: 98:     RXMode();
   940  001DE8  ECC5  F014         	call	_RXMode	;wreg free
   941  001DEC                     
   942                           ;main.c: 99:     ClearRxBuff();
   943  001DEC  ECC4  F012         	call	_ClearRxBuff	;wreg free
   944  001DF0                     
   945                           ;main.c: 100:     PrintRXBuff();
   946  001DF0  EC87  F011         	call	_PrintRXBuff	;wreg free
   947  001DF4                     
   948                           ;main.c: 102:     _Bool RXStat = 0;
   949  001DF4  0E00               	movlw	0
   950  001DF6  0100               	movlb	0	; () banked
   951  001DF8  6FE5               	movwf	main@RXStat& (0+255),b
   952  001DFA                     l3574:
   953                           
   954                           ; BSR set to: 0
   955                           ;main.c: 105:     {;main.c: 106:         if(EUSART1_is_rx_ready()){
   956  001DFA  EC78  F014         	call	_EUSART1_is_rx_ready	;wreg free
   957  001DFE  0900               	iorlw	0
   958  001E00  B4D8               	btfsc	status,2,c
   959  001E02  EF05  F00F         	goto	u2911
   960  001E06  EF07  F00F         	goto	u2910
   961  001E0A                     u2911:
   962  001E0A  EF2D  F00F         	goto	l3588
   963  001E0E                     u2910:
   964  001E0E  EF20  F00F         	goto	l3584
   965  001E12                     l3578:
   966                           
   967                           ;main.c: 113:                 rxData[ByteNum] = EUSART1_Read();
   968  001E12  EC4A  F012         	call	_EUSART1_Read	;wreg free
   969  001E16  6E56               	movwf	??_main^0,c
   970  001E18  0E00               	movlw	low _rxData
   971  001E1A  0100               	movlb	0	; () banked
   972  001E1C  25AE               	addwf	_ByteNum& (0+255),w,b
   973  001E1E  6ED9               	movwf	fsr2l,c
   974  001E20  0E01               	movlw	high _rxData
   975  001E22  21AF               	addwfc	(_ByteNum+1)& (0+255),w,b
   976  001E24  6EDA               	movwf	fsr2h,c
   977  001E26  C056  FFDF         	movff	??_main,indf2
   978  001E2A                     
   979                           ; BSR set to: 0
   980                           ;main.c: 114:                 _delay((unsigned long)((2)*(32000000/4000.0)));
   981  001E2A  0E15               	movlw	21
   982  001E2C  6E56               	movwf	??_main^0,c
   983  001E2E  0EC6               	movlw	198
   984  001E30                     u2957:
   985  001E30  2EE8               	decfsz	wreg,f,c
   986  001E32  D7FE               	bra	u2957
   987  001E34  2E56               	decfsz	??_main^0,f,c
   988  001E36  D7FC               	bra	u2957
   989  001E38  D000               	nop2	
   990  001E3A                     
   991                           ;main.c: 115:                 ByteNum++;
   992  001E3A  0100               	movlb	0	; () banked
   993  001E3C  4BAE               	infsnz	_ByteNum& (0+255),f,b
   994  001E3E  2BAF               	incf	(_ByteNum+1)& (0+255),f,b
   995  001E40                     l3584:
   996                           
   997                           ;main.c: 111:             while(EUSART1_is_rx_ready()){
   998  001E40  EC78  F014         	call	_EUSART1_is_rx_ready	;wreg free
   999  001E44  0900               	iorlw	0
  1000  001E46  A4D8               	btfss	status,2,c
  1001  001E48  EF28  F00F         	goto	u2921
  1002  001E4C  EF2A  F00F         	goto	u2920
  1003  001E50                     u2921:
  1004  001E50  EF09  F00F         	goto	l3578
  1005  001E54                     u2920:
  1006  001E54                     
  1007                           ;main.c: 118:             RXStat = 1;
  1008  001E54  0E01               	movlw	1
  1009  001E56  0100               	movlb	0	; () banked
  1010  001E58  6FE5               	movwf	main@RXStat& (0+255),b
  1011  001E5A                     l3588:
  1012                           
  1013                           ;main.c: 121:         if(RXStat ==1){
  1014  001E5A  0100               	movlb	0	; () banked
  1015  001E5C  05E5               	decf	main@RXStat& (0+255),w,b
  1016  001E5E  A4D8               	btfss	status,2,c
  1017  001E60  EF34  F00F         	goto	u2931
  1018  001E64  EF36  F00F         	goto	u2930
  1019  001E68                     u2931:
  1020  001E68  EFFD  F00E         	goto	l3574
  1021  001E6C                     u2930:
  1022  001E6C                     
  1023                           ; BSR set to: 0
  1024                           ;main.c: 123:             ByteNum--;
  1025  001E6C  07AE               	decf	_ByteNum& (0+255),f,b
  1026  001E6E  A0D8               	btfss	status,0,c
  1027  001E70  07AF               	decf	(_ByteNum+1)& (0+255),f,b
  1028  001E72                     
  1029                           ; BSR set to: 0
  1030                           ;main.c: 124:             PrintRXBuff();
  1031  001E72  EC87  F011         	call	_PrintRXBuff	;wreg free
  1032  001E76                     
  1033                           ;main.c: 125:             ClearRxBuff();
  1034  001E76  ECC4  F012         	call	_ClearRxBuff	;wreg free
  1035  001E7A                     
  1036                           ;main.c: 126:             RXStat = 0;
  1037  001E7A  0E00               	movlw	0
  1038  001E7C  0100               	movlb	0	; () banked
  1039  001E7E  6FE5               	movwf	main@RXStat& (0+255),b
  1040  001E80                     
  1041                           ; BSR set to: 0
  1042                           ;main.c: 127:             ByteNum = 0;
  1043  001E80  0E00               	movlw	0
  1044  001E82  6FAF               	movwf	(_ByteNum+1)& (0+255),b
  1045  001E84  0E00               	movlw	0
  1046  001E86  6FAE               	movwf	_ByteNum& (0+255),b
  1047  001E88                     
  1048                           ; BSR set to: 0
  1049  001E88  B883               	btfsc	131,4,c	;volatile
  1050  001E8A  EF49  F00F         	goto	u2941
  1051  001E8E  EF4C  F00F         	goto	u2940
  1052  001E92                     u2941:
  1053  001E92  0E01               	movlw	1
  1054  001E94  EF4D  F00F         	goto	u2946
  1055  001E98                     u2940:
  1056  001E98  0E00               	movlw	0
  1057  001E9A                     u2946:
  1058  001E9A  0AFF               	xorlw	255
  1059  001E9C  6E56               	movwf	??_main^0,c
  1060  001E9E  3A56               	swapf	??_main^0,f,c
  1061  001EA0  5083               	movf	131,w,c	;volatile
  1062  001EA2  1856               	xorwf	??_main^0,w,c
  1063  001EA4  0BEF               	andlw	-17
  1064  001EA6  1856               	xorwf	??_main^0,w,c
  1065  001EA8  6E83               	movwf	131,c	;volatile
  1066  001EAA  EFFD  F00E         	goto	l3574
  1067  001EAE  EF93  F000         	goto	start
  1068  001EB2                     __end_of_main:
  1069                           	opt callstack 0
  1070                           
  1071 ;; *************** function _SYSTEM_Initialize *****************
  1072 ;; Defined at:
  1073 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    6
  1094 ;; This function calls:
  1095 ;;		_EUSART1_Initialize
  1096 ;;		_EUSART2_Initialize
  1097 ;;		_INTERRUPT_Initialize
  1098 ;;		_OSCILLATOR_Initialize
  1099 ;;		_PIN_MANAGER_Initialize
  1100 ;;		_PMD_Initialize
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text1
  1107  0028BE                     __ptext1:
  1108                           	opt callstack 0
  1109  0028BE                     _SYSTEM_Initialize:
  1110                           	opt callstack 24
  1111  0028BE                     
  1112                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1113  0028BE  ECD1  F014         	call	_INTERRUPT_Initialize	;wreg free
  1114  0028C2                     
  1115                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1116  0028C2  EC51  F014         	call	_PMD_Initialize	;wreg free
  1117  0028C6                     
  1118                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1119  0028C6  ECC3  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1120  0028CA                     
  1121                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1122  0028CA  EC6C  F014         	call	_OSCILLATOR_Initialize	;wreg free
  1123  0028CE                     
  1124                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1125  0028CE  EC49  F011         	call	_EUSART1_Initialize	;wreg free
  1126  0028D2                     
  1127                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1128  0028D2  EC0A  F011         	call	_EUSART2_Initialize	;wreg free
  1129  0028D6  0012               	return		;funcret
  1130  0028D8                     __end_of_SYSTEM_Initialize:
  1131                           	opt callstack 0
  1132                           
  1133 ;; *************** function _PMD_Initialize *****************
  1134 ;; Defined at:
  1135 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    4
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_SYSTEM_Initialize
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text2
  1164  0028A2                     __ptext2:
  1165                           	opt callstack 0
  1166  0028A2                     _PMD_Initialize:
  1167                           	opt callstack 25
  1168  0028A2                     
  1169                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1170  0028A2  0E00               	movlw	0
  1171  0028A4  010E               	movlb	14	; () banked
  1172  0028A6  6FE1               	movwf	225,b	;volatile
  1173                           
  1174                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1175  0028A8  0E00               	movlw	0
  1176  0028AA  6FE2               	movwf	226,b	;volatile
  1177                           
  1178                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1179  0028AC  0E00               	movlw	0
  1180  0028AE  6FE3               	movwf	227,b	;volatile
  1181                           
  1182                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1183  0028B0  0E00               	movlw	0
  1184  0028B2  6FE4               	movwf	228,b	;volatile
  1185                           
  1186                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1187  0028B4  0E00               	movlw	0
  1188  0028B6  6FE5               	movwf	229,b	;volatile
  1189                           
  1190                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1191  0028B8  0E00               	movlw	0
  1192  0028BA  6FE6               	movwf	230,b	;volatile
  1193  0028BC                     
  1194                           ; BSR set to: 14
  1195  0028BC  0012               	return		;funcret
  1196  0028BE                     __end_of_PMD_Initialize:
  1197                           	opt callstack 0
  1198                           
  1199 ;; *************** function _PIN_MANAGER_Initialize *****************
  1200 ;; Defined at:
  1201 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    4
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_SYSTEM_Initialize
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text3
  1230  002186                     __ptext3:
  1231                           	opt callstack 0
  1232  002186                     _PIN_MANAGER_Initialize:
  1233                           	opt callstack 25
  1234  002186                     
  1235                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1236  002186  0E00               	movlw	0
  1237  002188  6E87               	movwf	135,c	;volatile
  1238                           
  1239                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1240  00218A  0E00               	movlw	0
  1241  00218C  6E86               	movwf	134,c	;volatile
  1242                           
  1243                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1244  00218E  0E00               	movlw	0
  1245  002190  6E83               	movwf	131,c	;volatile
  1246                           
  1247                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1248  002192  0E00               	movlw	0
  1249  002194  6E84               	movwf	132,c	;volatile
  1250                           
  1251                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1252  002196  0E00               	movlw	0
  1253  002198  6E85               	movwf	133,c	;volatile
  1254                           
  1255                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1256  00219A  0E07               	movlw	7
  1257  00219C  6E8C               	movwf	140,c	;volatile
  1258                           
  1259                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1260  00219E  0E07               	movlw	7
  1261  0021A0  6E88               	movwf	136,c	;volatile
  1262                           
  1263                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1264  0021A2  0EBF               	movlw	191
  1265  0021A4  6E89               	movwf	137,c	;volatile
  1266                           
  1267                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1268  0021A6  0EBF               	movlw	191
  1269  0021A8  6E8A               	movwf	138,c	;volatile
  1270                           
  1271                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1272  0021AA  0EFE               	movlw	254
  1273  0021AC  6E8B               	movwf	139,c	;volatile
  1274  0021AE                     
  1275                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1276  0021AE  010F               	movlb	15	; () banked
  1277  0021B0  6926               	setf	38,b	;volatile
  1278                           
  1279                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1280  0021B2  0E3B               	movlw	59
  1281  0021B4  6F21               	movwf	33,b	;volatile
  1282                           
  1283                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1284  0021B6  0E37               	movlw	55
  1285  0021B8  6F19               	movwf	25,b	;volatile
  1286                           
  1287                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1288  0021BA  0E07               	movlw	7
  1289  0021BC  6F2E               	movwf	46,b	;volatile
  1290  0021BE                     
  1291                           ; BSR set to: 15
  1292                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1293  0021BE  6911               	setf	17,b	;volatile
  1294                           
  1295                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1296  0021C0  0E00               	movlw	0
  1297  0021C2  6F25               	movwf	37,b	;volatile
  1298                           
  1299                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1300  0021C4  0E00               	movlw	0
  1301  0021C6  6F2D               	movwf	45,b	;volatile
  1302                           
  1303                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1304  0021C8  0E00               	movlw	0
  1305  0021CA  6F18               	movwf	24,b	;volatile
  1306                           
  1307                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1308  0021CC  0E00               	movlw	0
  1309  0021CE  6F10               	movwf	16,b	;volatile
  1310                           
  1311                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1312  0021D0  0E00               	movlw	0
  1313  0021D2  6F20               	movwf	32,b	;volatile
  1314                           
  1315                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1316  0021D4  0E00               	movlw	0
  1317  0021D6  6F2C               	movwf	44,b	;volatile
  1318                           
  1319                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1320  0021D8  0E00               	movlw	0
  1321  0021DA  6F0F               	movwf	15,b	;volatile
  1322                           
  1323                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1324  0021DC  0E00               	movlw	0
  1325  0021DE  6F17               	movwf	23,b	;volatile
  1326                           
  1327                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1328  0021E0  0E00               	movlw	0
  1329  0021E2  6F1F               	movwf	31,b	;volatile
  1330                           
  1331                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1332  0021E4  0E00               	movlw	0
  1333  0021E6  6F24               	movwf	36,b	;volatile
  1334  0021E8                     
  1335                           ; BSR set to: 15
  1336                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1337  0021E8  690E               	setf	14,b	;volatile
  1338  0021EA                     
  1339                           ; BSR set to: 15
  1340                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1341  0021EA  6916               	setf	22,b	;volatile
  1342  0021EC                     
  1343                           ; BSR set to: 15
  1344                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1345  0021EC  691E               	setf	30,b	;volatile
  1346  0021EE                     
  1347                           ; BSR set to: 15
  1348                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1349  0021EE  6923               	setf	35,b	;volatile
  1350                           
  1351                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1352  0021F0  0E07               	movlw	7
  1353  0021F2  6F2B               	movwf	43,b	;volatile
  1354  0021F4                     
  1355                           ; BSR set to: 15
  1356                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1357  0021F4  690D               	setf	13,b	;volatile
  1358  0021F6                     
  1359                           ; BSR set to: 15
  1360                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1361  0021F6  6915               	setf	21,b	;volatile
  1362  0021F8                     
  1363                           ; BSR set to: 15
  1364                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1365  0021F8  691D               	setf	29,b	;volatile
  1366  0021FA                     
  1367                           ; BSR set to: 15
  1368                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1369  0021FA  6922               	setf	34,b	;volatile
  1370                           
  1371                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1372  0021FC  0E0F               	movlw	15
  1373  0021FE  6F2A               	movwf	42,b	;volatile
  1374                           
  1375                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1376  002200  0E17               	movlw	23
  1377  002202  010E               	movlb	14	; () banked
  1378  002204  6FB5               	movwf	181,b	;volatile
  1379                           
  1380                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1381  002206  0E0B               	movlw	11
  1382  002208  6FF5               	movwf	245,b	;volatile
  1383                           
  1384                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1385  00220A  0E09               	movlw	9
  1386  00220C  6FFD               	movwf	253,b	;volatile
  1387                           
  1388                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1389  00220E  0E0F               	movlw	15
  1390  002210  6F8D               	movwf	141,b	;volatile
  1391  002212                     
  1392                           ; BSR set to: 14
  1393  002212  0012               	return		;funcret
  1394  002214                     __end_of_PIN_MANAGER_Initialize:
  1395                           	opt callstack 0
  1396                           
  1397 ;; *************** function _OSCILLATOR_Initialize *****************
  1398 ;; Defined at:
  1399 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    4
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_SYSTEM_Initialize
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text4
  1428  0028D8                     __ptext4:
  1429                           	opt callstack 0
  1430  0028D8                     _OSCILLATOR_Initialize:
  1431                           	opt callstack 25
  1432  0028D8                     
  1433                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1434  0028D8  0E60               	movlw	96
  1435  0028DA  010E               	movlb	14	; () banked
  1436  0028DC  6FD8               	movwf	216,b	;volatile
  1437                           
  1438                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1439  0028DE  0E00               	movlw	0
  1440  0028E0  6FDA               	movwf	218,b	;volatile
  1441                           
  1442                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1443  0028E2  0E00               	movlw	0
  1444  0028E4  6FDC               	movwf	220,b	;volatile
  1445                           
  1446                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1447  0028E6  0E06               	movlw	6
  1448  0028E8  6FDE               	movwf	222,b	;volatile
  1449                           
  1450                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1451  0028EA  0E00               	movlw	0
  1452  0028EC  6FDD               	movwf	221,b	;volatile
  1453  0028EE                     
  1454                           ; BSR set to: 14
  1455  0028EE  0012               	return		;funcret
  1456  0028F0                     __end_of_OSCILLATOR_Initialize:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function _INTERRUPT_Initialize *****************
  1460 ;; Defined at:
  1461 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		None
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    4
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_SYSTEM_Initialize
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text5
  1490  0029A2                     __ptext5:
  1491                           	opt callstack 0
  1492  0029A2                     _INTERRUPT_Initialize:
  1493                           	opt callstack 25
  1494  0029A2                     
  1495                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1496  0029A2  9AF2               	bcf	242,5,c	;volatile
  1497  0029A4  0012               	return		;funcret
  1498  0029A6                     __end_of_INTERRUPT_Initialize:
  1499                           	opt callstack 0
  1500                           
  1501 ;; *************** function _EUSART2_Initialize *****************
  1502 ;; Defined at:
  1503 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    5
  1524 ;; This function calls:
  1525 ;;		_EUSART2_SetErrorHandler
  1526 ;;		_EUSART2_SetFramingErrorHandler
  1527 ;;		_EUSART2_SetOverrunErrorHandler
  1528 ;;		_EUSART2_SetRxInterruptHandler
  1529 ;;		_EUSART2_SetTxInterruptHandler
  1530 ;; This function is called by:
  1531 ;;		_SYSTEM_Initialize
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text6
  1536  002214                     __ptext6:
  1537                           	opt callstack 0
  1538  002214                     _EUSART2_Initialize:
  1539                           	opt callstack 24
  1540  002214                     
  1541                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  1542  002214  010E               	movlb	14	; () banked
  1543  002216  9FC5               	bcf	197,7,b	;volatile
  1544  002218                     
  1545                           ; BSR set to: 14
  1546                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  1547  002218  0E74               	movlw	low _EUSART2_Receive_ISR
  1548  00221A  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  1549  00221C  0E1F               	movlw	high _EUSART2_Receive_ISR
  1550  00221E  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  1551  002220  EC8F  F014         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  1552  002224                     
  1553                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  1554  002224  010E               	movlb	14	; () banked
  1555  002226  9DC5               	bcf	197,6,b	;volatile
  1556                           
  1557                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  1558  002228  0ED2               	movlw	low _EUSART2_Transmit_ISR
  1559  00222A  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  1560  00222C  0E25               	movlw	high _EUSART2_Transmit_ISR
  1561  00222E  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  1562  002230  EC8A  F014         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  1563  002234                     
  1564                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  1565  002234  0E08               	movlw	8
  1566  002236  010E               	movlb	14	; () banked
  1567  002238  6F9F               	movwf	159,b	;volatile
  1568  00223A                     
  1569                           ; BSR set to: 14
  1570                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  1571  00223A  0E90               	movlw	144
  1572  00223C  6F9D               	movwf	157,b	;volatile
  1573  00223E                     
  1574                           ; BSR set to: 14
  1575                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  1576  00223E  0E24               	movlw	36
  1577  002240  6F9E               	movwf	158,b	;volatile
  1578  002242                     
  1579                           ; BSR set to: 14
  1580                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  1581  002242  0E40               	movlw	64
  1582  002244  6F9B               	movwf	155,b	;volatile
  1583  002246                     
  1584                           ; BSR set to: 14
  1585                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  1586  002246  0E03               	movlw	3
  1587  002248  6F9C               	movwf	156,b	;volatile
  1588  00224A                     
  1589                           ; BSR set to: 14
  1590                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  1591  00224A  0EA6               	movlw	low _EUSART2_DefaultFramingErrorHandler
  1592  00224C  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  1593  00224E  0E29               	movlw	high _EUSART2_DefaultFramingErrorHandler
  1594  002250  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  1595  002252  EC99  F014         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  1596  002256                     
  1597                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  1598  002256  0E82               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  1599  002258  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  1600  00225A  0E29               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  1601  00225C  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1602  00225E  EC94  F014         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  1603  002262                     
  1604                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  1605  002262  0E90               	movlw	low _EUSART2_DefaultErrorHandler
  1606  002264  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  1607  002266  0E29               	movlw	high _EUSART2_DefaultErrorHandler
  1608  002268  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  1609  00226A  EC9E  F014         	call	_EUSART2_SetErrorHandler	;wreg free
  1610                           
  1611                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  1612  00226E  0E00               	movlw	0
  1613  002270  0100               	movlb	0	; () banked
  1614  002272  6FB9               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  1615                           
  1616                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  1617  002274  0E00               	movlw	0
  1618  002276  6FBD               	movwf	_eusart2TxHead& (0+255),b	;volatile
  1619                           
  1620                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  1621  002278  0E00               	movlw	0
  1622  00227A  6FBC               	movwf	_eusart2TxTail& (0+255),b	;volatile
  1623                           
  1624                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  1625  00227C  0E08               	movlw	8
  1626  00227E  6FFB               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  1627                           
  1628                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  1629  002280  0E00               	movlw	0
  1630  002282  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  1631                           
  1632                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  1633  002284  0E00               	movlw	0
  1634  002286  6FBB               	movwf	_eusart2RxTail& (0+255),b	;volatile
  1635                           
  1636                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  1637  002288  0E00               	movlw	0
  1638  00228A  6FBA               	movwf	_eusart2RxCount& (0+255),b	;volatile
  1639  00228C                     
  1640                           ; BSR set to: 0
  1641                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  1642  00228C  010E               	movlb	14	; () banked
  1643  00228E  8FC5               	bsf	197,7,b	;volatile
  1644  002290                     
  1645                           ; BSR set to: 14
  1646  002290  0012               	return		;funcret
  1647  002292                     __end_of_EUSART2_Initialize:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  1651 ;; Defined at:
  1652 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1655 ;;		 -> EUSART2_Transmit_ISR(1), 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    4
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_EUSART2_Initialize
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text7
  1682  002914                     __ptext7:
  1683                           	opt callstack 0
  1684  002914                     _EUSART2_SetTxInterruptHandler:
  1685                           	opt callstack 24
  1686  002914                     
  1687                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1688  002914  C005  F0F8         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  1689  002918  C006  F0F9         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  1690  00291C  0012               	return		;funcret
  1691  00291E                     __end_of_EUSART2_SetTxInterruptHandler:
  1692                           	opt callstack 0
  1693                           
  1694 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  1695 ;; Defined at:
  1696 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1699 ;;		 -> EUSART2_Receive_ISR(1), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    4
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_EUSART2_Initialize
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text8
  1726  00291E                     __ptext8:
  1727                           	opt callstack 0
  1728  00291E                     _EUSART2_SetRxInterruptHandler:
  1729                           	opt callstack 24
  1730  00291E                     
  1731                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1732  00291E  C005  F0F6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  1733  002922  C006  F0F7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  1734  002926  0012               	return		;funcret
  1735  002928                     __end_of_EUSART2_SetRxInterruptHandler:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  1739 ;; Defined at:
  1740 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1743 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;Total ram usage:        2 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; Hardware stack levels required when called:    4
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_EUSART2_Initialize
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text9
  1770  002928                     __ptext9:
  1771                           	opt callstack 0
  1772  002928                     _EUSART2_SetOverrunErrorHandler:
  1773                           	opt callstack 24
  1774  002928                     
  1775                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  1776  002928  C005  F0EE         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  1777  00292C  C006  F0EF         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  1778  002930  0012               	return		;funcret
  1779  002932                     __end_of_EUSART2_SetOverrunErrorHandler:
  1780                           	opt callstack 0
  1781                           
  1782 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  1783 ;; Defined at:
  1784 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1787 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    4
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_EUSART2_Initialize
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text10
  1814  002932                     __ptext10:
  1815                           	opt callstack 0
  1816  002932                     _EUSART2_SetFramingErrorHandler:
  1817                           	opt callstack 24
  1818  002932                     
  1819                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  1820  002932  C005  F0F0         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  1821  002936  C006  F0F1         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  1822  00293A  0012               	return		;funcret
  1823  00293C                     __end_of_EUSART2_SetFramingErrorHandler:
  1824                           	opt callstack 0
  1825                           
  1826 ;; *************** function _EUSART2_SetErrorHandler *****************
  1827 ;; Defined at:
  1828 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1831 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;Total ram usage:        2 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    4
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_EUSART2_Initialize
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text11
  1858  00293C                     __ptext11:
  1859                           	opt callstack 0
  1860  00293C                     _EUSART2_SetErrorHandler:
  1861                           	opt callstack 24
  1862  00293C                     
  1863                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  1864  00293C  C005  F0EC         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  1865  002940  C006  F0ED         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  1866  002944  0012               	return		;funcret
  1867  002946                     __end_of_EUSART2_SetErrorHandler:
  1868                           	opt callstack 0
  1869                           
  1870 ;; *************** function _EUSART1_Initialize *****************
  1871 ;; Defined at:
  1872 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    5
  1893 ;; This function calls:
  1894 ;;		_EUSART1_SetErrorHandler
  1895 ;;		_EUSART1_SetFramingErrorHandler
  1896 ;;		_EUSART1_SetOverrunErrorHandler
  1897 ;;		_EUSART1_SetRxInterruptHandler
  1898 ;;		_EUSART1_SetTxInterruptHandler
  1899 ;; This function is called by:
  1900 ;;		_SYSTEM_Initialize
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text12
  1905  002292                     __ptext12:
  1906                           	opt callstack 0
  1907  002292                     _EUSART1_Initialize:
  1908                           	opt callstack 24
  1909  002292                     
  1910                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  1911  002292  010E               	movlb	14	; () banked
  1912  002294  9BC5               	bcf	197,5,b	;volatile
  1913  002296                     
  1914                           ; BSR set to: 14
  1915                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1916  002296  0E34               	movlw	low _EUSART1_Receive_ISR
  1917  002298  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1918  00229A  0E20               	movlw	high _EUSART1_Receive_ISR
  1919  00229C  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1920  00229E  ECA8  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1921  0022A2                     
  1922                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  1923  0022A2  010E               	movlb	14	; () banked
  1924  0022A4  99C5               	bcf	197,4,b	;volatile
  1925                           
  1926                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1927  0022A6  0E5E               	movlw	low _EUSART1_Transmit_ISR
  1928  0022A8  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  1929  0022AA  0E26               	movlw	high _EUSART1_Transmit_ISR
  1930  0022AC  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  1931  0022AE  ECA3  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1932  0022B2                     
  1933                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  1934  0022B2  0E08               	movlw	8
  1935  0022B4  6E9F               	movwf	159,c	;volatile
  1936  0022B6                     
  1937                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  1938  0022B6  0E90               	movlw	144
  1939  0022B8  6E9D               	movwf	157,c	;volatile
  1940  0022BA                     
  1941                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  1942  0022BA  0E24               	movlw	36
  1943  0022BC  6E9E               	movwf	158,c	;volatile
  1944  0022BE                     
  1945                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  1946  0022BE  0E40               	movlw	64
  1947  0022C0  6E9B               	movwf	155,c	;volatile
  1948  0022C2                     
  1949                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  1950  0022C2  0E03               	movlw	3
  1951  0022C4  6E9C               	movwf	156,c	;volatile
  1952  0022C6                     
  1953                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1954  0022C6  0EA8               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1955  0022C8  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1956  0022CA  0E29               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1957  0022CC  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1958  0022CE  ECB2  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1959  0022D2                     
  1960                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1961  0022D2  0E96               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1962  0022D4  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1963  0022D6  0E29               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1964  0022D8  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1965  0022DA  ECAD  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1966  0022DE                     
  1967                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1968  0022DE  0E9C               	movlw	low _EUSART1_DefaultErrorHandler
  1969  0022E0  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1970  0022E2  0E29               	movlw	high _EUSART1_DefaultErrorHandler
  1971  0022E4  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1972  0022E6  ECB7  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  1973                           
  1974                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  1975  0022EA  0E00               	movlw	0
  1976  0022EC  0100               	movlb	0	; () banked
  1977  0022EE  6FB4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  1978                           
  1979                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  1980  0022F0  0E00               	movlw	0
  1981  0022F2  6FB8               	movwf	_eusart1TxHead& (0+255),b	;volatile
  1982                           
  1983                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  1984  0022F4  0E00               	movlw	0
  1985  0022F6  6FB7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  1986                           
  1987                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  1988  0022F8  0E10               	movlw	16
  1989  0022FA  6FFA               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  1990                           
  1991                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  1992  0022FC  0E00               	movlw	0
  1993  0022FE  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  1994                           
  1995                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  1996  002300  0E00               	movlw	0
  1997  002302  6FB6               	movwf	_eusart1RxTail& (0+255),b	;volatile
  1998                           
  1999                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2000  002304  0E00               	movlw	0
  2001  002306  6FB5               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2002  002308                     
  2003                           ; BSR set to: 0
  2004                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2005  002308  010E               	movlb	14	; () banked
  2006  00230A  8BC5               	bsf	197,5,b	;volatile
  2007  00230C                     
  2008                           ; BSR set to: 14
  2009  00230C  0012               	return		;funcret
  2010  00230E                     __end_of_EUSART1_Initialize:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2014 ;; Defined at:
  2015 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2018 ;;		 -> EUSART1_Transmit_ISR(1), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    4
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_EUSART1_Initialize
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text13
  2045  002946                     __ptext13:
  2046                           	opt callstack 0
  2047  002946                     _EUSART1_SetTxInterruptHandler:
  2048                           	opt callstack 24
  2049  002946                     
  2050                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2051  002946  C005  F0F4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2052  00294A  C006  F0F5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2053  00294E  0012               	return		;funcret
  2054  002950                     __end_of_EUSART1_SetTxInterruptHandler:
  2055                           	opt callstack 0
  2056                           
  2057 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2058 ;; Defined at:
  2059 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2062 ;;		 -> EUSART1_Receive_ISR(1), 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;Total ram usage:        2 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    4
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_EUSART1_Initialize
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text14
  2089  002950                     __ptext14:
  2090                           	opt callstack 0
  2091  002950                     _EUSART1_SetRxInterruptHandler:
  2092                           	opt callstack 24
  2093  002950                     
  2094                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2095  002950  C005  F0F2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2096  002954  C006  F0F3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2097  002958  0012               	return		;funcret
  2098  00295A                     __end_of_EUSART1_SetRxInterruptHandler:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2102 ;; Defined at:
  2103 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2106 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    4
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_EUSART1_Initialize
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text15
  2133  00295A                     __ptext15:
  2134                           	opt callstack 0
  2135  00295A                     _EUSART1_SetOverrunErrorHandler:
  2136                           	opt callstack 24
  2137  00295A                     
  2138                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2139  00295A  C005  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2140  00295E  C006  F0E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2141  002962  0012               	return		;funcret
  2142  002964                     __end_of_EUSART1_SetOverrunErrorHandler:
  2143                           	opt callstack 0
  2144                           
  2145 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2146 ;; Defined at:
  2147 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2150 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2166 ;;Total ram usage:        2 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    4
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_EUSART1_Initialize
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text16
  2177  002964                     __ptext16:
  2178                           	opt callstack 0
  2179  002964                     _EUSART1_SetFramingErrorHandler:
  2180                           	opt callstack 24
  2181  002964                     
  2182                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2183  002964  C005  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2184  002968  C006  F0EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2185  00296C  0012               	return		;funcret
  2186  00296E                     __end_of_EUSART1_SetFramingErrorHandler:
  2187                           	opt callstack 0
  2188                           
  2189 ;; *************** function _EUSART1_SetErrorHandler *****************
  2190 ;; Defined at:
  2191 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2194 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    4
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_EUSART1_Initialize
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text17
  2221  00296E                     __ptext17:
  2222                           	opt callstack 0
  2223  00296E                     _EUSART1_SetErrorHandler:
  2224                           	opt callstack 24
  2225  00296E                     
  2226                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2227  00296E  C005  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2228  002972  C006  F0E7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2229  002976  0012               	return		;funcret
  2230  002978                     __end_of_EUSART1_SetErrorHandler:
  2231                           	opt callstack 0
  2232                           
  2233 ;; *************** function _RXMode *****************
  2234 ;; Defined at:
  2235 ;;		line 40 in file "main.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		None
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    4
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text18
  2264  00298A                     __ptext18:
  2265                           	opt callstack 0
  2266  00298A                     _RXMode:
  2267                           	opt callstack 26
  2268  00298A  9086               	bcf	134,0,c	;volatile
  2269  00298C  9683               	bcf	131,3,c	;volatile
  2270  00298E  0012               	return		;funcret
  2271  002990                     __end_of_RXMode:
  2272                           	opt callstack 0
  2273                           
  2274 ;; *************** function _PrintRXBuff *****************
  2275 ;; Defined at:
  2276 ;;		line 55 in file "main.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  i               2   37[BANK0 ] int 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;Total ram usage:        3 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:   13
  2297 ;; This function calls:
  2298 ;;		_printf
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text19
  2305  00230E                     __ptext19:
  2306                           	opt callstack 0
  2307  00230E                     _PrintRXBuff:
  2308                           	opt callstack 17
  2309  00230E                     
  2310                           ;main.c: 57:     int i=0;
  2311  00230E  0E00               	movlw	0
  2312  002310  0100               	movlb	0	; () banked
  2313  002312  6FE4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2314  002314  0E00               	movlw	0
  2315  002316  6FE3               	movwf	PrintRXBuff@i& (0+255),b
  2316                           
  2317                           ;main.c: 59:     for(i=0; i< ByteNum ; i++ ){
  2318  002318  0E00               	movlw	0
  2319  00231A  6FE4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2320  00231C  0E00               	movlw	0
  2321  00231E  6FE3               	movwf	PrintRXBuff@i& (0+255),b
  2322  002320  EFAA  F011         	goto	l3548
  2323  002324                     l3544:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;main.c: 60:         printf("Byte %i. Val: 0x%02x \r\n", i, rxData[i]);
  2327  002324  0E01               	movlw	low STR_1
  2328  002326  6FD9               	movwf	printf@fmt& (0+255),b
  2329  002328  0E0F               	movlw	high STR_1
  2330  00232A  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  2331  00232C  C0E3  F0DB         	movff	PrintRXBuff@i,?_printf+2
  2332  002330  C0E4  F0DC         	movff	PrintRXBuff@i+1,?_printf+3
  2333  002334  0E00               	movlw	low _rxData
  2334  002336  25E3               	addwf	PrintRXBuff@i& (0+255),w,b
  2335  002338  6ED9               	movwf	fsr2l,c
  2336  00233A  0E01               	movlw	high _rxData
  2337  00233C  21E4               	addwfc	(PrintRXBuff@i+1)& (0+255),w,b
  2338  00233E  6EDA               	movwf	fsr2h,c
  2339  002340  50DF               	movf	indf2,w,c
  2340  002342  6E55               	movwf	??_PrintRXBuff^0,c
  2341  002344  5055               	movf	??_PrintRXBuff^0,w,c
  2342  002346  6FDD               	movwf	(?_printf+4)& (0+255),b
  2343  002348  6BDE               	clrf	(?_printf+5)& (0+255),b
  2344  00234A  EC2A  F014         	call	_printf	;wreg free
  2345  00234E                     
  2346                           ;main.c: 61:     }
  2347  00234E  0100               	movlb	0	; () banked
  2348  002350  4BE3               	infsnz	PrintRXBuff@i& (0+255),f,b
  2349  002352  2BE4               	incf	(PrintRXBuff@i+1)& (0+255),f,b
  2350  002354                     l3548:
  2351                           
  2352                           ; BSR set to: 0
  2353  002354  51AE               	movf	_ByteNum& (0+255),w,b
  2354  002356  5DE3               	subwf	PrintRXBuff@i& (0+255),w,b
  2355  002358  51E4               	movf	(PrintRXBuff@i+1)& (0+255),w,b
  2356  00235A  0A80               	xorlw	128
  2357  00235C  6E55               	movwf	??_PrintRXBuff^0,c
  2358  00235E  51AF               	movf	(_ByteNum+1)& (0+255),w,b
  2359  002360  0A80               	xorlw	128
  2360  002362  5855               	subwfb	??_PrintRXBuff^0,w,c
  2361  002364  A0D8               	btfss	status,0,c
  2362  002366  EFB7  F011         	goto	u2901
  2363  00236A  EFB9  F011         	goto	u2900
  2364  00236E                     u2901:
  2365  00236E  EF92  F011         	goto	l3544
  2366  002372                     u2900:
  2367  002372                     
  2368                           ; BSR set to: 0
  2369  002372  0012               	return		;funcret
  2370  002374                     __end_of_PrintRXBuff:
  2371                           	opt callstack 0
  2372                           
  2373 ;; *************** function _printf *****************
  2374 ;; Defined at:
  2375 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  2378 ;;		 -> STR_2(14), STR_1(24), 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  ap              2   35[BANK0 ] PTR void [1]
  2381 ;;		 -> ?_printf(2), 
  2382 ;;  ret             2    0        int 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2   27[BANK0 ] int 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;Total ram usage:       10 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:   12
  2399 ;; This function calls:
  2400 ;;		_vfprintf
  2401 ;; This function is called by:
  2402 ;;		_PrintRXBuff
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text20
  2408  002854                     __ptext20:
  2409                           	opt callstack 0
  2410  002854                     _printf:
  2411                           	opt callstack 18
  2412  002854  0EDB               	movlw	low (?_printf+2)
  2413  002856  0100               	movlb	0	; () banked
  2414  002858  6FE1               	movwf	printf@ap& (0+255),b
  2415  00285A  0E00               	movlw	high (?_printf+2)
  2416  00285C  6FE2               	movwf	(printf@ap+1)& (0+255),b
  2417  00285E                     
  2418                           ; BSR set to: 0
  2419  00285E  0E00               	movlw	0
  2420  002860  6FD3               	movwf	vfprintf@fp& (0+255),b
  2421  002862  0E00               	movlw	0
  2422  002864  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2423  002866  C0D9  F0D5         	movff	printf@fmt,vfprintf@fmt
  2424  00286A  C0DA  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  2425  00286E  0EE1               	movlw	low printf@ap
  2426  002870  6FD7               	movwf	vfprintf@ap& (0+255),b
  2427  002872  0E00               	movlw	high printf@ap
  2428  002874  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2429  002876  ECBA  F011         	call	_vfprintf	;wreg free
  2430  00287A  0012               	return		;funcret
  2431  00287C                     __end_of_printf:
  2432                           	opt callstack 0
  2433                           
  2434 ;; *************** function _vfprintf *****************
  2435 ;; Defined at:
  2436 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2439 ;;		 -> NULL(0), 
  2440 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2441 ;;		 -> STR_2(14), STR_1(24), 
  2442 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2443 ;;		 -> printf@ap(2), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2446 ;;		 -> STR_2(14), STR_1(24), 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2   21[BANK0 ] int 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2456 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2459 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2460 ;;Total ram usage:        8 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:   11
  2463 ;; This function calls:
  2464 ;;		_vfpfcnvrt
  2465 ;; This function is called by:
  2466 ;;		_printf
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text21
  2471  002374                     __ptext21:
  2472                           	opt callstack 0
  2473  002374                     _vfprintf:
  2474                           	opt callstack 18
  2475  002374                     
  2476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2477  002374  C0D5  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2478  002378  C0D6  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2479  00237C                     
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2481  00237C  0E00               	movlw	0
  2482  00237E  0100               	movlb	0	; () banked
  2483  002380  6FA9               	movwf	(_nout+1)& (0+255),b
  2484  002382  0E00               	movlw	0
  2485  002384  6FA8               	movwf	_nout& (0+255),b
  2486                           
  2487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2488  002386  EFD8  F011         	goto	l3534
  2489  00238A                     l3532:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2493  00238A  C0D3  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2494  00238E  C0D4  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2495  002392  0E53               	movlw	low vfprintf@cfmt
  2496  002394  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2497  002396  0E00               	movlw	high vfprintf@cfmt
  2498  002398  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2499  00239A  C0D7  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2500  00239E  C0D8  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2501  0023A2  EC94  F007         	call	_vfpfcnvrt	;wreg free
  2502  0023A6  5049               	movf	?_vfpfcnvrt^0,w,c
  2503  0023A8  0100               	movlb	0	; () banked
  2504  0023AA  27A8               	addwf	_nout& (0+255),f,b
  2505  0023AC  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2506  0023AE  23A9               	addwfc	(_nout+1)& (0+255),f,b
  2507  0023B0                     l3534:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2511  0023B0  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2512  0023B4  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2513  0023B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2514  0023B8  6AF8               	clrf	tblptru,c
  2515  0023BA                     	endif
  2516  0023BA                     	if	0	;tblptru may be non-zero
  2517  0023BA                     	endif
  2518  0023BA  0008               	tblrd		*
  2519  0023BC  50F5               	movf	tablat,w,c
  2520  0023BE  0900               	iorlw	0
  2521  0023C0  A4D8               	btfss	status,2,c
  2522  0023C2  EFE5  F011         	goto	u2891
  2523  0023C6  EFE7  F011         	goto	u2890
  2524  0023CA                     u2891:
  2525  0023CA  EFC5  F011         	goto	l3532
  2526  0023CE                     u2890:
  2527  0023CE                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2530  0023CE  C0A8  F0D3         	movff	_nout,?_vfprintf
  2531  0023D2  C0A9  F0D4         	movff	_nout+1,?_vfprintf+1
  2532  0023D6                     
  2533                           ; BSR set to: 0
  2534  0023D6  0012               	return		;funcret
  2535  0023D8                     __end_of_vfprintf:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _vfpfcnvrt *****************
  2539 ;; Defined at:
  2540 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2543 ;;		 -> NULL(0), 
  2544 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2545 ;;		 -> vfprintf@cfmt(2), 
  2546 ;;  ap              2   76[COMRAM] PTR PTR void 
  2547 ;;		 -> printf@ap(2), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  llu             8    8[BANK0 ] unsigned long long 
  2550 ;;  ll              8    0[BANK0 ] long long 
  2551 ;;  f               4    0        long long 
  2552 ;;  vp              3    0        PTR void 
  2553 ;;  ct              3    0        unsigned char [3]
  2554 ;;  cp              3    0        PTR unsigned char 
  2555 ;;  done            2   16[BANK0 ] int 
  2556 ;;  i               2    0        int 
  2557 ;;  c               1   20[BANK0 ] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  2   72[COMRAM] int 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2567 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;Total ram usage:       31 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:   10
  2574 ;; This function calls:
  2575 ;;		_atoi
  2576 ;;		_dtoa
  2577 ;;		_fputc
  2578 ;;		_isdigit
  2579 ;;		_xtoa
  2580 ;; This function is called by:
  2581 ;;		_vfprintf
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text22
  2586  000F28                     __ptext22:
  2587                           	opt callstack 0
  2588  000F28                     _vfpfcnvrt:
  2589                           	opt callstack 18
  2590  000F28                     
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2592  000F28  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2593  000F2C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2594  000F30  CFDE FFF6          	movff	postinc2,tblptrl
  2595  000F34  CFDD FFF7          	movff	postdec2,tblptrh
  2596  000F38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2597  000F38  6AF8               	clrf	tblptru,c
  2598  000F3A                     	endif
  2599  000F3A                     	if	0	;tblptru may be non-zero
  2600  000F3A                     	endif
  2601  000F3A  0008               	tblrd		*
  2602  000F3C  50F5               	movf	tablat,w,c
  2603  000F3E  0A25               	xorlw	37
  2604  000F40  A4D8               	btfss	status,2,c
  2605  000F42  EFA5  F007         	goto	u2281
  2606  000F46  EFA7  F007         	goto	u2280
  2607  000F4A                     u2281:
  2608  000F4A  EFAA  F009         	goto	l3060
  2609  000F4E                     u2280:
  2610  000F4E                     
  2611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2612  000F4E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2613  000F52  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2614  000F56  2ADE               	incf	postinc2,f,c
  2615  000F58  0E00               	movlw	0
  2616  000F5A  22DD               	addwfc	postdec2,f,c
  2617  000F5C                     
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2619  000F5C  0E00               	movlw	0
  2620  000F5E  0100               	movlb	0	; () banked
  2621  000F60  6FAB               	movwf	(_width+1)& (0+255),b
  2622  000F62  0E00               	movlw	0
  2623  000F64  6FAA               	movwf	_width& (0+255),b
  2624  000F66  C0AA  F057         	movff	_width,_flags
  2625  000F6A  C0AB  F058         	movff	_width+1,_flags+1
  2626  000F6E                     
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2629  000F6E  69AC               	setf	_prec& (0+255),b
  2630  000F70  69AD               	setf	(_prec+1)& (0+255),b
  2631  000F72                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2634  000F72  0E00               	movlw	0
  2635  000F74  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2636  000F76  0E00               	movlw	0
  2637  000F78  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2638                           
  2639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2640  000F7A  EF06  F008         	goto	l2998
  2641  000F7E                     l2972:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2645  000F7E  8057               	bsf	_flags^0,0,c
  2646  000F80                     l2974:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2650  000F80  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2651  000F84  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2652  000F88  2ADE               	incf	postinc2,f,c
  2653  000F8A  0E00               	movlw	0
  2654  000F8C  22DD               	addwfc	postdec2,f,c
  2655                           
  2656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2657  000F8E  EF06  F008         	goto	l2998
  2658  000F92                     l2976:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2662  000F92  8257               	bsf	_flags^0,1,c
  2663  000F94  EFC0  F007         	goto	l2974
  2664  000F98                     l2980:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2668  000F98  8457               	bsf	_flags^0,2,c
  2669  000F9A  EFC0  F007         	goto	l2974
  2670  000F9E                     l2984:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2674  000F9E  8657               	bsf	_flags^0,3,c
  2675  000FA0  EFC0  F007         	goto	l2974
  2676  000FA4                     l2988:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2680  000FA4  8857               	bsf	_flags^0,4,c
  2681  000FA6  EFC0  F007         	goto	l2974
  2682  000FAA                     l2992:
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2686  000FAA  0E00               	movlw	0
  2687  000FAC  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2688  000FAE  0E01               	movlw	1
  2689  000FB0  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2690                           
  2691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2692  000FB2  EF06  F008         	goto	l2998
  2693  000FB6                     l2996:
  2694                           
  2695                           ; BSR set to: 0
  2696  000FB6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2697  000FBA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2698  000FBE  CFDE FFF6          	movff	postinc2,tblptrl
  2699  000FC2  CFDD FFF7          	movff	postdec2,tblptrh
  2700  000FC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2701  000FC6  6AF8               	clrf	tblptru,c
  2702  000FC8                     	endif
  2703  000FC8                     	if	0	;tblptru may be non-zero
  2704  000FC8                     	endif
  2705  000FC8  0008               	tblrd		*
  2706  000FCA  50F5               	movf	tablat,w,c
  2707  000FCC  6E4F               	movwf	??_vfpfcnvrt^0,c
  2708  000FCE  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  2709                           
  2710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2711                           ; Switch size 1, requested type "simple"
  2712                           ; Number of cases is 1, Range of values is 0 to 0
  2713                           ; switch strategies available:
  2714                           ; Name         Instructions Cycles
  2715                           ; simple_byte            4     3 (average)
  2716                           ;	Chosen strategy is simple_byte
  2717  000FD0  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2718  000FD2  0A00               	xorlw	0	; case 0
  2719  000FD4  B4D8               	btfsc	status,2,c
  2720  000FD6  EFEF  F007         	goto	l3672
  2721  000FDA  EFD5  F007         	goto	l2992
  2722  000FDE                     l3672:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ; Switch size 1, requested type "simple"
  2726                           ; Number of cases is 5, Range of values is 32 to 48
  2727                           ; switch strategies available:
  2728                           ; Name         Instructions Cycles
  2729                           ; simple_byte           16     9 (average)
  2730                           ;	Chosen strategy is simple_byte
  2731  000FDE  504F               	movf	??_vfpfcnvrt^0,w,c
  2732  000FE0  0A20               	xorlw	32	; case 32
  2733  000FE2  B4D8               	btfsc	status,2,c
  2734  000FE4  EFCF  F007         	goto	l2984
  2735  000FE8  0A03               	xorlw	3	; case 35
  2736  000FEA  B4D8               	btfsc	status,2,c
  2737  000FEC  EFD2  F007         	goto	l2988
  2738  000FF0  0A08               	xorlw	8	; case 43
  2739  000FF2  B4D8               	btfsc	status,2,c
  2740  000FF4  EFCC  F007         	goto	l2980
  2741  000FF8  0A06               	xorlw	6	; case 45
  2742  000FFA  B4D8               	btfsc	status,2,c
  2743  000FFC  EFBF  F007         	goto	l2972
  2744  001000  0A1D               	xorlw	29	; case 48
  2745  001002  B4D8               	btfsc	status,2,c
  2746  001004  EFC9  F007         	goto	l2976
  2747  001008  EFD5  F007         	goto	l2992
  2748  00100C                     l2998:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2752  00100C  51CE               	movf	vfpfcnvrt@done& (0+255),w,b
  2753  00100E  11CF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2754  001010  B4D8               	btfsc	status,2,c
  2755  001012  EF0D  F008         	goto	u2291
  2756  001016  EF0F  F008         	goto	u2290
  2757  00101A                     u2291:
  2758  00101A  EFDB  F007         	goto	l2996
  2759  00101E                     u2290:
  2760  00101E                     
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2763  00101E  A057               	btfss	_flags^0,0,c
  2764  001020  EF14  F008         	goto	u2301
  2765  001024  EF16  F008         	goto	u2300
  2766  001028                     u2301:
  2767  001028  EF17  F008         	goto	l3002
  2768  00102C                     u2300:
  2769  00102C                     
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2772  00102C  9257               	bcf	_flags^0,1,c
  2773  00102E                     l3002:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2777  00102E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2778  001032  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2779  001036  CFDE FFF6          	movff	postinc2,tblptrl
  2780  00103A  CFDD FFF7          	movff	postdec2,tblptrh
  2781  00103E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2782  00103E  6AF8               	clrf	tblptru,c
  2783  001040                     	endif
  2784  001040                     	if	0	;tblptru may be non-zero
  2785  001040                     	endif
  2786  001040  0008               	tblrd		*
  2787  001042  50F5               	movf	tablat,w,c
  2788  001044  0A2A               	xorlw	42
  2789  001046  A4D8               	btfss	status,2,c
  2790  001048  EF28  F008         	goto	u2311
  2791  00104C  EF2A  F008         	goto	u2310
  2792  001050                     u2311:
  2793  001050  EF53  F008         	goto	l3010
  2794  001054                     u2310:
  2795  001054                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2798  001054  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2799  001058  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2800  00105C  2ADE               	incf	postinc2,f,c
  2801  00105E  0E00               	movlw	0
  2802  001060  22DD               	addwfc	postdec2,f,c
  2803                           
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2805  001062  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2806  001066  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2807  00106A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2808  00106E  0E02               	movlw	2
  2809  001070  26DE               	addwf	postinc2,f,c
  2810  001072  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2811  001076  0E00               	movlw	0
  2812  001078  22DD               	addwfc	postdec2,f,c
  2813  00107A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2814  00107E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2815  001082  CFDE F0AA          	movff	postinc2,_width
  2816  001086  CFDD F0AB          	movff	postdec2,_width+1
  2817  00108A                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2820  00108A  BFAB               	btfsc	(_width+1)& (0+255),7,b
  2821  00108C  EF4C  F008         	goto	u2320
  2822  001090  EF4A  F008         	goto	u2321
  2823  001094                     u2321:
  2824  001094  EF98  F008         	goto	l3020
  2825  001098                     u2320:
  2826  001098                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2829  001098  8057               	bsf	_flags^0,0,c
  2830                           
  2831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2832  00109A  6DAA               	negf	_width& (0+255),b
  2833  00109C  1FAB               	comf	(_width+1)& (0+255),f,b
  2834  00109E  B0D8               	btfsc	status,0,c
  2835  0010A0  2BAB               	incf	(_width+1)& (0+255),f,b
  2836  0010A2  EF98  F008         	goto	l3020
  2837  0010A6                     l3010:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2841  0010A6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2842  0010AA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2843  0010AE  CFDE F00C          	movff	postinc2,atoi@s
  2844  0010B2  CFDD F00D          	movff	postdec2,atoi@s+1
  2845  0010B6  ECA2  F00C         	call	_atoi	;wreg free
  2846  0010BA  C00C  F0AA         	movff	?_atoi,_width
  2847  0010BE  C00D  F0AB         	movff	?_atoi+1,_width+1
  2848                           
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2850  0010C2  EF6A  F008         	goto	l3014
  2851  0010C6                     l3012:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2855  0010C6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2856  0010CA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2857  0010CE  2ADE               	incf	postinc2,f,c
  2858  0010D0  0E00               	movlw	0
  2859  0010D2  22DD               	addwfc	postdec2,f,c
  2860  0010D4                     l3014:
  2861  0010D4  0ED0               	movlw	208
  2862  0010D6  6E4F               	movwf	??_vfpfcnvrt^0,c
  2863  0010D8  0EFF               	movlw	255
  2864  0010DA  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2865  0010DC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2866  0010E0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2867  0010E4  CFDE FFF6          	movff	postinc2,tblptrl
  2868  0010E8  CFDD FFF7          	movff	postdec2,tblptrh
  2869  0010EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2870  0010EC  6AF8               	clrf	tblptru,c
  2871  0010EE                     	endif
  2872  0010EE                     	if	0	;tblptru may be non-zero
  2873  0010EE                     	endif
  2874  0010EE  0008               	tblrd		*
  2875  0010F0  50F5               	movf	tablat,w,c
  2876  0010F2  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2877  0010F4  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2878  0010F6  504F               	movf	??_vfpfcnvrt^0,w,c
  2879  0010F8  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2880  0010FA  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2881  0010FC  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2882  0010FE  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2883  001100  E10A               	bnz	u2330
  2884  001102  0E0A               	movlw	10
  2885  001104  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2886  001106  A0D8               	btfss	status,0,c
  2887  001108  EF88  F008         	goto	u2331
  2888  00110C  EF8B  F008         	goto	u2330
  2889  001110                     u2331:
  2890  001110  0E01               	movlw	1
  2891  001112  EF8C  F008         	goto	u2340
  2892  001116                     u2330:
  2893  001116  0E00               	movlw	0
  2894  001118                     u2340:
  2895  001118  0100               	movlb	0	; () banked
  2896  00111A  6FD0               	movwf	_vfpfcnvrt$1234& (0+255),b
  2897  00111C  6BD1               	clrf	(_vfpfcnvrt$1234+1)& (0+255),b
  2898  00111E                     
  2899                           ; BSR set to: 0
  2900  00111E  51D0               	movf	_vfpfcnvrt$1234& (0+255),w,b
  2901  001120  11D1               	iorwf	(_vfpfcnvrt$1234+1)& (0+255),w,b
  2902  001122  A4D8               	btfss	status,2,c
  2903  001124  EF96  F008         	goto	u2351
  2904  001128  EF98  F008         	goto	u2350
  2905  00112C                     u2351:
  2906  00112C  EF63  F008         	goto	l3012
  2907  001130                     u2350:
  2908  001130                     l3020:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2912  001130  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2913  001134  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2914  001138  CFDE FFF6          	movff	postinc2,tblptrl
  2915  00113C  CFDD FFF7          	movff	postdec2,tblptrh
  2916  001140                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2917  001140  6AF8               	clrf	tblptru,c
  2918  001142                     	endif
  2919  001142                     	if	0	;tblptru may be non-zero
  2920  001142                     	endif
  2921  001142  0008               	tblrd		*
  2922  001144  50F5               	movf	tablat,w,c
  2923  001146  0A64               	xorlw	100
  2924  001148  B4D8               	btfsc	status,2,c
  2925  00114A  EFA9  F008         	goto	u2361
  2926  00114E  EFAB  F008         	goto	u2360
  2927  001152                     u2361:
  2928  001152  EFBE  F008         	goto	l3024
  2929  001156                     u2360:
  2930  001156                     
  2931                           ; BSR set to: 0
  2932  001156  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2933  00115A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2934  00115E  CFDE FFF6          	movff	postinc2,tblptrl
  2935  001162  CFDD FFF7          	movff	postdec2,tblptrh
  2936  001166                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2937  001166  6AF8               	clrf	tblptru,c
  2938  001168                     	endif
  2939  001168                     	if	0	;tblptru may be non-zero
  2940  001168                     	endif
  2941  001168  0008               	tblrd		*
  2942  00116A  50F5               	movf	tablat,w,c
  2943  00116C  0A69               	xorlw	105
  2944  00116E  A4D8               	btfss	status,2,c
  2945  001170  EFBC  F008         	goto	u2371
  2946  001174  EFBE  F008         	goto	u2370
  2947  001178                     u2371:
  2948  001178  EFFE  F008         	goto	l3030
  2949  00117C                     u2370:
  2950  00117C                     l3024:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2954  00117C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2955  001180  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  001184  2ADE               	incf	postinc2,f,c
  2957  001186  0E00               	movlw	0
  2958  001188  22DD               	addwfc	postdec2,f,c
  2959                           
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2961  00118A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2962  00118E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2963  001192  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2964  001196  0E02               	movlw	2
  2965  001198  26DE               	addwf	postinc2,f,c
  2966  00119A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2967  00119E  0E00               	movlw	0
  2968  0011A0  22DD               	addwfc	postdec2,f,c
  2969  0011A2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2970  0011A6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2971  0011AA  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2972  0011AE  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2973  0011B2  0E00               	movlw	0
  2974  0011B4  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2975  0011B6  0EFF               	movlw	-1
  2976  0011B8  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2977  0011BA  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2978  0011BC  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2979  0011BE  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2980  0011C0  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2981  0011C2  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2982  0011C4                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2985  0011C4  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  2986  0011C8  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2987  0011CC  C0BE  F024         	movff	vfpfcnvrt@ll,dtoa@d
  2988  0011D0  C0BF  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2989  0011D4  C0C0  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2990  0011D8  C0C1  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2991  0011DC  C0C2  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2992  0011E0  C0C3  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2993  0011E4  C0C4  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2994  0011E8  C0C5  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2995  0011EC  ECC7  F009         	call	_dtoa	;wreg free
  2996  0011F0  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  2997  0011F4  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2998  0011F8  EFC6  F009         	goto	l728
  2999  0011FC                     l3030:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3003  0011FC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3004  001200  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3005  001204  CFDE FFF6          	movff	postinc2,tblptrl
  3006  001208  CFDD FFF7          	movff	postdec2,tblptrh
  3007  00120C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3008  00120C  6AF8               	clrf	tblptru,c
  3009  00120E                     	endif
  3010  00120E                     	if	0	;tblptru may be non-zero
  3011  00120E                     	endif
  3012  00120E  0008               	tblrd		*
  3013  001210  50F5               	movf	tablat,w,c
  3014  001212  0A78               	xorlw	120
  3015  001214  B4D8               	btfsc	status,2,c
  3016  001216  EF0F  F009         	goto	u2381
  3017  00121A  EF11  F009         	goto	u2380
  3018  00121E                     u2381:
  3019  00121E  EF24  F009         	goto	l3034
  3020  001222                     u2380:
  3021  001222                     
  3022                           ; BSR set to: 0
  3023  001222  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3024  001226  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3025  00122A  CFDE FFF6          	movff	postinc2,tblptrl
  3026  00122E  CFDD FFF7          	movff	postdec2,tblptrh
  3027  001232                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3028  001232  6AF8               	clrf	tblptru,c
  3029  001234                     	endif
  3030  001234                     	if	0	;tblptru may be non-zero
  3031  001234                     	endif
  3032  001234  0008               	tblrd		*
  3033  001236  50F5               	movf	tablat,w,c
  3034  001238  0A58               	xorlw	88
  3035  00123A  A4D8               	btfss	status,2,c
  3036  00123C  EF22  F009         	goto	u2391
  3037  001240  EF24  F009         	goto	u2390
  3038  001244                     u2391:
  3039  001244  EF73  F009         	goto	l3044
  3040  001248                     u2390:
  3041  001248                     l3034:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3045  001248  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046  00124C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047  001250  CFDE FFF6          	movff	postinc2,tblptrl
  3048  001254  CFDD FFF7          	movff	postdec2,tblptrh
  3049  001258                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3050  001258  6AF8               	clrf	tblptru,c
  3051  00125A                     	endif
  3052  00125A                     	if	0	;tblptru may be non-zero
  3053  00125A                     	endif
  3054  00125A  0008               	tblrd		*
  3055  00125C  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  3056  001260                     
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3059  001260  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3060  001264  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3061  001268  2ADE               	incf	postinc2,f,c
  3062  00126A  0E00               	movlw	0
  3063  00126C  22DD               	addwfc	postdec2,f,c
  3064  00126E                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3067  00126E  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3068  001272  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3069  001276  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3070  00127A  0E02               	movlw	2
  3071  00127C  26DE               	addwf	postinc2,f,c
  3072  00127E  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3073  001282  0E00               	movlw	0
  3074  001284  22DD               	addwfc	postdec2,f,c
  3075  001286  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3076  00128A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3077  00128E  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3078  001292  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3079  001296  C051  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3080  00129A  C052  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3081  00129E  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3082  0012A0  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3083  0012A2  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3084  0012A4  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3085  0012A6  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3086  0012A8  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3087  0012AA                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3090  0012AA  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3091  0012AE  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3092  0012B2  C0C6  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3093  0012B6  C0C7  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3094  0012BA  C0C8  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3095  0012BE  C0C9  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3096  0012C2  C0CA  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3097  0012C6  C0CB  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3098  0012CA  C0CC  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3099  0012CE  C0CD  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3100  0012D2  C0D2  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3101  0012D6  EC37  F00B         	call	_xtoa	;wreg free
  3102  0012DA  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3103  0012DE  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3104  0012E2  EFC6  F009         	goto	l728
  3105  0012E6                     l3044:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3109  0012E6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3110  0012EA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3111  0012EE  CFDE FFF6          	movff	postinc2,tblptrl
  3112  0012F2  CFDD FFF7          	movff	postdec2,tblptrh
  3113  0012F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3114  0012F6  6AF8               	clrf	tblptru,c
  3115  0012F8                     	endif
  3116  0012F8                     	if	0	;tblptru may be non-zero
  3117  0012F8                     	endif
  3118  0012F8  0008               	tblrd		*
  3119  0012FA  50F5               	movf	tablat,w,c
  3120  0012FC  0A25               	xorlw	37
  3121  0012FE  A4D8               	btfss	status,2,c
  3122  001300  EF84  F009         	goto	u2401
  3123  001304  EF86  F009         	goto	u2400
  3124  001308                     u2401:
  3125  001308  EF9D  F009         	goto	l3054
  3126  00130C                     u2400:
  3127  00130C                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3130  00130C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3131  001310  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3132  001314  2ADE               	incf	postinc2,f,c
  3133  001316  0E00               	movlw	0
  3134  001318  22DD               	addwfc	postdec2,f,c
  3135  00131A                     
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3138  00131A  0E00               	movlw	0
  3139  00131C  6E08               	movwf	(fputc@c+1)^0,c
  3140  00131E  0E25               	movlw	37
  3141  001320  6E07               	movwf	fputc@c^0,c
  3142  001322  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3143  001326  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3144  00132A  EC78  F010         	call	_fputc	;wreg free
  3145  00132E                     l3050:
  3146                           
  3147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3148  00132E  0E00               	movlw	0
  3149  001330  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3150  001332  0E01               	movlw	1
  3151  001334  6E49               	movwf	?_vfpfcnvrt^0,c
  3152  001336  EFC6  F009         	goto	l728
  3153  00133A                     l3054:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3157  00133A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3158  00133E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3159  001342  2ADE               	incf	postinc2,f,c
  3160  001344  0E00               	movlw	0
  3161  001346  22DD               	addwfc	postdec2,f,c
  3162  001348                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3165  001348  0E00               	movlw	0
  3166  00134A  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3167  00134C  0E00               	movlw	0
  3168  00134E  6E49               	movwf	?_vfpfcnvrt^0,c
  3169  001350  EFC6  F009         	goto	l728
  3170  001354                     l3060:
  3171                           
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3173  001354  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3174  001358  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3175  00135C  CFDE FFF6          	movff	postinc2,tblptrl
  3176  001360  CFDD FFF7          	movff	postdec2,tblptrh
  3177  001364                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3178  001364  6AF8               	clrf	tblptru,c
  3179  001366                     	endif
  3180  001366                     	if	0	;tblptru may be non-zero
  3181  001366                     	endif
  3182  001366  0008               	tblrd		*
  3183  001368  50F5               	movf	tablat,w,c
  3184  00136A  6E07               	movwf	fputc@c^0,c
  3185  00136C  6A08               	clrf	(fputc@c+1)^0,c
  3186  00136E  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3187  001372  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3188  001376  EC78  F010         	call	_fputc	;wreg free
  3189  00137A                     
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3191  00137A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3192  00137E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3193  001382  2ADE               	incf	postinc2,f,c
  3194  001384  0E00               	movlw	0
  3195  001386  22DD               	addwfc	postdec2,f,c
  3196  001388  EF97  F009         	goto	l3050
  3197  00138C                     l728:
  3198  00138C  0012               	return		;funcret
  3199  00138E                     __end_of_vfpfcnvrt:
  3200                           	opt callstack 0
  3201                           
  3202 ;; *************** function _xtoa *****************
  3203 ;; Defined at:
  3204 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3207 ;;		 -> NULL(0), 
  3208 ;;  d               8   35[COMRAM] unsigned long long 
  3209 ;;  x               1   43[COMRAM] unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  n               8   60[COMRAM] unsigned long long 
  3212 ;;  c               2   70[COMRAM] int 
  3213 ;;  i               2   68[COMRAM] int 
  3214 ;;  w               2   58[COMRAM] int 
  3215 ;;  p               2   56[COMRAM] int 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  2   33[COMRAM] int 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3225 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3228 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3229 ;;Total ram usage:       39 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    9
  3232 ;; This function calls:
  3233 ;;		_isalpha
  3234 ;;		_isupper
  3235 ;;		_pad
  3236 ;;		_toupper
  3237 ;; This function is called by:
  3238 ;;		_vfpfcnvrt
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text23
  3243  00166E                     __ptext23:
  3244                           	opt callstack 0
  3245  00166E                     _xtoa:
  3246                           	opt callstack 18
  3247  00166E                     
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3249  00166E  0100               	movlb	0	; () banked
  3250  001670  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3251  001672  EF3D  F00B         	goto	u2041
  3252  001676  EF3F  F00B         	goto	u2040
  3253  00167A                     u2041:
  3254  00167A  EF40  F00B         	goto	l2858
  3255  00167E                     u2040:
  3256  00167E                     
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3259  00167E  9257               	bcf	_flags^0,1,c
  3260  001680                     l2858:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3264  001680  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3265  001682  EF4D  F00B         	goto	u2050
  3266  001686  51AD               	movf	(_prec+1)& (0+255),w,b
  3267  001688  E106               	bnz	u2051
  3268  00168A  05AC               	decf	_prec& (0+255),w,b
  3269  00168C  B0D8               	btfsc	status,0,c
  3270  00168E  EF4B  F00B         	goto	u2051
  3271  001692  EF4D  F00B         	goto	u2050
  3272  001696                     u2051:
  3273  001696  EF53  F00B         	goto	l674
  3274  00169A                     u2050:
  3275  00169A                     
  3276                           ; BSR set to: 0
  3277  00169A  0E00               	movlw	0
  3278  00169C  6E3A               	movwf	(xtoa@p+1)^0,c
  3279  00169E  0E01               	movlw	1
  3280  0016A0  6E39               	movwf	xtoa@p^0,c
  3281  0016A2  EF57  F00B         	goto	l676
  3282  0016A6                     l674:
  3283                           
  3284                           ; BSR set to: 0
  3285  0016A6  C0AC  F039         	movff	_prec,xtoa@p
  3286  0016AA  C0AD  F03A         	movff	_prec+1,xtoa@p+1
  3287  0016AE                     l676:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3291  0016AE  C0AA  F03B         	movff	_width,xtoa@w
  3292  0016B2  C0AB  F03C         	movff	_width+1,xtoa@w+1
  3293                           
  3294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3295  0016B6  A857               	btfss	_flags^0,4,c
  3296  0016B8  EF60  F00B         	goto	u2061
  3297  0016BC  EF62  F00B         	goto	u2060
  3298  0016C0                     u2061:
  3299  0016C0  EF66  F00B         	goto	l2864
  3300  0016C4                     u2060:
  3301  0016C4                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3304  0016C4  0EFE               	movlw	254
  3305  0016C6  263B               	addwf	xtoa@w^0,f,c
  3306  0016C8  0EFF               	movlw	255
  3307  0016CA  223C               	addwfc	(xtoa@w+1)^0,f,c
  3308  0016CC                     l2864:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3312  0016CC  C024  F03D         	movff	xtoa@d,xtoa@n
  3313  0016D0  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3314  0016D4  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3315  0016D8  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3316  0016DC  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3317  0016E0  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3318  0016E4  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3319  0016E8  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3320  0016EC                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3323  0016EC  0E00               	movlw	0
  3324  0016EE  6E46               	movwf	(xtoa@i+1)^0,c
  3325  0016F0  0E1F               	movlw	31
  3326  0016F2  6E45               	movwf	xtoa@i^0,c
  3327  0016F4                     
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3330  0016F4  0E00               	movlw	0
  3331  0016F6  0101               	movlb	1	; () banked
  3332  0016F8  6F83               	movwf	(_dbuf+31)& (0+255),b
  3333                           
  3334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3335  0016FA  EF32  F00C         	goto	l2900
  3336  0016FE                     l2870:
  3337                           
  3338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3339  0016FE  0645               	decf	xtoa@i^0,f,c
  3340  001700  A0D8               	btfss	status,0,c
  3341  001702  0646               	decf	(xtoa@i+1)^0,f,c
  3342  001704                     
  3343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3344  001704  0E0F               	movlw	15
  3345  001706  143D               	andwf	xtoa@n^0,w,c
  3346  001708  6E47               	movwf	xtoa@c^0,c
  3347  00170A  6A48               	clrf	(xtoa@c+1)^0,c
  3348  00170C                     
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3350  00170C  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3351  00170E  EF92  F00B         	goto	u2071
  3352  001712  5048               	movf	(xtoa@c+1)^0,w,c
  3353  001714  E109               	bnz	u2070
  3354  001716  0E0A               	movlw	10
  3355  001718  5C47               	subwf	xtoa@c^0,w,c
  3356  00171A  A0D8               	btfss	status,0,c
  3357  00171C  EF92  F00B         	goto	u2071
  3358  001720  EF94  F00B         	goto	u2070
  3359  001724                     u2071:
  3360  001724  EF9C  F00B         	goto	l2878
  3361  001728                     u2070:
  3362  001728  0E57               	movlw	87
  3363  00172A  2447               	addwf	xtoa@c^0,w,c
  3364  00172C  6E47               	movwf	xtoa@c^0,c
  3365  00172E  0E00               	movlw	0
  3366  001730  2048               	addwfc	(xtoa@c+1)^0,w,c
  3367  001732  6E48               	movwf	(xtoa@c+1)^0,c
  3368  001734  EFA2  F00B         	goto	l683
  3369  001738                     l2878:
  3370  001738  0E30               	movlw	48
  3371  00173A  2447               	addwf	xtoa@c^0,w,c
  3372  00173C  6E47               	movwf	xtoa@c^0,c
  3373  00173E  0E00               	movlw	0
  3374  001740  2048               	addwfc	(xtoa@c+1)^0,w,c
  3375  001742  6E48               	movwf	(xtoa@c+1)^0,c
  3376  001744                     l683:
  3377  001744  0EBF               	movlw	191
  3378  001746  6E2D               	movwf	??_xtoa^0,c
  3379  001748  0EFF               	movlw	255
  3380  00174A  6E2E               	movwf	(??_xtoa+1)^0,c
  3381  00174C  502C               	movf	xtoa@x^0,w,c
  3382  00174E  6E2F               	movwf	(??_xtoa+2)^0,c
  3383  001750  6A30               	clrf	(??_xtoa+3)^0,c
  3384  001752  502D               	movf	??_xtoa^0,w,c
  3385  001754  262F               	addwf	(??_xtoa+2)^0,f,c
  3386  001756  502E               	movf	(??_xtoa+1)^0,w,c
  3387  001758  2230               	addwfc	(??_xtoa+3)^0,f,c
  3388  00175A  5030               	movf	(??_xtoa+3)^0,w,c
  3389  00175C  E10A               	bnz	u2080
  3390  00175E  0E1A               	movlw	26
  3391  001760  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3392  001762  A0D8               	btfss	status,0,c
  3393  001764  EFB6  F00B         	goto	u2081
  3394  001768  EFB9  F00B         	goto	u2080
  3395  00176C                     u2081:
  3396  00176C  0E01               	movlw	1
  3397  00176E  EFBA  F00B         	goto	u2090
  3398  001772                     u2080:
  3399  001772  0E00               	movlw	0
  3400  001774                     u2090:
  3401  001774  6E35               	movwf	_xtoa$1219^0,c
  3402  001776  6A36               	clrf	(_xtoa$1219+1)^0,c
  3403  001778  5035               	movf	_xtoa$1219^0,w,c
  3404  00177A  1036               	iorwf	(_xtoa$1219+1)^0,w,c
  3405  00177C  B4D8               	btfsc	status,2,c
  3406  00177E  EFC3  F00B         	goto	u2101
  3407  001782  EFC5  F00B         	goto	u2100
  3408  001786                     u2101:
  3409  001786  EFF5  F00B         	goto	l2892
  3410  00178A                     u2100:
  3411  00178A  0E9F               	movlw	159
  3412  00178C  6E2D               	movwf	??_xtoa^0,c
  3413  00178E  0EFF               	movlw	255
  3414  001790  6E2E               	movwf	(??_xtoa+1)^0,c
  3415  001792  0E20               	movlw	32
  3416  001794  1047               	iorwf	xtoa@c^0,w,c
  3417  001796  6E2F               	movwf	(??_xtoa+2)^0,c
  3418  001798  0E00               	movlw	0
  3419  00179A  1048               	iorwf	(xtoa@c+1)^0,w,c
  3420  00179C  6E30               	movwf	(??_xtoa+3)^0,c
  3421  00179E  502D               	movf	??_xtoa^0,w,c
  3422  0017A0  262F               	addwf	(??_xtoa+2)^0,f,c
  3423  0017A2  502E               	movf	(??_xtoa+1)^0,w,c
  3424  0017A4  2230               	addwfc	(??_xtoa+3)^0,f,c
  3425  0017A6  5030               	movf	(??_xtoa+3)^0,w,c
  3426  0017A8  E10A               	bnz	u2110
  3427  0017AA  0E1A               	movlw	26
  3428  0017AC  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3429  0017AE  A0D8               	btfss	status,0,c
  3430  0017B0  EFDC  F00B         	goto	u2111
  3431  0017B4  EFDF  F00B         	goto	u2110
  3432  0017B8                     u2111:
  3433  0017B8  0E01               	movlw	1
  3434  0017BA  EFE0  F00B         	goto	u2120
  3435  0017BE                     u2110:
  3436  0017BE  0E00               	movlw	0
  3437  0017C0                     u2120:
  3438  0017C0  6E37               	movwf	_xtoa$1220^0,c
  3439  0017C2  6A38               	clrf	(_xtoa$1220+1)^0,c
  3440  0017C4  5037               	movf	_xtoa$1220^0,w,c
  3441  0017C6  1038               	iorwf	(_xtoa$1220+1)^0,w,c
  3442  0017C8  B4D8               	btfsc	status,2,c
  3443  0017CA  EFE9  F00B         	goto	u2131
  3444  0017CE  EFEB  F00B         	goto	u2130
  3445  0017D2                     u2131:
  3446  0017D2  EFF5  F00B         	goto	l2892
  3447  0017D6                     u2130:
  3448  0017D6                     
  3449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3450  0017D6  C047  F00B         	movff	xtoa@c,toupper@c
  3451  0017DA  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3452  0017DE  ECEC  F011         	call	_toupper	;wreg free
  3453  0017E2  C00B  F047         	movff	?_toupper,xtoa@c
  3454  0017E6  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3455  0017EA                     l2892:
  3456                           
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3458  0017EA  0E64               	movlw	low _dbuf
  3459  0017EC  2445               	addwf	xtoa@i^0,w,c
  3460  0017EE  6ED9               	movwf	fsr2l,c
  3461  0017F0  0E01               	movlw	high _dbuf
  3462  0017F2  2046               	addwfc	(xtoa@i+1)^0,w,c
  3463  0017F4  6EDA               	movwf	fsr2h,c
  3464  0017F6  C047  FFDF         	movff	xtoa@c,indf2
  3465  0017FA                     
  3466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3467  0017FA  0639               	decf	xtoa@p^0,f,c
  3468  0017FC  A0D8               	btfss	status,0,c
  3469  0017FE  063A               	decf	(xtoa@p+1)^0,f,c
  3470  001800                     
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3472  001800  063B               	decf	xtoa@w^0,f,c
  3473  001802  A0D8               	btfss	status,0,c
  3474  001804  063C               	decf	(xtoa@w+1)^0,f,c
  3475  001806                     
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3477  001806  C03D  F02D         	movff	xtoa@n,??_xtoa
  3478  00180A  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3479  00180E  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3480  001812  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3481  001816  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3482  00181A  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3483  00181E  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3484  001822  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3485  001826  0E05               	movlw	5
  3486  001828  EF1F  F00C         	goto	u2140
  3487  00182C                     u2145:
  3488  00182C  90D8               	bcf	status,0,c
  3489  00182E  3234               	rrcf	(??_xtoa+7)^0,f,c
  3490  001830  3233               	rrcf	(??_xtoa+6)^0,f,c
  3491  001832  3232               	rrcf	(??_xtoa+5)^0,f,c
  3492  001834  3231               	rrcf	(??_xtoa+4)^0,f,c
  3493  001836  3230               	rrcf	(??_xtoa+3)^0,f,c
  3494  001838  322F               	rrcf	(??_xtoa+2)^0,f,c
  3495  00183A  322E               	rrcf	(??_xtoa+1)^0,f,c
  3496  00183C  322D               	rrcf	??_xtoa^0,f,c
  3497  00183E                     u2140:
  3498  00183E  2EE8               	decfsz	wreg,f,c
  3499  001840  EF16  F00C         	goto	u2145
  3500  001844  C02D  F03D         	movff	??_xtoa,xtoa@n
  3501  001848  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3502  00184C  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3503  001850  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3504  001854  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3505  001858  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3506  00185C  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3507  001860  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3508  001864                     l2900:
  3509                           
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3511  001864  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3512  001866  EF3E  F00C         	goto	u2151
  3513  00186A  5046               	movf	(xtoa@i+1)^0,w,c
  3514  00186C  E109               	bnz	u2150
  3515  00186E  0E02               	movlw	2
  3516  001870  5C45               	subwf	xtoa@i^0,w,c
  3517  001872  A0D8               	btfss	status,0,c
  3518  001874  EF3E  F00C         	goto	u2151
  3519  001878  EF40  F00C         	goto	u2150
  3520  00187C                     u2151:
  3521  00187C  EF70  F00C         	goto	l697
  3522  001880                     u2150:
  3523  001880  503D               	movf	xtoa@n^0,w,c
  3524  001882  103E               	iorwf	(xtoa@n+1)^0,w,c
  3525  001884  103F               	iorwf	(xtoa@n+2)^0,w,c
  3526  001886  1040               	iorwf	(xtoa@n+3)^0,w,c
  3527  001888  1041               	iorwf	(xtoa@n+4)^0,w,c
  3528  00188A  1042               	iorwf	(xtoa@n+5)^0,w,c
  3529  00188C  1043               	iorwf	(xtoa@n+6)^0,w,c
  3530  00188E  1044               	iorwf	(xtoa@n+7)^0,w,c
  3531  001890  A4D8               	btfss	status,2,c
  3532  001892  EF4D  F00C         	goto	u2161
  3533  001896  EF4F  F00C         	goto	u2160
  3534  00189A                     u2161:
  3535  00189A  EF7F  F00B         	goto	l2870
  3536  00189E                     u2160:
  3537  00189E  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3538  0018A0  EF5C  F00C         	goto	u2170
  3539  0018A4  503A               	movf	(xtoa@p+1)^0,w,c
  3540  0018A6  E106               	bnz	u2171
  3541  0018A8  0439               	decf	xtoa@p^0,w,c
  3542  0018AA  B0D8               	btfsc	status,0,c
  3543  0018AC  EF5A  F00C         	goto	u2171
  3544  0018B0  EF5C  F00C         	goto	u2170
  3545  0018B4                     u2171:
  3546  0018B4  EF7F  F00B         	goto	l2870
  3547  0018B8                     u2170:
  3548  0018B8  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3549  0018BA  EF67  F00C         	goto	u2181
  3550  0018BE  503C               	movf	(xtoa@w+1)^0,w,c
  3551  0018C0  E108               	bnz	u2180
  3552  0018C2  043B               	decf	xtoa@w^0,w,c
  3553  0018C4  A0D8               	btfss	status,0,c
  3554  0018C6  EF67  F00C         	goto	u2181
  3555  0018CA  EF69  F00C         	goto	u2180
  3556  0018CE                     u2181:
  3557  0018CE  EF70  F00C         	goto	l697
  3558  0018D2                     u2180:
  3559  0018D2  B257               	btfsc	_flags^0,1,c
  3560  0018D4  EF6E  F00C         	goto	u2191
  3561  0018D8  EF70  F00C         	goto	u2190
  3562  0018DC                     u2191:
  3563  0018DC  EF7F  F00B         	goto	l2870
  3564  0018E0                     u2190:
  3565  0018E0                     l697:
  3566                           
  3567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3568  0018E0  A857               	btfss	_flags^0,4,c
  3569  0018E2  EF75  F00C         	goto	u2201
  3570  0018E6  EF77  F00C         	goto	u2200
  3571  0018EA                     u2201:
  3572  0018EA  EF8D  F00C         	goto	l2916
  3573  0018EE                     u2200:
  3574  0018EE                     
  3575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3576  0018EE  0645               	decf	xtoa@i^0,f,c
  3577  0018F0  A0D8               	btfss	status,0,c
  3578  0018F2  0646               	decf	(xtoa@i+1)^0,f,c
  3579  0018F4                     
  3580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3581  0018F4  0E64               	movlw	low _dbuf
  3582  0018F6  2445               	addwf	xtoa@i^0,w,c
  3583  0018F8  6ED9               	movwf	fsr2l,c
  3584  0018FA  0E01               	movlw	high _dbuf
  3585  0018FC  2046               	addwfc	(xtoa@i+1)^0,w,c
  3586  0018FE  6EDA               	movwf	fsr2h,c
  3587  001900  C02C  FFDF         	movff	xtoa@x,indf2
  3588  001904                     
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3590  001904  0645               	decf	xtoa@i^0,f,c
  3591  001906  A0D8               	btfss	status,0,c
  3592  001908  0646               	decf	(xtoa@i+1)^0,f,c
  3593                           
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3595  00190A  0E64               	movlw	low _dbuf
  3596  00190C  2445               	addwf	xtoa@i^0,w,c
  3597  00190E  6ED9               	movwf	fsr2l,c
  3598  001910  0E01               	movlw	high _dbuf
  3599  001912  2046               	addwfc	(xtoa@i+1)^0,w,c
  3600  001914  6EDA               	movwf	fsr2h,c
  3601  001916  0E30               	movlw	48
  3602  001918  6EDF               	movwf	indf2,c
  3603  00191A                     l2916:
  3604                           
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3606  00191A  C022  F017         	movff	xtoa@fp,pad@fp
  3607  00191E  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3608  001922  0E64               	movlw	low _dbuf
  3609  001924  2445               	addwf	xtoa@i^0,w,c
  3610  001926  6E19               	movwf	pad@buf^0,c
  3611  001928  0E01               	movlw	high _dbuf
  3612  00192A  2046               	addwfc	(xtoa@i+1)^0,w,c
  3613  00192C  6E1A               	movwf	(pad@buf+1)^0,c
  3614  00192E  C03B  F01B         	movff	xtoa@w,pad@p
  3615  001932  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3616  001936  EC59  F00F         	call	_pad	;wreg free
  3617  00193A  C017  F022         	movff	?_pad,?_xtoa
  3618  00193E  C018  F023         	movff	?_pad+1,?_xtoa+1
  3619  001942  0012               	return		;funcret
  3620  001944                     __end_of_xtoa:
  3621                           	opt callstack 0
  3622                           
  3623 ;; *************** function _toupper *****************
  3624 ;; Defined at:
  3625 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  c               2   10[COMRAM] int 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2   10[COMRAM] int 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;Total ram usage:        8 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    5
  3646 ;; This function calls:
  3647 ;;		_islower
  3648 ;; This function is called by:
  3649 ;;		_xtoa
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text24
  3654  0023D8                     __ptext24:
  3655                           	opt callstack 0
  3656  0023D8                     _toupper:
  3657                           	opt callstack 21
  3658  0023D8  0E9F               	movlw	159
  3659  0023DA  6E0D               	movwf	??_toupper^0,c
  3660  0023DC  0EFF               	movlw	255
  3661  0023DE  6E0E               	movwf	(??_toupper+1)^0,c
  3662  0023E0  C00B  F00F         	movff	toupper@c,??_toupper+2
  3663  0023E4  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3664  0023E8  500D               	movf	??_toupper^0,w,c
  3665  0023EA  260F               	addwf	(??_toupper+2)^0,f,c
  3666  0023EC  500E               	movf	(??_toupper+1)^0,w,c
  3667  0023EE  2210               	addwfc	(??_toupper+3)^0,f,c
  3668  0023F0  5010               	movf	(??_toupper+3)^0,w,c
  3669  0023F2  E10A               	bnz	u1690
  3670  0023F4  0E1A               	movlw	26
  3671  0023F6  5C0F               	subwf	(??_toupper+2)^0,w,c
  3672  0023F8  A0D8               	btfss	status,0,c
  3673  0023FA  EF01  F012         	goto	u1691
  3674  0023FE  EF04  F012         	goto	u1690
  3675  002402                     u1691:
  3676  002402  0E01               	movlw	1
  3677  002404  EF05  F012         	goto	u1700
  3678  002408                     u1690:
  3679  002408  0E00               	movlw	0
  3680  00240A                     u1700:
  3681  00240A  6E11               	movwf	_toupper$1784^0,c
  3682  00240C  6A12               	clrf	(_toupper$1784+1)^0,c
  3683  00240E  5011               	movf	_toupper$1784^0,w,c
  3684  002410  1012               	iorwf	(_toupper$1784+1)^0,w,c
  3685  002412  B4D8               	btfsc	status,2,c
  3686  002414  EF0E  F012         	goto	u1711
  3687  002418  EF10  F012         	goto	u1710
  3688  00241C                     u1711:
  3689  00241C  EF16  F012         	goto	l1514
  3690  002420                     u1710:
  3691  002420  0E5F               	movlw	95
  3692  002422  140B               	andwf	toupper@c^0,w,c
  3693  002424  6E0B               	movwf	?_toupper^0,c
  3694  002426  6A0C               	clrf	(?_toupper+1)^0,c
  3695  002428  EF1A  F012         	goto	l1519
  3696  00242C                     l1514:
  3697  00242C  C00B  F00B         	movff	toupper@c,?_toupper
  3698  002430  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3699  002434                     l1519:
  3700  002434  0012               	return		;funcret
  3701  002436                     __end_of_toupper:
  3702                           	opt callstack 0
  3703                           
  3704 ;; *************** function _islower *****************
  3705 ;; Defined at:
  3706 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  c               2    4[COMRAM] int 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  2    4[COMRAM] int 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3724 ;;Total ram usage:        6 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    4
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_toupper
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text25
  3735  00271E                     __ptext25:
  3736                           	opt callstack 0
  3737  00271E                     _islower:
  3738                           	opt callstack 21
  3739  00271E  0E9F               	movlw	159
  3740  002720  6E07               	movwf	??_islower^0,c
  3741  002722  0EFF               	movlw	255
  3742  002724  6E08               	movwf	(??_islower+1)^0,c
  3743  002726  C005  F009         	movff	islower@c,??_islower+2
  3744  00272A  C006  F00A         	movff	islower@c+1,??_islower+3
  3745  00272E  5007               	movf	??_islower^0,w,c
  3746  002730  2609               	addwf	(??_islower+2)^0,f,c
  3747  002732  5008               	movf	(??_islower+1)^0,w,c
  3748  002734  220A               	addwfc	(??_islower+3)^0,f,c
  3749  002736  500A               	movf	(??_islower+3)^0,w,c
  3750  002738  E10A               	bnz	u1580
  3751  00273A  0E1A               	movlw	26
  3752  00273C  5C09               	subwf	(??_islower+2)^0,w,c
  3753  00273E  A0D8               	btfss	status,0,c
  3754  002740  EFA4  F013         	goto	u1581
  3755  002744  EFA7  F013         	goto	u1580
  3756  002748                     u1581:
  3757  002748  0E01               	movlw	1
  3758  00274A  EFA8  F013         	goto	u1590
  3759  00274E                     u1580:
  3760  00274E  0E00               	movlw	0
  3761  002750                     u1590:
  3762  002750  6E05               	movwf	?_islower^0,c
  3763  002752  6A06               	clrf	(?_islower+1)^0,c
  3764  002754  0012               	return		;funcret
  3765  002756                     __end_of_islower:
  3766                           	opt callstack 0
  3767                           
  3768 ;; *************** function _isupper *****************
  3769 ;; Defined at:
  3770 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  c               2    4[COMRAM] int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    4[COMRAM] int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3788 ;;Total ram usage:        6 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    4
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_xtoa
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text26
  3799  002756                     __ptext26:
  3800                           	opt callstack 0
  3801  002756                     _isupper:
  3802                           	opt callstack 22
  3803  002756  0EBF               	movlw	191
  3804  002758  6E07               	movwf	??_isupper^0,c
  3805  00275A  0EFF               	movlw	255
  3806  00275C  6E08               	movwf	(??_isupper+1)^0,c
  3807  00275E  C005  F009         	movff	isupper@c,??_isupper+2
  3808  002762  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3809  002766  5007               	movf	??_isupper^0,w,c
  3810  002768  2609               	addwf	(??_isupper+2)^0,f,c
  3811  00276A  5008               	movf	(??_isupper+1)^0,w,c
  3812  00276C  220A               	addwfc	(??_isupper+3)^0,f,c
  3813  00276E  500A               	movf	(??_isupper+3)^0,w,c
  3814  002770  E10A               	bnz	u1650
  3815  002772  0E1A               	movlw	26
  3816  002774  5C09               	subwf	(??_isupper+2)^0,w,c
  3817  002776  A0D8               	btfss	status,0,c
  3818  002778  EFC0  F013         	goto	u1651
  3819  00277C  EFC3  F013         	goto	u1650
  3820  002780                     u1651:
  3821  002780  0E01               	movlw	1
  3822  002782  EFC4  F013         	goto	u1660
  3823  002786                     u1650:
  3824  002786  0E00               	movlw	0
  3825  002788                     u1660:
  3826  002788  6E05               	movwf	?_isupper^0,c
  3827  00278A  6A06               	clrf	(?_isupper+1)^0,c
  3828  00278C  0012               	return		;funcret
  3829  00278E                     __end_of_isupper:
  3830                           	opt callstack 0
  3831                           
  3832 ;; *************** function _isalpha *****************
  3833 ;; Defined at:
  3834 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  c               2    4[COMRAM] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    4[COMRAM] int 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;Total ram usage:        6 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    4
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_xtoa
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text27
  3863  0026E2                     __ptext27:
  3864                           	opt callstack 0
  3865  0026E2                     _isalpha:
  3866                           	opt callstack 22
  3867  0026E2  0E9F               	movlw	159
  3868  0026E4  6E07               	movwf	??_isalpha^0,c
  3869  0026E6  0EFF               	movlw	255
  3870  0026E8  6E08               	movwf	(??_isalpha+1)^0,c
  3871  0026EA  0E20               	movlw	32
  3872  0026EC  1005               	iorwf	isalpha@c^0,w,c
  3873  0026EE  6E09               	movwf	(??_isalpha+2)^0,c
  3874  0026F0  0E00               	movlw	0
  3875  0026F2  1006               	iorwf	(isalpha@c+1)^0,w,c
  3876  0026F4  6E0A               	movwf	(??_isalpha+3)^0,c
  3877  0026F6  5007               	movf	??_isalpha^0,w,c
  3878  0026F8  2609               	addwf	(??_isalpha+2)^0,f,c
  3879  0026FA  5008               	movf	(??_isalpha+1)^0,w,c
  3880  0026FC  220A               	addwfc	(??_isalpha+3)^0,f,c
  3881  0026FE  500A               	movf	(??_isalpha+3)^0,w,c
  3882  002700  E10A               	bnz	u1670
  3883  002702  0E1A               	movlw	26
  3884  002704  5C09               	subwf	(??_isalpha+2)^0,w,c
  3885  002706  A0D8               	btfss	status,0,c
  3886  002708  EF88  F013         	goto	u1671
  3887  00270C  EF8B  F013         	goto	u1670
  3888  002710                     u1671:
  3889  002710  0E01               	movlw	1
  3890  002712  EF8C  F013         	goto	u1680
  3891  002716                     u1670:
  3892  002716  0E00               	movlw	0
  3893  002718                     u1680:
  3894  002718  6E05               	movwf	?_isalpha^0,c
  3895  00271A  6A06               	clrf	(?_isalpha+1)^0,c
  3896  00271C  0012               	return		;funcret
  3897  00271E                     __end_of_isalpha:
  3898                           	opt callstack 0
  3899                           
  3900 ;; *************** function _dtoa *****************
  3901 ;; Defined at:
  3902 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3905 ;;		 -> NULL(0), 
  3906 ;;  d               8   35[COMRAM] long long 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  n               8   59[COMRAM] long long 
  3909 ;;  i               2   67[COMRAM] int 
  3910 ;;  s               2   57[COMRAM] int 
  3911 ;;  w               2   55[COMRAM] int 
  3912 ;;  p               2   53[COMRAM] int 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2   33[COMRAM] int 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3922 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;Total ram usage:       36 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    9
  3929 ;; This function calls:
  3930 ;;		___aodiv
  3931 ;;		___aomod
  3932 ;;		_abs
  3933 ;;		_pad
  3934 ;; This function is called by:
  3935 ;;		_vfpfcnvrt
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text28
  3940  00138E                     __ptext28:
  3941                           	opt callstack 0
  3942  00138E                     _dtoa:
  3943                           	opt callstack 18
  3944  00138E                     
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3946  00138E  C024  F03C         	movff	dtoa@d,dtoa@n
  3947  001392  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3948  001396  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3949  00139A  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3950  00139E  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3951  0013A2  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3952  0013A6  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3953  0013AA  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  3954  0013AE                     
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3956  0013AE  BE43               	btfsc	(dtoa@n+7)^0,7,c
  3957  0013B0  EFDC  F009         	goto	u1891
  3958  0013B4  EFDF  F009         	goto	u1890
  3959  0013B8                     u1891:
  3960  0013B8  0E01               	movlw	1
  3961  0013BA  EFE0  F009         	goto	u1900
  3962  0013BE                     u1890:
  3963  0013BE  0E00               	movlw	0
  3964  0013C0                     u1900:
  3965  0013C0  6E3A               	movwf	dtoa@s^0,c
  3966  0013C2  6A3B               	clrf	(dtoa@s+1)^0,c
  3967                           
  3968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3969  0013C4  503A               	movf	dtoa@s^0,w,c
  3970  0013C6  103B               	iorwf	(dtoa@s+1)^0,w,c
  3971  0013C8  B4D8               	btfsc	status,2,c
  3972  0013CA  EFE9  F009         	goto	u1911
  3973  0013CE  EFEB  F009         	goto	u1910
  3974  0013D2                     u1911:
  3975  0013D2  EFFB  F009         	goto	l2798
  3976  0013D6                     u1910:
  3977  0013D6                     
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3979  0013D6  1E43               	comf	(dtoa@n+7)^0,f,c
  3980  0013D8  1E42               	comf	(dtoa@n+6)^0,f,c
  3981  0013DA  1E41               	comf	(dtoa@n+5)^0,f,c
  3982  0013DC  1E40               	comf	(dtoa@n+4)^0,f,c
  3983  0013DE  1E3F               	comf	(dtoa@n+3)^0,f,c
  3984  0013E0  1E3E               	comf	(dtoa@n+2)^0,f,c
  3985  0013E2  1E3D               	comf	(dtoa@n+1)^0,f,c
  3986  0013E4  6C3C               	negf	dtoa@n^0,c
  3987  0013E6  0E00               	movlw	0
  3988  0013E8  223D               	addwfc	(dtoa@n+1)^0,f,c
  3989  0013EA  223E               	addwfc	(dtoa@n+2)^0,f,c
  3990  0013EC  223F               	addwfc	(dtoa@n+3)^0,f,c
  3991  0013EE  2240               	addwfc	(dtoa@n+4)^0,f,c
  3992  0013F0  2241               	addwfc	(dtoa@n+5)^0,f,c
  3993  0013F2  2242               	addwfc	(dtoa@n+6)^0,f,c
  3994  0013F4  2243               	addwfc	(dtoa@n+7)^0,f,c
  3995  0013F6                     l2798:
  3996                           
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3998  0013F6  0100               	movlb	0	; () banked
  3999  0013F8  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  4000  0013FA  EF01  F00A         	goto	u1921
  4001  0013FE  EF03  F00A         	goto	u1920
  4002  001402                     u1921:
  4003  001402  EF04  F00A         	goto	l2802
  4004  001406                     u1920:
  4005  001406                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4008  001406  9257               	bcf	_flags^0,1,c
  4009  001408                     l2802:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4013  001408  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  4014  00140A  EF11  F00A         	goto	u1930
  4015  00140E  51AD               	movf	(_prec+1)& (0+255),w,b
  4016  001410  E106               	bnz	u1931
  4017  001412  05AC               	decf	_prec& (0+255),w,b
  4018  001414  B0D8               	btfsc	status,0,c
  4019  001416  EF0F  F00A         	goto	u1931
  4020  00141A  EF11  F00A         	goto	u1930
  4021  00141E                     u1931:
  4022  00141E  EF17  F00A         	goto	l649
  4023  001422                     u1930:
  4024  001422                     
  4025                           ; BSR set to: 0
  4026  001422  0E00               	movlw	0
  4027  001424  6E37               	movwf	(dtoa@p+1)^0,c
  4028  001426  0E01               	movlw	1
  4029  001428  6E36               	movwf	dtoa@p^0,c
  4030  00142A  EF1B  F00A         	goto	l651
  4031  00142E                     l649:
  4032                           
  4033                           ; BSR set to: 0
  4034  00142E  C0AC  F036         	movff	_prec,dtoa@p
  4035  001432  C0AD  F037         	movff	_prec+1,dtoa@p+1
  4036  001436                     l651:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4040  001436  C0AA  F038         	movff	_width,dtoa@w
  4041  00143A  C0AB  F039         	movff	_width+1,dtoa@w+1
  4042  00143E                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4045  00143E  503A               	movf	dtoa@s^0,w,c
  4046  001440  103B               	iorwf	(dtoa@s+1)^0,w,c
  4047  001442  A4D8               	btfss	status,2,c
  4048  001444  EF26  F00A         	goto	u1941
  4049  001448  EF28  F00A         	goto	u1940
  4050  00144C                     u1941:
  4051  00144C  EF2F  F00A         	goto	l2810
  4052  001450                     u1940:
  4053  001450                     
  4054                           ; BSR set to: 0
  4055  001450  A457               	btfss	_flags^0,2,c
  4056  001452  EF2D  F00A         	goto	u1951
  4057  001456  EF2F  F00A         	goto	u1950
  4058  00145A                     u1951:
  4059  00145A  EF32  F00A         	goto	l2812
  4060  00145E                     u1950:
  4061  00145E                     l2810:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4065  00145E  0638               	decf	dtoa@w^0,f,c
  4066  001460  A0D8               	btfss	status,0,c
  4067  001462  0639               	decf	(dtoa@w+1)^0,f,c
  4068  001464                     l2812:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4072  001464  0E00               	movlw	0
  4073  001466  6E45               	movwf	(dtoa@i+1)^0,c
  4074  001468  0E1F               	movlw	31
  4075  00146A  6E44               	movwf	dtoa@i^0,c
  4076  00146C                     
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4079  00146C  0E00               	movlw	0
  4080  00146E  0101               	movlb	1	; () banked
  4081  001470  6F83               	movwf	(_dbuf+31)& (0+255),b
  4082                           
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4084  001472  EFB7  F00A         	goto	l2826
  4085  001476                     l2816:
  4086                           
  4087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4088  001476  0644               	decf	dtoa@i^0,f,c
  4089  001478  A0D8               	btfss	status,0,c
  4090  00147A  0645               	decf	(dtoa@i+1)^0,f,c
  4091  00147C                     
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4093  00147C  0E64               	movlw	low _dbuf
  4094  00147E  2444               	addwf	dtoa@i^0,w,c
  4095  001480  6ED9               	movwf	fsr2l,c
  4096  001482  0E01               	movlw	high _dbuf
  4097  001484  2045               	addwfc	(dtoa@i+1)^0,w,c
  4098  001486  6EDA               	movwf	fsr2h,c
  4099  001488  C03C  F005         	movff	dtoa@n,___aomod@dividend
  4100  00148C  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  4101  001490  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  4102  001494  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  4103  001498  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  4104  00149C  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  4105  0014A0  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  4106  0014A4  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  4107  0014A8  0E0A               	movlw	10
  4108  0014AA  6E0D               	movwf	___aomod@divisor^0,c
  4109  0014AC  0E00               	movlw	0
  4110  0014AE  6E0E               	movwf	(___aomod@divisor+1)^0,c
  4111  0014B0  0E00               	movlw	0
  4112  0014B2  6E0F               	movwf	(___aomod@divisor+2)^0,c
  4113  0014B4  0E00               	movlw	0
  4114  0014B6  6E10               	movwf	(___aomod@divisor+3)^0,c
  4115  0014B8  0E00               	movlw	0
  4116  0014BA  6E11               	movwf	(___aomod@divisor+4)^0,c
  4117  0014BC  0E00               	movlw	0
  4118  0014BE  6E12               	movwf	(___aomod@divisor+5)^0,c
  4119  0014C0  0E00               	movlw	0
  4120  0014C2  6E13               	movwf	(___aomod@divisor+6)^0,c
  4121  0014C4  0E00               	movlw	0
  4122  0014C6  6E14               	movwf	(___aomod@divisor+7)^0,c
  4123  0014C8  EC33  F00E         	call	___aomod	;wreg free
  4124  0014CC  C005  F02C         	movff	?___aomod,??_dtoa
  4125  0014D0  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  4126  0014D4  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  4127  0014D8  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  4128  0014DC  C009  F030         	movff	?___aomod+4,??_dtoa+4
  4129  0014E0  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  4130  0014E4  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  4131  0014E8  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  4132  0014EC  C02C  F017         	movff	??_dtoa,abs@a
  4133  0014F0  C02E  F018         	movff	??_dtoa+2,abs@a+1
  4134  0014F4  EC51  F013         	call	_abs	;wreg free
  4135  0014F8  5017               	movf	?_abs^0,w,c
  4136  0014FA  0F30               	addlw	48
  4137  0014FC  6EDF               	movwf	indf2,c
  4138  0014FE                     
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4140  0014FE  0636               	decf	dtoa@p^0,f,c
  4141  001500  A0D8               	btfss	status,0,c
  4142  001502  0637               	decf	(dtoa@p+1)^0,f,c
  4143  001504                     
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4145  001504  0638               	decf	dtoa@w^0,f,c
  4146  001506  A0D8               	btfss	status,0,c
  4147  001508  0639               	decf	(dtoa@w+1)^0,f,c
  4148  00150A                     
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4150  00150A  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  4151  00150E  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  4152  001512  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  4153  001516  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  4154  00151A  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  4155  00151E  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  4156  001522  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  4157  001526  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  4158  00152A  0E0A               	movlw	10
  4159  00152C  6E0D               	movwf	___aodiv@divisor^0,c
  4160  00152E  0E00               	movlw	0
  4161  001530  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  4162  001532  0E00               	movlw	0
  4163  001534  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  4164  001536  0E00               	movlw	0
  4165  001538  6E10               	movwf	(___aodiv@divisor+3)^0,c
  4166  00153A  0E00               	movlw	0
  4167  00153C  6E11               	movwf	(___aodiv@divisor+4)^0,c
  4168  00153E  0E00               	movlw	0
  4169  001540  6E12               	movwf	(___aodiv@divisor+5)^0,c
  4170  001542  0E00               	movlw	0
  4171  001544  6E13               	movwf	(___aodiv@divisor+6)^0,c
  4172  001546  0E00               	movlw	0
  4173  001548  6E14               	movwf	(___aodiv@divisor+7)^0,c
  4174  00154A  EC6F  F00D         	call	___aodiv	;wreg free
  4175  00154E  C005  F03C         	movff	?___aodiv,dtoa@n
  4176  001552  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  4177  001556  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  4178  00155A  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  4179  00155E  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  4180  001562  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  4181  001566  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  4182  00156A  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  4183  00156E                     l2826:
  4184                           
  4185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4186  00156E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  4187  001570  EFC2  F00A         	goto	u1961
  4188  001574  5045               	movf	(dtoa@i+1)^0,w,c
  4189  001576  E108               	bnz	u1960
  4190  001578  0444               	decf	dtoa@i^0,w,c
  4191  00157A  A0D8               	btfss	status,0,c
  4192  00157C  EFC2  F00A         	goto	u1961
  4193  001580  EFC4  F00A         	goto	u1960
  4194  001584                     u1961:
  4195  001584  EFF4  F00A         	goto	l2836
  4196  001588                     u1960:
  4197  001588  503C               	movf	dtoa@n^0,w,c
  4198  00158A  103D               	iorwf	(dtoa@n+1)^0,w,c
  4199  00158C  103E               	iorwf	(dtoa@n+2)^0,w,c
  4200  00158E  103F               	iorwf	(dtoa@n+3)^0,w,c
  4201  001590  1040               	iorwf	(dtoa@n+4)^0,w,c
  4202  001592  1041               	iorwf	(dtoa@n+5)^0,w,c
  4203  001594  1042               	iorwf	(dtoa@n+6)^0,w,c
  4204  001596  1043               	iorwf	(dtoa@n+7)^0,w,c
  4205  001598  A4D8               	btfss	status,2,c
  4206  00159A  EFD1  F00A         	goto	u1971
  4207  00159E  EFD3  F00A         	goto	u1970
  4208  0015A2                     u1971:
  4209  0015A2  EF3B  F00A         	goto	l2816
  4210  0015A6                     u1970:
  4211  0015A6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  4212  0015A8  EFE0  F00A         	goto	u1980
  4213  0015AC  5037               	movf	(dtoa@p+1)^0,w,c
  4214  0015AE  E106               	bnz	u1981
  4215  0015B0  0436               	decf	dtoa@p^0,w,c
  4216  0015B2  B0D8               	btfsc	status,0,c
  4217  0015B4  EFDE  F00A         	goto	u1981
  4218  0015B8  EFE0  F00A         	goto	u1980
  4219  0015BC                     u1981:
  4220  0015BC  EF3B  F00A         	goto	l2816
  4221  0015C0                     u1980:
  4222  0015C0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  4223  0015C2  EFEB  F00A         	goto	u1991
  4224  0015C6  5039               	movf	(dtoa@w+1)^0,w,c
  4225  0015C8  E108               	bnz	u1990
  4226  0015CA  0438               	decf	dtoa@w^0,w,c
  4227  0015CC  A0D8               	btfss	status,0,c
  4228  0015CE  EFEB  F00A         	goto	u1991
  4229  0015D2  EFED  F00A         	goto	u1990
  4230  0015D6                     u1991:
  4231  0015D6  EFF4  F00A         	goto	l2836
  4232  0015DA                     u1990:
  4233  0015DA  B257               	btfsc	_flags^0,1,c
  4234  0015DC  EFF2  F00A         	goto	u2001
  4235  0015E0  EFF4  F00A         	goto	u2000
  4236  0015E4                     u2001:
  4237  0015E4  EF3B  F00A         	goto	l2816
  4238  0015E8                     u2000:
  4239  0015E8                     l2836:
  4240                           
  4241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4242  0015E8  503A               	movf	dtoa@s^0,w,c
  4243  0015EA  103B               	iorwf	(dtoa@s+1)^0,w,c
  4244  0015EC  A4D8               	btfss	status,2,c
  4245  0015EE  EFFB  F00A         	goto	u2011
  4246  0015F2  EFFD  F00A         	goto	u2010
  4247  0015F6                     u2011:
  4248  0015F6  EF04  F00B         	goto	l2840
  4249  0015FA                     u2010:
  4250  0015FA  A457               	btfss	_flags^0,2,c
  4251  0015FC  EF02  F00B         	goto	u2021
  4252  001600  EF04  F00B         	goto	u2020
  4253  001604                     u2021:
  4254  001604  EF22  F00B         	goto	l2850
  4255  001608                     u2020:
  4256  001608                     l2840:
  4257                           
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4259  001608  0644               	decf	dtoa@i^0,f,c
  4260  00160A  A0D8               	btfss	status,0,c
  4261  00160C  0645               	decf	(dtoa@i+1)^0,f,c
  4262  00160E                     
  4263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4264  00160E  503A               	movf	dtoa@s^0,w,c
  4265  001610  103B               	iorwf	(dtoa@s+1)^0,w,c
  4266  001612  A4D8               	btfss	status,2,c
  4267  001614  EF0E  F00B         	goto	u2031
  4268  001618  EF10  F00B         	goto	u2030
  4269  00161C                     u2031:
  4270  00161C  EF16  F00B         	goto	l2846
  4271  001620                     u2030:
  4272  001620  0E00               	movlw	0
  4273  001622  6E35               	movwf	(_dtoa$1208+1)^0,c
  4274  001624  0E2B               	movlw	43
  4275  001626  6E34               	movwf	_dtoa$1208^0,c
  4276  001628  EF1A  F00B         	goto	l2848
  4277  00162C                     l2846:
  4278  00162C  0E00               	movlw	0
  4279  00162E  6E35               	movwf	(_dtoa$1208+1)^0,c
  4280  001630  0E2D               	movlw	45
  4281  001632  6E34               	movwf	_dtoa$1208^0,c
  4282  001634                     l2848:
  4283  001634  0E64               	movlw	low _dbuf
  4284  001636  2444               	addwf	dtoa@i^0,w,c
  4285  001638  6ED9               	movwf	fsr2l,c
  4286  00163A  0E01               	movlw	high _dbuf
  4287  00163C  2045               	addwfc	(dtoa@i+1)^0,w,c
  4288  00163E  6EDA               	movwf	fsr2h,c
  4289  001640  C034  FFDF         	movff	_dtoa$1208,indf2
  4290  001644                     l2850:
  4291                           
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4293  001644  C022  F017         	movff	dtoa@fp,pad@fp
  4294  001648  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  4295  00164C  0E64               	movlw	low _dbuf
  4296  00164E  2444               	addwf	dtoa@i^0,w,c
  4297  001650  6E19               	movwf	pad@buf^0,c
  4298  001652  0E01               	movlw	high _dbuf
  4299  001654  2045               	addwfc	(dtoa@i+1)^0,w,c
  4300  001656  6E1A               	movwf	(pad@buf+1)^0,c
  4301  001658  C038  F01B         	movff	dtoa@w,pad@p
  4302  00165C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  4303  001660  EC59  F00F         	call	_pad	;wreg free
  4304  001664  C017  F022         	movff	?_pad,?_dtoa
  4305  001668  C018  F023         	movff	?_pad+1,?_dtoa+1
  4306  00166C  0012               	return		;funcret
  4307  00166E                     __end_of_dtoa:
  4308                           	opt callstack 0
  4309                           
  4310 ;; *************** function _pad *****************
  4311 ;; Defined at:
  4312 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4315 ;;		 -> NULL(0), 
  4316 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4317 ;;		 -> dbuf(32), 
  4318 ;;  p               2   26[COMRAM] int 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  w               2   31[COMRAM] int 
  4321 ;;  i               2   29[COMRAM] int 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2   22[COMRAM] int 
  4324 ;; Registers used:
  4325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4331 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4334 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4335 ;;Total ram usage:       11 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    8
  4338 ;; This function calls:
  4339 ;;		_fputc
  4340 ;;		_fputs
  4341 ;;		_strlen
  4342 ;; This function is called by:
  4343 ;;		_dtoa
  4344 ;;		_xtoa
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text29
  4349  001EB2                     __ptext29:
  4350                           	opt callstack 0
  4351  001EB2                     _pad:
  4352                           	opt callstack 18
  4353  001EB2                     
  4354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4355  001EB2  A057               	btfss	_flags^0,0,c
  4356  001EB4  EF5E  F00F         	goto	u1601
  4357  001EB8  EF60  F00F         	goto	u1600
  4358  001EBC                     u1601:
  4359  001EBC  EF6A  F00F         	goto	l2650
  4360  001EC0                     u1600:
  4361  001EC0                     
  4362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4363  001EC0  C019  F010         	movff	pad@buf,fputs@s
  4364  001EC4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4365  001EC8  C017  F012         	movff	pad@fp,fputs@fp
  4366  001ECC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4367  001ED0  EC0D  F013         	call	_fputs	;wreg free
  4368  001ED4                     l2650:
  4369                           
  4370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4371  001ED4  BE1C               	btfsc	(pad@p+1)^0,7,c
  4372  001ED6  EF6F  F00F         	goto	u1611
  4373  001EDA  EF71  F00F         	goto	u1610
  4374  001EDE                     u1611:
  4375  001EDE  EF77  F00F         	goto	l2654
  4376  001EE2                     u1610:
  4377  001EE2  C01B  F020         	movff	pad@p,pad@w
  4378  001EE6  C01C  F021         	movff	pad@p+1,pad@w+1
  4379  001EEA  EF7B  F00F         	goto	l638
  4380  001EEE                     l2654:
  4381  001EEE  0E00               	movlw	0
  4382  001EF0  6E21               	movwf	(pad@w+1)^0,c
  4383  001EF2  0E00               	movlw	0
  4384  001EF4  6E20               	movwf	pad@w^0,c
  4385  001EF6                     l638:
  4386                           
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4388  001EF6  0E00               	movlw	0
  4389  001EF8  6E1F               	movwf	(pad@i+1)^0,c
  4390  001EFA  0E00               	movlw	0
  4391  001EFC  6E1E               	movwf	pad@i^0,c
  4392                           
  4393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4394  001EFE  EF8D  F00F         	goto	l2660
  4395  001F02                     l2656:
  4396                           
  4397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4398  001F02  0E00               	movlw	0
  4399  001F04  6E08               	movwf	(fputc@c+1)^0,c
  4400  001F06  0E20               	movlw	32
  4401  001F08  6E07               	movwf	fputc@c^0,c
  4402  001F0A  C017  F009         	movff	pad@fp,fputc@fp
  4403  001F0E  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4404  001F12  EC78  F010         	call	_fputc	;wreg free
  4405  001F16                     
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4407  001F16  4A1E               	infsnz	pad@i^0,f,c
  4408  001F18  2A1F               	incf	(pad@i+1)^0,f,c
  4409  001F1A                     l2660:
  4410                           
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4412  001F1A  5020               	movf	pad@w^0,w,c
  4413  001F1C  5C1E               	subwf	pad@i^0,w,c
  4414  001F1E  501F               	movf	(pad@i+1)^0,w,c
  4415  001F20  0A80               	xorlw	128
  4416  001F22  6E1D               	movwf	??_pad^0,c
  4417  001F24  5021               	movf	(pad@w+1)^0,w,c
  4418  001F26  0A80               	xorlw	128
  4419  001F28  581D               	subwfb	??_pad^0,w,c
  4420  001F2A  A0D8               	btfss	status,0,c
  4421  001F2C  EF9A  F00F         	goto	u1621
  4422  001F30  EF9C  F00F         	goto	u1620
  4423  001F34                     u1621:
  4424  001F34  EF81  F00F         	goto	l2656
  4425  001F38                     u1620:
  4426  001F38                     
  4427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4428  001F38  B057               	btfsc	_flags^0,0,c
  4429  001F3A  EFA1  F00F         	goto	u1631
  4430  001F3E  EFA3  F00F         	goto	u1630
  4431  001F42                     u1631:
  4432  001F42  EFAD  F00F         	goto	l2664
  4433  001F46                     u1630:
  4434  001F46                     
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4436  001F46  C019  F010         	movff	pad@buf,fputs@s
  4437  001F4A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4438  001F4E  C017  F012         	movff	pad@fp,fputs@fp
  4439  001F52  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4440  001F56  EC0D  F013         	call	_fputs	;wreg free
  4441  001F5A                     l2664:
  4442                           
  4443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4444  001F5A  C019  F005         	movff	pad@buf,strlen@s
  4445  001F5E  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4446  001F62  ECE3  F013         	call	_strlen	;wreg free
  4447  001F66  5020               	movf	pad@w^0,w,c
  4448  001F68  2405               	addwf	?_strlen^0,w,c
  4449  001F6A  6E17               	movwf	?_pad^0,c
  4450  001F6C  5021               	movf	(pad@w+1)^0,w,c
  4451  001F6E  2006               	addwfc	(?_strlen+1)^0,w,c
  4452  001F70  6E18               	movwf	(?_pad+1)^0,c
  4453  001F72  0012               	return		;funcret
  4454  001F74                     __end_of_pad:
  4455                           	opt callstack 0
  4456                           
  4457 ;; *************** function _strlen *****************
  4458 ;; Defined at:
  4459 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4462 ;;		 -> dbuf(32), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4465 ;;		 -> dbuf(32), 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    4[COMRAM] unsigned int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:        4 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    4
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_pad
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text30
  4490  0027C6                     __ptext30:
  4491                           	opt callstack 0
  4492  0027C6                     _strlen:
  4493                           	opt callstack 21
  4494  0027C6  C005  F007         	movff	strlen@s,strlen@a
  4495  0027CA  C006  F008         	movff	strlen@s+1,strlen@a+1
  4496  0027CE  EFEB  F013         	goto	l2636
  4497  0027D2                     l2634:
  4498  0027D2  4A05               	infsnz	strlen@s^0,f,c
  4499  0027D4  2A06               	incf	(strlen@s+1)^0,f,c
  4500  0027D6                     l2636:
  4501  0027D6  C005  FFD9         	movff	strlen@s,fsr2l
  4502  0027DA  C006  FFDA         	movff	strlen@s+1,fsr2h
  4503  0027DE  50DF               	movf	indf2,w,c
  4504  0027E0  A4D8               	btfss	status,2,c
  4505  0027E2  EFF5  F013         	goto	u1571
  4506  0027E6  EFF7  F013         	goto	u1570
  4507  0027EA                     u1571:
  4508  0027EA  EFE9  F013         	goto	l2634
  4509  0027EE                     u1570:
  4510  0027EE  5007               	movf	strlen@a^0,w,c
  4511  0027F0  5C05               	subwf	strlen@s^0,w,c
  4512  0027F2  6E05               	movwf	?_strlen^0,c
  4513  0027F4  5008               	movf	(strlen@a+1)^0,w,c
  4514  0027F6  5806               	subwfb	(strlen@s+1)^0,w,c
  4515  0027F8  6E06               	movwf	(?_strlen+1)^0,c
  4516  0027FA  0012               	return		;funcret
  4517  0027FC                     __end_of_strlen:
  4518                           	opt callstack 0
  4519                           
  4520 ;; *************** function _fputs *****************
  4521 ;; Defined at:
  4522 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4525 ;;		 -> dbuf(32), 
  4526 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4527 ;;		 -> NULL(0), 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  i               2   20[COMRAM] int 
  4530 ;;  c               1   19[COMRAM] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2   15[COMRAM] int 
  4533 ;; Registers used:
  4534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;Total ram usage:        7 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    7
  4547 ;; This function calls:
  4548 ;;		_fputc
  4549 ;; This function is called by:
  4550 ;;		_pad
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text31
  4555  00261A                     __ptext31:
  4556                           	opt callstack 0
  4557  00261A                     _fputs:
  4558                           	opt callstack 18
  4559  00261A  0E00               	movlw	0
  4560  00261C  6E16               	movwf	(fputs@i+1)^0,c
  4561  00261E  0E00               	movlw	0
  4562  002620  6E15               	movwf	fputs@i^0,c
  4563  002622  EF1E  F013         	goto	l2630
  4564  002626                     l2626:
  4565  002626  C014  F007         	movff	fputs@c,fputc@c
  4566  00262A  6A08               	clrf	(fputc@c+1)^0,c
  4567  00262C  C012  F009         	movff	fputs@fp,fputc@fp
  4568  002630  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4569  002634  EC78  F010         	call	_fputc	;wreg free
  4570  002638  4A15               	infsnz	fputs@i^0,f,c
  4571  00263A  2A16               	incf	(fputs@i+1)^0,f,c
  4572  00263C                     l2630:
  4573  00263C  5015               	movf	fputs@i^0,w,c
  4574  00263E  2410               	addwf	fputs@s^0,w,c
  4575  002640  6ED9               	movwf	fsr2l,c
  4576  002642  5016               	movf	(fputs@i+1)^0,w,c
  4577  002644  2011               	addwfc	(fputs@s+1)^0,w,c
  4578  002646  6EDA               	movwf	fsr2h,c
  4579  002648  50DF               	movf	indf2,w,c
  4580  00264A  6E14               	movwf	fputs@c^0,c
  4581  00264C  5014               	movf	fputs@c^0,w,c
  4582  00264E  A4D8               	btfss	status,2,c
  4583  002650  EF2C  F013         	goto	u1561
  4584  002654  EF2E  F013         	goto	u1560
  4585  002658                     u1561:
  4586  002658  EF13  F013         	goto	l2626
  4587  00265C                     u1560:
  4588  00265C  0012               	return		;funcret
  4589  00265E                     __end_of_fputs:
  4590                           	opt callstack 0
  4591                           
  4592 ;; *************** function _fputc *****************
  4593 ;; Defined at:
  4594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  c               2    6[COMRAM] int 
  4597 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4598 ;;		 -> NULL(0), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  2    6[COMRAM] int 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;Total ram usage:        9 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    6
  4617 ;; This function calls:
  4618 ;;		_putch
  4619 ;; This function is called by:
  4620 ;;		_pad
  4621 ;;		_vfpfcnvrt
  4622 ;;		_fputs
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text32
  4627  0020F0                     __ptext32:
  4628                           	opt callstack 0
  4629  0020F0                     _fputc:
  4630                           	opt callstack 18
  4631  0020F0  5009               	movf	fputc@fp^0,w,c
  4632  0020F2  100A               	iorwf	(fputc@fp+1)^0,w,c
  4633  0020F4  B4D8               	btfsc	status,2,c
  4634  0020F6  EF7F  F010         	goto	u1521
  4635  0020FA  EF81  F010         	goto	u1520
  4636  0020FE                     u1521:
  4637  0020FE  EF8A  F010         	goto	l2614
  4638  002102                     u1520:
  4639  002102  5009               	movf	fputc@fp^0,w,c
  4640  002104  100A               	iorwf	(fputc@fp+1)^0,w,c
  4641  002106  A4D8               	btfss	status,2,c
  4642  002108  EF88  F010         	goto	u1531
  4643  00210C  EF8A  F010         	goto	u1530
  4644  002110                     u1531:
  4645  002110  EF8F  F010         	goto	l2616
  4646  002114                     u1530:
  4647  002114                     l2614:
  4648  002114  5007               	movf	fputc@c^0,w,c
  4649  002116  ECBC  F014         	call	_putch
  4650  00211A  EFC2  F010         	goto	l1488
  4651  00211E                     l2616:
  4652  00211E  EE20 F004          	lfsr	2,4
  4653  002122  5009               	movf	fputc@fp^0,w,c
  4654  002124  26D9               	addwf	fsr2l,f,c
  4655  002126  500A               	movf	(fputc@fp+1)^0,w,c
  4656  002128  22DA               	addwfc	fsr2h,f,c
  4657  00212A  50DE               	movf	postinc2,w,c
  4658  00212C  10DE               	iorwf	postinc2,w,c
  4659  00212E  B4D8               	btfsc	status,2,c
  4660  002130  EF9C  F010         	goto	u1541
  4661  002134  EF9E  F010         	goto	u1540
  4662  002138                     u1541:
  4663  002138  EFB9  F010         	goto	l2620
  4664  00213C                     u1540:
  4665  00213C  EE20 F004          	lfsr	2,4
  4666  002140  5009               	movf	fputc@fp^0,w,c
  4667  002142  26D9               	addwf	fsr2l,f,c
  4668  002144  500A               	movf	(fputc@fp+1)^0,w,c
  4669  002146  22DA               	addwfc	fsr2h,f,c
  4670  002148  EE10 F002          	lfsr	1,2
  4671  00214C  5009               	movf	fputc@fp^0,w,c
  4672  00214E  26E1               	addwf	fsr1l,f,c
  4673  002150  500A               	movf	(fputc@fp+1)^0,w,c
  4674  002152  22E2               	addwfc	fsr1h,f,c
  4675  002154  50DE               	movf	postinc2,w,c
  4676  002156  5CE6               	subwf	postinc1,w,c
  4677  002158  50E6               	movf	postinc1,w,c
  4678  00215A  0A80               	xorlw	128
  4679  00215C  6E0F               	movwf	(??_fputc+4)^0,c
  4680  00215E  50DE               	movf	postinc2,w,c
  4681  002160  0A80               	xorlw	128
  4682  002162  580F               	subwfb	(??_fputc+4)^0,w,c
  4683  002164  B0D8               	btfsc	status,0,c
  4684  002166  EFB7  F010         	goto	u1551
  4685  00216A  EFB9  F010         	goto	u1550
  4686  00216E                     u1551:
  4687  00216E  EFC2  F010         	goto	l1488
  4688  002172                     u1550:
  4689  002172                     l2620:
  4690  002172  EE20 F002          	lfsr	2,2
  4691  002176  5009               	movf	fputc@fp^0,w,c
  4692  002178  26D9               	addwf	fsr2l,f,c
  4693  00217A  500A               	movf	(fputc@fp+1)^0,w,c
  4694  00217C  22DA               	addwfc	fsr2h,f,c
  4695  00217E  2ADE               	incf	postinc2,f,c
  4696  002180  0E00               	movlw	0
  4697  002182  22DD               	addwfc	postdec2,f,c
  4698  002184                     l1488:
  4699  002184  0012               	return		;funcret
  4700  002186                     __end_of_fputc:
  4701                           	opt callstack 0
  4702                           
  4703 ;; *************** function _putch *****************
  4704 ;; Defined at:
  4705 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  txData          1    wreg     unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  txData          1    5[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4723 ;;Total ram usage:        1 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    5
  4726 ;; This function calls:
  4727 ;;		_EUSART2_Write
  4728 ;; This function is called by:
  4729 ;;		_fputc
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text33
  4734  002978                     __ptext33:
  4735                           	opt callstack 0
  4736  002978                     _putch:
  4737                           	opt callstack 18
  4738                           
  4739                           ;incstack = 0
  4740                           ;putch@txData stored from wreg
  4741  002978  6E06               	movwf	putch@txData^0,c
  4742  00297A                     
  4743                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  4744  00297A  5006               	movf	putch@txData^0,w,c
  4745  00297C  EC1B  F012         	call	_EUSART2_Write
  4746  002980  0012               	return		;funcret
  4747  002982                     __end_of_putch:
  4748                           	opt callstack 0
  4749                           
  4750 ;; *************** function _EUSART2_Write *****************
  4751 ;; Defined at:
  4752 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  txData          1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  txData          1    4[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    4
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_putch
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text34
  4781  002436                     __ptext34:
  4782                           	opt callstack 0
  4783  002436                     _EUSART2_Write:
  4784                           	opt callstack 18
  4785                           
  4786                           ;incstack = 0
  4787                           ;EUSART2_Write@txData stored from wreg
  4788  002436  6E05               	movwf	EUSART2_Write@txData^0,c
  4789  002438                     l2592:
  4790                           
  4791                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  4792  002438  0100               	movlb	0	; () banked
  4793  00243A  51FB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  4794  00243C  B4D8               	btfsc	status,2,c
  4795  00243E  EF23  F012         	goto	u1491
  4796  002442  EF25  F012         	goto	u1490
  4797  002446                     u1491:
  4798  002446  EF1C  F012         	goto	l2592
  4799  00244A                     u1490:
  4800  00244A                     
  4801                           ; BSR set to: 0
  4802                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  4803  00244A  010E               	movlb	14	; () banked
  4804  00244C  BDC5               	btfsc	197,6,b	;volatile
  4805  00244E  EF2B  F012         	goto	u1501
  4806  002452  EF2D  F012         	goto	u1500
  4807  002456                     u1501:
  4808  002456  EF31  F012         	goto	l321
  4809  00245A                     u1500:
  4810  00245A                     
  4811                           ; BSR set to: 14
  4812                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  4813  00245A  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  4814                           
  4815                           ;mcc_generated_files/eusart2.c: 182:     }
  4816  00245E  EF47  F012         	goto	l2606
  4817  002462                     l321:
  4818                           
  4819                           ; BSR set to: 14
  4820                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  4821  002462  9DC5               	bcf	197,6,b	;volatile
  4822  002464                     
  4823                           ; BSR set to: 14
  4824                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  4825  002464  0EA0               	movlw	low _eusart2TxBuffer
  4826  002466  0100               	movlb	0	; () banked
  4827  002468  25BD               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  4828  00246A  6ED9               	movwf	fsr2l,c
  4829  00246C  6ADA               	clrf	fsr2h,c
  4830  00246E  0E00               	movlw	high _eusart2TxBuffer
  4831  002470  22DA               	addwfc	fsr2h,f,c
  4832  002472  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  4833  002476                     
  4834                           ; BSR set to: 0
  4835  002476  2BBD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  4836  002478                     
  4837                           ; BSR set to: 0
  4838                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  4839  002478  0E07               	movlw	7
  4840  00247A  65BD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  4841  00247C  EF42  F012         	goto	u1511
  4842  002480  EF44  F012         	goto	u1510
  4843  002484                     u1511:
  4844  002484  EF46  F012         	goto	l2604
  4845  002488                     u1510:
  4846  002488                     
  4847                           ; BSR set to: 0
  4848                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  4849  002488  0E00               	movlw	0
  4850  00248A  6FBD               	movwf	_eusart2TxHead& (0+255),b	;volatile
  4851  00248C                     l2604:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  4855  00248C  07FB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  4856  00248E                     l2606:
  4857                           
  4858                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  4859  00248E  010E               	movlb	14	; () banked
  4860  002490  8DC5               	bsf	197,6,b	;volatile
  4861  002492                     
  4862                           ; BSR set to: 14
  4863  002492  0012               	return		;funcret
  4864  002494                     __end_of_EUSART2_Write:
  4865                           	opt callstack 0
  4866                           
  4867 ;; *************** function _abs *****************
  4868 ;; Defined at:
  4869 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  a               2   22[COMRAM] int 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  2   22[COMRAM] int 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;Total ram usage:        4 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    4
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_dtoa
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text35
  4898  0026A2                     __ptext35:
  4899                           	opt callstack 0
  4900  0026A2                     _abs:
  4901                           	opt callstack 22
  4902  0026A2  BE18               	btfsc	(abs@a+1)^0,7,c
  4903  0026A4  EF5E  F013         	goto	u1640
  4904  0026A8  5018               	movf	(abs@a+1)^0,w,c
  4905  0026AA  E106               	bnz	u1641
  4906  0026AC  0417               	decf	abs@a^0,w,c
  4907  0026AE  B0D8               	btfsc	status,0,c
  4908  0026B0  EF5C  F013         	goto	u1641
  4909  0026B4  EF5E  F013         	goto	u1640
  4910  0026B8                     u1641:
  4911  0026B8  EF6C  F013         	goto	l1416
  4912  0026BC                     u1640:
  4913  0026BC  C017  F019         	movff	abs@a,??_abs
  4914  0026C0  C018  F01A         	movff	abs@a+1,??_abs+1
  4915  0026C4  1E19               	comf	??_abs^0,f,c
  4916  0026C6  1E1A               	comf	(??_abs+1)^0,f,c
  4917  0026C8  4A19               	infsnz	??_abs^0,f,c
  4918  0026CA  2A1A               	incf	(??_abs+1)^0,f,c
  4919  0026CC  C019  F017         	movff	??_abs,?_abs
  4920  0026D0  C01A  F018         	movff	??_abs+1,?_abs+1
  4921  0026D4  EF70  F013         	goto	l1419
  4922  0026D8                     l1416:
  4923  0026D8  C017  F017         	movff	abs@a,?_abs
  4924  0026DC  C018  F018         	movff	abs@a+1,?_abs+1
  4925  0026E0                     l1419:
  4926  0026E0  0012               	return		;funcret
  4927  0026E2                     __end_of_abs:
  4928                           	opt callstack 0
  4929                           
  4930 ;; *************** function ___aomod *****************
  4931 ;; Defined at:
  4932 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  dividend        8    4[COMRAM] long long 
  4935 ;;  divisor         8   12[COMRAM] long long 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  sign            1   21[COMRAM] unsigned char 
  4938 ;;  counter         1   20[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  8    4[COMRAM] long long 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4948 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;Total ram usage:       18 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    4
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_dtoa
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text36
  4963  001C66                     __ptext36:
  4964                           	opt callstack 0
  4965  001C66                     ___aomod:
  4966                           	opt callstack 22
  4967  001C66  0E00               	movlw	0
  4968  001C68  6E16               	movwf	___aomod@sign^0,c
  4969  001C6A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4970  001C6C  EF3C  F00E         	goto	u1810
  4971  001C70  EF3A  F00E         	goto	u1811
  4972  001C74                     u1811:
  4973  001C74  EF4E  F00E         	goto	l2752
  4974  001C78                     u1810:
  4975  001C78  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4976  001C7A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4977  001C7C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4978  001C7E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4979  001C80  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4980  001C82  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4981  001C84  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4982  001C86  6C05               	negf	___aomod@dividend^0,c
  4983  001C88  0E00               	movlw	0
  4984  001C8A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4985  001C8C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4986  001C8E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4987  001C90  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4988  001C92  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4989  001C94  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4990  001C96  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4991  001C98  0E01               	movlw	1
  4992  001C9A  6E16               	movwf	___aomod@sign^0,c
  4993  001C9C                     l2752:
  4994  001C9C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4995  001C9E  EF55  F00E         	goto	u1820
  4996  001CA2  EF53  F00E         	goto	u1821
  4997  001CA6                     u1821:
  4998  001CA6  EF65  F00E         	goto	l2756
  4999  001CAA                     u1820:
  5000  001CAA  1E14               	comf	(___aomod@divisor+7)^0,f,c
  5001  001CAC  1E13               	comf	(___aomod@divisor+6)^0,f,c
  5002  001CAE  1E12               	comf	(___aomod@divisor+5)^0,f,c
  5003  001CB0  1E11               	comf	(___aomod@divisor+4)^0,f,c
  5004  001CB2  1E10               	comf	(___aomod@divisor+3)^0,f,c
  5005  001CB4  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  5006  001CB6  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  5007  001CB8  6C0D               	negf	___aomod@divisor^0,c
  5008  001CBA  0E00               	movlw	0
  5009  001CBC  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  5010  001CBE  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  5011  001CC0  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  5012  001CC2  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  5013  001CC4  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  5014  001CC6  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  5015  001CC8  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  5016  001CCA                     l2756:
  5017  001CCA  500D               	movf	___aomod@divisor^0,w,c
  5018  001CCC  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  5019  001CCE  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  5020  001CD0  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  5021  001CD2  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  5022  001CD4  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  5023  001CD6  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  5024  001CD8  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  5025  001CDA  B4D8               	btfsc	status,2,c
  5026  001CDC  EF72  F00E         	goto	u1831
  5027  001CE0  EF74  F00E         	goto	u1830
  5028  001CE4                     u1831:
  5029  001CE4  EFBC  F00E         	goto	l2772
  5030  001CE8                     u1830:
  5031  001CE8  0E01               	movlw	1
  5032  001CEA  6E15               	movwf	___aomod@counter^0,c
  5033  001CEC  EF82  F00E         	goto	l2762
  5034  001CF0                     l2760:
  5035  001CF0  90D8               	bcf	status,0,c
  5036  001CF2  360D               	rlcf	___aomod@divisor^0,f,c
  5037  001CF4  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  5038  001CF6  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  5039  001CF8  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  5040  001CFA  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  5041  001CFC  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  5042  001CFE  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  5043  001D00  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  5044  001D02  2A15               	incf	___aomod@counter^0,f,c
  5045  001D04                     l2762:
  5046  001D04  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  5047  001D06  EF87  F00E         	goto	u1841
  5048  001D0A  EF89  F00E         	goto	u1840
  5049  001D0E                     u1841:
  5050  001D0E  EF78  F00E         	goto	l2760
  5051  001D12                     u1840:
  5052  001D12                     l2764:
  5053  001D12  500D               	movf	___aomod@divisor^0,w,c
  5054  001D14  5C05               	subwf	___aomod@dividend^0,w,c
  5055  001D16  500E               	movf	(___aomod@divisor+1)^0,w,c
  5056  001D18  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  5057  001D1A  500F               	movf	(___aomod@divisor+2)^0,w,c
  5058  001D1C  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  5059  001D1E  5010               	movf	(___aomod@divisor+3)^0,w,c
  5060  001D20  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  5061  001D22  5011               	movf	(___aomod@divisor+4)^0,w,c
  5062  001D24  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  5063  001D26  5012               	movf	(___aomod@divisor+5)^0,w,c
  5064  001D28  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  5065  001D2A  5013               	movf	(___aomod@divisor+6)^0,w,c
  5066  001D2C  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  5067  001D2E  5014               	movf	(___aomod@divisor+7)^0,w,c
  5068  001D30  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  5069  001D32  A0D8               	btfss	status,0,c
  5070  001D34  EF9E  F00E         	goto	u1851
  5071  001D38  EFA0  F00E         	goto	u1850
  5072  001D3C                     u1851:
  5073  001D3C  EFB0  F00E         	goto	l2768
  5074  001D40                     u1850:
  5075  001D40  500D               	movf	___aomod@divisor^0,w,c
  5076  001D42  5E05               	subwf	___aomod@dividend^0,f,c
  5077  001D44  500E               	movf	(___aomod@divisor+1)^0,w,c
  5078  001D46  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  5079  001D48  500F               	movf	(___aomod@divisor+2)^0,w,c
  5080  001D4A  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  5081  001D4C  5010               	movf	(___aomod@divisor+3)^0,w,c
  5082  001D4E  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  5083  001D50  5011               	movf	(___aomod@divisor+4)^0,w,c
  5084  001D52  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  5085  001D54  5012               	movf	(___aomod@divisor+5)^0,w,c
  5086  001D56  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  5087  001D58  5013               	movf	(___aomod@divisor+6)^0,w,c
  5088  001D5A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  5089  001D5C  5014               	movf	(___aomod@divisor+7)^0,w,c
  5090  001D5E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  5091  001D60                     l2768:
  5092  001D60  90D8               	bcf	status,0,c
  5093  001D62  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  5094  001D64  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  5095  001D66  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  5096  001D68  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  5097  001D6A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  5098  001D6C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  5099  001D6E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  5100  001D70  320D               	rrcf	___aomod@divisor^0,f,c
  5101  001D72  2E15               	decfsz	___aomod@counter^0,f,c
  5102  001D74  EF89  F00E         	goto	l2764
  5103  001D78                     l2772:
  5104  001D78  5016               	movf	___aomod@sign^0,w,c
  5105  001D7A  B4D8               	btfsc	status,2,c
  5106  001D7C  EFC2  F00E         	goto	u1861
  5107  001D80  EFC4  F00E         	goto	u1860
  5108  001D84                     u1861:
  5109  001D84  EFD4  F00E         	goto	l2776
  5110  001D88                     u1860:
  5111  001D88  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5112  001D8A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5113  001D8C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5114  001D8E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5115  001D90  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5116  001D92  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5117  001D94  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5118  001D96  6C05               	negf	___aomod@dividend^0,c
  5119  001D98  0E00               	movlw	0
  5120  001D9A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5121  001D9C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5122  001D9E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5123  001DA0  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5124  001DA2  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5125  001DA4  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5126  001DA6  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5127  001DA8                     l2776:
  5128  001DA8  C005  F005         	movff	___aomod@dividend,?___aomod
  5129  001DAC  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  5130  001DB0  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  5131  001DB4  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  5132  001DB8  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  5133  001DBC  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  5134  001DC0  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  5135  001DC4  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  5136  001DC8  0012               	return		;funcret
  5137  001DCA                     __end_of___aomod:
  5138                           	opt callstack 0
  5139                           
  5140 ;; *************** function ___aodiv *****************
  5141 ;; Defined at:
  5142 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  dividend        8    4[COMRAM] long long 
  5145 ;;  divisor         8   12[COMRAM] long long 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  quotient        8   22[COMRAM] long long 
  5148 ;;  sign            1   21[COMRAM] unsigned char 
  5149 ;;  counter         1   20[COMRAM] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  8    4[COMRAM] long long 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5159 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;Total ram usage:       26 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    4
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_dtoa
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text37
  5174  001ADE                     __ptext37:
  5175                           	opt callstack 0
  5176  001ADE                     ___aodiv:
  5177                           	opt callstack 22
  5178  001ADE  0E00               	movlw	0
  5179  001AE0  6E16               	movwf	___aodiv@sign^0,c
  5180  001AE2  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  5181  001AE4  EF78  F00D         	goto	u1740
  5182  001AE8  EF76  F00D         	goto	u1741
  5183  001AEC                     u1741:
  5184  001AEC  EF8A  F00D         	goto	l2708
  5185  001AF0                     u1740:
  5186  001AF0  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  5187  001AF2  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  5188  001AF4  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  5189  001AF6  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  5190  001AF8  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  5191  001AFA  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  5192  001AFC  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  5193  001AFE  6C0D               	negf	___aodiv@divisor^0,c
  5194  001B00  0E00               	movlw	0
  5195  001B02  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  5196  001B04  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  5197  001B06  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  5198  001B08  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  5199  001B0A  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  5200  001B0C  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  5201  001B0E  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  5202  001B10  0E01               	movlw	1
  5203  001B12  6E16               	movwf	___aodiv@sign^0,c
  5204  001B14                     l2708:
  5205  001B14  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  5206  001B16  EF91  F00D         	goto	u1750
  5207  001B1A  EF8F  F00D         	goto	u1751
  5208  001B1E                     u1751:
  5209  001B1E  EFA3  F00D         	goto	l2714
  5210  001B22                     u1750:
  5211  001B22  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  5212  001B24  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  5213  001B26  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  5214  001B28  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  5215  001B2A  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  5216  001B2C  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  5217  001B2E  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  5218  001B30  6C05               	negf	___aodiv@dividend^0,c
  5219  001B32  0E00               	movlw	0
  5220  001B34  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  5221  001B36  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  5222  001B38  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  5223  001B3A  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  5224  001B3C  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  5225  001B3E  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  5226  001B40  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  5227  001B42  0E01               	movlw	1
  5228  001B44  1A16               	xorwf	___aodiv@sign^0,f,c
  5229  001B46                     l2714:
  5230  001B46  EE20  F017         	lfsr	2,___aodiv@quotient
  5231  001B4A  0E07               	movlw	7
  5232  001B4C                     u1761:
  5233  001B4C  6ADE               	clrf	postinc2,c
  5234  001B4E  06E8               	decf	wreg,f,c
  5235  001B50  E2FD               	bc	u1761
  5236  001B52  500D               	movf	___aodiv@divisor^0,w,c
  5237  001B54  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  5238  001B56  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  5239  001B58  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  5240  001B5A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  5241  001B5C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  5242  001B5E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  5243  001B60  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  5244  001B62  B4D8               	btfsc	status,2,c
  5245  001B64  EFB6  F00D         	goto	u1771
  5246  001B68  EFB8  F00D         	goto	u1770
  5247  001B6C                     u1771:
  5248  001B6C  EF0A  F00E         	goto	l2736
  5249  001B70                     u1770:
  5250  001B70  0E01               	movlw	1
  5251  001B72  6E15               	movwf	___aodiv@counter^0,c
  5252  001B74  EFC6  F00D         	goto	l2722
  5253  001B78                     l2720:
  5254  001B78  90D8               	bcf	status,0,c
  5255  001B7A  360D               	rlcf	___aodiv@divisor^0,f,c
  5256  001B7C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  5257  001B7E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  5258  001B80  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  5259  001B82  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  5260  001B84  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  5261  001B86  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  5262  001B88  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  5263  001B8A  2A15               	incf	___aodiv@counter^0,f,c
  5264  001B8C                     l2722:
  5265  001B8C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  5266  001B8E  EFCB  F00D         	goto	u1781
  5267  001B92  EFCD  F00D         	goto	u1780
  5268  001B96                     u1781:
  5269  001B96  EFBC  F00D         	goto	l2720
  5270  001B9A                     u1780:
  5271  001B9A                     l2724:
  5272  001B9A  90D8               	bcf	status,0,c
  5273  001B9C  3617               	rlcf	___aodiv@quotient^0,f,c
  5274  001B9E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  5275  001BA0  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  5276  001BA2  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  5277  001BA4  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  5278  001BA6  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  5279  001BA8  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  5280  001BAA  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  5281  001BAC  500D               	movf	___aodiv@divisor^0,w,c
  5282  001BAE  5C05               	subwf	___aodiv@dividend^0,w,c
  5283  001BB0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5284  001BB2  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  5285  001BB4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5286  001BB6  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  5287  001BB8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5288  001BBA  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  5289  001BBC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5290  001BBE  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  5291  001BC0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5292  001BC2  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  5293  001BC4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5294  001BC6  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  5295  001BC8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5296  001BCA  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  5297  001BCC  A0D8               	btfss	status,0,c
  5298  001BCE  EFEB  F00D         	goto	u1791
  5299  001BD2  EFED  F00D         	goto	u1790
  5300  001BD6                     u1791:
  5301  001BD6  EFFE  F00D         	goto	l2732
  5302  001BDA                     u1790:
  5303  001BDA  500D               	movf	___aodiv@divisor^0,w,c
  5304  001BDC  5E05               	subwf	___aodiv@dividend^0,f,c
  5305  001BDE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5306  001BE0  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5307  001BE2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5308  001BE4  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5309  001BE6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5310  001BE8  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5311  001BEA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5312  001BEC  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5313  001BEE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5314  001BF0  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5315  001BF2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5316  001BF4  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5317  001BF6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5318  001BF8  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5319  001BFA  8017               	bsf	___aodiv@quotient^0,0,c
  5320  001BFC                     l2732:
  5321  001BFC  90D8               	bcf	status,0,c
  5322  001BFE  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5323  001C00  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5324  001C02  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5325  001C04  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5326  001C06  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5327  001C08  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5328  001C0A  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5329  001C0C  320D               	rrcf	___aodiv@divisor^0,f,c
  5330  001C0E  2E15               	decfsz	___aodiv@counter^0,f,c
  5331  001C10  EFCD  F00D         	goto	l2724
  5332  001C14                     l2736:
  5333  001C14  5016               	movf	___aodiv@sign^0,w,c
  5334  001C16  B4D8               	btfsc	status,2,c
  5335  001C18  EF10  F00E         	goto	u1801
  5336  001C1C  EF12  F00E         	goto	u1800
  5337  001C20                     u1801:
  5338  001C20  EF22  F00E         	goto	l2740
  5339  001C24                     u1800:
  5340  001C24  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5341  001C26  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5342  001C28  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5343  001C2A  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5344  001C2C  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5345  001C2E  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5346  001C30  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5347  001C32  6C17               	negf	___aodiv@quotient^0,c
  5348  001C34  0E00               	movlw	0
  5349  001C36  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5350  001C38  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5351  001C3A  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5352  001C3C  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5353  001C3E  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5354  001C40  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5355  001C42  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5356  001C44                     l2740:
  5357  001C44  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5358  001C48  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5359  001C4C  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5360  001C50  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5361  001C54  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5362  001C58  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5363  001C5C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5364  001C60  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5365  001C64  0012               	return		;funcret
  5366  001C66                     __end_of___aodiv:
  5367                           	opt callstack 0
  5368                           
  5369 ;; *************** function _atoi *****************
  5370 ;; Defined at:
  5371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5374 ;;		 -> STR_2(14), STR_1(24), 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  n               2   24[COMRAM] int 
  5377 ;;  neg             2   17[COMRAM] int 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  2   11[COMRAM] int 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5388 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5390 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;Total ram usage:       15 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    5
  5394 ;; This function calls:
  5395 ;;		___wmul
  5396 ;;		_isdigit
  5397 ;;		_isspace
  5398 ;; This function is called by:
  5399 ;;		_vfpfcnvrt
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text38
  5404  001944                     __ptext38:
  5405                           	opt callstack 0
  5406  001944                     _atoi:
  5407                           	opt callstack 22
  5408  001944  0E00               	movlw	0
  5409  001946  6E1A               	movwf	(atoi@n+1)^0,c
  5410  001948  0E00               	movlw	0
  5411  00194A  6E19               	movwf	atoi@n^0,c
  5412  00194C  0E00               	movlw	0
  5413  00194E  6E13               	movwf	(atoi@neg+1)^0,c
  5414  001950  0E00               	movlw	0
  5415  001952  6E12               	movwf	atoi@neg^0,c
  5416  001954  EFAE  F00C         	goto	l2924
  5417  001958                     l2922:
  5418  001958  4A0C               	infsnz	atoi@s^0,f,c
  5419  00195A  2A0D               	incf	(atoi@s+1)^0,f,c
  5420  00195C                     l2924:
  5421  00195C  0E01               	movlw	1
  5422  00195E  6E18               	movwf	_atoi$1693^0,c
  5423  001960  C00C  FFF6         	movff	atoi@s,tblptrl
  5424  001964  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5425  001968                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5426  001968  6AF8               	clrf	tblptru,c
  5427  00196A                     	endif
  5428  00196A                     	if	0	;tblptru may be non-zero
  5429  00196A                     	endif
  5430  00196A  0008               	tblrd		*
  5431  00196C  50F5               	movf	tablat,w,c
  5432  00196E  0A20               	xorlw	32
  5433  001970  B4D8               	btfsc	status,2,c
  5434  001972  EFBD  F00C         	goto	u2211
  5435  001976  EFBF  F00C         	goto	u2210
  5436  00197A                     u2211:
  5437  00197A  EFDD  F00C         	goto	l2932
  5438  00197E                     u2210:
  5439  00197E  0EF7               	movlw	247
  5440  001980  6E0E               	movwf	??_atoi^0,c
  5441  001982  0EFF               	movlw	255
  5442  001984  6E0F               	movwf	(??_atoi+1)^0,c
  5443  001986  C00C  FFF6         	movff	atoi@s,tblptrl
  5444  00198A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5445  00198E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5446  00198E  6AF8               	clrf	tblptru,c
  5447  001990                     	endif
  5448  001990                     	if	0	;tblptru may be non-zero
  5449  001990                     	endif
  5450  001990  0008               	tblrd		*
  5451  001992  50F5               	movf	tablat,w,c
  5452  001994  6E10               	movwf	(??_atoi+2)^0,c
  5453  001996  6A11               	clrf	(??_atoi+3)^0,c
  5454  001998  500E               	movf	??_atoi^0,w,c
  5455  00199A  2610               	addwf	(??_atoi+2)^0,f,c
  5456  00199C  500F               	movf	(??_atoi+1)^0,w,c
  5457  00199E  2211               	addwfc	(??_atoi+3)^0,f,c
  5458  0019A0  5011               	movf	(??_atoi+3)^0,w,c
  5459  0019A2  E109               	bnz	u2220
  5460  0019A4  0E05               	movlw	5
  5461  0019A6  5C10               	subwf	(??_atoi+2)^0,w,c
  5462  0019A8  A0D8               	btfss	status,0,c
  5463  0019AA  EFD9  F00C         	goto	u2221
  5464  0019AE  EFDB  F00C         	goto	u2220
  5465  0019B2                     u2221:
  5466  0019B2  EFDD  F00C         	goto	l2932
  5467  0019B6                     u2220:
  5468  0019B6  0E00               	movlw	0
  5469  0019B8  6E18               	movwf	_atoi$1693^0,c
  5470  0019BA                     l2932:
  5471  0019BA  C018  F014         	movff	_atoi$1693,_atoi$1692
  5472  0019BE  6A15               	clrf	(_atoi$1692+1)^0,c
  5473  0019C0  5014               	movf	_atoi$1692^0,w,c
  5474  0019C2  1015               	iorwf	(_atoi$1692+1)^0,w,c
  5475  0019C4  A4D8               	btfss	status,2,c
  5476  0019C6  EFE7  F00C         	goto	u2231
  5477  0019CA  EFE9  F00C         	goto	u2230
  5478  0019CE                     u2231:
  5479  0019CE  EFAC  F00C         	goto	l2922
  5480  0019D2                     u2230:
  5481  0019D2  EFF3  F00C         	goto	l2942
  5482  0019D6                     l2938:
  5483  0019D6  0E00               	movlw	0
  5484  0019D8  6E13               	movwf	(atoi@neg+1)^0,c
  5485  0019DA  0E01               	movlw	1
  5486  0019DC  6E12               	movwf	atoi@neg^0,c
  5487  0019DE                     l2940:
  5488  0019DE  4A0C               	infsnz	atoi@s^0,f,c
  5489  0019E0  2A0D               	incf	(atoi@s+1)^0,f,c
  5490  0019E2  EF2A  F00D         	goto	l2948
  5491  0019E6                     l2942:
  5492  0019E6  C00C  FFF6         	movff	atoi@s,tblptrl
  5493  0019EA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5494  0019EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5495  0019EE  6AF8               	clrf	tblptru,c
  5496  0019F0                     	endif
  5497  0019F0                     	if	0	;tblptru may be non-zero
  5498  0019F0                     	endif
  5499  0019F0  0008               	tblrd		*
  5500  0019F2  50F5               	movf	tablat,w,c
  5501  0019F4  6E0E               	movwf	??_atoi^0,c
  5502  0019F6  6A0F               	clrf	(??_atoi+1)^0,c
  5503                           
  5504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5505                           ; Switch size 1, requested type "simple"
  5506                           ; Number of cases is 1, Range of values is 0 to 0
  5507                           ; switch strategies available:
  5508                           ; Name         Instructions Cycles
  5509                           ; simple_byte            4     3 (average)
  5510                           ;	Chosen strategy is simple_byte
  5511  0019F8  500F               	movf	(??_atoi+1)^0,w,c
  5512  0019FA  0A00               	xorlw	0	; case 0
  5513  0019FC  B4D8               	btfsc	status,2,c
  5514  0019FE  EF03  F00D         	goto	l3674
  5515  001A02  EF2A  F00D         	goto	l2948
  5516  001A06                     l3674:
  5517                           
  5518                           ; Switch size 1, requested type "simple"
  5519                           ; Number of cases is 2, Range of values is 43 to 45
  5520                           ; switch strategies available:
  5521                           ; Name         Instructions Cycles
  5522                           ; simple_byte            7     4 (average)
  5523                           ;	Chosen strategy is simple_byte
  5524  001A06  500E               	movf	??_atoi^0,w,c
  5525  001A08  0A2B               	xorlw	43	; case 43
  5526  001A0A  B4D8               	btfsc	status,2,c
  5527  001A0C  EFEF  F00C         	goto	l2940
  5528  001A10  0A06               	xorlw	6	; case 45
  5529  001A12  B4D8               	btfsc	status,2,c
  5530  001A14  EFEB  F00C         	goto	l2938
  5531  001A18  EF2A  F00D         	goto	l2948
  5532  001A1C                     l2944:
  5533  001A1C  C019  F005         	movff	atoi@n,___wmul@multiplier
  5534  001A20  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5535  001A24  0E00               	movlw	0
  5536  001A26  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5537  001A28  0E0A               	movlw	10
  5538  001A2A  6E07               	movwf	___wmul@multiplicand^0,c
  5539  001A2C  EC3E  F014         	call	___wmul	;wreg free
  5540  001A30  C00C  FFF6         	movff	atoi@s,tblptrl
  5541  001A34  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5542  001A38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5543  001A38  6AF8               	clrf	tblptru,c
  5544  001A3A                     	endif
  5545  001A3A                     	if	0	;tblptru may be non-zero
  5546  001A3A                     	endif
  5547  001A3A  0008               	tblrd		*
  5548  001A3C  50F5               	movf	tablat,w,c
  5549  001A3E  5E05               	subwf	?___wmul^0,f,c
  5550  001A40  0E00               	movlw	0
  5551  001A42  5A06               	subwfb	(?___wmul+1)^0,f,c
  5552  001A44  0E30               	movlw	48
  5553  001A46  2405               	addwf	?___wmul^0,w,c
  5554  001A48  6E19               	movwf	atoi@n^0,c
  5555  001A4A  0E00               	movlw	0
  5556  001A4C  2006               	addwfc	(?___wmul+1)^0,w,c
  5557  001A4E  6E1A               	movwf	(atoi@n+1)^0,c
  5558  001A50  EFEF  F00C         	goto	l2940
  5559  001A54                     l2948:
  5560  001A54  0ED0               	movlw	208
  5561  001A56  6E0E               	movwf	??_atoi^0,c
  5562  001A58  0EFF               	movlw	255
  5563  001A5A  6E0F               	movwf	(??_atoi+1)^0,c
  5564  001A5C  C00C  FFF6         	movff	atoi@s,tblptrl
  5565  001A60  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5566  001A64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5567  001A64  6AF8               	clrf	tblptru,c
  5568  001A66                     	endif
  5569  001A66                     	if	0	;tblptru may be non-zero
  5570  001A66                     	endif
  5571  001A66  0008               	tblrd		*
  5572  001A68  50F5               	movf	tablat,w,c
  5573  001A6A  6E10               	movwf	(??_atoi+2)^0,c
  5574  001A6C  6A11               	clrf	(??_atoi+3)^0,c
  5575  001A6E  500E               	movf	??_atoi^0,w,c
  5576  001A70  2610               	addwf	(??_atoi+2)^0,f,c
  5577  001A72  500F               	movf	(??_atoi+1)^0,w,c
  5578  001A74  2211               	addwfc	(??_atoi+3)^0,f,c
  5579  001A76  5011               	movf	(??_atoi+3)^0,w,c
  5580  001A78  E10A               	bnz	u2240
  5581  001A7A  0E0A               	movlw	10
  5582  001A7C  5C10               	subwf	(??_atoi+2)^0,w,c
  5583  001A7E  A0D8               	btfss	status,0,c
  5584  001A80  EF44  F00D         	goto	u2241
  5585  001A84  EF47  F00D         	goto	u2240
  5586  001A88                     u2241:
  5587  001A88  0E01               	movlw	1
  5588  001A8A  EF48  F00D         	goto	u2250
  5589  001A8E                     u2240:
  5590  001A8E  0E00               	movlw	0
  5591  001A90                     u2250:
  5592  001A90  6E16               	movwf	_atoi$1694^0,c
  5593  001A92  6A17               	clrf	(_atoi$1694+1)^0,c
  5594  001A94  5016               	movf	_atoi$1694^0,w,c
  5595  001A96  1017               	iorwf	(_atoi$1694+1)^0,w,c
  5596  001A98  A4D8               	btfss	status,2,c
  5597  001A9A  EF51  F00D         	goto	u2261
  5598  001A9E  EF53  F00D         	goto	u2260
  5599  001AA2                     u2261:
  5600  001AA2  EF0E  F00D         	goto	l2944
  5601  001AA6                     u2260:
  5602  001AA6  5012               	movf	atoi@neg^0,w,c
  5603  001AA8  1013               	iorwf	(atoi@neg+1)^0,w,c
  5604  001AAA  A4D8               	btfss	status,2,c
  5605  001AAC  EF5A  F00D         	goto	u2271
  5606  001AB0  EF5C  F00D         	goto	u2270
  5607  001AB4                     u2271:
  5608  001AB4  EF6A  F00D         	goto	l1447
  5609  001AB8                     u2270:
  5610  001AB8  C019  F00E         	movff	atoi@n,??_atoi
  5611  001ABC  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5612  001AC0  1E0E               	comf	??_atoi^0,f,c
  5613  001AC2  1E0F               	comf	(??_atoi+1)^0,f,c
  5614  001AC4  4A0E               	infsnz	??_atoi^0,f,c
  5615  001AC6  2A0F               	incf	(??_atoi+1)^0,f,c
  5616  001AC8  C00E  F00C         	movff	??_atoi,?_atoi
  5617  001ACC  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5618  001AD0  EF6E  F00D         	goto	l1450
  5619  001AD4                     l1447:
  5620  001AD4  C019  F00C         	movff	atoi@n,?_atoi
  5621  001AD8  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5622  001ADC                     l1450:
  5623  001ADC  0012               	return		;funcret
  5624  001ADE                     __end_of_atoi:
  5625                           	opt callstack 0
  5626                           
  5627 ;; *************** function _isspace *****************
  5628 ;; Defined at:
  5629 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  c               2    4[COMRAM] int 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  2    4[COMRAM] int 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;Total ram usage:        7 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    4
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_atoi
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text39
  5658  0024EC                     __ptext39:
  5659                           	opt callstack 0
  5660  0024EC                     _isspace:
  5661                           	opt callstack 22
  5662  0024EC  0E01               	movlw	1
  5663  0024EE  6E0B               	movwf	_isspace$1719^0,c
  5664  0024F0  0E20               	movlw	32
  5665  0024F2  1805               	xorwf	isspace@c^0,w,c
  5666  0024F4  1006               	iorwf	(isspace@c+1)^0,w,c
  5667  0024F6  B4D8               	btfsc	status,2,c
  5668  0024F8  EF80  F012         	goto	u1871
  5669  0024FC  EF82  F012         	goto	u1870
  5670  002500                     u1871:
  5671  002500  EF9B  F012         	goto	l2788
  5672  002504                     u1870:
  5673  002504  0EF7               	movlw	247
  5674  002506  6E07               	movwf	??_isspace^0,c
  5675  002508  0EFF               	movlw	255
  5676  00250A  6E08               	movwf	(??_isspace+1)^0,c
  5677  00250C  C005  F009         	movff	isspace@c,??_isspace+2
  5678  002510  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5679  002514  5007               	movf	??_isspace^0,w,c
  5680  002516  2609               	addwf	(??_isspace+2)^0,f,c
  5681  002518  5008               	movf	(??_isspace+1)^0,w,c
  5682  00251A  220A               	addwfc	(??_isspace+3)^0,f,c
  5683  00251C  500A               	movf	(??_isspace+3)^0,w,c
  5684  00251E  E109               	bnz	u1880
  5685  002520  0E05               	movlw	5
  5686  002522  5C09               	subwf	(??_isspace+2)^0,w,c
  5687  002524  A0D8               	btfss	status,0,c
  5688  002526  EF97  F012         	goto	u1881
  5689  00252A  EF99  F012         	goto	u1880
  5690  00252E                     u1881:
  5691  00252E  EF9B  F012         	goto	l2788
  5692  002532                     u1880:
  5693  002532  0E00               	movlw	0
  5694  002534  6E0B               	movwf	_isspace$1719^0,c
  5695  002536                     l2788:
  5696  002536  C00B  F005         	movff	_isspace$1719,?_isspace
  5697  00253A  6A06               	clrf	(?_isspace+1)^0,c
  5698  00253C  0012               	return		;funcret
  5699  00253E                     __end_of_isspace:
  5700                           	opt callstack 0
  5701                           
  5702 ;; *************** function _isdigit *****************
  5703 ;; Defined at:
  5704 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  c               2    4[COMRAM] int 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  2    4[COMRAM] int 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;Total ram usage:        6 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    4
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_vfpfcnvrt
  5729 ;;		_atoi
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text40
  5734  00278E                     __ptext40:
  5735                           	opt callstack 0
  5736  00278E                     _isdigit:
  5737                           	opt callstack 23
  5738  00278E  0ED0               	movlw	208
  5739  002790  6E07               	movwf	??_isdigit^0,c
  5740  002792  0EFF               	movlw	255
  5741  002794  6E08               	movwf	(??_isdigit+1)^0,c
  5742  002796  C005  F009         	movff	isdigit@c,??_isdigit+2
  5743  00279A  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5744  00279E  5007               	movf	??_isdigit^0,w,c
  5745  0027A0  2609               	addwf	(??_isdigit+2)^0,f,c
  5746  0027A2  5008               	movf	(??_isdigit+1)^0,w,c
  5747  0027A4  220A               	addwfc	(??_isdigit+3)^0,f,c
  5748  0027A6  500A               	movf	(??_isdigit+3)^0,w,c
  5749  0027A8  E10A               	bnz	u1720
  5750  0027AA  0E0A               	movlw	10
  5751  0027AC  5C09               	subwf	(??_isdigit+2)^0,w,c
  5752  0027AE  A0D8               	btfss	status,0,c
  5753  0027B0  EFDC  F013         	goto	u1721
  5754  0027B4  EFDF  F013         	goto	u1720
  5755  0027B8                     u1721:
  5756  0027B8  0E01               	movlw	1
  5757  0027BA  EFE0  F013         	goto	u1730
  5758  0027BE                     u1720:
  5759  0027BE  0E00               	movlw	0
  5760  0027C0                     u1730:
  5761  0027C0  6E05               	movwf	?_isdigit^0,c
  5762  0027C2  6A06               	clrf	(?_isdigit+1)^0,c
  5763  0027C4  0012               	return		;funcret
  5764  0027C6                     __end_of_isdigit:
  5765                           	opt callstack 0
  5766                           
  5767 ;; *************** function ___wmul *****************
  5768 ;; Defined at:
  5769 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  multiplier      2    4[COMRAM] unsigned int 
  5772 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  product         2    8[COMRAM] unsigned int 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  2    4[COMRAM] unsigned int 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2, status,0, prodl, prodh
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;Total ram usage:        6 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    4
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_atoi
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text41
  5799  00287C                     __ptext41:
  5800                           	opt callstack 0
  5801  00287C                     ___wmul:
  5802                           	opt callstack 22
  5803  00287C  5005               	movf	___wmul@multiplier^0,w,c
  5804  00287E  0207               	mulwf	___wmul@multiplicand^0,c
  5805  002880  CFF3 F009          	movff	prodl,___wmul@product
  5806  002884  CFF4 F00A          	movff	prodh,___wmul@product+1
  5807  002888  5005               	movf	___wmul@multiplier^0,w,c
  5808  00288A  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5809  00288C  50F3               	movf	243,w,c
  5810  00288E  260A               	addwf	(___wmul@product+1)^0,f,c
  5811  002890  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5812  002892  0207               	mulwf	___wmul@multiplicand^0,c
  5813  002894  50F3               	movf	243,w,c
  5814  002896  260A               	addwf	(___wmul@product+1)^0,f,c
  5815  002898  C009  F005         	movff	___wmul@product,?___wmul
  5816  00289C  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5817  0028A0  0012               	return		;funcret
  5818  0028A2                     __end_of___wmul:
  5819                           	opt callstack 0
  5820                           
  5821 ;; *************** function _EUSART1_is_rx_ready *****************
  5822 ;; Defined at:
  5823 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;		None
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;		None
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      _Bool 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;Total ram usage:        0 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    4
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_main
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text42
  5852  0028F0                     __ptext42:
  5853                           	opt callstack 0
  5854  0028F0                     _EUSART1_is_rx_ready:
  5855                           	opt callstack 26
  5856  0028F0                     
  5857                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  5858  0028F0  0100               	movlb	0	; () banked
  5859  0028F2  51B5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5860  0028F4  A4D8               	btfss	status,2,c
  5861  0028F6  EF7F  F014         	goto	u2541
  5862  0028FA  EF82  F014         	goto	u2540
  5863  0028FE                     u2541:
  5864  0028FE  0E01               	movlw	1
  5865  002900  EF83  F014         	goto	u2550
  5866  002904                     u2540:
  5867  002904  0E00               	movlw	0
  5868  002906                     u2550:
  5869  002906                     
  5870                           ; BSR set to: 0
  5871  002906  0012               	return		;funcret
  5872  002908                     __end_of_EUSART1_is_rx_ready:
  5873                           	opt callstack 0
  5874                           
  5875 ;; *************** function _EUSART1_Read *****************
  5876 ;; Defined at:
  5877 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  readValue       1    4[COMRAM] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      unsigned char 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;Total ram usage:        1 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    4
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text43
  5906  002494                     __ptext43:
  5907                           	opt callstack 0
  5908  002494                     _EUSART1_Read:
  5909                           	opt callstack 26
  5910  002494                     l3288:
  5911                           
  5912                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  5913  002494  0100               	movlb	0	; () banked
  5914  002496  51B5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5915  002498  B4D8               	btfsc	status,2,c
  5916  00249A  EF51  F012         	goto	u2561
  5917  00249E  EF53  F012         	goto	u2560
  5918  0024A2                     u2561:
  5919  0024A2  EF4A  F012         	goto	l3288
  5920  0024A6                     u2560:
  5921  0024A6                     
  5922                           ; BSR set to: 0
  5923                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  5924  0024A6  0E60               	movlw	low _eusart1RxStatusBuffer
  5925  0024A8  25B6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5926  0024AA  6ED9               	movwf	fsr2l,c
  5927  0024AC  6ADA               	clrf	fsr2h,c
  5928  0024AE  0E00               	movlw	high _eusart1RxStatusBuffer
  5929  0024B0  22DA               	addwfc	fsr2h,f,c
  5930  0024B2  50DF               	movf	indf2,w,c
  5931  0024B4  6FB4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5932                           
  5933                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  5934  0024B6  0E70               	movlw	low _eusart1RxBuffer
  5935  0024B8  25B6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5936  0024BA  6ED9               	movwf	fsr2l,c
  5937  0024BC  6ADA               	clrf	fsr2h,c
  5938  0024BE  0E00               	movlw	high _eusart1RxBuffer
  5939  0024C0  22DA               	addwfc	fsr2h,f,c
  5940  0024C2  50DF               	movf	indf2,w,c
  5941  0024C4  6E05               	movwf	EUSART1_Read@readValue^0,c
  5942  0024C6                     
  5943                           ; BSR set to: 0
  5944  0024C6  2BB6               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  5945  0024C8                     
  5946                           ; BSR set to: 0
  5947                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  5948  0024C8  0E0F               	movlw	15
  5949  0024CA  65B6               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  5950  0024CC  EF6A  F012         	goto	u2571
  5951  0024D0  EF6C  F012         	goto	u2570
  5952  0024D4                     u2571:
  5953  0024D4  EF6E  F012         	goto	l3298
  5954  0024D8                     u2570:
  5955  0024D8                     
  5956                           ; BSR set to: 0
  5957                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  5958  0024D8  0E00               	movlw	0
  5959  0024DA  6FB6               	movwf	_eusart1RxTail& (0+255),b	;volatile
  5960  0024DC                     l3298:
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  5964  0024DC  010E               	movlb	14	; () banked
  5965  0024DE  9BC5               	bcf	197,5,b	;volatile
  5966  0024E0                     
  5967                           ; BSR set to: 14
  5968                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  5969  0024E0  0100               	movlb	0	; () banked
  5970  0024E2  07B5               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  5971  0024E4                     
  5972                           ; BSR set to: 0
  5973                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  5974  0024E4  010E               	movlb	14	; () banked
  5975  0024E6  8BC5               	bsf	197,5,b	;volatile
  5976  0024E8                     
  5977                           ; BSR set to: 14
  5978                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  5979  0024E8  5005               	movf	EUSART1_Read@readValue^0,w,c
  5980  0024EA                     
  5981                           ; BSR set to: 14
  5982  0024EA  0012               	return		;funcret
  5983  0024EC                     __end_of_EUSART1_Read:
  5984                           	opt callstack 0
  5985                           
  5986 ;; *************** function _ClearRxBuff *****************
  5987 ;; Defined at:
  5988 ;;		line 46 in file "main.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;  i               2    5[COMRAM] int 
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;Total ram usage:        3 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    4
  6009 ;; This function calls:
  6010 ;;		Nothing
  6011 ;; This function is called by:
  6012 ;;		_main
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text44
  6017  002588                     __ptext44:
  6018                           	opt callstack 0
  6019  002588                     _ClearRxBuff:
  6020                           	opt callstack 26
  6021  002588                     
  6022                           ;main.c: 48:     int i = 0;
  6023  002588  0E00               	movlw	0
  6024  00258A  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  6025  00258C  0E00               	movlw	0
  6026  00258E  6E06               	movwf	ClearRxBuff@i^0,c
  6027                           
  6028                           ;main.c: 49:     for(i=0; i<ByteNum; i++ ){
  6029  002590  0E00               	movlw	0
  6030  002592  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  6031  002594  0E00               	movlw	0
  6032  002596  6E06               	movwf	ClearRxBuff@i^0,c
  6033  002598  EFD8  F012         	goto	l3364
  6034  00259C                     l3360:
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;main.c: 50:         rxData[i] = 0xFF;
  6038  00259C  0E00               	movlw	low _rxData
  6039  00259E  2406               	addwf	ClearRxBuff@i^0,w,c
  6040  0025A0  6ED9               	movwf	fsr2l,c
  6041  0025A2  0E01               	movlw	high _rxData
  6042  0025A4  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  6043  0025A6  6EDA               	movwf	fsr2h,c
  6044  0025A8  0EFF               	movlw	255
  6045  0025AA  6EDF               	movwf	indf2,c
  6046  0025AC                     
  6047                           ; BSR set to: 0
  6048                           ;main.c: 51:     }
  6049  0025AC  4A06               	infsnz	ClearRxBuff@i^0,f,c
  6050  0025AE  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  6051  0025B0                     l3364:
  6052  0025B0  0100               	movlb	0	; () banked
  6053  0025B2  51AE               	movf	_ByteNum& (0+255),w,b
  6054  0025B4  5C06               	subwf	ClearRxBuff@i^0,w,c
  6055  0025B6  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  6056  0025B8  0A80               	xorlw	128
  6057  0025BA  6E05               	movwf	??_ClearRxBuff^0,c
  6058  0025BC  51AF               	movf	(_ByteNum+1)& (0+255),w,b
  6059  0025BE  0A80               	xorlw	128
  6060  0025C0  5805               	subwfb	??_ClearRxBuff^0,w,c
  6061  0025C2  A0D8               	btfss	status,0,c
  6062  0025C4  EFE6  F012         	goto	u2691
  6063  0025C8  EFE8  F012         	goto	u2690
  6064  0025CC                     u2691:
  6065  0025CC  EFCE  F012         	goto	l3360
  6066  0025D0                     u2690:
  6067  0025D0                     
  6068                           ; BSR set to: 0
  6069  0025D0  0012               	return		;funcret
  6070  0025D2                     __end_of_ClearRxBuff:
  6071                           	opt callstack 0
  6072                           
  6073 ;; *************** function _INTERRUPT_InterruptManager *****************
  6074 ;; Defined at:
  6075 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6093 ;;Total ram usage:        4 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    3
  6096 ;; This function calls:
  6097 ;;		Absolute function
  6098 ;;		_EUSART1_Receive_ISR
  6099 ;;		_EUSART1_Transmit_ISR
  6100 ;;		_EUSART2_Receive_ISR
  6101 ;;		_EUSART2_Transmit_ISR
  6102 ;; This function is called by:
  6103 ;;		Interrupt level 2
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	intcode
  6108  000008                     __pintcode:
  6109                           	opt callstack 0
  6110  000008                     _INTERRUPT_InterruptManager:
  6111                           	opt callstack 17
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;incstack = 0
  6115  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6116  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6117  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6118  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6119  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6120  00001A                     
  6121                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6122  00001A  ACF2               	btfss	242,6,c	;volatile
  6123  00001C  EF12  F000         	goto	i2u271_41
  6124  000020  EF14  F000         	goto	i2u271_40
  6125  000024                     i2u271_41:
  6126  000024  EF89  F000         	goto	i2l159
  6127  000028                     i2u271_40:
  6128  000028                     
  6129                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  6130  000028  010E               	movlb	14	; () banked
  6131  00002A  ADC5               	btfss	197,6,b	;volatile
  6132  00002C  EF1A  F000         	goto	i2u272_41
  6133  000030  EF1C  F000         	goto	i2u272_40
  6134  000034                     i2u272_41:
  6135  000034  EF32  F000         	goto	i2l150
  6136  000038                     i2u272_40:
  6137  000038                     
  6138                           ; BSR set to: 14
  6139  000038  ADCD               	btfss	205,6,b	;volatile
  6140  00003A  EF21  F000         	goto	i2u273_41
  6141  00003E  EF23  F000         	goto	i2u273_40
  6142  000042                     i2u273_41:
  6143  000042  EF32  F000         	goto	i2l150
  6144  000046                     i2u273_40:
  6145  000046                     
  6146                           ; BSR set to: 14
  6147                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  6148  000046  D802               	call	i2u274_48
  6149  000048  EF30  F000         	goto	i2u274_49
  6150  00004C                     i2u274_48:
  6151  00004C  0005               	push	
  6152  00004E  6EFA               	movwf	pclath,c
  6153  000050  0100               	movlb	0	; () banked
  6154  000052  51F8               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  6155  000054  6EFD               	movwf	tosl,c
  6156  000056  51F9               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  6157  000058  6EFE               	movwf	tosh,c
  6158  00005A  6AFF               	clrf	tosu,c
  6159  00005C  50FA               	movf	pclath,w,c
  6160  00005E  0012               	return		;indir
  6161  000060                     i2u274_49:
  6162                           
  6163                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6164  000060  EF89  F000         	goto	i2l159
  6165  000064                     i2l150:
  6166                           
  6167                           ; BSR set to: 14
  6168  000064  AFC5               	btfss	197,7,b	;volatile
  6169  000066  EF37  F000         	goto	i2u275_41
  6170  00006A  EF39  F000         	goto	i2u275_40
  6171  00006E                     i2u275_41:
  6172  00006E  EF4F  F000         	goto	i2l152
  6173  000072                     i2u275_40:
  6174  000072                     
  6175                           ; BSR set to: 14
  6176  000072  AFCD               	btfss	205,7,b	;volatile
  6177  000074  EF3E  F000         	goto	i2u276_41
  6178  000078  EF40  F000         	goto	i2u276_40
  6179  00007C                     i2u276_41:
  6180  00007C  EF4F  F000         	goto	i2l152
  6181  000080                     i2u276_40:
  6182  000080                     
  6183                           ; BSR set to: 14
  6184                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  6185  000080  D802               	call	i2u277_48
  6186  000082  EF4D  F000         	goto	i2u277_49
  6187  000086                     i2u277_48:
  6188  000086  0005               	push	
  6189  000088  6EFA               	movwf	pclath,c
  6190  00008A  0100               	movlb	0	; () banked
  6191  00008C  51F6               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  6192  00008E  6EFD               	movwf	tosl,c
  6193  000090  51F7               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  6194  000092  6EFE               	movwf	tosh,c
  6195  000094  6AFF               	clrf	tosu,c
  6196  000096  50FA               	movf	pclath,w,c
  6197  000098  0012               	return		;indir
  6198  00009A                     i2u277_49:
  6199                           
  6200                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6201  00009A  EF89  F000         	goto	i2l159
  6202  00009E                     i2l152:
  6203                           
  6204                           ; BSR set to: 14
  6205  00009E  A9C5               	btfss	197,4,b	;volatile
  6206  0000A0  EF54  F000         	goto	i2u278_41
  6207  0000A4  EF56  F000         	goto	i2u278_40
  6208  0000A8                     i2u278_41:
  6209  0000A8  EF6C  F000         	goto	i2l154
  6210  0000AC                     i2u278_40:
  6211  0000AC                     
  6212                           ; BSR set to: 14
  6213  0000AC  A9CD               	btfss	205,4,b	;volatile
  6214  0000AE  EF5B  F000         	goto	i2u279_41
  6215  0000B2  EF5D  F000         	goto	i2u279_40
  6216  0000B6                     i2u279_41:
  6217  0000B6  EF6C  F000         	goto	i2l154
  6218  0000BA                     i2u279_40:
  6219  0000BA                     
  6220                           ; BSR set to: 14
  6221                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  6222  0000BA  D802               	call	i2u280_48
  6223  0000BC  EF6A  F000         	goto	i2u280_49
  6224  0000C0                     i2u280_48:
  6225  0000C0  0005               	push	
  6226  0000C2  6EFA               	movwf	pclath,c
  6227  0000C4  0100               	movlb	0	; () banked
  6228  0000C6  51F4               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6229  0000C8  6EFD               	movwf	tosl,c
  6230  0000CA  51F5               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6231  0000CC  6EFE               	movwf	tosh,c
  6232  0000CE  6AFF               	clrf	tosu,c
  6233  0000D0  50FA               	movf	pclath,w,c
  6234  0000D2  0012               	return		;indir
  6235  0000D4                     i2u280_49:
  6236                           
  6237                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6238  0000D4  EF89  F000         	goto	i2l159
  6239  0000D8                     i2l154:
  6240                           
  6241                           ; BSR set to: 14
  6242  0000D8  ABC5               	btfss	197,5,b	;volatile
  6243  0000DA  EF71  F000         	goto	i2u281_41
  6244  0000DE  EF73  F000         	goto	i2u281_40
  6245  0000E2                     i2u281_41:
  6246  0000E2  EF89  F000         	goto	i2l153
  6247  0000E6                     i2u281_40:
  6248  0000E6                     
  6249                           ; BSR set to: 14
  6250  0000E6  ABCD               	btfss	205,5,b	;volatile
  6251  0000E8  EF78  F000         	goto	i2u282_41
  6252  0000EC  EF7A  F000         	goto	i2u282_40
  6253  0000F0                     i2u282_41:
  6254  0000F0  EF89  F000         	goto	i2l153
  6255  0000F4                     i2u282_40:
  6256  0000F4                     
  6257                           ; BSR set to: 14
  6258                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  6259  0000F4  D802               	call	i2u283_48
  6260  0000F6  EF87  F000         	goto	i2u283_49
  6261  0000FA                     i2u283_48:
  6262  0000FA  0005               	push	
  6263  0000FC  6EFA               	movwf	pclath,c
  6264  0000FE  0100               	movlb	0	; () banked
  6265  000100  51F2               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6266  000102  6EFD               	movwf	tosl,c
  6267  000104  51F3               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6268  000106  6EFE               	movwf	tosh,c
  6269  000108  6AFF               	clrf	tosu,c
  6270  00010A  50FA               	movf	pclath,w,c
  6271  00010C  0012               	return		;indir
  6272  00010E                     i2u283_49:
  6273                           
  6274                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  6275  00010E  EF89  F000         	goto	i2l159
  6276  000112                     i2l153:
  6277  000112                     i2l159:
  6278  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6279  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6280  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6281  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6282  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6283  000124  0011               	retfie		f
  6284  000126                     __end_of_INTERRUPT_InterruptManager:
  6285                           	opt callstack 0
  6286                           
  6287 ;; *************** function _EUSART2_Transmit_ISR *****************
  6288 ;; Defined at:
  6289 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_EUSART2_Initialize
  6313 ;;		_INTERRUPT_InterruptManager
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text46
  6318  0025D2                     __ptext46:
  6319                           	opt callstack 0
  6320  0025D2                     _EUSART2_Transmit_ISR:
  6321                           	opt callstack 19
  6322  0025D2                     
  6323                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  6324  0025D2  0E08               	movlw	8
  6325  0025D4  0100               	movlb	0	; () banked
  6326  0025D6  61FB               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6327  0025D8  EFF0  F012         	goto	i2u246_41
  6328  0025DC  EFF2  F012         	goto	i2u246_40
  6329  0025E0                     i2u246_41:
  6330  0025E0  EF0A  F013         	goto	i2l333
  6331  0025E4                     i2u246_40:
  6332  0025E4                     
  6333                           ; BSR set to: 0
  6334                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  6335  0025E4  0EA0               	movlw	low _eusart2TxBuffer
  6336  0025E6  25BC               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  6337  0025E8  6ED9               	movwf	fsr2l,c
  6338  0025EA  6ADA               	clrf	fsr2h,c
  6339  0025EC  0E00               	movlw	high _eusart2TxBuffer
  6340  0025EE  22DA               	addwfc	fsr2h,f,c
  6341  0025F0  50DF               	movf	indf2,w,c
  6342  0025F2  010E               	movlb	14	; () banked
  6343  0025F4  6F9A               	movwf	154,b	;volatile
  6344  0025F6                     
  6345                           ; BSR set to: 14
  6346  0025F6  0100               	movlb	0	; () banked
  6347  0025F8  2BBC               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  6348  0025FA                     
  6349                           ; BSR set to: 0
  6350                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  6351  0025FA  0E07               	movlw	7
  6352  0025FC  65BC               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  6353  0025FE  EF03  F013         	goto	i2u247_41
  6354  002602  EF05  F013         	goto	i2u247_40
  6355  002606                     i2u247_41:
  6356  002606  EF07  F013         	goto	i2l3260
  6357  00260A                     i2u247_40:
  6358  00260A                     
  6359                           ; BSR set to: 0
  6360                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  6361  00260A  0E00               	movlw	0
  6362  00260C  6FBC               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6363  00260E                     i2l3260:
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  6367  00260E  2BFB               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6368                           
  6369                           ;mcc_generated_files/eusart2.c: 218:     }
  6370  002610  EF0C  F013         	goto	i2l336
  6371  002614                     i2l333:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  6375  002614  010E               	movlb	14	; () banked
  6376  002616  9DC5               	bcf	197,6,b	;volatile
  6377  002618                     i2l336:
  6378  002618  0012               	return		;funcret
  6379  00261A                     __end_of_EUSART2_Transmit_ISR:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function _EUSART2_Receive_ISR *****************
  6383 ;; Defined at:
  6384 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    2
  6405 ;; This function calls:
  6406 ;;		Absolute function
  6407 ;;		_EUSART2_DefaultErrorHandler
  6408 ;;		_EUSART2_DefaultFramingErrorHandler
  6409 ;;		_EUSART2_DefaultOverrunErrorHandler
  6410 ;;		_EUSART2_RxDataHandler
  6411 ;; This function is called by:
  6412 ;;		_EUSART2_Initialize
  6413 ;;		_INTERRUPT_InterruptManager
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text47
  6418  001F74                     __ptext47:
  6419                           	opt callstack 0
  6420  001F74                     _EUSART2_Receive_ISR:
  6421                           	opt callstack 17
  6422  001F74                     
  6423                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  6424  001F74  0E90               	movlw	low _eusart2RxStatusBuffer
  6425  001F76  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6426  001F78  6ED9               	movwf	fsr2l,c
  6427  001F7A  6ADA               	clrf	fsr2h,c
  6428  001F7C  0E00               	movlw	high _eusart2RxStatusBuffer
  6429  001F7E  22DA               	addwfc	fsr2h,f,c
  6430  001F80  0E00               	movlw	0
  6431  001F82  6EDF               	movwf	indf2,c
  6432  001F84                     
  6433                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  6434  001F84  010E               	movlb	14	; () banked
  6435  001F86  A59D               	btfss	157,2,b	;volatile
  6436  001F88  EFC8  F00F         	goto	i2u248_41
  6437  001F8C  EFCA  F00F         	goto	i2u248_40
  6438  001F90                     i2u248_41:
  6439  001F90  EFDE  F00F         	goto	i2l3270
  6440  001F94                     i2u248_40:
  6441  001F94                     
  6442                           ; BSR set to: 14
  6443                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  6444  001F94  0E90               	movlw	low _eusart2RxStatusBuffer
  6445  001F96  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6446  001F98  6ED9               	movwf	fsr2l,c
  6447  001F9A  6ADA               	clrf	fsr2h,c
  6448  001F9C  0E00               	movlw	high _eusart2RxStatusBuffer
  6449  001F9E  22DA               	addwfc	fsr2h,f,c
  6450  001FA0  0100               	movlb	0	; () banked
  6451  001FA2  82DF               	bsf	indf2,1,c
  6452  001FA4                     
  6453                           ; BSR set to: 0
  6454                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  6455  001FA4  D802               	call	i2u249_48
  6456  001FA6  EFDE  F00F         	goto	i2u249_49
  6457  001FAA                     i2u249_48:
  6458  001FAA  0005               	push	
  6459  001FAC  6EFA               	movwf	pclath,c
  6460  001FAE  51F0               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  6461  001FB0  6EFD               	movwf	tosl,c
  6462  001FB2  51F1               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  6463  001FB4  6EFE               	movwf	tosh,c
  6464  001FB6  6AFF               	clrf	tosu,c
  6465  001FB8  50FA               	movf	pclath,w,c
  6466  001FBA  0012               	return		;indir
  6467  001FBC                     i2u249_49:
  6468  001FBC                     i2l3270:
  6469                           
  6470                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  6471  001FBC  010E               	movlb	14	; () banked
  6472  001FBE  A39D               	btfss	157,1,b	;volatile
  6473  001FC0  EFE4  F00F         	goto	i2u250_41
  6474  001FC4  EFE6  F00F         	goto	i2u250_40
  6475  001FC8                     i2u250_41:
  6476  001FC8  EFFA  F00F         	goto	i2l3276
  6477  001FCC                     i2u250_40:
  6478  001FCC                     
  6479                           ; BSR set to: 14
  6480                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  6481  001FCC  0E90               	movlw	low _eusart2RxStatusBuffer
  6482  001FCE  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6483  001FD0  6ED9               	movwf	fsr2l,c
  6484  001FD2  6ADA               	clrf	fsr2h,c
  6485  001FD4  0E00               	movlw	high _eusart2RxStatusBuffer
  6486  001FD6  22DA               	addwfc	fsr2h,f,c
  6487  001FD8  0100               	movlb	0	; () banked
  6488  001FDA  84DF               	bsf	indf2,2,c
  6489  001FDC                     
  6490                           ; BSR set to: 0
  6491                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  6492  001FDC  D802               	call	i2u251_48
  6493  001FDE  EFFA  F00F         	goto	i2u251_49
  6494  001FE2                     i2u251_48:
  6495  001FE2  0005               	push	
  6496  001FE4  6EFA               	movwf	pclath,c
  6497  001FE6  51EE               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  6498  001FE8  6EFD               	movwf	tosl,c
  6499  001FEA  51EF               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  6500  001FEC  6EFE               	movwf	tosh,c
  6501  001FEE  6AFF               	clrf	tosu,c
  6502  001FF0  50FA               	movf	pclath,w,c
  6503  001FF2  0012               	return		;indir
  6504  001FF4                     i2u251_49:
  6505  001FF4                     i2l3276:
  6506                           
  6507                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  6508  001FF4  0E90               	movlw	low _eusart2RxStatusBuffer
  6509  001FF6  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6510  001FF8  6ED9               	movwf	fsr2l,c
  6511  001FFA  6ADA               	clrf	fsr2h,c
  6512  001FFC  0E00               	movlw	high _eusart2RxStatusBuffer
  6513  001FFE  22DA               	addwfc	fsr2h,f,c
  6514  002000  50DF               	movf	indf2,w,c
  6515  002002  B4D8               	btfsc	status,2,c
  6516  002004  EF06  F010         	goto	i2u252_41
  6517  002008  EF08  F010         	goto	i2u252_40
  6518  00200C                     i2u252_41:
  6519  00200C  EF17  F010         	goto	i2l3280
  6520  002010                     i2u252_40:
  6521  002010                     
  6522                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  6523  002010  D802               	call	i2u253_48
  6524  002012  EF15  F010         	goto	i2u253_49
  6525  002016                     i2u253_48:
  6526  002016  0005               	push	
  6527  002018  6EFA               	movwf	pclath,c
  6528  00201A  0100               	movlb	0	; () banked
  6529  00201C  51EC               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  6530  00201E  6EFD               	movwf	tosl,c
  6531  002020  51ED               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  6532  002022  6EFE               	movwf	tosh,c
  6533  002024  6AFF               	clrf	tosu,c
  6534  002026  50FA               	movf	pclath,w,c
  6535  002028  0012               	return		;indir
  6536  00202A                     i2u253_49:
  6537                           
  6538                           ;mcc_generated_files/eusart2.c: 242:     } else {
  6539  00202A  EF19  F010         	goto	i2l343
  6540  00202E                     i2l3280:
  6541                           
  6542                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  6543  00202E  ECFE  F013         	call	_EUSART2_RxDataHandler	;wreg free
  6544  002032                     i2l343:
  6545  002032  0012               	return		;funcret
  6546  002034                     __end_of_EUSART2_Receive_ISR:
  6547                           	opt callstack 0
  6548                           
  6549 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  6550 ;; Defined at:
  6551 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		None
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;Total ram usage:        0 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_EUSART2_Initialize
  6575 ;;		_EUSART2_Receive_ISR
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text48
  6580  002982                     __ptext48:
  6581                           	opt callstack 0
  6582  002982                     _EUSART2_DefaultOverrunErrorHandler:
  6583                           	opt callstack 18
  6584  002982                     
  6585                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  6586  002982  010E               	movlb	14	; () banked
  6587  002984  999D               	bcf	157,4,b	;volatile
  6588                           
  6589                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  6590  002986  899D               	bsf	157,4,b	;volatile
  6591  002988                     
  6592                           ; BSR set to: 14
  6593  002988  0012               	return		;funcret
  6594  00298A                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  6595                           	opt callstack 0
  6596                           
  6597 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  6598 ;; Defined at:
  6599 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		None
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_EUSART2_Initialize
  6623 ;;		_EUSART2_Receive_ISR
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text49
  6628  0029A6                     __ptext49:
  6629                           	opt callstack 0
  6630  0029A6                     _EUSART2_DefaultFramingErrorHandler:
  6631                           	opt callstack 18
  6632  0029A6  0012               	return		;funcret
  6633  0029A8                     __end_of_EUSART2_DefaultFramingErrorHandler:
  6634                           	opt callstack 0
  6635                           
  6636 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  6637 ;; Defined at:
  6638 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;Total ram usage:        0 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    1
  6659 ;; This function calls:
  6660 ;;		_EUSART2_RxDataHandler
  6661 ;; This function is called by:
  6662 ;;		_EUSART2_Initialize
  6663 ;;		_EUSART2_Receive_ISR
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text50
  6668  002990                     __ptext50:
  6669                           	opt callstack 0
  6670  002990                     _EUSART2_DefaultErrorHandler:
  6671                           	opt callstack 17
  6672  002990                     
  6673                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  6674  002990  ECFE  F013         	call	_EUSART2_RxDataHandler	;wreg free
  6675  002994  0012               	return		;funcret
  6676  002996                     __end_of_EUSART2_DefaultErrorHandler:
  6677                           	opt callstack 0
  6678                           
  6679 ;; *************** function _EUSART2_RxDataHandler *****************
  6680 ;; Defined at:
  6681 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_EUSART2_Receive_ISR
  6705 ;;		_EUSART2_DefaultErrorHandler
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text51
  6710  0027FC                     __ptext51:
  6711                           	opt callstack 0
  6712  0027FC                     _EUSART2_RxDataHandler:
  6713                           	opt callstack 18
  6714  0027FC                     
  6715                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  6716  0027FC  0E98               	movlw	low _eusart2RxBuffer
  6717  0027FE  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6718  002800  6ED9               	movwf	fsr2l,c
  6719  002802  6ADA               	clrf	fsr2h,c
  6720  002804  0E00               	movlw	high _eusart2RxBuffer
  6721  002806  22DA               	addwfc	fsr2h,f,c
  6722  002808  CE99 FFDF          	movff	3737,indf2	;volatile
  6723  00280C  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
  6724  00280E                     
  6725                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  6726  00280E  0E07               	movlw	7
  6727  002810  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
  6728  002812  EF0D  F014         	goto	i2u241_41
  6729  002816  EF0F  F014         	goto	i2u241_40
  6730  00281A                     i2u241_41:
  6731  00281A  EF11  F014         	goto	i2l3096
  6732  00281E                     i2u241_40:
  6733  00281E                     
  6734                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  6735  00281E  0E00               	movlw	0
  6736  002820  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6737  002822                     i2l3096:
  6738                           
  6739                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  6740  002822  0100               	movlb	0	; () banked
  6741  002824  2BBA               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  6742  002826                     
  6743                           ; BSR set to: 0
  6744  002826  0012               	return		;funcret
  6745  002828                     __end_of_EUSART2_RxDataHandler:
  6746                           	opt callstack 0
  6747                           
  6748 ;; *************** function _EUSART1_Transmit_ISR *****************
  6749 ;; Defined at:
  6750 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_EUSART1_Initialize
  6774 ;;		_INTERRUPT_InterruptManager
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text52
  6779  00265E                     __ptext52:
  6780                           	opt callstack 0
  6781  00265E                     _EUSART1_Transmit_ISR:
  6782                           	opt callstack 19
  6783  00265E                     
  6784                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6785  00265E  0E10               	movlw	16
  6786  002660  0100               	movlb	0	; () banked
  6787  002662  61FA               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6788  002664  EF36  F013         	goto	i2u261_41
  6789  002668  EF38  F013         	goto	i2u261_40
  6790  00266C                     i2u261_41:
  6791  00266C  EF4E  F013         	goto	i2l477
  6792  002670                     i2u261_40:
  6793  002670                     
  6794                           ; BSR set to: 0
  6795                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  6796  002670  0E80               	movlw	low _eusart1TxBuffer
  6797  002672  25B7               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  6798  002674  6ED9               	movwf	fsr2l,c
  6799  002676  6ADA               	clrf	fsr2h,c
  6800  002678  0E00               	movlw	high _eusart1TxBuffer
  6801  00267A  22DA               	addwfc	fsr2h,f,c
  6802  00267C  50DF               	movf	indf2,w,c
  6803  00267E  6E9A               	movwf	154,c	;volatile
  6804  002680                     
  6805                           ; BSR set to: 0
  6806  002680  2BB7               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6807  002682                     
  6808                           ; BSR set to: 0
  6809                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6810  002682  0E0F               	movlw	15
  6811  002684  65B7               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  6812  002686  EF47  F013         	goto	i2u262_41
  6813  00268A  EF49  F013         	goto	i2u262_40
  6814  00268E                     i2u262_41:
  6815  00268E  EF4B  F013         	goto	i2l3336
  6816  002692                     i2u262_40:
  6817  002692                     
  6818                           ; BSR set to: 0
  6819                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6820  002692  0E00               	movlw	0
  6821  002694  6FB7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6822  002696                     i2l3336:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6826  002696  2BFA               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6827                           
  6828                           ;mcc_generated_files/eusart1.c: 209:     }
  6829  002698  EF50  F013         	goto	i2l480
  6830  00269C                     i2l477:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  6834  00269C  010E               	movlb	14	; () banked
  6835  00269E  99C5               	bcf	197,4,b	;volatile
  6836  0026A0                     i2l480:
  6837  0026A0  0012               	return		;funcret
  6838  0026A2                     __end_of_EUSART1_Transmit_ISR:
  6839                           	opt callstack 0
  6840                           
  6841 ;; *************** function _EUSART1_Receive_ISR *****************
  6842 ;; Defined at:
  6843 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    2
  6864 ;; This function calls:
  6865 ;;		Absolute function
  6866 ;;		_EUSART1_DefaultErrorHandler
  6867 ;;		_EUSART1_DefaultFramingErrorHandler
  6868 ;;		_EUSART1_DefaultOverrunErrorHandler
  6869 ;;		_EUSART1_RxDataHandler
  6870 ;; This function is called by:
  6871 ;;		_EUSART1_Initialize
  6872 ;;		_INTERRUPT_InterruptManager
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text53
  6877  002034                     __ptext53:
  6878                           	opt callstack 0
  6879  002034                     _EUSART1_Receive_ISR:
  6880                           	opt callstack 17
  6881  002034                     
  6882                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6883  002034  0E60               	movlw	low _eusart1RxStatusBuffer
  6884  002036  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6885  002038  6ED9               	movwf	fsr2l,c
  6886  00203A  6ADA               	clrf	fsr2h,c
  6887  00203C  0E00               	movlw	high _eusart1RxStatusBuffer
  6888  00203E  22DA               	addwfc	fsr2h,f,c
  6889  002040  0E00               	movlw	0
  6890  002042  6EDF               	movwf	indf2,c
  6891  002044                     
  6892                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  6893  002044  A49D               	btfss	157,2,c	;volatile
  6894  002046  EF27  F010         	goto	i2u263_41
  6895  00204A  EF29  F010         	goto	i2u263_40
  6896  00204E                     i2u263_41:
  6897  00204E  EF3D  F010         	goto	i2l3346
  6898  002052                     i2u263_40:
  6899  002052                     
  6900                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6901  002052  0E60               	movlw	low _eusart1RxStatusBuffer
  6902  002054  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6903  002056  6ED9               	movwf	fsr2l,c
  6904  002058  6ADA               	clrf	fsr2h,c
  6905  00205A  0E00               	movlw	high _eusart1RxStatusBuffer
  6906  00205C  22DA               	addwfc	fsr2h,f,c
  6907  00205E  0100               	movlb	0	; () banked
  6908  002060  82DF               	bsf	indf2,1,c
  6909  002062                     
  6910                           ; BSR set to: 0
  6911                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6912  002062  D802               	call	i2u264_48
  6913  002064  EF3D  F010         	goto	i2u264_49
  6914  002068                     i2u264_48:
  6915  002068  0005               	push	
  6916  00206A  6EFA               	movwf	pclath,c
  6917  00206C  51EA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6918  00206E  6EFD               	movwf	tosl,c
  6919  002070  51EB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6920  002072  6EFE               	movwf	tosh,c
  6921  002074  6AFF               	clrf	tosu,c
  6922  002076  50FA               	movf	pclath,w,c
  6923  002078  0012               	return		;indir
  6924  00207A                     i2u264_49:
  6925  00207A                     i2l3346:
  6926                           
  6927                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  6928  00207A  A29D               	btfss	157,1,c	;volatile
  6929  00207C  EF42  F010         	goto	i2u265_41
  6930  002080  EF44  F010         	goto	i2u265_40
  6931  002084                     i2u265_41:
  6932  002084  EF58  F010         	goto	i2l3352
  6933  002088                     i2u265_40:
  6934  002088                     
  6935                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6936  002088  0E60               	movlw	low _eusart1RxStatusBuffer
  6937  00208A  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6938  00208C  6ED9               	movwf	fsr2l,c
  6939  00208E  6ADA               	clrf	fsr2h,c
  6940  002090  0E00               	movlw	high _eusart1RxStatusBuffer
  6941  002092  22DA               	addwfc	fsr2h,f,c
  6942  002094  0100               	movlb	0	; () banked
  6943  002096  84DF               	bsf	indf2,2,c
  6944  002098                     
  6945                           ; BSR set to: 0
  6946                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6947  002098  D802               	call	i2u266_48
  6948  00209A  EF58  F010         	goto	i2u266_49
  6949  00209E                     i2u266_48:
  6950  00209E  0005               	push	
  6951  0020A0  6EFA               	movwf	pclath,c
  6952  0020A2  51E8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6953  0020A4  6EFD               	movwf	tosl,c
  6954  0020A6  51E9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6955  0020A8  6EFE               	movwf	tosh,c
  6956  0020AA  6AFF               	clrf	tosu,c
  6957  0020AC  50FA               	movf	pclath,w,c
  6958  0020AE  0012               	return		;indir
  6959  0020B0                     i2u266_49:
  6960  0020B0                     i2l3352:
  6961                           
  6962                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6963  0020B0  0E60               	movlw	low _eusart1RxStatusBuffer
  6964  0020B2  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6965  0020B4  6ED9               	movwf	fsr2l,c
  6966  0020B6  6ADA               	clrf	fsr2h,c
  6967  0020B8  0E00               	movlw	high _eusart1RxStatusBuffer
  6968  0020BA  22DA               	addwfc	fsr2h,f,c
  6969  0020BC  50DF               	movf	indf2,w,c
  6970  0020BE  B4D8               	btfsc	status,2,c
  6971  0020C0  EF64  F010         	goto	i2u267_41
  6972  0020C4  EF66  F010         	goto	i2u267_40
  6973  0020C8                     i2u267_41:
  6974  0020C8  EF75  F010         	goto	i2l3356
  6975  0020CC                     i2u267_40:
  6976  0020CC                     
  6977                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6978  0020CC  D802               	call	i2u268_48
  6979  0020CE  EF73  F010         	goto	i2u268_49
  6980  0020D2                     i2u268_48:
  6981  0020D2  0005               	push	
  6982  0020D4  6EFA               	movwf	pclath,c
  6983  0020D6  0100               	movlb	0	; () banked
  6984  0020D8  51E6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6985  0020DA  6EFD               	movwf	tosl,c
  6986  0020DC  51E7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6987  0020DE  6EFE               	movwf	tosh,c
  6988  0020E0  6AFF               	clrf	tosu,c
  6989  0020E2  50FA               	movf	pclath,w,c
  6990  0020E4  0012               	return		;indir
  6991  0020E6                     i2u268_49:
  6992                           
  6993                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6994  0020E6  EF77  F010         	goto	i2l487
  6995  0020EA                     i2l3356:
  6996                           
  6997                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6998  0020EA  EC14  F014         	call	_EUSART1_RxDataHandler	;wreg free
  6999  0020EE                     i2l487:
  7000  0020EE  0012               	return		;funcret
  7001  0020F0                     __end_of_EUSART1_Receive_ISR:
  7002                           	opt callstack 0
  7003                           
  7004 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7005 ;; Defined at:
  7006 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		None
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7024 ;;Total ram usage:        0 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_EUSART1_Initialize
  7030 ;;		_EUSART1_Receive_ISR
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text54
  7035  002996                     __ptext54:
  7036                           	opt callstack 0
  7037  002996                     _EUSART1_DefaultOverrunErrorHandler:
  7038                           	opt callstack 18
  7039  002996                     
  7040                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  7041  002996  989D               	bcf	157,4,c	;volatile
  7042                           
  7043                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  7044  002998  889D               	bsf	157,4,c	;volatile
  7045  00299A  0012               	return		;funcret
  7046  00299C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7050 ;; Defined at:
  7051 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		None
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;Total ram usage:        0 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_EUSART1_Initialize
  7075 ;;		_EUSART1_Receive_ISR
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text55
  7080  0029A8                     __ptext55:
  7081                           	opt callstack 0
  7082  0029A8                     _EUSART1_DefaultFramingErrorHandler:
  7083                           	opt callstack 18
  7084  0029A8  0012               	return		;funcret
  7085  0029AA                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7086                           	opt callstack 0
  7087                           
  7088 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7089 ;; Defined at:
  7090 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;		None
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      void 
  7097 ;; Registers used:
  7098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;Total ram usage:        0 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    1
  7111 ;; This function calls:
  7112 ;;		_EUSART1_RxDataHandler
  7113 ;; This function is called by:
  7114 ;;		_EUSART1_Initialize
  7115 ;;		_EUSART1_Receive_ISR
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text56
  7120  00299C                     __ptext56:
  7121                           	opt callstack 0
  7122  00299C                     _EUSART1_DefaultErrorHandler:
  7123                           	opt callstack 17
  7124  00299C                     
  7125                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7126  00299C  EC14  F014         	call	_EUSART1_RxDataHandler	;wreg free
  7127  0029A0  0012               	return		;funcret
  7128  0029A2                     __end_of_EUSART1_DefaultErrorHandler:
  7129                           	opt callstack 0
  7130                           
  7131 ;; *************** function _EUSART1_RxDataHandler *****************
  7132 ;; Defined at:
  7133 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;Total ram usage:        0 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_EUSART1_Receive_ISR
  7157 ;;		_EUSART1_DefaultErrorHandler
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text57
  7162  002828                     __ptext57:
  7163                           	opt callstack 0
  7164  002828                     _EUSART1_RxDataHandler:
  7165                           	opt callstack 18
  7166  002828                     
  7167                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7168  002828  0E70               	movlw	low _eusart1RxBuffer
  7169  00282A  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  7170  00282C  6ED9               	movwf	fsr2l,c
  7171  00282E  6ADA               	clrf	fsr2h,c
  7172  002830  0E00               	movlw	high _eusart1RxBuffer
  7173  002832  22DA               	addwfc	fsr2h,f,c
  7174  002834  CF99 FFDF          	movff	3993,indf2	;volatile
  7175  002838  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
  7176  00283A                     
  7177                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7178  00283A  0E0F               	movlw	15
  7179  00283C  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7180  00283E  EF23  F014         	goto	i2u242_41
  7181  002842  EF25  F014         	goto	i2u242_40
  7182  002846                     i2u242_41:
  7183  002846  EF27  F014         	goto	i2l3116
  7184  00284A                     i2u242_40:
  7185  00284A                     
  7186                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7187  00284A  0E00               	movlw	0
  7188  00284C  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7189  00284E                     i2l3116:
  7190                           
  7191                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7192  00284E  0100               	movlb	0	; () banked
  7193  002850  2BB5               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7194  002852                     
  7195                           ; BSR set to: 0
  7196  002852  0012               	return		;funcret
  7197  002854                     __end_of_EUSART1_RxDataHandler:
  7198                           	opt callstack 0
  7199                           
  7200                           	psect	text58
  7201  000000                     __ptext58:
  7202                           	opt callstack 0
  7203  000000                     
  7204                           	psect	rparam
  7205  0000                     
  7206                           	psect	temp
  7207  00005B                     btemp:
  7208                           	opt callstack 0
  7209  00005B                     	ds	1
  7210  0000                     int$flags	set	btemp
  7211  0000                     wtemp8	set	btemp+1
  7212  0000                     ttemp5	set	btemp+1
  7213  0000                     ttemp6	set	btemp+4
  7214  0000                     ttemp7	set	btemp+8
  7215                           tosu	equ	0xFFF
  7216                           tosh	equ	0xFFE
  7217                           tosl	equ	0xFFD
  7218                           stkptr	equ	0xFFC
  7219                           pclatu	equ	0xFFB
  7220                           pclath	equ	0xFFA
  7221                           pcl	equ	0xFF9
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           indf0	equ	0xFEF
  7229                           postinc0	equ	0xFEE
  7230                           postdec0	equ	0xFED
  7231                           preinc0	equ	0xFEC
  7232                           plusw0	equ	0xFEB
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           postinc1	equ	0xFE6
  7238                           postdec1	equ	0xFE5
  7239                           preinc1	equ	0xFE4
  7240                           plusw1	equ	0xFE3
  7241                           fsr1h	equ	0xFE2
  7242                           fsr1l	equ	0xFE1
  7243                           bsr	equ	0xFE0
  7244                           indf2	equ	0xFDF
  7245                           postinc2	equ	0xFDE
  7246                           postdec2	equ	0xFDD
  7247                           preinc2	equ	0xFDC
  7248                           plusw2	equ	0xFDB
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8


Data Sizes:
    Strings     38
    Constant    0
    Data        11
    BSS         230
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     40     156
    BANK1           256      0     143
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1732_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[14]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintRXBuff
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintRXBuff
    _PrintRXBuff->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   27939
                                             85 COMRAM     1     1      0
                                             39 BANK0      1     1      0
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _PrintRXBuff
                             _RXMode
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintRXBuff                                          3     3      0   13475
                                             84 COMRAM     1     1      0
                                             37 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13373
                                             27 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13100
                                             82 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   12555
                                             72 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1336
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     495
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearRxBuff
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _PrintRXBuff
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      8F       8       55.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      9C       5       97.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     185       6        0.0%
DATA                 0      0     185       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 01 17:59:16 2021

                      _eusart1TxBufferRemaining 00FA                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 2212  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 28D6                                             l124 28EE  
                                           l127 28BC                                             l320 244A  
                                           l144 29A4                                             l321 2462  
                                           l330 2980                                             l324 2492  
                                           l503 296C                                             l512 294E  
                                           l506 2962                                             l362 2930  
                                           l515 2958                                             l371 2926  
                                           l452 2906                                             l509 2976  
                                           l365 2944                                             l446 230C  
                                           l359 293A                                             l368 291C  
                                           l296 2290                                             l465 24EA  
                                           l641 1F38                                             l713 101E  
                                           l561 298A                                             l571 25D0  
                                           l643 1F72                                             l651 1436  
                                           l563 298C                                             l741 28A0  
                                           l565 298E                                             l638 1EF6  
                                           l728 138C                                             l649 142E  
                                           l737 23CE                                             l577 2372  
                                           l674 16A6                                             l738 23D6  
                                           l683 1744                                             l676 16AE  
                                           l669 166C                                             l855 1C64  
                                           l697 18E0                                             l699 1942  
                                           l868 1DC8                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 293C         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 2932                                             _abs 26A2  
                                           _pad 1EB2                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l3000 102C                                            l3010 10A6  
                                          l3002 102E                                            l3012 10C6  
                                          l3020 1130                                            l3004 1054  
                                          l3100 2946                                            l3030 11FC  
                                          l3022 1156                                            l3014 10D4  
                                          l3006 108A                                            l3102 2964  
                                          l1503 287A                                            l1416 26D8  
                                          l3040 12AA                                            l3032 1222  
                                          l3024 117C                                            l3008 1098  
                                          l3104 295A                                            l3200 228C  
                                          l1450 1ADC                                            l1514 242C  
                                          l3050 132E                                            l3034 1248  
                                          l3026 11C4                                            l3018 111E  
                                          l3106 296E                                            l3130 21BE  
                                          l1419 26E0                                            l3300 24E0  
                                          l3036 1260                                            l3044 12E6  
                                          l3060 1354                                            l3140 21F4  
                                          l3132 21E8                                            l3220 28C6  
                                          l1509 27FA                                            l1453 271C  
                                          l1525 2754                                            l3302 24E4  
                                          l3062 137A                                            l3046 130C  
                                          l3054 133A                                            l3038 126E  
                                          l3142 21F6                                            l3134 21EA  
                                          l3126 2186                                            l3150 28A2  
                                          l3222 28CA                                            l1447 1AD4  
                                          l1519 2434                                            l3304 24E8  
                                          l2600 2478                                            l3056 1348  
                                          l3048 131A                                            l3160 22B2  
                                          l3080 2914                                            l3152 28D8  
                                          l3144 21F8                                            l3136 21EC  
                                          l3128 21AE                                            l3224 28CE  
                                          l3216 28BE                                            l1473 278C  
                                          l2602 2488                                            l2610 20F0  
                                          l3170 22C6                                            l3162 22B6  
                                          l3154 2292                                            l3082 2932  
                                          l3146 21FA                                            l3138 21EE  
                                          l3226 28D2                                            l3218 28C2  
                                          l1459 27C4                                            l1467 253C  
                                          l2700 1ADE                                            l2604 248C  
                                          l2620 2172                                            l2612 2102  
                                          l3172 22D2                                            l3164 22BA  
                                          l3156 2296                                            l3084 2928  
                                          l3180 2218                                            l3148 29A2  
                                          l2710 1B22                                            l2702 1AE2  
                                          l2606 248E                                            l2614 2114  
                                          l2630 263C                                            l3174 22DE  
                                          l3166 22BE                                            l3158 22A2  
                                          l3086 293C                                            l3078 291E  
                                          l3190 2242                                            l3182 2224  
                                          l3360 259C                                            l2720 1B78  
                                          l2712 1B42                                            l2704 1AF0  
                                          l2608 297A                                            l1488 2184  
                                          l2616 211E                                            l1496 265C  
                                          l2624 261A                                            l2632 27C6  
                                          l2800 1406                                            l3176 2308  
                                          l3168 22C2                                            l3192 2246  
                                          l3184 2234                                            l3600 1E88  
                                          l3362 25AC                                            l3290 24A6  
                                          l3282 28F0                                            l2730 1BFA  
                                          l2722 1B8C                                            l2714 1B46  
                                          l2706 1B10                                            l2618 213C  
                                          l2626 2626                                            l2634 27D2  
                                          l2650 1ED4                                            l2810 145E  
                                          l2802 1408                                            l2642 271E  
                                          l3530 237C                                            l3098 2950  
                                          l3194 224A                                            l3186 223A  
                                          l3178 2214                                            l3364 25B0  
                                          l3292 24C6                                            l2740 1C44  
                                          l2732 1BFC                                            l2724 1B9A  
                                          l2716 1B52                                            l2708 1B14  
                                          l2628 2638                                            l2636 27D6  
                                          l2660 1F1A                                            l2652 1EE2  
                                          l2820 14FE                                            l2812 1464  
                                          l2804 1422                                            l2900 1864  
                                          l3532 238A                                            l3196 2256  
                                          l3188 223E                                            l3358 2588  
                                          l3294 24C8                                            l3286 2494  
                                          l2734 1C0E                                            l2726 1BAC  
                                          l2718 1B70                                            l2750 1C98  
                                          l2670 26BC                                            l2590 2438  
                                          l2638 27EE                                            l2662 1F46  
                                          l2654 1EEE                                            l2646 1EB2  
                                          l2830 15A6                                            l2822 1504  
                                          l2814 146C                                            l2806 143E  
                                          l2910 18EE                                            l2902 1880  
                                          l3534 23B0                                            l3542 230E  
                                          l3198 2262                                            l3550 1DCA  
                                          l3296 24D8                                            l3288 2494  
                                          l2920 1944                                            l2728 1BDA  
                                          l2736 1C14                                            l2760 1CF0  
                                          l2752 1C9C                                            l2744 1C66  
                                          l2592 2438                                            l2664 1F5A  
                                          l2656 1F02                                            l2648 1EC0  
                                          l2840 1608                                            l2832 15C0  
                                          l2824 150A                                            l2816 1476  
                                          l2808 1450                                            l2672 2756  
                                          l2680 23D8                                            l2912 18F4  
                                          l2904 189E                                            l3528 2374  
                                          l3536 2854                                            l3544 2324  
                                          l3560 1DD6                                            l3552 1DCE  
                                          l3298 24DC                                            l2690 278E  
                                          l2930 19B6                                            l2922 1958  
                                          l2738 1C24                                            l2770 1D72  
                                          l2762 1D04                                            l2754 1CAA  
                                          l2746 1C6A                                            l2594 245A  
                                          l2658 1F16                                            l2842 160E  
                                          l2850 1644                                            l2834 15DA  
                                          l2818 147C                                            l2826 156E  
                                          l2914 1904                                            l2906 18B8  
                                          l3538 285E                                            l3546 234E  
                                          l3570 1DF0                                            l3562 1DD8  
                                          l3554 1DD0                                            l2780 24EC  
                                          l2940 19DE                                            l2932 19BA  
                                          l2924 195C                                            l2764 1D12  
                                          l2772 1D78                                            l2756 1CCA  
                                          l2748 1C78                                            l2668 26A2  
                                          l2596 2464                                            l2844 1620  
                                          l2828 1588                                            l2836 15E8  
                                          l2676 26E2                                            l2684 240E  
                                          l2916 191A                                            l2908 18D2  
                                          l2860 169A                                            l3548 2354  
                                          l3580 1E2A                                            l3572 1DF4  
                                          l3564 1DDA                                            l3556 1DD2  
                                          l2694 287C                                            l2782 24F0  
                                          l2942 19E6                                            l2926 1960  
                                          l2774 1D88                                            l2766 1D40  
                                          l2758 1CE8                                            l2598 2476  
                                          l2846 162C                                            l2838 15FA  
                                          l2686 2420                                            l2870 16FE  
                                          l2862 16C4                                            l2854 166E  
                                          l3590 1E6C                                            l3582 1E3A  
                                          l3574 1DFA                                            l3566 1DE8  
                                          l3558 1DD4                                            ?_pad 0017  
                                          l2696 2898                                            l2784 2504  
                                          l2952 1A94                                            l2944 1A1C  
                                          l2936 19C0                                            l2928 197E  
                                          l2776 1DA8                                            l2768 1D60  
                                          l2848 1634                                            l2792 138E  
                                          l2872 1704                                            l2864 16CC  
                                          l2856 167E                                            l3672 0FDE  
                                          l3592 1E72                                            l3584 1E40  
                                          l3568 1DEC                                            l2786 2532  
                                          l2954 1AA6                                            l3674 1A06  
                                          l2938 19D6                                            l2794 13AE  
                                          l2890 17D6                                            l2882 1778  
                                          l2874 170C                                            l2866 16EC  
                                          l2858 1680                                            l2970 0F72  
                                          l2962 0F28                                            l3594 1E76  
                                          l3586 1E54                                            l3578 1E12  
                                          l2788 2536                                            l2956 1AB8  
                                          l2948 1A54                                            l2796 13D6  
                                          l2884 178A                                            l2892 17EA  
                                          l2876 1728                                            l2868 16F4  
                                          l2980 0F98                                            l2972 0F7E  
                                          l2964 0F4E                                            l3596 1E7A  
                                          l3588 1E5A                                            l2798 13F6  
                                          l2894 17FA                                            l2878 1738  
                                          l2974 0F80                                            l2966 0F5C  
                                          l3598 1E80                                            l2896 1800  
                                          l2888 17C4                                            l2992 0FAA  
                                          l2984 0F9E                                            l2976 0F92  
                                          l2968 0F6E                                            l2898 1806  
                                          l2996 0FB6                                            l2988 0FA4  
                                          l2998 100C                                            STR_1 0F01  
                                          STR_2 0F19                                            u2000 15E8  
                                          u2001 15E4                                            u2010 15FA  
                                          u2011 15F6                                            u2020 1608  
                                          u2100 178A                                            u2021 1604  
                                          u2101 1786                                            u2030 1620  
                                          u2110 17BE                                            u2031 161C  
                                          u2111 17B8                                            u2200 18EE  
                                          u2120 17C0                                            u2040 167E  
                                          u2201 18EA                                            u2041 167A  
                                          u2210 197E                                            u2130 17D6  
                                          u2050 169A                                            u2211 197A  
                                          u2131 17D2                                            u2051 1696  
                                          u2220 19B6                                            u1500 245A  
                                          u2140 183E                                            u2060 16C4  
                                          u2300 102C                                            u2221 19B2  
                                          u1501 2456                                            u2061 16C0  
                                          u2301 1028                                            _LATA 000F83  
                                          u2230 19D2                                            u1510 2488  
                                          u2150 1880                                            u2070 1728  
                                          u2310 1054                                            _LATB 000F84  
                                          u2231 19CE                                            u1511 2484  
                                          u2151 187C                                            u2071 1724  
                                          u2311 1050                                            _LATC 000F85  
                                          u2240 1A8E                                            u1520 2102  
                                          u1600 1EC0                                            u2160 189E  
                                          u2080 1772                                            u2400 130C  
                                          u2320 1098                                            _LATD 000F86  
                                          u2241 1A88                                            u1521 20FE  
                                          u1601 1EBC                                            u2161 189A  
                                          u2145 182C                                            u2081 176C  
                                          u2401 1308                                            u2321 1094  
                                          _LATE 000F87                                            u2250 1A90  
                                          u1530 2114                                            u1610 1EE2  
                                          u2170 18B8                                            u2090 1774  
                                          u2330 1116                                            u1531 2110  
                                          u1611 1EDE                                            u2171 18B4  
                                          u2331 1110                                            u2260 1AA6  
                                          u1540 213C                                            u1620 1F38  
                                          u1700 240A                                            u2180 18D2  
                                          u2340 1118                                            u2261 1AA2  
                                          u1541 2138                                            u1621 1F34  
                                          u2181 18CE                                            u2270 1AB8  
                                          u1550 2172                                            u1630 1F46  
                                          u1710 2420                                            u2190 18E0  
                                          u2350 1130                                            u2271 1AB4  
                                          u1551 216E                                            u1631 1F42  
                                          u1711 241C                                            u2191 18DC  
                                          u2351 112C                                            u1720 27BE  
                                          u1800 1C24                                            u1640 26BC  
                                          u1560 265C                                            u2360 1156  
                                          u2280 0F4E                                            u1721 27B8  
                                          u1801 1C20                                            u1641 26B8  
                                          u1561 2658                                            u2361 1152  
                                          u2281 0F4A                                            u1730 27C0  
                                          u1810 1C78                                            u1490 244A  
                                          u1570 27EE                                            u1650 2786  
                                          u2370 117C                                            u2290 101E  
                                          u1811 1C74                                            u1491 2446  
                                          u1571 27EA                                            u1651 2780  
                                          u2371 1178                                            u2291 101A  
                                          u2540 2904                                            u1740 1AF0  
                                          u1820 1CAA                                            u1900 13C0  
                                          u1660 2788                                            u1580 274E  
                                          u2380 1222                                            u2541 28FE  
                                          u1741 1AEC                                            u1821 1CA6  
                                          u1581 2748                                            u2381 121E  
                                          u2550 2906                                            u1750 1B22  
                                          u1830 1CE8                                            u1910 13D6  
                                          u1670 2716                                            u1590 2750  
                                          u2390 1248                                            u1751 1B1E  
                                          u1831 1CE4                                            u1911 13D2  
                                          u1671 2710                                            u2391 1244  
                                          u2560 24A6                                            u1840 1D12  
                                          u1920 1406                                            u1680 2718  
                                          u2561 24A2                                            u1761 1B4C  
                                          u1841 1D0E                                            u1921 1402  
                                          u2570 24D8                                            u1770 1B70  
                                          u1850 1D40                                            u1930 1422  
                                          u1690 2408                                            u2571 24D4  
                                          u1771 1B6C                                            u1851 1D3C  
                                          u1931 141E                                            u1691 2402  
                                          u1780 1B9A                                            u1860 1D88  
                                          u1940 1450                                            u2900 2372  
                                          u1781 1B96                                            u1861 1D84  
                                          u1941 144C                                            u2901 236E  
                                          u1870 2504                                            u1790 1BDA  
                                          u1950 145E                                            u2910 1E0E  
                                          u1871 2500                                            u1791 1BD6  
                                          u1951 145A                                            u2911 1E0A  
                                          u1880 2532                                            u1960 1588  
                                          u2920 1E54                                            u1881 252E  
                                          u1961 1584                                            u2921 1E50  
                                          u2690 25D0                                            u1970 15A6  
                                          u1890 13BE                                            u2930 1E6C  
                                          u2691 25CC                                            u1971 15A2  
                                          u1891 13B8                                            u2931 1E68  
                                          u1980 15C0                                            u2940 1E98  
                                          _PMD0 000EE1                                            u1981 15BC  
                                          u2941 1E92                                            _PMD1 000EE2  
                                          u1990 15DA                                            _PMD2 000EE3  
                                          u1991 15D6                                            _PMD3 000EE4  
                                          _PMD4 000EE5                                            _PMD5 000EE6  
                                          u2890 23CE                                            u2946 1E9A  
                                          u2891 23CA                                            u2957 1E30  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 2436  
                                          abs@a 0017                                            _dbuf 0164  
                                          _atoi 1944                                            _main 1DCA  
                                          _dtoa 138E                                   ?_EUSART1_Read 0001  
                                          _loop 00B0                                            _prec 00AC  
                                          _nout 00A8                                            pad@i 001E  
                                          pad@p 001B                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            btemp 005B  
                                          _xtoa 166E                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 261A                                   __CFG_CSWEN$ON 000000  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 28F0                           _eusart1RxStatusBuffer 0060  
                               __end_of___aodiv 1C66                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 1DCA                                   __CFG_WDTE$OFF 000000  
                                         ?_xtoa 0022                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 29A0                                           i2l333 2614  
                                         i2l350 29A6                                           i2l343 2032  
                                         i2l159 0112                                           i2l336 2618  
                                         i2l353 2988                                           i2l347 2826  
                                         i2l356 2994                                           i2l480 26A0  
                                         i2l491 2852                                           i2l477 269C  
                                         i2l494 29A8                                           i2l487 20EE  
                                         i2l497 299A                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 00C6  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 00B3  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 265E                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                         _data1 0184                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                                           _fputc 20F0  
                               __end_of_isalpha 271E                                           _fputs 261A  
                               __end_of_isdigit 27C6                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00AA  
                                         _putch 2978                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 2756  
                               __end_of_isspace 253E                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 278E                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 2588  
                                ??_EUSART1_Read 0005                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 000FD8                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 2436  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 29AA  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 29A8  
         __end_of_EUSART2_SetTxInterruptHandler 291E          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 2914                                    _toupper$1784 0011  
                               __initialization 253E                                    __end_of_atoi 1ADE  
                    __end_of_EUSART1_Initialize 230E                                    __end_of_main 1EB2  
                                  __end_of_dtoa 166E                                    __end_of_xtoa 1944  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                                        ??_main 0056                                          ??_dtoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 2996                     _EUSART2_DefaultErrorHandler 2990  
                         ?_EUSART1_Transmit_ISR 0001                      __end_of_EUSART2_Initialize 2292  
                      _eusart2TxBufferRemaining 00FB                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                          i2l3110 2838  
                                        i2l3112 283A                                  __CFG_WDTCCS$SC 000000  
                                        i2l3114 284A                                          i2l3202 2982  
                                        i2l3116 284E                                          i2l3108 2828  
                                        i2l3204 2990                                          i2l3206 2996  
                                        i2l3208 299C                                          i2l3330 2680  
                                        i2l3090 280C                                          i2l3250 25D2  
                                        i2l3340 2044                                          i2l3332 2682  
                                        i2l3092 280E                                          i2l3260 260E  
                                        i2l3252 25E4                                          i2l3350 2098  
                                        i2l3342 2052                                          i2l3334 2692  
                                        i2l3326 265E                                          i2l3094 281E  
                                        i2l3270 1FBC                                          i2l3262 1F74  
                                        i2l3254 25F6                                          i2l3352 20B0  
                                        i2l3344 2062                                          i2l3336 2696  
                                        i2l3328 2670                                          i2l3096 2822  
                                        i2l3088 27FC                                          i2l3280 202E  
                                        i2l3272 1FCC                                          i2l3264 1F84  
                                        i2l3256 25FA                                          i2l3354 20CC  
                                        i2l3346 207A                                          i2l3338 2034  
                                        i2l3274 1FDC                                          i2l3266 1F94  
                                        i2l3258 260A                                          i2l3356 20EA  
                                        i2l3348 2088                                          i2l3276 1FF4  
                                        i2l3268 1FA4                                          i2l3380 0046  
                                        i2l3278 2010                                          i2l3390 00E6  
                                        i2l3382 0072                                          i2l3374 001A  
                                        i2l3392 00F4                                          i2l3384 0080  
                                        i2l3376 0028                                          i2l3386 00AC  
                                        i2l3378 0038                                          i2l3388 00BA  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00CE  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 298A  
                                __CFG_PWRTE$OFF 000000                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 287C                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 2564  
                                        clear_1 2570                                          _rxData 0100  
                   _EUSART2_FramingErrorHandler 00F0                                          _printf 2854  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 27C6                                   ??_PrintRXBuff 0055  
                                        fputc@c 0007                                  _PMD_Initialize 28A2  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_islower 0007  
                                  __mediumconst 0000                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 25D2                                __end_of_vfprintf 23D8  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0070                                       ??_toupper 000D  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0098  
                               _eusart1TxBuffer 0080                               _SYSTEM_Initialize 28BE  
                               _eusart2TxBuffer 00A0                                      __accesstop 0060  
                       __end_of__initialization 257E                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 2854  
                                __pcstackCOMRAM 0001                                    __pidataBANK1 2908  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 2186  
                                 __end_of_fputs 265E                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2982                          __end_of_PMD_Initialize 28BE  
                          __end_of_EUSART1_Read 24EC                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 20F0                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 28D8                                         ??_fputs 0014  
                           __end_of_PrintRXBuff 2374                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00B8  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00B6  
                                 _eusart2TxHead 00BD                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart2RxTail 00BB  
                                 _eusart1TxTail 00B7               _EUSART1_TxDefaultInterruptHandler 00F4  
                                 _eusart2TxTail 00BC                 ??_EUSART1_SetRxInterruptHandler 0007  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                       ?_RXMode 0001                 __end_of_EUSART1_SetErrorHandler 2978  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       ?_printf 00D9                                 ?_PMD_Initialize 0001  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 296E  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2964  
                         _eusart2RxStatusBuffer 0090                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 2034                              __size_of_vfpfcnvrt 0466  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                                  ?_ClearRxBuff 0001                                         _ByteNum 00AE  
                               __size_of_RXMode 0006                                         __Hparam 0000  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 1ADE                                         ___aomod 1C66  
                               __size_of___wmul 0026                                       ?_vfprintf 00D3  
                                  __psmallconst 0F00                             _EUSART1_is_rx_ready 28F0  
                                       __pcinit 253E                 __end_of_EUSART2_SetErrorHandler 2946  
                                       __ramtop 0F00                                         __ptext0 1DCA  
                                       __ptext1 28BE                                         __ptext2 28A2  
                                       __ptext3 2186                                         __ptext4 28D8  
                                       __ptext5 29A2                                         __ptext6 2214  
                                       __ptext7 2914                                         __ptext8 291E  
                                       __ptext9 2928                                 __size_of_printf 0028  
                               __size_of_strlen 0036           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 298A     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 2982                                     _PrintRXBuff 230E  
                         _OSCILLATOR_Initialize 28D8                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 26E2                                         _isdigit 278E  
                            _EUSART1_Initialize 2292                                         _islower 271E  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 24EC  
                                       _isupper 2756                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                                       _toupper 23D8                            end_of_initialization 257E  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00E8  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 295A  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2950  
                            _EUSART2_Initialize 2214                               __end_of_vfpfcnvrt 138E  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                       fp__EUSART1_Transmit_ISR 0000                                      main@RXStat 00E5  
              __size_of_EUSART1_SetErrorHandler 000A                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                            ??_EUSART2_Initialize 0007  
                                  _EUSART1_Read 2494            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 2990                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 2828                    __end_of_INTERRUPT_Initialize 29A6  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 00BE                                  __end_of___wmul 28A2  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 287C  
                                __end_of_strlen 27FC                             start_initialization 253E  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 26E2  
                                   __end_of_pad 1F74   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART2_Write 2494                          fp__EUSART1_Receive_ISR 0000  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A          __end_of_EUSART2_SetOverrunErrorHandler 2932  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 2928  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                                   vfprintf@fmt 00D5                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 2828  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK1 0184  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 00B5                                  _eusart2RxCount 00BA  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 00F2  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 00BE  
                              ___aodiv@dividend 0005                         fp__EUSART2_Transmit_ISR 0000  
                           EUSART2_Write@txData 0005                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00BC  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1692 0014  
                                     _atoi$1693 0018                                       _atoi$1694 0016  
                                     __pnvBANK0 00E6                          _PIN_MANAGER_Initialize 2186  
                                     _dtoa$1208 0034                                       __pintcode 0008  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017               _EUSART2_TxDefaultInterruptHandler 00F8  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                                      _BAUD1CON 000F9F                                        _BAUD2CON 000E9F  
                                  ?_PrintRXBuff 0001                                     __smallconst 0F00  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 299C  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2996  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00E6                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 296E  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 29A2                    __size_of_EUSART2_Receive_ISR 00C0  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u241_40 281E                                        i2u241_41 281A  
                                      i2u242_40 284A                                        i2u250_40 1FCC  
                                      i2u242_41 2846                                        i2u250_41 1FC8  
                                      i2u252_40 2010                                        i2u251_48 1FE2  
                                      i2u252_41 200C                                        i2u251_49 1FF4  
                                      i2u261_40 2670                                        i2u261_41 266C  
                                      i2u262_40 2692                                        i2u253_48 2016  
                                      i2u246_40 25E4                                        i2u262_41 268E  
                                      i2u253_49 202A                                        i2u246_41 25E0  
                                      i2u263_40 2052                                        i2u247_40 260A  
                                      i2u271_40 0028                                        i2u263_41 204E  
                                      i2u247_41 2606                                        i2u271_41 0024  
                                      i2u248_40 1F94                                        i2u272_40 0038  
                                      i2u248_41 1F90                                        i2u272_41 0034  
                                      i2u265_40 2088                                        i2u264_48 2068  
                                      i2u281_40 00E6                                        i2u280_48 00C0  
                                      i2u273_40 0046                                        i2u265_41 2084  
                                      i2u264_49 207A                                        i2u281_41 00E2  
                                      i2u280_49 00D4                                        i2u273_41 0042  
                                      i2u249_48 1FAA                                        i2u282_40 00F4  
                                      i2u249_49 1FBC                                        i2u282_41 00F0  
                                      i2u267_40 20CC                                        i2u266_48 209E  
                                      i2u275_40 0072                                        i2u274_48 004C  
                                      i2u267_41 20C8                                        i2u266_49 20B0  
                                      i2u275_41 006E                                        i2u274_49 0060  
                                      i2u283_48 00FA                                        i2u276_40 0080  
                                      i2u283_49 010E                                        i2u276_41 007C  
                                      i2u268_48 20D2                                        i2u268_49 20E6  
                                      _PIR3bits 000ECD                                        i2u278_40 00AC  
                                      i2u277_48 0086                                        i2u278_41 00A8  
                                      i2u277_49 009A                                        i2u279_40 00BA  
                                      i2u279_41 00B6                                        _PIR7bits 000ED1  
                        ?_EUSART1_RxDataHandler 0001                                       _vfpfcnvrt 0F28  
                                     _xtoa$1220 0037                                       _xtoa$1219 0035  
                             ___wmul@multiplier 0005                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1719 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00D2                                       copy_data0 2552  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 293C  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00EE  
         __end_of_EUSART1_SetTxInterruptHandler 2950          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 2946                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 2928          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 291E                                      vfprintf@ap 00D7  
                                      __Lrparam 0000                                      vfprintf@fp 00D3  
                            __CFG_BOREN$SBORDIS 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 29A2  
                   _EUSART1_DefaultErrorHandler 299C                     __end_of_EUSART1_is_rx_ready 2908  
                          _EUSART2_ErrorHandler 00EC                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                    PrintRXBuff@i 00E3  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2932                                        __ptext11 293C  
                                      __ptext20 2854                                        __ptext12 2292  
                                      __ptext21 2374                                        __ptext13 2946  
                                      __ptext30 27C6                                        __ptext22 0F28  
                                      __ptext14 2950                                        __ptext31 261A  
                                      __ptext23 166E                                        __ptext15 295A  
                                      __ptext40 278E                                        __ptext32 20F0  
                                      __ptext24 23D8                                        __ptext16 2964  
                                      __ptext41 287C                                        __ptext33 2978  
                                      __ptext25 271E                                        __ptext17 296E  
                                      __ptext50 2990                                        __ptext42 28F0  
                                      __ptext34 2436                                        __ptext26 2756  
                                      __ptext18 298A                                        __ptext51 27FC  
                                      __ptext43 2494                                        __ptext35 26A2  
                                      __ptext27 26E2                                        __ptext19 230E  
                                      __ptext52 265E                                        __ptext44 2588  
                                      __ptext36 1C66                                        __ptext28 138E  
                                      __ptext53 2034                                        __ptext37 1ADE  
                                      __ptext29 1EB2                                        __ptext54 2996  
                                      __ptext46 25D2                                        __ptext38 1944  
                                      __ptext55 29A8                                        __ptext47 1F74  
                                      __ptext39 24EC                                        __ptext56 299C  
                                      __ptext48 2982                                        __ptext57 2828  
                                      __ptext49 29A6                                        __ptext58 0000  
                              __size_of_isupper 0038                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                                   __size_of_atoi 019A  
                                 __size_of_main 00E8                                   __size_of_dtoa 02E0  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 29A8  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 29A6  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 00B2  
                                      int$flags 005B                                        _vfprintf 2374  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 27FC                                       printf@fmt 00D9  
                   _EUSART1_FramingErrorHandler 00EA                             _EUSART1_Receive_ISR 2034  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1234 00D0  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                          __size_of_PrintRXBuff 0066                                        isalpha@c 0005  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0007                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 2964         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 295A                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 26A2                                        printf@ap 00E1  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                               ___aomod@counter 0015                              _eusart1RxLastError 00B4  
                        __size_of_EUSART2_Write 005E                             _EUSART2_Receive_ISR 1F74  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 2214  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00B9                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00F6  
                           __end_of_ClearRxBuff 25D2  
