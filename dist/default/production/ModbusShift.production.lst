

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 25 00:24:08 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text98,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           ; Version 2.10
   133                           ; Generated 31/07/2019 GMT
   134                           ; 
   135                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F46K40 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167                           	psect	idataBANK0
   168  00413E                     __pidataBANK0:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for ReadRX232@F10772
   172  00413E  5A                 	db	90
   173  00413F  00                 	db	0
   174                           
   175                           ;initializer for _ByteLo
   176  004140  00FF               	dw	255
   177                           
   178                           ;initializer for _MBResCRC
   179  004142  FFFF               	dw	65535
   180                           
   181                           ;initializer for _ExpectedBytes
   182  004144  0008               	dw	8
   183                           
   184                           ;initializer for _MB302xx
   185  004146  0004               	dw	4
   186                           
   187                           	psect	idataBANK1
   188  003A3E                     __pidataBANK1:
   189                           	opt callstack 0
   190                           
   191                           ;initializer for _MB305xx
   192  003A3E  00FF               	dw	255
   193  003A40  00                 	db	0
   194  003A41  00                 	db	0
   195  003A42  00                 	db	0
   196  003A43  00                 	db	0
   197  003A44  00                 	db	0
   198  003A45  00                 	db	0
   199  003A46  00                 	db	0
   200  003A47  00                 	db	0
   201  003A48  00                 	db	0
   202  003A49  00                 	db	0
   203  003A4A  00                 	db	0
   204  003A4B  00                 	db	0
   205  003A4C  00                 	db	0
   206  003A4D  00                 	db	0
   207                           
   208                           ;initializer for _MB301xx
   209  003A4E  4150               	dw	16720
   210  003A50  3030               	dw	12336
   211  003A52  3036               	dw	12342
   212  003A54  3033               	dw	12339
   213  003A56  3033               	dw	12339
   214  003A58  2D30               	dw	11568
   215  003A5A  3200               	dw	12800
   216                           
   217                           ;initializer for _MB304xx
   218  003A5C  00FF               	dw	255
   219  003A5E  00                 	db	0
   220  003A5F  00                 	db	0
   221  003A60  00                 	db	0
   222  003A61  00                 	db	0
   223  003A62  00                 	db	0
   224  003A63  00                 	db	0
   225  003A64  00                 	db	0
   226  003A65  00                 	db	0
   227  003A66  00                 	db	0
   228  003A67  00                 	db	0
   229                           
   230                           ;initializer for InitialiseString@F10763
   231  003A68  4D                 	db	77
   232  003A69  61                 	db	97
   233  003A6A  72                 	db	114
   234  003A6B  20                 	db	32
   235  003A6C  32                 	db	50
   236  003A6D  35                 	db	53
   237  003A6E  20                 	db	32
   238  003A6F  32                 	db	50
   239  003A70  30                 	db	48
   240  003A71  32                 	db	50
   241  003A72  31                 	db	49
   242                           
   243                           ;initializer for _MB303xx
   244  003A73  3132               	dw	12594
   245  003A75  3334               	dw	13108
   246  003A77  3536               	dw	13622
   247  003A79  3738               	dw	14136
   248  003A7B  3930               	dw	14640
   249                           
   250                           ;initializer for InitialiseString@F10766
   251  003A7D  30                 	db	48
   252  003A7E  30                 	db	48
   253  003A7F  3A                 	db	58
   254  003A80  32                 	db	50
   255  003A81  34                 	db	52
   256  003A82  3A                 	db	58
   257  003A83  30                 	db	48
   258  003A84  30                 	db	48
   259                           
   260                           ;initializer for stoa@F1139
   261  003A85  28                 	db	40
   262  003A86  6E                 	db	110
   263  003A87  75                 	db	117
   264  003A88  6C                 	db	108
   265  003A89  6C                 	db	108
   266  003A8A  29                 	db	41
   267  003A8B  00                 	db	0
   268                           
   269                           ;initializer for _MB306xx
   270  003A8C  00FF               	dw	255
   271  003A8E  00                 	db	0
   272  003A8F  00                 	db	0
   273  003A90  00                 	db	0
   274  003A91  00                 	db	0
   275                           
   276                           	psect	idataBANK2
   277  002B32                     __pidataBANK2:
   278                           	opt callstack 0
   279                           
   280                           ;initializer for _ModbusData
   281  002B32  FF                 	db	255
   282  002B33  00                 	db	0
   283  002B34  00                 	db	0
   284  002B35  00                 	db	0
   285  002B36  00                 	db	0
   286  002B37  00                 	db	0
   287  002B38  00                 	db	0
   288  002B39  00                 	db	0
   289  002B3A  00                 	db	0
   290  002B3B  00                 	db	0
   291  002B3C  00                 	db	0
   292  002B3D  00                 	db	0
   293  002B3E  00                 	db	0
   294  002B3F  00                 	db	0
   295  002B40  00                 	db	0
   296  002B41  00                 	db	0
   297  002B42  00                 	db	0
   298  002B43  00                 	db	0
   299  002B44  00                 	db	0
   300  002B45  00                 	db	0
   301  002B46  00                 	db	0
   302  002B47  00                 	db	0
   303  002B48  00                 	db	0
   304  002B49  00                 	db	0
   305  002B4A  00                 	db	0
   306  002B4B  00                 	db	0
   307  002B4C  00                 	db	0
   308  002B4D  00                 	db	0
   309  002B4E  00                 	db	0
   310  002B4F  00                 	db	0
   311  002B50  00                 	db	0
   312  002B51  00                 	db	0
   313  002B52  00                 	db	0
   314  002B53  00                 	db	0
   315  002B54  00                 	db	0
   316  002B55  00                 	db	0
   317  002B56  00                 	db	0
   318  002B57  00                 	db	0
   319  002B58  00                 	db	0
   320  002B59  00                 	db	0
   321  002B5A  00                 	db	0
   322  002B5B  00                 	db	0
   323  002B5C  00                 	db	0
   324  002B5D  00                 	db	0
   325  002B5E  00                 	db	0
   326  002B5F  00                 	db	0
   327  002B60  00                 	db	0
   328  002B61  00                 	db	0
   329  002B62  00                 	db	0
   330  002B63  00                 	db	0
   331  002B64  00                 	db	0
   332  002B65  00                 	db	0
   333  002B66  00                 	db	0
   334  002B67  00                 	db	0
   335  002B68  00                 	db	0
   336  002B69  00                 	db	0
   337  002B6A  00                 	db	0
   338  002B6B  00                 	db	0
   339  002B6C  00                 	db	0
   340  002B6D  00                 	db	0
   341  002B6E  00                 	db	0
   342  002B6F  00                 	db	0
   343  002B70  00                 	db	0
   344  002B71  00                 	db	0
   345  002B72  00                 	db	0
   346  002B73  00                 	db	0
   347  002B74  00                 	db	0
   348  002B75  00                 	db	0
   349  002B76  00                 	db	0
   350  002B77  00                 	db	0
   351  002B78  00                 	db	0
   352  002B79  00                 	db	0
   353  002B7A  00                 	db	0
   354  002B7B  00                 	db	0
   355  002B7C  00                 	db	0
   356  002B7D  00                 	db	0
   357  002B7E  00                 	db	0
   358  002B7F  00                 	db	0
   359  002B80  00                 	db	0
   360  002B81  00                 	db	0
   361  002B82  00                 	db	0
   362  002B83  00                 	db	0
   363  002B84  00                 	db	0
   364  002B85  00                 	db	0
   365  002B86  00                 	db	0
   366  002B87  00                 	db	0
   367  002B88  00                 	db	0
   368  002B89  00                 	db	0
   369  002B8A  00                 	db	0
   370  002B8B  00                 	db	0
   371  002B8C  00                 	db	0
   372  002B8D  00                 	db	0
   373  002B8E  00                 	db	0
   374  002B8F  00                 	db	0
   375  002B90  00                 	db	0
   376  002B91  00                 	db	0
   377  002B92  00                 	db	0
   378  002B93  00                 	db	0
   379  002B94  00                 	db	0
   380  002B95  00                 	db	0
   381                           
   382                           ;initializer for ValidateCmd@F10796
   383  002B96  52                 	db	82
   384  002B97  65                 	db	101
   385  002B98  76                 	db	118
   386  002B99  69                 	db	105
   387  002B9A  73                 	db	115
   388  002B9B  69                 	db	105
   389  002B9C  6F                 	db	111
   390  002B9D  6E                 	db	110
   391  002B9E  00                 	db	0
   392  002B9F  00                 	db	0
   393  002BA0  00                 	db	0
   394  002BA1  00                 	db	0
   395  002BA2  00                 	db	0
   396  002BA3  00                 	db	0
   397  002BA4  00                 	db	0
   398  002BA5  00                 	db	0
   399  002BA6  00                 	db	0
   400  002BA7  00                 	db	0
   401  002BA8  00                 	db	0
   402  002BA9  00                 	db	0
   403                           
   404                           ;initializer for ValidateCmd@F10793
   405  002BAA  50                 	db	80
   406  002BAB  61                 	db	97
   407  002BAC  72                 	db	114
   408  002BAD  74                 	db	116
   409  002BAE  20                 	db	32
   410  002BAF  4E                 	db	78
   411  002BB0  75                 	db	117
   412  002BB1  6D                 	db	109
   413  002BB2  62                 	db	98
   414  002BB3  65                 	db	101
   415  002BB4  72                 	db	114
   416  002BB5  00                 	db	0
   417  002BB6  00                 	db	0
   418  002BB7  00                 	db	0
   419  002BB8  00                 	db	0
   420  002BB9  00                 	db	0
   421  002BBA  00                 	db	0
   422  002BBB  00                 	db	0
   423  002BBC  00                 	db	0
   424  002BBD  00                 	db	0
   425                           
   426                           ;initializer for ValidateCmd@F10790
   427  002BBE  53                 	db	83
   428  002BBF  65                 	db	101
   429  002BC0  72                 	db	114
   430  002BC1  69                 	db	105
   431  002BC2  61                 	db	97
   432  002BC3  6C                 	db	108
   433  002BC4  20                 	db	32
   434  002BC5  4E                 	db	78
   435  002BC6  75                 	db	117
   436  002BC7  6D                 	db	109
   437  002BC8  62                 	db	98
   438  002BC9  65                 	db	101
   439  002BCA  72                 	db	114
   440  002BCB  00                 	db	0
   441  002BCC  00                 	db	0
   442  002BCD  00                 	db	0
   443  002BCE  00                 	db	0
   444  002BCF  00                 	db	0
   445  002BD0  00                 	db	0
   446  002BD1  00                 	db	0
   447                           
   448                           ;initializer for _MBRespon
   449  002BD2  FF                 	db	255
   450  002BD3  00                 	db	0
   451  002BD4  00                 	db	0
   452  002BD5  00                 	db	0
   453  002BD6  00                 	db	0
   454  002BD7  00                 	db	0
   455  002BD8  00                 	db	0
   456  002BD9  00                 	db	0
   457  002BDA  00                 	db	0
   458  002BDB  00                 	db	0
   459  002BDC  00                 	db	0
   460  002BDD  00                 	db	0
   461  002BDE  00                 	db	0
   462  002BDF  00                 	db	0
   463  002BE0  00                 	db	0
   464  002BE1  00                 	db	0
   465  002BE2  00                 	db	0
   466  002BE3  00                 	db	0
   467  002BE4  00                 	db	0
   468  002BE5  00                 	db	0
   469  002BE6  00                 	db	0
   470  002BE7  00                 	db	0
   471  002BE8  00                 	db	0
   472  002BE9  00                 	db	0
   473  002BEA  00                 	db	0
   474  002BEB  00                 	db	0
   475  002BEC  00                 	db	0
   476  002BED  00                 	db	0
   477  002BEE  00                 	db	0
   478  002BEF  00                 	db	0
   479  002BF0  00                 	db	0
   480  002BF1  00                 	db	0
   481  002BF2  00                 	db	0
   482  002BF3  00                 	db	0
   483  002BF4  00                 	db	0
   484  002BF5  00                 	db	0
   485  002BF6  00                 	db	0
   486  002BF7  00                 	db	0
   487  002BF8  00                 	db	0
   488  002BF9  00                 	db	0
   489  002BFA  00                 	db	0
   490  002BFB  00                 	db	0
   491  002BFC  00                 	db	0
   492  002BFD  00                 	db	0
   493  002BFE  00                 	db	0
   494  002BFF  00                 	db	0
   495  002C00  00                 	db	0
   496  002C01  00                 	db	0
   497  002C02  00                 	db	0
   498  002C03  00                 	db	0
   499  002C04  00                 	db	0
   500  002C05  00                 	db	0
   501  002C06  00                 	db	0
   502  002C07  00                 	db	0
   503  002C08  00                 	db	0
   504  002C09  00                 	db	0
   505  002C0A  00                 	db	0
   506  002C0B  00                 	db	0
   507  002C0C  00                 	db	0
   508  002C0D  00                 	db	0
   509  002C0E  00                 	db	0
   510  002C0F  00                 	db	0
   511  002C10  00                 	db	0
   512  002C11  00                 	db	0
   513  002C12  00                 	db	0
   514  002C13  00                 	db	0
   515  002C14  00                 	db	0
   516  002C15  00                 	db	0
   517  002C16  00                 	db	0
   518  002C17  00                 	db	0
   519  002C18  00                 	db	0
   520  002C19  00                 	db	0
   521  002C1A  00                 	db	0
   522  002C1B  00                 	db	0
   523  002C1C  00                 	db	0
   524                           
   525                           	psect	idataBANK3
   526  003D70                     __pidataBANK3:
   527                           	opt callstack 0
   528                           
   529                           ;initializer for _MB300xx
   530  003D70  0001               	dw	1
   531  003D72  0002               	dw	2
   532  003D74  0003               	dw	3
   533  003D76  0004               	dw	4
   534  003D78  0005               	dw	5
   535  003D7A  0006               	dw	6
   536  003D7C  0007               	dw	7
   537  003D7E  0008               	dw	8
   538  003D80  0009               	dw	9
   539  003D82  000A               	dw	10
   540  003D84  000B               	dw	11
   541  003D86  000C               	dw	12
   542  003D88  000D               	dw	13
   543  003D8A  000E               	dw	14
   544  003D8C  000F               	dw	15
   545  003D8E  0010               	dw	16
   546  003D90  0011               	dw	17
   547  003D92  0012               	dw	18
   548  003D94  0013               	dw	19
   549  003D96  0014               	dw	20
   550  003D98  0015               	dw	21
   551  003D9A  0016               	dw	22
   552  003D9C  0017               	dw	23
   553  003D9E  0018               	dw	24
   554  003DA0  0019               	dw	25
   555  003DA2  001A               	dw	26
   556  003DA4  001B               	dw	27
   557  003DA6  001C               	dw	28
   558  003DA8  001D               	dw	29
   559  003DAA  001E               	dw	30
   560  003DAC  001F               	dw	31
   561  003DAE  0020               	dw	32
   562                           
   563                           	psect	idataBANK4
   564  003DB0                     __pidataBANK4:
   565                           	opt callstack 0
   566                           
   567                           ;initializer for _MB400xx
   568  003DB0  0020               	dw	32
   569  003DB2  001F               	dw	31
   570  003DB4  001E               	dw	30
   571  003DB6  001D               	dw	29
   572  003DB8  001C               	dw	28
   573  003DBA  001B               	dw	27
   574  003DBC  001A               	dw	26
   575  003DBE  0019               	dw	25
   576  003DC0  0018               	dw	24
   577  003DC2  0017               	dw	23
   578  003DC4  0016               	dw	22
   579  003DC6  0015               	dw	21
   580  003DC8  0014               	dw	20
   581  003DCA  0013               	dw	19
   582  003DCC  0012               	dw	18
   583  003DCE  0011               	dw	17
   584  003DD0  0010               	dw	16
   585  003DD2  000F               	dw	15
   586  003DD4  000E               	dw	14
   587  003DD6  000D               	dw	13
   588  003DD8  000C               	dw	12
   589  003DDA  000B               	dw	11
   590  003DDC  000A               	dw	10
   591  003DDE  0009               	dw	9
   592  003DE0  0008               	dw	8
   593  003DE2  0007               	dw	7
   594  003DE4  0006               	dw	6
   595  003DE6  0005               	dw	5
   596  003DE8  0004               	dw	4
   597  003DEA  0003               	dw	3
   598  003DEC  0002               	dw	2
   599  003DEE  0001               	dw	1
   600                           
   601                           	psect	nvBANK0
   602  0000FE                     __pnvBANK0:
   603                           	opt callstack 0
   604  0000FE                     _eusart1TxBufferRemaining:
   605                           	opt callstack 0
   606  0000FE                     	ds	1
   607  0000FF                     _eusart2TxBufferRemaining:
   608                           	opt callstack 0
   609  0000FF                     	ds	1
   610                           
   611                           	psect	nvBANK1
   612  0001EA                     __pnvBANK1:
   613                           	opt callstack 0
   614  0001EA                     _EUSART1_ErrorHandler:
   615                           	opt callstack 0
   616  0001EA                     	ds	2
   617  0001EC                     _EUSART1_OverrunErrorHandler:
   618                           	opt callstack 0
   619  0001EC                     	ds	2
   620  0001EE                     _EUSART1_FramingErrorHandler:
   621                           	opt callstack 0
   622  0001EE                     	ds	2
   623  0001F0                     _EUSART2_ErrorHandler:
   624                           	opt callstack 0
   625  0001F0                     	ds	2
   626  0001F2                     _EUSART2_OverrunErrorHandler:
   627                           	opt callstack 0
   628  0001F2                     	ds	2
   629  0001F4                     _EUSART2_FramingErrorHandler:
   630                           	opt callstack 0
   631  0001F4                     	ds	2
   632  0001F6                     _EUSART1_RxDefaultInterruptHandler:
   633                           	opt callstack 0
   634  0001F6                     	ds	2
   635  0001F8                     _EUSART1_TxDefaultInterruptHandler:
   636                           	opt callstack 0
   637  0001F8                     	ds	2
   638  0001FA                     _EUSART2_RxDefaultInterruptHandler:
   639                           	opt callstack 0
   640  0001FA                     	ds	2
   641  0001FC                     _EUSART2_TxDefaultInterruptHandler:
   642                           	opt callstack 0
   643  0001FC                     	ds	2
   644  0000                     _RC2REG	set	3737
   645  0000                     _RC2STAbits	set	3741
   646  0000                     _TX2REG	set	3738
   647  0000                     _TX2STAbits	set	3742
   648  0000                     _SP2BRGH	set	3740
   649  0000                     _SP2BRGL	set	3739
   650  0000                     _TX2STA	set	3742
   651  0000                     _RC2STA	set	3741
   652  0000                     _BAUD2CON	set	3743
   653  0000                     _PIR7bits	set	3793
   654  0000                     _PIR3bits	set	3789
   655  0000                     _PIE3bits	set	3781
   656  0000                     _PMD5	set	3814
   657  0000                     _PMD4	set	3813
   658  0000                     _PMD3	set	3812
   659  0000                     _PMD2	set	3811
   660  0000                     _PMD1	set	3810
   661  0000                     _PMD0	set	3809
   662  0000                     _OSCTUNE	set	3805
   663  0000                     _OSCFRQ	set	3806
   664  0000                     _OSCEN	set	3804
   665  0000                     _OSCCON3	set	3802
   666  0000                     _OSCCON1	set	3800
   667  0000                     _RX2PPS	set	3725
   668  0000                     _RC6PPS	set	3837
   669  0000                     _RB6PPS	set	3829
   670  0000                     _RX1PPS	set	3765
   671  0000                     _ADCON1bits	set	3929
   672  0000                     _ADCON2bits	set	3930
   673  0000                     _ADCON3bits	set	3931
   674  0000                     _ADACQ	set	3932
   675  0000                     _ADCLK	set	3927
   676  0000                     _ADACT	set	3926
   677  0000                     _ADREF	set	3928
   678  0000                     _ADCON3	set	3931
   679  0000                     _ADCON2	set	3930
   680  0000                     _ADCON1	set	3929
   681  0000                     _ADPRE	set	3934
   682  0000                     _ADCAP	set	3933
   683  0000                     _ADPCH	set	3935
   684  0000                     _INLVLE	set	3882
   685  0000                     _INLVLD	set	3874
   686  0000                     _INLVLC	set	3869
   687  0000                     _INLVLB	set	3861
   688  0000                     _INLVLA	set	3853
   689  0000                     _SLRCONE	set	3883
   690  0000                     _SLRCOND	set	3875
   691  0000                     _SLRCONC	set	3870
   692  0000                     _SLRCONB	set	3862
   693  0000                     _SLRCONA	set	3854
   694  0000                     _ODCOND	set	3876
   695  0000                     _ODCONC	set	3871
   696  0000                     _ODCONB	set	3863
   697  0000                     _ODCONA	set	3855
   698  0000                     _ODCONE	set	3884
   699  0000                     _WPUC	set	3872
   700  0000                     _WPUA	set	3856
   701  0000                     _WPUB	set	3864
   702  0000                     _WPUE	set	3885
   703  0000                     _WPUD	set	3877
   704  0000                     _ANSELA	set	3857
   705  0000                     _ANSELE	set	3886
   706  0000                     _ANSELB	set	3865
   707  0000                     _ANSELC	set	3873
   708  0000                     _ANSELD	set	3878
   709  0000                     _ADERRL	set	3950
   710  0000                     _ADERRH	set	3951
   711  0000                     _ADPREVL	set	3937
   712  0000                     _ADPREVH	set	3938
   713  0000                     _ADFLTRL	set	3954
   714  0000                     _ADFLTRH	set	3955
   715  0000                     _ADSTATbits	set	3941
   716  0000                     _ADACCL	set	3952
   717  0000                     _ADACCH	set	3953
   718  0000                     _ADCNT	set	3943
   719  0000                     _ADRESL	set	3939
   720  0000                     _ADRESH	set	3940
   721  0000                     _ADCON0bits	set	3936
   722  0000                     _ADCON0	set	3936
   723  0000                     _ADSTAT	set	3941
   724  0000                     _ADRPT	set	3942
   725  0000                     _ADSTPTH	set	3945
   726  0000                     _ADSTPTL	set	3944
   727  0000                     _ADUTHH	set	3949
   728  0000                     _ADUTHL	set	3948
   729  0000                     _ADLTHH	set	3947
   730  0000                     _ADLTHL	set	3946
   731  0000                     _LATDbits	set	3974
   732  0000                     _LATAbits	set	3971
   733  0000                     _RC1REG	set	3993
   734  0000                     _RC1STAbits	set	3997
   735  0000                     _TX1REG	set	3994
   736  0000                     _TX1STAbits	set	3998
   737  0000                     _SP1BRGH	set	3996
   738  0000                     _SP1BRGL	set	3995
   739  0000                     _TX1STA	set	3998
   740  0000                     _RC1STA	set	3997
   741  0000                     _BAUD1CON	set	3999
   742  0000                     _NVMDAT	set	3968
   743  0000                     _NVMADRL	set	3966
   744  0000                     _NVMADRH	set	3967
   745  0000                     _NVMCON2	set	3970
   746  0000                     _TABLAT	set	4085
   747  0000                     _TBLPTRL	set	4086
   748  0000                     _TBLPTRH	set	4087
   749  0000                     _TBLPTRU	set	4088
   750  0000                     _NVMCON1bits	set	3969
   751  0000                     _INTCONbits	set	4082
   752  0000                     _TRISD	set	3979
   753  0000                     _TRISC	set	3978
   754  0000                     _TRISB	set	3977
   755  0000                     _TRISA	set	3976
   756  0000                     _TRISE	set	3980
   757  0000                     _LATC	set	3973
   758  0000                     _LATB	set	3972
   759  0000                     _LATA	set	3971
   760  0000                     _LATD	set	3974
   761  0000                     _LATE	set	3975
   762                           
   763                           	psect	mediumconst
   764  00F8A4                     __pmediumconst:
   765                           	opt callstack 0
   766  00F8A4  00                 	db	0
   767  00F8A5                     STR_57:
   768                           
   769                           ; BSR set to: 0
   770  00F8A5  20                 	db	32
   771  00F8A6  20                 	db	32
   772  00F8A7  20                 	db	32
   773  00F8A8  20                 	db	32
   774  00F8A9  20                 	db	32
   775  00F8AA  20                 	db	32
   776  00F8AB  41                 	db	65	;'A'
   777  00F8AC  64                 	db	100	;'d'
   778  00F8AD  64                 	db	100	;'d'
   779  00F8AE  20                 	db	32
   780  00F8AF  30                 	db	48	;'0'
   781  00F8B0  78                 	db	120	;'x'
   782  00F8B1  30                 	db	48	;'0'
   783  00F8B2  30                 	db	48	;'0'
   784  00F8B3  30                 	db	48	;'0'
   785  00F8B4  30                 	db	48	;'0'
   786  00F8B5  20                 	db	32
   787  00F8B6  74                 	db	116	;'t'
   788  00F8B7  6F                 	db	111	;'o'
   789  00F8B8  20                 	db	32
   790  00F8B9  30                 	db	48	;'0'
   791  00F8BA  78                 	db	120	;'x'
   792  00F8BB  30                 	db	48	;'0'
   793  00F8BC  30                 	db	48	;'0'
   794  00F8BD  33                 	db	51	;'3'
   795  00F8BE  31                 	db	49	;'1'
   796  00F8BF  20                 	db	32
   797  00F8C0  2D                 	db	45
   798  00F8C1  20                 	db	32
   799  00F8C2  33                 	db	51	;'3'
   800  00F8C3  32                 	db	50	;'2'
   801  00F8C4  78                 	db	120	;'x'
   802  00F8C5  20                 	db	32
   803  00F8C6  43                 	db	67	;'C'
   804  00F8C7  69                 	db	105	;'i'
   805  00F8C8  72                 	db	114	;'r'
   806  00F8C9  63                 	db	99	;'c'
   807  00F8CA  75                 	db	117	;'u'
   808  00F8CB  69                 	db	105	;'i'
   809  00F8CC  74                 	db	116	;'t'
   810  00F8CD  20                 	db	32
   811  00F8CE  53                 	db	83	;'S'
   812  00F8CF  65                 	db	101	;'e'
   813  00F8D0  74                 	db	116	;'t'
   814  00F8D1  20                 	db	32
   815  00F8D2  53                 	db	83	;'S'
   816  00F8D3  74                 	db	116	;'t'
   817  00F8D4  61                 	db	97	;'a'
   818  00F8D5  74                 	db	116	;'t'
   819  00F8D6  75                 	db	117	;'u'
   820  00F8D7  73                 	db	115	;'s'
   821  00F8D8  20                 	db	32
   822  00F8D9  20                 	db	32
   823  00F8DA  28                 	db	40
   824  00F8DB  6C                 	db	108	;'l'
   825  00F8DC  6F                 	db	111	;'o'
   826  00F8DD  77                 	db	119	;'w'
   827  00F8DE  65                 	db	101	;'e'
   828  00F8DF  72                 	db	114	;'r'
   829  00F8E0  20                 	db	32
   830  00F8E1  38                 	db	56	;'8'
   831  00F8E2  62                 	db	98	;'b'
   832  00F8E3  69                 	db	105	;'i'
   833  00F8E4  74                 	db	116	;'t'
   834  00F8E5  73                 	db	115	;'s'
   835  00F8E6  20                 	db	32
   836  00F8E7  6F                 	db	111	;'o'
   837  00F8E8  6E                 	db	110	;'n'
   838  00F8E9  6C                 	db	108	;'l'
   839  00F8EA  79                 	db	121	;'y'
   840  00F8EB  29                 	db	41
   841  00F8EC  0D                 	db	13
   842  00F8ED  0A                 	db	10
   843  00F8EE  0A                 	db	10
   844  00F8EF  00                 	db	0
   845  00F8F0                     STR_49:
   846                           
   847                           ; BSR set to: 0
   848  00F8F0  20                 	db	32
   849  00F8F1  20                 	db	32
   850  00F8F2  20                 	db	32
   851  00F8F3  20                 	db	32
   852  00F8F4  20                 	db	32
   853  00F8F5  20                 	db	32
   854  00F8F6  41                 	db	65	;'A'
   855  00F8F7  64                 	db	100	;'d'
   856  00F8F8  64                 	db	100	;'d'
   857  00F8F9  20                 	db	32
   858  00F8FA  30                 	db	48	;'0'
   859  00F8FB  78                 	db	120	;'x'
   860  00F8FC  30                 	db	48	;'0'
   861  00F8FD  30                 	db	48	;'0'
   862  00F8FE  30                 	db	48	;'0'
   863  00F8FF  30                 	db	48	;'0'
   864  00F900  20                 	db	32
   865  00F901  74                 	db	116	;'t'
   866  00F902  6F                 	db	111	;'o'
   867  00F903  20                 	db	32
   868  00F904  30                 	db	48	;'0'
   869  00F905  78                 	db	120	;'x'
   870  00F906  30                 	db	48	;'0'
   871  00F907  30                 	db	48	;'0'
   872  00F908  33                 	db	51	;'3'
   873  00F909  31                 	db	49	;'1'
   874  00F90A  20                 	db	32
   875  00F90B  2D                 	db	45
   876  00F90C  20                 	db	32
   877  00F90D  33                 	db	51	;'3'
   878  00F90E  32                 	db	50	;'2'
   879  00F90F  78                 	db	120	;'x'
   880  00F910  20                 	db	32
   881  00F911  43                 	db	67	;'C'
   882  00F912  69                 	db	105	;'i'
   883  00F913  72                 	db	114	;'r'
   884  00F914  63                 	db	99	;'c'
   885  00F915  75                 	db	117	;'u'
   886  00F916  69                 	db	105	;'i'
   887  00F917  74                 	db	116	;'t'
   888  00F918  20                 	db	32
   889  00F919  47                 	db	71	;'G'
   890  00F91A  65                 	db	101	;'e'
   891  00F91B  74                 	db	116	;'t'
   892  00F91C  20                 	db	32
   893  00F91D  53                 	db	83	;'S'
   894  00F91E  74                 	db	116	;'t'
   895  00F91F  61                 	db	97	;'a'
   896  00F920  74                 	db	116	;'t'
   897  00F921  75                 	db	117	;'u'
   898  00F922  73                 	db	115	;'s'
   899  00F923  20                 	db	32
   900  00F924  28                 	db	40
   901  00F925  6C                 	db	108	;'l'
   902  00F926  6F                 	db	111	;'o'
   903  00F927  77                 	db	119	;'w'
   904  00F928  65                 	db	101	;'e'
   905  00F929  72                 	db	114	;'r'
   906  00F92A  20                 	db	32
   907  00F92B  38                 	db	56	;'8'
   908  00F92C  62                 	db	98	;'b'
   909  00F92D  69                 	db	105	;'i'
   910  00F92E  74                 	db	116	;'t'
   911  00F92F  73                 	db	115	;'s'
   912  00F930  20                 	db	32
   913  00F931  6F                 	db	111	;'o'
   914  00F932  6E                 	db	110	;'n'
   915  00F933  6C                 	db	108	;'l'
   916  00F934  79                 	db	121	;'y'
   917  00F935  29                 	db	41
   918  00F936  0D                 	db	13
   919  00F937  0A                 	db	10
   920  00F938  00                 	db	0
   921  00F939                     STR_55:
   922                           
   923                           ; BSR set to: 0
   924  00F939  20                 	db	32
   925  00F93A  20                 	db	32
   926  00F93B  20                 	db	32
   927  00F93C  20                 	db	32
   928  00F93D  20                 	db	32
   929  00F93E  20                 	db	32
   930  00F93F  41                 	db	65	;'A'
   931  00F940  64                 	db	100	;'d'
   932  00F941  64                 	db	100	;'d'
   933  00F942  20                 	db	32
   934  00F943  30                 	db	48	;'0'
   935  00F944  78                 	db	120	;'x'
   936  00F945  30                 	db	48	;'0'
   937  00F946  36                 	db	54	;'6'
   938  00F947  30                 	db	48	;'0'
   939  00F948  30                 	db	48	;'0'
   940  00F949  20                 	db	32
   941  00F94A  74                 	db	116	;'t'
   942  00F94B  6F                 	db	111	;'o'
   943  00F94C  20                 	db	32
   944  00F94D  30                 	db	48	;'0'
   945  00F94E  78                 	db	120	;'x'
   946  00F94F  30                 	db	48	;'0'
   947  00F950  36                 	db	54	;'6'
   948  00F951  30                 	db	48	;'0'
   949  00F952  32                 	db	50	;'2'
   950  00F953  20                 	db	32
   951  00F954  2D                 	db	45
   952  00F955  20                 	db	32
   953  00F956  33                 	db	51	;'3'
   954  00F957  78                 	db	120	;'x'
   955  00F958  20                 	db	32
   956  00F959  41                 	db	65	;'A'
   957  00F95A  6E                 	db	110	;'n'
   958  00F95B  61                 	db	97	;'a'
   959  00F95C  6C                 	db	108	;'l'
   960  00F95D  6F                 	db	111	;'o'
   961  00F95E  67                 	db	103	;'g'
   962  00F95F  75                 	db	117	;'u'
   963  00F960  65                 	db	101	;'e'
   964  00F961  20                 	db	32
   965  00F962  49                 	db	73	;'I'
   966  00F963  6E                 	db	110	;'n'
   967  00F964  70                 	db	112	;'p'
   968  00F965  75                 	db	117	;'u'
   969  00F966  74                 	db	116	;'t'
   970  00F967  73                 	db	115	;'s'
   971  00F968  20                 	db	32
   972  00F969  28                 	db	40
   973  00F96A  30                 	db	48	;'0'
   974  00F96B  78                 	db	120	;'x'
   975  00F96C  30                 	db	48	;'0'
   976  00F96D  30                 	db	48	;'0'
   977  00F96E  30                 	db	48	;'0'
   978  00F96F  20                 	db	32
   979  00F970  74                 	db	116	;'t'
   980  00F971  6F                 	db	111	;'o'
   981  00F972  20                 	db	32
   982  00F973  30                 	db	48	;'0'
   983  00F974  78                 	db	120	;'x'
   984  00F975  30                 	db	48	;'0'
   985  00F976  33                 	db	51	;'3'
   986  00F977  66                 	db	102	;'f'
   987  00F978  66                 	db	102	;'f'
   988  00F979  29                 	db	41
   989  00F97A  0D                 	db	13
   990  00F97B  0A                 	db	10
   991  00F97C  0A                 	db	10
   992  00F97D  00                 	db	0
   993  00F97E                     STR_68:
   994                           
   995                           ; BSR set to: 0
   996  00F97E  43                 	db	67	;'C'
   997  00F97F  6C                 	db	108	;'l'
   998  00F980  65                 	db	101	;'e'
   999  00F981  61                 	db	97	;'a'
  1000  00F982  72                 	db	114	;'r'
  1001  00F983  69                 	db	105	;'i'
  1002  00F984  6E                 	db	110	;'n'
  1003  00F985  67                 	db	103	;'g'
  1004  00F986  20                 	db	32
  1005  00F987  45                 	db	69	;'E'
  1006  00F988  45                 	db	69	;'E'
  1007  00F989  50                 	db	80	;'P'
  1008  00F98A  52                 	db	82	;'R'
  1009  00F98B  4F                 	db	79	;'O'
  1010  00F98C  4D                 	db	77	;'M'
  1011  00F98D  20                 	db	32
  1012  00F98E  66                 	db	102	;'f'
  1013  00F98F  72                 	db	114	;'r'
  1014  00F990  6F                 	db	111	;'o'
  1015  00F991  6D                 	db	109	;'m'
  1016  00F992  20                 	db	32
  1017  00F993  41                 	db	65	;'A'
  1018  00F994  64                 	db	100	;'d'
  1019  00F995  64                 	db	100	;'d'
  1020  00F996  72                 	db	114	;'r'
  1021  00F997  65                 	db	101	;'e'
  1022  00F998  73                 	db	115	;'s'
  1023  00F999  73                 	db	115	;'s'
  1024  00F99A  3A                 	db	58	;':'
  1025  00F99B  20                 	db	32
  1026  00F99C  30                 	db	48	;'0'
  1027  00F99D  78                 	db	120	;'x'
  1028  00F99E  25                 	db	37
  1029  00F99F  30                 	db	48	;'0'
  1030  00F9A0  34                 	db	52	;'4'
  1031  00F9A1  78                 	db	120	;'x'
  1032  00F9A2  20                 	db	32
  1033  00F9A3  66                 	db	102	;'f'
  1034  00F9A4  6F                 	db	111	;'o'
  1035  00F9A5  72                 	db	114	;'r'
  1036  00F9A6  20                 	db	32
  1037  00F9A7  6E                 	db	110	;'n'
  1038  00F9A8  75                 	db	117	;'u'
  1039  00F9A9  6D                 	db	109	;'m'
  1040  00F9AA  20                 	db	32
  1041  00F9AB  62                 	db	98	;'b'
  1042  00F9AC  79                 	db	121	;'y'
  1043  00F9AD  74                 	db	116	;'t'
  1044  00F9AE  65                 	db	101	;'e'
  1045  00F9AF  73                 	db	115	;'s'
  1046  00F9B0  3A                 	db	58	;':'
  1047  00F9B1  20                 	db	32
  1048  00F9B2  25                 	db	37
  1049  00F9B3  69                 	db	105	;'i'
  1050  00F9B4  20                 	db	32
  1051  00F9B5  0D                 	db	13
  1052  00F9B6  0A                 	db	10
  1053  00F9B7  00                 	db	0
  1054  00F9B8                     STR_54:
  1055                           
  1056                           ; BSR set to: 0
  1057  00F9B8  20                 	db	32
  1058  00F9B9  20                 	db	32
  1059  00F9BA  20                 	db	32
  1060  00F9BB  20                 	db	32
  1061  00F9BC  20                 	db	32
  1062  00F9BD  20                 	db	32
  1063  00F9BE  41                 	db	65	;'A'
  1064  00F9BF  64                 	db	100	;'d'
  1065  00F9C0  64                 	db	100	;'d'
  1066  00F9C1  20                 	db	32
  1067  00F9C2  30                 	db	48	;'0'
  1068  00F9C3  78                 	db	120	;'x'
  1069  00F9C4  30                 	db	48	;'0'
  1070  00F9C5  35                 	db	53	;'5'
  1071  00F9C6  30                 	db	48	;'0'
  1072  00F9C7  30                 	db	48	;'0'
  1073  00F9C8  20                 	db	32
  1074  00F9C9  74                 	db	116	;'t'
  1075  00F9CA  6F                 	db	111	;'o'
  1076  00F9CB  20                 	db	32
  1077  00F9CC  30                 	db	48	;'0'
  1078  00F9CD  78                 	db	120	;'x'
  1079  00F9CE  30                 	db	48	;'0'
  1080  00F9CF  35                 	db	53	;'5'
  1081  00F9D0  30                 	db	48	;'0'
  1082  00F9D1  34                 	db	52	;'4'
  1083  00F9D2  20                 	db	32
  1084  00F9D3  2D                 	db	45
  1085  00F9D4  20                 	db	32
  1086  00F9D5  43                 	db	67	;'C'
  1087  00F9D6  6F                 	db	111	;'o'
  1088  00F9D7  6D                 	db	109	;'m'
  1089  00F9D8  70                 	db	112	;'p'
  1090  00F9D9  69                 	db	105	;'i'
  1091  00F9DA  6C                 	db	108	;'l'
  1092  00F9DB  65                 	db	101	;'e'
  1093  00F9DC  20                 	db	32
  1094  00F9DD  54                 	db	84	;'T'
  1095  00F9DE  69                 	db	105	;'i'
  1096  00F9DF  6D                 	db	109	;'m'
  1097  00F9E0  65                 	db	101	;'e'
  1098  00F9E1  20                 	db	32
  1099  00F9E2  2D                 	db	45
  1100  00F9E3  20                 	db	32
  1101  00F9E4  28                 	db	40
  1102  00F9E5  41                 	db	65	;'A'
  1103  00F9E6  53                 	db	83	;'S'
  1104  00F9E7  43                 	db	67	;'C'
  1105  00F9E8  49                 	db	73	;'I'
  1106  00F9E9  49                 	db	73	;'I'
  1107  00F9EA  29                 	db	41
  1108  00F9EB  0D                 	db	13
  1109  00F9EC  0A                 	db	10
  1110  00F9ED  00                 	db	0
  1111  00F9EE                     STR_8:
  1112                           
  1113                           ; BSR set to: 0
  1114  00F9EE  43                 	db	67	;'C'
  1115  00F9EF  6F                 	db	111	;'o'
  1116  00F9F0  6D                 	db	109	;'m'
  1117  00F9F1  70                 	db	112	;'p'
  1118  00F9F2  6C                 	db	108	;'l'
  1119  00F9F3  65                 	db	101	;'e'
  1120  00F9F4  74                 	db	116	;'t'
  1121  00F9F5  65                 	db	101	;'e'
  1122  00F9F6  64                 	db	100	;'d'
  1123  00F9F7  20                 	db	32
  1124  00F9F8  41                 	db	65	;'A'
  1125  00F9F9  64                 	db	100	;'d'
  1126  00F9FA  64                 	db	100	;'d'
  1127  00F9FB  69                 	db	105	;'i'
  1128  00F9FC  6E                 	db	110	;'n'
  1129  00F9FD  67                 	db	103	;'g'
  1130  00F9FE  20                 	db	32
  1131  00F9FF  72                 	db	114	;'r'
  1132  00FA00  78                 	db	120	;'x'
  1133  00FA01  44                 	db	68	;'D'
  1134  00FA02  61                 	db	97	;'a'
  1135  00FA03  74                 	db	116	;'t'
  1136  00FA04  61                 	db	97	;'a'
  1137  00FA05  20                 	db	32
  1138  00FA06  42                 	db	66	;'B'
  1139  00FA07  75                 	db	117	;'u'
  1140  00FA08  66                 	db	102	;'f'
  1141  00FA09  66                 	db	102	;'f'
  1142  00FA0A  65                 	db	101	;'e'
  1143  00FA0B  72                 	db	114	;'r'
  1144  00FA0C  20                 	db	32
  1145  00FA0D  74                 	db	116	;'t'
  1146  00FA0E  6F                 	db	111	;'o'
  1147  00FA0F  20                 	db	32
  1148  00FA10  4D                 	db	77	;'M'
  1149  00FA11  6F                 	db	111	;'o'
  1150  00FA12  64                 	db	100	;'d'
  1151  00FA13  62                 	db	98	;'b'
  1152  00FA14  75                 	db	117	;'u'
  1153  00FA15  73                 	db	115	;'s'
  1154  00FA16  44                 	db	68	;'D'
  1155  00FA17  61                 	db	97	;'a'
  1156  00FA18  74                 	db	116	;'t'
  1157  00FA19  61                 	db	97	;'a'
  1158  00FA1A  20                 	db	32
  1159  00FA1B  41                 	db	65	;'A'
  1160  00FA1C  72                 	db	114	;'r'
  1161  00FA1D  72                 	db	114	;'r'
  1162  00FA1E  61                 	db	97	;'a'
  1163  00FA1F  79                 	db	121	;'y'
  1164  00FA20  0D                 	db	13
  1165  00FA21  0A                 	db	10
  1166  00FA22  0A                 	db	10
  1167  00FA23  00                 	db	0
  1168  00FA24                     STR_56:
  1169                           
  1170                           ; BSR set to: 0
  1171  00FA24  20                 	db	32
  1172  00FA25  20                 	db	32
  1173  00FA26  20                 	db	32
  1174  00FA27  30                 	db	48	;'0'
  1175  00FA28  78                 	db	120	;'x'
  1176  00FA29  31                 	db	49	;'1'
  1177  00FA2A  30                 	db	48	;'0'
  1178  00FA2B  20                 	db	32
  1179  00FA2C  2D                 	db	45
  1180  00FA2D  20                 	db	32
  1181  00FA2E  57                 	db	87	;'W'
  1182  00FA2F  72                 	db	114	;'r'
  1183  00FA30  69                 	db	105	;'i'
  1184  00FA31  74                 	db	116	;'t'
  1185  00FA32  65                 	db	101	;'e'
  1186  00FA33  20                 	db	32
  1187  00FA34  4D                 	db	77	;'M'
  1188  00FA35  75                 	db	117	;'u'
  1189  00FA36  6C                 	db	108	;'l'
  1190  00FA37  74                 	db	116	;'t'
  1191  00FA38  69                 	db	105	;'i'
  1192  00FA39  70                 	db	112	;'p'
  1193  00FA3A  6C                 	db	108	;'l'
  1194  00FA3B  65                 	db	101	;'e'
  1195  00FA3C  20                 	db	32
  1196  00FA3D  52                 	db	82	;'R'
  1197  00FA3E  65                 	db	101	;'e'
  1198  00FA3F  67                 	db	103	;'g'
  1199  00FA40  69                 	db	105	;'i'
  1200  00FA41  73                 	db	115	;'s'
  1201  00FA42  74                 	db	116	;'t'
  1202  00FA43  65                 	db	101	;'e'
  1203  00FA44  72                 	db	114	;'r'
  1204  00FA45  73                 	db	115	;'s'
  1205  00FA46  20                 	db	32
  1206  00FA47  28                 	db	40
  1207  00FA48  4D                 	db	77	;'M'
  1208  00FA49  61                 	db	97	;'a'
  1209  00FA4A  78                 	db	120	;'x'
  1210  00FA4B  20                 	db	32
  1211  00FA4C  33                 	db	51	;'3'
  1212  00FA4D  32                 	db	50	;'2'
  1213  00FA4E  78                 	db	120	;'x'
  1214  00FA4F  20                 	db	32
  1215  00FA50  31                 	db	49	;'1'
  1216  00FA51  36                 	db	54	;'6'
  1217  00FA52  62                 	db	98	;'b'
  1218  00FA53  69                 	db	105	;'i'
  1219  00FA54  74                 	db	116	;'t'
  1220  00FA55  29                 	db	41
  1221  00FA56  0D                 	db	13
  1222  00FA57  0A                 	db	10
  1223  00FA58  00                 	db	0
  1224  00FA59                     STR_53:
  1225                           
  1226                           ; BSR set to: 0
  1227  00FA59  20                 	db	32
  1228  00FA5A  20                 	db	32
  1229  00FA5B  20                 	db	32
  1230  00FA5C  20                 	db	32
  1231  00FA5D  20                 	db	32
  1232  00FA5E  20                 	db	32
  1233  00FA5F  41                 	db	65	;'A'
  1234  00FA60  64                 	db	100	;'d'
  1235  00FA61  64                 	db	100	;'d'
  1236  00FA62  20                 	db	32
  1237  00FA63  30                 	db	48	;'0'
  1238  00FA64  78                 	db	120	;'x'
  1239  00FA65  30                 	db	48	;'0'
  1240  00FA66  34                 	db	52	;'4'
  1241  00FA67  30                 	db	48	;'0'
  1242  00FA68  30                 	db	48	;'0'
  1243  00FA69  20                 	db	32
  1244  00FA6A  74                 	db	116	;'t'
  1245  00FA6B  6F                 	db	111	;'o'
  1246  00FA6C  20                 	db	32
  1247  00FA6D  30                 	db	48	;'0'
  1248  00FA6E  78                 	db	120	;'x'
  1249  00FA6F  30                 	db	48	;'0'
  1250  00FA70  34                 	db	52	;'4'
  1251  00FA71  30                 	db	48	;'0'
  1252  00FA72  35                 	db	53	;'5'
  1253  00FA73  20                 	db	32
  1254  00FA74  2D                 	db	45
  1255  00FA75  20                 	db	32
  1256  00FA76  43                 	db	67	;'C'
  1257  00FA77  6F                 	db	111	;'o'
  1258  00FA78  6D                 	db	109	;'m'
  1259  00FA79  70                 	db	112	;'p'
  1260  00FA7A  69                 	db	105	;'i'
  1261  00FA7B  6C                 	db	108	;'l'
  1262  00FA7C  65                 	db	101	;'e'
  1263  00FA7D  20                 	db	32
  1264  00FA7E  44                 	db	68	;'D'
  1265  00FA7F  61                 	db	97	;'a'
  1266  00FA80  74                 	db	116	;'t'
  1267  00FA81  65                 	db	101	;'e'
  1268  00FA82  20                 	db	32
  1269  00FA83  28                 	db	40
  1270  00FA84  41                 	db	65	;'A'
  1271  00FA85  53                 	db	83	;'S'
  1272  00FA86  43                 	db	67	;'C'
  1273  00FA87  49                 	db	73	;'I'
  1274  00FA88  49                 	db	73	;'I'
  1275  00FA89  29                 	db	41
  1276  00FA8A  0D                 	db	13
  1277  00FA8B  0A                 	db	10
  1278  00FA8C  00                 	db	0
  1279  00FA8D                     STR_59:
  1280                           
  1281                           ; BSR set to: 0
  1282  00FA8D  20                 	db	32
  1283  00FA8E  20                 	db	32
  1284  00FA8F  20                 	db	32
  1285  00FA90  3F                 	db	63	;'?'
  1286  00FA91  20                 	db	32
  1287  00FA92  2D                 	db	45
  1288  00FA93  20                 	db	32
  1289  00FA94  49                 	db	73	;'I'
  1290  00FA95  6E                 	db	110	;'n'
  1291  00FA96  69                 	db	105	;'i'
  1292  00FA97  74                 	db	116	;'t'
  1293  00FA98  61                 	db	97	;'a'
  1294  00FA99  6C                 	db	108	;'l'
  1295  00FA9A  69                 	db	105	;'i'
  1296  00FA9B  73                 	db	115	;'s'
  1297  00FA9C  65                 	db	101	;'e'
  1298  00FA9D  20                 	db	32
  1299  00FA9E  61                 	db	97	;'a'
  1300  00FA9F  6E                 	db	110	;'n'
  1301  00FAA0  64                 	db	100	;'d'
  1302  00FAA1  20                 	db	32
  1303  00FAA2  64                 	db	100	;'d'
  1304  00FAA3  69                 	db	105	;'i'
  1305  00FAA4  73                 	db	115	;'s'
  1306  00FAA5  70                 	db	112	;'p'
  1307  00FAA6  6C                 	db	108	;'l'
  1308  00FAA7  61                 	db	97	;'a'
  1309  00FAA8  79                 	db	121	;'y'
  1310  00FAA9  20                 	db	32
  1311  00FAAA  63                 	db	99	;'c'
  1312  00FAAB  61                 	db	97	;'a'
  1313  00FAAC  72                 	db	114	;'r'
  1314  00FAAD  64                 	db	100	;'d'
  1315  00FAAE  20                 	db	32
  1316  00FAAF  64                 	db	100	;'d'
  1317  00FAB0  65                 	db	101	;'e'
  1318  00FAB1  74                 	db	116	;'t'
  1319  00FAB2  61                 	db	97	;'a'
  1320  00FAB3  69                 	db	105	;'i'
  1321  00FAB4  6C                 	db	108	;'l'
  1322  00FAB5  73                 	db	115	;'s'
  1323  00FAB6  0D                 	db	13
  1324  00FAB7  0A                 	db	10
  1325  00FAB8  00                 	db	0
  1326  00FAB9                     STR_50:
  1327                           
  1328                           ; BSR set to: 0
  1329  00FAB9  20                 	db	32
  1330  00FABA  20                 	db	32
  1331  00FABB  20                 	db	32
  1332  00FABC  20                 	db	32
  1333  00FABD  20                 	db	32
  1334  00FABE  20                 	db	32
  1335  00FABF  41                 	db	65	;'A'
  1336  00FAC0  64                 	db	100	;'d'
  1337  00FAC1  64                 	db	100	;'d'
  1338  00FAC2  20                 	db	32
  1339  00FAC3  30                 	db	48	;'0'
  1340  00FAC4  78                 	db	120	;'x'
  1341  00FAC5  30                 	db	48	;'0'
  1342  00FAC6  31                 	db	49	;'1'
  1343  00FAC7  30                 	db	48	;'0'
  1344  00FAC8  30                 	db	48	;'0'
  1345  00FAC9  20                 	db	32
  1346  00FACA  74                 	db	116	;'t'
  1347  00FACB  6F                 	db	111	;'o'
  1348  00FACC  20                 	db	32
  1349  00FACD  30                 	db	48	;'0'
  1350  00FACE  78                 	db	120	;'x'
  1351  00FACF  30                 	db	48	;'0'
  1352  00FAD0  31                 	db	49	;'1'
  1353  00FAD1  30                 	db	48	;'0'
  1354  00FAD2  38                 	db	56	;'8'
  1355  00FAD3  20                 	db	32
  1356  00FAD4  2D                 	db	45
  1357  00FAD5  20                 	db	32
  1358  00FAD6  50                 	db	80	;'P'
  1359  00FAD7  61                 	db	97	;'a'
  1360  00FAD8  72                 	db	114	;'r'
  1361  00FAD9  74                 	db	116	;'t'
  1362  00FADA  20                 	db	32
  1363  00FADB  4E                 	db	78	;'N'
  1364  00FADC  75                 	db	117	;'u'
  1365  00FADD  6D                 	db	109	;'m'
  1366  00FADE  62                 	db	98	;'b'
  1367  00FADF  65                 	db	101	;'e'
  1368  00FAE0  72                 	db	114	;'r'
  1369  00FAE1  0D                 	db	13
  1370  00FAE2  0A                 	db	10
  1371  00FAE3  00                 	db	0
  1372  00FAE4                     STR_43:
  1373                           
  1374                           ; BSR set to: 0
  1375  00FAE4  43                 	db	67	;'C'
  1376  00FAE5  6F                 	db	111	;'o'
  1377  00FAE6  6D                 	db	109	;'m'
  1378  00FAE7  70                 	db	112	;'p'
  1379  00FAE8  69                 	db	105	;'i'
  1380  00FAE9  6C                 	db	108	;'l'
  1381  00FAEA  65                 	db	101	;'e'
  1382  00FAEB  64                 	db	100	;'d'
  1383  00FAEC  20                 	db	32
  1384  00FAED  6F                 	db	111	;'o'
  1385  00FAEE  6E                 	db	110	;'n'
  1386  00FAEF  20                 	db	32
  1387  00FAF0  25                 	db	37
  1388  00FAF1  73                 	db	115	;'s'
  1389  00FAF2  20                 	db	32
  1390  00FAF3  61                 	db	97	;'a'
  1391  00FAF4  74                 	db	116	;'t'
  1392  00FAF5  20                 	db	32
  1393  00FAF6  25                 	db	37
  1394  00FAF7  73                 	db	115	;'s'
  1395  00FAF8  20                 	db	32
  1396  00FAF9  62                 	db	98	;'b'
  1397  00FAFA  79                 	db	121	;'y'
  1398  00FAFB  20                 	db	32
  1399  00FAFC  58                 	db	88	;'X'
  1400  00FAFD  43                 	db	67	;'C'
  1401  00FAFE  38                 	db	56	;'8'
  1402  00FAFF  20                 	db	32
  1403  00FB00  76                 	db	118	;'v'
  1404  00FB01  65                 	db	101	;'e'
  1405  00FB02  72                 	db	114	;'r'
  1406  00FB03  73                 	db	115	;'s'
  1407  00FB04  69                 	db	105	;'i'
  1408  00FB05  6F                 	db	111	;'o'
  1409  00FB06  6E                 	db	110	;'n'
  1410  00FB07  20                 	db	32
  1411  00FB08  25                 	db	37
  1412  00FB09  75                 	db	117	;'u'
  1413  00FB0A  0D                 	db	13
  1414  00FB0B  0A                 	db	10
  1415  00FB0C  0A                 	db	10
  1416  00FB0D  00                 	db	0
  1417  00FB0E                     STR_48:
  1418                           
  1419                           ; BSR set to: 0
  1420  00FB0E  20                 	db	32
  1421  00FB0F  20                 	db	32
  1422  00FB10  20                 	db	32
  1423  00FB11  30                 	db	48	;'0'
  1424  00FB12  78                 	db	120	;'x'
  1425  00FB13  30                 	db	48	;'0'
  1426  00FB14  33                 	db	51	;'3'
  1427  00FB15  20                 	db	32
  1428  00FB16  2D                 	db	45
  1429  00FB17  20                 	db	32
  1430  00FB18  52                 	db	82	;'R'
  1431  00FB19  65                 	db	101	;'e'
  1432  00FB1A  61                 	db	97	;'a'
  1433  00FB1B  64                 	db	100	;'d'
  1434  00FB1C  20                 	db	32
  1435  00FB1D  4D                 	db	77	;'M'
  1436  00FB1E  75                 	db	117	;'u'
  1437  00FB1F  6C                 	db	108	;'l'
  1438  00FB20  74                 	db	116	;'t'
  1439  00FB21  69                 	db	105	;'i'
  1440  00FB22  70                 	db	112	;'p'
  1441  00FB23  6C                 	db	108	;'l'
  1442  00FB24  65                 	db	101	;'e'
  1443  00FB25  20                 	db	32
  1444  00FB26  31                 	db	49	;'1'
  1445  00FB27  36                 	db	54	;'6'
  1446  00FB28  62                 	db	98	;'b'
  1447  00FB29  69                 	db	105	;'i'
  1448  00FB2A  74                 	db	116	;'t'
  1449  00FB2B  20                 	db	32
  1450  00FB2C  52                 	db	82	;'R'
  1451  00FB2D  65                 	db	101	;'e'
  1452  00FB2E  67                 	db	103	;'g'
  1453  00FB2F  69                 	db	105	;'i'
  1454  00FB30  73                 	db	115	;'s'
  1455  00FB31  74                 	db	116	;'t'
  1456  00FB32  65                 	db	101	;'e'
  1457  00FB33  72                 	db	114	;'r'
  1458  00FB34  73                 	db	115	;'s'
  1459  00FB35  0D                 	db	13
  1460  00FB36  0A                 	db	10
  1461  00FB37  00                 	db	0
  1462  00FB38                     STR_52:
  1463                           
  1464                           ; BSR set to: 0
  1465  00FB38  20                 	db	32
  1466  00FB39  20                 	db	32
  1467  00FB3A  20                 	db	32
  1468  00FB3B  20                 	db	32
  1469  00FB3C  20                 	db	32
  1470  00FB3D  20                 	db	32
  1471  00FB3E  41                 	db	65	;'A'
  1472  00FB3F  64                 	db	100	;'d'
  1473  00FB40  64                 	db	100	;'d'
  1474  00FB41  20                 	db	32
  1475  00FB42  30                 	db	48	;'0'
  1476  00FB43  78                 	db	120	;'x'
  1477  00FB44  30                 	db	48	;'0'
  1478  00FB45  33                 	db	51	;'3'
  1479  00FB46  30                 	db	48	;'0'
  1480  00FB47  30                 	db	48	;'0'
  1481  00FB48  20                 	db	32
  1482  00FB49  74                 	db	116	;'t'
  1483  00FB4A  6F                 	db	111	;'o'
  1484  00FB4B  20                 	db	32
  1485  00FB4C  30                 	db	48	;'0'
  1486  00FB4D  78                 	db	120	;'x'
  1487  00FB4E  30                 	db	48	;'0'
  1488  00FB4F  33                 	db	51	;'3'
  1489  00FB50  30                 	db	48	;'0'
  1490  00FB51  34                 	db	52	;'4'
  1491  00FB52  20                 	db	32
  1492  00FB53  2D                 	db	45
  1493  00FB54  20                 	db	32
  1494  00FB55  52                 	db	82	;'R'
  1495  00FB56  65                 	db	101	;'e'
  1496  00FB57  76                 	db	118	;'v'
  1497  00FB58  69                 	db	105	;'i'
  1498  00FB59  73                 	db	115	;'s'
  1499  00FB5A  69                 	db	105	;'i'
  1500  00FB5B  6F                 	db	111	;'o'
  1501  00FB5C  6E                 	db	110	;'n'
  1502  00FB5D  0D                 	db	13
  1503  00FB5E  0A                 	db	10
  1504  00FB5F  00                 	db	0
  1505  00FB60                     STR_38:
  1506                           
  1507                           ; BSR set to: 0
  1508  00FB60  0D                 	db	13
  1509  00FB61  0A                 	db	10
  1510  00FB62  44                 	db	68	;'D'
  1511  00FB63  61                 	db	97	;'a'
  1512  00FB64  6E                 	db	110	;'n'
  1513  00FB65  20                 	db	32
  1514  00FB66  61                 	db	97	;'a'
  1515  00FB67  6E                 	db	110	;'n'
  1516  00FB68  64                 	db	100	;'d'
  1517  00FB69  20                 	db	32
  1518  00FB6A  53                 	db	83	;'S'
  1519  00FB6B  61                 	db	97	;'a'
  1520  00FB6C  6D                 	db	109	;'m'
  1521  00FB6D  27                 	db	39
  1522  00FB6E  73                 	db	115	;'s'
  1523  00FB6F  20                 	db	32
  1524  00FB70  4D                 	db	77	;'M'
  1525  00FB71  6F                 	db	111	;'o'
  1526  00FB72  64                 	db	100	;'d'
  1527  00FB73  62                 	db	98	;'b'
  1528  00FB74  75                 	db	117	;'u'
  1529  00FB75  73                 	db	115	;'s'
  1530  00FB76  20                 	db	32
  1531  00FB77  47                 	db	71	;'G'
  1532  00FB78  50                 	db	80	;'P'
  1533  00FB79  49                 	db	73	;'I'
  1534  00FB7A  4F                 	db	79	;'O'
  1535  00FB7B  20                 	db	32
  1536  00FB7C  45                 	db	69	;'E'
  1537  00FB7D  78                 	db	120	;'x'
  1538  00FB7E  70                 	db	112	;'p'
  1539  00FB7F  61                 	db	97	;'a'
  1540  00FB80  6E                 	db	110	;'n'
  1541  00FB81  73                 	db	115	;'s'
  1542  00FB82  69                 	db	105	;'i'
  1543  00FB83  6F                 	db	111	;'o'
  1544  00FB84  6E                 	db	110	;'n'
  1545  00FB85  0D                 	db	13
  1546  00FB86  0A                 	db	10
  1547  00FB87  00                 	db	0
  1548  00FB88                     STR_69:
  1549                           
  1550                           ; BSR set to: 0
  1551  00FB88  0D                 	db	13
  1552  00FB89  0A                 	db	10
  1553  00FB8A  45                 	db	69	;'E'
  1554  00FB8B  6E                 	db	110	;'n'
  1555  00FB8C  74                 	db	116	;'t'
  1556  00FB8D  65                 	db	101	;'e'
  1557  00FB8E  72                 	db	114	;'r'
  1558  00FB8F  20                 	db	32
  1559  00FB90  63                 	db	99	;'c'
  1560  00FB91  61                 	db	97	;'a'
  1561  00FB92  72                 	db	114	;'r'
  1562  00FB93  64                 	db	100	;'d'
  1563  00FB94  20                 	db	32
  1564  00FB95  25                 	db	37
  1565  00FB96  73                 	db	115	;'s'
  1566  00FB97  20                 	db	32
  1567  00FB98  28                 	db	40
  1568  00FB99  6D                 	db	109	;'m'
  1569  00FB9A  61                 	db	97	;'a'
  1570  00FB9B  78                 	db	120	;'x'
  1571  00FB9C  20                 	db	32
  1572  00FB9D  25                 	db	37
  1573  00FB9E  69                 	db	105	;'i'
  1574  00FB9F  20                 	db	32
  1575  00FBA0  63                 	db	99	;'c'
  1576  00FBA1  68                 	db	104	;'h'
  1577  00FBA2  61                 	db	97	;'a'
  1578  00FBA3  72                 	db	114	;'r'
  1579  00FBA4  61                 	db	97	;'a'
  1580  00FBA5  63                 	db	99	;'c'
  1581  00FBA6  74                 	db	116	;'t'
  1582  00FBA7  65                 	db	101	;'e'
  1583  00FBA8  72                 	db	114	;'r'
  1584  00FBA9  73                 	db	115	;'s'
  1585  00FBAA  29                 	db	41
  1586  00FBAB  3A                 	db	58	;':'
  1587  00FBAC  20                 	db	32
  1588  00FBAD  00                 	db	0
  1589  00FBAE                     STR_60:
  1590                           
  1591                           ; BSR set to: 0
  1592  00FBAE  20                 	db	32
  1593  00FBAF  20                 	db	32
  1594  00FBB0  20                 	db	32
  1595  00FBB1  73                 	db	115	;'s'
  1596  00FBB2  65                 	db	101	;'e'
  1597  00FBB3  72                 	db	114	;'r'
  1598  00FBB4  69                 	db	105	;'i'
  1599  00FBB5  61                 	db	97	;'a'
  1600  00FBB6  6C                 	db	108	;'l'
  1601  00FBB7  20                 	db	32
  1602  00FBB8  2D                 	db	45
  1603  00FBB9  20                 	db	32
  1604  00FBBA  53                 	db	83	;'S'
  1605  00FBBB  65                 	db	101	;'e'
  1606  00FBBC  74                 	db	116	;'t'
  1607  00FBBD  20                 	db	32
  1608  00FBBE  63                 	db	99	;'c'
  1609  00FBBF  61                 	db	97	;'a'
  1610  00FBC0  72                 	db	114	;'r'
  1611  00FBC1  64                 	db	100	;'d'
  1612  00FBC2  20                 	db	32
  1613  00FBC3  73                 	db	115	;'s'
  1614  00FBC4  65                 	db	101	;'e'
  1615  00FBC5  72                 	db	114	;'r'
  1616  00FBC6  69                 	db	105	;'i'
  1617  00FBC7  61                 	db	97	;'a'
  1618  00FBC8  6C                 	db	108	;'l'
  1619  00FBC9  20                 	db	32
  1620  00FBCA  6E                 	db	110	;'n'
  1621  00FBCB  75                 	db	117	;'u'
  1622  00FBCC  6D                 	db	109	;'m'
  1623  00FBCD  62                 	db	98	;'b'
  1624  00FBCE  65                 	db	101	;'e'
  1625  00FBCF  72                 	db	114	;'r'
  1626  00FBD0  0D                 	db	13
  1627  00FBD1  0A                 	db	10
  1628  00FBD2  00                 	db	0
  1629  00FBD3                     STR_27:
  1630                           
  1631                           ; BSR set to: 0
  1632  00FBD3  0D                 	db	13
  1633  00FBD4  0A                 	db	10
  1634  00FBD5  52                 	db	82	;'R'
  1635  00FBD6  65                 	db	101	;'e'
  1636  00FBD7  63                 	db	99	;'c'
  1637  00FBD8  65                 	db	101	;'e'
  1638  00FBD9  69                 	db	105	;'i'
  1639  00FBDA  76                 	db	118	;'v'
  1640  00FBDB  65                 	db	101	;'e'
  1641  00FBDC  64                 	db	100	;'d'
  1642  00FBDD  20                 	db	32
  1643  00FBDE  4D                 	db	77	;'M'
  1644  00FBDF  6F                 	db	111	;'o'
  1645  00FBE0  64                 	db	100	;'d'
  1646  00FBE1  62                 	db	98	;'b'
  1647  00FBE2  75                 	db	117	;'u'
  1648  00FBE3  73                 	db	115	;'s'
  1649  00FBE4  20                 	db	32
  1650  00FBE5  43                 	db	67	;'C'
  1651  00FBE6  52                 	db	82	;'R'
  1652  00FBE7  43                 	db	67	;'C'
  1653  00FBE8  20                 	db	32
  1654  00FBE9  63                 	db	99	;'c'
  1655  00FBEA  68                 	db	104	;'h'
  1656  00FBEB  65                 	db	101	;'e'
  1657  00FBEC  63                 	db	99	;'c'
  1658  00FBED  6B                 	db	107	;'k'
  1659  00FBEE  65                 	db	101	;'e'
  1660  00FBEF  64                 	db	100	;'d'
  1661  00FBF0  20                 	db	32
  1662  00FBF1  6F                 	db	111	;'o'
  1663  00FBF2  75                 	db	117	;'u'
  1664  00FBF3  74                 	db	116	;'t'
  1665  00FBF4  2E                 	db	46
  1666  00FBF5  0D                 	db	13
  1667  00FBF6  0A                 	db	10
  1668  00FBF7  00                 	db	0
  1669  00FBF8                     STR_47:
  1670                           
  1671                           ; BSR set to: 0
  1672  00FBF8  4D                 	db	77	;'M'
  1673  00FBF9  6F                 	db	111	;'o'
  1674  00FBFA  64                 	db	100	;'d'
  1675  00FBFB  62                 	db	98	;'b'
  1676  00FBFC  75                 	db	117	;'u'
  1677  00FBFD  73                 	db	115	;'s'
  1678  00FBFE  20                 	db	32
  1679  00FBFF  46                 	db	70	;'F'
  1680  00FC00  75                 	db	117	;'u'
  1681  00FC01  6E                 	db	110	;'n'
  1682  00FC02  63                 	db	99	;'c'
  1683  00FC03  74                 	db	116	;'t'
  1684  00FC04  69                 	db	105	;'i'
  1685  00FC05  6F                 	db	111	;'o'
  1686  00FC06  6E                 	db	110	;'n'
  1687  00FC07  20                 	db	32
  1688  00FC08  43                 	db	67	;'C'
  1689  00FC09  6F                 	db	111	;'o'
  1690  00FC0A  64                 	db	100	;'d'
  1691  00FC0B  65                 	db	101	;'e'
  1692  00FC0C  73                 	db	115	;'s'
  1693  00FC0D  20                 	db	32
  1694  00FC0E  53                 	db	83	;'S'
  1695  00FC0F  75                 	db	117	;'u'
  1696  00FC10  70                 	db	112	;'p'
  1697  00FC11  70                 	db	112	;'p'
  1698  00FC12  6F                 	db	111	;'o'
  1699  00FC13  72                 	db	114	;'r'
  1700  00FC14  74                 	db	116	;'t'
  1701  00FC15  65                 	db	101	;'e'
  1702  00FC16  64                 	db	100	;'d'
  1703  00FC17  3A                 	db	58	;':'
  1704  00FC18  0D                 	db	13
  1705  00FC19  0A                 	db	10
  1706  00FC1A  0A                 	db	10
  1707  00FC1B  00                 	db	0
  1708  00FC1C                     STR_13:
  1709                           
  1710                           ; BSR set to: 0
  1711  00FC1C  63                 	db	99	;'c'
  1712  00FC1D  72                 	db	114	;'r'
  1713  00FC1E  63                 	db	99	;'c'
  1714  00FC1F  48                 	db	72	;'H'
  1715  00FC20  69                 	db	105	;'i'
  1716  00FC21  67                 	db	103	;'g'
  1717  00FC22  68                 	db	104	;'h'
  1718  00FC23  3A                 	db	58	;':'
  1719  00FC24  20                 	db	32
  1720  00FC25  30                 	db	48	;'0'
  1721  00FC26  78                 	db	120	;'x'
  1722  00FC27  25                 	db	37
  1723  00FC28  30                 	db	48	;'0'
  1724  00FC29  32                 	db	50	;'2'
  1725  00FC2A  78                 	db	120	;'x'
  1726  00FC2B  20                 	db	32
  1727  00FC2C  20                 	db	32
  1728  00FC2D  63                 	db	99	;'c'
  1729  00FC2E  72                 	db	114	;'r'
  1730  00FC2F  63                 	db	99	;'c'
  1731  00FC30  4C                 	db	76	;'L'
  1732  00FC31  6F                 	db	111	;'o'
  1733  00FC32  77                 	db	119	;'w'
  1734  00FC33  3A                 	db	58	;':'
  1735  00FC34  20                 	db	32
  1736  00FC35  30                 	db	48	;'0'
  1737  00FC36  78                 	db	120	;'x'
  1738  00FC37  25                 	db	37
  1739  00FC38  30                 	db	48	;'0'
  1740  00FC39  32                 	db	50	;'2'
  1741  00FC3A  78                 	db	120	;'x'
  1742  00FC3B  20                 	db	32
  1743  00FC3C  20                 	db	32
  1744  00FC3D  0D                 	db	13
  1745  00FC3E  0A                 	db	10
  1746  00FC3F  00                 	db	0
  1747  00FC40                     STR_46:
  1748                           
  1749                           ; BSR set to: 0
  1750  00FC40  49                 	db	73	;'I'
  1751  00FC41  6E                 	db	110	;'n'
  1752  00FC42  69                 	db	105	;'i'
  1753  00FC43  74                 	db	116	;'t'
  1754  00FC44  61                 	db	97	;'a'
  1755  00FC45  6C                 	db	108	;'l'
  1756  00FC46  69                 	db	105	;'i'
  1757  00FC47  73                 	db	115	;'s'
  1758  00FC48  61                 	db	97	;'a'
  1759  00FC49  74                 	db	116	;'t'
  1760  00FC4A  69                 	db	105	;'i'
  1761  00FC4B  6F                 	db	111	;'o'
  1762  00FC4C  6E                 	db	110	;'n'
  1763  00FC4D  20                 	db	32
  1764  00FC4E  43                 	db	67	;'C'
  1765  00FC4F  6F                 	db	111	;'o'
  1766  00FC50  6D                 	db	109	;'m'
  1767  00FC51  70                 	db	112	;'p'
  1768  00FC52  6C                 	db	108	;'l'
  1769  00FC53  65                 	db	101	;'e'
  1770  00FC54  74                 	db	116	;'t'
  1771  00FC55  65                 	db	101	;'e'
  1772  00FC56  20                 	db	32
  1773  00FC57  2D                 	db	45
  1774  00FC58  20                 	db	32
  1775  00FC59  52                 	db	82	;'R'
  1776  00FC5A  65                 	db	101	;'e'
  1777  00FC5B  61                 	db	97	;'a'
  1778  00FC5C  64                 	db	100	;'d'
  1779  00FC5D  79                 	db	121	;'y'
  1780  00FC5E  0D                 	db	13
  1781  00FC5F  0A                 	db	10
  1782  00FC60  0A                 	db	10
  1783  00FC61  00                 	db	0
  1784  00FC62                     STR_10:
  1785                           
  1786                           ; BSR set to: 0
  1787  00FC62  0D                 	db	13
  1788  00FC63  0A                 	db	10
  1789  00FC64  4D                 	db	77	;'M'
  1790  00FC65  6F                 	db	111	;'o'
  1791  00FC66  64                 	db	100	;'d'
  1792  00FC67  62                 	db	98	;'b'
  1793  00FC68  75                 	db	117	;'u'
  1794  00FC69  73                 	db	115	;'s'
  1795  00FC6A  20                 	db	32
  1796  00FC6B  44                 	db	68	;'D'
  1797  00FC6C  61                 	db	97	;'a'
  1798  00FC6D  74                 	db	116	;'t'
  1799  00FC6E  61                 	db	97	;'a'
  1800  00FC6F  20                 	db	32
  1801  00FC70  43                 	db	67	;'C'
  1802  00FC71  61                 	db	97	;'a'
  1803  00FC72  70                 	db	112	;'p'
  1804  00FC73  74                 	db	116	;'t'
  1805  00FC74  75                 	db	117	;'u'
  1806  00FC75  72                 	db	114	;'r'
  1807  00FC76  65                 	db	101	;'e'
  1808  00FC77  20                 	db	32
  1809  00FC78  43                 	db	67	;'C'
  1810  00FC79  6F                 	db	111	;'o'
  1811  00FC7A  6D                 	db	109	;'m'
  1812  00FC7B  70                 	db	112	;'p'
  1813  00FC7C  6C                 	db	108	;'l'
  1814  00FC7D  65                 	db	101	;'e'
  1815  00FC7E  74                 	db	116	;'t'
  1816  00FC7F  65                 	db	101	;'e'
  1817  00FC80  3A                 	db	58	;':'
  1818  00FC81  0D                 	db	13
  1819  00FC82  0A                 	db	10
  1820  00FC83  00                 	db	0
  1821  00FC84                     STR_61:
  1822                           
  1823                           ; BSR set to: 0
  1824  00FC84  20                 	db	32
  1825  00FC85  20                 	db	32
  1826  00FC86  20                 	db	32
  1827  00FC87  70                 	db	112	;'p'
  1828  00FC88  61                 	db	97	;'a'
  1829  00FC89  72                 	db	114	;'r'
  1830  00FC8A  74                 	db	116	;'t'
  1831  00FC8B  20                 	db	32
  1832  00FC8C  2D                 	db	45
  1833  00FC8D  20                 	db	32
  1834  00FC8E  53                 	db	83	;'S'
  1835  00FC8F  65                 	db	101	;'e'
  1836  00FC90  74                 	db	116	;'t'
  1837  00FC91  20                 	db	32
  1838  00FC92  63                 	db	99	;'c'
  1839  00FC93  61                 	db	97	;'a'
  1840  00FC94  72                 	db	114	;'r'
  1841  00FC95  64                 	db	100	;'d'
  1842  00FC96  20                 	db	32
  1843  00FC97  70                 	db	112	;'p'
  1844  00FC98  61                 	db	97	;'a'
  1845  00FC99  72                 	db	114	;'r'
  1846  00FC9A  74                 	db	116	;'t'
  1847  00FC9B  20                 	db	32
  1848  00FC9C  6E                 	db	110	;'n'
  1849  00FC9D  75                 	db	117	;'u'
  1850  00FC9E  6D                 	db	109	;'m'
  1851  00FC9F  62                 	db	98	;'b'
  1852  00FCA0  65                 	db	101	;'e'
  1853  00FCA1  72                 	db	114	;'r'
  1854  00FCA2  0D                 	db	13
  1855  00FCA3  0A                 	db	10
  1856  00FCA4  00                 	db	0
  1857  00FCA5                     STR_71:
  1858                           
  1859                           ; BSR set to: 0
  1860  00FCA5  0D                 	db	13
  1861  00FCA6  0A                 	db	10
  1862  00FCA7  45                 	db	69	;'E'
  1863  00FCA8  6E                 	db	110	;'n'
  1864  00FCA9  74                 	db	116	;'t'
  1865  00FCAA  65                 	db	101	;'e'
  1866  00FCAB  72                 	db	114	;'r'
  1867  00FCAC  65                 	db	101	;'e'
  1868  00FCAD  64                 	db	100	;'d'
  1869  00FCAE  3A                 	db	58	;':'
  1870  00FCAF  20                 	db	32
  1871  00FCB0  25                 	db	37
  1872  00FCB1  73                 	db	115	;'s'
  1873  00FCB2  20                 	db	32
  1874  00FCB3  0D                 	db	13
  1875  00FCB4  0A                 	db	10
  1876  00FCB5  20                 	db	32
  1877  00FCB6  43                 	db	67	;'C'
  1878  00FCB7  6F                 	db	111	;'o'
  1879  00FCB8  6E                 	db	110	;'n'
  1880  00FCB9  66                 	db	102	;'f'
  1881  00FCBA  69                 	db	105	;'i'
  1882  00FCBB  72                 	db	114	;'r'
  1883  00FCBC  6D                 	db	109	;'m'
  1884  00FCBD  20                 	db	32
  1885  00FCBE  20                 	db	32
  1886  00FCBF  59                 	db	89	;'Y'
  1887  00FCC0  7C                 	db	124
  1888  00FCC1  4E                 	db	78	;'N'
  1889  00FCC2  3F                 	db	63	;'?'
  1890  00FCC3  3A                 	db	58	;':'
  1891  00FCC4  20                 	db	32
  1892  00FCC5  00                 	db	0
  1893  00FCC6                     STR_62:
  1894                           
  1895                           ; BSR set to: 0
  1896  00FCC6  20                 	db	32
  1897  00FCC7  20                 	db	32
  1898  00FCC8  20                 	db	32
  1899  00FCC9  72                 	db	114	;'r'
  1900  00FCCA  65                 	db	101	;'e'
  1901  00FCCB  76                 	db	118	;'v'
  1902  00FCCC  20                 	db	32
  1903  00FCCD  2D                 	db	45
  1904  00FCCE  20                 	db	32
  1905  00FCCF  53                 	db	83	;'S'
  1906  00FCD0  65                 	db	101	;'e'
  1907  00FCD1  74                 	db	116	;'t'
  1908  00FCD2  20                 	db	32
  1909  00FCD3  63                 	db	99	;'c'
  1910  00FCD4  61                 	db	97	;'a'
  1911  00FCD5  72                 	db	114	;'r'
  1912  00FCD6  64                 	db	100	;'d'
  1913  00FCD7  20                 	db	32
  1914  00FCD8  70                 	db	112	;'p'
  1915  00FCD9  61                 	db	97	;'a'
  1916  00FCDA  72                 	db	114	;'r'
  1917  00FCDB  74                 	db	116	;'t'
  1918  00FCDC  20                 	db	32
  1919  00FCDD  6E                 	db	110	;'n'
  1920  00FCDE  75                 	db	117	;'u'
  1921  00FCDF  6D                 	db	109	;'m'
  1922  00FCE0  62                 	db	98	;'b'
  1923  00FCE1  65                 	db	101	;'e'
  1924  00FCE2  72                 	db	114	;'r'
  1925  00FCE3  0D                 	db	13
  1926  00FCE4  0A                 	db	10
  1927  00FCE5  00                 	db	0
  1928  00FCE6                     STR_28:
  1929                           
  1930                           ; BSR set to: 0
  1931  00FCE6  0D                 	db	13
  1932  00FCE7  0A                 	db	10
  1933  00FCE8  52                 	db	82	;'R'
  1934  00FCE9  65                 	db	101	;'e'
  1935  00FCEA  63                 	db	99	;'c'
  1936  00FCEB  65                 	db	101	;'e'
  1937  00FCEC  69                 	db	105	;'i'
  1938  00FCED  76                 	db	118	;'v'
  1939  00FCEE  65                 	db	101	;'e'
  1940  00FCEF  64                 	db	100	;'d'
  1941  00FCF0  20                 	db	32
  1942  00FCF1  4D                 	db	77	;'M'
  1943  00FCF2  6F                 	db	111	;'o'
  1944  00FCF3  64                 	db	100	;'d'
  1945  00FCF4  62                 	db	98	;'b'
  1946  00FCF5  75                 	db	117	;'u'
  1947  00FCF6  73                 	db	115	;'s'
  1948  00FCF7  20                 	db	32
  1949  00FCF8  43                 	db	67	;'C'
  1950  00FCF9  52                 	db	82	;'R'
  1951  00FCFA  43                 	db	67	;'C'
  1952  00FCFB  20                 	db	32
  1953  00FCFC  69                 	db	105	;'i'
  1954  00FCFD  73                 	db	115	;'s'
  1955  00FCFE  20                 	db	32
  1956  00FCFF  62                 	db	98	;'b'
  1957  00FD00  61                 	db	97	;'a'
  1958  00FD01  64                 	db	100	;'d'
  1959  00FD02  2E                 	db	46
  1960  00FD03  0D                 	db	13
  1961  00FD04  0A                 	db	10
  1962  00FD05  00                 	db	0
  1963  00FD06                     STR_2:
  1964                           
  1965                           ; BSR set to: 0
  1966  00FD06  4D                 	db	77	;'M'
  1967  00FD07  6F                 	db	111	;'o'
  1968  00FD08  64                 	db	100	;'d'
  1969  00FD09  62                 	db	98	;'b'
  1970  00FD0A  75                 	db	117	;'u'
  1971  00FD0B  73                 	db	115	;'s'
  1972  00FD0C  20                 	db	32
  1973  00FD0D  52                 	db	82	;'R'
  1974  00FD0E  65                 	db	101	;'e'
  1975  00FD0F  67                 	db	103	;'g'
  1976  00FD10  69                 	db	105	;'i'
  1977  00FD11  73                 	db	115	;'s'
  1978  00FD12  74                 	db	116	;'t'
  1979  00FD13  65                 	db	101	;'e'
  1980  00FD14  72                 	db	114	;'r'
  1981  00FD15  20                 	db	32
  1982  00FD16  42                 	db	66	;'B'
  1983  00FD17  65                 	db	101	;'e'
  1984  00FD18  66                 	db	102	;'f'
  1985  00FD19  6F                 	db	111	;'o'
  1986  00FD1A  72                 	db	114	;'r'
  1987  00FD1B  65                 	db	101	;'e'
  1988  00FD1C  20                 	db	32
  1989  00FD1D  55                 	db	85	;'U'
  1990  00FD1E  70                 	db	112	;'p'
  1991  00FD1F  64                 	db	100	;'d'
  1992  00FD20  61                 	db	97	;'a'
  1993  00FD21  74                 	db	116	;'t'
  1994  00FD22  65                 	db	101	;'e'
  1995  00FD23  3A                 	db	58	;':'
  1996  00FD24  00                 	db	0
  1997  00FD25                     STR_51:
  1998                           
  1999                           ; BSR set to: 0
  2000  00FD25  20                 	db	32
  2001  00FD26  20                 	db	32
  2002  00FD27  20                 	db	32
  2003  00FD28  20                 	db	32
  2004  00FD29  20                 	db	32
  2005  00FD2A  20                 	db	32
  2006  00FD2B  41                 	db	65	;'A'
  2007  00FD2C  64                 	db	100	;'d'
  2008  00FD2D  64                 	db	100	;'d'
  2009  00FD2E  20                 	db	32
  2010  00FD2F  30                 	db	48	;'0'
  2011  00FD30  78                 	db	120	;'x'
  2012  00FD31  30                 	db	48	;'0'
  2013  00FD32  32                 	db	50	;'2'
  2014  00FD33  30                 	db	48	;'0'
  2015  00FD34  30                 	db	48	;'0'
  2016  00FD35  20                 	db	32
  2017  00FD36  2D                 	db	45
  2018  00FD37  20                 	db	32
  2019  00FD38  52                 	db	82	;'R'
  2020  00FD39  65                 	db	101	;'e'
  2021  00FD3A  76                 	db	118	;'v'
  2022  00FD3B  69                 	db	105	;'i'
  2023  00FD3C  73                 	db	115	;'s'
  2024  00FD3D  69                 	db	105	;'i'
  2025  00FD3E  6F                 	db	111	;'o'
  2026  00FD3F  6E                 	db	110	;'n'
  2027  00FD40  0D                 	db	13
  2028  00FD41  0A                 	db	10
  2029  00FD42  00                 	db	0
  2030  00FD43                     STR_20:
  2031                           
  2032                           ; BSR set to: 0
  2033  00FD43  52                 	db	82	;'R'
  2034  00FD44  65                 	db	101	;'e'
  2035  00FD45  71                 	db	113	;'q'
  2036  00FD46  75                 	db	117	;'u'
  2037  00FD47  65                 	db	101	;'e'
  2038  00FD48  73                 	db	115	;'s'
  2039  00FD49  74                 	db	116	;'t'
  2040  00FD4A  65                 	db	101	;'e'
  2041  00FD4B  64                 	db	100	;'d'
  2042  00FD4C  20                 	db	32
  2043  00FD4D  41                 	db	65	;'A'
  2044  00FD4E  6E                 	db	110	;'n'
  2045  00FD4F  61                 	db	97	;'a'
  2046  00FD50  6C                 	db	108	;'l'
  2047  00FD51  6F                 	db	111	;'o'
  2048  00FD52  67                 	db	103	;'g'
  2049  00FD53  75                 	db	117	;'u'
  2050  00FD54  65                 	db	101	;'e'
  2051  00FD55  20                 	db	32
  2052  00FD56  49                 	db	73	;'I'
  2053  00FD57  6E                 	db	110	;'n'
  2054  00FD58  70                 	db	112	;'p'
  2055  00FD59  75                 	db	117	;'u'
  2056  00FD5A  74                 	db	116	;'t'
  2057  00FD5B  73                 	db	115	;'s'
  2058  00FD5C  0D                 	db	13
  2059  00FD5D  0A                 	db	10
  2060  00FD5E  0A                 	db	10
  2061  00FD5F  00                 	db	0
  2062  00FD60                     STR_9:
  2063                           
  2064                           ; BSR set to: 0
  2065  00FD60  4D                 	db	77	;'M'
  2066  00FD61  6F                 	db	111	;'o'
  2067  00FD62  64                 	db	100	;'d'
  2068  00FD63  44                 	db	68	;'D'
  2069  00FD64  61                 	db	97	;'a'
  2070  00FD65  74                 	db	116	;'t'
  2071  00FD66  61                 	db	97	;'a'
  2072  00FD67  43                 	db	67	;'C'
  2073  00FD68  6E                 	db	110	;'n'
  2074  00FD69  74                 	db	116	;'t'
  2075  00FD6A  20                 	db	32
  2076  00FD6B  73                 	db	115	;'s'
  2077  00FD6C  69                 	db	105	;'i'
  2078  00FD6D  74                 	db	116	;'t'
  2079  00FD6E  74                 	db	116	;'t'
  2080  00FD6F  69                 	db	105	;'i'
  2081  00FD70  6E                 	db	110	;'n'
  2082  00FD71  67                 	db	103	;'g'
  2083  00FD72  20                 	db	32
  2084  00FD73  61                 	db	97	;'a'
  2085  00FD74  74                 	db	116	;'t'
  2086  00FD75  20                 	db	32
  2087  00FD76  25                 	db	37
  2088  00FD77  69                 	db	105	;'i'
  2089  00FD78  0D                 	db	13
  2090  00FD79  0A                 	db	10
  2091  00FD7A  0A                 	db	10
  2092  00FD7B  00                 	db	0
  2093  00FD7C                     STR_22:
  2094                           
  2095                           ; BSR set to: 0
  2096  00FD7C  4D                 	db	77	;'M'
  2097  00FD7D  6F                 	db	111	;'o'
  2098  00FD7E  64                 	db	100	;'d'
  2099  00FD7F  62                 	db	98	;'b'
  2100  00FD80  75                 	db	117	;'u'
  2101  00FD81  73                 	db	115	;'s'
  2102  00FD82  20                 	db	32
  2103  00FD83  52                 	db	82	;'R'
  2104  00FD84  65                 	db	101	;'e'
  2105  00FD85  73                 	db	115	;'s'
  2106  00FD86  70                 	db	112	;'p'
  2107  00FD87  6F                 	db	111	;'o'
  2108  00FD88  6E                 	db	110	;'n'
  2109  00FD89  73                 	db	115	;'s'
  2110  00FD8A  65                 	db	101	;'e'
  2111  00FD8B  20                 	db	32
  2112  00FD8C  43                 	db	67	;'C'
  2113  00FD8D  6F                 	db	111	;'o'
  2114  00FD8E  75                 	db	117	;'u'
  2115  00FD8F  6E                 	db	110	;'n'
  2116  00FD90  74                 	db	116	;'t'
  2117  00FD91  20                 	db	32
  2118  00FD92  25                 	db	37
  2119  00FD93  69                 	db	105	;'i'
  2120  00FD94  3A                 	db	58	;':'
  2121  00FD95  0D                 	db	13
  2122  00FD96  0A                 	db	10
  2123  00FD97  00                 	db	0
  2124  00FD98                     STR_3:
  2125                           
  2126                           ; BSR set to: 0
  2127  00FD98  55                 	db	85	;'U'
  2128  00FD99  6E                 	db	110	;'n'
  2129  00FD9A  73                 	db	115	;'s'
  2130  00FD9B  75                 	db	117	;'u'
  2131  00FD9C  70                 	db	112	;'p'
  2132  00FD9D  70                 	db	112	;'p'
  2133  00FD9E  6F                 	db	111	;'o'
  2134  00FD9F  72                 	db	114	;'r'
  2135  00FDA0  74                 	db	116	;'t'
  2136  00FDA1  65                 	db	101	;'e'
  2137  00FDA2  64                 	db	100	;'d'
  2138  00FDA3  20                 	db	32
  2139  00FDA4  46                 	db	70	;'F'
  2140  00FDA5  75                 	db	117	;'u'
  2141  00FDA6  6E                 	db	110	;'n'
  2142  00FDA7  63                 	db	99	;'c'
  2143  00FDA8  74                 	db	116	;'t'
  2144  00FDA9  69                 	db	105	;'i'
  2145  00FDAA  6F                 	db	111	;'o'
  2146  00FDAB  6E                 	db	110	;'n'
  2147  00FDAC  20                 	db	32
  2148  00FDAD  43                 	db	67	;'C'
  2149  00FDAE  6F                 	db	111	;'o'
  2150  00FDAF  64                 	db	100	;'d'
  2151  00FDB0  65                 	db	101	;'e'
  2152  00FDB1  0D                 	db	13
  2153  00FDB2  0A                 	db	10
  2154  00FDB3  00                 	db	0
  2155  00FDB4                     STR_7:
  2156                           
  2157                           ; BSR set to: 0
  2158  00FDB4  20                 	db	32
  2159  00FDB5  20                 	db	32
  2160  00FDB6  20                 	db	32
  2161  00FDB7  52                 	db	82	;'R'
  2162  00FDB8  65                 	db	101	;'e'
  2163  00FDB9  67                 	db	103	;'g'
  2164  00FDBA  3A                 	db	58	;':'
  2165  00FDBB  20                 	db	32
  2166  00FDBC  25                 	db	37
  2167  00FDBD  69                 	db	105	;'i'
  2168  00FDBE  20                 	db	32
  2169  00FDBF  44                 	db	68	;'D'
  2170  00FDC0  61                 	db	97	;'a'
  2171  00FDC1  74                 	db	116	;'t'
  2172  00FDC2  61                 	db	97	;'a'
  2173  00FDC3  3A                 	db	58	;':'
  2174  00FDC4  20                 	db	32
  2175  00FDC5  30                 	db	48	;'0'
  2176  00FDC6  78                 	db	120	;'x'
  2177  00FDC7  25                 	db	37
  2178  00FDC8  30                 	db	48	;'0'
  2179  00FDC9  34                 	db	52	;'4'
  2180  00FDCA  78                 	db	120	;'x'
  2181  00FDCB  20                 	db	32
  2182  00FDCC  0D                 	db	13
  2183  00FDCD  0A                 	db	10
  2184  00FDCE  00                 	db	0
  2185  00FDCF                     STR_14:
  2186                           
  2187                           ; BSR set to: 0
  2188  00FDCF  52                 	db	82	;'R'
  2189  00FDD0  65                 	db	101	;'e'
  2190  00FDD1  71                 	db	113	;'q'
  2191  00FDD2  75                 	db	117	;'u'
  2192  00FDD3  65                 	db	101	;'e'
  2193  00FDD4  73                 	db	115	;'s'
  2194  00FDD5  74                 	db	116	;'t'
  2195  00FDD6  65                 	db	101	;'e'
  2196  00FDD7  64                 	db	100	;'d'
  2197  00FDD8  20                 	db	32
  2198  00FDD9  43                 	db	67	;'C'
  2199  00FDDA  69                 	db	105	;'i'
  2200  00FDDB  72                 	db	114	;'r'
  2201  00FDDC  63                 	db	99	;'c'
  2202  00FDDD  75                 	db	117	;'u'
  2203  00FDDE  69                 	db	105	;'i'
  2204  00FDDF  74                 	db	116	;'t'
  2205  00FDE0  20                 	db	32
  2206  00FDE1  44                 	db	68	;'D'
  2207  00FDE2  61                 	db	97	;'a'
  2208  00FDE3  74                 	db	116	;'t'
  2209  00FDE4  61                 	db	97	;'a'
  2210  00FDE5  0D                 	db	13
  2211  00FDE6  0A                 	db	10
  2212  00FDE7  0A                 	db	10
  2213  00FDE8  00                 	db	0
  2214  00FDE9                     STR_19:
  2215                           
  2216                           ; BSR set to: 0
  2217  00FDE9  52                 	db	82	;'R'
  2218  00FDEA  65                 	db	101	;'e'
  2219  00FDEB  71                 	db	113	;'q'
  2220  00FDEC  75                 	db	117	;'u'
  2221  00FDED  65                 	db	101	;'e'
  2222  00FDEE  73                 	db	115	;'s'
  2223  00FDEF  74                 	db	116	;'t'
  2224  00FDF0  65                 	db	101	;'e'
  2225  00FDF1  64                 	db	100	;'d'
  2226  00FDF2  20                 	db	32
  2227  00FDF3  43                 	db	67	;'C'
  2228  00FDF4  6F                 	db	111	;'o'
  2229  00FDF5  6D                 	db	109	;'m'
  2230  00FDF6  70                 	db	112	;'p'
  2231  00FDF7  69                 	db	105	;'i'
  2232  00FDF8  6C                 	db	108	;'l'
  2233  00FDF9  65                 	db	101	;'e'
  2234  00FDFA  20                 	db	32
  2235  00FDFB  54                 	db	84	;'T'
  2236  00FDFC  69                 	db	105	;'i'
  2237  00FDFD  6D                 	db	109	;'m'
  2238  00FDFE  65                 	db	101	;'e'
  2239  00FDFF  0D                 	db	13
  2240  00FE00  0A                 	db	10
  2241  00FE01  0A                 	db	10
  2242  00FE02  00                 	db	0
  2243  00FE03                     STR_18:
  2244                           
  2245                           ; BSR set to: 0
  2246  00FE03  52                 	db	82	;'R'
  2247  00FE04  65                 	db	101	;'e'
  2248  00FE05  71                 	db	113	;'q'
  2249  00FE06  75                 	db	117	;'u'
  2250  00FE07  65                 	db	101	;'e'
  2251  00FE08  73                 	db	115	;'s'
  2252  00FE09  74                 	db	116	;'t'
  2253  00FE0A  65                 	db	101	;'e'
  2254  00FE0B  64                 	db	100	;'d'
  2255  00FE0C  20                 	db	32
  2256  00FE0D  43                 	db	67	;'C'
  2257  00FE0E  6F                 	db	111	;'o'
  2258  00FE0F  6D                 	db	109	;'m'
  2259  00FE10  70                 	db	112	;'p'
  2260  00FE11  69                 	db	105	;'i'
  2261  00FE12  6C                 	db	108	;'l'
  2262  00FE13  65                 	db	101	;'e'
  2263  00FE14  20                 	db	32
  2264  00FE15  44                 	db	68	;'D'
  2265  00FE16  61                 	db	97	;'a'
  2266  00FE17  74                 	db	116	;'t'
  2267  00FE18  65                 	db	101	;'e'
  2268  00FE19  0D                 	db	13
  2269  00FE1A  0A                 	db	10
  2270  00FE1B  0A                 	db	10
  2271  00FE1C  00                 	db	0
  2272  00FE1D                     STR_23:
  2273                           
  2274                           ; BSR set to: 0
  2275  00FE1D  20                 	db	32
  2276  00FE1E  20                 	db	32
  2277  00FE1F  20                 	db	32
  2278  00FE20  42                 	db	66	;'B'
  2279  00FE21  79                 	db	121	;'y'
  2280  00FE22  74                 	db	116	;'t'
  2281  00FE23  65                 	db	101	;'e'
  2282  00FE24  20                 	db	32
  2283  00FE25  25                 	db	37
  2284  00FE26  30                 	db	48	;'0'
  2285  00FE27  32                 	db	50	;'2'
  2286  00FE28  69                 	db	105	;'i'
  2287  00FE29  20                 	db	32
  2288  00FE2A  3A                 	db	58	;':'
  2289  00FE2B  20                 	db	32
  2290  00FE2C  30                 	db	48	;'0'
  2291  00FE2D  78                 	db	120	;'x'
  2292  00FE2E  25                 	db	37
  2293  00FE2F  30                 	db	48	;'0'
  2294  00FE30  32                 	db	50	;'2'
  2295  00FE31  78                 	db	120	;'x'
  2296  00FE32  20                 	db	32
  2297  00FE33  0D                 	db	13
  2298  00FE34  0A                 	db	10
  2299  00FE35  00                 	db	0
  2300  00FE36                     STR_17:
  2301                           
  2302                           ; BSR set to: 0
  2303  00FE36  52                 	db	82	;'R'
  2304  00FE37  65                 	db	101	;'e'
  2305  00FE38  71                 	db	113	;'q'
  2306  00FE39  75                 	db	117	;'u'
  2307  00FE3A  65                 	db	101	;'e'
  2308  00FE3B  73                 	db	115	;'s'
  2309  00FE3C  74                 	db	116	;'t'
  2310  00FE3D  65                 	db	101	;'e'
  2311  00FE3E  64                 	db	100	;'d'
  2312  00FE3F  20                 	db	32
  2313  00FE40  53                 	db	83	;'S'
  2314  00FE41  65                 	db	101	;'e'
  2315  00FE42  72                 	db	114	;'r'
  2316  00FE43  69                 	db	105	;'i'
  2317  00FE44  61                 	db	97	;'a'
  2318  00FE45  6C                 	db	108	;'l'
  2319  00FE46  20                 	db	32
  2320  00FE47  4E                 	db	78	;'N'
  2321  00FE48  6F                 	db	111	;'o'
  2322  00FE49  2E                 	db	46
  2323  00FE4A  0D                 	db	13
  2324  00FE4B  0A                 	db	10
  2325  00FE4C  0A                 	db	10
  2326  00FE4D  00                 	db	0
  2327  00FE4E                     STR_25:
  2328                           
  2329                           ; BSR set to: 0
  2330  00FE4E  53                 	db	83	;'S'
  2331  00FE4F  6F                 	db	111	;'o'
  2332  00FE50  6D                 	db	109	;'m'
  2333  00FE51  65                 	db	101	;'e'
  2334  00FE52  74                 	db	116	;'t'
  2335  00FE53  68                 	db	104	;'h'
  2336  00FE54  69                 	db	105	;'i'
  2337  00FE55  6E                 	db	110	;'n'
  2338  00FE56  67                 	db	103	;'g'
  2339  00FE57  20                 	db	32
  2340  00FE58  69                 	db	105	;'i'
  2341  00FE59  6E                 	db	110	;'n'
  2342  00FE5A  20                 	db	32
  2343  00FE5B  45                 	db	69	;'E'
  2344  00FE5C  53                 	db	83	;'S'
  2345  00FE5D  55                 	db	85	;'U'
  2346  00FE5E  41                 	db	65	;'A'
  2347  00FE5F  52                 	db	82	;'R'
  2348  00FE60  54                 	db	84	;'T'
  2349  00FE61  31                 	db	49	;'1'
  2350  00FE62  20                 	db	32
  2351  00FE63  0D                 	db	13
  2352  00FE64  0A                 	db	10
  2353  00FE65  00                 	db	0
  2354  00FE66                     STR_11:
  2355                           
  2356                           ; BSR set to: 0
  2357  00FE66  20                 	db	32
  2358  00FE67  20                 	db	32
  2359  00FE68  20                 	db	32
  2360  00FE69  42                 	db	66	;'B'
  2361  00FE6A  79                 	db	121	;'y'
  2362  00FE6B  74                 	db	116	;'t'
  2363  00FE6C  65                 	db	101	;'e'
  2364  00FE6D  20                 	db	32
  2365  00FE6E  25                 	db	37
  2366  00FE6F  69                 	db	105	;'i'
  2367  00FE70  20                 	db	32
  2368  00FE71  3A                 	db	58	;':'
  2369  00FE72  20                 	db	32
  2370  00FE73  30                 	db	48	;'0'
  2371  00FE74  78                 	db	120	;'x'
  2372  00FE75  25                 	db	37
  2373  00FE76  30                 	db	48	;'0'
  2374  00FE77  32                 	db	50	;'2'
  2375  00FE78  78                 	db	120	;'x'
  2376  00FE79  20                 	db	32
  2377  00FE7A  0D                 	db	13
  2378  00FE7B  0A                 	db	10
  2379  00FE7C  00                 	db	0
  2380  00FE7D                     STR_42:
  2381                           
  2382                           ; BSR set to: 0
  2383  00FE7D  43                 	db	67	;'C'
  2384  00FE7E  61                 	db	97	;'a'
  2385  00FE7F  72                 	db	114	;'r'
  2386  00FE80  64                 	db	100	;'d'
  2387  00FE81  20                 	db	32
  2388  00FE82  41                 	db	65	;'A'
  2389  00FE83  64                 	db	100	;'d'
  2390  00FE84  64                 	db	100	;'d'
  2391  00FE85  72                 	db	114	;'r'
  2392  00FE86  65                 	db	101	;'e'
  2393  00FE87  73                 	db	115	;'s'
  2394  00FE88  73                 	db	115	;'s'
  2395  00FE89  2E                 	db	46
  2396  00FE8A  20                 	db	32
  2397  00FE8B  30                 	db	48	;'0'
  2398  00FE8C  78                 	db	120	;'x'
  2399  00FE8D  30                 	db	48	;'0'
  2400  00FE8E  35                 	db	53	;'5'
  2401  00FE8F  20                 	db	32
  2402  00FE90  0D                 	db	13
  2403  00FE91  0A                 	db	10
  2404  00FE92  00                 	db	0
  2405  00FE93                     STR_58:
  2406                           
  2407                           ; BSR set to: 0
  2408  00FE93  43                 	db	67	;'C'
  2409  00FE94  6F                 	db	111	;'o'
  2410  00FE95  6D                 	db	109	;'m'
  2411  00FE96  6D                 	db	109	;'m'
  2412  00FE97  61                 	db	97	;'a'
  2413  00FE98  6E                 	db	110	;'n'
  2414  00FE99  64                 	db	100	;'d'
  2415  00FE9A  73                 	db	115	;'s'
  2416  00FE9B  20                 	db	32
  2417  00FE9C  53                 	db	83	;'S'
  2418  00FE9D  75                 	db	117	;'u'
  2419  00FE9E  70                 	db	112	;'p'
  2420  00FE9F  70                 	db	112	;'p'
  2421  00FEA0  6F                 	db	111	;'o'
  2422  00FEA1  72                 	db	114	;'r'
  2423  00FEA2  74                 	db	116	;'t'
  2424  00FEA3  65                 	db	101	;'e'
  2425  00FEA4  64                 	db	100	;'d'
  2426  00FEA5  3A                 	db	58	;':'
  2427  00FEA6  0D                 	db	13
  2428  00FEA7  0A                 	db	10
  2429  00FEA8  00                 	db	0
  2430  00FEA9                     STR_15:
  2431                           
  2432                           ; BSR set to: 0
  2433  00FEA9  52                 	db	82	;'R'
  2434  00FEAA  65                 	db	101	;'e'
  2435  00FEAB  71                 	db	113	;'q'
  2436  00FEAC  75                 	db	117	;'u'
  2437  00FEAD  65                 	db	101	;'e'
  2438  00FEAE  73                 	db	115	;'s'
  2439  00FEAF  74                 	db	116	;'t'
  2440  00FEB0  65                 	db	101	;'e'
  2441  00FEB1  64                 	db	100	;'d'
  2442  00FEB2  20                 	db	32
  2443  00FEB3  50                 	db	80	;'P'
  2444  00FEB4  61                 	db	97	;'a'
  2445  00FEB5  72                 	db	114	;'r'
  2446  00FEB6  74                 	db	116	;'t'
  2447  00FEB7  20                 	db	32
  2448  00FEB8  4E                 	db	78	;'N'
  2449  00FEB9  6F                 	db	111	;'o'
  2450  00FEBA  2E                 	db	46
  2451  00FEBB  0D                 	db	13
  2452  00FEBC  0A                 	db	10
  2453  00FEBD  0A                 	db	10
  2454  00FEBE  00                 	db	0
  2455  00FEBF                     STR_16:
  2456                           
  2457                           ; BSR set to: 0
  2458  00FEBF  52                 	db	82	;'R'
  2459  00FEC0  65                 	db	101	;'e'
  2460  00FEC1  71                 	db	113	;'q'
  2461  00FEC2  75                 	db	117	;'u'
  2462  00FEC3  65                 	db	101	;'e'
  2463  00FEC4  73                 	db	115	;'s'
  2464  00FEC5  74                 	db	116	;'t'
  2465  00FEC6  65                 	db	101	;'e'
  2466  00FEC7  64                 	db	100	;'d'
  2467  00FEC8  20                 	db	32
  2468  00FEC9  52                 	db	82	;'R'
  2469  00FECA  65                 	db	101	;'e'
  2470  00FECB  76                 	db	118	;'v'
  2471  00FECC  69                 	db	105	;'i'
  2472  00FECD  73                 	db	115	;'s'
  2473  00FECE  69                 	db	105	;'i'
  2474  00FECF  6F                 	db	111	;'o'
  2475  00FED0  6E                 	db	110	;'n'
  2476  00FED1  0D                 	db	13
  2477  00FED2  0A                 	db	10
  2478  00FED3  0A                 	db	10
  2479  00FED4  00                 	db	0
  2480  00FED5                     STR_41:
  2481                           
  2482                           ; BSR set to: 0
  2483  00FED5  43                 	db	67	;'C'
  2484  00FED6  61                 	db	97	;'a'
  2485  00FED7  72                 	db	114	;'r'
  2486  00FED8  64                 	db	100	;'d'
  2487  00FED9  20                 	db	32
  2488  00FEDA  52                 	db	82	;'R'
  2489  00FEDB  65                 	db	101	;'e'
  2490  00FEDC  76                 	db	118	;'v'
  2491  00FEDD  69                 	db	105	;'i'
  2492  00FEDE  73                 	db	115	;'s'
  2493  00FEDF  69                 	db	105	;'i'
  2494  00FEE0  6F                 	db	111	;'o'
  2495  00FEE1  6E                 	db	110	;'n'
  2496  00FEE2  2E                 	db	46
  2497  00FEE3  20                 	db	32
  2498  00FEE4  25                 	db	37
  2499  00FEE5  73                 	db	115	;'s'
  2500  00FEE6  20                 	db	32
  2501  00FEE7  0D                 	db	13
  2502  00FEE8  0A                 	db	10
  2503  00FEE9  00                 	db	0
  2504  00FEEA                     STR_1:
  2505                           
  2506                           ; BSR set to: 0
  2507  00FEEA  46                 	db	70	;'F'
  2508  00FEEB  75                 	db	117	;'u'
  2509  00FEEC  6E                 	db	110	;'n'
  2510  00FEED  63                 	db	99	;'c'
  2511  00FEEE  74                 	db	116	;'t'
  2512  00FEEF  69                 	db	105	;'i'
  2513  00FEF0  6F                 	db	111	;'o'
  2514  00FEF1  6E                 	db	110	;'n'
  2515  00FEF2  20                 	db	32
  2516  00FEF3  43                 	db	67	;'C'
  2517  00FEF4  6F                 	db	111	;'o'
  2518  00FEF5  64                 	db	100	;'d'
  2519  00FEF6  65                 	db	101	;'e'
  2520  00FEF7  20                 	db	32
  2521  00FEF8  30                 	db	48	;'0'
  2522  00FEF9  78                 	db	120	;'x'
  2523  00FEFA  31                 	db	49	;'1'
  2524  00FEFB  30                 	db	48	;'0'
  2525  00FEFC  0D                 	db	13
  2526  00FEFD  0A                 	db	10
  2527  00FEFE  00                 	db	0
  2528  00FEFF                     STR_40:
  2529                           
  2530                           ; BSR set to: 0
  2531  00FEFF  43                 	db	67	;'C'
  2532  00FF00  61                 	db	97	;'a'
  2533  00FF01  72                 	db	114	;'r'
  2534  00FF02  64                 	db	100	;'d'
  2535  00FF03  20                 	db	32
  2536  00FF04  50                 	db	80	;'P'
  2537  00FF05  61                 	db	97	;'a'
  2538  00FF06  72                 	db	114	;'r'
  2539  00FF07  74                 	db	116	;'t'
  2540  00FF08  20                 	db	32
  2541  00FF09  4E                 	db	78	;'N'
  2542  00FF0A  6F                 	db	111	;'o'
  2543  00FF0B  2E                 	db	46
  2544  00FF0C  20                 	db	32
  2545  00FF0D  25                 	db	37
  2546  00FF0E  73                 	db	115	;'s'
  2547  00FF0F  20                 	db	32
  2548  00FF10  0D                 	db	13
  2549  00FF11  0A                 	db	10
  2550  00FF12  00                 	db	0
  2551  00FF13                     STR_39:
  2552                           
  2553                           ; BSR set to: 0
  2554  00FF13  43                 	db	67	;'C'
  2555  00FF14  61                 	db	97	;'a'
  2556  00FF15  72                 	db	114	;'r'
  2557  00FF16  64                 	db	100	;'d'
  2558  00FF17  20                 	db	32
  2559  00FF18  53                 	db	83	;'S'
  2560  00FF19  65                 	db	101	;'e'
  2561  00FF1A  72                 	db	114	;'r'
  2562  00FF1B  20                 	db	32
  2563  00FF1C  4E                 	db	78	;'N'
  2564  00FF1D  6F                 	db	111	;'o'
  2565  00FF1E  2E                 	db	46
  2566  00FF1F  20                 	db	32
  2567  00FF20  25                 	db	37
  2568  00FF21  73                 	db	115	;'s'
  2569  00FF22  20                 	db	32
  2570  00FF23  0D                 	db	13
  2571  00FF24  0A                 	db	10
  2572  00FF25  00                 	db	0
  2573  00FF26                     STR_4:
  2574                           
  2575                           ; BSR set to: 0
  2576  00FF26  0D                 	db	13
  2577  00FF27  0A                 	db	10
  2578  00FF28  45                 	db	69	;'E'
  2579  00FF29  6E                 	db	110	;'n'
  2580  00FF2A  74                 	db	116	;'t'
  2581  00FF2B  65                 	db	101	;'e'
  2582  00FF2C  72                 	db	114	;'r'
  2583  00FF2D  20                 	db	32
  2584  00FF2E  43                 	db	67	;'C'
  2585  00FF2F  6F                 	db	111	;'o'
  2586  00FF30  6D                 	db	109	;'m'
  2587  00FF31  6D                 	db	109	;'m'
  2588  00FF32  61                 	db	97	;'a'
  2589  00FF33  6E                 	db	110	;'n'
  2590  00FF34  64                 	db	100	;'d'
  2591  00FF35  20                 	db	32
  2592  00FF36  3A                 	db	58	;':'
  2593  00FF37  20                 	db	32
  2594  00FF38  00                 	db	0
  2595  00FF39                     STR_73:
  2596                           
  2597                           ; BSR set to: 0
  2598  00FF39  4E                 	db	78	;'N'
  2599  00FF3A  75                 	db	117	;'u'
  2600  00FF3B  6D                 	db	109	;'m'
  2601  00FF3C  20                 	db	32
  2602  00FF3D  43                 	db	67	;'C'
  2603  00FF3E  68                 	db	104	;'h'
  2604  00FF3F  61                 	db	97	;'a'
  2605  00FF40  72                 	db	114	;'r'
  2606  00FF41  73                 	db	115	;'s'
  2607  00FF42  3A                 	db	58	;':'
  2608  00FF43  20                 	db	32
  2609  00FF44  25                 	db	37
  2610  00FF45  69                 	db	105	;'i'
  2611  00FF46  20                 	db	32
  2612  00FF47  0D                 	db	13
  2613  00FF48  0A                 	db	10
  2614  00FF49  00                 	db	0
  2615  00FF4A                     STR_67:
  2616                           
  2617                           ; BSR set to: 0
  2618  00FF4A  44                 	db	68	;'D'
  2619  00FF4B  65                 	db	101	;'e'
  2620  00FF4C  62                 	db	98	;'b'
  2621  00FF4D  75                 	db	117	;'u'
  2622  00FF4E  67                 	db	103	;'g'
  2623  00FF4F  20                 	db	32
  2624  00FF50  44                 	db	68	;'D'
  2625  00FF51  69                 	db	105	;'i'
  2626  00FF52  73                 	db	115	;'s'
  2627  00FF53  61                 	db	97	;'a'
  2628  00FF54  62                 	db	98	;'b'
  2629  00FF55  6C                 	db	108	;'l'
  2630  00FF56  65                 	db	101	;'e'
  2631  00FF57  64                 	db	100	;'d'
  2632  00FF58  0D                 	db	13
  2633  00FF59  0A                 	db	10
  2634  00FF5A  00                 	db	0
  2635  00FF5B                     STR_66:
  2636                           
  2637                           ; BSR set to: 0
  2638  00FF5B  44                 	db	68	;'D'
  2639  00FF5C  65                 	db	101	;'e'
  2640  00FF5D  62                 	db	98	;'b'
  2641  00FF5E  75                 	db	117	;'u'
  2642  00FF5F  67                 	db	103	;'g'
  2643  00FF60  20                 	db	32
  2644  00FF61  45                 	db	69	;'E'
  2645  00FF62  6E                 	db	110	;'n'
  2646  00FF63  61                 	db	97	;'a'
  2647  00FF64  62                 	db	98	;'b'
  2648  00FF65  6C                 	db	108	;'l'
  2649  00FF66  65                 	db	101	;'e'
  2650  00FF67  64                 	db	100	;'d'
  2651  00FF68  0D                 	db	13
  2652  00FF69  0A                 	db	10
  2653  00FF6A  00                 	db	0
  2654  00FF6B                     STR_6:
  2655                           
  2656                           ; BSR set to: 0
  2657  00FF6B  55                 	db	85	;'U'
  2658  00FF6C  70                 	db	112	;'p'
  2659  00FF6D  64                 	db	100	;'d'
  2660  00FF6E  61                 	db	97	;'a'
  2661  00FF6F  74                 	db	116	;'t'
  2662  00FF70  65                 	db	101	;'e'
  2663  00FF71  64                 	db	100	;'d'
  2664  00FF72  4D                 	db	77	;'M'
  2665  00FF73  42                 	db	66	;'B'
  2666  00FF74  34                 	db	52	;'4'
  2667  00FF75  30                 	db	48	;'0'
  2668  00FF76  30                 	db	48	;'0'
  2669  00FF77  20                 	db	32
  2670  00FF78  0D                 	db	13
  2671  00FF79  0A                 	db	10
  2672  00FF7A  00                 	db	0
  2673  00FF7B                     STR_26:
  2674                           
  2675                           ; BSR set to: 0
  2676  00FF7B  52                 	db	82	;'R'
  2677  00FF7C  65                 	db	101	;'e'
  2678  00FF7D  61                 	db	97	;'a'
  2679  00FF7E  64                 	db	100	;'d'
  2680  00FF7F  3A                 	db	58	;':'
  2681  00FF80  20                 	db	32
  2682  00FF81  30                 	db	48	;'0'
  2683  00FF82  78                 	db	120	;'x'
  2684  00FF83  25                 	db	37
  2685  00FF84  30                 	db	48	;'0'
  2686  00FF85  32                 	db	50	;'2'
  2687  00FF86  78                 	db	120	;'x'
  2688  00FF87  20                 	db	32
  2689  00FF88  0D                 	db	13
  2690  00FF89  0A                 	db	10
  2691  00FF8A  00                 	db	0
  2692  00FF8B                     STR_72:
  2693                           
  2694                           ; BSR set to: 0
  2695  00FF8B  59                 	db	89	;'Y'
  2696  00FF8C  0D                 	db	13
  2697  00FF8D  0A                 	db	10
  2698  00FF8E  53                 	db	83	;'S'
  2699  00FF8F  61                 	db	97	;'a'
  2700  00FF90  76                 	db	118	;'v'
  2701  00FF91  69                 	db	105	;'i'
  2702  00FF92  6E                 	db	110	;'n'
  2703  00FF93  67                 	db	103	;'g'
  2704  00FF94  20                 	db	32
  2705  00FF95  25                 	db	37
  2706  00FF96  73                 	db	115	;'s'
  2707  00FF97  0D                 	db	13
  2708  00FF98  0A                 	db	10
  2709  00FF99  00                 	db	0
  2710  00FF9A                     STR_21:
  2711                           
  2712                           ; BSR set to: 0
  2713  00FF9A  41                 	db	65	;'A'
  2714  00FF9B  44                 	db	68	;'D'
  2715  00FF9C  43                 	db	67	;'C'
  2716  00FF9D  3A                 	db	58	;':'
  2717  00FF9E  20                 	db	32
  2718  00FF9F  30                 	db	48	;'0'
  2719  00FFA0  78                 	db	120	;'x'
  2720  00FFA1  25                 	db	37
  2721  00FFA2  30                 	db	48	;'0'
  2722  00FFA3  34                 	db	52	;'4'
  2723  00FFA4  78                 	db	120	;'x'
  2724  00FFA5  20                 	db	32
  2725  00FFA6  0D                 	db	13
  2726  00FFA7  0A                 	db	10
  2727  00FFA8  00                 	db	0
  2728  00FFA9                     STR_74:
  2729                           
  2730                           ; BSR set to: 0
  2731  00FFA9  25                 	db	37
  2732  00FFAA  73                 	db	115	;'s'
  2733  00FFAB  20                 	db	32
  2734  00FFAC  53                 	db	83	;'S'
  2735  00FFAD  61                 	db	97	;'a'
  2736  00FFAE  76                 	db	118	;'v'
  2737  00FFAF  65                 	db	101	;'e'
  2738  00FFB0  64                 	db	100	;'d'
  2739  00FFB1  2E                 	db	46
  2740  00FFB2  20                 	db	32
  2741  00FFB3  0D                 	db	13
  2742  00FFB4  0A                 	db	10
  2743  00FFB5  00                 	db	0
  2744  00FFB6                     STR_76:
  2745                           
  2746                           ; BSR set to: 0
  2747  00FFB6  4E                 	db	78	;'N'
  2748  00FFB7  6F                 	db	111	;'o'
  2749  00FFB8  74                 	db	116	;'t'
  2750  00FFB9  20                 	db	32
  2751  00FFBA  73                 	db	115	;'s'
  2752  00FFBB  61                 	db	97	;'a'
  2753  00FFBC  76                 	db	118	;'v'
  2754  00FFBD  65                 	db	101	;'e'
  2755  00FFBE  64                 	db	100	;'d'
  2756  00FFBF  0D                 	db	13
  2757  00FFC0  0A                 	db	10
  2758  00FFC1  00                 	db	0
  2759  00FFC2                     STR_44:
  2760                           
  2761                           ; BSR set to: 0
  2762  00FFC2  4D                 	db	77	;'M'
  2763  00FFC3  61                 	db	97	;'a'
  2764  00FFC4  72                 	db	114	;'r'
  2765  00FFC5  20                 	db	32
  2766  00FFC6  32                 	db	50	;'2'
  2767  00FFC7  35                 	db	53	;'5'
  2768  00FFC8  20                 	db	32
  2769  00FFC9  32                 	db	50	;'2'
  2770  00FFCA  30                 	db	48	;'0'
  2771  00FFCB  32                 	db	50	;'2'
  2772  00FFCC  31                 	db	49	;'1'
  2773  00FFCD  00                 	db	0
  2774  00FFCE                     STR_45:
  2775                           
  2776                           ; BSR set to: 0
  2777  00FFCE  30                 	db	48	;'0'
  2778  00FFCF  30                 	db	48	;'0'
  2779  00FFD0  3A                 	db	58	;':'
  2780  00FFD1  32                 	db	50	;'2'
  2781  00FFD2  34                 	db	52	;'4'
  2782  00FFD3  3A                 	db	58	;':'
  2783  00FFD4  30                 	db	48	;'0'
  2784  00FFD5  30                 	db	48	;'0'
  2785  00FFD6  00                 	db	0
  2786  00FFD7                     STR_29:
  2787                           
  2788                           ; BSR set to: 0
  2789  00FFD7  53                 	db	83	;'S'
  2790  00FFD8  65                 	db	101	;'e'
  2791  00FFD9  72                 	db	114	;'r'
  2792  00FFDA  69                 	db	105	;'i'
  2793  00FFDB  61                 	db	97	;'a'
  2794  00FFDC  6C                 	db	108	;'l'
  2795  00FFDD  00                 	db	0
  2796  00FFDE                     STR_81:
  2797                           
  2798                           ; BSR set to: 0
  2799  00FFDE  73                 	db	115	;'s'
  2800  00FFDF  65                 	db	101	;'e'
  2801  00FFE0  72                 	db	114	;'r'
  2802  00FFE1  69                 	db	105	;'i'
  2803  00FFE2  61                 	db	97	;'a'
  2804  00FFE3  6C                 	db	108	;'l'
  2805  00FFE4  00                 	db	0
  2806  00FFE5                     STR_77:
  2807                           
  2808                           ; BSR set to: 0
  2809  00FFE5  64                 	db	100	;'d'
  2810  00FFE6  65                 	db	101	;'e'
  2811  00FFE7  62                 	db	98	;'b'
  2812  00FFE8  75                 	db	117	;'u'
  2813  00FFE9  67                 	db	103	;'g'
  2814  00FFEA  00                 	db	0
  2815  00FFEB                     STR_31:
  2816                           
  2817                           ; BSR set to: 0
  2818  00FFEB  50                 	db	80	;'P'
  2819  00FFEC  61                 	db	97	;'a'
  2820  00FFED  72                 	db	114	;'r'
  2821  00FFEE  74                 	db	116	;'t'
  2822  00FFEF  00                 	db	0
  2823  00FFF0                     STR_83:
  2824                           
  2825                           ; BSR set to: 0
  2826  00FFF0  70                 	db	112	;'p'
  2827  00FFF1  61                 	db	97	;'a'
  2828  00FFF2  72                 	db	114	;'r'
  2829  00FFF3  74                 	db	116	;'t'
  2830  00FFF4  00                 	db	0
  2831  00FFF5                     STR_33:
  2832                           
  2833                           ; BSR set to: 0
  2834  00FFF5  52                 	db	82	;'R'
  2835  00FFF6  65                 	db	101	;'e'
  2836  00FFF7  76                 	db	118	;'v'
  2837  00FFF8  00                 	db	0
  2838  00FFF9                     STR_85:
  2839                           
  2840                           ; BSR set to: 0
  2841  00FFF9  72                 	db	114	;'r'
  2842  00FFFA  65                 	db	101	;'e'
  2843  00FFFB  76                 	db	118	;'v'
  2844  00FFFC  00                 	db	0
  2845  00FFFD                     STR_79:
  2846                           
  2847                           ; BSR set to: 0
  2848  00FFFD  3F                 	db	63	;'?'
  2849  00FFFE  00                 	db	0
  2850  0000                     
  2851                           ; #config settings
  2852  00FFFF  00                 	db	0	; dummy byte at the end
  2853  0000                     
  2854                           	psect	cinit
  2855  002948                     __pcinit:
  2856                           	opt callstack 0
  2857  002948                     start_initialization:
  2858                           	opt callstack 0
  2859  002948                     __initialization:
  2860                           	opt callstack 0
  2861                           
  2862                           ; Initialize objects allocated to BANK4 (64 bytes)
  2863                           ; load TBLPTR registers with __pidataBANK4
  2864  002948  0EB0               	movlw	low __pidataBANK4
  2865  00294A  6EF6               	movwf	tblptrl,c
  2866  00294C  0E3D               	movlw	high __pidataBANK4
  2867  00294E  6EF7               	movwf	tblptrh,c
  2868  002950  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  2869  002952  6EF8               	movwf	tblptru,c
  2870  002954  EE04  F064         	lfsr	0,__pdataBANK4
  2871  002958  EE10 F040          	lfsr	1,64
  2872  00295C                     copy_data0:
  2873  00295C  0009               	tblrd		*+
  2874  00295E  CFF5 FFEE          	movff	tablat,postinc0
  2875  002962  50E5               	movf	postdec1,w,c
  2876  002964  50E1               	movf	fsr1l,w,c
  2877  002966  E1FA               	bnz	copy_data0
  2878                           
  2879                           ; Initialize objects allocated to BANK3 (64 bytes)
  2880                           ; load TBLPTR registers with __pidataBANK3
  2881  002968  0E70               	movlw	low __pidataBANK3
  2882  00296A  6EF6               	movwf	tblptrl,c
  2883  00296C  0E3D               	movlw	high __pidataBANK3
  2884  00296E  6EF7               	movwf	tblptrh,c
  2885  002970  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  2886  002972  6EF8               	movwf	tblptru,c
  2887  002974  EE03  F0B7         	lfsr	0,__pdataBANK3
  2888  002978  EE10 F040          	lfsr	1,64
  2889  00297C                     copy_data1:
  2890  00297C  0009               	tblrd		*+
  2891  00297E  CFF5 FFEE          	movff	tablat,postinc0
  2892  002982  50E5               	movf	postdec1,w,c
  2893  002984  50E1               	movf	fsr1l,w,c
  2894  002986  E1FA               	bnz	copy_data1
  2895                           
  2896                           ; Initialize objects allocated to BANK2 (235 bytes)
  2897                           ; load TBLPTR registers with __pidataBANK2
  2898  002988  0E32               	movlw	low __pidataBANK2
  2899  00298A  6EF6               	movwf	tblptrl,c
  2900  00298C  0E2B               	movlw	high __pidataBANK2
  2901  00298E  6EF7               	movwf	tblptrh,c
  2902  002990  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2903  002992  6EF8               	movwf	tblptru,c
  2904  002994  EE02  F000         	lfsr	0,__pdataBANK2
  2905  002998  EE10 F0EB          	lfsr	1,235
  2906  00299C                     copy_data2:
  2907  00299C  0009               	tblrd		*+
  2908  00299E  CFF5 FFEE          	movff	tablat,postinc0
  2909  0029A2  50E5               	movf	postdec1,w,c
  2910  0029A4  50E1               	movf	fsr1l,w,c
  2911  0029A6  E1FA               	bnz	copy_data2
  2912                           
  2913                           ; Initialize objects allocated to BANK1 (84 bytes)
  2914                           ; load TBLPTR registers with __pidataBANK1
  2915  0029A8  0E3E               	movlw	low __pidataBANK1
  2916  0029AA  6EF6               	movwf	tblptrl,c
  2917  0029AC  0E3A               	movlw	high __pidataBANK1
  2918  0029AE  6EF7               	movwf	tblptrh,c
  2919  0029B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2920  0029B2  6EF8               	movwf	tblptru,c
  2921  0029B4  EE01  F000         	lfsr	0,__pdataBANK1
  2922  0029B8  EE10 F054          	lfsr	1,84
  2923  0029BC                     copy_data3:
  2924  0029BC  0009               	tblrd		*+
  2925  0029BE  CFF5 FFEE          	movff	tablat,postinc0
  2926  0029C2  50E5               	movf	postdec1,w,c
  2927  0029C4  50E1               	movf	fsr1l,w,c
  2928  0029C6  E1FA               	bnz	copy_data3
  2929                           
  2930                           ; Initialize objects allocated to BANK0 (10 bytes)
  2931                           ; load TBLPTR registers with __pidataBANK0
  2932  0029C8  0E3E               	movlw	low __pidataBANK0
  2933  0029CA  6EF6               	movwf	tblptrl,c
  2934  0029CC  0E41               	movlw	high __pidataBANK0
  2935  0029CE  6EF7               	movwf	tblptrh,c
  2936  0029D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2937  0029D2  6EF8               	movwf	tblptru,c
  2938  0029D4  EE00  F0F4         	lfsr	0,__pdataBANK0
  2939  0029D8  EE10 F00A          	lfsr	1,10
  2940  0029DC                     copy_data4:
  2941  0029DC  0009               	tblrd		*+
  2942  0029DE  CFF5 FFEE          	movff	tablat,postinc0
  2943  0029E2  50E5               	movf	postdec1,w,c
  2944  0029E4  50E1               	movf	fsr1l,w,c
  2945  0029E6  E1FA               	bnz	copy_data4
  2946                           
  2947                           ; Clear objects allocated to BANK5 (100 bytes)
  2948  0029E8  EE05  F000         	lfsr	0,__pbssBANK5
  2949  0029EC  0E64               	movlw	100
  2950  0029EE                     clear_0:
  2951  0029EE  6AEE               	clrf	postinc0,c
  2952  0029F0  06E8               	decf	wreg,f,c
  2953  0029F2  E1FD               	bnz	clear_0
  2954                           
  2955                           ; Clear objects allocated to BANK4 (100 bytes)
  2956  0029F4  EE04  F000         	lfsr	0,__pbssBANK4
  2957  0029F8  0E64               	movlw	100
  2958  0029FA                     clear_1:
  2959  0029FA  6AEE               	clrf	postinc0,c
  2960  0029FC  06E8               	decf	wreg,f,c
  2961  0029FE  E1FD               	bnz	clear_1
  2962                           
  2963                           ; Clear objects allocated to BANK3 (183 bytes)
  2964  002A00  EE03  F000         	lfsr	0,__pbssBANK3
  2965  002A04  0EB7               	movlw	183
  2966  002A06                     clear_2:
  2967  002A06  6AEE               	clrf	postinc0,c
  2968  002A08  06E8               	decf	wreg,f,c
  2969  002A0A  E1FD               	bnz	clear_2
  2970                           
  2971                           ; Clear objects allocated to BANK2 (11 bytes)
  2972  002A0C  EE02  F0EB         	lfsr	0,__pbssBANK2
  2973  002A10  0E0B               	movlw	11
  2974  002A12                     clear_3:
  2975  002A12  6AEE               	clrf	postinc0,c
  2976  002A14  06E8               	decf	wreg,f,c
  2977  002A16  E1FD               	bnz	clear_3
  2978                           
  2979                           ; Clear objects allocated to BANK1 (80 bytes)
  2980  002A18  EE01  F054         	lfsr	0,__pbssBANK1
  2981  002A1C  0E50               	movlw	80
  2982  002A1E                     clear_4:
  2983  002A1E  6AEE               	clrf	postinc0,c
  2984  002A20  06E8               	decf	wreg,f,c
  2985  002A22  E1FD               	bnz	clear_4
  2986                           
  2987                           ; Clear objects allocated to BANK0 (45 bytes)
  2988  002A24  EE00  F0C7         	lfsr	0,__pbssBANK0
  2989  002A28  0E2D               	movlw	45
  2990  002A2A                     clear_5:
  2991  002A2A  6AEE               	clrf	postinc0,c
  2992  002A2C  06E8               	decf	wreg,f,c
  2993  002A2E  E1FD               	bnz	clear_5
  2994                           
  2995                           ; Clear objects allocated to COMRAM (4 bytes)
  2996  002A30  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2997  002A32  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2998  002A34  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2999  002A36  6A57               	clrf	__pbssCOMRAM& (0+255),c
  3000  002A38                     end_of_initialization:
  3001                           	opt callstack 0
  3002  002A38                     __end_of__initialization:
  3003                           	opt callstack 0
  3004  002A38  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3005  002A3A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3006  002A3C  0100               	movlb	0
  3007  002A3E  EF14  F014         	goto	_main	;jump to C main() function
  3008                           
  3009                           	psect	bssCOMRAM
  3010  000057                     __pbssCOMRAM:
  3011                           	opt callstack 0
  3012  000057                     _flags:
  3013                           	opt callstack 0
  3014  000057                     	ds	2
  3015  000059                     _eusart1RxHead:
  3016                           	opt callstack 0
  3017  000059                     	ds	1
  3018  00005A                     _eusart2RxHead:
  3019                           	opt callstack 0
  3020  00005A                     	ds	1
  3021                           
  3022                           	psect	bssBANK0
  3023  0000C7                     __pbssBANK0:
  3024                           	opt callstack 0
  3025  0000C7                     _nout:
  3026                           	opt callstack 0
  3027  0000C7                     	ds	2
  3028  0000C9                     _width:
  3029                           	opt callstack 0
  3030  0000C9                     	ds	2
  3031  0000CB                     _prec:
  3032                           	opt callstack 0
  3033  0000CB                     	ds	2
  3034  0000CD                     	ds	2
  3035  0000CF                     _ByteHi:
  3036                           	opt callstack 0
  3037  0000CF                     	ds	2
  3038  0000D1                     _MBResCnt:
  3039                           	opt callstack 0
  3040  0000D1                     	ds	2
  3041  0000D3                     _ByteNum:
  3042                           	opt callstack 0
  3043  0000D3                     	ds	2
  3044  0000D5                     _ModDataCnt:
  3045                           	opt callstack 0
  3046  0000D5                     	ds	2
  3047  0000D7                     _rxStatus:
  3048                           	opt callstack 0
  3049  0000D7                     	ds	1
  3050  0000D8                     _RXStat:
  3051                           	opt callstack 0
  3052  0000D8                     	ds	1
  3053  0000D9                     _Debug:
  3054                           	opt callstack 0
  3055  0000D9                     	ds	1
  3056  0000DA                     _eusart1RxLastError:
  3057                           	opt callstack 0
  3058  0000DA                     	ds	1
  3059  0000DB                     _eusart1RxCount:
  3060                           	opt callstack 0
  3061  0000DB                     	ds	1
  3062  0000DC                     _eusart1RxTail:
  3063                           	opt callstack 0
  3064  0000DC                     	ds	1
  3065  0000DD                     _eusart1TxTail:
  3066                           	opt callstack 0
  3067  0000DD                     	ds	1
  3068  0000DE                     _eusart1TxHead:
  3069                           	opt callstack 0
  3070  0000DE                     	ds	1
  3071  0000DF                     _eusart2RxLastError:
  3072                           	opt callstack 0
  3073  0000DF                     	ds	1
  3074  0000E0                     _eusart2RxCount:
  3075                           	opt callstack 0
  3076  0000E0                     	ds	1
  3077  0000E1                     _eusart2RxTail:
  3078                           	opt callstack 0
  3079  0000E1                     	ds	1
  3080  0000E2                     _eusart2TxTail:
  3081                           	opt callstack 0
  3082  0000E2                     	ds	1
  3083  0000E3                     _eusart2TxHead:
  3084                           	opt callstack 0
  3085  0000E3                     	ds	1
  3086  0000E4                     _Command:
  3087                           	opt callstack 0
  3088  0000E4                     	ds	16
  3089                           
  3090                           	psect	dataBANK0
  3091  0000F4                     __pdataBANK0:
  3092                           	opt callstack 0
  3093  0000F4                     ReadRX232@F10772:
  3094                           	opt callstack 0
  3095  0000F4                     	ds	2
  3096  0000F6                     _ByteLo:
  3097                           	opt callstack 0
  3098  0000F6                     	ds	2
  3099  0000F8                     _MBResCRC:
  3100                           	opt callstack 0
  3101  0000F8                     	ds	2
  3102  0000FA                     _ExpectedBytes:
  3103                           	opt callstack 0
  3104  0000FA                     	ds	2
  3105  0000FC                     _MB302xx:
  3106                           	opt callstack 0
  3107  0000FC                     	ds	2
  3108                           
  3109                           	psect	bssBANK1
  3110  000154                     __pbssBANK1:
  3111                           	opt callstack 0
  3112  000154                     _eusart2RxStatusBuffer:
  3113                           	opt callstack 0
  3114  000154                     	ds	32
  3115  000174                     _eusart1TxBuffer:
  3116                           	opt callstack 0
  3117  000174                     	ds	16
  3118  000184                     _dbuf:
  3119                           	opt callstack 0
  3120  000184                     	ds	32
  3121                           
  3122                           	psect	dataBANK1
  3123  000100                     __pdataBANK1:
  3124                           	opt callstack 0
  3125  000100                     _MB305xx:
  3126                           	opt callstack 0
  3127  000100                     	ds	16
  3128  000110                     _MB301xx:
  3129                           	opt callstack 0
  3130  000110                     	ds	14
  3131  00011E                     _MB304xx:
  3132                           	opt callstack 0
  3133  00011E                     	ds	12
  3134  00012A                     InitialiseString@F10763:
  3135                           	opt callstack 0
  3136  00012A                     	ds	11
  3137  000135                     _MB303xx:
  3138                           	opt callstack 0
  3139  000135                     	ds	10
  3140  00013F                     InitialiseString@F10766:
  3141                           	opt callstack 0
  3142  00013F                     	ds	8
  3143  000147                     stoa@F1139:
  3144                           	opt callstack 0
  3145  000147                     	ds	7
  3146  00014E                     _MB306xx:
  3147                           	opt callstack 0
  3148  00014E                     	ds	6
  3149                           
  3150                           	psect	bssBANK2
  3151  0002EB                     __pbssBANK2:
  3152                           	opt callstack 0
  3153  0002EB                     	ds	11
  3154                           
  3155                           	psect	dataBANK2
  3156  000200                     __pdataBANK2:
  3157                           	opt callstack 0
  3158  000200                     _ModbusData:
  3159                           	opt callstack 0
  3160  000200                     	ds	100
  3161  000264                     ValidateCmd@F10796:
  3162                           	opt callstack 0
  3163  000264                     	ds	20
  3164  000278                     ValidateCmd@F10793:
  3165                           	opt callstack 0
  3166  000278                     	ds	20
  3167  00028C                     ValidateCmd@F10790:
  3168                           	opt callstack 0
  3169  00028C                     	ds	20
  3170  0002A0                     _MBRespon:
  3171                           	opt callstack 0
  3172  0002A0                     	ds	75
  3173                           
  3174                           	psect	bssBANK3
  3175  000300                     __pbssBANK3:
  3176                           	opt callstack 0
  3177  000300                     _eusart1RxStatusBuffer:
  3178                           	opt callstack 0
  3179  000300                     	ds	100
  3180  000364                     _eusart2RxBuffer:
  3181                           	opt callstack 0
  3182  000364                     	ds	32
  3183  000384                     _eusart2TxBuffer:
  3184                           	opt callstack 0
  3185  000384                     	ds	32
  3186  0003A4                     	ds	19
  3187                           
  3188                           	psect	dataBANK3
  3189  0003B7                     __pdataBANK3:
  3190                           	opt callstack 0
  3191  0003B7                     _MB300xx:
  3192                           	opt callstack 0
  3193  0003B7                     	ds	64
  3194                           
  3195                           	psect	bssBANK4
  3196  000400                     __pbssBANK4:
  3197                           	opt callstack 0
  3198  000400                     _eusart1RxBuffer:
  3199                           	opt callstack 0
  3200  000400                     	ds	100
  3201                           
  3202                           	psect	dataBANK4
  3203  000464                     __pdataBANK4:
  3204                           	opt callstack 0
  3205  000464                     _MB400xx:
  3206                           	opt callstack 0
  3207  000464                     	ds	64
  3208                           
  3209                           	psect	bssBANK5
  3210  000500                     __pbssBANK5:
  3211                           	opt callstack 0
  3212  000500                     _rxData:
  3213                           	opt callstack 0
  3214  000500                     	ds	100
  3215                           
  3216                           	psect	cstackBANK1
  3217  0001A4                     __pcstackBANK1:
  3218                           	opt callstack 0
  3219  0001A4                     ValidateCmd@ConfName:
  3220                           	opt callstack 0
  3221                           
  3222                           ; 20 bytes @ 0x0
  3223  0001A4                     	ds	20
  3224  0001B8                     ValidateCmd@ConfName_1509:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 20 bytes @ 0x14
  3228  0001B8                     	ds	20
  3229  0001CC                     ValidateCmd@ConfName_1513:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 20 bytes @ 0x28
  3233  0001CC                     	ds	28
  3234  0001E8                     ??_main:
  3235                           
  3236                           ; 1 bytes @ 0x44
  3237  0001E8                     	ds	2
  3238                           
  3239                           	psect	cstackBANK0
  3240  000060                     __pcstackBANK0:
  3241                           	opt callstack 0
  3242  000060                     vfpfcnvrt@ll:
  3243                           	opt callstack 0
  3244                           
  3245                           ; 8 bytes @ 0x0
  3246  000060                     	ds	8
  3247  000068                     vfpfcnvrt@cp:
  3248                           	opt callstack 0
  3249                           
  3250                           ; 2 bytes @ 0x8
  3251  000068                     	ds	2
  3252  00006A                     vfpfcnvrt@c:
  3253                           	opt callstack 0
  3254                           
  3255                           ; 1 bytes @ 0xA
  3256  00006A                     	ds	1
  3257  00006B                     vfpfcnvrt@done:
  3258                           	opt callstack 0
  3259                           
  3260                           ; 2 bytes @ 0xB
  3261  00006B                     	ds	2
  3262  00006D                     _vfpfcnvrt$1883:
  3263                           	opt callstack 0
  3264                           
  3265                           ; 2 bytes @ 0xD
  3266  00006D                     	ds	2
  3267  00006F                     vfpfcnvrt@llu:
  3268                           	opt callstack 0
  3269                           
  3270                           ; 8 bytes @ 0xF
  3271  00006F                     	ds	8
  3272  000077                     ?_vfprintf:
  3273                           	opt callstack 0
  3274  000077                     vfprintf@fp:
  3275                           	opt callstack 0
  3276                           
  3277                           ; 2 bytes @ 0x17
  3278  000077                     	ds	2
  3279  000079                     vfprintf@fmt:
  3280                           	opt callstack 0
  3281                           
  3282                           ; 2 bytes @ 0x19
  3283  000079                     	ds	2
  3284  00007B                     vfprintf@ap:
  3285                           	opt callstack 0
  3286                           
  3287                           ; 2 bytes @ 0x1B
  3288  00007B                     	ds	2
  3289  00007D                     ?_printf:
  3290                           	opt callstack 0
  3291  00007D                     printf@fmt:
  3292                           	opt callstack 0
  3293                           
  3294                           ; 2 bytes @ 0x1D
  3295  00007D                     	ds	10
  3296  000087                     printf@ap:
  3297                           	opt callstack 0
  3298                           
  3299                           ; 2 bytes @ 0x27
  3300  000087                     	ds	2
  3301  000089                     ??_ModbusFC03:
  3302  000089                     ??_checkCRC:
  3303  000089                     ?_ReadRX232:
  3304                           	opt callstack 0
  3305  000089                     AddRxBuffToModBus@i:
  3306                           	opt callstack 0
  3307  000089                     PrintModbus@i:
  3308                           	opt callstack 0
  3309  000089                     PrintModRespon@i:
  3310                           	opt callstack 0
  3311  000089                     ReadRX232@NumChars:
  3312                           	opt callstack 0
  3313  000089                     ClearEEAddRange@StartAdd:
  3314                           	opt callstack 0
  3315  000089                     InitialiseString@PartNum:
  3316                           	opt callstack 0
  3317                           
  3318                           ; 19 bytes @ 0x29
  3319  000089                     	ds	2
  3320  00008B                     ??_ModbusFC10:
  3321  00008B                     ModbusError@ErrorCode:
  3322                           	opt callstack 0
  3323  00008B                     ClearEEAddRange@NumBytes:
  3324                           	opt callstack 0
  3325                           
  3326                           ; 2 bytes @ 0x2B
  3327  00008B                     	ds	2
  3328  00008D                     ModbusFC03@convertedValue:
  3329                           	opt callstack 0
  3330  00008D                     SaveCardDat@Name:
  3331                           	opt callstack 0
  3332                           
  3333                           ; 2 bytes @ 0x2D
  3334  00008D                     	ds	1
  3335  00008E                     checkCRC@crcHigh:
  3336                           	opt callstack 0
  3337                           
  3338                           ; 2 bytes @ 0x2E
  3339  00008E                     	ds	1
  3340  00008F                     ModbusFC03@i:
  3341                           	opt callstack 0
  3342  00008F                     ModbusFC10@TempData:
  3343                           	opt callstack 0
  3344  00008F                     SaveCardDat@MBAddress:
  3345                           	opt callstack 0
  3346                           
  3347                           ; 2 bytes @ 0x2F
  3348  00008F                     	ds	1
  3349  000090                     checkCRC@crcLow:
  3350                           	opt callstack 0
  3351                           
  3352                           ; 2 bytes @ 0x30
  3353  000090                     	ds	1
  3354  000091                     ModbusFC10@i:
  3355                           	opt callstack 0
  3356  000091                     SaveCardDat@dataeeAddr:
  3357                           	opt callstack 0
  3358                           
  3359                           ; 2 bytes @ 0x31
  3360  000091                     	ds	1
  3361  000092                     checkCRC@j:
  3362                           	opt callstack 0
  3363                           
  3364                           ; 2 bytes @ 0x32
  3365  000092                     	ds	1
  3366  000093                     ModbusFC10@j:
  3367                           	opt callstack 0
  3368  000093                     SaveCardDat@NumBytes:
  3369                           	opt callstack 0
  3370                           
  3371                           ; 2 bytes @ 0x33
  3372  000093                     	ds	1
  3373  000094                     checkCRC@crc:
  3374                           	opt callstack 0
  3375                           
  3376                           ; 2 bytes @ 0x34
  3377  000094                     	ds	1
  3378  000095                     ??_SaveCardDat:
  3379                           
  3380                           ; 1 bytes @ 0x35
  3381  000095                     	ds	1
  3382  000096                     checkCRC@i:
  3383                           	opt callstack 0
  3384                           
  3385                           ; 2 bytes @ 0x36
  3386  000096                     	ds	1
  3387  000097                     _SaveCardDat$2817:
  3388                           	opt callstack 0
  3389                           
  3390                           ; 2 bytes @ 0x37
  3391  000097                     	ds	2
  3392  000099                     SaveCardDat@dataeeAddrWrk:
  3393                           	opt callstack 0
  3394                           
  3395                           ; 2 bytes @ 0x39
  3396  000099                     	ds	2
  3397  00009B                     SaveCardDat@i:
  3398                           	opt callstack 0
  3399                           
  3400                           ; 2 bytes @ 0x3B
  3401  00009B                     	ds	1
  3402  00009C                     InitialiseString@Date:
  3403                           	opt callstack 0
  3404                           
  3405                           ; 11 bytes @ 0x3C
  3406  00009C                     	ds	1
  3407  00009D                     SaveCardDat@Conf:
  3408                           	opt callstack 0
  3409                           
  3410                           ; 1 bytes @ 0x3D
  3411  00009D                     	ds	10
  3412  0000A7                     InitialiseString@Time:
  3413                           	opt callstack 0
  3414                           
  3415                           ; 8 bytes @ 0x47
  3416  0000A7                     	ds	8
  3417  0000AF                     InitialiseString@SerialNum:
  3418                           	opt callstack 0
  3419                           
  3420                           ; 11 bytes @ 0x4F
  3421  0000AF                     	ds	11
  3422  0000BA                     InitialiseString@Partial:
  3423                           	opt callstack 0
  3424                           
  3425                           ; 1 bytes @ 0x5A
  3426  0000BA                     	ds	1
  3427  0000BB                     InitialiseString@convertedValue:
  3428                           	opt callstack 0
  3429                           
  3430                           ; 2 bytes @ 0x5B
  3431  0000BB                     	ds	2
  3432  0000BD                     InitialiseString@RevNum:
  3433                           	opt callstack 0
  3434                           
  3435                           ; 2 bytes @ 0x5D
  3436  0000BD                     	ds	2
  3437  0000BF                     InitialiseString@readDataOdd:
  3438                           	opt callstack 0
  3439                           
  3440                           ; 1 bytes @ 0x5F
  3441  0000BF                     	ds	1
  3442  0000C0                     InitialiseString@readDataEven:
  3443                           	opt callstack 0
  3444                           
  3445                           ; 1 bytes @ 0x60
  3446  0000C0                     	ds	1
  3447  0000C1                     InitialiseString@j:
  3448                           	opt callstack 0
  3449                           
  3450                           ; 2 bytes @ 0x61
  3451  0000C1                     	ds	2
  3452  0000C3                     InitialiseString@i:
  3453                           	opt callstack 0
  3454                           
  3455                           ; 2 bytes @ 0x63
  3456  0000C3                     	ds	2
  3457  0000C5                     InitialiseString@i_1443:
  3458                           	opt callstack 0
  3459                           
  3460                           ; 2 bytes @ 0x65
  3461  0000C5                     	ds	2
  3462                           
  3463                           	psect	cstackCOMRAM
  3464  000001                     __pcstackCOMRAM:
  3465                           	opt callstack 0
  3466  000001                     ??_INTERRUPT_InterruptManager:
  3467  000001                     
  3468                           ; 1 bytes @ 0x0
  3469  000001                     	ds	4
  3470  000005                     ??_ClearRxBuff:
  3471  000005                     ?_ADCC_GetSingleConversion:
  3472                           	opt callstack 0
  3473  000005                     ?_generateCRC:
  3474                           	opt callstack 0
  3475  000005                     ?_strcmp:
  3476                           	opt callstack 0
  3477  000005                     ?_strlen:
  3478                           	opt callstack 0
  3479  000005                     ?_isupper:
  3480                           	opt callstack 0
  3481  000005                     ?_isalpha:
  3482                           	opt callstack 0
  3483  000005                     ?_isdigit:
  3484                           	opt callstack 0
  3485  000005                     ?_isspace:
  3486                           	opt callstack 0
  3487  000005                     ?_islower:
  3488                           	opt callstack 0
  3489  000005                     ?___wmul:
  3490                           	opt callstack 0
  3491  000005                     ?___aodiv:
  3492                           	opt callstack 0
  3493  000005                     ?___aomod:
  3494                           	opt callstack 0
  3495  000005                     ?___lodiv:
  3496                           	opt callstack 0
  3497  000005                     ?___lomod:
  3498                           	opt callstack 0
  3499  000005                     EUSART2_Read@readValue:
  3500                           	opt callstack 0
  3501  000005                     EUSART2_Write@txData:
  3502                           	opt callstack 0
  3503  000005                     EUSART1_Read@readValue:
  3504                           	opt callstack 0
  3505  000005                     EUSART1_Write@txData:
  3506                           	opt callstack 0
  3507  000005                     DATAEE_WriteByte@bAdd:
  3508                           	opt callstack 0
  3509  000005                     DATAEE_ReadByte@bAdd:
  3510                           	opt callstack 0
  3511  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  3512                           	opt callstack 0
  3513  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  3514                           	opt callstack 0
  3515  000005                     EUSART2_SetErrorHandler@interruptHandler:
  3516                           	opt callstack 0
  3517  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3518                           	opt callstack 0
  3519  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3520                           	opt callstack 0
  3521  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  3522                           	opt callstack 0
  3523  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  3524                           	opt callstack 0
  3525  000005                     EUSART1_SetErrorHandler@interruptHandler:
  3526                           	opt callstack 0
  3527  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  3528                           	opt callstack 0
  3529  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  3530                           	opt callstack 0
  3531  000005                     ClearModbusData@i:
  3532                           	opt callstack 0
  3533  000005                     generateCRC@MessCnt:
  3534                           	opt callstack 0
  3535  000005                     ClearModbusRespon@i:
  3536                           	opt callstack 0
  3537  000005                     ___wmul@multiplier:
  3538                           	opt callstack 0
  3539  000005                     isalpha@c:
  3540                           	opt callstack 0
  3541  000005                     isdigit@c:
  3542                           	opt callstack 0
  3543  000005                     isspace@c:
  3544                           	opt callstack 0
  3545  000005                     isupper@c:
  3546                           	opt callstack 0
  3547  000005                     strcmp@l:
  3548                           	opt callstack 0
  3549  000005                     strlen@s:
  3550                           	opt callstack 0
  3551  000005                     islower@c:
  3552                           	opt callstack 0
  3553  000005                     ___aodiv@dividend:
  3554                           	opt callstack 0
  3555  000005                     ___aomod@dividend:
  3556                           	opt callstack 0
  3557  000005                     ___lodiv@dividend:
  3558                           	opt callstack 0
  3559  000005                     ___lomod@dividend:
  3560                           	opt callstack 0
  3561                           
  3562                           ; 8 bytes @ 0x4
  3563  000005                     	ds	1
  3564  000006                     putch@txData:
  3565                           	opt callstack 0
  3566  000006                     ClearRxBuff@i:
  3567                           	opt callstack 0
  3568  000006                     UART1_Write_string@data:
  3569                           	opt callstack 0
  3570                           
  3571                           ; 2 bytes @ 0x5
  3572  000006                     	ds	1
  3573  000007                     ??_ADCC_GetSingleConversion:
  3574  000007                     ??_isupper:
  3575  000007                     ??_isalpha:
  3576  000007                     ??_isdigit:
  3577  000007                     ??_isspace:
  3578  000007                     ??_islower:
  3579  000007                     DATAEE_WriteByte@bData:
  3580                           	opt callstack 0
  3581  000007                     generateCRC@HiOrLo:
  3582                           	opt callstack 0
  3583  000007                     ___wmul@multiplicand:
  3584                           	opt callstack 0
  3585  000007                     fputc@c:
  3586                           	opt callstack 0
  3587  000007                     strcmp@r:
  3588                           	opt callstack 0
  3589  000007                     strlen@a:
  3590                           	opt callstack 0
  3591                           
  3592                           ; 2 bytes @ 0x6
  3593  000007                     	ds	1
  3594  000008                     ??_generateCRC:
  3595  000008                     DATAEE_WriteByte@GIEBitValue:
  3596                           	opt callstack 0
  3597  000008                     UART1_Write_string@data_len:
  3598                           	opt callstack 0
  3599                           
  3600                           ; 2 bytes @ 0x7
  3601  000008                     	ds	1
  3602  000009                     ??_strcmp:
  3603  000009                     ADCC_GetSingleConversion@channel:
  3604                           	opt callstack 0
  3605  000009                     ___wmul@product:
  3606                           	opt callstack 0
  3607  000009                     memmove@d1:
  3608                           	opt callstack 0
  3609  000009                     fputc@fp:
  3610                           	opt callstack 0
  3611  000009                     strcpy@dest:
  3612                           	opt callstack 0
  3613                           
  3614                           ; 2 bytes @ 0x8
  3615  000009                     	ds	1
  3616  00000A                     ??_UART1_Write_string:
  3617  00000A                     generateCRC@crcHigh:
  3618                           	opt callstack 0
  3619  00000A                     CardConfigIni@Name:
  3620                           	opt callstack 0
  3621                           
  3622                           ; 2 bytes @ 0x9
  3623  00000A                     	ds	1
  3624  00000B                     ??_fputc:
  3625  00000B                     ?_toupper:
  3626                           	opt callstack 0
  3627  00000B                     _isspace$2370:
  3628                           	opt callstack 0
  3629  00000B                     UART1_Write_string@i:
  3630                           	opt callstack 0
  3631  00000B                     memmove@s1:
  3632                           	opt callstack 0
  3633  00000B                     strcpy@src:
  3634                           	opt callstack 0
  3635  00000B                     toupper@c:
  3636                           	opt callstack 0
  3637                           
  3638                           ; 2 bytes @ 0xA
  3639  00000B                     	ds	1
  3640  00000C                     ?_atoi:
  3641                           	opt callstack 0
  3642  00000C                     generateCRC@crcLow:
  3643                           	opt callstack 0
  3644  00000C                     CardConfigIni@RetNum:
  3645                           	opt callstack 0
  3646  00000C                     atoi@s:
  3647                           	opt callstack 0
  3648                           
  3649                           ; 2 bytes @ 0xB
  3650  00000C                     	ds	1
  3651  00000D                     ??_strcpy:
  3652  00000D                     ??_toupper:
  3653  00000D                     memmove@n:
  3654                           	opt callstack 0
  3655  00000D                     ___aodiv@divisor:
  3656                           	opt callstack 0
  3657  00000D                     ___aomod@divisor:
  3658                           	opt callstack 0
  3659  00000D                     ___lodiv@divisor:
  3660                           	opt callstack 0
  3661  00000D                     ___lomod@divisor:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 8 bytes @ 0xC
  3665  00000D                     	ds	1
  3666  00000E                     ??_atoi:
  3667  00000E                     generateCRC@i:
  3668                           	opt callstack 0
  3669  00000E                     CardConfigIni@dataeeAddrWrk:
  3670                           	opt callstack 0
  3671                           
  3672                           ; 2 bytes @ 0xD
  3673  00000E                     	ds	1
  3674  00000F                     ??_memmove:
  3675  00000F                     strcpy@s:
  3676                           	opt callstack 0
  3677                           
  3678                           ; 2 bytes @ 0xE
  3679  00000F                     	ds	1
  3680  000010                     ?_stoa:
  3681                           	opt callstack 0
  3682  000010                     generateCRC@j:
  3683                           	opt callstack 0
  3684  000010                     CardConfigIni@NumBytes:
  3685                           	opt callstack 0
  3686  000010                     stoa@fp:
  3687                           	opt callstack 0
  3688  000010                     fputs@s:
  3689                           	opt callstack 0
  3690                           
  3691                           ; 2 bytes @ 0xF
  3692  000010                     	ds	1
  3693  000011                     memmove@d:
  3694                           	opt callstack 0
  3695  000011                     strcpy@d:
  3696                           	opt callstack 0
  3697  000011                     _toupper$2457:
  3698                           	opt callstack 0
  3699                           
  3700                           ; 2 bytes @ 0x10
  3701  000011                     	ds	1
  3702  000012                     ??_CardConfigIni:
  3703  000012                     generateCRC@crc:
  3704                           	opt callstack 0
  3705  000012                     stoa@s:
  3706                           	opt callstack 0
  3707  000012                     atoi@neg:
  3708                           	opt callstack 0
  3709  000012                     fputs@fp:
  3710                           	opt callstack 0
  3711                           
  3712                           ; 2 bytes @ 0x11
  3713  000012                     	ds	1
  3714  000013                     memmove@s:
  3715                           	opt callstack 0
  3716  000013                     strcat@dest:
  3717                           	opt callstack 0
  3718                           
  3719                           ; 2 bytes @ 0x12
  3720  000013                     	ds	1
  3721  000014                     ??_stoa:
  3722  000014                     fputs@c:
  3723                           	opt callstack 0
  3724  000014                     CardConfigIni@j:
  3725                           	opt callstack 0
  3726  000014                     _atoi$2343:
  3727                           	opt callstack 0
  3728                           
  3729                           ; 2 bytes @ 0x13
  3730  000014                     	ds	1
  3731  000015                     ___aodiv@counter:
  3732                           	opt callstack 0
  3733  000015                     ___aomod@counter:
  3734                           	opt callstack 0
  3735  000015                     ___lomod@counter:
  3736                           	opt callstack 0
  3737  000015                     fputs@i:
  3738                           	opt callstack 0
  3739  000015                     strcat@src:
  3740                           	opt callstack 0
  3741  000015                     stoa@nuls:
  3742                           	opt callstack 0
  3743  000015                     ___lodiv@quotient:
  3744                           	opt callstack 0
  3745                           
  3746                           ; 8 bytes @ 0x14
  3747  000015                     	ds	1
  3748  000016                     ___aodiv@sign:
  3749                           	opt callstack 0
  3750  000016                     ___aomod@sign:
  3751                           	opt callstack 0
  3752  000016                     CardConfigIni@i:
  3753                           	opt callstack 0
  3754  000016                     _atoi$2345:
  3755                           	opt callstack 0
  3756                           
  3757                           ; 2 bytes @ 0x15
  3758  000016                     	ds	1
  3759  000017                     ?_abs:
  3760                           	opt callstack 0
  3761  000017                     ?_pad:
  3762                           	opt callstack 0
  3763  000017                     pad@fp:
  3764                           	opt callstack 0
  3765  000017                     abs@a:
  3766                           	opt callstack 0
  3767  000017                     ___aodiv@quotient:
  3768                           	opt callstack 0
  3769                           
  3770                           ; 8 bytes @ 0x16
  3771  000017                     	ds	1
  3772  000018                     CardConfigIni@readDataOdd:
  3773                           	opt callstack 0
  3774  000018                     _atoi$2344:
  3775                           	opt callstack 0
  3776                           
  3777                           ; 1 bytes @ 0x17
  3778  000018                     	ds	1
  3779  000019                     ??_abs:
  3780  000019                     CardConfigIni@readDataEven:
  3781                           	opt callstack 0
  3782  000019                     pad@buf:
  3783                           	opt callstack 0
  3784  000019                     atoi@n:
  3785                           	opt callstack 0
  3786                           
  3787                           ; 2 bytes @ 0x18
  3788  000019                     	ds	2
  3789  00001B                     pad@p:
  3790                           	opt callstack 0
  3791                           
  3792                           ; 2 bytes @ 0x1A
  3793  00001B                     	ds	1
  3794  00001C                     stoa@i:
  3795                           	opt callstack 0
  3796                           
  3797                           ; 2 bytes @ 0x1B
  3798  00001C                     	ds	1
  3799  00001D                     ??_pad:
  3800  00001D                     ___lodiv@counter:
  3801                           	opt callstack 0
  3802                           
  3803                           ; 1 bytes @ 0x1C
  3804  00001D                     	ds	1
  3805  00001E                     pad@i:
  3806                           	opt callstack 0
  3807  00001E                     stoa@w:
  3808                           	opt callstack 0
  3809                           
  3810                           ; 2 bytes @ 0x1D
  3811  00001E                     	ds	2
  3812  000020                     pad@w:
  3813                           	opt callstack 0
  3814  000020                     stoa@cp:
  3815                           	opt callstack 0
  3816                           
  3817                           ; 2 bytes @ 0x1F
  3818  000020                     	ds	2
  3819  000022                     ?_dtoa:
  3820                           	opt callstack 0
  3821  000022                     ?_utoa:
  3822                           	opt callstack 0
  3823  000022                     ?_xtoa:
  3824                           	opt callstack 0
  3825  000022                     dtoa@fp:
  3826                           	opt callstack 0
  3827  000022                     stoa@p:
  3828                           	opt callstack 0
  3829  000022                     utoa@fp:
  3830                           	opt callstack 0
  3831  000022                     xtoa@fp:
  3832                           	opt callstack 0
  3833                           
  3834                           ; 2 bytes @ 0x21
  3835  000022                     	ds	2
  3836  000024                     stoa@l:
  3837                           	opt callstack 0
  3838  000024                     dtoa@d:
  3839                           	opt callstack 0
  3840  000024                     utoa@d:
  3841                           	opt callstack 0
  3842  000024                     xtoa@d:
  3843                           	opt callstack 0
  3844                           
  3845                           ; 8 bytes @ 0x23
  3846  000024                     	ds	8
  3847  00002C                     ??_dtoa:
  3848  00002C                     ??_utoa:
  3849  00002C                     xtoa@x:
  3850                           	opt callstack 0
  3851                           
  3852                           ; 1 bytes @ 0x2B
  3853  00002C                     	ds	1
  3854  00002D                     ??_xtoa:
  3855                           
  3856                           ; 1 bytes @ 0x2C
  3857  00002D                     	ds	7
  3858  000034                     _dtoa$1839:
  3859                           	opt callstack 0
  3860  000034                     utoa@p:
  3861                           	opt callstack 0
  3862                           
  3863                           ; 2 bytes @ 0x33
  3864  000034                     	ds	1
  3865  000035                     _xtoa$1868:
  3866                           	opt callstack 0
  3867                           
  3868                           ; 2 bytes @ 0x34
  3869  000035                     	ds	1
  3870  000036                     dtoa@p:
  3871                           	opt callstack 0
  3872  000036                     utoa@w:
  3873                           	opt callstack 0
  3874                           
  3875                           ; 2 bytes @ 0x35
  3876  000036                     	ds	1
  3877  000037                     _xtoa$1869:
  3878                           	opt callstack 0
  3879                           
  3880                           ; 2 bytes @ 0x36
  3881  000037                     	ds	1
  3882  000038                     dtoa@w:
  3883                           	opt callstack 0
  3884  000038                     utoa@n:
  3885                           	opt callstack 0
  3886                           
  3887                           ; 8 bytes @ 0x37
  3888  000038                     	ds	1
  3889  000039                     xtoa@p:
  3890                           	opt callstack 0
  3891                           
  3892                           ; 2 bytes @ 0x38
  3893  000039                     	ds	1
  3894  00003A                     dtoa@s:
  3895                           	opt callstack 0
  3896                           
  3897                           ; 2 bytes @ 0x39
  3898  00003A                     	ds	1
  3899  00003B                     xtoa@w:
  3900                           	opt callstack 0
  3901                           
  3902                           ; 2 bytes @ 0x3A
  3903  00003B                     	ds	1
  3904  00003C                     dtoa@n:
  3905                           	opt callstack 0
  3906                           
  3907                           ; 8 bytes @ 0x3B
  3908  00003C                     	ds	1
  3909  00003D                     xtoa@n:
  3910                           	opt callstack 0
  3911                           
  3912                           ; 8 bytes @ 0x3C
  3913  00003D                     	ds	3
  3914  000040                     utoa@i:
  3915                           	opt callstack 0
  3916                           
  3917                           ; 2 bytes @ 0x3F
  3918  000040                     	ds	4
  3919  000044                     dtoa@i:
  3920                           	opt callstack 0
  3921                           
  3922                           ; 2 bytes @ 0x43
  3923  000044                     	ds	1
  3924  000045                     xtoa@i:
  3925                           	opt callstack 0
  3926                           
  3927                           ; 2 bytes @ 0x44
  3928  000045                     	ds	2
  3929  000047                     xtoa@c:
  3930                           	opt callstack 0
  3931                           
  3932                           ; 2 bytes @ 0x46
  3933  000047                     	ds	2
  3934  000049                     ?_vfpfcnvrt:
  3935                           	opt callstack 0
  3936  000049                     vfpfcnvrt@fp:
  3937                           	opt callstack 0
  3938                           
  3939                           ; 2 bytes @ 0x48
  3940  000049                     	ds	2
  3941  00004B                     vfpfcnvrt@fmt:
  3942                           	opt callstack 0
  3943                           
  3944                           ; 2 bytes @ 0x4A
  3945  00004B                     	ds	2
  3946  00004D                     vfpfcnvrt@ap:
  3947                           	opt callstack 0
  3948                           
  3949                           ; 2 bytes @ 0x4C
  3950  00004D                     	ds	2
  3951  00004F                     ??_vfpfcnvrt:
  3952                           
  3953                           ; 1 bytes @ 0x4E
  3954  00004F                     	ds	4
  3955  000053                     vfprintf@cfmt:
  3956                           	opt callstack 0
  3957                           
  3958                           ; 2 bytes @ 0x52
  3959  000053                     	ds	2
  3960  000055                     ??_InitialiseString:
  3961  000055                     ??_PrintModbus:
  3962  000055                     ??_PrintModRespon:
  3963  000055                     ??_AddRxBuffToModBus:
  3964  000055                     PrintMB400@i:
  3965                           	opt callstack 0
  3966  000055                     ReadRX232@temp:
  3967                           	opt callstack 0
  3968  000055                     ClearEEAddRange@i:
  3969                           	opt callstack 0
  3970                           
  3971                           ; 2 bytes @ 0x54
  3972  000055                     	ds	1
  3973  000056                     ??_ModbusRx:
  3974  000056                     
  3975                           ; 1 bytes @ 0x55
  3976  000056                     	ds	1
  3977  000057                     
  3978                           ; 1 bytes @ 0x56
  3979 ;;
  3980 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3981 ;;
  3982 ;; *************** function _main *****************
  3983 ;; Defined at:
  3984 ;;		line 29 in file "main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  RXStat          1    0        _Bool 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4001 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4002 ;;Total ram usage:        3 bytes
  4003 ;; Hardware stack levels required when called:   16
  4004 ;; This function calls:
  4005 ;;		_ClearModbusData
  4006 ;;		_ClearModbusRespon
  4007 ;;		_ClearRxBuff
  4008 ;;		_InitialiseString
  4009 ;;		_ModbusError
  4010 ;;		_ModbusFC03
  4011 ;;		_ModbusFC10
  4012 ;;		_ModbusRx
  4013 ;;		_PrintMB400
  4014 ;;		_PrintModRespon
  4015 ;;		_PrintModbus
  4016 ;;		_RXMode
  4017 ;;		_ReadRX232
  4018 ;;		_SYSTEM_Initialize
  4019 ;;		_ValidateCmd
  4020 ;;		_printf
  4021 ;;		_strcpy
  4022 ;; This function is called by:
  4023 ;;		Startup code after reset
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text0
  4028  002828                     __ptext0:
  4029                           	opt callstack 0
  4030  002828                     _main:
  4031                           	opt callstack 15
  4032  002828                     
  4033                           ;main.c: 32:     SYSTEM_Initialize();
  4034  002828  EC23  F020         	call	_SYSTEM_Initialize	;wreg free
  4035  00282C                     
  4036                           ;main.c: 39:     (INTCONbits.GIE = 1);
  4037  00282C  8EF2               	bsf	242,7,c	;volatile
  4038  00282E                     
  4039                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  4040  00282E  8CF2               	bsf	242,6,c	;volatile
  4041  002830  9883               	bcf	131,4,c	;volatile
  4042  002832  9A83               	bcf	131,5,c	;volatile
  4043  002834  9C83               	bcf	131,6,c	;volatile
  4044  002836  9E83               	bcf	131,7,c	;volatile
  4045  002838                     
  4046                           ;main.c: 55:     InitialiseString(0);
  4047  002838  0E00               	movlw	0
  4048  00283A  ECD1  F005         	call	_InitialiseString
  4049  00283E                     
  4050                           ;main.c: 58:     RXMode();
  4051  00283E  ECDF  F020         	call	_RXMode	;wreg free
  4052  002842                     
  4053                           ;main.c: 59:     ClearRxBuff();
  4054  002842  ECE8  F01D         	call	_ClearRxBuff	;wreg free
  4055  002846                     
  4056                           ;main.c: 60:     ClearModbusRespon();
  4057  002846  EC97  F01E         	call	_ClearModbusRespon	;wreg free
  4058  00284A                     l7818:
  4059                           
  4060                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  4061  00284A  EC64  F011         	call	_ModbusRx	;wreg free
  4062  00284E  06E8               	decf	wreg,f,c
  4063  002850  A4D8               	btfss	status,2,c
  4064  002852  EF2D  F014         	goto	u7691
  4065  002856  EF2F  F014         	goto	u7690
  4066  00285A                     u7691:
  4067  00285A  EF7A  F014         	goto	l7838
  4068  00285E                     u7690:
  4069  00285E  EF59  F014         	goto	l7830
  4070  002862                     l7822:
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;main.c: 73:                 {;main.c: 77:                     ModbusFC03();
  4074  002862  EC5A  F003         	call	_ModbusFC03	;wreg free
  4075                           
  4076                           ;main.c: 78:                     break;
  4077  002866  EF70  F014         	goto	l7832
  4078  00286A                     l7824:
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;main.c: 81:                 {;main.c: 82:                     printf("Function Code 0x1
      +                          0\r\n");
  4082  00286A  0EEA               	movlw	low STR_1
  4083  00286C  0100               	movlb	0	; () banked
  4084  00286E  6F7D               	movwf	printf@fmt& (0+255),b
  4085  002870  0EFE               	movlw	high STR_1
  4086  002872  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4087  002874  ECE9  F01F         	call	_printf	;wreg free
  4088                           
  4089                           ;main.c: 84:                     printf("Modbus Register Before Update:");
  4090  002878  0E06               	movlw	low STR_2
  4091  00287A  0100               	movlb	0	; () banked
  4092  00287C  6F7D               	movwf	printf@fmt& (0+255),b
  4093  00287E  0EFD               	movlw	high STR_2
  4094  002880  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4095  002882  ECE9  F01F         	call	_printf	;wreg free
  4096                           
  4097                           ;main.c: 85:                     PrintMB400();
  4098  002886  EC77  F01B         	call	_PrintMB400	;wreg free
  4099                           
  4100                           ;main.c: 86:                     ModbusFC10();
  4101  00288A  EC59  F00D         	call	_ModbusFC10	;wreg free
  4102                           
  4103                           ;main.c: 88:                     break;
  4104  00288E  EF70  F014         	goto	l7832
  4105  002892                     l7826:
  4106                           
  4107                           ; BSR set to: 1
  4108                           ;main.c: 91:                 {;main.c: 92:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  4109  002892  0E98               	movlw	low STR_3
  4110  002894  0100               	movlb	0	; () banked
  4111  002896  6F7D               	movwf	printf@fmt& (0+255),b
  4112  002898  0EFD               	movlw	high STR_3
  4113  00289A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4114  00289C  ECE9  F01F         	call	_printf	;wreg free
  4115                           
  4116                           ;main.c: 94:                     ModbusError(0x01);
  4117  0028A0  0E00               	movlw	0
  4118  0028A2  0100               	movlb	0	; () banked
  4119  0028A4  6F8C               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  4120  0028A6  0E01               	movlw	1
  4121  0028A8  6F8B               	movwf	ModbusError@ErrorCode& (0+255),b
  4122  0028AA  ECBC  F017         	call	_ModbusError	;wreg free
  4123                           
  4124                           ;main.c: 95:                     break;
  4125  0028AE  EF70  F014         	goto	l7832
  4126  0028B2                     l7830:
  4127  0028B2  0102               	movlb	2	; () banked
  4128  0028B4  5101               	movf	(_ModbusData+1)& (0+255),w,b
  4129  0028B6  0101               	movlb	1	; () banked
  4130  0028B8  6FE8               	movwf	??_main& (0+255),b
  4131  0028BA  6BE9               	clrf	(??_main+1)& (0+255),b
  4132                           
  4133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4134                           ; Switch size 1, requested type "simple"
  4135                           ; Number of cases is 1, Range of values is 0 to 0
  4136                           ; switch strategies available:
  4137                           ; Name         Instructions Cycles
  4138                           ; simple_byte            4     3 (average)
  4139                           ;	Chosen strategy is simple_byte
  4140  0028BC  51E9               	movf	(??_main+1)& (0+255),w,b
  4141  0028BE  0A00               	xorlw	0	; case 0
  4142  0028C0  B4D8               	btfsc	status,2,c
  4143  0028C2  EF65  F014         	goto	l7974
  4144  0028C6  EF49  F014         	goto	l7826
  4145  0028CA                     l7974:
  4146                           
  4147                           ; BSR set to: 1
  4148                           ; Switch size 1, requested type "simple"
  4149                           ; Number of cases is 2, Range of values is 3 to 16
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; simple_byte            7     4 (average)
  4153                           ;	Chosen strategy is simple_byte
  4154  0028CA  51E8               	movf	??_main& (0+255),w,b
  4155  0028CC  0A03               	xorlw	3	; case 3
  4156  0028CE  B4D8               	btfsc	status,2,c
  4157  0028D0  EF31  F014         	goto	l7822
  4158  0028D4  0A13               	xorlw	19	; case 16
  4159  0028D6  B4D8               	btfsc	status,2,c
  4160  0028D8  EF35  F014         	goto	l7824
  4161  0028DC  EF49  F014         	goto	l7826
  4162  0028E0                     l7832:
  4163                           
  4164                           ;main.c: 99:             PrintModbus();
  4165  0028E0  EC04  F01B         	call	_PrintModbus	;wreg free
  4166                           
  4167                           ;main.c: 100:             PrintModRespon();
  4168  0028E4  EC9E  F019         	call	_PrintModRespon	;wreg free
  4169  0028E8                     
  4170                           ;main.c: 104:             ClearModbusData();
  4171  0028E8  ECC2  F01D         	call	_ClearModbusData	;wreg free
  4172  0028EC                     
  4173                           ;main.c: 105:             ClearModbusRespon();
  4174  0028EC  EC97  F01E         	call	_ClearModbusRespon	;wreg free
  4175                           
  4176                           ;main.c: 107:         }else if(ReadRX232(16) != 0){
  4177  0028F0  EF25  F014         	goto	l7818
  4178  0028F4                     l7838:
  4179  0028F4  0E00               	movlw	0
  4180  0028F6  0100               	movlb	0	; () banked
  4181  0028F8  6F8A               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  4182  0028FA  0E10               	movlw	16
  4183  0028FC  6F89               	movwf	ReadRX232@NumChars& (0+255),b
  4184  0028FE  EC82  F013         	call	_ReadRX232	;wreg free
  4185  002902  0100               	movlb	0	; () banked
  4186  002904  5189               	movf	?_ReadRX232& (0+255),w,b
  4187  002906  118A               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  4188  002908  B4D8               	btfsc	status,2,c
  4189  00290A  EF89  F014         	goto	u7701
  4190  00290E  EF8B  F014         	goto	u7700
  4191  002912                     u7701:
  4192  002912  EFA0  F014         	goto	l601
  4193  002916                     u7700:
  4194  002916                     
  4195                           ; BSR set to: 0
  4196                           ;main.c: 109:             if(ValidateCmd() ==1){
  4197  002916  EC38  F00E         	call	_ValidateCmd	;wreg free
  4198  00291A                     
  4199                           ;main.c: 116:             printf("\r\nEnter Command : ");
  4200  00291A  0E26               	movlw	low STR_4
  4201  00291C  0100               	movlb	0	; () banked
  4202  00291E  6F7D               	movwf	printf@fmt& (0+255),b
  4203  002920  0EFF               	movlw	high STR_4
  4204  002922  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4205  002924  ECE9  F01F         	call	_printf	;wreg free
  4206  002928                     
  4207                           ;main.c: 117:             strcpy(Command, "");
  4208  002928  0EE4               	movlw	low _Command
  4209  00292A  6E09               	movwf	strcpy@dest^0,c
  4210  00292C  0E00               	movlw	high _Command
  4211  00292E  6E0A               	movwf	(strcpy@dest+1)^0,c
  4212  002930  0E7D               	movlw	low (STR_55+68)
  4213  002932  6E0B               	movwf	strcpy@src^0,c
  4214  002934  0EF9               	movlw	high (STR_55+68)
  4215  002936  6E0C               	movwf	(strcpy@src+1)^0,c
  4216  002938  ECDD  F01B         	call	_strcpy	;wreg free
  4217                           
  4218                           ;main.c: 119:         }else{
  4219  00293C  EF25  F014         	goto	l7818
  4220  002940                     l601:
  4221                           
  4222                           ; BSR set to: 0
  4223  002940  EF25  F014         	goto	l7818
  4224  002944  EF93  F000         	goto	start
  4225  002948                     __end_of_main:
  4226                           	opt callstack 0
  4227                           
  4228 ;; *************** function _ValidateCmd *****************
  4229 ;; Defined at:
  4230 ;;		line 277 in file "RS232.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  ConfName       20   40[BANK1 ] unsigned char [20]
  4235 ;;  MaxChars        2    0        int 
  4236 ;;  ConfName       20   20[BANK1 ] unsigned char [20]
  4237 ;;  MaxChars        2    0        int 
  4238 ;;  ConfName       20    0[BANK1 ] unsigned char [20]
  4239 ;;  MaxChars        2    0        int 
  4240 ;;  i               2    0        int 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      _Bool 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;Total ram usage:       68 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:   15
  4257 ;; This function calls:
  4258 ;;		_InitialiseString
  4259 ;;		_SaveCardDat
  4260 ;;		_TogDebug
  4261 ;;		_strcmp
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text1
  4268  001C70                     __ptext1:
  4269                           	opt callstack 0
  4270  001C70                     _ValidateCmd:
  4271                           	opt callstack 15
  4272  001C70                     
  4273                           ;RS232.c: 283:     if(!strcmp(Command,"debug")){
  4274  001C70  0EE4               	movlw	low _Command
  4275  001C72  6E05               	movwf	strcmp@l^0,c
  4276  001C74  0E00               	movlw	high _Command
  4277  001C76  6E06               	movwf	(strcmp@l+1)^0,c
  4278  001C78  0EE5               	movlw	low STR_77
  4279  001C7A  6E07               	movwf	strcmp@r^0,c
  4280  001C7C  0EFF               	movlw	high STR_77
  4281  001C7E  6E08               	movwf	(strcmp@r+1)^0,c
  4282  001C80  EC3F  F019         	call	_strcmp	;wreg free
  4283  001C84  5005               	movf	?_strcmp^0,w,c
  4284  001C86  1006               	iorwf	(?_strcmp+1)^0,w,c
  4285  001C88  A4D8               	btfss	status,2,c
  4286  001C8A  EF49  F00E         	goto	u7611
  4287  001C8E  EF4B  F00E         	goto	u7610
  4288  001C92                     u7611:
  4289  001C92  EF50  F00E         	goto	l7724
  4290  001C96                     u7610:
  4291  001C96                     
  4292                           ;RS232.c: 284:         TogDebug();
  4293  001C96  EC36  F01F         	call	_TogDebug	;wreg free
  4294  001C9A                     l7718:
  4295                           
  4296                           ;RS232.c: 285:         return 1;
  4297  001C9A  0E01               	movlw	1
  4298  001C9C  EF05  F00F         	goto	l963
  4299  001CA0                     l7724:
  4300  001CA0  0EE4               	movlw	low _Command
  4301  001CA2  6E05               	movwf	strcmp@l^0,c
  4302  001CA4  0E00               	movlw	high _Command
  4303  001CA6  6E06               	movwf	(strcmp@l+1)^0,c
  4304  001CA8  0EFD               	movlw	low STR_79
  4305  001CAA  6E07               	movwf	strcmp@r^0,c
  4306  001CAC  0EFF               	movlw	high STR_79
  4307  001CAE  6E08               	movwf	(strcmp@r+1)^0,c
  4308  001CB0  EC3F  F019         	call	_strcmp	;wreg free
  4309  001CB4  5005               	movf	?_strcmp^0,w,c
  4310  001CB6  1006               	iorwf	(?_strcmp+1)^0,w,c
  4311  001CB8  A4D8               	btfss	status,2,c
  4312  001CBA  EF61  F00E         	goto	u7621
  4313  001CBE  EF63  F00E         	goto	u7620
  4314  001CC2                     u7621:
  4315  001CC2  EF68  F00E         	goto	l7734
  4316  001CC6                     u7620:
  4317  001CC6                     
  4318                           ;RS232.c: 287:         InitialiseString(0);
  4319  001CC6  0E00               	movlw	0
  4320  001CC8  ECD1  F005         	call	_InitialiseString
  4321  001CCC  EF4D  F00E         	goto	l7718
  4322  001CD0                     l7734:
  4323  001CD0  0EE4               	movlw	low _Command
  4324  001CD2  6E05               	movwf	strcmp@l^0,c
  4325  001CD4  0E00               	movlw	high _Command
  4326  001CD6  6E06               	movwf	(strcmp@l+1)^0,c
  4327  001CD8  0EDE               	movlw	low STR_81
  4328  001CDA  6E07               	movwf	strcmp@r^0,c
  4329  001CDC  0EFF               	movlw	high STR_81
  4330  001CDE  6E08               	movwf	(strcmp@r+1)^0,c
  4331  001CE0  EC3F  F019         	call	_strcmp	;wreg free
  4332  001CE4  5005               	movf	?_strcmp^0,w,c
  4333  001CE6  1006               	iorwf	(?_strcmp+1)^0,w,c
  4334  001CE8  A4D8               	btfss	status,2,c
  4335  001CEA  EF79  F00E         	goto	u7631
  4336  001CEE  EF7B  F00E         	goto	u7630
  4337  001CF2                     u7631:
  4338  001CF2  EF9C  F00E         	goto	l7750
  4339  001CF6                     u7630:
  4340  001CF6                     
  4341                           ;RS232.c: 290:         char ConfName[20] = "Serial Number";
  4342  001CF6  EE22  F08C         	lfsr	2,ValidateCmd@F10790
  4343  001CFA  EE11  F0A4         	lfsr	1,ValidateCmd@ConfName
  4344  001CFE  0E13               	movlw	19
  4345  001D00                     u7641:
  4346  001D00  CFDB FFE3          	movff	plusw2,plusw1
  4347  001D04  06E8               	decf	wreg,f,c
  4348  001D06  E2FC               	bc	u7641
  4349  001D08                     
  4350                           ;RS232.c: 296:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  4351  001D08  0EA4               	movlw	low ValidateCmd@ConfName
  4352  001D0A  0100               	movlb	0	; () banked
  4353  001D0C  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4354  001D0E  0E01               	movlw	high ValidateCmd@ConfName
  4355  001D10  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4356  001D12  0E03               	movlw	3
  4357  001D14  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4358  001D16  0E00               	movlw	0
  4359  001D18  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4360  001D1A  0E03               	movlw	3
  4361  001D1C  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4362  001D1E  0E00               	movlw	0
  4363  001D20  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4364  001D22  0E00               	movlw	0
  4365  001D24  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4366  001D26  0E0A               	movlw	10
  4367  001D28  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4368  001D2A  EC71  F00C         	call	_SaveCardDat	;wreg free
  4369  001D2E                     
  4370                           ;RS232.c: 297:         InitialiseString(1);
  4371  001D2E  0E01               	movlw	1
  4372  001D30  ECD1  F005         	call	_InitialiseString
  4373  001D34  EF4D  F00E         	goto	l7718
  4374  001D38                     l7750:
  4375  001D38  0EE4               	movlw	low _Command
  4376  001D3A  6E05               	movwf	strcmp@l^0,c
  4377  001D3C  0E00               	movlw	high _Command
  4378  001D3E  6E06               	movwf	(strcmp@l+1)^0,c
  4379  001D40  0EF0               	movlw	low STR_83
  4380  001D42  6E07               	movwf	strcmp@r^0,c
  4381  001D44  0EFF               	movlw	high STR_83
  4382  001D46  6E08               	movwf	(strcmp@r+1)^0,c
  4383  001D48  EC3F  F019         	call	_strcmp	;wreg free
  4384  001D4C  5005               	movf	?_strcmp^0,w,c
  4385  001D4E  1006               	iorwf	(?_strcmp+1)^0,w,c
  4386  001D50  A4D8               	btfss	status,2,c
  4387  001D52  EFAD  F00E         	goto	u7651
  4388  001D56  EFAF  F00E         	goto	u7650
  4389  001D5A                     u7651:
  4390  001D5A  EFD0  F00E         	goto	l7766
  4391  001D5E                     u7650:
  4392  001D5E                     
  4393                           ;RS232.c: 303:         char ConfName[20] = "Part Number";
  4394  001D5E  EE22  F078         	lfsr	2,ValidateCmd@F10793
  4395  001D62  EE11  F0B8         	lfsr	1,ValidateCmd@ConfName_1509
  4396  001D66  0E13               	movlw	19
  4397  001D68                     u7661:
  4398  001D68  CFDB FFE3          	movff	plusw2,plusw1
  4399  001D6C  06E8               	decf	wreg,f,c
  4400  001D6E  E2FC               	bc	u7661
  4401  001D70                     
  4402                           ;RS232.c: 305:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  4403  001D70  0EB8               	movlw	low ValidateCmd@ConfName_1509
  4404  001D72  0100               	movlb	0	; () banked
  4405  001D74  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4406  001D76  0E01               	movlw	high ValidateCmd@ConfName_1509
  4407  001D78  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4408  001D7A  0E01               	movlw	1
  4409  001D7C  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4410  001D7E  0E00               	movlw	0
  4411  001D80  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4412  001D82  0E01               	movlw	1
  4413  001D84  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4414  001D86  0E00               	movlw	0
  4415  001D88  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4416  001D8A  0E00               	movlw	0
  4417  001D8C  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4418  001D8E  0E10               	movlw	16
  4419  001D90  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4420  001D92  EC71  F00C         	call	_SaveCardDat	;wreg free
  4421  001D96                     
  4422                           ;RS232.c: 306:         InitialiseString(1);
  4423  001D96  0E01               	movlw	1
  4424  001D98  ECD1  F005         	call	_InitialiseString
  4425  001D9C  EF4D  F00E         	goto	l7718
  4426  001DA0                     l7766:
  4427  001DA0  0EE4               	movlw	low _Command
  4428  001DA2  6E05               	movwf	strcmp@l^0,c
  4429  001DA4  0E00               	movlw	high _Command
  4430  001DA6  6E06               	movwf	(strcmp@l+1)^0,c
  4431  001DA8  0EF9               	movlw	low STR_85
  4432  001DAA  6E07               	movwf	strcmp@r^0,c
  4433  001DAC  0EFF               	movlw	high STR_85
  4434  001DAE  6E08               	movwf	(strcmp@r+1)^0,c
  4435  001DB0  EC3F  F019         	call	_strcmp	;wreg free
  4436  001DB4  5005               	movf	?_strcmp^0,w,c
  4437  001DB6  1006               	iorwf	(?_strcmp+1)^0,w,c
  4438  001DB8  A4D8               	btfss	status,2,c
  4439  001DBA  EFE1  F00E         	goto	u7671
  4440  001DBE  EFE3  F00E         	goto	u7670
  4441  001DC2                     u7671:
  4442  001DC2  EF04  F00F         	goto	l7782
  4443  001DC6                     u7670:
  4444  001DC6                     
  4445                           ;RS232.c: 313:         char ConfName[20] = "Revision";
  4446  001DC6  EE22  F064         	lfsr	2,ValidateCmd@F10796
  4447  001DCA  EE11  F0CC         	lfsr	1,ValidateCmd@ConfName_1513
  4448  001DCE  0E13               	movlw	19
  4449  001DD0                     u7681:
  4450  001DD0  CFDB FFE3          	movff	plusw2,plusw1
  4451  001DD4  06E8               	decf	wreg,f,c
  4452  001DD6  E2FC               	bc	u7681
  4453  001DD8                     
  4454                           ;RS232.c: 316:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  4455  001DD8  0ECC               	movlw	low ValidateCmd@ConfName_1513
  4456  001DDA  0100               	movlb	0	; () banked
  4457  001DDC  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4458  001DDE  0E01               	movlw	high ValidateCmd@ConfName_1513
  4459  001DE0  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4460  001DE2  0E02               	movlw	2
  4461  001DE4  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4462  001DE6  0E00               	movlw	0
  4463  001DE8  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4464  001DEA  0E02               	movlw	2
  4465  001DEC  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4466  001DEE  0E00               	movlw	0
  4467  001DF0  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4468  001DF2  0E00               	movlw	0
  4469  001DF4  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4470  001DF6  0E02               	movlw	2
  4471  001DF8  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4472  001DFA  EC71  F00C         	call	_SaveCardDat	;wreg free
  4473  001DFE                     
  4474                           ;RS232.c: 318:         InitialiseString(1);
  4475  001DFE  0E01               	movlw	1
  4476  001E00  ECD1  F005         	call	_InitialiseString
  4477  001E04  EF4D  F00E         	goto	l7718
  4478  001E08                     l7782:
  4479                           
  4480                           ;RS232.c: 322:         return 0;
  4481  001E08  0E00               	movlw	0
  4482  001E0A                     l963:
  4483  001E0A  0012               	return		;funcret
  4484  001E0C                     __end_of_ValidateCmd:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _TogDebug *****************
  4488 ;; Defined at:
  4489 ;;		line 192 in file "RS232.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:   13
  4510 ;; This function calls:
  4511 ;;		_printf
  4512 ;; This function is called by:
  4513 ;;		_ValidateCmd
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text2
  4518  003E6C                     __ptext2:
  4519                           	opt callstack 0
  4520  003E6C                     _TogDebug:
  4521                           	opt callstack 16
  4522  003E6C                     
  4523                           ;RS232.c: 194:     if(Debug==0){
  4524  003E6C  0100               	movlb	0	; () banked
  4525  003E6E  51D9               	movf	_Debug& (0+255),w,b
  4526  003E70  A4D8               	btfss	status,2,c
  4527  003E72  EF3D  F01F         	goto	u7301
  4528  003E76  EF3F  F01F         	goto	u7300
  4529  003E7A                     u7301:
  4530  003E7A  EF49  F01F         	goto	l7378
  4531  003E7E                     u7300:
  4532  003E7E                     
  4533                           ; BSR set to: 0
  4534                           ;RS232.c: 195:         Debug =1;
  4535  003E7E  0E01               	movlw	1
  4536  003E80  6FD9               	movwf	_Debug& (0+255),b
  4537  003E82                     
  4538                           ; BSR set to: 0
  4539                           ;RS232.c: 196:         printf("Debug Enabled\r\n");
  4540  003E82  0E5B               	movlw	low STR_66
  4541  003E84  6F7D               	movwf	printf@fmt& (0+255),b
  4542  003E86  0EFF               	movlw	high STR_66
  4543  003E88  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4544  003E8A  ECE9  F01F         	call	_printf	;wreg free
  4545                           
  4546                           ;RS232.c: 197:     }else{
  4547  003E8E  EF51  F01F         	goto	l934
  4548  003E92                     l7378:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;RS232.c: 198:         Debug =0;
  4552  003E92  0E00               	movlw	0
  4553  003E94  6FD9               	movwf	_Debug& (0+255),b
  4554  003E96                     
  4555                           ; BSR set to: 0
  4556                           ;RS232.c: 199:         printf("Debug Disabled\r\n");
  4557  003E96  0E4A               	movlw	low STR_67
  4558  003E98  6F7D               	movwf	printf@fmt& (0+255),b
  4559  003E9A  0EFF               	movlw	high STR_67
  4560  003E9C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4561  003E9E  ECE9  F01F         	call	_printf	;wreg free
  4562  003EA2                     l934:
  4563  003EA2  0012               	return		;funcret
  4564  003EA4                     __end_of_TogDebug:
  4565                           	opt callstack 0
  4566                           
  4567 ;; *************** function _SaveCardDat *****************
  4568 ;; Defined at:
  4569 ;;		line 217 in file "RS232.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  Name            2   45[BANK0 ] PTR unsigned char 
  4572 ;;		 -> ValidateCmd@ConfName_1513(20), ValidateCmd@ConfName_1509(20), ValidateCmd@ConfName(20), 
  4573 ;;  MBAddress       2   47[BANK0 ] unsigned int 
  4574 ;;  dataeeAddr      2   49[BANK0 ] unsigned short 
  4575 ;;  NumBytes        2   51[BANK0 ] int 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  i               2   59[BANK0 ] int 
  4578 ;;  dataeeAddrWr    2   57[BANK0 ] unsigned short 
  4579 ;;  Conf            1   61[BANK0 ] unsigned char 
  4580 ;;  readData        1    0        unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4590 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;Total ram usage:       17 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:   14
  4597 ;; This function calls:
  4598 ;;		_ClearEEAddRange
  4599 ;;		_DATAEE_WriteByte
  4600 ;;		_EUSART2_Read
  4601 ;;		_EUSART2_is_rx_ready
  4602 ;;		_ReadRX232
  4603 ;;		_printf
  4604 ;;		_strcpy
  4605 ;;		_strlen
  4606 ;; This function is called by:
  4607 ;;		_ValidateCmd
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text3
  4612  0018E2                     __ptext3:
  4613                           	opt callstack 0
  4614  0018E2                     _SaveCardDat:
  4615                           	opt callstack 15
  4616  0018E2                     
  4617                           ;RS232.c: 220:     unsigned char Conf, readData;;RS232.c: 221:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  4618  0018E2  C091  F099         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  4619  0018E6  C092  F09A         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  4620  0018EA                     
  4621                           ;RS232.c: 223:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  4622  0018EA  0E88               	movlw	low STR_69
  4623  0018EC  0100               	movlb	0	; () banked
  4624  0018EE  6F7D               	movwf	printf@fmt& (0+255),b
  4625  0018F0  0EFB               	movlw	high STR_69
  4626  0018F2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4627  0018F4  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4628  0018F8  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4629  0018FC  C093  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  4630  001900  C094  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  4631  001904  ECE9  F01F         	call	_printf	;wreg free
  4632  001908                     
  4633                           ;RS232.c: 225:     strcpy(Command, "");
  4634  001908  0EE4               	movlw	low _Command
  4635  00190A  6E09               	movwf	strcpy@dest^0,c
  4636  00190C  0E00               	movlw	high _Command
  4637  00190E  6E0A               	movwf	(strcpy@dest+1)^0,c
  4638  001910  0E7D               	movlw	low (STR_55+68)
  4639  001912  6E0B               	movwf	strcpy@src^0,c
  4640  001914  0EF9               	movlw	high (STR_55+68)
  4641  001916  6E0C               	movwf	(strcpy@src+1)^0,c
  4642  001918  ECDD  F01B         	call	_strcpy	;wreg free
  4643  00191C                     l7390:
  4644  00191C  C093  F089         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  4645  001920  C094  F08A         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  4646  001924  EC82  F013         	call	_ReadRX232	;wreg free
  4647  001928  0100               	movlb	0	; () banked
  4648  00192A  5189               	movf	?_ReadRX232& (0+255),w,b
  4649  00192C  118A               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  4650  00192E  B4D8               	btfsc	status,2,c
  4651  001930  EF9C  F00C         	goto	u7311
  4652  001934  EF9E  F00C         	goto	u7310
  4653  001938                     u7311:
  4654  001938  EF8E  F00C         	goto	l7390
  4655  00193C                     u7310:
  4656  00193C                     
  4657                           ; BSR set to: 0
  4658                           ;RS232.c: 228:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  4659  00193C  0EA5               	movlw	low STR_71
  4660  00193E  6F7D               	movwf	printf@fmt& (0+255),b
  4661  001940  0EFC               	movlw	high STR_71
  4662  001942  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4663  001944  0EE4               	movlw	low _Command
  4664  001946  6F7F               	movwf	(?_printf+2)& (0+255),b
  4665  001948  0E00               	movlw	high _Command
  4666  00194A  6F80               	movwf	(?_printf+3)& (0+255),b
  4667  00194C  ECE9  F01F         	call	_printf	;wreg free
  4668  001950                     l7394:
  4669  001950  EC42  F020         	call	_EUSART2_is_rx_ready	;wreg free
  4670  001954  0900               	iorlw	0
  4671  001956  B4D8               	btfsc	status,2,c
  4672  001958  EFB0  F00C         	goto	u7321
  4673  00195C  EFB2  F00C         	goto	u7320
  4674  001960                     u7321:
  4675  001960  EFA8  F00C         	goto	l7394
  4676  001964                     u7320:
  4677  001964                     
  4678                           ;RS232.c: 233:     Conf = EUSART2_Read();
  4679  001964  ECC7  F01C         	call	_EUSART2_Read	;wreg free
  4680  001968  0100               	movlb	0	; () banked
  4681  00196A  6F9D               	movwf	SaveCardDat@Conf& (0+255),b
  4682  00196C                     
  4683                           ; BSR set to: 0
  4684                           ;RS232.c: 236:     if(Conf == 0x79 || Conf == 0x59){
  4685  00196C  0E79               	movlw	121
  4686  00196E  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4687  001970  B4D8               	btfsc	status,2,c
  4688  001972  EFBD  F00C         	goto	u7331
  4689  001976  EFBF  F00C         	goto	u7330
  4690  00197A                     u7331:
  4691  00197A  EFC8  F00C         	goto	l951
  4692  00197E                     u7330:
  4693  00197E                     
  4694                           ; BSR set to: 0
  4695  00197E  0E59               	movlw	89
  4696  001980  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4697  001982  A4D8               	btfss	status,2,c
  4698  001984  EFC6  F00C         	goto	u7341
  4699  001988  EFC8  F00C         	goto	u7340
  4700  00198C                     u7341:
  4701  00198C  EF40  F00D         	goto	l7426
  4702  001990                     u7340:
  4703  001990                     l951:
  4704  001990                     
  4705                           ; BSR set to: 0
  4706                           ;RS232.c: 238:         printf("Y\r\nSaving %s\r\n", Name);
  4707  001990  0E8B               	movlw	low STR_72
  4708  001992  6F7D               	movwf	printf@fmt& (0+255),b
  4709  001994  0EFF               	movlw	high STR_72
  4710  001996  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4711  001998  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4712  00199C  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4713  0019A0  ECE9  F01F         	call	_printf	;wreg free
  4714  0019A4                     
  4715                           ;RS232.c: 239:         printf("Num Chars: %i \r\n", strlen(Command));
  4716  0019A4  0EE4               	movlw	low _Command
  4717  0019A6  6E05               	movwf	strlen@s^0,c
  4718  0019A8  0E00               	movlw	high _Command
  4719  0019AA  6E06               	movwf	(strlen@s+1)^0,c
  4720  0019AC  EC9A  F01D         	call	_strlen	;wreg free
  4721  0019B0  C005  F097         	movff	?_strlen,_SaveCardDat$2817
  4722  0019B4  C006  F098         	movff	?_strlen+1,_SaveCardDat$2817+1
  4723  0019B8                     
  4724                           ;RS232.c: 239:         printf("Num Chars: %i \r\n", strlen(Command));
  4725  0019B8  0E39               	movlw	low STR_73
  4726  0019BA  0100               	movlb	0	; () banked
  4727  0019BC  6F7D               	movwf	printf@fmt& (0+255),b
  4728  0019BE  0EFF               	movlw	high STR_73
  4729  0019C0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4730  0019C2  C097  F07F         	movff	_SaveCardDat$2817,?_printf+2
  4731  0019C6  C098  F080         	movff	_SaveCardDat$2817+1,?_printf+3
  4732  0019CA  ECE9  F01F         	call	_printf	;wreg free
  4733  0019CE                     
  4734                           ;RS232.c: 243:         ClearEEAddRange(dataeeAddr,NumBytes);
  4735  0019CE  C091  F089         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  4736  0019D2  C092  F08A         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  4737  0019D6  C093  F08B         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  4738  0019DA  C094  F08C         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  4739  0019DE  EC99  F01C         	call	_ClearEEAddRange	;wreg free
  4740  0019E2                     
  4741                           ;RS232.c: 246:         for (i = 0; i < strlen(Command); i++){
  4742  0019E2  0E00               	movlw	0
  4743  0019E4  0100               	movlb	0	; () banked
  4744  0019E6  6F9C               	movwf	(SaveCardDat@i+1)& (0+255),b
  4745  0019E8  0E00               	movlw	0
  4746  0019EA  6F9B               	movwf	SaveCardDat@i& (0+255),b
  4747  0019EC  EF18  F00D         	goto	l7420
  4748  0019F0                     l7412:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;RS232.c: 247:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  4752  0019F0  C099  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  4753  0019F4  C09A  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  4754  0019F8  0EE4               	movlw	low _Command
  4755  0019FA  259B               	addwf	SaveCardDat@i& (0+255),w,b
  4756  0019FC  6ED9               	movwf	fsr2l,c
  4757  0019FE  0E00               	movlw	high _Command
  4758  001A00  219C               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  4759  001A02  6EDA               	movwf	fsr2h,c
  4760  001A04  50DF               	movf	indf2,w,c
  4761  001A06  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4762  001A08  EC31  F01E         	call	_DATAEE_WriteByte	;wreg free
  4763  001A0C                     
  4764                           ;RS232.c: 248:             dataeeAddrWrk++;
  4765  001A0C  0100               	movlb	0	; () banked
  4766  001A0E  4B99               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4767  001A10  2B9A               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4768  001A12                     
  4769                           ; BSR set to: 0
  4770                           ;RS232.c: 249:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4771  001A12  0E03               	movlw	3
  4772  001A14  0100               	movlb	0	; () banked
  4773  001A16  6F96               	movwf	(??_SaveCardDat+1)& (0+255),b
  4774  001A18  0E08               	movlw	8
  4775  001A1A  6F95               	movwf	??_SaveCardDat& (0+255),b
  4776  001A1C  0E77               	movlw	119
  4777  001A1E                     u7717:
  4778  001A1E  2EE8               	decfsz	wreg,f,c
  4779  001A20  D7FE               	bra	u7717
  4780  001A22  2F95               	decfsz	??_SaveCardDat& (0+255),f,b
  4781  001A24  D7FC               	bra	u7717
  4782  001A26  2F96               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4783  001A28  D7FA               	bra	u7717
  4784  001A2A                     
  4785                           ;RS232.c: 250:         }
  4786  001A2A  0100               	movlb	0	; () banked
  4787  001A2C  4B9B               	infsnz	SaveCardDat@i& (0+255),f,b
  4788  001A2E  2B9C               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4789  001A30                     l7420:
  4790                           
  4791                           ; BSR set to: 0
  4792  001A30  0EE4               	movlw	low _Command
  4793  001A32  6E05               	movwf	strlen@s^0,c
  4794  001A34  0E00               	movlw	high _Command
  4795  001A36  6E06               	movwf	(strlen@s+1)^0,c
  4796  001A38  EC9A  F01D         	call	_strlen	;wreg free
  4797  001A3C  5005               	movf	?_strlen^0,w,c
  4798  001A3E  0100               	movlb	0	; () banked
  4799  001A40  5D9B               	subwf	SaveCardDat@i& (0+255),w,b
  4800  001A42  5006               	movf	(?_strlen+1)^0,w,c
  4801  001A44  599C               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4802  001A46  A0D8               	btfss	status,0,c
  4803  001A48  EF28  F00D         	goto	u7351
  4804  001A4C  EF2A  F00D         	goto	u7350
  4805  001A50                     u7351:
  4806  001A50  EFF8  F00C         	goto	l7412
  4807  001A54                     u7350:
  4808  001A54                     
  4809                           ; BSR set to: 0
  4810                           ;RS232.c: 252:         printf("%s Saved. \r\n",Name);
  4811  001A54  0EA9               	movlw	low STR_74
  4812  001A56  6F7D               	movwf	printf@fmt& (0+255),b
  4813  001A58  0EFF               	movlw	high STR_74
  4814  001A5A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4815  001A5C  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4816  001A60  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4817  001A64  ECE9  F01F         	call	_printf	;wreg free
  4818  001A68                     
  4819                           ;RS232.c: 267:         strcpy(Command, "");
  4820  001A68  0EE4               	movlw	low _Command
  4821  001A6A  6E09               	movwf	strcpy@dest^0,c
  4822  001A6C  0E00               	movlw	high _Command
  4823  001A6E  6E0A               	movwf	(strcpy@dest+1)^0,c
  4824  001A70  0E7D               	movlw	low (STR_55+68)
  4825  001A72  6E0B               	movwf	strcpy@src^0,c
  4826  001A74  0EF9               	movlw	high (STR_55+68)
  4827  001A76  6E0C               	movwf	(strcpy@src+1)^0,c
  4828  001A78  ECDD  F01B         	call	_strcpy	;wreg free
  4829                           
  4830                           ;RS232.c: 269:     }else if(Conf == 0x4e || Conf == 0x6e){
  4831  001A7C  EF58  F00D         	goto	l959
  4832  001A80                     l7426:
  4833                           
  4834                           ; BSR set to: 0
  4835  001A80  0E4E               	movlw	78
  4836  001A82  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4837  001A84  B4D8               	btfsc	status,2,c
  4838  001A86  EF47  F00D         	goto	u7361
  4839  001A8A  EF49  F00D         	goto	u7360
  4840  001A8E                     u7361:
  4841  001A8E  EF52  F00D         	goto	l7430
  4842  001A92                     u7360:
  4843  001A92                     
  4844                           ; BSR set to: 0
  4845  001A92  0E6E               	movlw	110
  4846  001A94  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4847  001A96  A4D8               	btfss	status,2,c
  4848  001A98  EF50  F00D         	goto	u7371
  4849  001A9C  EF52  F00D         	goto	u7370
  4850  001AA0                     u7371:
  4851  001AA0  EF58  F00D         	goto	l959
  4852  001AA4                     u7370:
  4853  001AA4                     l7430:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;RS232.c: 270:         printf("Not saved\r\n");
  4857  001AA4  0EB6               	movlw	low STR_76
  4858  001AA6  6F7D               	movwf	printf@fmt& (0+255),b
  4859  001AA8  0EFF               	movlw	high STR_76
  4860  001AAA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4861  001AAC  ECE9  F01F         	call	_printf	;wreg free
  4862  001AB0                     l959:
  4863  001AB0  0012               	return		;funcret
  4864  001AB2                     __end_of_SaveCardDat:
  4865                           	opt callstack 0
  4866                           
  4867 ;; *************** function _ReadRX232 *****************
  4868 ;; Defined at:
  4869 ;;		line 137 in file "RS232.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  NumChars        2   41[BANK0 ] int 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  temp            2   84[COMRAM] unsigned char [2]
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  2   41[BANK0 ] int 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;Total ram usage:        4 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:   13
  4890 ;; This function calls:
  4891 ;;		_EUSART2_Read
  4892 ;;		_EUSART2_Write
  4893 ;;		_EUSART2_is_rx_ready
  4894 ;;		_memmove
  4895 ;;		_printf
  4896 ;;		_strcat
  4897 ;;		_strlen
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;;		_SaveCardDat
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text4
  4905  002704                     __ptext4:
  4906                           	opt callstack 0
  4907  002704                     _ReadRX232:
  4908                           	opt callstack 15
  4909  002704                     
  4910                           ;RS232.c: 137: int ReadRX232(int NumChars);RS232.c: 138: {;RS232.c: 143:     char temp[2
      +                          ] = {'Z','\0'};
  4911  002704  C0F4  F055         	movff	ReadRX232@F10772,ReadRX232@temp
  4912  002708  C0F5  F056         	movff	ReadRX232@F10772+1,ReadRX232@temp+1
  4913  00270C                     
  4914                           ;RS232.c: 146:     if(EUSART2_is_rx_ready())
  4915  00270C  EC42  F020         	call	_EUSART2_is_rx_ready	;wreg free
  4916  002710  0900               	iorlw	0
  4917  002712  B4D8               	btfsc	status,2,c
  4918  002714  EF8E  F013         	goto	u6831
  4919  002718  EF90  F013         	goto	u6830
  4920  00271C                     u6831:
  4921  00271C  EF0E  F014         	goto	l6966
  4922  002720                     u6830:
  4923  002720                     l6938:
  4924                           
  4925                           ;RS232.c: 152:              if(EUSART2_is_rx_ready())
  4926  002720  EC42  F020         	call	_EUSART2_is_rx_ready	;wreg free
  4927  002724  0900               	iorlw	0
  4928  002726  B4D8               	btfsc	status,2,c
  4929  002728  EF98  F013         	goto	u6841
  4930  00272C  EF9A  F013         	goto	u6840
  4931  002730                     u6841:
  4932  002730  EFEA  F013         	goto	l6958
  4933  002734                     u6840:
  4934  002734                     
  4935                           ;RS232.c: 153:              {;RS232.c: 155:                 temp[0]=EUSART2_Read();
  4936  002734  ECC7  F01C         	call	_EUSART2_Read	;wreg free
  4937  002738  6E55               	movwf	ReadRX232@temp^0,c
  4938                           
  4939                           ;RS232.c: 158:                 EUSART2_Write(temp[0]);
  4940  00273A  5055               	movf	ReadRX232@temp^0,w,c
  4941  00273C  EC6A  F01C         	call	_EUSART2_Write
  4942  002740                     
  4943                           ;RS232.c: 160:                 if(temp[0]!='\r'){
  4944  002740  0E0D               	movlw	13
  4945  002742  1855               	xorwf	ReadRX232@temp^0,w,c
  4946  002744  B4D8               	btfsc	status,2,c
  4947  002746  EFA7  F013         	goto	u6851
  4948  00274A  EFA9  F013         	goto	u6850
  4949  00274E                     u6851:
  4950  00274E  EFB3  F013         	goto	l6946
  4951  002752                     u6850:
  4952  002752                     
  4953                           ;RS232.c: 161:                     strcat(Command, temp);
  4954  002752  0EE4               	movlw	low _Command
  4955  002754  6E13               	movwf	strcat@dest^0,c
  4956  002756  0E00               	movlw	high _Command
  4957  002758  6E14               	movwf	(strcat@dest+1)^0,c
  4958  00275A  0E55               	movlw	low ReadRX232@temp
  4959  00275C  6E15               	movwf	strcat@src^0,c
  4960  00275E  0E00               	movlw	high ReadRX232@temp
  4961  002760  6E16               	movwf	(strcat@src+1)^0,c
  4962  002762  ECFD  F01F         	call	_strcat	;wreg free
  4963  002766                     l6946:
  4964                           
  4965                           ;RS232.c: 164:                 if(strlen(Command)>NumChars)
  4966  002766  0EE4               	movlw	low _Command
  4967  002768  6E05               	movwf	strlen@s^0,c
  4968  00276A  0E00               	movlw	high _Command
  4969  00276C  6E06               	movwf	(strlen@s+1)^0,c
  4970  00276E  EC9A  F01D         	call	_strlen	;wreg free
  4971  002772  5005               	movf	?_strlen^0,w,c
  4972  002774  0100               	movlb	0	; () banked
  4973  002776  5D89               	subwf	ReadRX232@NumChars& (0+255),w,b
  4974  002778  5006               	movf	(?_strlen+1)^0,w,c
  4975  00277A  598A               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4976  00277C  B0D8               	btfsc	status,0,c
  4977  00277E  EFC3  F013         	goto	u6861
  4978  002782  EFC5  F013         	goto	u6860
  4979  002786                     u6861:
  4980  002786  EFD9  F013         	goto	l6950
  4981  00278A                     u6860:
  4982  00278A                     
  4983                           ; BSR set to: 0
  4984                           ;RS232.c: 165:                 {;RS232.c: 167:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  4985  00278A  0EE4               	movlw	low _Command
  4986  00278C  6E09               	movwf	memmove@d1^0,c
  4987  00278E  0E00               	movlw	high _Command
  4988  002790  6E0A               	movwf	(memmove@d1+1)^0,c
  4989  002792  0EE5               	movlw	low (_Command+1)
  4990  002794  6E0B               	movwf	memmove@s1^0,c
  4991  002796  0E00               	movlw	high (_Command+1)
  4992  002798  6E0C               	movwf	(memmove@s1+1)^0,c
  4993  00279A  0EE4               	movlw	low _Command
  4994  00279C  6E05               	movwf	strlen@s^0,c
  4995  00279E  0E00               	movlw	high _Command
  4996  0027A0  6E06               	movwf	(strlen@s+1)^0,c
  4997  0027A2  EC9A  F01D         	call	_strlen	;wreg free
  4998  0027A6  C005  F00D         	movff	?_strlen,memmove@n
  4999  0027AA  C006  F00E         	movff	?_strlen+1,memmove@n+1
  5000  0027AE  EC0F  F016         	call	_memmove	;wreg free
  5001  0027B2                     l6950:
  5002                           
  5003                           ;RS232.c: 171:                 if(temp[0]=='\r'){
  5004  0027B2  0E0D               	movlw	13
  5005  0027B4  1855               	xorwf	ReadRX232@temp^0,w,c
  5006  0027B6  A4D8               	btfss	status,2,c
  5007  0027B8  EFE0  F013         	goto	u6871
  5008  0027BC  EFE2  F013         	goto	u6870
  5009  0027C0                     u6871:
  5010  0027C0  EFEA  F013         	goto	l6958
  5011  0027C4                     u6870:
  5012  0027C4                     
  5013                           ;RS232.c: 173:                     temp[0]='z';
  5014  0027C4  0E7A               	movlw	122
  5015  0027C6  6E55               	movwf	ReadRX232@temp^0,c
  5016  0027C8                     
  5017                           ;RS232.c: 174:                     return NumChars;
  5018  0027C8  C089  F089         	movff	ReadRX232@NumChars,?_ReadRX232
  5019  0027CC  C08A  F08A         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  5020  0027D0  EF13  F014         	goto	l928
  5021  0027D4                     l6958:
  5022                           
  5023                           ;RS232.c: 177:         }while( temp[0] !='\r' );
  5024  0027D4  0E0D               	movlw	13
  5025  0027D6  1855               	xorwf	ReadRX232@temp^0,w,c
  5026  0027D8  A4D8               	btfss	status,2,c
  5027  0027DA  EFF1  F013         	goto	u6881
  5028  0027DE  EFF3  F013         	goto	u6880
  5029  0027E2                     u6881:
  5030  0027E2  EF90  F013         	goto	l6938
  5031  0027E6                     u6880:
  5032  0027E6                     
  5033                           ;RS232.c: 179:         Command[strlen(Command)-1] = '\0';
  5034  0027E6  0EE4               	movlw	low _Command
  5035  0027E8  6E05               	movwf	strlen@s^0,c
  5036  0027EA  0E00               	movlw	high _Command
  5037  0027EC  6E06               	movwf	(strlen@s+1)^0,c
  5038  0027EE  EC9A  F01D         	call	_strlen	;wreg free
  5039  0027F2  0EE3               	movlw	low (_Command+65535)
  5040  0027F4  2405               	addwf	?_strlen^0,w,c
  5041  0027F6  6ED9               	movwf	fsr2l,c
  5042  0027F8  0E00               	movlw	high (_Command+65535)
  5043  0027FA  2006               	addwfc	(?_strlen+1)^0,w,c
  5044  0027FC  6EDA               	movwf	fsr2h,c
  5045  0027FE  0E00               	movlw	0
  5046  002800  6EDF               	movwf	indf2,c
  5047  002802                     
  5048                           ;RS232.c: 181:         printf("\r\n\n");
  5049  002802  0E7A               	movlw	low (STR_55+65)
  5050  002804  0100               	movlb	0	; () banked
  5051  002806  6F7D               	movwf	printf@fmt& (0+255),b
  5052  002808  0EF9               	movlw	high (STR_55+65)
  5053  00280A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5054  00280C  ECE9  F01F         	call	_printf	;wreg free
  5055  002810                     
  5056                           ;RS232.c: 183:         strlen(Command);
  5057  002810  0EE4               	movlw	low _Command
  5058  002812  6E05               	movwf	strlen@s^0,c
  5059  002814  0E00               	movlw	high _Command
  5060  002816  6E06               	movwf	(strlen@s+1)^0,c
  5061  002818  EC9A  F01D         	call	_strlen	;wreg free
  5062  00281C                     l6966:
  5063                           
  5064                           ;RS232.c: 186:     return 0;
  5065  00281C  0E00               	movlw	0
  5066  00281E  0100               	movlb	0	; () banked
  5067  002820  6F8A               	movwf	(?_ReadRX232+1)& (0+255),b
  5068  002822  0E00               	movlw	0
  5069  002824  6F89               	movwf	?_ReadRX232& (0+255),b
  5070  002826                     l928:
  5071  002826  0012               	return		;funcret
  5072  002828                     __end_of_ReadRX232:
  5073                           	opt callstack 0
  5074                           
  5075 ;; *************** function _strcat *****************
  5076 ;; Defined at:
  5077 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  dest            2   18[COMRAM] PTR unsigned char 
  5080 ;;		 -> Command(16), 
  5081 ;;  src             2   20[COMRAM] PTR const unsigned char 
  5082 ;;		 -> ReadRX232@temp(2), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2   18[COMRAM] PTR unsigned char 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;Total ram usage:        4 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    5
  5101 ;; This function calls:
  5102 ;;		_strcpy
  5103 ;;		_strlen
  5104 ;; This function is called by:
  5105 ;;		_ReadRX232
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text5
  5110  003FFA                     __ptext5:
  5111                           	opt callstack 0
  5112  003FFA                     _strcat:
  5113                           	opt callstack 22
  5114  003FFA  C013  F005         	movff	strcat@dest,strlen@s
  5115  003FFE  C014  F006         	movff	strcat@dest+1,strlen@s+1
  5116  004002  EC9A  F01D         	call	_strlen	;wreg free
  5117  004006  5005               	movf	?_strlen^0,w,c
  5118  004008  2413               	addwf	strcat@dest^0,w,c
  5119  00400A  6E09               	movwf	strcpy@dest^0,c
  5120  00400C  5006               	movf	(?_strlen+1)^0,w,c
  5121  00400E  2014               	addwfc	(strcat@dest+1)^0,w,c
  5122  004010  6E0A               	movwf	(strcpy@dest+1)^0,c
  5123  004012  C015  F00B         	movff	strcat@src,strcpy@src
  5124  004016  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  5125  00401A  ECDD  F01B         	call	_strcpy	;wreg free
  5126  00401E  0012               	return		;funcret
  5127  004020                     __end_of_strcat:
  5128                           	opt callstack 0
  5129                           
  5130 ;; *************** function _strcpy *****************
  5131 ;; Defined at:
  5132 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  dest            2    8[COMRAM] PTR unsigned char 
  5135 ;;		 -> Command(16), 
  5136 ;;  src             2   10[COMRAM] PTR const unsigned char 
  5137 ;;		 -> STR_75(1), STR_70(1), ReadRX232@temp(2), STR_5(1), 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  d               2   16[COMRAM] PTR unsigned char 
  5140 ;;		 -> Command(16), 
  5141 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5142 ;;		 -> STR_75(1), STR_70(1), ReadRX232@temp(2), STR_5(1), 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  2    8[COMRAM] PTR unsigned char 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5153 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5155 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;Total ram usage:       10 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    4
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_main
  5163 ;;		_SaveCardDat
  5164 ;;		_strcat
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text6
  5169  0037BA                     __ptext6:
  5170                           	opt callstack 0
  5171  0037BA                     _strcpy:
  5172                           	opt callstack 26
  5173  0037BA  C00B  F00F         	movff	strcpy@src,strcpy@s
  5174  0037BE  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  5175  0037C2  C009  F011         	movff	strcpy@dest,strcpy@d
  5176  0037C6  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  5177  0037CA                     l6766:
  5178  0037CA  500F               	movf	strcpy@s^0,w,c
  5179  0037CC  6E0D               	movwf	??_strcpy^0,c
  5180  0037CE  5010               	movf	(strcpy@s+1)^0,w,c
  5181  0037D0  6E0E               	movwf	(??_strcpy+1)^0,c
  5182  0037D2  4A0F               	infsnz	strcpy@s^0,f,c
  5183  0037D4  2A10               	incf	(strcpy@s+1)^0,f,c
  5184  0037D6  C00D  FFF6         	movff	??_strcpy,tblptrl
  5185  0037DA  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  5186  0037DE  0E00               	movlw	low (__mediumconst shr (0+16))
  5187  0037E0  6EF8               	movwf	tblptru,c
  5188  0037E2  C011  FFD9         	movff	strcpy@d,fsr2l
  5189  0037E6  C012  FFDA         	movff	strcpy@d+1,fsr2h
  5190  0037EA  4A11               	infsnz	strcpy@d^0,f,c
  5191  0037EC  2A12               	incf	(strcpy@d+1)^0,f,c
  5192  0037EE  0E0E               	movlw	(high __ramtop+-1)
  5193  0037F0  64F7               	cpfsgt	tblptrh,c
  5194  0037F2  D003               	bra	u6567
  5195  0037F4  0008               	tblrd		*
  5196  0037F6  50F5               	movf	tablat,w,c
  5197  0037F8  D005               	bra	u6560
  5198  0037FA                     u6567:
  5199  0037FA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5200  0037FE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5201  003802  50EF               	movf	indf0,w,c
  5202  003804                     u6560:
  5203  003804  6EDF               	movwf	indf2,c
  5204  003806  50DF               	movf	indf2,w,c
  5205  003808  A4D8               	btfss	status,2,c
  5206  00380A  EF09  F01C         	goto	u6571
  5207  00380E  EF0B  F01C         	goto	u6570
  5208  003812                     u6571:
  5209  003812  EFE5  F01B         	goto	l6766
  5210  003816                     u6570:
  5211  003816  0012               	return		;funcret
  5212  003818                     __end_of_strcpy:
  5213                           	opt callstack 0
  5214                           
  5215 ;; *************** function _memmove *****************
  5216 ;; Defined at:
  5217 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  d1              2    8[COMRAM] PTR void 
  5220 ;;		 -> Command(16), 
  5221 ;;  s1              2   10[COMRAM] PTR const void 
  5222 ;;		 -> Command(16), 
  5223 ;;  n               2   12[COMRAM] unsigned int 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5226 ;;		 -> Command(16), 
  5227 ;;  d               2   16[COMRAM] PTR unsigned char 
  5228 ;;		 -> Command(16), 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  2    8[COMRAM] PTR void 
  5231 ;; Registers used:
  5232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5238 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5242 ;;Total ram usage:       12 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    4
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_ReadRX232
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text7
  5253  002C1E                     __ptext7:
  5254                           	opt callstack 0
  5255  002C1E                     _memmove:
  5256                           	opt callstack 23
  5257  002C1E  C00B  F013         	movff	memmove@s1,memmove@s
  5258  002C22  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  5259  002C26  C009  F011         	movff	memmove@d1,memmove@d
  5260  002C2A  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  5261  002C2E  5011               	movf	memmove@d^0,w,c
  5262  002C30  5C13               	subwf	memmove@s^0,w,c
  5263  002C32  5012               	movf	(memmove@d+1)^0,w,c
  5264  002C34  5814               	subwfb	(memmove@s+1)^0,w,c
  5265  002C36  B0D8               	btfsc	status,0,c
  5266  002C38  EF20  F016         	goto	u6691
  5267  002C3C  EF22  F016         	goto	u6690
  5268  002C40                     u6691:
  5269  002C40  EF59  F016         	goto	l6870
  5270  002C44                     u6690:
  5271  002C44  500D               	movf	memmove@n^0,w,c
  5272  002C46  2413               	addwf	memmove@s^0,w,c
  5273  002C48  6E0F               	movwf	??_memmove^0,c
  5274  002C4A  500E               	movf	(memmove@n+1)^0,w,c
  5275  002C4C  2014               	addwfc	(memmove@s+1)^0,w,c
  5276  002C4E  6E10               	movwf	(??_memmove+1)^0,c
  5277  002C50  500F               	movf	??_memmove^0,w,c
  5278  002C52  5C11               	subwf	memmove@d^0,w,c
  5279  002C54  5010               	movf	(??_memmove+1)^0,w,c
  5280  002C56  5812               	subwfb	(memmove@d+1)^0,w,c
  5281  002C58  B0D8               	btfsc	status,0,c
  5282  002C5A  EF31  F016         	goto	u6701
  5283  002C5E  EF33  F016         	goto	u6700
  5284  002C62                     u6701:
  5285  002C62  EF59  F016         	goto	l6870
  5286  002C66                     u6700:
  5287  002C66  500D               	movf	memmove@n^0,w,c
  5288  002C68  2613               	addwf	memmove@s^0,f,c
  5289  002C6A  500E               	movf	(memmove@n+1)^0,w,c
  5290  002C6C  2214               	addwfc	(memmove@s+1)^0,f,c
  5291  002C6E  500D               	movf	memmove@n^0,w,c
  5292  002C70  2611               	addwf	memmove@d^0,f,c
  5293  002C72  500E               	movf	(memmove@n+1)^0,w,c
  5294  002C74  2212               	addwfc	(memmove@d+1)^0,f,c
  5295  002C76                     l6866:
  5296  002C76  0613               	decf	memmove@s^0,f,c
  5297  002C78  A0D8               	btfss	status,0,c
  5298  002C7A  0614               	decf	(memmove@s+1)^0,f,c
  5299  002C7C  C013  FFD9         	movff	memmove@s,fsr2l
  5300  002C80  C014  FFDA         	movff	memmove@s+1,fsr2h
  5301  002C84  0611               	decf	memmove@d^0,f,c
  5302  002C86  A0D8               	btfss	status,0,c
  5303  002C88  0612               	decf	(memmove@d+1)^0,f,c
  5304  002C8A  C011  FFE1         	movff	memmove@d,fsr1l
  5305  002C8E  C012  FFE2         	movff	memmove@d+1,fsr1h
  5306  002C92  CFDF FFE7          	movff	indf2,indf1
  5307  002C96  060D               	decf	memmove@n^0,f,c
  5308  002C98  A0D8               	btfss	status,0,c
  5309  002C9A  060E               	decf	(memmove@n+1)^0,f,c
  5310  002C9C  500D               	movf	memmove@n^0,w,c
  5311  002C9E  100E               	iorwf	(memmove@n+1)^0,w,c
  5312  002CA0  A4D8               	btfss	status,2,c
  5313  002CA2  EF55  F016         	goto	u6711
  5314  002CA6  EF57  F016         	goto	u6710
  5315  002CAA                     u6711:
  5316  002CAA  EF3B  F016         	goto	l6866
  5317  002CAE                     u6710:
  5318  002CAE  EF7C  F016         	goto	l2057
  5319  002CB2                     l6870:
  5320  002CB2  500D               	movf	memmove@n^0,w,c
  5321  002CB4  100E               	iorwf	(memmove@n+1)^0,w,c
  5322  002CB6  B4D8               	btfsc	status,2,c
  5323  002CB8  EF60  F016         	goto	u6721
  5324  002CBC  EF62  F016         	goto	u6720
  5325  002CC0                     u6721:
  5326  002CC0  EF7C  F016         	goto	l2057
  5327  002CC4                     u6720:
  5328  002CC4                     l6872:
  5329  002CC4  C013  FFD9         	movff	memmove@s,fsr2l
  5330  002CC8  C014  FFDA         	movff	memmove@s+1,fsr2h
  5331  002CCC  C011  FFE1         	movff	memmove@d,fsr1l
  5332  002CD0  C012  FFE2         	movff	memmove@d+1,fsr1h
  5333  002CD4  CFDF FFE7          	movff	indf2,indf1
  5334  002CD8  4A13               	infsnz	memmove@s^0,f,c
  5335  002CDA  2A14               	incf	(memmove@s+1)^0,f,c
  5336  002CDC  4A11               	infsnz	memmove@d^0,f,c
  5337  002CDE  2A12               	incf	(memmove@d+1)^0,f,c
  5338  002CE0  060D               	decf	memmove@n^0,f,c
  5339  002CE2  A0D8               	btfss	status,0,c
  5340  002CE4  060E               	decf	(memmove@n+1)^0,f,c
  5341  002CE6  500D               	movf	memmove@n^0,w,c
  5342  002CE8  100E               	iorwf	(memmove@n+1)^0,w,c
  5343  002CEA  A4D8               	btfss	status,2,c
  5344  002CEC  EF7A  F016         	goto	u6731
  5345  002CF0  EF7C  F016         	goto	u6730
  5346  002CF4                     u6731:
  5347  002CF4  EF62  F016         	goto	l6872
  5348  002CF8                     u6730:
  5349  002CF8                     l2057:
  5350  002CF8  0012               	return		;funcret
  5351  002CFA                     __end_of_memmove:
  5352                           	opt callstack 0
  5353                           
  5354 ;; *************** function _EUSART2_is_rx_ready *****************
  5355 ;; Defined at:
  5356 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      _Bool 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;Total ram usage:        0 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    4
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_ReadRX232
  5381 ;;		_SaveCardDat
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text8
  5386  004084                     __ptext8:
  5387                           	opt callstack 0
  5388  004084                     _EUSART2_is_rx_ready:
  5389                           	opt callstack 23
  5390  004084                     
  5391                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  5392  004084  0100               	movlb	0	; () banked
  5393  004086  51E0               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5394  004088  A4D8               	btfss	status,2,c
  5395  00408A  EF49  F020         	goto	u6611
  5396  00408E  EF4C  F020         	goto	u6610
  5397  004092                     u6611:
  5398  004092  0E01               	movlw	1
  5399  004094  EF4D  F020         	goto	u6620
  5400  004098                     u6610:
  5401  004098  0E00               	movlw	0
  5402  00409A                     u6620:
  5403  00409A                     
  5404                           ; BSR set to: 0
  5405  00409A  0012               	return		;funcret
  5406  00409C                     __end_of_EUSART2_is_rx_ready:
  5407                           	opt callstack 0
  5408                           
  5409 ;; *************** function _EUSART2_Read *****************
  5410 ;; Defined at:
  5411 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;		None
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;  readValue       1    4[COMRAM] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      unsigned char 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5429 ;;Total ram usage:        1 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    4
  5432 ;; This function calls:
  5433 ;;		Nothing
  5434 ;; This function is called by:
  5435 ;;		_ReadRX232
  5436 ;;		_SaveCardDat
  5437 ;;		_getch
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text9
  5442  00398E                     __ptext9:
  5443                           	opt callstack 0
  5444  00398E                     _EUSART2_Read:
  5445                           	opt callstack 23
  5446  00398E                     l6818:
  5447                           
  5448                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  5449  00398E  0100               	movlb	0	; () banked
  5450  003990  51E0               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5451  003992  B4D8               	btfsc	status,2,c
  5452  003994  EFCE  F01C         	goto	u6631
  5453  003998  EFD0  F01C         	goto	u6630
  5454  00399C                     u6631:
  5455  00399C  EFC7  F01C         	goto	l6818
  5456  0039A0                     u6630:
  5457  0039A0                     
  5458                           ; BSR set to: 0
  5459                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  5460  0039A0  0E54               	movlw	low _eusart2RxStatusBuffer
  5461  0039A2  25E1               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  5462  0039A4  6ED9               	movwf	fsr2l,c
  5463  0039A6  6ADA               	clrf	fsr2h,c
  5464  0039A8  0E01               	movlw	high _eusart2RxStatusBuffer
  5465  0039AA  22DA               	addwfc	fsr2h,f,c
  5466  0039AC  50DF               	movf	indf2,w,c
  5467  0039AE  6FDF               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5468                           
  5469                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  5470  0039B0  0E64               	movlw	low _eusart2RxBuffer
  5471  0039B2  25E1               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  5472  0039B4  6ED9               	movwf	fsr2l,c
  5473  0039B6  6ADA               	clrf	fsr2h,c
  5474  0039B8  0E03               	movlw	high _eusart2RxBuffer
  5475  0039BA  22DA               	addwfc	fsr2h,f,c
  5476  0039BC  50DF               	movf	indf2,w,c
  5477  0039BE  6E05               	movwf	EUSART2_Read@readValue^0,c
  5478  0039C0                     
  5479                           ; BSR set to: 0
  5480  0039C0  2BE1               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  5481  0039C2                     
  5482                           ; BSR set to: 0
  5483                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  5484  0039C2  0E1F               	movlw	31
  5485  0039C4  65E1               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  5486  0039C6  EFE7  F01C         	goto	u6641
  5487  0039CA  EFE9  F01C         	goto	u6640
  5488  0039CE                     u6641:
  5489  0039CE  EFEB  F01C         	goto	l6828
  5490  0039D2                     u6640:
  5491  0039D2                     
  5492                           ; BSR set to: 0
  5493                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  5494  0039D2  0E00               	movlw	0
  5495  0039D4  6FE1               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5496  0039D6                     l6828:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  5500  0039D6  010E               	movlb	14	; () banked
  5501  0039D8  9FC5               	bcf	197,7,b	;volatile
  5502  0039DA                     
  5503                           ; BSR set to: 14
  5504                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  5505  0039DA  0100               	movlb	0	; () banked
  5506  0039DC  07E0               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  5507  0039DE                     
  5508                           ; BSR set to: 0
  5509                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  5510  0039DE  010E               	movlb	14	; () banked
  5511  0039E0  8FC5               	bsf	197,7,b	;volatile
  5512  0039E2                     
  5513                           ; BSR set to: 14
  5514                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  5515  0039E2  5005               	movf	EUSART2_Read@readValue^0,w,c
  5516  0039E4                     
  5517                           ; BSR set to: 14
  5518  0039E4  0012               	return		;funcret
  5519  0039E6                     __end_of_EUSART2_Read:
  5520                           	opt callstack 0
  5521                           
  5522 ;; *************** function _ClearEEAddRange *****************
  5523 ;; Defined at:
  5524 ;;		line 205 in file "RS232.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  StartAdd        2   41[BANK0 ] unsigned int 
  5527 ;;  NumBytes        2   43[BANK0 ] unsigned int 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  i               2   84[COMRAM] int 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5539 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5542 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5543 ;;Total ram usage:        6 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:   13
  5546 ;; This function calls:
  5547 ;;		_DATAEE_WriteByte
  5548 ;;		_printf
  5549 ;; This function is called by:
  5550 ;;		_SaveCardDat
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text10
  5555  003932                     __ptext10:
  5556                           	opt callstack 0
  5557  003932                     _ClearEEAddRange:
  5558                           	opt callstack 15
  5559  003932                     
  5560                           ;RS232.c: 208:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  5561  003932  0E7E               	movlw	low STR_68
  5562  003934  0100               	movlb	0	; () banked
  5563  003936  6F7D               	movwf	printf@fmt& (0+255),b
  5564  003938  0EF9               	movlw	high STR_68
  5565  00393A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5566  00393C  C089  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  5567  003940  C08A  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  5568  003944  C08B  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  5569  003948  C08C  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  5570  00394C  ECE9  F01F         	call	_printf	;wreg free
  5571  003950                     
  5572                           ;RS232.c: 210:     for(int i = 0; i<NumBytes; i++){
  5573  003950  0E00               	movlw	0
  5574  003952  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  5575  003954  0E00               	movlw	0
  5576  003956  6E55               	movwf	ClearEEAddRange@i^0,c
  5577  003958  EFBA  F01C         	goto	l7034
  5578  00395C                     l7030:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;RS232.c: 211:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  5582  00395C  5189               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  5583  00395E  2455               	addwf	ClearEEAddRange@i^0,w,c
  5584  003960  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  5585  003962  518A               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  5586  003964  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  5587  003966  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  5588  003968  0EFF               	movlw	255
  5589  00396A  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  5590  00396C  EC31  F01E         	call	_DATAEE_WriteByte	;wreg free
  5591  003970                     
  5592                           ;RS232.c: 212:     }
  5593  003970  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  5594  003972  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  5595  003974                     l7034:
  5596  003974  0100               	movlb	0	; () banked
  5597  003976  518B               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  5598  003978  5C55               	subwf	ClearEEAddRange@i^0,w,c
  5599  00397A  518C               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  5600  00397C  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  5601  00397E  A0D8               	btfss	status,0,c
  5602  003980  EFC4  F01C         	goto	u6961
  5603  003984  EFC6  F01C         	goto	u6960
  5604  003988                     u6961:
  5605  003988  EFAE  F01C         	goto	l7030
  5606  00398C                     u6960:
  5607  00398C                     
  5608                           ; BSR set to: 0
  5609  00398C  0012               	return		;funcret
  5610  00398E                     __end_of_ClearEEAddRange:
  5611                           	opt callstack 0
  5612                           
  5613 ;; *************** function _DATAEE_WriteByte *****************
  5614 ;; Defined at:
  5615 ;;		line 165 in file "mcc_generated_files/memory.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  bAdd            2    4[COMRAM] unsigned short 
  5618 ;;  bData           1    6[COMRAM] unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5630 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;Total ram usage:        4 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    4
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_ClearEEAddRange
  5641 ;;		_SaveCardDat
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text11
  5646  003C62                     __ptext11:
  5647                           	opt callstack 0
  5648  003C62                     _DATAEE_WriteByte:
  5649                           	opt callstack 24
  5650  003C62                     
  5651                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  5652  003C62  0E00               	movlw	0
  5653  003C64  BEF2               	btfsc	242,7,c	;volatile
  5654  003C66  0E01               	movlw	1
  5655  003C68  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  5656  003C6A                     
  5657                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  5658  003C6A  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  5659  003C6C  0B03               	andlw	3
  5660  003C6E  6E7F               	movwf	127,c	;volatile
  5661  003C70                     
  5662                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  5663  003C70  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  5664  003C74                     
  5665                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  5666  003C74  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  5667  003C78                     
  5668                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  5669  003C78  0E3F               	movlw	-193
  5670  003C7A  1681               	andwf	129,f,c	;volsfr
  5671  003C7C                     
  5672                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  5673  003C7C  8481               	bsf	129,2,c	;volsfr
  5674  003C7E                     
  5675                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  5676  003C7E  9EF2               	bcf	242,7,c	;volatile
  5677  003C80                     
  5678                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  5679  003C80  0E55               	movlw	85
  5680  003C82  6E82               	movwf	130,c	;volsfr
  5681  003C84                     
  5682                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  5683  003C84  0EAA               	movlw	170
  5684  003C86  6E82               	movwf	130,c	;volsfr
  5685  003C88                     
  5686                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  5687  003C88  8281               	bsf	129,1,c	;volsfr
  5688  003C8A                     l216:
  5689                           
  5690                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  5691  003C8A  B281               	btfsc	129,1,c	;volsfr
  5692  003C8C  EF4A  F01E         	goto	u6591
  5693  003C90  EF4C  F01E         	goto	u6590
  5694  003C94                     u6591:
  5695  003C94  EF45  F01E         	goto	l216
  5696  003C98                     u6590:
  5697  003C98                     
  5698                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  5699  003C98  9481               	bcf	129,2,c	;volsfr
  5700                           
  5701                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  5702  003C9A  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  5703  003C9C  D002               	bra	u6605
  5704  003C9E  9EF2               	bcf	242,7,c	;volatile
  5705  003CA0  D001               	bra	u6606
  5706  003CA2                     u6605:
  5707  003CA2  8EF2               	bsf	242,7,c	;volatile
  5708  003CA4                     u6606:
  5709  003CA4  0012               	return		;funcret
  5710  003CA6                     __end_of_DATAEE_WriteByte:
  5711                           	opt callstack 0
  5712                           
  5713 ;; *************** function _InitialiseString *****************
  5714 ;; Defined at:
  5715 ;;		line 59 in file "RS232.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  Partial         1    wreg     _Bool 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  Partial         1   90[BANK0 ] _Bool 
  5720 ;;  convertedVal    2   91[BANK0 ] unsigned short 
  5721 ;;  i               2  101[BANK0 ] int 
  5722 ;;  i               2   99[BANK0 ] int 
  5723 ;;  PartNum        19   41[BANK0 ] unsigned char [19]
  5724 ;;  SerialNum      11   79[BANK0 ] unsigned char [11]
  5725 ;;  Date           11   60[BANK0 ] unsigned char [11]
  5726 ;;  Time            8   71[BANK0 ] unsigned char [8]
  5727 ;;  RevNum          2   93[BANK0 ] unsigned char [2]
  5728 ;;  j               2   97[BANK0 ] int 
  5729 ;;  readDataEven    1   96[BANK0 ] unsigned char 
  5730 ;;  readDataOdd     1   95[BANK0 ] unsigned char 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;      Totals:         2      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;Total ram usage:       64 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:   13
  5747 ;; This function calls:
  5748 ;;		_ADCC_GetSingleConversion
  5749 ;;		_CardConfigIni
  5750 ;;		_printf
  5751 ;; This function is called by:
  5752 ;;		_main
  5753 ;;		_ValidateCmd
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text12
  5758  000BA2                     __ptext12:
  5759                           	opt callstack 0
  5760  000BA2                     _InitialiseString:
  5761                           	opt callstack 16
  5762                           
  5763                           ;incstack = 0
  5764                           ;InitialiseString@Partial stored from wreg
  5765  000BA2  0100               	movlb	0	; () banked
  5766  000BA4  6FBA               	movwf	InitialiseString@Partial& (0+255),b
  5767  000BA6                     
  5768                           ;RS232.c: 61:     char readDataOdd, readDataEven;;RS232.c: 63:     char SerialNum[11] = 
      +                          { '\0' };
  5769  000BA6  EE20  F0AF         	lfsr	2,InitialiseString@SerialNum
  5770  000BAA  0E0A               	movlw	10
  5771  000BAC                     u7011:
  5772  000BAC  6ADE               	clrf	postinc2,c
  5773  000BAE  06E8               	decf	wreg,f,c
  5774  000BB0  E2FD               	bc	u7011
  5775  000BB2                     
  5776                           ;RS232.c: 65:     CardConfigIni("Serial", SerialNum,0x0300,5);
  5777  000BB2  0ED7               	movlw	low STR_29
  5778  000BB4  6E0A               	movwf	CardConfigIni@Name^0,c
  5779  000BB6  0EFF               	movlw	high STR_29
  5780  000BB8  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5781  000BBA  0EAF               	movlw	low InitialiseString@SerialNum
  5782  000BBC  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5783  000BBE  0E00               	movlw	high InitialiseString@SerialNum
  5784  000BC0  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5785  000BC2  0E03               	movlw	3
  5786  000BC4  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5787  000BC6  0E00               	movlw	0
  5788  000BC8  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5789  000BCA  0E00               	movlw	0
  5790  000BCC  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5791  000BCE  0E05               	movlw	5
  5792  000BD0  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5793  000BD2  EC79  F00B         	call	_CardConfigIni	;wreg free
  5794  000BD6                     
  5795                           ;RS232.c: 67:     char PartNum[19] = { '\0' };
  5796  000BD6  EE20  F089         	lfsr	2,InitialiseString@PartNum
  5797  000BDA  0E12               	movlw	18
  5798  000BDC                     u7021:
  5799  000BDC  6ADE               	clrf	postinc2,c
  5800  000BDE  06E8               	decf	wreg,f,c
  5801  000BE0  E2FD               	bc	u7021
  5802                           
  5803                           ;RS232.c: 68:     CardConfigIni("Part", PartNum,0x0100,8);
  5804  000BE2  0EEB               	movlw	low STR_31
  5805  000BE4  6E0A               	movwf	CardConfigIni@Name^0,c
  5806  000BE6  0EFF               	movlw	high STR_31
  5807  000BE8  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5808  000BEA  0E89               	movlw	low InitialiseString@PartNum
  5809  000BEC  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5810  000BEE  0E00               	movlw	high InitialiseString@PartNum
  5811  000BF0  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5812  000BF2  0E01               	movlw	1
  5813  000BF4  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5814  000BF6  0E00               	movlw	0
  5815  000BF8  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5816  000BFA  0E00               	movlw	0
  5817  000BFC  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5818  000BFE  0E08               	movlw	8
  5819  000C00  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5820  000C02  EC79  F00B         	call	_CardConfigIni	;wreg free
  5821  000C06                     
  5822                           ;RS232.c: 70:     char RevNum[2] = { '\0' };
  5823  000C06  0E00               	movlw	0
  5824  000C08  0100               	movlb	0	; () banked
  5825  000C0A  6FBE               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  5826  000C0C  0E00               	movlw	0
  5827  000C0E  6FBD               	movwf	InitialiseString@RevNum& (0+255),b
  5828  000C10                     
  5829                           ; BSR set to: 0
  5830                           ;RS232.c: 71:     CardConfigIni("Rev", RevNum,0x0200,1);
  5831  000C10  0EF5               	movlw	low STR_33
  5832  000C12  6E0A               	movwf	CardConfigIni@Name^0,c
  5833  000C14  0EFF               	movlw	high STR_33
  5834  000C16  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5835  000C18  0EBD               	movlw	low InitialiseString@RevNum
  5836  000C1A  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5837  000C1C  0E00               	movlw	high InitialiseString@RevNum
  5838  000C1E  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5839  000C20  0E02               	movlw	2
  5840  000C22  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5841  000C24  0E00               	movlw	0
  5842  000C26  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5843  000C28  0E00               	movlw	0
  5844  000C2A  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5845  000C2C  0E01               	movlw	1
  5846  000C2E  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5847  000C30  EC79  F00B         	call	_CardConfigIni	;wreg free
  5848  000C34                     
  5849                           ;RS232.c: 75:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  5850  000C34  0E60               	movlw	low STR_38
  5851  000C36  0100               	movlb	0	; () banked
  5852  000C38  6F7D               	movwf	printf@fmt& (0+255),b
  5853  000C3A  0EFB               	movlw	high STR_38
  5854  000C3C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5855  000C3E  ECE9  F01F         	call	_printf	;wreg free
  5856  000C42                     
  5857                           ;RS232.c: 79:     printf("Card Ser No. %s \r\n",SerialNum);
  5858  000C42  0E13               	movlw	low STR_39
  5859  000C44  0100               	movlb	0	; () banked
  5860  000C46  6F7D               	movwf	printf@fmt& (0+255),b
  5861  000C48  0EFF               	movlw	high STR_39
  5862  000C4A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5863  000C4C  0EAF               	movlw	low InitialiseString@SerialNum
  5864  000C4E  6F7F               	movwf	(?_printf+2)& (0+255),b
  5865  000C50  0E00               	movlw	high InitialiseString@SerialNum
  5866  000C52  6F80               	movwf	(?_printf+3)& (0+255),b
  5867  000C54  ECE9  F01F         	call	_printf	;wreg free
  5868  000C58                     
  5869                           ;RS232.c: 80:     printf("Card Part No. %s \r\n",PartNum);
  5870  000C58  0EFF               	movlw	low STR_40
  5871  000C5A  0100               	movlb	0	; () banked
  5872  000C5C  6F7D               	movwf	printf@fmt& (0+255),b
  5873  000C5E  0EFE               	movlw	high STR_40
  5874  000C60  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5875  000C62  0E89               	movlw	low InitialiseString@PartNum
  5876  000C64  6F7F               	movwf	(?_printf+2)& (0+255),b
  5877  000C66  0E00               	movlw	high InitialiseString@PartNum
  5878  000C68  6F80               	movwf	(?_printf+3)& (0+255),b
  5879  000C6A  ECE9  F01F         	call	_printf	;wreg free
  5880  000C6E                     
  5881                           ;RS232.c: 81:     printf("Card Revision. %s \r\n",RevNum);
  5882  000C6E  0ED5               	movlw	low STR_41
  5883  000C70  0100               	movlb	0	; () banked
  5884  000C72  6F7D               	movwf	printf@fmt& (0+255),b
  5885  000C74  0EFE               	movlw	high STR_41
  5886  000C76  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5887  000C78  0EBD               	movlw	low InitialiseString@RevNum
  5888  000C7A  6F7F               	movwf	(?_printf+2)& (0+255),b
  5889  000C7C  0E00               	movlw	high InitialiseString@RevNum
  5890  000C7E  6F80               	movwf	(?_printf+3)& (0+255),b
  5891  000C80  ECE9  F01F         	call	_printf	;wreg free
  5892  000C84                     
  5893                           ;RS232.c: 82:     printf("Card Address. 0x05 \r\n");
  5894  000C84  0E7D               	movlw	low STR_42
  5895  000C86  0100               	movlb	0	; () banked
  5896  000C88  6F7D               	movwf	printf@fmt& (0+255),b
  5897  000C8A  0EFE               	movlw	high STR_42
  5898  000C8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5899  000C8E  ECE9  F01F         	call	_printf	;wreg free
  5900  000C92                     
  5901                           ;RS232.c: 83:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  5902  000C92  0EE4               	movlw	low STR_43
  5903  000C94  0100               	movlb	0	; () banked
  5904  000C96  6F7D               	movwf	printf@fmt& (0+255),b
  5905  000C98  0EFA               	movlw	high STR_43
  5906  000C9A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5907  000C9C  0EC2               	movlw	low STR_44
  5908  000C9E  6F7F               	movwf	(?_printf+2)& (0+255),b
  5909  000CA0  0EFF               	movlw	high STR_44
  5910  000CA2  6F80               	movwf	(?_printf+3)& (0+255),b
  5911  000CA4  0ECE               	movlw	low STR_45
  5912  000CA6  6F81               	movwf	(?_printf+4)& (0+255),b
  5913  000CA8  0EFF               	movlw	high STR_45
  5914  000CAA  6F82               	movwf	(?_printf+5)& (0+255),b
  5915  000CAC  0E08               	movlw	8
  5916  000CAE  6F84               	movwf	(?_printf+7)& (0+255),b
  5917  000CB0  0E34               	movlw	52
  5918  000CB2  6F83               	movwf	(?_printf+6)& (0+255),b
  5919  000CB4  ECE9  F01F         	call	_printf	;wreg free
  5920                           
  5921                           ;RS232.c: 86:     int j = 0;
  5922  000CB8  0E00               	movlw	0
  5923  000CBA  0100               	movlb	0	; () banked
  5924  000CBC  6FC2               	movwf	(InitialiseString@j+1)& (0+255),b
  5925  000CBE  0E00               	movlw	0
  5926  000CC0  6FC1               	movwf	InitialiseString@j& (0+255),b
  5927  000CC2                     
  5928                           ; BSR set to: 0
  5929                           ;RS232.c: 89:     char Date[11] = "Mar 25 2021";
  5930  000CC2  EE21  F02A         	lfsr	2,InitialiseString@F10763
  5931  000CC6  EE10  F09C         	lfsr	1,InitialiseString@Date
  5932  000CCA  0E0A               	movlw	10
  5933  000CCC                     u7031:
  5934  000CCC  CFDB FFE3          	movff	plusw2,plusw1
  5935  000CD0  06E8               	decf	wreg,f,c
  5936  000CD2  E2FC               	bc	u7031
  5937  000CD4                     
  5938                           ; BSR set to: 0
  5939                           ;RS232.c: 90:     for(int i=0; i<12; i = i+2){
  5940  000CD4  0E00               	movlw	0
  5941  000CD6  6FC4               	movwf	(InitialiseString@i+1)& (0+255),b
  5942  000CD8  0E00               	movlw	0
  5943  000CDA  6FC3               	movwf	InitialiseString@i& (0+255),b
  5944  000CDC                     l7182:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;RS232.c: 91:         readDataOdd = Date[i];
  5948  000CDC  0E9C               	movlw	low InitialiseString@Date
  5949  000CDE  25C3               	addwf	InitialiseString@i& (0+255),w,b
  5950  000CE0  6ED9               	movwf	fsr2l,c
  5951  000CE2  0E00               	movlw	high InitialiseString@Date
  5952  000CE4  21C4               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  5953  000CE6  6EDA               	movwf	fsr2h,c
  5954  000CE8  50DF               	movf	indf2,w,c
  5955  000CEA  6FBF               	movwf	InitialiseString@readDataOdd& (0+255),b
  5956                           
  5957                           ;RS232.c: 92:         readDataEven = Date[i +1];
  5958  000CEC  0E01               	movlw	1
  5959  000CEE  25C3               	addwf	InitialiseString@i& (0+255),w,b
  5960  000CF0  6E55               	movwf	??_InitialiseString^0,c
  5961  000CF2  0E00               	movlw	0
  5962  000CF4  21C4               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  5963  000CF6  6E56               	movwf	(??_InitialiseString+1)^0,c
  5964  000CF8  0E9C               	movlw	low InitialiseString@Date
  5965  000CFA  2455               	addwf	??_InitialiseString^0,w,c
  5966  000CFC  6ED9               	movwf	fsr2l,c
  5967  000CFE  0E00               	movlw	high InitialiseString@Date
  5968  000D00  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  5969  000D02  6EDA               	movwf	fsr2h,c
  5970  000D04  50DF               	movf	indf2,w,c
  5971  000D06  6FC0               	movwf	InitialiseString@readDataEven& (0+255),b
  5972                           
  5973                           ;RS232.c: 93:         MB304xx[j] = readDataOdd *256 + readDataEven;
  5974  000D08  51C0               	movf	InitialiseString@readDataEven& (0+255),w,b
  5975  000D0A  C0BF  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  5976  000D0E  6A56               	clrf	(??_InitialiseString+1)^0,c
  5977  000D10  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  5978  000D14  6A55               	clrf	??_InitialiseString^0,c
  5979  000D16  2655               	addwf	??_InitialiseString^0,f,c
  5980  000D18  0E00               	movlw	0
  5981  000D1A  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  5982  000D1C  90D8               	bcf	status,0,c
  5983  000D1E  35C1               	rlcf	InitialiseString@j& (0+255),w,b
  5984  000D20  6ED9               	movwf	fsr2l,c
  5985  000D22  35C2               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  5986  000D24  6EDA               	movwf	fsr2h,c
  5987  000D26  0E1E               	movlw	low _MB304xx
  5988  000D28  26D9               	addwf	fsr2l,f,c
  5989  000D2A  0E01               	movlw	high _MB304xx
  5990  000D2C  22DA               	addwfc	fsr2h,f,c
  5991  000D2E  C055  FFDE         	movff	??_InitialiseString,postinc2
  5992  000D32  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  5993  000D36                     
  5994                           ; BSR set to: 0
  5995                           ;RS232.c: 94:         j++;
  5996  000D36  4BC1               	infsnz	InitialiseString@j& (0+255),f,b
  5997  000D38  2BC2               	incf	(InitialiseString@j+1)& (0+255),f,b
  5998  000D3A                     
  5999                           ; BSR set to: 0
  6000                           ;RS232.c: 95:     }
  6001  000D3A  0E02               	movlw	2
  6002  000D3C  25C3               	addwf	InitialiseString@i& (0+255),w,b
  6003  000D3E  6FC3               	movwf	InitialiseString@i& (0+255),b
  6004  000D40  0E00               	movlw	0
  6005  000D42  21C4               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  6006  000D44  6FC4               	movwf	(InitialiseString@i+1)& (0+255),b
  6007  000D46                     
  6008                           ; BSR set to: 0
  6009  000D46  BFC4               	btfsc	(InitialiseString@i+1)& (0+255),7,b
  6010  000D48  EFAF  F006         	goto	u7041
  6011  000D4C  51C4               	movf	(InitialiseString@i+1)& (0+255),w,b
  6012  000D4E  E109               	bnz	u7040
  6013  000D50  0E0C               	movlw	12
  6014  000D52  5DC3               	subwf	InitialiseString@i& (0+255),w,b
  6015  000D54  A0D8               	btfss	status,0,c
  6016  000D56  EFAF  F006         	goto	u7041
  6017  000D5A  EFB1  F006         	goto	u7040
  6018  000D5E                     u7041:
  6019  000D5E  EF6E  F006         	goto	l7182
  6020  000D62                     u7040:
  6021  000D62                     
  6022                           ; BSR set to: 0
  6023                           ;RS232.c: 98:     j = 0;
  6024  000D62  0E00               	movlw	0
  6025  000D64  6FC2               	movwf	(InitialiseString@j+1)& (0+255),b
  6026  000D66  0E00               	movlw	0
  6027  000D68  6FC1               	movwf	InitialiseString@j& (0+255),b
  6028  000D6A                     
  6029                           ; BSR set to: 0
  6030                           ;RS232.c: 99:     char Time[8] = "00:23:59";
  6031  000D6A  EE21  F03F         	lfsr	2,InitialiseString@F10766
  6032  000D6E  EE10  F0A7         	lfsr	1,InitialiseString@Time
  6033  000D72  0E07               	movlw	7
  6034  000D74                     u7051:
  6035  000D74  CFDB FFE3          	movff	plusw2,plusw1
  6036  000D78  06E8               	decf	wreg,f,c
  6037  000D7A  E2FC               	bc	u7051
  6038  000D7C                     
  6039                           ; BSR set to: 0
  6040                           ;RS232.c: 100:     for(int i=0; i<8; i = i+2){
  6041  000D7C  0E00               	movlw	0
  6042  000D7E  6FC6               	movwf	(InitialiseString@i_1443+1)& (0+255),b
  6043  000D80  0E00               	movlw	0
  6044  000D82  6FC5               	movwf	InitialiseString@i_1443& (0+255),b
  6045  000D84                     l7200:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;RS232.c: 101:         readDataOdd = Time[i];
  6049  000D84  0EA7               	movlw	low InitialiseString@Time
  6050  000D86  25C5               	addwf	InitialiseString@i_1443& (0+255),w,b
  6051  000D88  6ED9               	movwf	fsr2l,c
  6052  000D8A  0E00               	movlw	high InitialiseString@Time
  6053  000D8C  21C6               	addwfc	(InitialiseString@i_1443+1)& (0+255),w,b
  6054  000D8E  6EDA               	movwf	fsr2h,c
  6055  000D90  50DF               	movf	indf2,w,c
  6056  000D92  6FBF               	movwf	InitialiseString@readDataOdd& (0+255),b
  6057                           
  6058                           ;RS232.c: 102:         readDataEven = Time[i +1];
  6059  000D94  0E01               	movlw	1
  6060  000D96  25C5               	addwf	InitialiseString@i_1443& (0+255),w,b
  6061  000D98  6E55               	movwf	??_InitialiseString^0,c
  6062  000D9A  0E00               	movlw	0
  6063  000D9C  21C6               	addwfc	(InitialiseString@i_1443+1)& (0+255),w,b
  6064  000D9E  6E56               	movwf	(??_InitialiseString+1)^0,c
  6065  000DA0  0EA7               	movlw	low InitialiseString@Time
  6066  000DA2  2455               	addwf	??_InitialiseString^0,w,c
  6067  000DA4  6ED9               	movwf	fsr2l,c
  6068  000DA6  0E00               	movlw	high InitialiseString@Time
  6069  000DA8  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  6070  000DAA  6EDA               	movwf	fsr2h,c
  6071  000DAC  50DF               	movf	indf2,w,c
  6072  000DAE  6FC0               	movwf	InitialiseString@readDataEven& (0+255),b
  6073                           
  6074                           ;RS232.c: 103:         MB305xx[j] = readDataOdd *256 + readDataEven;
  6075  000DB0  51C0               	movf	InitialiseString@readDataEven& (0+255),w,b
  6076  000DB2  C0BF  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  6077  000DB6  6A56               	clrf	(??_InitialiseString+1)^0,c
  6078  000DB8  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  6079  000DBC  6A55               	clrf	??_InitialiseString^0,c
  6080  000DBE  2655               	addwf	??_InitialiseString^0,f,c
  6081  000DC0  0E00               	movlw	0
  6082  000DC2  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  6083  000DC4  90D8               	bcf	status,0,c
  6084  000DC6  35C1               	rlcf	InitialiseString@j& (0+255),w,b
  6085  000DC8  6ED9               	movwf	fsr2l,c
  6086  000DCA  35C2               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  6087  000DCC  6EDA               	movwf	fsr2h,c
  6088  000DCE  0E00               	movlw	low _MB305xx
  6089  000DD0  26D9               	addwf	fsr2l,f,c
  6090  000DD2  0E01               	movlw	high _MB305xx
  6091  000DD4  22DA               	addwfc	fsr2h,f,c
  6092  000DD6  C055  FFDE         	movff	??_InitialiseString,postinc2
  6093  000DDA  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  6094  000DDE                     
  6095                           ; BSR set to: 0
  6096                           ;RS232.c: 104:         j++;
  6097  000DDE  4BC1               	infsnz	InitialiseString@j& (0+255),f,b
  6098  000DE0  2BC2               	incf	(InitialiseString@j+1)& (0+255),f,b
  6099  000DE2                     
  6100                           ; BSR set to: 0
  6101                           ;RS232.c: 105:     }
  6102  000DE2  0E02               	movlw	2
  6103  000DE4  25C5               	addwf	InitialiseString@i_1443& (0+255),w,b
  6104  000DE6  6FC5               	movwf	InitialiseString@i_1443& (0+255),b
  6105  000DE8  0E00               	movlw	0
  6106  000DEA  21C6               	addwfc	(InitialiseString@i_1443+1)& (0+255),w,b
  6107  000DEC  6FC6               	movwf	(InitialiseString@i_1443+1)& (0+255),b
  6108  000DEE                     
  6109                           ; BSR set to: 0
  6110  000DEE  BFC6               	btfsc	(InitialiseString@i_1443+1)& (0+255),7,b
  6111  000DF0  EF03  F007         	goto	u7061
  6112  000DF4  51C6               	movf	(InitialiseString@i_1443+1)& (0+255),w,b
  6113  000DF6  E109               	bnz	u7060
  6114  000DF8  0E08               	movlw	8
  6115  000DFA  5DC5               	subwf	InitialiseString@i_1443& (0+255),w,b
  6116  000DFC  A0D8               	btfss	status,0,c
  6117  000DFE  EF03  F007         	goto	u7061
  6118  000E02  EF05  F007         	goto	u7060
  6119  000E06                     u7061:
  6120  000E06  EFC2  F006         	goto	l7200
  6121  000E0A                     u7060:
  6122  000E0A                     
  6123                           ; BSR set to: 0
  6124                           ;RS232.c: 108:     if(Partial != 1){
  6125  000E0A  05BA               	decf	InitialiseString@Partial& (0+255),w,b
  6126  000E0C  B4D8               	btfsc	status,2,c
  6127  000E0E  EF0B  F007         	goto	u7071
  6128  000E12  EF0D  F007         	goto	u7070
  6129  000E16                     u7071:
  6130  000E16  EF9C  F007         	goto	l917
  6131  000E1A                     u7070:
  6132  000E1A                     
  6133                           ; BSR set to: 0
  6134                           ;RS232.c: 109:         printf("Initalisation Complete - Ready\r\n\n");
  6135  000E1A  0E40               	movlw	low STR_46
  6136  000E1C  6F7D               	movwf	printf@fmt& (0+255),b
  6137  000E1E  0EFC               	movlw	high STR_46
  6138  000E20  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6139  000E22  ECE9  F01F         	call	_printf	;wreg free
  6140                           
  6141                           ;RS232.c: 110:         printf("Modbus Function Codes Supported:\r\n\n");
  6142  000E26  0EF8               	movlw	low STR_47
  6143  000E28  0100               	movlb	0	; () banked
  6144  000E2A  6F7D               	movwf	printf@fmt& (0+255),b
  6145  000E2C  0EFB               	movlw	high STR_47
  6146  000E2E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6147  000E30  ECE9  F01F         	call	_printf	;wreg free
  6148                           
  6149                           ;RS232.c: 111:         printf("   0x03 - Read Multiple 16bit Registers\r\n");
  6150  000E34  0E0E               	movlw	low STR_48
  6151  000E36  0100               	movlb	0	; () banked
  6152  000E38  6F7D               	movwf	printf@fmt& (0+255),b
  6153  000E3A  0EFB               	movlw	high STR_48
  6154  000E3C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6155  000E3E  ECE9  F01F         	call	_printf	;wreg free
  6156                           
  6157                           ;RS232.c: 112:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  6158  000E42  0EF0               	movlw	low STR_49
  6159  000E44  0100               	movlb	0	; () banked
  6160  000E46  6F7D               	movwf	printf@fmt& (0+255),b
  6161  000E48  0EF8               	movlw	high STR_49
  6162  000E4A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6163  000E4C  ECE9  F01F         	call	_printf	;wreg free
  6164                           
  6165                           ;RS232.c: 113:         printf("      Add 0x0100 to 0x0108 - Part Number\r\n");
  6166  000E50  0EB9               	movlw	low STR_50
  6167  000E52  0100               	movlb	0	; () banked
  6168  000E54  6F7D               	movwf	printf@fmt& (0+255),b
  6169  000E56  0EFA               	movlw	high STR_50
  6170  000E58  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6171  000E5A  ECE9  F01F         	call	_printf	;wreg free
  6172                           
  6173                           ;RS232.c: 114:         printf("      Add 0x0200 - Revision\r\n");
  6174  000E5E  0E25               	movlw	low STR_51
  6175  000E60  0100               	movlb	0	; () banked
  6176  000E62  6F7D               	movwf	printf@fmt& (0+255),b
  6177  000E64  0EFD               	movlw	high STR_51
  6178  000E66  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6179  000E68  ECE9  F01F         	call	_printf	;wreg free
  6180                           
  6181                           ;RS232.c: 115:         printf("      Add 0x0300 to 0x0304 - Revision\r\n");
  6182  000E6C  0E38               	movlw	low STR_52
  6183  000E6E  0100               	movlb	0	; () banked
  6184  000E70  6F7D               	movwf	printf@fmt& (0+255),b
  6185  000E72  0EFB               	movlw	high STR_52
  6186  000E74  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6187  000E76  ECE9  F01F         	call	_printf	;wreg free
  6188                           
  6189                           ;RS232.c: 116:         printf("      Add 0x0400 to 0x0405 - Compile Date (ASCII)\r\n");
  6190  000E7A  0E59               	movlw	low STR_53
  6191  000E7C  0100               	movlb	0	; () banked
  6192  000E7E  6F7D               	movwf	printf@fmt& (0+255),b
  6193  000E80  0EFA               	movlw	high STR_53
  6194  000E82  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6195  000E84  ECE9  F01F         	call	_printf	;wreg free
  6196                           
  6197                           ;RS232.c: 117:         printf("      Add 0x0500 to 0x0504 - Compile Time - (ASCII)\r\n")
      +                          ;
  6198  000E88  0EB8               	movlw	low STR_54
  6199  000E8A  0100               	movlb	0	; () banked
  6200  000E8C  6F7D               	movwf	printf@fmt& (0+255),b
  6201  000E8E  0EF9               	movlw	high STR_54
  6202  000E90  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6203  000E92  ECE9  F01F         	call	_printf	;wreg free
  6204                           
  6205                           ;RS232.c: 118:         printf("      Add 0x0600 to 0x0602 - 3x Analogue Inputs (0x000 to
      +                           0x03ff)\r\n\n");
  6206  000E96  0E39               	movlw	low STR_55
  6207  000E98  0100               	movlb	0	; () banked
  6208  000E9A  6F7D               	movwf	printf@fmt& (0+255),b
  6209  000E9C  0EF9               	movlw	high STR_55
  6210  000E9E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6211  000EA0  ECE9  F01F         	call	_printf	;wreg free
  6212                           
  6213                           ;RS232.c: 119:         printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n");
  6214  000EA4  0E24               	movlw	low STR_56
  6215  000EA6  0100               	movlb	0	; () banked
  6216  000EA8  6F7D               	movwf	printf@fmt& (0+255),b
  6217  000EAA  0EFA               	movlw	high STR_56
  6218  000EAC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6219  000EAE  ECE9  F01F         	call	_printf	;wreg free
  6220                           
  6221                           ;RS232.c: 120:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  6222  000EB2  0EA5               	movlw	low STR_57
  6223  000EB4  0100               	movlb	0	; () banked
  6224  000EB6  6F7D               	movwf	printf@fmt& (0+255),b
  6225  000EB8  0EF8               	movlw	high STR_57
  6226  000EBA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6227  000EBC  ECE9  F01F         	call	_printf	;wreg free
  6228                           
  6229                           ;RS232.c: 122:         printf("Commands Supported:\r\n");
  6230  000EC0  0E93               	movlw	low STR_58
  6231  000EC2  0100               	movlb	0	; () banked
  6232  000EC4  6F7D               	movwf	printf@fmt& (0+255),b
  6233  000EC6  0EFE               	movlw	high STR_58
  6234  000EC8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6235  000ECA  ECE9  F01F         	call	_printf	;wreg free
  6236                           
  6237                           ;RS232.c: 123:         printf("   ? - Initalise and display card details\r\n");
  6238  000ECE  0E8D               	movlw	low STR_59
  6239  000ED0  0100               	movlb	0	; () banked
  6240  000ED2  6F7D               	movwf	printf@fmt& (0+255),b
  6241  000ED4  0EFA               	movlw	high STR_59
  6242  000ED6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6243  000ED8  ECE9  F01F         	call	_printf	;wreg free
  6244                           
  6245                           ;RS232.c: 124:         printf("   serial - Set card serial number\r\n");
  6246  000EDC  0EAE               	movlw	low STR_60
  6247  000EDE  0100               	movlb	0	; () banked
  6248  000EE0  6F7D               	movwf	printf@fmt& (0+255),b
  6249  000EE2  0EFB               	movlw	high STR_60
  6250  000EE4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6251  000EE6  ECE9  F01F         	call	_printf	;wreg free
  6252                           
  6253                           ;RS232.c: 125:         printf("   part - Set card part number\r\n");
  6254  000EEA  0E84               	movlw	low STR_61
  6255  000EEC  0100               	movlb	0	; () banked
  6256  000EEE  6F7D               	movwf	printf@fmt& (0+255),b
  6257  000EF0  0EFC               	movlw	high STR_61
  6258  000EF2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6259  000EF4  ECE9  F01F         	call	_printf	;wreg free
  6260                           
  6261                           ;RS232.c: 126:         printf("   rev - Set card part number\r\n");
  6262  000EF8  0EC6               	movlw	low STR_62
  6263  000EFA  0100               	movlb	0	; () banked
  6264  000EFC  6F7D               	movwf	printf@fmt& (0+255),b
  6265  000EFE  0EFC               	movlw	high STR_62
  6266  000F00  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6267  000F02  ECE9  F01F         	call	_printf	;wreg free
  6268                           
  6269                           ;RS232.c: 128:         printf("\r\nEnter Command : ");
  6270  000F06  0E26               	movlw	low STR_4
  6271  000F08  0100               	movlb	0	; () banked
  6272  000F0A  6F7D               	movwf	printf@fmt& (0+255),b
  6273  000F0C  0EFF               	movlw	high STR_4
  6274  000F0E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6275  000F10  ECE9  F01F         	call	_printf	;wreg free
  6276  000F14                     
  6277                           ;RS232.c: 130:         uint16_t convertedValue;;RS232.c: 131:         convertedValue = A
      +                          DCC_GetSingleConversion(AIP_0);
  6278  000F14  0E00               	movlw	0
  6279  000F16  ECA6  F01F         	call	_ADCC_GetSingleConversion
  6280  000F1A  C005  F0BB         	movff	?_ADCC_GetSingleConversion,InitialiseString@convertedValue
  6281  000F1E  C006  F0BC         	movff	?_ADCC_GetSingleConversion+1,InitialiseString@convertedValue+1
  6282  000F22                     
  6283                           ;RS232.c: 132:         printf("ADC: 0x%04x \r\n", convertedValue);
  6284  000F22  0E9A               	movlw	low STR_21
  6285  000F24  0100               	movlb	0	; () banked
  6286  000F26  6F7D               	movwf	printf@fmt& (0+255),b
  6287  000F28  0EFF               	movlw	high STR_21
  6288  000F2A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6289  000F2C  C0BB  F07F         	movff	InitialiseString@convertedValue,?_printf+2
  6290  000F30  C0BC  F080         	movff	InitialiseString@convertedValue+1,?_printf+3
  6291  000F34  ECE9  F01F         	call	_printf	;wreg free
  6292  000F38                     l917:
  6293  000F38  0012               	return		;funcret
  6294  000F3A                     __end_of_InitialiseString:
  6295                           	opt callstack 0
  6296                           
  6297 ;; *************** function _CardConfigIni *****************
  6298 ;; Defined at:
  6299 ;;		line 10 in file "RS232.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  Name            2    9[COMRAM] PTR unsigned char 
  6302 ;;		 -> STR_37(4), STR_36(5), STR_35(7), 
  6303 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  6304 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  6305 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  6306 ;;  NumBytes        2   15[COMRAM] int 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  i               2   21[COMRAM] int 
  6309 ;;  j               2   19[COMRAM] int 
  6310 ;;  readDataEven    1   24[COMRAM] unsigned char 
  6311 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6321 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;Total ram usage:       16 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    5
  6328 ;; This function calls:
  6329 ;;		_DATAEE_ReadByte
  6330 ;;		_strcmp
  6331 ;; This function is called by:
  6332 ;;		_InitialiseString
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text13
  6337  0016F2                     __ptext13:
  6338                           	opt callstack 0
  6339  0016F2                     _CardConfigIni:
  6340                           	opt callstack 23
  6341  0016F2                     
  6342                           ;RS232.c: 14:     char readDataOdd, readDataEven;;RS232.c: 15:     int i=0, j=0;
  6343  0016F2  0E00               	movlw	0
  6344  0016F4  6E17               	movwf	(CardConfigIni@i+1)^0,c
  6345  0016F6  0E00               	movlw	0
  6346  0016F8  6E16               	movwf	CardConfigIni@i^0,c
  6347  0016FA  0E00               	movlw	0
  6348  0016FC  6E15               	movwf	(CardConfigIni@j+1)^0,c
  6349  0016FE  0E00               	movlw	0
  6350  001700  6E14               	movwf	CardConfigIni@j^0,c
  6351                           
  6352                           ;RS232.c: 19:     for(i = 0; i < NumBytes; i++){
  6353  001702  0E00               	movlw	0
  6354  001704  6E17               	movwf	(CardConfigIni@i+1)^0,c
  6355  001706  0E00               	movlw	0
  6356  001708  6E16               	movwf	CardConfigIni@i^0,c
  6357  00170A  EF59  F00C         	goto	l7022
  6358  00170E                     l6984:
  6359                           
  6360                           ;RS232.c: 20:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  6361  00170E  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  6362  001712  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  6363  001716  EC4E  F020         	call	_DATAEE_ReadByte	;wreg free
  6364  00171A  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  6365  00171C                     
  6366                           ;RS232.c: 22:         _delay((unsigned long)((50)*(32000000/4000.0)));
  6367  00171C  0E03               	movlw	3
  6368  00171E  6E13               	movwf	(??_CardConfigIni+1)^0,c
  6369  001720  0E08               	movlw	8
  6370  001722  6E12               	movwf	??_CardConfigIni^0,c
  6371  001724  0E77               	movlw	119
  6372  001726                     u7727:
  6373  001726  2EE8               	decfsz	wreg,f,c
  6374  001728  D7FE               	bra	u7727
  6375  00172A  2E12               	decfsz	??_CardConfigIni^0,f,c
  6376  00172C  D7FC               	bra	u7727
  6377  00172E  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  6378  001730  D7FA               	bra	u7727
  6379  001732  F000               	nop	
  6380  001734                     
  6381                           ;RS232.c: 25:         if(readDataOdd != 0xFF){
  6382  001734  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  6383  001736  B4D8               	btfsc	status,2,c
  6384  001738  EFA0  F00B         	goto	u6901
  6385  00173C  EFA2  F00B         	goto	u6900
  6386  001740                     u6901:
  6387  001740  EFAC  F00B         	goto	l6994
  6388  001744                     u6900:
  6389  001744                     
  6390                           ;RS232.c: 26:             RetNum[j] = readDataOdd;
  6391  001744  5014               	movf	CardConfigIni@j^0,w,c
  6392  001746  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6393  001748  6ED9               	movwf	fsr2l,c
  6394  00174A  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6395  00174C  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6396  00174E  6EDA               	movwf	fsr2h,c
  6397  001750  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  6398  001754                     
  6399                           ;RS232.c: 27:             j++;
  6400  001754  4A14               	infsnz	CardConfigIni@j^0,f,c
  6401  001756  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  6402  001758                     l6994:
  6403                           
  6404                           ;RS232.c: 30:         dataeeAddrWrk++;
  6405  001758  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  6406  00175A  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  6407  00175C                     
  6408                           ;RS232.c: 31:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  6409  00175C  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  6410  001760  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  6411  001764  EC4E  F020         	call	_DATAEE_ReadByte	;wreg free
  6412  001768  6E19               	movwf	CardConfigIni@readDataEven^0,c
  6413  00176A                     
  6414                           ;RS232.c: 33:         dataeeAddrWrk++;
  6415  00176A  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  6416  00176C  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  6417  00176E                     
  6418                           ;RS232.c: 34:         _delay((unsigned long)((50)*(32000000/4000.0)));
  6419  00176E  0E03               	movlw	3
  6420  001770  6E13               	movwf	(??_CardConfigIni+1)^0,c
  6421  001772  0E08               	movlw	8
  6422  001774  6E12               	movwf	??_CardConfigIni^0,c
  6423  001776  0E77               	movlw	119
  6424  001778                     u7737:
  6425  001778  2EE8               	decfsz	wreg,f,c
  6426  00177A  D7FE               	bra	u7737
  6427  00177C  2E12               	decfsz	??_CardConfigIni^0,f,c
  6428  00177E  D7FC               	bra	u7737
  6429  001780  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  6430  001782  D7FA               	bra	u7737
  6431  001784  F000               	nop	
  6432  001786                     
  6433                           ;RS232.c: 37:         if(readDataEven != 0xFF){
  6434  001786  2819               	incf	CardConfigIni@readDataEven^0,w,c
  6435  001788  B4D8               	btfsc	status,2,c
  6436  00178A  EFC9  F00B         	goto	u6911
  6437  00178E  EFCB  F00B         	goto	u6910
  6438  001792                     u6911:
  6439  001792  EFD5  F00B         	goto	l7008
  6440  001796                     u6910:
  6441  001796                     
  6442                           ;RS232.c: 38:             RetNum[j] = readDataEven;
  6443  001796  5014               	movf	CardConfigIni@j^0,w,c
  6444  001798  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6445  00179A  6ED9               	movwf	fsr2l,c
  6446  00179C  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6447  00179E  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6448  0017A0  6EDA               	movwf	fsr2h,c
  6449  0017A2  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  6450  0017A6                     
  6451                           ;RS232.c: 39:             j++;
  6452  0017A6  4A14               	infsnz	CardConfigIni@j^0,f,c
  6453  0017A8  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  6454  0017AA                     l7008:
  6455                           
  6456                           ;RS232.c: 42:         if(!strcmp("Serial",Name)){
  6457  0017AA  0ED7               	movlw	low STR_29
  6458  0017AC  6E05               	movwf	strcmp@l^0,c
  6459  0017AE  0EFF               	movlw	high STR_29
  6460  0017B0  6E06               	movwf	(strcmp@l+1)^0,c
  6461  0017B2  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6462  0017B6  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6463  0017BA  EC3F  F019         	call	_strcmp	;wreg free
  6464  0017BE  5005               	movf	?_strcmp^0,w,c
  6465  0017C0  1006               	iorwf	(?_strcmp+1)^0,w,c
  6466  0017C2  A4D8               	btfss	status,2,c
  6467  0017C4  EFE6  F00B         	goto	u6921
  6468  0017C8  EFE8  F00B         	goto	u6920
  6469  0017CC                     u6921:
  6470  0017CC  EF01  F00C         	goto	l7012
  6471  0017D0                     u6920:
  6472  0017D0                     
  6473                           ;RS232.c: 43:             MB303xx[i] = readDataOdd *256 + readDataEven;
  6474  0017D0  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6475  0017D2  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6476  0017D6  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6477  0017D8  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6478  0017DC  6A12               	clrf	??_CardConfigIni^0,c
  6479  0017DE  2612               	addwf	??_CardConfigIni^0,f,c
  6480  0017E0  0E00               	movlw	0
  6481  0017E2  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6482  0017E4  90D8               	bcf	status,0,c
  6483  0017E6  3416               	rlcf	CardConfigIni@i^0,w,c
  6484  0017E8  6ED9               	movwf	fsr2l,c
  6485  0017EA  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6486  0017EC  6EDA               	movwf	fsr2h,c
  6487  0017EE  0E35               	movlw	low _MB303xx
  6488  0017F0  26D9               	addwf	fsr2l,f,c
  6489  0017F2  0E01               	movlw	high _MB303xx
  6490  0017F4  22DA               	addwfc	fsr2h,f,c
  6491  0017F6  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6492  0017FA  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6493                           
  6494                           ;RS232.c: 44:         }else if(!strcmp("Part",Name)){
  6495  0017FE  EF57  F00C         	goto	l7020
  6496  001802                     l7012:
  6497  001802  0EEB               	movlw	low STR_31
  6498  001804  6E05               	movwf	strcmp@l^0,c
  6499  001806  0EFF               	movlw	high STR_31
  6500  001808  6E06               	movwf	(strcmp@l+1)^0,c
  6501  00180A  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6502  00180E  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6503  001812  EC3F  F019         	call	_strcmp	;wreg free
  6504  001816  5005               	movf	?_strcmp^0,w,c
  6505  001818  1006               	iorwf	(?_strcmp+1)^0,w,c
  6506  00181A  A4D8               	btfss	status,2,c
  6507  00181C  EF12  F00C         	goto	u6931
  6508  001820  EF14  F00C         	goto	u6930
  6509  001824                     u6931:
  6510  001824  EF2D  F00C         	goto	l7016
  6511  001828                     u6930:
  6512  001828                     
  6513                           ;RS232.c: 45:             MB301xx[i] = readDataOdd *256 + readDataEven;
  6514  001828  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6515  00182A  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6516  00182E  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6517  001830  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6518  001834  6A12               	clrf	??_CardConfigIni^0,c
  6519  001836  2612               	addwf	??_CardConfigIni^0,f,c
  6520  001838  0E00               	movlw	0
  6521  00183A  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6522  00183C  90D8               	bcf	status,0,c
  6523  00183E  3416               	rlcf	CardConfigIni@i^0,w,c
  6524  001840  6ED9               	movwf	fsr2l,c
  6525  001842  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6526  001844  6EDA               	movwf	fsr2h,c
  6527  001846  0E10               	movlw	low _MB301xx
  6528  001848  26D9               	addwf	fsr2l,f,c
  6529  00184A  0E01               	movlw	high _MB301xx
  6530  00184C  22DA               	addwfc	fsr2h,f,c
  6531  00184E  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6532  001852  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6533                           
  6534                           ;RS232.c: 46:         }else if(!strcmp("Rev",Name)){
  6535  001856  EF57  F00C         	goto	l7020
  6536  00185A                     l7016:
  6537  00185A  0EF5               	movlw	low STR_33
  6538  00185C  6E05               	movwf	strcmp@l^0,c
  6539  00185E  0EFF               	movlw	high STR_33
  6540  001860  6E06               	movwf	(strcmp@l+1)^0,c
  6541  001862  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6542  001866  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6543  00186A  EC3F  F019         	call	_strcmp	;wreg free
  6544  00186E  5005               	movf	?_strcmp^0,w,c
  6545  001870  1006               	iorwf	(?_strcmp+1)^0,w,c
  6546  001872  A4D8               	btfss	status,2,c
  6547  001874  EF3E  F00C         	goto	u6941
  6548  001878  EF40  F00C         	goto	u6940
  6549  00187C                     u6941:
  6550  00187C  EF57  F00C         	goto	l7020
  6551  001880                     u6940:
  6552  001880                     
  6553                           ;RS232.c: 47:             MB302xx[i] = readDataOdd *256 + readDataEven;
  6554  001880  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6555  001882  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6556  001886  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6557  001888  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6558  00188C  6A12               	clrf	??_CardConfigIni^0,c
  6559  00188E  2612               	addwf	??_CardConfigIni^0,f,c
  6560  001890  0E00               	movlw	0
  6561  001892  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6562  001894  90D8               	bcf	status,0,c
  6563  001896  3416               	rlcf	CardConfigIni@i^0,w,c
  6564  001898  6ED9               	movwf	fsr2l,c
  6565  00189A  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6566  00189C  6EDA               	movwf	fsr2h,c
  6567  00189E  0EFC               	movlw	low _MB302xx
  6568  0018A0  26D9               	addwf	fsr2l,f,c
  6569  0018A2  0E00               	movlw	high _MB302xx
  6570  0018A4  22DA               	addwfc	fsr2h,f,c
  6571  0018A6  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6572  0018AA  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6573  0018AE                     l7020:
  6574                           
  6575                           ;RS232.c: 51:     }
  6576  0018AE  4A16               	infsnz	CardConfigIni@i^0,f,c
  6577  0018B0  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  6578  0018B2                     l7022:
  6579  0018B2  5010               	movf	CardConfigIni@NumBytes^0,w,c
  6580  0018B4  5C16               	subwf	CardConfigIni@i^0,w,c
  6581  0018B6  5017               	movf	(CardConfigIni@i+1)^0,w,c
  6582  0018B8  0A80               	xorlw	128
  6583  0018BA  6E12               	movwf	??_CardConfigIni^0,c
  6584  0018BC  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  6585  0018BE  0A80               	xorlw	128
  6586  0018C0  5812               	subwfb	??_CardConfigIni^0,w,c
  6587  0018C2  A0D8               	btfss	status,0,c
  6588  0018C4  EF66  F00C         	goto	u6951
  6589  0018C8  EF68  F00C         	goto	u6950
  6590  0018CC                     u6951:
  6591  0018CC  EF87  F00B         	goto	l6984
  6592  0018D0                     u6950:
  6593  0018D0                     
  6594                           ;RS232.c: 53:     RetNum[j] = '\0';
  6595  0018D0  5014               	movf	CardConfigIni@j^0,w,c
  6596  0018D2  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6597  0018D4  6ED9               	movwf	fsr2l,c
  6598  0018D6  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6599  0018D8  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6600  0018DA  6EDA               	movwf	fsr2h,c
  6601  0018DC  0E00               	movlw	0
  6602  0018DE  6EDF               	movwf	indf2,c
  6603  0018E0  0012               	return		;funcret
  6604  0018E2                     __end_of_CardConfigIni:
  6605                           	opt callstack 0
  6606                           
  6607 ;; *************** function _strcmp *****************
  6608 ;; Defined at:
  6609 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  l               2    4[COMRAM] PTR const unsigned char 
  6612 ;;		 -> STR_34(4), STR_32(5), STR_30(7), Command(16), 
  6613 ;;  r               2    6[COMRAM] PTR const unsigned char 
  6614 ;;		 -> STR_86(4), STR_84(5), STR_82(7), STR_80(2), 
  6615 ;;		 -> STR_78(6), STR_37(4), STR_36(5), STR_35(7), 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  2    4[COMRAM] int 
  6620 ;; Registers used:
  6621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6630 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6631 ;;Total ram usage:        5 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:    4
  6634 ;; This function calls:
  6635 ;;		Nothing
  6636 ;; This function is called by:
  6637 ;;		_CardConfigIni
  6638 ;;		_ValidateCmd
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text14
  6643  00327E                     __ptext14:
  6644                           	opt callstack 0
  6645  00327E                     _strcmp:
  6646                           	opt callstack 25
  6647  00327E  EF45  F019         	goto	l6848
  6648  003282                     l6846:
  6649  003282  4A05               	infsnz	strcmp@l^0,f,c
  6650  003284  2A06               	incf	(strcmp@l+1)^0,f,c
  6651  003286  4A07               	infsnz	strcmp@r^0,f,c
  6652  003288  2A08               	incf	(strcmp@r+1)^0,f,c
  6653  00328A                     l6848:
  6654  00328A  C007  FFF6         	movff	strcmp@r,tblptrl
  6655  00328E  C008  FFF7         	movff	strcmp@r+1,tblptrh
  6656  003292                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6657  003292  6AF8               	clrf	tblptru,c
  6658  003294                     	endif
  6659  003294                     	if	0	;tblptru may be non-zero
  6660  003294                     	endif
  6661  003294  0008               	tblrd		*
  6662  003296  CFF5 F009          	movff	tablat,??_strcmp
  6663  00329A  C005  FFF6         	movff	strcmp@l,tblptrl
  6664  00329E  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6665  0032A2  0E00               	movlw	low (__mediumconst shr (0+16))
  6666  0032A4  6EF8               	movwf	tblptru,c
  6667  0032A6  0E0E               	movlw	(high __ramtop+-1)
  6668  0032A8  64F7               	cpfsgt	tblptrh,c
  6669  0032AA  D003               	bra	u6657
  6670  0032AC  0008               	tblrd		*
  6671  0032AE  50F5               	movf	tablat,w,c
  6672  0032B0  D005               	bra	u6655
  6673  0032B2                     u6657:
  6674  0032B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6675  0032B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6676  0032BA  50EF               	movf	indf0,w,c
  6677  0032BC                     u6655:
  6678  0032BC  1809               	xorwf	??_strcmp^0,w,c
  6679  0032BE  A4D8               	btfss	status,2,c
  6680  0032C0  EF64  F019         	goto	u6651
  6681  0032C4  EF66  F019         	goto	u6650
  6682  0032C8                     u6651:
  6683  0032C8  EF7F  F019         	goto	l6852
  6684  0032CC                     u6650:
  6685  0032CC  C005  FFF6         	movff	strcmp@l,tblptrl
  6686  0032D0  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6687  0032D4  0E00               	movlw	low (__mediumconst shr (0+16))
  6688  0032D6  6EF8               	movwf	tblptru,c
  6689  0032D8  0E0E               	movlw	(high __ramtop+-1)
  6690  0032DA  64F7               	cpfsgt	tblptrh,c
  6691  0032DC  D003               	bra	u6667
  6692  0032DE  0008               	tblrd		*
  6693  0032E0  50F5               	movf	tablat,w,c
  6694  0032E2  D005               	bra	u6660
  6695  0032E4                     u6667:
  6696  0032E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6697  0032E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6698  0032EC  50EF               	movf	indf0,w,c
  6699  0032EE                     u6660:
  6700  0032EE  0900               	iorlw	0
  6701  0032F0  A4D8               	btfss	status,2,c
  6702  0032F2  EF7D  F019         	goto	u6671
  6703  0032F6  EF7F  F019         	goto	u6670
  6704  0032FA                     u6671:
  6705  0032FA  EF41  F019         	goto	l6846
  6706  0032FE                     u6670:
  6707  0032FE                     l6852:
  6708  0032FE  C005  FFF6         	movff	strcmp@l,tblptrl
  6709  003302  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6710  003306  0E00               	movlw	low (__mediumconst shr (0+16))
  6711  003308  6EF8               	movwf	tblptru,c
  6712  00330A  0E0E               	movlw	(high __ramtop+-1)
  6713  00330C  64F7               	cpfsgt	tblptrh,c
  6714  00330E  D003               	bra	u6687
  6715  003310  0008               	tblrd		*
  6716  003312  50F5               	movf	tablat,w,c
  6717  003314  D005               	bra	u6680
  6718  003316                     u6687:
  6719  003316  CFF6 FFE9          	movff	tblptrl,fsr0l
  6720  00331A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6721  00331E  50EF               	movf	indf0,w,c
  6722  003320                     u6680:
  6723  003320  6E09               	movwf	??_strcmp^0,c
  6724  003322  C007  FFF6         	movff	strcmp@r,tblptrl
  6725  003326  C008  FFF7         	movff	strcmp@r+1,tblptrh
  6726  00332A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6727  00332A  6AF8               	clrf	tblptru,c
  6728  00332C                     	endif
  6729  00332C                     	if	0	;tblptru may be non-zero
  6730  00332C                     	endif
  6731  00332C  0008               	tblrd		*
  6732  00332E  50F5               	movf	tablat,w,c
  6733  003330  5C09               	subwf	??_strcmp^0,w,c
  6734  003332  6E05               	movwf	?_strcmp^0,c
  6735  003334  6A06               	clrf	(?_strcmp+1)^0,c
  6736  003336  A0D8               	btfss	status,0,c
  6737  003338  0606               	decf	(?_strcmp+1)^0,f,c
  6738  00333A  0012               	return		;funcret
  6739  00333C                     __end_of_strcmp:
  6740                           	opt callstack 0
  6741                           
  6742 ;; *************** function _DATAEE_ReadByte *****************
  6743 ;; Defined at:
  6744 ;;		line 187 in file "mcc_generated_files/memory.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  bAdd            2    4[COMRAM] unsigned short 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      unsigned char 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;Total ram usage:        2 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    4
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_CardConfigIni
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text15
  6773  00409C                     __ptext15:
  6774                           	opt callstack 0
  6775  00409C                     _DATAEE_ReadByte:
  6776                           	opt callstack 23
  6777  00409C                     
  6778                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  6779  00409C  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  6780  00409E  0B03               	andlw	3
  6781  0040A0  6E7F               	movwf	127,c	;volatile
  6782  0040A2                     
  6783                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  6784  0040A2  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  6785  0040A6                     
  6786                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  6787  0040A6  0E3F               	movlw	-193
  6788  0040A8  1681               	andwf	129,f,c	;volsfr
  6789  0040AA                     
  6790                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  6791  0040AA  8081               	bsf	129,0,c	;volsfr
  6792  0040AC                     
  6793                           ;mcc_generated_files/memory.c: 193:     __nop();
  6794  0040AC  F000               	nop	
  6795  0040AE                     
  6796                           ;mcc_generated_files/memory.c: 194:     __nop();
  6797  0040AE  F000               	nop	
  6798  0040B0                     
  6799                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  6800  0040B0  5080               	movf	128,w,c	;volatile
  6801  0040B2  0012               	return		;funcret
  6802  0040B4                     __end_of_DATAEE_ReadByte:
  6803                           	opt callstack 0
  6804                           
  6805 ;; *************** function _SYSTEM_Initialize *****************
  6806 ;; Defined at:
  6807 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    6
  6828 ;; This function calls:
  6829 ;;		_ADCC_DisableContinuousConversion
  6830 ;;		_ADCC_Initialize
  6831 ;;		_EUSART1_Initialize
  6832 ;;		_EUSART2_Initialize
  6833 ;;		_INTERRUPT_Initialize
  6834 ;;		_OSCILLATOR_Initialize
  6835 ;;		_PIN_MANAGER_Initialize
  6836 ;;		_PMD_Initialize
  6837 ;; This function is called by:
  6838 ;;		_main
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text16
  6843  004046                     __ptext16:
  6844                           	opt callstack 0
  6845  004046                     _SYSTEM_Initialize:
  6846                           	opt callstack 24
  6847  004046                     
  6848                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6849  004046  ECEE  F020         	call	_INTERRUPT_Initialize	;wreg free
  6850  00404A                     
  6851                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6852  00404A  EC34  F020         	call	_PMD_Initialize	;wreg free
  6853  00404E                     
  6854                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6855  00404E  EC3E  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  6856  004052                     
  6857                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6858  004052  EC5A  F020         	call	_OSCILLATOR_Initialize	;wreg free
  6859  004056                     
  6860                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  6861  004056  EC85  F01A         	call	_EUSART1_Initialize	;wreg free
  6862  00405A                     
  6863                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  6864  00405A  ECC5  F01A         	call	_EUSART2_Initialize	;wreg free
  6865  00405E                     
  6866                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  6867  00405E  EC72  F01D         	call	_ADCC_Initialize	;wreg free
  6868                           
  6869                           ;mcc_generated_files/mcc.c: 59:     ADCC_DisableContinuousConversion();
  6870  004062  ECF0  F020         	call	_ADCC_DisableContinuousConversion	;wreg free
  6871  004066  0012               	return		;funcret
  6872  004068                     __end_of_SYSTEM_Initialize:
  6873                           	opt callstack 0
  6874                           
  6875 ;; *************** function _PMD_Initialize *****************
  6876 ;; Defined at:
  6877 ;;		line 76 in file "mcc_generated_files/mcc.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    4
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_SYSTEM_Initialize
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text17
  6906  004068                     __ptext17:
  6907                           	opt callstack 0
  6908  004068                     _PMD_Initialize:
  6909                           	opt callstack 25
  6910  004068                     
  6911                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  6912  004068  0E00               	movlw	0
  6913  00406A  010E               	movlb	14	; () banked
  6914  00406C  6FE1               	movwf	225,b	;volatile
  6915                           
  6916                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  6917  00406E  0E00               	movlw	0
  6918  004070  6FE2               	movwf	226,b	;volatile
  6919                           
  6920                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  6921  004072  0E00               	movlw	0
  6922  004074  6FE3               	movwf	227,b	;volatile
  6923                           
  6924                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  6925  004076  0E00               	movlw	0
  6926  004078  6FE4               	movwf	228,b	;volatile
  6927                           
  6928                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  6929  00407A  0E00               	movlw	0
  6930  00407C  6FE5               	movwf	229,b	;volatile
  6931                           
  6932                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  6933  00407E  0E00               	movlw	0
  6934  004080  6FE6               	movwf	230,b	;volatile
  6935  004082                     
  6936                           ; BSR set to: 14
  6937  004082  0012               	return		;funcret
  6938  004084                     __end_of_PMD_Initialize:
  6939                           	opt callstack 0
  6940                           
  6941 ;; *************** function _PIN_MANAGER_Initialize *****************
  6942 ;; Defined at:
  6943 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    4
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_SYSTEM_Initialize
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text18
  6972  00347C                     __ptext18:
  6973                           	opt callstack 0
  6974  00347C                     _PIN_MANAGER_Initialize:
  6975                           	opt callstack 25
  6976  00347C                     
  6977                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6978  00347C  0E00               	movlw	0
  6979  00347E  6E87               	movwf	135,c	;volatile
  6980                           
  6981                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6982  003480  0E00               	movlw	0
  6983  003482  6E86               	movwf	134,c	;volatile
  6984                           
  6985                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6986  003484  0E00               	movlw	0
  6987  003486  6E83               	movwf	131,c	;volatile
  6988                           
  6989                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6990  003488  0E00               	movlw	0
  6991  00348A  6E84               	movwf	132,c	;volatile
  6992                           
  6993                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6994  00348C  0E00               	movlw	0
  6995  00348E  6E85               	movwf	133,c	;volatile
  6996                           
  6997                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6998  003490  0E07               	movlw	7
  6999  003492  6E8C               	movwf	140,c	;volatile
  7000                           
  7001                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  7002  003494  0E07               	movlw	7
  7003  003496  6E88               	movwf	136,c	;volatile
  7004                           
  7005                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  7006  003498  0EBF               	movlw	191
  7007  00349A  6E89               	movwf	137,c	;volatile
  7008                           
  7009                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  7010  00349C  0EBF               	movlw	191
  7011  00349E  6E8A               	movwf	138,c	;volatile
  7012                           
  7013                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  7014  0034A0  0EFE               	movlw	254
  7015  0034A2  6E8B               	movwf	139,c	;volatile
  7016  0034A4                     
  7017                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  7018  0034A4  010F               	movlb	15	; () banked
  7019  0034A6  6926               	setf	38,b	;volatile
  7020                           
  7021                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  7022  0034A8  0E3B               	movlw	59
  7023  0034AA  6F21               	movwf	33,b	;volatile
  7024                           
  7025                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  7026  0034AC  0E37               	movlw	55
  7027  0034AE  6F19               	movwf	25,b	;volatile
  7028                           
  7029                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7030  0034B0  0E07               	movlw	7
  7031  0034B2  6F2E               	movwf	46,b	;volatile
  7032  0034B4                     
  7033                           ; BSR set to: 15
  7034                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  7035  0034B4  6911               	setf	17,b	;volatile
  7036                           
  7037                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7038  0034B6  0E00               	movlw	0
  7039  0034B8  6F25               	movwf	37,b	;volatile
  7040                           
  7041                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7042  0034BA  0E00               	movlw	0
  7043  0034BC  6F2D               	movwf	45,b	;volatile
  7044                           
  7045                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7046  0034BE  0E00               	movlw	0
  7047  0034C0  6F18               	movwf	24,b	;volatile
  7048                           
  7049                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7050  0034C2  0E00               	movlw	0
  7051  0034C4  6F10               	movwf	16,b	;volatile
  7052                           
  7053                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7054  0034C6  0E00               	movlw	0
  7055  0034C8  6F20               	movwf	32,b	;volatile
  7056                           
  7057                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  7058  0034CA  0E00               	movlw	0
  7059  0034CC  6F2C               	movwf	44,b	;volatile
  7060                           
  7061                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  7062  0034CE  0E00               	movlw	0
  7063  0034D0  6F0F               	movwf	15,b	;volatile
  7064                           
  7065                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  7066  0034D2  0E00               	movlw	0
  7067  0034D4  6F17               	movwf	23,b	;volatile
  7068                           
  7069                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  7070  0034D6  0E00               	movlw	0
  7071  0034D8  6F1F               	movwf	31,b	;volatile
  7072                           
  7073                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  7074  0034DA  0E00               	movlw	0
  7075  0034DC  6F24               	movwf	36,b	;volatile
  7076  0034DE                     
  7077                           ; BSR set to: 15
  7078                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  7079  0034DE  690E               	setf	14,b	;volatile
  7080  0034E0                     
  7081                           ; BSR set to: 15
  7082                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  7083  0034E0  6916               	setf	22,b	;volatile
  7084  0034E2                     
  7085                           ; BSR set to: 15
  7086                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  7087  0034E2  691E               	setf	30,b	;volatile
  7088  0034E4                     
  7089                           ; BSR set to: 15
  7090                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  7091  0034E4  6923               	setf	35,b	;volatile
  7092                           
  7093                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  7094  0034E6  0E07               	movlw	7
  7095  0034E8  6F2B               	movwf	43,b	;volatile
  7096  0034EA                     
  7097                           ; BSR set to: 15
  7098                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  7099  0034EA  690D               	setf	13,b	;volatile
  7100  0034EC                     
  7101                           ; BSR set to: 15
  7102                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  7103  0034EC  6915               	setf	21,b	;volatile
  7104  0034EE                     
  7105                           ; BSR set to: 15
  7106                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  7107  0034EE  691D               	setf	29,b	;volatile
  7108  0034F0                     
  7109                           ; BSR set to: 15
  7110                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  7111  0034F0  6922               	setf	34,b	;volatile
  7112                           
  7113                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  7114  0034F2  0E0F               	movlw	15
  7115  0034F4  6F2A               	movwf	42,b	;volatile
  7116                           
  7117                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  7118  0034F6  0E17               	movlw	23
  7119  0034F8  010E               	movlb	14	; () banked
  7120  0034FA  6FB5               	movwf	181,b	;volatile
  7121                           
  7122                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  7123  0034FC  0E0B               	movlw	11
  7124  0034FE  6FF5               	movwf	245,b	;volatile
  7125                           
  7126                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  7127  003500  0E09               	movlw	9
  7128  003502  6FFD               	movwf	253,b	;volatile
  7129                           
  7130                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  7131  003504  0E0F               	movlw	15
  7132  003506  6F8D               	movwf	141,b	;volatile
  7133  003508                     
  7134                           ; BSR set to: 14
  7135  003508  0012               	return		;funcret
  7136  00350A                     __end_of_PIN_MANAGER_Initialize:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function _OSCILLATOR_Initialize *****************
  7140 ;; Defined at:
  7141 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      void 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    4
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_SYSTEM_Initialize
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text19
  7170  0040B4                     __ptext19:
  7171                           	opt callstack 0
  7172  0040B4                     _OSCILLATOR_Initialize:
  7173                           	opt callstack 25
  7174  0040B4                     
  7175                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  7176  0040B4  0E60               	movlw	96
  7177  0040B6  010E               	movlb	14	; () banked
  7178  0040B8  6FD8               	movwf	216,b	;volatile
  7179                           
  7180                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  7181  0040BA  0E00               	movlw	0
  7182  0040BC  6FDA               	movwf	218,b	;volatile
  7183                           
  7184                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  7185  0040BE  0E00               	movlw	0
  7186  0040C0  6FDC               	movwf	220,b	;volatile
  7187                           
  7188                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  7189  0040C2  0E06               	movlw	6
  7190  0040C4  6FDE               	movwf	222,b	;volatile
  7191                           
  7192                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  7193  0040C6  0E00               	movlw	0
  7194  0040C8  6FDD               	movwf	221,b	;volatile
  7195  0040CA                     
  7196                           ; BSR set to: 14
  7197  0040CA  0012               	return		;funcret
  7198  0040CC                     __end_of_OSCILLATOR_Initialize:
  7199                           	opt callstack 0
  7200                           
  7201 ;; *************** function _INTERRUPT_Initialize *****************
  7202 ;; Defined at:
  7203 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		None
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    4
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_SYSTEM_Initialize
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text20
  7232  0041DC                     __ptext20:
  7233                           	opt callstack 0
  7234  0041DC                     _INTERRUPT_Initialize:
  7235                           	opt callstack 25
  7236  0041DC                     
  7237                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  7238  0041DC  9AF2               	bcf	242,5,c	;volatile
  7239  0041DE  0012               	return		;funcret
  7240  0041E0                     __end_of_INTERRUPT_Initialize:
  7241                           	opt callstack 0
  7242                           
  7243 ;; *************** function _EUSART2_Initialize *****************
  7244 ;; Defined at:
  7245 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      void 
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    5
  7266 ;; This function calls:
  7267 ;;		_EUSART2_SetErrorHandler
  7268 ;;		_EUSART2_SetFramingErrorHandler
  7269 ;;		_EUSART2_SetOverrunErrorHandler
  7270 ;;		_EUSART2_SetRxInterruptHandler
  7271 ;;		_EUSART2_SetTxInterruptHandler
  7272 ;; This function is called by:
  7273 ;;		_SYSTEM_Initialize
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text21
  7278  00358A                     __ptext21:
  7279                           	opt callstack 0
  7280  00358A                     _EUSART2_Initialize:
  7281                           	opt callstack 24
  7282  00358A                     
  7283                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  7284  00358A  010E               	movlb	14	; () banked
  7285  00358C  9FC5               	bcf	197,7,b	;volatile
  7286  00358E                     
  7287                           ; BSR set to: 14
  7288                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  7289  00358E  0EFE               	movlw	low _EUSART2_Receive_ISR
  7290  003590  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  7291  003592  0E30               	movlw	high _EUSART2_Receive_ISR
  7292  003594  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  7293  003596  ECA9  F020         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  7294  00359A                     
  7295                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  7296  00359A  010E               	movlb	14	; () banked
  7297  00359C  9DC5               	bcf	197,6,b	;volatile
  7298                           
  7299                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  7300  00359E  0E1A               	movlw	low _EUSART2_Transmit_ISR
  7301  0035A0  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  7302  0035A2  0E3C               	movlw	high _EUSART2_Transmit_ISR
  7303  0035A4  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  7304  0035A6  ECA4  F020         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  7305  0035AA                     
  7306                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  7307  0035AA  0E08               	movlw	8
  7308  0035AC  010E               	movlb	14	; () banked
  7309  0035AE  6F9F               	movwf	159,b	;volatile
  7310  0035B0                     
  7311                           ; BSR set to: 14
  7312                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  7313  0035B0  0E90               	movlw	144
  7314  0035B2  6F9D               	movwf	157,b	;volatile
  7315  0035B4                     
  7316                           ; BSR set to: 14
  7317                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  7318  0035B4  0E24               	movlw	36
  7319  0035B6  6F9E               	movwf	158,b	;volatile
  7320  0035B8                     
  7321                           ; BSR set to: 14
  7322                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  7323  0035B8  0EA0               	movlw	160
  7324  0035BA  6F9B               	movwf	155,b	;volatile
  7325  0035BC                     
  7326                           ; BSR set to: 14
  7327                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  7328  0035BC  0E01               	movlw	1
  7329  0035BE  6F9C               	movwf	156,b	;volatile
  7330  0035C0                     
  7331                           ; BSR set to: 14
  7332                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  7333  0035C0  0EE4               	movlw	low _EUSART2_DefaultFramingErrorHandler
  7334  0035C2  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  7335  0035C4  0E41               	movlw	high _EUSART2_DefaultFramingErrorHandler
  7336  0035C6  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  7337  0035C8  ECB3  F020         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  7338  0035CC                     
  7339                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  7340  0035CC  0EB6               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  7341  0035CE  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  7342  0035D0  0E41               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  7343  0035D2  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7344  0035D4  ECAE  F020         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  7345  0035D8                     
  7346                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  7347  0035D8  0ECA               	movlw	low _EUSART2_DefaultErrorHandler
  7348  0035DA  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  7349  0035DC  0E41               	movlw	high _EUSART2_DefaultErrorHandler
  7350  0035DE  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  7351  0035E0  ECB8  F020         	call	_EUSART2_SetErrorHandler	;wreg free
  7352                           
  7353                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  7354  0035E4  0E00               	movlw	0
  7355  0035E6  0100               	movlb	0	; () banked
  7356  0035E8  6FDF               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  7357                           
  7358                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  7359  0035EA  0E00               	movlw	0
  7360  0035EC  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7361                           
  7362                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  7363  0035EE  0E00               	movlw	0
  7364  0035F0  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
  7365                           
  7366                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  7367  0035F2  0E20               	movlw	32
  7368  0035F4  6FFF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  7369                           
  7370                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  7371  0035F6  0E00               	movlw	0
  7372  0035F8  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  7373                           
  7374                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  7375  0035FA  0E00               	movlw	0
  7376  0035FC  6FE1               	movwf	_eusart2RxTail& (0+255),b	;volatile
  7377                           
  7378                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  7379  0035FE  0E00               	movlw	0
  7380  003600  6FE0               	movwf	_eusart2RxCount& (0+255),b	;volatile
  7381  003602                     
  7382                           ; BSR set to: 0
  7383                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  7384  003602  010E               	movlb	14	; () banked
  7385  003604  8FC5               	bsf	197,7,b	;volatile
  7386  003606                     
  7387                           ; BSR set to: 14
  7388  003606  0012               	return		;funcret
  7389  003608                     __end_of_EUSART2_Initialize:
  7390                           	opt callstack 0
  7391                           
  7392 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  7393 ;; Defined at:
  7394 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7397 ;;		 -> EUSART2_Transmit_ISR(1), 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7413 ;;Total ram usage:        2 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    4
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_EUSART2_Initialize
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text22
  7424  004148                     __ptext22:
  7425                           	opt callstack 0
  7426  004148                     _EUSART2_SetTxInterruptHandler:
  7427                           	opt callstack 24
  7428  004148                     
  7429                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7430  004148  C005  F1FC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  7431  00414C  C006  F1FD         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  7432  004150  0012               	return		;funcret
  7433  004152                     __end_of_EUSART2_SetTxInterruptHandler:
  7434                           	opt callstack 0
  7435                           
  7436 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  7437 ;; Defined at:
  7438 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7441 ;;		 -> EUSART2_Receive_ISR(1), 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;Total ram usage:        2 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:    4
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_EUSART2_Initialize
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text23
  7468  004152                     __ptext23:
  7469                           	opt callstack 0
  7470  004152                     _EUSART2_SetRxInterruptHandler:
  7471                           	opt callstack 24
  7472  004152                     
  7473                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7474  004152  C005  F1FA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  7475  004156  C006  F1FB         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  7476  00415A  0012               	return		;funcret
  7477  00415C                     __end_of_EUSART2_SetRxInterruptHandler:
  7478                           	opt callstack 0
  7479                           
  7480 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  7481 ;; Defined at:
  7482 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7485 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;Total ram usage:        2 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    4
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_EUSART2_Initialize
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text24
  7512  00415C                     __ptext24:
  7513                           	opt callstack 0
  7514  00415C                     _EUSART2_SetOverrunErrorHandler:
  7515                           	opt callstack 24
  7516  00415C                     
  7517                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  7518  00415C  C005  F1F2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  7519  004160  C006  F1F3         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  7520  004164  0012               	return		;funcret
  7521  004166                     __end_of_EUSART2_SetOverrunErrorHandler:
  7522                           	opt callstack 0
  7523                           
  7524 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  7525 ;; Defined at:
  7526 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7529 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7545 ;;Total ram usage:        2 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    4
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_EUSART2_Initialize
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text25
  7556  004166                     __ptext25:
  7557                           	opt callstack 0
  7558  004166                     _EUSART2_SetFramingErrorHandler:
  7559                           	opt callstack 24
  7560  004166                     
  7561                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  7562  004166  C005  F1F4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  7563  00416A  C006  F1F5         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  7564  00416E  0012               	return		;funcret
  7565  004170                     __end_of_EUSART2_SetFramingErrorHandler:
  7566                           	opt callstack 0
  7567                           
  7568 ;; *************** function _EUSART2_SetErrorHandler *****************
  7569 ;; Defined at:
  7570 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7573 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      void 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7589 ;;Total ram usage:        2 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    4
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_EUSART2_Initialize
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text26
  7600  004170                     __ptext26:
  7601                           	opt callstack 0
  7602  004170                     _EUSART2_SetErrorHandler:
  7603                           	opt callstack 24
  7604  004170                     
  7605                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  7606  004170  C005  F1F0         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  7607  004174  C006  F1F1         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  7608  004178  0012               	return		;funcret
  7609  00417A                     __end_of_EUSART2_SetErrorHandler:
  7610                           	opt callstack 0
  7611                           
  7612 ;; *************** function _EUSART1_Initialize *****************
  7613 ;; Defined at:
  7614 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    5
  7635 ;; This function calls:
  7636 ;;		_EUSART1_SetErrorHandler
  7637 ;;		_EUSART1_SetFramingErrorHandler
  7638 ;;		_EUSART1_SetOverrunErrorHandler
  7639 ;;		_EUSART1_SetRxInterruptHandler
  7640 ;;		_EUSART1_SetTxInterruptHandler
  7641 ;; This function is called by:
  7642 ;;		_SYSTEM_Initialize
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text27
  7647  00350A                     __ptext27:
  7648                           	opt callstack 0
  7649  00350A                     _EUSART1_Initialize:
  7650                           	opt callstack 24
  7651  00350A                     
  7652                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  7653  00350A  010E               	movlb	14	; () banked
  7654  00350C  9BC5               	bcf	197,5,b	;volatile
  7655  00350E                     
  7656                           ; BSR set to: 14
  7657                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  7658  00350E  0EBE               	movlw	low _EUSART1_Receive_ISR
  7659  003510  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  7660  003512  0E31               	movlw	high _EUSART1_Receive_ISR
  7661  003514  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  7662  003516  ECC2  F020         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  7663  00351A                     
  7664                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  7665  00351A  010E               	movlb	14	; () banked
  7666  00351C  99C5               	bcf	197,4,b	;volatile
  7667                           
  7668                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  7669  00351E  0EEA               	movlw	low _EUSART1_Transmit_ISR
  7670  003520  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  7671  003522  0E3C               	movlw	high _EUSART1_Transmit_ISR
  7672  003524  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  7673  003526  ECBD  F020         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  7674  00352A                     
  7675                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  7676  00352A  0E08               	movlw	8
  7677  00352C  6E9F               	movwf	159,c	;volatile
  7678  00352E                     
  7679                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  7680  00352E  0E90               	movlw	144
  7681  003530  6E9D               	movwf	157,c	;volatile
  7682  003532                     
  7683                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  7684  003532  0E24               	movlw	36
  7685  003534  6E9E               	movwf	158,c	;volatile
  7686  003536                     
  7687                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  7688  003536  0EA0               	movlw	160
  7689  003538  6E9B               	movwf	155,c	;volatile
  7690  00353A                     
  7691                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  7692  00353A  0E03               	movlw	3
  7693  00353C  6E9C               	movwf	156,c	;volatile
  7694  00353E                     
  7695                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  7696  00353E  0E01               	movlw	1
  7697  003540  6E9C               	movwf	156,c	;volatile
  7698                           
  7699                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  7700  003542  0EE6               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7701  003544  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7702  003546  0E41               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7703  003548  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7704  00354A  ECCC  F020         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7705                           
  7706                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  7707  00354E  0ED0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7708  003550  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7709  003552  0E41               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7710  003554  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7711  003556  ECC7  F020         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7712                           
  7713                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  7714  00355A  0ED6               	movlw	low _EUSART1_DefaultErrorHandler
  7715  00355C  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7716  00355E  0E41               	movlw	high _EUSART1_DefaultErrorHandler
  7717  003560  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7718  003562  ECD1  F020         	call	_EUSART1_SetErrorHandler	;wreg free
  7719  003566                     
  7720                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7721  003566  0E00               	movlw	0
  7722  003568  0100               	movlb	0	; () banked
  7723  00356A  6FDA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7724  00356C                     
  7725                           ; BSR set to: 0
  7726                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  7727  00356C  0E00               	movlw	0
  7728  00356E  6FDE               	movwf	_eusart1TxHead& (0+255),b	;volatile
  7729  003570                     
  7730                           ; BSR set to: 0
  7731                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  7732  003570  0E00               	movlw	0
  7733  003572  6FDD               	movwf	_eusart1TxTail& (0+255),b	;volatile
  7734  003574                     
  7735                           ; BSR set to: 0
  7736                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  7737  003574  0E10               	movlw	16
  7738  003576  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  7739  003578                     
  7740                           ; BSR set to: 0
  7741                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  7742  003578  0E00               	movlw	0
  7743  00357A  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7744  00357C                     
  7745                           ; BSR set to: 0
  7746                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  7747  00357C  0E00               	movlw	0
  7748  00357E  6FDC               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7749  003580                     
  7750                           ; BSR set to: 0
  7751                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  7752  003580  0E00               	movlw	0
  7753  003582  6FDB               	movwf	_eusart1RxCount& (0+255),b	;volatile
  7754  003584                     
  7755                           ; BSR set to: 0
  7756                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  7757  003584  010E               	movlb	14	; () banked
  7758  003586  8BC5               	bsf	197,5,b	;volatile
  7759  003588                     
  7760                           ; BSR set to: 14
  7761  003588  0012               	return		;funcret
  7762  00358A                     __end_of_EUSART1_Initialize:
  7763                           	opt callstack 0
  7764                           
  7765 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  7766 ;; Defined at:
  7767 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7770 ;;		 -> EUSART1_Transmit_ISR(1), 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;Total ram usage:        2 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    4
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_EUSART1_Initialize
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text28
  7797  00417A                     __ptext28:
  7798                           	opt callstack 0
  7799  00417A                     _EUSART1_SetTxInterruptHandler:
  7800                           	opt callstack 24
  7801  00417A                     
  7802                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7803  00417A  C005  F1F8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  7804  00417E  C006  F1F9         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  7805  004182  0012               	return		;funcret
  7806  004184                     __end_of_EUSART1_SetTxInterruptHandler:
  7807                           	opt callstack 0
  7808                           
  7809 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  7810 ;; Defined at:
  7811 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7814 ;;		 -> EUSART1_Receive_ISR(1), 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, status,2, status,0
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7830 ;;Total ram usage:        2 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    4
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		_EUSART1_Initialize
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text29
  7841  004184                     __ptext29:
  7842                           	opt callstack 0
  7843  004184                     _EUSART1_SetRxInterruptHandler:
  7844                           	opt callstack 24
  7845  004184                     
  7846                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7847  004184  C005  F1F6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  7848  004188  C006  F1F7         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  7849  00418C  0012               	return		;funcret
  7850  00418E                     __end_of_EUSART1_SetRxInterruptHandler:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7854 ;; Defined at:
  7855 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7858 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;		None
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1    wreg      void 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;Total ram usage:        2 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    4
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_EUSART1_Initialize
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text30
  7885  00418E                     __ptext30:
  7886                           	opt callstack 0
  7887  00418E                     _EUSART1_SetOverrunErrorHandler:
  7888                           	opt callstack 24
  7889  00418E                     
  7890                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  7891  00418E  C005  F1EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7892  004192  C006  F1ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7893  004196  0012               	return		;funcret
  7894  004198                     __end_of_EUSART1_SetOverrunErrorHandler:
  7895                           	opt callstack 0
  7896                           
  7897 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7898 ;; Defined at:
  7899 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7902 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;		None
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;Total ram usage:        2 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    4
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_EUSART1_Initialize
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text31
  7929  004198                     __ptext31:
  7930                           	opt callstack 0
  7931  004198                     _EUSART1_SetFramingErrorHandler:
  7932                           	opt callstack 24
  7933  004198                     
  7934                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  7935  004198  C005  F1EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7936  00419C  C006  F1EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7937  0041A0  0012               	return		;funcret
  7938  0041A2                     __end_of_EUSART1_SetFramingErrorHandler:
  7939                           	opt callstack 0
  7940                           
  7941 ;; *************** function _EUSART1_SetErrorHandler *****************
  7942 ;; Defined at:
  7943 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7946 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7962 ;;Total ram usage:        2 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    4
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_EUSART1_Initialize
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text32
  7973  0041A2                     __ptext32:
  7974                           	opt callstack 0
  7975  0041A2                     _EUSART1_SetErrorHandler:
  7976                           	opt callstack 24
  7977  0041A2                     
  7978                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  7979  0041A2  C005  F1EA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7980  0041A6  C006  F1EB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7981  0041AA  0012               	return		;funcret
  7982  0041AC                     __end_of_EUSART1_SetErrorHandler:
  7983                           	opt callstack 0
  7984                           
  7985 ;; *************** function _ADCC_Initialize *****************
  7986 ;; Defined at:
  7987 ;;		line 62 in file "mcc_generated_files/adcc.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;Total ram usage:        0 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    4
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_SYSTEM_Initialize
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text33
  8016  003AE4                     __ptext33:
  8017                           	opt callstack 0
  8018  003AE4                     _ADCC_Initialize:
  8019                           	opt callstack 25
  8020  003AE4                     
  8021                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8022  003AE4  0E00               	movlw	0
  8023  003AE6  6E6A               	movwf	106,c	;volatile
  8024                           
  8025                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8026  003AE8  0E00               	movlw	0
  8027  003AEA  6E6B               	movwf	107,c	;volatile
  8028                           
  8029                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8030  003AEC  0E00               	movlw	0
  8031  003AEE  6E6C               	movwf	108,c	;volatile
  8032                           
  8033                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8034  003AF0  0E00               	movlw	0
  8035  003AF2  6E6D               	movwf	109,c	;volatile
  8036                           
  8037                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8038  003AF4  0E00               	movlw	0
  8039  003AF6  6E68               	movwf	104,c	;volatile
  8040                           
  8041                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8042  003AF8  0E00               	movlw	0
  8043  003AFA  6E69               	movwf	105,c	;volatile
  8044                           
  8045                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  8046  003AFC  0E00               	movlw	0
  8047  003AFE  6E66               	movwf	102,c	;volatile
  8048                           
  8049                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  8050  003B00  0E00               	movlw	0
  8051  003B02  010F               	movlb	15	; () banked
  8052  003B04  6F5F               	movwf	95,b	;volatile
  8053                           
  8054                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  8055  003B06  0E00               	movlw	0
  8056  003B08  6F5D               	movwf	93,b	;volatile
  8057                           
  8058                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  8059  003B0A  0E00               	movlw	0
  8060  003B0C  6F5E               	movwf	94,b	;volatile
  8061                           
  8062                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  8063  003B0E  0E00               	movlw	0
  8064  003B10  6F59               	movwf	89,b	;volatile
  8065                           
  8066                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  8067  003B12  0E00               	movlw	0
  8068  003B14  6F5A               	movwf	90,b	;volatile
  8069                           
  8070                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  8071  003B16  0E00               	movlw	0
  8072  003B18  6F5B               	movwf	91,b	;volatile
  8073                           
  8074                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  8075  003B1A  0E00               	movlw	0
  8076  003B1C  6E65               	movwf	101,c	;volatile
  8077                           
  8078                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  8079  003B1E  0E00               	movlw	0
  8080  003B20  6F58               	movwf	88,b	;volatile
  8081                           
  8082                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  8083  003B22  0E00               	movlw	0
  8084  003B24  6F56               	movwf	86,b	;volatile
  8085                           
  8086                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  8087  003B26  0E00               	movlw	0
  8088  003B28  6F57               	movwf	87,b	;volatile
  8089                           
  8090                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x94;
  8091  003B2A  0E94               	movlw	148
  8092  003B2C  6E60               	movwf	96,c	;volatile
  8093                           
  8094                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x0A;
  8095  003B2E  0E0A               	movlw	10
  8096  003B30  6F5C               	movwf	92,b	;volatile
  8097  003B32                     
  8098                           ; BSR set to: 15
  8099  003B32  0012               	return		;funcret
  8100  003B34                     __end_of_ADCC_Initialize:
  8101                           	opt callstack 0
  8102                           
  8103 ;; *************** function _ADCC_DisableContinuousConversion *****************
  8104 ;; Defined at:
  8105 ;;		line 267 in file "mcc_generated_files/adcc.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		None
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8123 ;;Total ram usage:        0 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    4
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_SYSTEM_Initialize
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text34
  8134  0041E0                     __ptext34:
  8135                           	opt callstack 0
  8136  0041E0                     _ADCC_DisableContinuousConversion:
  8137                           	opt callstack 25
  8138  0041E0                     
  8139                           ;mcc_generated_files/adcc.c: 270:     ADCON0bits.ADCONT = 0;
  8140  0041E0  9C60               	bcf	96,6,c	;volatile
  8141  0041E2  0012               	return		;funcret
  8142  0041E4                     __end_of_ADCC_DisableContinuousConversion:
  8143                           	opt callstack 0
  8144                           
  8145 ;; *************** function _PrintModbus *****************
  8146 ;; Defined at:
  8147 ;;		line 90 in file "Modbus.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;		None
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  i               2   41[BANK0 ] int 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  1    wreg      void 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8162 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8164 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;Total ram usage:        3 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:   13
  8168 ;; This function calls:
  8169 ;;		_printf
  8170 ;; This function is called by:
  8171 ;;		_main
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text35
  8176  003608                     __ptext35:
  8177                           	opt callstack 0
  8178  003608                     _PrintModbus:
  8179                           	opt callstack 17
  8180  003608                     
  8181                           ;Modbus.c: 95:     printf("\r\nModbus Data Capture Complete:\r\n");
  8182  003608  0E62               	movlw	low STR_10
  8183  00360A  0100               	movlb	0	; () banked
  8184  00360C  6F7D               	movwf	printf@fmt& (0+255),b
  8185  00360E  0EFC               	movlw	high STR_10
  8186  003610  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8187  003612  ECE9  F01F         	call	_printf	;wreg free
  8188  003616                     
  8189                           ;Modbus.c: 97:     for(i=0; i< ModDataCnt ; i++ ){
  8190  003616  0E00               	movlw	0
  8191  003618  0100               	movlb	0	; () banked
  8192  00361A  6F8A               	movwf	(PrintModbus@i+1)& (0+255),b
  8193  00361C  0E00               	movlw	0
  8194  00361E  6F89               	movwf	PrintModbus@i& (0+255),b
  8195  003620  EF2A  F01B         	goto	l7694
  8196  003624                     l7690:
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;Modbus.c: 98:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  8200  003624  0E66               	movlw	low STR_11
  8201  003626  6F7D               	movwf	printf@fmt& (0+255),b
  8202  003628  0EFE               	movlw	high STR_11
  8203  00362A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8204  00362C  C089  F07F         	movff	PrintModbus@i,?_printf+2
  8205  003630  C08A  F080         	movff	PrintModbus@i+1,?_printf+3
  8206  003634  0E00               	movlw	low _ModbusData
  8207  003636  2589               	addwf	PrintModbus@i& (0+255),w,b
  8208  003638  6ED9               	movwf	fsr2l,c
  8209  00363A  0E02               	movlw	high _ModbusData
  8210  00363C  218A               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  8211  00363E  6EDA               	movwf	fsr2h,c
  8212  003640  50DF               	movf	indf2,w,c
  8213  003642  6E55               	movwf	??_PrintModbus^0,c
  8214  003644  5055               	movf	??_PrintModbus^0,w,c
  8215  003646  6F81               	movwf	(?_printf+4)& (0+255),b
  8216  003648  6B82               	clrf	(?_printf+5)& (0+255),b
  8217  00364A  ECE9  F01F         	call	_printf	;wreg free
  8218  00364E                     
  8219                           ;Modbus.c: 99:     }
  8220  00364E  0100               	movlb	0	; () banked
  8221  003650  4B89               	infsnz	PrintModbus@i& (0+255),f,b
  8222  003652  2B8A               	incf	(PrintModbus@i+1)& (0+255),f,b
  8223  003654                     l7694:
  8224                           
  8225                           ; BSR set to: 0
  8226  003654  51D5               	movf	_ModDataCnt& (0+255),w,b
  8227  003656  5D89               	subwf	PrintModbus@i& (0+255),w,b
  8228  003658  518A               	movf	(PrintModbus@i+1)& (0+255),w,b
  8229  00365A  0A80               	xorlw	128
  8230  00365C  6E55               	movwf	??_PrintModbus^0,c
  8231  00365E  51D6               	movf	(_ModDataCnt+1)& (0+255),w,b
  8232  003660  0A80               	xorlw	128
  8233  003662  5855               	subwfb	??_PrintModbus^0,w,c
  8234  003664  A0D8               	btfss	status,0,c
  8235  003666  EF37  F01B         	goto	u7591
  8236  00366A  EF39  F01B         	goto	u7590
  8237  00366E                     u7591:
  8238  00366E  EF12  F01B         	goto	l7690
  8239  003672                     u7590:
  8240  003672                     
  8241                           ; BSR set to: 0
  8242                           ;Modbus.c: 100:     printf("\r\n\n");
  8243  003672  0E7A               	movlw	low (STR_55+65)
  8244  003674  6F7D               	movwf	printf@fmt& (0+255),b
  8245  003676  0EF9               	movlw	high (STR_55+65)
  8246  003678  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8247  00367A  ECE9  F01F         	call	_printf	;wreg free
  8248  00367E  0012               	return		;funcret
  8249  003680                     __end_of_PrintModbus:
  8250                           	opt callstack 0
  8251                           
  8252 ;; *************** function _ModbusRx *****************
  8253 ;; Defined at:
  8254 ;;		line 434 in file "Modbus.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      _Bool 
  8261 ;; Registers used:
  8262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;Total ram usage:        1 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:   14
  8275 ;; This function calls:
  8276 ;;		_AddRxBuffToModBus
  8277 ;;		_ClearRxBuff
  8278 ;;		_EUSART1_Read
  8279 ;;		_EUSART1_is_rx_ready
  8280 ;;		_RXMode
  8281 ;;		_checkCRC
  8282 ;;		_printf
  8283 ;; This function is called by:
  8284 ;;		_main
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text36
  8289  0022C8                     __ptext36:
  8290                           	opt callstack 0
  8291  0022C8                     _ModbusRx:
  8292                           	opt callstack 16
  8293  0022C8                     
  8294                           ;Modbus.c: 435:     RXMode();
  8295  0022C8  ECDF  F020         	call	_RXMode	;wreg free
  8296  0022CC                     
  8297                           ;Modbus.c: 436:     if(EUSART1_is_rx_ready()){
  8298  0022CC  EC66  F020         	call	_EUSART1_is_rx_ready	;wreg free
  8299  0022D0  0900               	iorlw	0
  8300  0022D2  B4D8               	btfsc	status,2,c
  8301  0022D4  EF6E  F011         	goto	u7391
  8302  0022D8  EF70  F011         	goto	u7390
  8303  0022DC                     u7391:
  8304  0022DC  EF20  F012         	goto	l7508
  8305  0022E0                     u7390:
  8306  0022E0                     
  8307                           ;Modbus.c: 437:         if(Debug ==1){
  8308  0022E0  0100               	movlb	0	; () banked
  8309  0022E2  05D9               	decf	_Debug& (0+255),w,b
  8310  0022E4  A4D8               	btfss	status,2,c
  8311  0022E6  EF77  F011         	goto	u7401
  8312  0022EA  EF79  F011         	goto	u7400
  8313  0022EE                     u7401:
  8314  0022EE  EF7F  F011         	goto	l7466
  8315  0022F2                     u7400:
  8316  0022F2                     
  8317                           ; BSR set to: 0
  8318                           ;Modbus.c: 438:             printf("Something in ESUART1 \r\n");
  8319  0022F2  0E4E               	movlw	low STR_25
  8320  0022F4  6F7D               	movwf	printf@fmt& (0+255),b
  8321  0022F6  0EFE               	movlw	high STR_25
  8322  0022F8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8323  0022FA  ECE9  F01F         	call	_printf	;wreg free
  8324  0022FE                     l7466:
  8325                           
  8326                           ;Modbus.c: 441:             if(EUSART1_is_rx_ready()){
  8327  0022FE  EC66  F020         	call	_EUSART1_is_rx_ready	;wreg free
  8328  002302  0900               	iorlw	0
  8329  002304  B4D8               	btfsc	status,2,c
  8330  002306  EF87  F011         	goto	u7411
  8331  00230A  EF89  F011         	goto	u7410
  8332  00230E                     u7411:
  8333  00230E  EFC0  F011         	goto	l7482
  8334  002312                     u7410:
  8335  002312  EFB3  F011         	goto	l7478
  8336  002316                     l7470:
  8337                           
  8338                           ;Modbus.c: 445:                     rxData[ByteNum] = EUSART1_Read();
  8339  002316  ECF3  F01C         	call	_EUSART1_Read	;wreg free
  8340  00231A  6E56               	movwf	??_ModbusRx^0,c
  8341  00231C  0E00               	movlw	low _rxData
  8342  00231E  0100               	movlb	0	; () banked
  8343  002320  25D3               	addwf	_ByteNum& (0+255),w,b
  8344  002322  6ED9               	movwf	fsr2l,c
  8345  002324  0E05               	movlw	high _rxData
  8346  002326  21D4               	addwfc	(_ByteNum+1)& (0+255),w,b
  8347  002328  6EDA               	movwf	fsr2h,c
  8348  00232A  C056  FFDF         	movff	??_ModbusRx,indf2
  8349  00232E                     
  8350                           ; BSR set to: 0
  8351                           ;Modbus.c: 447:                     if(Debug == 1){
  8352  00232E  05D9               	decf	_Debug& (0+255),w,b
  8353  002330  A4D8               	btfss	status,2,c
  8354  002332  EF9D  F011         	goto	u7421
  8355  002336  EF9F  F011         	goto	u7420
  8356  00233A                     u7421:
  8357  00233A  EFB0  F011         	goto	l7476
  8358  00233E                     u7420:
  8359  00233E                     
  8360                           ; BSR set to: 0
  8361                           ;Modbus.c: 448:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  8362  00233E  0E7B               	movlw	low STR_26
  8363  002340  6F7D               	movwf	printf@fmt& (0+255),b
  8364  002342  0EFF               	movlw	high STR_26
  8365  002344  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8366  002346  0E00               	movlw	low _rxData
  8367  002348  25D3               	addwf	_ByteNum& (0+255),w,b
  8368  00234A  6ED9               	movwf	fsr2l,c
  8369  00234C  0E05               	movlw	high _rxData
  8370  00234E  21D4               	addwfc	(_ByteNum+1)& (0+255),w,b
  8371  002350  6EDA               	movwf	fsr2h,c
  8372  002352  50DF               	movf	indf2,w,c
  8373  002354  6E56               	movwf	??_ModbusRx^0,c
  8374  002356  5056               	movf	??_ModbusRx^0,w,c
  8375  002358  6F7F               	movwf	(?_printf+2)& (0+255),b
  8376  00235A  6B80               	clrf	(?_printf+3)& (0+255),b
  8377  00235C  ECE9  F01F         	call	_printf	;wreg free
  8378  002360                     l7476:
  8379                           
  8380                           ;Modbus.c: 450:                     ByteNum++;
  8381  002360  0100               	movlb	0	; () banked
  8382  002362  4BD3               	infsnz	_ByteNum& (0+255),f,b
  8383  002364  2BD4               	incf	(_ByteNum+1)& (0+255),f,b
  8384  002366                     l7478:
  8385                           
  8386                           ;Modbus.c: 443:                 while(EUSART1_is_rx_ready()){
  8387  002366  EC66  F020         	call	_EUSART1_is_rx_ready	;wreg free
  8388  00236A  0900               	iorlw	0
  8389  00236C  A4D8               	btfss	status,2,c
  8390  00236E  EFBB  F011         	goto	u7431
  8391  002372  EFBD  F011         	goto	u7430
  8392  002376                     u7431:
  8393  002376  EF8B  F011         	goto	l7470
  8394  00237A                     u7430:
  8395  00237A                     
  8396                           ;Modbus.c: 453:                 RXStat = 1;
  8397  00237A  0E01               	movlw	1
  8398  00237C  0100               	movlb	0	; () banked
  8399  00237E  6FD8               	movwf	_RXStat& (0+255),b
  8400  002380                     l7482:
  8401                           
  8402                           ;Modbus.c: 456:             if(RXStat ==1){
  8403  002380  0100               	movlb	0	; () banked
  8404  002382  05D8               	decf	_RXStat& (0+255),w,b
  8405  002384  A4D8               	btfss	status,2,c
  8406  002386  EFC7  F011         	goto	u7441
  8407  00238A  EFC9  F011         	goto	u7440
  8408  00238E                     u7441:
  8409  00238E  EFE5  F011         	goto	l7494
  8410  002392                     u7440:
  8411  002392                     
  8412                           ; BSR set to: 0
  8413                           ;Modbus.c: 459:                 AddRxBuffToModBus();
  8414  002392  ECEB  F016         	call	_AddRxBuffToModBus	;wreg free
  8415  002396                     
  8416                           ;Modbus.c: 460:                 ClearRxBuff();
  8417  002396  ECE8  F01D         	call	_ClearRxBuff	;wreg free
  8418  00239A                     
  8419                           ;Modbus.c: 461:                 RXStat = 0;
  8420  00239A  0E00               	movlw	0
  8421  00239C  0100               	movlb	0	; () banked
  8422  00239E  6FD8               	movwf	_RXStat& (0+255),b
  8423  0023A0                     
  8424                           ; BSR set to: 0
  8425                           ;Modbus.c: 462:                 ByteNum = 0;
  8426  0023A0  0E00               	movlw	0
  8427  0023A2  6FD4               	movwf	(_ByteNum+1)& (0+255),b
  8428  0023A4  0E00               	movlw	0
  8429  0023A6  6FD3               	movwf	_ByteNum& (0+255),b
  8430  0023A8                     
  8431                           ; BSR set to: 0
  8432  0023A8  B883               	btfsc	131,4,c	;volatile
  8433  0023AA  EFD9  F011         	goto	u7451
  8434  0023AE  EFDC  F011         	goto	u7450
  8435  0023B2                     u7451:
  8436  0023B2  0E01               	movlw	1
  8437  0023B4  EFDD  F011         	goto	u7456
  8438  0023B8                     u7450:
  8439  0023B8  0E00               	movlw	0
  8440  0023BA                     u7456:
  8441  0023BA  0AFF               	xorlw	255
  8442  0023BC  6E56               	movwf	??_ModbusRx^0,c
  8443  0023BE  3A56               	swapf	??_ModbusRx^0,f,c
  8444  0023C0  5083               	movf	131,w,c	;volatile
  8445  0023C2  1856               	xorwf	??_ModbusRx^0,w,c
  8446  0023C4  0BEF               	andlw	-17
  8447  0023C6  1856               	xorwf	??_ModbusRx^0,w,c
  8448  0023C8  6E83               	movwf	131,c	;volatile
  8449  0023CA                     l7494:
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;Modbus.c: 467:         }while(ModDataCnt != ExpectedBytes);
  8453  0023CA  51FA               	movf	_ExpectedBytes& (0+255),w,b
  8454  0023CC  19D5               	xorwf	_ModDataCnt& (0+255),w,b
  8455  0023CE  E107               	bnz	u7461
  8456  0023D0  51FB               	movf	(_ExpectedBytes+1)& (0+255),w,b
  8457  0023D2  19D6               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  8458  0023D4  A4D8               	btfss	status,2,c
  8459  0023D6  EFEF  F011         	goto	u7461
  8460  0023DA  EFF1  F011         	goto	u7460
  8461  0023DE                     u7461:
  8462  0023DE  EF7F  F011         	goto	l7466
  8463  0023E2                     u7460:
  8464  0023E2                     
  8465                           ; BSR set to: 0
  8466  0023E2  BA83               	btfsc	131,5,c	;volatile
  8467  0023E4  EFF6  F011         	goto	u7471
  8468  0023E8  EFF9  F011         	goto	u7470
  8469  0023EC                     u7471:
  8470  0023EC  0E01               	movlw	1
  8471  0023EE  EFFA  F011         	goto	u7476
  8472  0023F2                     u7470:
  8473  0023F2  0E00               	movlw	0
  8474  0023F4                     u7476:
  8475  0023F4  0AFF               	xorlw	255
  8476  0023F6  6E56               	movwf	??_ModbusRx^0,c
  8477  0023F8  3A56               	swapf	??_ModbusRx^0,f,c
  8478  0023FA  4656               	rlncf	??_ModbusRx^0,f,c
  8479  0023FC  5083               	movf	131,w,c	;volatile
  8480  0023FE  1856               	xorwf	??_ModbusRx^0,w,c
  8481  002400  0BDF               	andlw	-33
  8482  002402  1856               	xorwf	??_ModbusRx^0,w,c
  8483  002404  6E83               	movwf	131,c	;volatile
  8484  002406                     
  8485                           ; BSR set to: 0
  8486                           ;Modbus.c: 472:         if(checkCRC() == 1)
  8487  002406  ECD4  F012         	call	_checkCRC	;wreg free
  8488  00240A  06E8               	decf	wreg,f,c
  8489  00240C  A4D8               	btfss	status,2,c
  8490  00240E  EF0B  F012         	goto	u7481
  8491  002412  EF0D  F012         	goto	u7480
  8492  002416                     u7481:
  8493  002416  EF16  F012         	goto	l7502
  8494  00241A                     u7480:
  8495  00241A                     
  8496                           ;Modbus.c: 473:         {;Modbus.c: 474:             printf("\r\nReceived Modbus CRC che
      +                          cked out.\r\n");
  8497  00241A  0ED3               	movlw	low STR_27
  8498  00241C  0100               	movlb	0	; () banked
  8499  00241E  6F7D               	movwf	printf@fmt& (0+255),b
  8500  002420  0EFB               	movlw	high STR_27
  8501  002422  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8502  002424  ECE9  F01F         	call	_printf	;wreg free
  8503                           
  8504                           ;Modbus.c: 475:         }else{
  8505  002428  EF1D  F012         	goto	l7504
  8506  00242C                     l7502:
  8507                           
  8508                           ;Modbus.c: 476:             printf("\r\nReceived Modbus CRC is bad.\r\n");
  8509  00242C  0EE6               	movlw	low STR_28
  8510  00242E  0100               	movlb	0	; () banked
  8511  002430  6F7D               	movwf	printf@fmt& (0+255),b
  8512  002432  0EFC               	movlw	high STR_28
  8513  002434  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8514  002436  ECE9  F01F         	call	_printf	;wreg free
  8515  00243A                     l7504:
  8516                           
  8517                           ;Modbus.c: 480:         return 1;
  8518  00243A  0E01               	movlw	1
  8519  00243C  EF21  F012         	goto	l836
  8520  002440                     l7508:
  8521                           
  8522                           ;Modbus.c: 482:     return 0;
  8523  002440  0E00               	movlw	0
  8524  002442                     l836:
  8525  002442  0012               	return		;funcret
  8526  002444                     __end_of_ModbusRx:
  8527                           	opt callstack 0
  8528                           
  8529 ;; *************** function _checkCRC *****************
  8530 ;; Defined at:
  8531 ;;		line 106 in file "Modbus.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  i               2   54[BANK0 ] int 
  8536 ;;  crc             2   52[BANK0 ] unsigned int 
  8537 ;;  j               2   50[BANK0 ] int 
  8538 ;;  crcLow          2   48[BANK0 ] unsigned int 
  8539 ;;  crcHigh         2   46[BANK0 ] unsigned int 
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      _Bool 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;Total ram usage:       15 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:   13
  8556 ;; This function calls:
  8557 ;;		_printf
  8558 ;; This function is called by:
  8559 ;;		_ModbusRx
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text37
  8564  0025A8                     __ptext37:
  8565                           	opt callstack 0
  8566  0025A8                     _checkCRC:
  8567                           	opt callstack 16
  8568  0025A8                     
  8569                           ;Modbus.c: 107:   unsigned int crc = 0xFFFF;
  8570  0025A8  0100               	movlb	0	; () banked
  8571  0025AA  6994               	setf	checkCRC@crc& (0+255),b
  8572  0025AC  6995               	setf	(checkCRC@crc+1)& (0+255),b
  8573  0025AE                     
  8574                           ; BSR set to: 0
  8575                           ;Modbus.c: 109:   unsigned int crcLow = 0;
  8576  0025AE  0E00               	movlw	0
  8577  0025B0  6F91               	movwf	(checkCRC@crcLow+1)& (0+255),b
  8578  0025B2  0E00               	movlw	0
  8579  0025B4  6F90               	movwf	checkCRC@crcLow& (0+255),b
  8580                           
  8581                           ;Modbus.c: 110:   int i,j = 0;
  8582  0025B6  0E00               	movlw	0
  8583  0025B8  6F93               	movwf	(checkCRC@j+1)& (0+255),b
  8584  0025BA  0E00               	movlw	0
  8585  0025BC  6F92               	movwf	checkCRC@j& (0+255),b
  8586                           
  8587                           ;Modbus.c: 112:     for(i=0;i<ModDataCnt-2;i++){
  8588  0025BE  0E00               	movlw	0
  8589  0025C0  6F97               	movwf	(checkCRC@i+1)& (0+255),b
  8590  0025C2  0E00               	movlw	0
  8591  0025C4  6F96               	movwf	checkCRC@i& (0+255),b
  8592  0025C6  EF14  F013         	goto	l7304
  8593  0025CA                     l7286:
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;Modbus.c: 113:       crc ^= ModbusData[i];
  8597  0025CA  0E00               	movlw	low _ModbusData
  8598  0025CC  2596               	addwf	checkCRC@i& (0+255),w,b
  8599  0025CE  6ED9               	movwf	fsr2l,c
  8600  0025D0  0E02               	movlw	high _ModbusData
  8601  0025D2  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8602  0025D4  6EDA               	movwf	fsr2h,c
  8603  0025D6  50DF               	movf	indf2,w,c
  8604  0025D8  6F89               	movwf	??_checkCRC& (0+255),b
  8605  0025DA  5189               	movf	??_checkCRC& (0+255),w,b
  8606  0025DC  1B94               	xorwf	checkCRC@crc& (0+255),f,b
  8607  0025DE                     
  8608                           ; BSR set to: 0
  8609                           ;Modbus.c: 114:       for(j=8; j!=0; j--){
  8610  0025DE  0E00               	movlw	0
  8611  0025E0  6F93               	movwf	(checkCRC@j+1)& (0+255),b
  8612  0025E2  0E08               	movlw	8
  8613  0025E4  6F92               	movwf	checkCRC@j& (0+255),b
  8614  0025E6                     l730:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;Modbus.c: 115:         if((crc & 0x0001) != 0){
  8618  0025E6  A194               	btfss	checkCRC@crc& (0+255),0,b
  8619  0025E8  EFF8  F012         	goto	u7171
  8620  0025EC  EFFA  F012         	goto	u7170
  8621  0025F0                     u7171:
  8622  0025F0  EF03  F013         	goto	l7298
  8623  0025F4                     u7170:
  8624  0025F4                     
  8625                           ; BSR set to: 0
  8626                           ;Modbus.c: 116:           crc >>= 1;
  8627  0025F4  90D8               	bcf	status,0,c
  8628  0025F6  3395               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  8629  0025F8  3394               	rrcf	checkCRC@crc& (0+255),f,b
  8630  0025FA                     
  8631                           ; BSR set to: 0
  8632                           ;Modbus.c: 117:           crc ^= 0xA001;
  8633  0025FA  0E01               	movlw	1
  8634  0025FC  1B94               	xorwf	checkCRC@crc& (0+255),f,b
  8635  0025FE  0EA0               	movlw	160
  8636  002600  1B95               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  8637                           
  8638                           ;Modbus.c: 118:         }
  8639  002602  EF06  F013         	goto	l733
  8640  002606                     l7298:
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;Modbus.c: 120:           crc >>= 1;
  8644  002606  90D8               	bcf	status,0,c
  8645  002608  3395               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  8646  00260A  3394               	rrcf	checkCRC@crc& (0+255),f,b
  8647  00260C                     l733:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;Modbus.c: 122:       }
  8651  00260C  0792               	decf	checkCRC@j& (0+255),f,b
  8652  00260E  A0D8               	btfss	status,0,c
  8653  002610  0793               	decf	(checkCRC@j+1)& (0+255),f,b
  8654  002612                     
  8655                           ; BSR set to: 0
  8656  002612  5192               	movf	checkCRC@j& (0+255),w,b
  8657  002614  1193               	iorwf	(checkCRC@j+1)& (0+255),w,b
  8658  002616  A4D8               	btfss	status,2,c
  8659  002618  EF10  F013         	goto	u7181
  8660  00261C  EF12  F013         	goto	u7180
  8661  002620                     u7181:
  8662  002620  EFF3  F012         	goto	l730
  8663  002624                     u7180:
  8664  002624                     
  8665                           ; BSR set to: 0
  8666                           ;Modbus.c: 123:     }
  8667  002624  4B96               	infsnz	checkCRC@i& (0+255),f,b
  8668  002626  2B97               	incf	(checkCRC@i+1)& (0+255),f,b
  8669  002628                     l7304:
  8670                           
  8671                           ; BSR set to: 0
  8672  002628  0EFE               	movlw	254
  8673  00262A  6F89               	movwf	??_checkCRC& (0+255),b
  8674  00262C  0EFF               	movlw	255
  8675  00262E  6F8A               	movwf	(??_checkCRC+1)& (0+255),b
  8676  002630  C0D5  F08B         	movff	_ModDataCnt,??_checkCRC+2
  8677  002634  C0D6  F08C         	movff	_ModDataCnt+1,??_checkCRC+3
  8678  002638  5189               	movf	??_checkCRC& (0+255),w,b
  8679  00263A  278B               	addwf	(??_checkCRC+2)& (0+255),f,b
  8680  00263C  518A               	movf	(??_checkCRC+1)& (0+255),w,b
  8681  00263E  238C               	addwfc	(??_checkCRC+3)& (0+255),f,b
  8682  002640  518B               	movf	(??_checkCRC+2)& (0+255),w,b
  8683  002642  5D96               	subwf	checkCRC@i& (0+255),w,b
  8684  002644  5197               	movf	(checkCRC@i+1)& (0+255),w,b
  8685  002646  0A80               	xorlw	128
  8686  002648  6F8D               	movwf	(??_checkCRC+4)& (0+255),b
  8687  00264A  518C               	movf	(??_checkCRC+3)& (0+255),w,b
  8688  00264C  0A80               	xorlw	128
  8689  00264E  598D               	subwfb	(??_checkCRC+4)& (0+255),w,b
  8690  002650  A0D8               	btfss	status,0,c
  8691  002652  EF2D  F013         	goto	u7191
  8692  002656  EF2F  F013         	goto	u7190
  8693  00265A                     u7191:
  8694  00265A  EFE5  F012         	goto	l7286
  8695  00265E                     u7190:
  8696  00265E                     
  8697                           ; BSR set to: 0
  8698                           ;Modbus.c: 125:   crcHigh = (crc & 0x00FF);
  8699  00265E  5194               	movf	checkCRC@crc& (0+255),w,b
  8700  002660  6F8E               	movwf	checkCRC@crcHigh& (0+255),b
  8701  002662  6B8F               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  8702                           
  8703                           ;Modbus.c: 126:   crcLow = (crc & 0xFF00) >>8;
  8704  002664  C094  F089         	movff	checkCRC@crc,??_checkCRC
  8705  002668  C095  F08A         	movff	checkCRC@crc+1,??_checkCRC+1
  8706  00266C  C08A  F089         	movff	??_checkCRC+1,??_checkCRC
  8707  002670  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8708  002672  5189               	movf	??_checkCRC& (0+255),w,b
  8709  002674  6F90               	movwf	checkCRC@crcLow& (0+255),b
  8710  002676  6B91               	clrf	(checkCRC@crcLow+1)& (0+255),b
  8711  002678                     
  8712                           ; BSR set to: 0
  8713                           ;Modbus.c: 128:   if(Debug == 1){
  8714  002678  05D9               	decf	_Debug& (0+255),w,b
  8715  00267A  A4D8               	btfss	status,2,c
  8716  00267C  EF42  F013         	goto	u7201
  8717  002680  EF44  F013         	goto	u7200
  8718  002684                     u7201:
  8719  002684  EF52  F013         	goto	l7312
  8720  002688                     u7200:
  8721  002688                     
  8722                           ; BSR set to: 0
  8723                           ;Modbus.c: 129:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  8724  002688  0E1C               	movlw	low STR_13
  8725  00268A  6F7D               	movwf	printf@fmt& (0+255),b
  8726  00268C  0EFC               	movlw	high STR_13
  8727  00268E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8728  002690  C08E  F07F         	movff	checkCRC@crcHigh,?_printf+2
  8729  002694  C08F  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  8730  002698  C090  F081         	movff	checkCRC@crcLow,?_printf+4
  8731  00269C  C091  F082         	movff	checkCRC@crcLow+1,?_printf+5
  8732  0026A0  ECE9  F01F         	call	_printf	;wreg free
  8733  0026A4                     l7312:
  8734                           
  8735                           ;Modbus.c: 133:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  8736  0026A4  0E00               	movlw	low _ModbusData
  8737  0026A6  0100               	movlb	0	; () banked
  8738  0026A8  2596               	addwf	checkCRC@i& (0+255),w,b
  8739  0026AA  6ED9               	movwf	fsr2l,c
  8740  0026AC  0E02               	movlw	high _ModbusData
  8741  0026AE  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8742  0026B0  6EDA               	movwf	fsr2h,c
  8743  0026B2  50DF               	movf	indf2,w,c
  8744  0026B4  6F89               	movwf	??_checkCRC& (0+255),b
  8745  0026B6  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8746  0026B8  518E               	movf	checkCRC@crcHigh& (0+255),w,b
  8747  0026BA  1989               	xorwf	??_checkCRC& (0+255),w,b
  8748  0026BC  E107               	bnz	u7211
  8749  0026BE  518F               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  8750  0026C0  198A               	xorwf	(??_checkCRC+1)& (0+255),w,b
  8751  0026C2  A4D8               	btfss	status,2,c
  8752  0026C4  EF66  F013         	goto	u7211
  8753  0026C8  EF68  F013         	goto	u7210
  8754  0026CC                     u7211:
  8755  0026CC  EF80  F013         	goto	l7322
  8756  0026D0                     u7210:
  8757  0026D0                     
  8758                           ; BSR set to: 0
  8759  0026D0  0E01               	movlw	low (_ModbusData+1)
  8760  0026D2  2596               	addwf	checkCRC@i& (0+255),w,b
  8761  0026D4  6ED9               	movwf	fsr2l,c
  8762  0026D6  0E02               	movlw	high (_ModbusData+1)
  8763  0026D8  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8764  0026DA  6EDA               	movwf	fsr2h,c
  8765  0026DC  50DF               	movf	indf2,w,c
  8766  0026DE  6F89               	movwf	??_checkCRC& (0+255),b
  8767  0026E0  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8768  0026E2  5190               	movf	checkCRC@crcLow& (0+255),w,b
  8769  0026E4  1989               	xorwf	??_checkCRC& (0+255),w,b
  8770  0026E6  E107               	bnz	u7221
  8771  0026E8  5191               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  8772  0026EA  198A               	xorwf	(??_checkCRC+1)& (0+255),w,b
  8773  0026EC  A4D8               	btfss	status,2,c
  8774  0026EE  EF7B  F013         	goto	u7221
  8775  0026F2  EF7D  F013         	goto	u7220
  8776  0026F6                     u7221:
  8777  0026F6  EF80  F013         	goto	l7322
  8778  0026FA                     u7220:
  8779  0026FA                     
  8780                           ; BSR set to: 0
  8781                           ;Modbus.c: 134:   {;Modbus.c: 135:     return 1;
  8782  0026FA  0E01               	movlw	1
  8783  0026FC  EF81  F013         	goto	l737
  8784  002700                     l7322:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;Modbus.c: 138:     return 0;
  8788  002700  0E00               	movlw	0
  8789  002702                     l737:
  8790                           
  8791                           ; BSR set to: 0
  8792  002702  0012               	return		;funcret
  8793  002704                     __end_of_checkCRC:
  8794                           	opt callstack 0
  8795                           
  8796 ;; *************** function _RXMode *****************
  8797 ;; Defined at:
  8798 ;;		line 42 in file "Modbus.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;		None
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      void 
  8805 ;; Registers used:
  8806 ;;		None
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8816 ;;Total ram usage:        0 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    4
  8819 ;; This function calls:
  8820 ;;		Nothing
  8821 ;; This function is called by:
  8822 ;;		_main
  8823 ;;		_ModbusRx
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text38
  8828  0041BE                     __ptext38:
  8829                           	opt callstack 0
  8830  0041BE                     _RXMode:
  8831                           	opt callstack 26
  8832  0041BE  9086               	bcf	134,0,c	;volatile
  8833  0041C0  9683               	bcf	131,3,c	;volatile
  8834  0041C2  0012               	return		;funcret
  8835  0041C4                     __end_of_RXMode:
  8836                           	opt callstack 0
  8837                           
  8838 ;; *************** function _EUSART1_is_rx_ready *****************
  8839 ;; Defined at:
  8840 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;		None
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      _Bool 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8858 ;;Total ram usage:        0 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    4
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_ModbusRx
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text39
  8869  0040CC                     __ptext39:
  8870                           	opt callstack 0
  8871  0040CC                     _EUSART1_is_rx_ready:
  8872                           	opt callstack 25
  8873  0040CC                     
  8874                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
  8875  0040CC  0100               	movlb	0	; () banked
  8876  0040CE  51DB               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  8877  0040D0  A4D8               	btfss	status,2,c
  8878  0040D2  EF6D  F020         	goto	u6971
  8879  0040D6  EF70  F020         	goto	u6970
  8880  0040DA                     u6971:
  8881  0040DA  0E01               	movlw	1
  8882  0040DC  EF71  F020         	goto	u6980
  8883  0040E0                     u6970:
  8884  0040E0  0E00               	movlw	0
  8885  0040E2                     u6980:
  8886  0040E2                     
  8887                           ; BSR set to: 0
  8888  0040E2  0012               	return		;funcret
  8889  0040E4                     __end_of_EUSART1_is_rx_ready:
  8890                           	opt callstack 0
  8891                           
  8892 ;; *************** function _EUSART1_Read *****************
  8893 ;; Defined at:
  8894 ;;		line 153 in file "mcc_generated_files/eusart1.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;		None
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  readValue       1    4[COMRAM] unsigned char 
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      unsigned char 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8912 ;;Total ram usage:        1 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    4
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_ModbusRx
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text40
  8923  0039E6                     __ptext40:
  8924                           	opt callstack 0
  8925  0039E6                     _EUSART1_Read:
  8926                           	opt callstack 25
  8927  0039E6                     l7132:
  8928                           
  8929                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
  8930  0039E6  0100               	movlb	0	; () banked
  8931  0039E8  51DB               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  8932  0039EA  B4D8               	btfsc	status,2,c
  8933  0039EC  EFFA  F01C         	goto	u6991
  8934  0039F0  EFFC  F01C         	goto	u6990
  8935  0039F4                     u6991:
  8936  0039F4  EFF3  F01C         	goto	l7132
  8937  0039F8                     u6990:
  8938  0039F8                     
  8939                           ; BSR set to: 0
  8940                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  8941  0039F8  0E00               	movlw	low _eusart1RxStatusBuffer
  8942  0039FA  25DC               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  8943  0039FC  6ED9               	movwf	fsr2l,c
  8944  0039FE  6ADA               	clrf	fsr2h,c
  8945  003A00  0E03               	movlw	high _eusart1RxStatusBuffer
  8946  003A02  22DA               	addwfc	fsr2h,f,c
  8947  003A04  50DF               	movf	indf2,w,c
  8948  003A06  6FDA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8949                           
  8950                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
  8951  003A08  0E00               	movlw	low _eusart1RxBuffer
  8952  003A0A  25DC               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  8953  003A0C  6ED9               	movwf	fsr2l,c
  8954  003A0E  6ADA               	clrf	fsr2h,c
  8955  003A10  0E04               	movlw	high _eusart1RxBuffer
  8956  003A12  22DA               	addwfc	fsr2h,f,c
  8957  003A14  50DF               	movf	indf2,w,c
  8958  003A16  6E05               	movwf	EUSART1_Read@readValue^0,c
  8959  003A18                     
  8960                           ; BSR set to: 0
  8961  003A18  2BDC               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  8962  003A1A                     
  8963                           ; BSR set to: 0
  8964                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8965  003A1A  0E63               	movlw	99
  8966  003A1C  65DC               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  8967  003A1E  EF13  F01D         	goto	u7001
  8968  003A22  EF15  F01D         	goto	u7000
  8969  003A26                     u7001:
  8970  003A26  EF17  F01D         	goto	l7142
  8971  003A2A                     u7000:
  8972  003A2A                     
  8973                           ; BSR set to: 0
  8974                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
  8975  003A2A  0E00               	movlw	0
  8976  003A2C  6FDC               	movwf	_eusart1RxTail& (0+255),b	;volatile
  8977  003A2E                     l7142:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
  8981  003A2E  010E               	movlb	14	; () banked
  8982  003A30  9BC5               	bcf	197,5,b	;volatile
  8983  003A32                     
  8984                           ; BSR set to: 14
  8985                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
  8986  003A32  0100               	movlb	0	; () banked
  8987  003A34  07DB               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  8988  003A36                     
  8989                           ; BSR set to: 0
  8990                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
  8991  003A36  010E               	movlb	14	; () banked
  8992  003A38  8BC5               	bsf	197,5,b	;volatile
  8993  003A3A                     
  8994                           ; BSR set to: 14
  8995                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
  8996  003A3A  5005               	movf	EUSART1_Read@readValue^0,w,c
  8997  003A3C                     
  8998                           ; BSR set to: 14
  8999  003A3C  0012               	return		;funcret
  9000  003A3E                     __end_of_EUSART1_Read:
  9001                           	opt callstack 0
  9002                           
  9003 ;; *************** function _ClearRxBuff *****************
  9004 ;; Defined at:
  9005 ;;		line 58 in file "Modbus.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  i               2    5[COMRAM] int 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9023 ;;Total ram usage:        3 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    4
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_main
  9030 ;;		_ModbusRx
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text41
  9035  003BD0                     __ptext41:
  9036                           	opt callstack 0
  9037  003BD0                     _ClearRxBuff:
  9038                           	opt callstack 25
  9039  003BD0                     
  9040                           ;Modbus.c: 60:     int i = 0;
  9041  003BD0  0E00               	movlw	0
  9042  003BD2  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  9043  003BD4  0E00               	movlw	0
  9044  003BD6  6E06               	movwf	ClearRxBuff@i^0,c
  9045                           
  9046                           ;Modbus.c: 61:     for(i=0; i<ByteNum; i++ ){
  9047  003BD8  0E00               	movlw	0
  9048  003BDA  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  9049  003BDC  0E00               	movlw	0
  9050  003BDE  6E06               	movwf	ClearRxBuff@i^0,c
  9051  003BE0  EFFC  F01D         	goto	l7222
  9052  003BE4                     l7218:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;Modbus.c: 62:         rxData[i] = 0xFF;
  9056  003BE4  0E00               	movlw	low _rxData
  9057  003BE6  2406               	addwf	ClearRxBuff@i^0,w,c
  9058  003BE8  6ED9               	movwf	fsr2l,c
  9059  003BEA  0E05               	movlw	high _rxData
  9060  003BEC  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  9061  003BEE  6EDA               	movwf	fsr2h,c
  9062  003BF0  0EFF               	movlw	255
  9063  003BF2  6EDF               	movwf	indf2,c
  9064  003BF4                     
  9065                           ; BSR set to: 0
  9066                           ;Modbus.c: 63:     }
  9067  003BF4  4A06               	infsnz	ClearRxBuff@i^0,f,c
  9068  003BF6  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  9069  003BF8                     l7222:
  9070  003BF8  0100               	movlb	0	; () banked
  9071  003BFA  51D3               	movf	_ByteNum& (0+255),w,b
  9072  003BFC  5C06               	subwf	ClearRxBuff@i^0,w,c
  9073  003BFE  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  9074  003C00  0A80               	xorlw	128
  9075  003C02  6E05               	movwf	??_ClearRxBuff^0,c
  9076  003C04  51D4               	movf	(_ByteNum+1)& (0+255),w,b
  9077  003C06  0A80               	xorlw	128
  9078  003C08  5805               	subwfb	??_ClearRxBuff^0,w,c
  9079  003C0A  A0D8               	btfss	status,0,c
  9080  003C0C  EF0A  F01E         	goto	u7081
  9081  003C10  EF0C  F01E         	goto	u7080
  9082  003C14                     u7081:
  9083  003C14  EFF2  F01D         	goto	l7218
  9084  003C18                     u7080:
  9085  003C18                     
  9086                           ; BSR set to: 0
  9087  003C18  0012               	return		;funcret
  9088  003C1A                     __end_of_ClearRxBuff:
  9089                           	opt callstack 0
  9090                           
  9091 ;; *************** function _AddRxBuffToModBus *****************
  9092 ;; Defined at:
  9093 ;;		line 67 in file "Modbus.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  i               2   41[BANK0 ] int 
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      void 
  9100 ;; Registers used:
  9101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9110 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9111 ;;Total ram usage:        3 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:   13
  9114 ;; This function calls:
  9115 ;;		_printf
  9116 ;; This function is called by:
  9117 ;;		_ModbusRx
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text42
  9122  002DD6                     __ptext42:
  9123                           	opt callstack 0
  9124  002DD6                     _AddRxBuffToModBus:
  9125                           	opt callstack 16
  9126  002DD6                     
  9127                           ;Modbus.c: 68:     int i = 0;
  9128  002DD6  0E00               	movlw	0
  9129  002DD8  0100               	movlb	0	; () banked
  9130  002DDA  6F8A               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  9131  002DDC  0E00               	movlw	0
  9132  002DDE  6F89               	movwf	AddRxBuffToModBus@i& (0+255),b
  9133                           
  9134                           ;Modbus.c: 70:     for(i=0l; i<ByteNum; i++){
  9135  002DE0  0E00               	movlw	0
  9136  002DE2  6F8A               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  9137  002DE4  0E00               	movlw	0
  9138  002DE6  6F89               	movwf	AddRxBuffToModBus@i& (0+255),b
  9139  002DE8  EF08  F017         	goto	l7266
  9140  002DEC                     l7260:
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;Modbus.c: 71:         ModbusData[ModDataCnt] = rxData[i];
  9144  002DEC  0E00               	movlw	low _rxData
  9145  002DEE  2589               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  9146  002DF0  6ED9               	movwf	fsr2l,c
  9147  002DF2  0E05               	movlw	high _rxData
  9148  002DF4  218A               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  9149  002DF6  6EDA               	movwf	fsr2h,c
  9150  002DF8  0E00               	movlw	low _ModbusData
  9151  002DFA  25D5               	addwf	_ModDataCnt& (0+255),w,b
  9152  002DFC  6EE1               	movwf	fsr1l,c
  9153  002DFE  0E02               	movlw	high _ModbusData
  9154  002E00  21D6               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  9155  002E02  6EE2               	movwf	fsr1h,c
  9156  002E04  CFDF FFE7          	movff	indf2,indf1
  9157  002E08                     
  9158                           ; BSR set to: 0
  9159                           ;Modbus.c: 72:         ModDataCnt++;
  9160  002E08  4BD5               	infsnz	_ModDataCnt& (0+255),f,b
  9161  002E0A  2BD6               	incf	(_ModDataCnt+1)& (0+255),f,b
  9162  002E0C                     
  9163                           ; BSR set to: 0
  9164                           ;Modbus.c: 73:     }
  9165  002E0C  4B89               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  9166  002E0E  2B8A               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  9167  002E10                     l7266:
  9168                           
  9169                           ; BSR set to: 0
  9170  002E10  51D3               	movf	_ByteNum& (0+255),w,b
  9171  002E12  5D89               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  9172  002E14  518A               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  9173  002E16  0A80               	xorlw	128
  9174  002E18  6E55               	movwf	??_AddRxBuffToModBus^0,c
  9175  002E1A  51D4               	movf	(_ByteNum+1)& (0+255),w,b
  9176  002E1C  0A80               	xorlw	128
  9177  002E1E  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  9178  002E20  A0D8               	btfss	status,0,c
  9179  002E22  EF15  F017         	goto	u7131
  9180  002E26  EF17  F017         	goto	u7130
  9181  002E2A                     u7131:
  9182  002E2A  EFF6  F016         	goto	l7260
  9183  002E2E                     u7130:
  9184  002E2E                     
  9185                           ; BSR set to: 0
  9186                           ;Modbus.c: 75:     if(Debug ==1){
  9187  002E2E  05D9               	decf	_Debug& (0+255),w,b
  9188  002E30  A4D8               	btfss	status,2,c
  9189  002E32  EF1D  F017         	goto	u7141
  9190  002E36  EF1F  F017         	goto	u7140
  9191  002E3A                     u7141:
  9192  002E3A  EF30  F017         	goto	l7272
  9193  002E3E                     u7140:
  9194  002E3E                     
  9195                           ; BSR set to: 0
  9196                           ;Modbus.c: 76:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
  9197  002E3E  0EEE               	movlw	low STR_8
  9198  002E40  6F7D               	movwf	printf@fmt& (0+255),b
  9199  002E42  0EF9               	movlw	high STR_8
  9200  002E44  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9201  002E46  ECE9  F01F         	call	_printf	;wreg free
  9202                           
  9203                           ;Modbus.c: 77:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  9204  002E4A  0E60               	movlw	low STR_9
  9205  002E4C  0100               	movlb	0	; () banked
  9206  002E4E  6F7D               	movwf	printf@fmt& (0+255),b
  9207  002E50  0EFD               	movlw	high STR_9
  9208  002E52  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9209  002E54  C0D5  F07F         	movff	_ModDataCnt,?_printf+2
  9210  002E58  C0D6  F080         	movff	_ModDataCnt+1,?_printf+3
  9211  002E5C  ECE9  F01F         	call	_printf	;wreg free
  9212  002E60                     l7272:
  9213                           
  9214                           ;Modbus.c: 80:     if(ModbusData[1] == 0x0F){
  9215  002E60  0E0F               	movlw	15
  9216  002E62  0102               	movlb	2	; () banked
  9217  002E64  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9218  002E66  A4D8               	btfss	status,2,c
  9219  002E68  EF38  F017         	goto	u7151
  9220  002E6C  EF3A  F017         	goto	u7150
  9221  002E70                     u7151:
  9222  002E70  EF43  F017         	goto	l7276
  9223  002E74                     u7150:
  9224  002E74                     l7274:
  9225                           
  9226                           ; BSR set to: 2
  9227                           ;Modbus.c: 81:         ExpectedBytes = ModbusData[6] + 9;
  9228  002E74  0E09               	movlw	9
  9229  002E76  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  9230  002E78  0100               	movlb	0	; () banked
  9231  002E7A  6FFA               	movwf	_ExpectedBytes& (0+255),b
  9232  002E7C  6BFB               	clrf	(_ExpectedBytes+1)& (0+255),b
  9233  002E7E  0E00               	movlw	0
  9234  002E80  23FB               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  9235                           
  9236                           ;Modbus.c: 82:     }else if (ModbusData[1] == 0x10){
  9237  002E82  EF53  F017         	goto	l719
  9238  002E86                     l7276:
  9239                           
  9240                           ; BSR set to: 2
  9241  002E86  0E10               	movlw	16
  9242  002E88  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9243  002E8A  A4D8               	btfss	status,2,c
  9244  002E8C  EF4A  F017         	goto	u7161
  9245  002E90  EF4C  F017         	goto	u7160
  9246  002E94                     u7161:
  9247  002E94  EF4E  F017         	goto	l7280
  9248  002E98                     u7160:
  9249  002E98  EF3A  F017         	goto	l7274
  9250  002E9C                     l7280:
  9251                           
  9252                           ; BSR set to: 2
  9253                           ;Modbus.c: 85:         ExpectedBytes = 8;
  9254  002E9C  0E00               	movlw	0
  9255  002E9E  0100               	movlb	0	; () banked
  9256  002EA0  6FFB               	movwf	(_ExpectedBytes+1)& (0+255),b
  9257  002EA2  0E08               	movlw	8
  9258  002EA4  6FFA               	movwf	_ExpectedBytes& (0+255),b
  9259  002EA6                     l719:
  9260                           
  9261                           ; BSR set to: 0
  9262  002EA6  0012               	return		;funcret
  9263  002EA8                     __end_of_AddRxBuffToModBus:
  9264                           	opt callstack 0
  9265                           
  9266 ;; *************** function _ModbusFC10 *****************
  9267 ;; Defined at:
  9268 ;;		line 283 in file "Modbus.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;		None
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;  j               2   51[BANK0 ] int 
  9273 ;;  i               2   49[BANK0 ] int 
  9274 ;;  TempData        2   47[BANK0 ] unsigned int 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9285 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9286 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9287 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9288 ;;Total ram usage:       10 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:   14
  9291 ;; This function calls:
  9292 ;;		_PrintMB400
  9293 ;;		_PrintModRespon
  9294 ;;		_UART1_Write_string
  9295 ;;		_generateCRC
  9296 ;; This function is called by:
  9297 ;;		_main
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text43
  9302  001AB2                     __ptext43:
  9303                           	opt callstack 0
  9304  001AB2                     _ModbusFC10:
  9305                           	opt callstack 16
  9306  001AB2                     
  9307                           ;Modbus.c: 288:     int j = 0;
  9308  001AB2  0E00               	movlw	0
  9309  001AB4  0100               	movlb	0	; () banked
  9310  001AB6  6F94               	movwf	(ModbusFC10@j+1)& (0+255),b
  9311  001AB8  0E00               	movlw	0
  9312  001ABA  6F93               	movwf	ModbusFC10@j& (0+255),b
  9313                           
  9314                           ;Modbus.c: 289:     unsigned int TempData = 0x0000;
  9315  001ABC  0E00               	movlw	0
  9316  001ABE  6F90               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  9317  001AC0  0E00               	movlw	0
  9318  001AC2  6F8F               	movwf	ModbusFC10@TempData& (0+255),b
  9319                           
  9320                           ;Modbus.c: 291:     MBResCnt = 0;
  9321  001AC4  0E00               	movlw	0
  9322  001AC6  6FD2               	movwf	(_MBResCnt+1)& (0+255),b
  9323  001AC8  0E00               	movlw	0
  9324  001ACA  6FD1               	movwf	_MBResCnt& (0+255),b
  9325  001ACC                     
  9326                           ; BSR set to: 0
  9327                           ;Modbus.c: 292:     MBRespon[MBResCnt] = ModbusData[0];
  9328  001ACC  0EA0               	movlw	low _MBRespon
  9329  001ACE  25D1               	addwf	_MBResCnt& (0+255),w,b
  9330  001AD0  6ED9               	movwf	fsr2l,c
  9331  001AD2  0E02               	movlw	high _MBRespon
  9332  001AD4  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9333  001AD6  6EDA               	movwf	fsr2h,c
  9334  001AD8  C200  FFDF         	movff	_ModbusData,indf2
  9335  001ADC                     
  9336                           ; BSR set to: 0
  9337                           ;Modbus.c: 293:     MBResCnt++;
  9338  001ADC  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9339  001ADE  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9340  001AE0                     
  9341                           ; BSR set to: 0
  9342                           ;Modbus.c: 294:     MBRespon[MBResCnt] = ModbusData[1];
  9343  001AE0  0EA0               	movlw	low _MBRespon
  9344  001AE2  25D1               	addwf	_MBResCnt& (0+255),w,b
  9345  001AE4  6ED9               	movwf	fsr2l,c
  9346  001AE6  0E02               	movlw	high _MBRespon
  9347  001AE8  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9348  001AEA  6EDA               	movwf	fsr2h,c
  9349  001AEC  C201  FFDF         	movff	_ModbusData+1,indf2
  9350  001AF0                     
  9351                           ; BSR set to: 0
  9352                           ;Modbus.c: 295:     MBResCnt++;
  9353  001AF0  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9354  001AF2  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9355  001AF4                     
  9356                           ; BSR set to: 0
  9357                           ;Modbus.c: 296:     MBRespon[MBResCnt] = ModbusData[2];
  9358  001AF4  0EA0               	movlw	low _MBRespon
  9359  001AF6  25D1               	addwf	_MBResCnt& (0+255),w,b
  9360  001AF8  6ED9               	movwf	fsr2l,c
  9361  001AFA  0E02               	movlw	high _MBRespon
  9362  001AFC  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9363  001AFE  6EDA               	movwf	fsr2h,c
  9364  001B00  C202  FFDF         	movff	_ModbusData+2,indf2
  9365  001B04                     
  9366                           ; BSR set to: 0
  9367                           ;Modbus.c: 297:     MBResCnt++;
  9368  001B04  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9369  001B06  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9370  001B08                     
  9371                           ; BSR set to: 0
  9372                           ;Modbus.c: 298:     MBRespon[MBResCnt] = ModbusData[3];
  9373  001B08  0EA0               	movlw	low _MBRespon
  9374  001B0A  25D1               	addwf	_MBResCnt& (0+255),w,b
  9375  001B0C  6ED9               	movwf	fsr2l,c
  9376  001B0E  0E02               	movlw	high _MBRespon
  9377  001B10  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9378  001B12  6EDA               	movwf	fsr2h,c
  9379  001B14  C203  FFDF         	movff	_ModbusData+3,indf2
  9380  001B18                     
  9381                           ; BSR set to: 0
  9382                           ;Modbus.c: 299:     MBResCnt++;
  9383  001B18  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9384  001B1A  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9385  001B1C                     
  9386                           ; BSR set to: 0
  9387                           ;Modbus.c: 300:     MBRespon[MBResCnt] = ModbusData[4];
  9388  001B1C  0EA0               	movlw	low _MBRespon
  9389  001B1E  25D1               	addwf	_MBResCnt& (0+255),w,b
  9390  001B20  6ED9               	movwf	fsr2l,c
  9391  001B22  0E02               	movlw	high _MBRespon
  9392  001B24  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9393  001B26  6EDA               	movwf	fsr2h,c
  9394  001B28  C204  FFDF         	movff	_ModbusData+4,indf2
  9395  001B2C                     
  9396                           ; BSR set to: 0
  9397                           ;Modbus.c: 301:     MBResCnt++;
  9398  001B2C  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9399  001B2E  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9400  001B30                     
  9401                           ; BSR set to: 0
  9402                           ;Modbus.c: 302:     MBRespon[MBResCnt] = ModbusData[5];
  9403  001B30  0EA0               	movlw	low _MBRespon
  9404  001B32  25D1               	addwf	_MBResCnt& (0+255),w,b
  9405  001B34  6ED9               	movwf	fsr2l,c
  9406  001B36  0E02               	movlw	high _MBRespon
  9407  001B38  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9408  001B3A  6EDA               	movwf	fsr2h,c
  9409  001B3C  C205  FFDF         	movff	_ModbusData+5,indf2
  9410  001B40                     
  9411                           ; BSR set to: 0
  9412                           ;Modbus.c: 303:     MBResCnt++;
  9413  001B40  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9414  001B42  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9415                           
  9416                           ;Modbus.c: 305:     for(i=0; i< (ModbusData[5]) ; i++ ){
  9417  001B44  0E00               	movlw	0
  9418  001B46  6F92               	movwf	(ModbusFC10@i+1)& (0+255),b
  9419  001B48  0E00               	movlw	0
  9420  001B4A  6F91               	movwf	ModbusFC10@i& (0+255),b
  9421  001B4C  EFDE  F00D         	goto	l7640
  9422  001B50                     l7632:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;Modbus.c: 312:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  9426  001B50  0E08               	movlw	low (_ModbusData+8)
  9427  001B52  2593               	addwf	ModbusFC10@j& (0+255),w,b
  9428  001B54  6ED9               	movwf	fsr2l,c
  9429  001B56  0E02               	movlw	high (_ModbusData+8)
  9430  001B58  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  9431  001B5A  6EDA               	movwf	fsr2h,c
  9432  001B5C  50DF               	movf	indf2,w,c
  9433  001B5E  6F8B               	movwf	??_ModbusFC10& (0+255),b
  9434  001B60  0E07               	movlw	low (_ModbusData+7)
  9435  001B62  2593               	addwf	ModbusFC10@j& (0+255),w,b
  9436  001B64  6ED9               	movwf	fsr2l,c
  9437  001B66  0E02               	movlw	high (_ModbusData+7)
  9438  001B68  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  9439  001B6A  6EDA               	movwf	fsr2h,c
  9440  001B6C  50DF               	movf	indf2,w,c
  9441  001B6E  6F8C               	movwf	(??_ModbusFC10+1)& (0+255),b
  9442  001B70  518C               	movf	(??_ModbusFC10+1)& (0+255),w,b
  9443  001B72  6F8E               	movwf	(??_ModbusFC10+3)& (0+255),b
  9444  001B74  6B8D               	clrf	(??_ModbusFC10+2)& (0+255),b
  9445  001B76  518B               	movf	??_ModbusFC10& (0+255),w,b
  9446  001B78  258D               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  9447  001B7A  6F8F               	movwf	ModbusFC10@TempData& (0+255),b
  9448  001B7C  0E00               	movlw	0
  9449  001B7E  218E               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  9450  001B80  6F90               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  9451  001B82                     
  9452                           ; BSR set to: 0
  9453                           ;Modbus.c: 313:         j = j+2;
  9454  001B82  0E02               	movlw	2
  9455  001B84  2593               	addwf	ModbusFC10@j& (0+255),w,b
  9456  001B86  6F93               	movwf	ModbusFC10@j& (0+255),b
  9457  001B88  0E00               	movlw	0
  9458  001B8A  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  9459  001B8C  6F94               	movwf	(ModbusFC10@j+1)& (0+255),b
  9460  001B8E                     
  9461                           ; BSR set to: 0
  9462                           ;Modbus.c: 314:         MB400xx[ModbusData[3] +i] = TempData;
  9463  001B8E  0102               	movlb	2	; () banked
  9464  001B90  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9465  001B92  0100               	movlb	0	; () banked
  9466  001B94  2591               	addwf	ModbusFC10@i& (0+255),w,b
  9467  001B96  6F8B               	movwf	??_ModbusFC10& (0+255),b
  9468  001B98  0E00               	movlw	0
  9469  001B9A  2192               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  9470  001B9C  6F8C               	movwf	(??_ModbusFC10+1)& (0+255),b
  9471  001B9E  90D8               	bcf	status,0,c
  9472  001BA0  378B               	rlcf	??_ModbusFC10& (0+255),f,b
  9473  001BA2  378C               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  9474  001BA4  0E64               	movlw	low _MB400xx
  9475  001BA6  258B               	addwf	??_ModbusFC10& (0+255),w,b
  9476  001BA8  6ED9               	movwf	fsr2l,c
  9477  001BAA  0E04               	movlw	high _MB400xx
  9478  001BAC  218C               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  9479  001BAE  6EDA               	movwf	fsr2h,c
  9480  001BB0  C08F  FFDE         	movff	ModbusFC10@TempData,postinc2
  9481  001BB4  C090  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  9482  001BB8                     
  9483                           ; BSR set to: 0
  9484                           ;Modbus.c: 315:     }
  9485  001BB8  4B91               	infsnz	ModbusFC10@i& (0+255),f,b
  9486  001BBA  2B92               	incf	(ModbusFC10@i+1)& (0+255),f,b
  9487  001BBC                     l7640:
  9488                           
  9489                           ; BSR set to: 0
  9490  001BBC  0102               	movlb	2	; () banked
  9491  001BBE  5105               	movf	(_ModbusData+5)& (0+255),w,b
  9492  001BC0  0100               	movlb	0	; () banked
  9493  001BC2  6F8B               	movwf	??_ModbusFC10& (0+255),b
  9494  001BC4  6B8C               	clrf	(??_ModbusFC10+1)& (0+255),b
  9495  001BC6  518B               	movf	??_ModbusFC10& (0+255),w,b
  9496  001BC8  5D91               	subwf	ModbusFC10@i& (0+255),w,b
  9497  001BCA  5192               	movf	(ModbusFC10@i+1)& (0+255),w,b
  9498  001BCC  0A80               	xorlw	128
  9499  001BCE  6F8D               	movwf	(??_ModbusFC10+2)& (0+255),b
  9500  001BD0  518C               	movf	(??_ModbusFC10+1)& (0+255),w,b
  9501  001BD2  0A80               	xorlw	128
  9502  001BD4  598D               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  9503  001BD6  A0D8               	btfss	status,0,c
  9504  001BD8  EFF0  F00D         	goto	u7571
  9505  001BDC  EFF2  F00D         	goto	u7570
  9506  001BE0                     u7571:
  9507  001BE0  EFA8  F00D         	goto	l7632
  9508  001BE4                     u7570:
  9509  001BE4                     
  9510                           ; BSR set to: 0
  9511                           ;Modbus.c: 317:     ByteHi = generateCRC(MBResCnt, 1);
  9512  001BE4  C0D1  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9513  001BE8  C0D2  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9514  001BEC  0E01               	movlw	1
  9515  001BEE  6E07               	movwf	generateCRC@HiOrLo^0,c
  9516  001BF0  EC7D  F016         	call	_generateCRC	;wreg free
  9517  001BF4  C005  F0CF         	movff	?_generateCRC,_ByteHi
  9518  001BF8  C006  F0D0         	movff	?_generateCRC+1,_ByteHi+1
  9519                           
  9520                           ;Modbus.c: 318:     ByteLo = generateCRC(MBResCnt, 0);
  9521  001BFC  C0D1  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9522  001C00  C0D2  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9523  001C04  0E00               	movlw	0
  9524  001C06  6E07               	movwf	generateCRC@HiOrLo^0,c
  9525  001C08  EC7D  F016         	call	_generateCRC	;wreg free
  9526  001C0C  C005  F0F6         	movff	?_generateCRC,_ByteLo
  9527  001C10  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
  9528  001C14                     
  9529                           ;Modbus.c: 320:     MBRespon[MBResCnt] = ByteHi;
  9530  001C14  0EA0               	movlw	low _MBRespon
  9531  001C16  0100               	movlb	0	; () banked
  9532  001C18  25D1               	addwf	_MBResCnt& (0+255),w,b
  9533  001C1A  6ED9               	movwf	fsr2l,c
  9534  001C1C  0E02               	movlw	high _MBRespon
  9535  001C1E  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9536  001C20  6EDA               	movwf	fsr2h,c
  9537  001C22  C0CF  FFDF         	movff	_ByteHi,indf2
  9538  001C26                     
  9539                           ; BSR set to: 0
  9540                           ;Modbus.c: 321:     MBRespon[MBResCnt +1] = ByteLo;
  9541  001C26  0EA1               	movlw	low (_MBRespon+1)
  9542  001C28  25D1               	addwf	_MBResCnt& (0+255),w,b
  9543  001C2A  6ED9               	movwf	fsr2l,c
  9544  001C2C  0E02               	movlw	high (_MBRespon+1)
  9545  001C2E  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9546  001C30  6EDA               	movwf	fsr2h,c
  9547  001C32  C0F6  FFDF         	movff	_ByteLo,indf2
  9548  001C36                     
  9549                           ; BSR set to: 0
  9550                           ;Modbus.c: 322:     MBResCnt = MBResCnt +2;
  9551  001C36  0E02               	movlw	2
  9552  001C38  25D1               	addwf	_MBResCnt& (0+255),w,b
  9553  001C3A  6FD1               	movwf	_MBResCnt& (0+255),b
  9554  001C3C  0E00               	movlw	0
  9555  001C3E  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9556  001C40  6FD2               	movwf	(_MBResCnt+1)& (0+255),b
  9557  001C42                     
  9558                           ; BSR set to: 0
  9559                           ;Modbus.c: 324:     if(Debug==1){
  9560  001C42  05D9               	decf	_Debug& (0+255),w,b
  9561  001C44  A4D8               	btfss	status,2,c
  9562  001C46  EF27  F00E         	goto	u7581
  9563  001C4A  EF29  F00E         	goto	u7580
  9564  001C4E                     u7581:
  9565  001C4E  EF2D  F00E         	goto	l7654
  9566  001C52                     u7580:
  9567  001C52                     
  9568                           ; BSR set to: 0
  9569                           ;Modbus.c: 325:         PrintMB400();
  9570  001C52  EC77  F01B         	call	_PrintMB400	;wreg free
  9571                           
  9572                           ;Modbus.c: 326:         PrintModRespon();
  9573  001C56  EC9E  F019         	call	_PrintModRespon	;wreg free
  9574  001C5A                     l7654:
  9575                           
  9576                           ;Modbus.c: 329:     UART1_Write_string(MBRespon,MBResCnt);
  9577  001C5A  0EA0               	movlw	low _MBRespon
  9578  001C5C  6E06               	movwf	UART1_Write_string@data^0,c
  9579  001C5E  0E02               	movlw	high _MBRespon
  9580  001C60  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9581  001C62  C0D1  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9582  001C66  C0D2  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9583  001C6A  EC40  F01B         	call	_UART1_Write_string	;wreg free
  9584  001C6E  0012               	return		;funcret
  9585  001C70                     __end_of_ModbusFC10:
  9586                           	opt callstack 0
  9587                           
  9588 ;; *************** function _PrintMB400 *****************
  9589 ;; Defined at:
  9590 ;;		line 23 in file "Modbus.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;		None
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  i               2   84[COMRAM] int 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;Total ram usage:        2 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:   13
  9611 ;; This function calls:
  9612 ;;		_printf
  9613 ;; This function is called by:
  9614 ;;		_main
  9615 ;;		_ModbusFC10
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text44
  9620  0036EE                     __ptext44:
  9621                           	opt callstack 0
  9622  0036EE                     _PrintMB400:
  9623                           	opt callstack 17
  9624  0036EE                     
  9625                           ;Modbus.c: 25:     printf("UpdatedMB400 \r\n");
  9626  0036EE  0E6B               	movlw	low STR_6
  9627  0036F0  0100               	movlb	0	; () banked
  9628  0036F2  6F7D               	movwf	printf@fmt& (0+255),b
  9629  0036F4  0EFF               	movlw	high STR_6
  9630  0036F6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9631  0036F8  ECE9  F01F         	call	_printf	;wreg free
  9632  0036FC                     
  9633                           ;Modbus.c: 28:     for(i=0; i<32; i++ ){
  9634  0036FC  0E00               	movlw	0
  9635  0036FE  6E56               	movwf	(PrintMB400@i+1)^0,c
  9636  003700  0E00               	movlw	0
  9637  003702  6E55               	movwf	PrintMB400@i^0,c
  9638  003704                     l7234:
  9639                           
  9640                           ;Modbus.c: 29:         printf("   Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  9641  003704  0EB4               	movlw	low STR_7
  9642  003706  0100               	movlb	0	; () banked
  9643  003708  6F7D               	movwf	printf@fmt& (0+255),b
  9644  00370A  0EFD               	movlw	high STR_7
  9645  00370C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9646  00370E  C055  F07F         	movff	PrintMB400@i,?_printf+2
  9647  003712  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  9648  003716  90D8               	bcf	status,0,c
  9649  003718  3455               	rlcf	PrintMB400@i^0,w,c
  9650  00371A  6ED9               	movwf	fsr2l,c
  9651  00371C  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  9652  00371E  6EDA               	movwf	fsr2h,c
  9653  003720  0E64               	movlw	low _MB400xx
  9654  003722  26D9               	addwf	fsr2l,f,c
  9655  003724  0E04               	movlw	high _MB400xx
  9656  003726  22DA               	addwfc	fsr2h,f,c
  9657  003728  CFDE F081          	movff	postinc2,?_printf+4
  9658  00372C  CFDD F082          	movff	postdec2,?_printf+5
  9659  003730  ECE9  F01F         	call	_printf	;wreg free
  9660  003734                     
  9661                           ;Modbus.c: 30:     }
  9662  003734  4A55               	infsnz	PrintMB400@i^0,f,c
  9663  003736  2A56               	incf	(PrintMB400@i+1)^0,f,c
  9664  003738  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  9665  00373A  EFA8  F01B         	goto	u7091
  9666  00373E  5056               	movf	(PrintMB400@i+1)^0,w,c
  9667  003740  E109               	bnz	u7090
  9668  003742  0E20               	movlw	32
  9669  003744  5C55               	subwf	PrintMB400@i^0,w,c
  9670  003746  A0D8               	btfss	status,0,c
  9671  003748  EFA8  F01B         	goto	u7091
  9672  00374C  EFAA  F01B         	goto	u7090
  9673  003750                     u7091:
  9674  003750  EF82  F01B         	goto	l7234
  9675  003754                     u7090:
  9676  003754  0012               	return		;funcret
  9677  003756                     __end_of_PrintMB400:
  9678                           	opt callstack 0
  9679                           
  9680 ;; *************** function _ModbusFC03 *****************
  9681 ;; Defined at:
  9682 ;;		line 143 in file "Modbus.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;  convertedVal    2   45[BANK0 ] unsigned short 
  9687 ;;  i               2   47[BANK0 ] int 
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9698 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9699 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;Total ram usage:        8 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:   13
  9704 ;; This function calls:
  9705 ;;		_ADCC_GetSingleConversion
  9706 ;;		_UART1_Write_string
  9707 ;;		_generateCRC
  9708 ;;		_printf
  9709 ;; This function is called by:
  9710 ;;		_main
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text45
  9715  0006B4                     __ptext45:
  9716                           	opt callstack 0
  9717  0006B4                     _ModbusFC03:
  9718                           	opt callstack 17
  9719  0006B4                     
  9720                           ;Modbus.c: 148:     MBResCnt = 0;
  9721  0006B4  0E00               	movlw	0
  9722  0006B6  0100               	movlb	0	; () banked
  9723  0006B8  6FD2               	movwf	(_MBResCnt+1)& (0+255),b
  9724  0006BA  0E00               	movlw	0
  9725  0006BC  6FD1               	movwf	_MBResCnt& (0+255),b
  9726  0006BE                     
  9727                           ; BSR set to: 0
  9728                           ;Modbus.c: 149:     MBRespon[MBResCnt] = ModbusData[0];
  9729  0006BE  0EA0               	movlw	low _MBRespon
  9730  0006C0  25D1               	addwf	_MBResCnt& (0+255),w,b
  9731  0006C2  6ED9               	movwf	fsr2l,c
  9732  0006C4  0E02               	movlw	high _MBRespon
  9733  0006C6  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9734  0006C8  6EDA               	movwf	fsr2h,c
  9735  0006CA  C200  FFDF         	movff	_ModbusData,indf2
  9736  0006CE                     
  9737                           ; BSR set to: 0
  9738                           ;Modbus.c: 150:     MBResCnt++;
  9739  0006CE  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9740  0006D0  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9741  0006D2                     
  9742                           ; BSR set to: 0
  9743                           ;Modbus.c: 151:     MBRespon[MBResCnt] = ModbusData[1];
  9744  0006D2  0EA0               	movlw	low _MBRespon
  9745  0006D4  25D1               	addwf	_MBResCnt& (0+255),w,b
  9746  0006D6  6ED9               	movwf	fsr2l,c
  9747  0006D8  0E02               	movlw	high _MBRespon
  9748  0006DA  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9749  0006DC  6EDA               	movwf	fsr2h,c
  9750  0006DE  C201  FFDF         	movff	_ModbusData+1,indf2
  9751  0006E2                     
  9752                           ; BSR set to: 0
  9753                           ;Modbus.c: 152:     MBResCnt++;
  9754  0006E2  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9755  0006E4  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9756  0006E6                     
  9757                           ; BSR set to: 0
  9758                           ;Modbus.c: 153:     MBRespon[MBResCnt] = ModbusData[5] *2;
  9759  0006E6  0102               	movlb	2	; () banked
  9760  0006E8  5105               	movf	(_ModbusData+5)& (0+255),w,b
  9761  0006EA  0D02               	mullw	2
  9762  0006EC  0EA0               	movlw	low _MBRespon
  9763  0006EE  0100               	movlb	0	; () banked
  9764  0006F0  25D1               	addwf	_MBResCnt& (0+255),w,b
  9765  0006F2  6ED9               	movwf	fsr2l,c
  9766  0006F4  0E02               	movlw	high _MBRespon
  9767  0006F6  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9768  0006F8  6EDA               	movwf	fsr2h,c
  9769  0006FA  CFF3 FFDF          	movff	prodl,indf2
  9770  0006FE                     
  9771                           ; BSR set to: 0
  9772                           ;Modbus.c: 154:     MBResCnt++;
  9773  0006FE  4BD1               	infsnz	_MBResCnt& (0+255),f,b
  9774  000700  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
  9775                           
  9776                           ;Modbus.c: 158:     switch(ModbusData[2]){
  9777  000702  EFBB  F003         	goto	l7542
  9778  000706                     l7526:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;Modbus.c: 161:         {;Modbus.c: 162:             printf("Requested Circuit Data\r\n\
      +                          n");
  9782  000706  0ECF               	movlw	low STR_14
  9783  000708  6F7D               	movwf	printf@fmt& (0+255),b
  9784  00070A  0EFD               	movlw	high STR_14
  9785  00070C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9786  00070E  ECE9  F01F         	call	_printf	;wreg free
  9787                           
  9788                           ;Modbus.c: 163:             break;
  9789  000712  EFE6  F003         	goto	l7544
  9790  000716                     l7528:
  9791                           
  9792                           ; BSR set to: 0
  9793                           ;Modbus.c: 166:         {;Modbus.c: 167:             printf("Requested Part No.\r\n\n");
  9794  000716  0EA9               	movlw	low STR_15
  9795  000718  6F7D               	movwf	printf@fmt& (0+255),b
  9796  00071A  0EFE               	movlw	high STR_15
  9797  00071C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9798  00071E  ECE9  F01F         	call	_printf	;wreg free
  9799                           
  9800                           ;Modbus.c: 168:             break;
  9801  000722  EFE6  F003         	goto	l7544
  9802  000726                     l7530:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;Modbus.c: 171:         {;Modbus.c: 172:             printf("Requested Revision\r\n\n");
  9806  000726  0EBF               	movlw	low STR_16
  9807  000728  6F7D               	movwf	printf@fmt& (0+255),b
  9808  00072A  0EFE               	movlw	high STR_16
  9809  00072C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9810  00072E  ECE9  F01F         	call	_printf	;wreg free
  9811                           
  9812                           ;Modbus.c: 173:             break;
  9813  000732  EFE6  F003         	goto	l7544
  9814  000736                     l7532:
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;Modbus.c: 176:         {;Modbus.c: 177:             printf("Requested Serial No.\r\n\n"
      +                          );
  9818  000736  0E36               	movlw	low STR_17
  9819  000738  6F7D               	movwf	printf@fmt& (0+255),b
  9820  00073A  0EFE               	movlw	high STR_17
  9821  00073C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9822  00073E  ECE9  F01F         	call	_printf	;wreg free
  9823                           
  9824                           ;Modbus.c: 178:             break;
  9825  000742  EFE6  F003         	goto	l7544
  9826  000746                     l7534:
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;Modbus.c: 181:         {;Modbus.c: 182:             printf("Requested Compile Date\r\n\
      +                          n");
  9830  000746  0E03               	movlw	low STR_18
  9831  000748  6F7D               	movwf	printf@fmt& (0+255),b
  9832  00074A  0EFE               	movlw	high STR_18
  9833  00074C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9834  00074E  ECE9  F01F         	call	_printf	;wreg free
  9835                           
  9836                           ;Modbus.c: 183:             break;
  9837  000752  EFE6  F003         	goto	l7544
  9838  000756                     l7536:
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;Modbus.c: 186:         {;Modbus.c: 187:             printf("Requested Compile Time\r\n\
      +                          n");
  9842  000756  0EE9               	movlw	low STR_19
  9843  000758  6F7D               	movwf	printf@fmt& (0+255),b
  9844  00075A  0EFD               	movlw	high STR_19
  9845  00075C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9846  00075E  ECE9  F01F         	call	_printf	;wreg free
  9847                           
  9848                           ;Modbus.c: 188:             break;
  9849  000762  EFE6  F003         	goto	l7544
  9850  000766                     l7538:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;Modbus.c: 191:         {;Modbus.c: 192:             printf("Requested Analogue Inputs\r
      +                          \n\n");
  9854  000766  0E43               	movlw	low STR_20
  9855  000768  6F7D               	movwf	printf@fmt& (0+255),b
  9856  00076A  0EFD               	movlw	high STR_20
  9857  00076C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9858  00076E  ECE9  F01F         	call	_printf	;wreg free
  9859                           
  9860                           ;Modbus.c: 193:             break;
  9861  000772  EFE6  F003         	goto	l7544
  9862  000776                     l7542:
  9863                           
  9864                           ; BSR set to: 0
  9865  000776  0102               	movlb	2	; () banked
  9866  000778  5102               	movf	(_ModbusData+2)& (0+255),w,b
  9867  00077A  0100               	movlb	0	; () banked
  9868  00077C  6F89               	movwf	??_ModbusFC03& (0+255),b
  9869  00077E  6B8A               	clrf	(??_ModbusFC03+1)& (0+255),b
  9870                           
  9871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9872                           ; Switch size 1, requested type "simple"
  9873                           ; Number of cases is 1, Range of values is 0 to 0
  9874                           ; switch strategies available:
  9875                           ; Name         Instructions Cycles
  9876                           ; simple_byte            4     3 (average)
  9877                           ;	Chosen strategy is simple_byte
  9878  000780  518A               	movf	(??_ModbusFC03+1)& (0+255),w,b
  9879  000782  0A00               	xorlw	0	; case 0
  9880  000784  B4D8               	btfsc	status,2,c
  9881  000786  EFC7  F003         	goto	l7976
  9882  00078A  EFE6  F003         	goto	l7544
  9883  00078E                     l7976:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ; Switch size 1, requested type "simple"
  9887                           ; Number of cases is 7, Range of values is 0 to 6
  9888                           ; switch strategies available:
  9889                           ; Name         Instructions Cycles
  9890                           ; simple_byte           22    12 (average)
  9891                           ;	Chosen strategy is simple_byte
  9892  00078E  5189               	movf	??_ModbusFC03& (0+255),w,b
  9893  000790  0A00               	xorlw	0	; case 0
  9894  000792  B4D8               	btfsc	status,2,c
  9895  000794  EF83  F003         	goto	l7526
  9896  000798  0A01               	xorlw	1	; case 1
  9897  00079A  B4D8               	btfsc	status,2,c
  9898  00079C  EF8B  F003         	goto	l7528
  9899  0007A0  0A03               	xorlw	3	; case 2
  9900  0007A2  B4D8               	btfsc	status,2,c
  9901  0007A4  EF93  F003         	goto	l7530
  9902  0007A8  0A01               	xorlw	1	; case 3
  9903  0007AA  B4D8               	btfsc	status,2,c
  9904  0007AC  EF9B  F003         	goto	l7532
  9905  0007B0  0A07               	xorlw	7	; case 4
  9906  0007B2  B4D8               	btfsc	status,2,c
  9907  0007B4  EFA3  F003         	goto	l7534
  9908  0007B8  0A01               	xorlw	1	; case 5
  9909  0007BA  B4D8               	btfsc	status,2,c
  9910  0007BC  EFAB  F003         	goto	l7536
  9911  0007C0  0A03               	xorlw	3	; case 6
  9912  0007C2  B4D8               	btfsc	status,2,c
  9913  0007C4  EFB3  F003         	goto	l7538
  9914  0007C8  EFE6  F003         	goto	l7544
  9915  0007CC                     l7544:
  9916                           
  9917                           ;Modbus.c: 198:     for(i=0; i< (ModbusData[5]) ; i++ ){
  9918  0007CC  0E00               	movlw	0
  9919  0007CE  0100               	movlb	0	; () banked
  9920  0007D0  6F90               	movwf	(ModbusFC03@i+1)& (0+255),b
  9921  0007D2  0E00               	movlw	0
  9922  0007D4  6F8F               	movwf	ModbusFC03@i& (0+255),b
  9923  0007D6  EF83  F005         	goto	l7590
  9924  0007DA                     l7546:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;Modbus.c: 203:         if(ModbusData[2] == 0x03){
  9928  0007DA  0E03               	movlw	3
  9929  0007DC  0102               	movlb	2	; () banked
  9930  0007DE  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9931  0007E0  A4D8               	btfss	status,2,c
  9932  0007E2  EFF5  F003         	goto	u7491
  9933  0007E6  EFF7  F003         	goto	u7490
  9934  0007EA                     u7491:
  9935  0007EA  EF28  F004         	goto	l7550
  9936  0007EE                     u7490:
  9937  0007EE                     
  9938                           ; BSR set to: 2
  9939                           ;Modbus.c: 210:             ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
  9940  0007EE  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9941  0007F0  0100               	movlb	0	; () banked
  9942  0007F2  258F               	addwf	ModbusFC03@i& (0+255),w,b
  9943  0007F4  6F89               	movwf	??_ModbusFC03& (0+255),b
  9944  0007F6  0E00               	movlw	0
  9945  0007F8  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  9946  0007FA  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9947  0007FC  90D8               	bcf	status,0,c
  9948  0007FE  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9949  000800  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9950  000802  0E35               	movlw	low _MB303xx
  9951  000804  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9952  000806  6ED9               	movwf	fsr2l,c
  9953  000808  0E01               	movlw	high _MB303xx
  9954  00080A  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9955  00080C  6EDA               	movwf	fsr2h,c
  9956  00080E  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9957  000812  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9958  000816  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9959  000818  6FF6               	movwf	_ByteLo& (0+255),b
  9960  00081A  6BF7               	clrf	(_ByteLo+1)& (0+255),b
  9961                           
  9962                           ;Modbus.c: 211:             ByteHi = MB303xx[ModbusData[3] +i] >> 8;
  9963  00081C  0102               	movlb	2	; () banked
  9964  00081E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9965  000820  0100               	movlb	0	; () banked
  9966  000822  258F               	addwf	ModbusFC03@i& (0+255),w,b
  9967  000824  6F89               	movwf	??_ModbusFC03& (0+255),b
  9968  000826  0E00               	movlw	0
  9969  000828  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  9970  00082A  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9971  00082C  90D8               	bcf	status,0,c
  9972  00082E  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9973  000830  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9974  000832  0E35               	movlw	low _MB303xx
  9975  000834  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9976  000836  6ED9               	movwf	fsr2l,c
  9977  000838  0E01               	movlw	high _MB303xx
  9978  00083A  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9979  00083C  6EDA               	movwf	fsr2h,c
  9980  00083E  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9981  000842  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9982  000846  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9983  000848  6FCF               	movwf	_ByteHi& (0+255),b
  9984  00084A  6BD0               	clrf	(_ByteHi+1)& (0+255),b
  9985                           
  9986                           ;Modbus.c: 214:         }else if(ModbusData[2] == 0x01){
  9987  00084C  EF6C  F005         	goto	l7580
  9988  000850                     l7550:
  9989                           
  9990                           ; BSR set to: 2
  9991  000850  0502               	decf	(_ModbusData+2)& (0+255),w,b
  9992  000852  A4D8               	btfss	status,2,c
  9993  000854  EF2E  F004         	goto	u7501
  9994  000858  EF30  F004         	goto	u7500
  9995  00085C                     u7501:
  9996  00085C  EF61  F004         	goto	l7554
  9997  000860                     u7500:
  9998  000860                     
  9999                           ; BSR set to: 2
 10000                           ;Modbus.c: 221:             ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
 10001  000860  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10002  000862  0100               	movlb	0	; () banked
 10003  000864  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10004  000866  6F89               	movwf	??_ModbusFC03& (0+255),b
 10005  000868  0E00               	movlw	0
 10006  00086A  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10007  00086C  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10008  00086E  90D8               	bcf	status,0,c
 10009  000870  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10010  000872  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10011  000874  0E10               	movlw	low _MB301xx
 10012  000876  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10013  000878  6ED9               	movwf	fsr2l,c
 10014  00087A  0E01               	movlw	high _MB301xx
 10015  00087C  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10016  00087E  6EDA               	movwf	fsr2h,c
 10017  000880  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10018  000884  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10019  000888  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
 10020  00088A  6FF6               	movwf	_ByteLo& (0+255),b
 10021  00088C  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 10022                           
 10023                           ;Modbus.c: 222:             ByteHi = MB301xx[ModbusData[3] +i] >> 8;
 10024  00088E  0102               	movlb	2	; () banked
 10025  000890  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10026  000892  0100               	movlb	0	; () banked
 10027  000894  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10028  000896  6F89               	movwf	??_ModbusFC03& (0+255),b
 10029  000898  0E00               	movlw	0
 10030  00089A  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10031  00089C  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10032  00089E  90D8               	bcf	status,0,c
 10033  0008A0  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10034  0008A2  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10035  0008A4  0E10               	movlw	low _MB301xx
 10036  0008A6  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10037  0008A8  6ED9               	movwf	fsr2l,c
 10038  0008AA  0E01               	movlw	high _MB301xx
 10039  0008AC  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10040  0008AE  6EDA               	movwf	fsr2h,c
 10041  0008B0  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10042  0008B4  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10043  0008B8  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
 10044  0008BA  6FCF               	movwf	_ByteHi& (0+255),b
 10045  0008BC  6BD0               	clrf	(_ByteHi+1)& (0+255),b
 10046                           
 10047                           ;Modbus.c: 224:         }
 10048  0008BE  EF6C  F005         	goto	l7580
 10049  0008C2                     l7554:
 10050                           
 10051                           ; BSR set to: 2
 10052  0008C2  0E02               	movlw	2
 10053  0008C4  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 10054  0008C6  A4D8               	btfss	status,2,c
 10055  0008C8  EF68  F004         	goto	u7511
 10056  0008CC  EF6A  F004         	goto	u7510
 10057  0008D0                     u7511:
 10058  0008D0  EF9B  F004         	goto	l7558
 10059  0008D4                     u7510:
 10060  0008D4                     
 10061                           ; BSR set to: 2
 10062                           ;Modbus.c: 231:             ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
 10063  0008D4  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10064  0008D6  0100               	movlb	0	; () banked
 10065  0008D8  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10066  0008DA  6F89               	movwf	??_ModbusFC03& (0+255),b
 10067  0008DC  0E00               	movlw	0
 10068  0008DE  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10069  0008E0  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10070  0008E2  90D8               	bcf	status,0,c
 10071  0008E4  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10072  0008E6  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10073  0008E8  0EFC               	movlw	low _MB302xx
 10074  0008EA  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10075  0008EC  6ED9               	movwf	fsr2l,c
 10076  0008EE  0E00               	movlw	high _MB302xx
 10077  0008F0  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10078  0008F2  6EDA               	movwf	fsr2h,c
 10079  0008F4  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10080  0008F8  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10081  0008FC  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
 10082  0008FE  6FF6               	movwf	_ByteLo& (0+255),b
 10083  000900  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 10084                           
 10085                           ;Modbus.c: 232:             ByteHi = MB302xx[ModbusData[3] +i] >> 8;
 10086  000902  0102               	movlb	2	; () banked
 10087  000904  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10088  000906  0100               	movlb	0	; () banked
 10089  000908  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10090  00090A  6F89               	movwf	??_ModbusFC03& (0+255),b
 10091  00090C  0E00               	movlw	0
 10092  00090E  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10093  000910  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10094  000912  90D8               	bcf	status,0,c
 10095  000914  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10096  000916  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10097  000918  0EFC               	movlw	low _MB302xx
 10098  00091A  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10099  00091C  6ED9               	movwf	fsr2l,c
 10100  00091E  0E00               	movlw	high _MB302xx
 10101  000920  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10102  000922  6EDA               	movwf	fsr2h,c
 10103  000924  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10104  000928  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10105  00092C  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
 10106  00092E  6FCF               	movwf	_ByteHi& (0+255),b
 10107  000930  6BD0               	clrf	(_ByteHi+1)& (0+255),b
 10108                           
 10109                           ;Modbus.c: 234:         }else if(ModbusData[2] == 0x04){
 10110  000932  EF6C  F005         	goto	l7580
 10111  000936                     l7558:
 10112                           
 10113                           ; BSR set to: 2
 10114  000936  0E04               	movlw	4
 10115  000938  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 10116  00093A  A4D8               	btfss	status,2,c
 10117  00093C  EFA2  F004         	goto	u7521
 10118  000940  EFA4  F004         	goto	u7520
 10119  000944                     u7521:
 10120  000944  EFD5  F004         	goto	l7562
 10121  000948                     u7520:
 10122  000948                     
 10123                           ; BSR set to: 2
 10124                           ;Modbus.c: 236:             ByteLo = MB304xx[ModbusData[3] +i] & 0x00FF;
 10125  000948  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10126  00094A  0100               	movlb	0	; () banked
 10127  00094C  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10128  00094E  6F89               	movwf	??_ModbusFC03& (0+255),b
 10129  000950  0E00               	movlw	0
 10130  000952  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10131  000954  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10132  000956  90D8               	bcf	status,0,c
 10133  000958  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10134  00095A  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10135  00095C  0E1E               	movlw	low _MB304xx
 10136  00095E  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10137  000960  6ED9               	movwf	fsr2l,c
 10138  000962  0E01               	movlw	high _MB304xx
 10139  000964  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10140  000966  6EDA               	movwf	fsr2h,c
 10141  000968  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10142  00096C  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10143  000970  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
 10144  000972  6FF6               	movwf	_ByteLo& (0+255),b
 10145  000974  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 10146                           
 10147                           ;Modbus.c: 237:             ByteHi = MB304xx[ModbusData[3] +i] >> 8;
 10148  000976  0102               	movlb	2	; () banked
 10149  000978  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10150  00097A  0100               	movlb	0	; () banked
 10151  00097C  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10152  00097E  6F89               	movwf	??_ModbusFC03& (0+255),b
 10153  000980  0E00               	movlw	0
 10154  000982  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10155  000984  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10156  000986  90D8               	bcf	status,0,c
 10157  000988  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10158  00098A  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10159  00098C  0E1E               	movlw	low _MB304xx
 10160  00098E  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10161  000990  6ED9               	movwf	fsr2l,c
 10162  000992  0E01               	movlw	high _MB304xx
 10163  000994  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10164  000996  6EDA               	movwf	fsr2h,c
 10165  000998  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10166  00099C  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10167  0009A0  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
 10168  0009A2  6FCF               	movwf	_ByteHi& (0+255),b
 10169  0009A4  6BD0               	clrf	(_ByteHi+1)& (0+255),b
 10170                           
 10171                           ;Modbus.c: 239:         }else if(ModbusData[2] == 0x05){
 10172  0009A6  EF6C  F005         	goto	l7580
 10173  0009AA                     l7562:
 10174                           
 10175                           ; BSR set to: 2
 10176  0009AA  0E05               	movlw	5
 10177  0009AC  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 10178  0009AE  A4D8               	btfss	status,2,c
 10179  0009B0  EFDC  F004         	goto	u7531
 10180  0009B4  EFDE  F004         	goto	u7530
 10181  0009B8                     u7531:
 10182  0009B8  EF0F  F005         	goto	l7566
 10183  0009BC                     u7530:
 10184  0009BC                     
 10185                           ; BSR set to: 2
 10186                           ;Modbus.c: 241:             ByteLo = MB305xx[ModbusData[3] +i] & 0x00FF;
 10187  0009BC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10188  0009BE  0100               	movlb	0	; () banked
 10189  0009C0  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10190  0009C2  6F89               	movwf	??_ModbusFC03& (0+255),b
 10191  0009C4  0E00               	movlw	0
 10192  0009C6  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10193  0009C8  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10194  0009CA  90D8               	bcf	status,0,c
 10195  0009CC  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10196  0009CE  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10197  0009D0  0E00               	movlw	low _MB305xx
 10198  0009D2  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10199  0009D4  6ED9               	movwf	fsr2l,c
 10200  0009D6  0E01               	movlw	high _MB305xx
 10201  0009D8  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10202  0009DA  6EDA               	movwf	fsr2h,c
 10203  0009DC  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10204  0009E0  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10205  0009E4  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
 10206  0009E6  6FF6               	movwf	_ByteLo& (0+255),b
 10207  0009E8  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 10208                           
 10209                           ;Modbus.c: 242:             ByteHi = MB305xx[ModbusData[3] +i] >> 8;
 10210  0009EA  0102               	movlb	2	; () banked
 10211  0009EC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10212  0009EE  0100               	movlb	0	; () banked
 10213  0009F0  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10214  0009F2  6F89               	movwf	??_ModbusFC03& (0+255),b
 10215  0009F4  0E00               	movlw	0
 10216  0009F6  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10217  0009F8  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10218  0009FA  90D8               	bcf	status,0,c
 10219  0009FC  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10220  0009FE  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10221  000A00  0E00               	movlw	low _MB305xx
 10222  000A02  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10223  000A04  6ED9               	movwf	fsr2l,c
 10224  000A06  0E01               	movlw	high _MB305xx
 10225  000A08  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10226  000A0A  6EDA               	movwf	fsr2h,c
 10227  000A0C  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10228  000A10  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10229  000A14  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
 10230  000A16  6FCF               	movwf	_ByteHi& (0+255),b
 10231  000A18  6BD0               	clrf	(_ByteHi+1)& (0+255),b
 10232                           
 10233                           ;Modbus.c: 244:         }
 10234  000A1A  EF6C  F005         	goto	l7580
 10235  000A1E                     l7566:
 10236                           
 10237                           ; BSR set to: 2
 10238  000A1E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 10239  000A20  A4D8               	btfss	status,2,c
 10240  000A22  EF15  F005         	goto	u7541
 10241  000A26  EF17  F005         	goto	u7540
 10242  000A2A                     u7541:
 10243  000A2A  EF48  F005         	goto	l7570
 10244  000A2E                     u7540:
 10245  000A2E                     
 10246                           ; BSR set to: 2
 10247                           ;Modbus.c: 247:             ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
 10248  000A2E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10249  000A30  0100               	movlb	0	; () banked
 10250  000A32  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10251  000A34  6F89               	movwf	??_ModbusFC03& (0+255),b
 10252  000A36  0E00               	movlw	0
 10253  000A38  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10254  000A3A  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10255  000A3C  90D8               	bcf	status,0,c
 10256  000A3E  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10257  000A40  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10258  000A42  0EB7               	movlw	low _MB300xx
 10259  000A44  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10260  000A46  6ED9               	movwf	fsr2l,c
 10261  000A48  0E03               	movlw	high _MB300xx
 10262  000A4A  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10263  000A4C  6EDA               	movwf	fsr2h,c
 10264  000A4E  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10265  000A52  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10266  000A56  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
 10267  000A58  6FF6               	movwf	_ByteLo& (0+255),b
 10268  000A5A  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 10269                           
 10270                           ;Modbus.c: 248:             ByteHi = MB300xx[ModbusData[3] +i] >> 8;
 10271  000A5C  0102               	movlb	2	; () banked
 10272  000A5E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10273  000A60  0100               	movlb	0	; () banked
 10274  000A62  258F               	addwf	ModbusFC03@i& (0+255),w,b
 10275  000A64  6F89               	movwf	??_ModbusFC03& (0+255),b
 10276  000A66  0E00               	movlw	0
 10277  000A68  2190               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 10278  000A6A  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10279  000A6C  90D8               	bcf	status,0,c
 10280  000A6E  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10281  000A70  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10282  000A72  0EB7               	movlw	low _MB300xx
 10283  000A74  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10284  000A76  6ED9               	movwf	fsr2l,c
 10285  000A78  0E03               	movlw	high _MB300xx
 10286  000A7A  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10287  000A7C  6EDA               	movwf	fsr2h,c
 10288  000A7E  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10289  000A82  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10290  000A86  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
 10291  000A88  6FCF               	movwf	_ByteHi& (0+255),b
 10292  000A8A  6BD0               	clrf	(_ByteHi+1)& (0+255),b
 10293                           
 10294                           ;Modbus.c: 250:         }else if(ModbusData[2] == 0x06){
 10295  000A8C  EF6C  F005         	goto	l7580
 10296  000A90                     l7570:
 10297                           
 10298                           ; BSR set to: 2
 10299  000A90  0E06               	movlw	6
 10300  000A92  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 10301  000A94  A4D8               	btfss	status,2,c
 10302  000A96  EF4F  F005         	goto	u7551
 10303  000A9A  EF51  F005         	goto	u7550
 10304  000A9E                     u7551:
 10305  000A9E  EF6C  F005         	goto	l759
 10306  000AA2                     u7550:
 10307  000AA2                     
 10308                           ; BSR set to: 2
 10309                           ;Modbus.c: 252:             uint16_t convertedValue;;Modbus.c: 253:             converte
      +                          dValue = ADCC_GetSingleConversion(AIP_0);
 10310  000AA2  0E00               	movlw	0
 10311  000AA4  ECA6  F01F         	call	_ADCC_GetSingleConversion
 10312  000AA8  C005  F08D         	movff	?_ADCC_GetSingleConversion,ModbusFC03@convertedValue
 10313  000AAC  C006  F08E         	movff	?_ADCC_GetSingleConversion+1,ModbusFC03@convertedValue+1
 10314  000AB0                     
 10315                           ;Modbus.c: 254:             printf("ADC: 0x%04x \r\n", convertedValue);
 10316  000AB0  0E9A               	movlw	low STR_21
 10317  000AB2  0100               	movlb	0	; () banked
 10318  000AB4  6F7D               	movwf	printf@fmt& (0+255),b
 10319  000AB6  0EFF               	movlw	high STR_21
 10320  000AB8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10321  000ABA  C08D  F07F         	movff	ModbusFC03@convertedValue,?_printf+2
 10322  000ABE  C08E  F080         	movff	ModbusFC03@convertedValue+1,?_printf+3
 10323  000AC2  ECE9  F01F         	call	_printf	;wreg free
 10324  000AC6                     
 10325                           ;Modbus.c: 256:             ByteLo = convertedValue & 0x00FF;
 10326  000AC6  0100               	movlb	0	; () banked
 10327  000AC8  518D               	movf	ModbusFC03@convertedValue& (0+255),w,b
 10328  000ACA  6FF6               	movwf	_ByteLo& (0+255),b
 10329  000ACC  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 10330  000ACE                     
 10331                           ; BSR set to: 0
 10332                           ;Modbus.c: 257:             ByteHi = convertedValue >> 8;
 10333  000ACE  518E               	movf	(ModbusFC03@convertedValue+1)& (0+255),w,b
 10334  000AD0  6FCF               	movwf	_ByteHi& (0+255),b
 10335  000AD2  6BD0               	clrf	(_ByteHi+1)& (0+255),b
 10336  000AD4  EF6C  F005         	goto	l7580
 10337  000AD8                     l759:
 10338  000AD8                     l7580:
 10339                           
 10340                           ;Modbus.c: 260:         MBRespon[MBResCnt] = ByteHi;
 10341  000AD8  0EA0               	movlw	low _MBRespon
 10342  000ADA  0100               	movlb	0	; () banked
 10343  000ADC  25D1               	addwf	_MBResCnt& (0+255),w,b
 10344  000ADE  6ED9               	movwf	fsr2l,c
 10345  000AE0  0E02               	movlw	high _MBRespon
 10346  000AE2  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10347  000AE4  6EDA               	movwf	fsr2h,c
 10348  000AE6  C0CF  FFDF         	movff	_ByteHi,indf2
 10349  000AEA                     
 10350                           ; BSR set to: 0
 10351                           ;Modbus.c: 261:         MBResCnt++;
 10352  000AEA  4BD1               	infsnz	_MBResCnt& (0+255),f,b
 10353  000AEC  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
 10354  000AEE                     
 10355                           ; BSR set to: 0
 10356                           ;Modbus.c: 262:         MBRespon[MBResCnt] = ByteLo;
 10357  000AEE  0EA0               	movlw	low _MBRespon
 10358  000AF0  25D1               	addwf	_MBResCnt& (0+255),w,b
 10359  000AF2  6ED9               	movwf	fsr2l,c
 10360  000AF4  0E02               	movlw	high _MBRespon
 10361  000AF6  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10362  000AF8  6EDA               	movwf	fsr2h,c
 10363  000AFA  C0F6  FFDF         	movff	_ByteLo,indf2
 10364  000AFE                     
 10365                           ; BSR set to: 0
 10366                           ;Modbus.c: 263:         MBResCnt++;
 10367  000AFE  4BD1               	infsnz	_MBResCnt& (0+255),f,b
 10368  000B00  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
 10369  000B02                     
 10370                           ; BSR set to: 0
 10371                           ;Modbus.c: 265:     }
 10372  000B02  4B8F               	infsnz	ModbusFC03@i& (0+255),f,b
 10373  000B04  2B90               	incf	(ModbusFC03@i+1)& (0+255),f,b
 10374  000B06                     l7590:
 10375                           
 10376                           ; BSR set to: 0
 10377  000B06  0102               	movlb	2	; () banked
 10378  000B08  5105               	movf	(_ModbusData+5)& (0+255),w,b
 10379  000B0A  0100               	movlb	0	; () banked
 10380  000B0C  6F89               	movwf	??_ModbusFC03& (0+255),b
 10381  000B0E  6B8A               	clrf	(??_ModbusFC03+1)& (0+255),b
 10382  000B10  5189               	movf	??_ModbusFC03& (0+255),w,b
 10383  000B12  5D8F               	subwf	ModbusFC03@i& (0+255),w,b
 10384  000B14  5190               	movf	(ModbusFC03@i+1)& (0+255),w,b
 10385  000B16  0A80               	xorlw	128
 10386  000B18  6F8B               	movwf	(??_ModbusFC03+2)& (0+255),b
 10387  000B1A  518A               	movf	(??_ModbusFC03+1)& (0+255),w,b
 10388  000B1C  0A80               	xorlw	128
 10389  000B1E  598B               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
 10390  000B20  A0D8               	btfss	status,0,c
 10391  000B22  EF95  F005         	goto	u7561
 10392  000B26  EF97  F005         	goto	u7560
 10393  000B2A                     u7561:
 10394  000B2A  EFED  F003         	goto	l7546
 10395  000B2E                     u7560:
 10396  000B2E                     
 10397                           ; BSR set to: 0
 10398                           ;Modbus.c: 267:     ByteHi = generateCRC(MBResCnt, 1);
 10399  000B2E  C0D1  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10400  000B32  C0D2  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10401  000B36  0E01               	movlw	1
 10402  000B38  6E07               	movwf	generateCRC@HiOrLo^0,c
 10403  000B3A  EC7D  F016         	call	_generateCRC	;wreg free
 10404  000B3E  C005  F0CF         	movff	?_generateCRC,_ByteHi
 10405  000B42  C006  F0D0         	movff	?_generateCRC+1,_ByteHi+1
 10406                           
 10407                           ;Modbus.c: 268:     ByteLo = generateCRC(MBResCnt, 0);
 10408  000B46  C0D1  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10409  000B4A  C0D2  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10410  000B4E  0E00               	movlw	0
 10411  000B50  6E07               	movwf	generateCRC@HiOrLo^0,c
 10412  000B52  EC7D  F016         	call	_generateCRC	;wreg free
 10413  000B56  C005  F0F6         	movff	?_generateCRC,_ByteLo
 10414  000B5A  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 10415  000B5E                     
 10416                           ;Modbus.c: 270:     MBRespon[MBResCnt] = ByteHi;
 10417  000B5E  0EA0               	movlw	low _MBRespon
 10418  000B60  0100               	movlb	0	; () banked
 10419  000B62  25D1               	addwf	_MBResCnt& (0+255),w,b
 10420  000B64  6ED9               	movwf	fsr2l,c
 10421  000B66  0E02               	movlw	high _MBRespon
 10422  000B68  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10423  000B6A  6EDA               	movwf	fsr2h,c
 10424  000B6C  C0CF  FFDF         	movff	_ByteHi,indf2
 10425  000B70                     
 10426                           ; BSR set to: 0
 10427                           ;Modbus.c: 271:     MBRespon[MBResCnt +1] = ByteLo;
 10428  000B70  0EA1               	movlw	low (_MBRespon+1)
 10429  000B72  25D1               	addwf	_MBResCnt& (0+255),w,b
 10430  000B74  6ED9               	movwf	fsr2l,c
 10431  000B76  0E02               	movlw	high (_MBRespon+1)
 10432  000B78  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10433  000B7A  6EDA               	movwf	fsr2h,c
 10434  000B7C  C0F6  FFDF         	movff	_ByteLo,indf2
 10435  000B80                     
 10436                           ; BSR set to: 0
 10437                           ;Modbus.c: 272:     MBResCnt = MBResCnt +2;
 10438  000B80  0E02               	movlw	2
 10439  000B82  25D1               	addwf	_MBResCnt& (0+255),w,b
 10440  000B84  6FD1               	movwf	_MBResCnt& (0+255),b
 10441  000B86  0E00               	movlw	0
 10442  000B88  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10443  000B8A  6FD2               	movwf	(_MBResCnt+1)& (0+255),b
 10444  000B8C                     
 10445                           ; BSR set to: 0
 10446                           ;Modbus.c: 278:     UART1_Write_string(MBRespon,MBResCnt);
 10447  000B8C  0EA0               	movlw	low _MBRespon
 10448  000B8E  6E06               	movwf	UART1_Write_string@data^0,c
 10449  000B90  0E02               	movlw	high _MBRespon
 10450  000B92  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 10451  000B94  C0D1  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 10452  000B98  C0D2  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 10453  000B9C  EC40  F01B         	call	_UART1_Write_string	;wreg free
 10454  000BA0  0012               	return		;funcret
 10455  000BA2                     __end_of_ModbusFC03:
 10456                           	opt callstack 0
 10457                           
 10458 ;; *************** function _ADCC_GetSingleConversion *****************
 10459 ;; Defined at:
 10460 ;;		line 131 in file "mcc_generated_files/adcc.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  channel         1    wreg     enum E10046
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  channel         1    8[COMRAM] enum E10046
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  2    4[COMRAM] unsigned short 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10477 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10478 ;;Total ram usage:        5 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    4
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_ModbusFC03
 10485 ;;		_InitialiseString
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text46
 10490  003F4C                     __ptext46:
 10491                           	opt callstack 0
 10492  003F4C                     _ADCC_GetSingleConversion:
 10493                           	opt callstack 24
 10494                           
 10495                           ;incstack = 0
 10496                           ;ADCC_GetSingleConversion@channel stored from wreg
 10497  003F4C  6E09               	movwf	ADCC_GetSingleConversion@channel^0,c
 10498  003F4E                     
 10499                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
 10500  003F4E  C009  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 10501  003F52                     
 10502                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 10503  003F52  8E60               	bsf	96,7,c	;volatile
 10504  003F54                     
 10505                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
 10506  003F54  9C60               	bcf	96,6,c	;volatile
 10507  003F56                     
 10508                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
 10509  003F56  8060               	bsf	96,0,c	;volatile
 10510  003F58                     l1063:
 10511                           
 10512                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
 10513  003F58  B060               	btfsc	96,0,c	;volatile
 10514  003F5A  EFB1  F01F         	goto	u6891
 10515  003F5E  EFB3  F01F         	goto	u6890
 10516  003F62                     u6891:
 10517  003F62  EFAC  F01F         	goto	l1063
 10518  003F66                     u6890:
 10519  003F66                     
 10520                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10521  003F66  5064               	movf	100,w,c	;volatile
 10522  003F68  6E08               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 10523  003F6A  6A07               	clrf	??_ADCC_GetSingleConversion^0,c
 10524  003F6C  5063               	movf	99,w,c	;volatile
 10525  003F6E  2407               	addwf	??_ADCC_GetSingleConversion^0,w,c
 10526  003F70  6E05               	movwf	?_ADCC_GetSingleConversion^0,c
 10527  003F72  0E00               	movlw	0
 10528  003F74  2008               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 10529  003F76  6E06               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 10530  003F78  0012               	return		;funcret
 10531  003F7A                     __end_of_ADCC_GetSingleConversion:
 10532                           	opt callstack 0
 10533                           
 10534 ;; *************** function _ModbusError *****************
 10535 ;; Defined at:
 10536 ;;		line 407 in file "Modbus.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  ErrorCode       2   43[BANK0 ] int 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  i               2    0        int 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10553 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10554 ;;Total ram usage:        4 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:   14
 10557 ;; This function calls:
 10558 ;;		_PrintModRespon
 10559 ;;		_UART1_Write_string
 10560 ;;		_generateCRC
 10561 ;; This function is called by:
 10562 ;;		_main
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text47
 10567  002F78                     __ptext47:
 10568                           	opt callstack 0
 10569  002F78                     _ModbusError:
 10570                           	opt callstack 16
 10571  002F78                     
 10572                           ;Modbus.c: 412:     MBResCnt = 0;
 10573  002F78  0E00               	movlw	0
 10574  002F7A  0100               	movlb	0	; () banked
 10575  002F7C  6FD2               	movwf	(_MBResCnt+1)& (0+255),b
 10576  002F7E  0E00               	movlw	0
 10577  002F80  6FD1               	movwf	_MBResCnt& (0+255),b
 10578  002F82                     
 10579                           ; BSR set to: 0
 10580                           ;Modbus.c: 413:     MBRespon[MBResCnt] = ModbusData[0];
 10581  002F82  0EA0               	movlw	low _MBRespon
 10582  002F84  25D1               	addwf	_MBResCnt& (0+255),w,b
 10583  002F86  6ED9               	movwf	fsr2l,c
 10584  002F88  0E02               	movlw	high _MBRespon
 10585  002F8A  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10586  002F8C  6EDA               	movwf	fsr2h,c
 10587  002F8E  C200  FFDF         	movff	_ModbusData,indf2
 10588  002F92                     
 10589                           ; BSR set to: 0
 10590                           ;Modbus.c: 414:     MBResCnt++;
 10591  002F92  4BD1               	infsnz	_MBResCnt& (0+255),f,b
 10592  002F94  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
 10593  002F96                     
 10594                           ; BSR set to: 0
 10595                           ;Modbus.c: 415:     MBRespon[MBResCnt] = ModbusData[1] + 128;
 10596  002F96  0EA0               	movlw	low _MBRespon
 10597  002F98  25D1               	addwf	_MBResCnt& (0+255),w,b
 10598  002F9A  6ED9               	movwf	fsr2l,c
 10599  002F9C  0E02               	movlw	high _MBRespon
 10600  002F9E  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10601  002FA0  6EDA               	movwf	fsr2h,c
 10602  002FA2  0102               	movlb	2	; () banked
 10603  002FA4  5101               	movf	(_ModbusData+1)& (0+255),w,b
 10604  002FA6  0F80               	addlw	128
 10605  002FA8  6EDF               	movwf	indf2,c
 10606  002FAA                     
 10607                           ; BSR set to: 2
 10608                           ;Modbus.c: 416:     MBResCnt++;
 10609  002FAA  0100               	movlb	0	; () banked
 10610  002FAC  4BD1               	infsnz	_MBResCnt& (0+255),f,b
 10611  002FAE  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
 10612  002FB0                     
 10613                           ; BSR set to: 0
 10614                           ;Modbus.c: 417:     MBRespon[MBResCnt] = ErrorCode;
 10615  002FB0  0EA0               	movlw	low _MBRespon
 10616  002FB2  25D1               	addwf	_MBResCnt& (0+255),w,b
 10617  002FB4  6ED9               	movwf	fsr2l,c
 10618  002FB6  0E02               	movlw	high _MBRespon
 10619  002FB8  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10620  002FBA  6EDA               	movwf	fsr2h,c
 10621  002FBC  C08B  FFDF         	movff	ModbusError@ErrorCode,indf2
 10622  002FC0                     
 10623                           ; BSR set to: 0
 10624                           ;Modbus.c: 418:     MBResCnt++;
 10625  002FC0  4BD1               	infsnz	_MBResCnt& (0+255),f,b
 10626  002FC2  2BD2               	incf	(_MBResCnt+1)& (0+255),f,b
 10627  002FC4                     
 10628                           ; BSR set to: 0
 10629                           ;Modbus.c: 420:     ByteHi = generateCRC(MBResCnt, 1);
 10630  002FC4  C0D1  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10631  002FC8  C0D2  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10632  002FCC  0E01               	movlw	1
 10633  002FCE  6E07               	movwf	generateCRC@HiOrLo^0,c
 10634  002FD0  EC7D  F016         	call	_generateCRC	;wreg free
 10635  002FD4  C005  F0CF         	movff	?_generateCRC,_ByteHi
 10636  002FD8  C006  F0D0         	movff	?_generateCRC+1,_ByteHi+1
 10637  002FDC                     
 10638                           ;Modbus.c: 421:     ByteLo = generateCRC(MBResCnt, 0);
 10639  002FDC  C0D1  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10640  002FE0  C0D2  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10641  002FE4  0E00               	movlw	0
 10642  002FE6  6E07               	movwf	generateCRC@HiOrLo^0,c
 10643  002FE8  EC7D  F016         	call	_generateCRC	;wreg free
 10644  002FEC  C005  F0F6         	movff	?_generateCRC,_ByteLo
 10645  002FF0  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 10646  002FF4                     
 10647                           ;Modbus.c: 423:     MBRespon[MBResCnt] = ByteHi;
 10648  002FF4  0EA0               	movlw	low _MBRespon
 10649  002FF6  0100               	movlb	0	; () banked
 10650  002FF8  25D1               	addwf	_MBResCnt& (0+255),w,b
 10651  002FFA  6ED9               	movwf	fsr2l,c
 10652  002FFC  0E02               	movlw	high _MBRespon
 10653  002FFE  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10654  003000  6EDA               	movwf	fsr2h,c
 10655  003002  C0CF  FFDF         	movff	_ByteHi,indf2
 10656  003006                     
 10657                           ; BSR set to: 0
 10658                           ;Modbus.c: 424:     MBRespon[MBResCnt +1] = ByteLo;
 10659  003006  0EA1               	movlw	low (_MBRespon+1)
 10660  003008  25D1               	addwf	_MBResCnt& (0+255),w,b
 10661  00300A  6ED9               	movwf	fsr2l,c
 10662  00300C  0E02               	movlw	high (_MBRespon+1)
 10663  00300E  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10664  003010  6EDA               	movwf	fsr2h,c
 10665  003012  C0F6  FFDF         	movff	_ByteLo,indf2
 10666  003016                     
 10667                           ; BSR set to: 0
 10668                           ;Modbus.c: 425:     MBResCnt = MBResCnt +2;
 10669  003016  0E02               	movlw	2
 10670  003018  25D1               	addwf	_MBResCnt& (0+255),w,b
 10671  00301A  6FD1               	movwf	_MBResCnt& (0+255),b
 10672  00301C  0E00               	movlw	0
 10673  00301E  21D2               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10674  003020  6FD2               	movwf	(_MBResCnt+1)& (0+255),b
 10675  003022                     
 10676                           ; BSR set to: 0
 10677                           ;Modbus.c: 427:     PrintModRespon();
 10678  003022  EC9E  F019         	call	_PrintModRespon	;wreg free
 10679  003026                     
 10680                           ;Modbus.c: 428:     UART1_Write_string(MBRespon,MBResCnt);
 10681  003026  0EA0               	movlw	low _MBRespon
 10682  003028  6E06               	movwf	UART1_Write_string@data^0,c
 10683  00302A  0E02               	movlw	high _MBRespon
 10684  00302C  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 10685  00302E  C0D1  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 10686  003032  C0D2  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 10687  003036  EC40  F01B         	call	_UART1_Write_string	;wreg free
 10688  00303A  0012               	return		;funcret
 10689  00303C                     __end_of_ModbusError:
 10690                           	opt callstack 0
 10691                           
 10692 ;; *************** function _generateCRC *****************
 10693 ;; Defined at:
 10694 ;;		line 335 in file "Modbus.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  MessCnt         2    4[COMRAM] int 
 10697 ;;  HiOrLo          1    6[COMRAM] _Bool 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  crc             2   17[COMRAM] unsigned int 
 10700 ;;  j               2   15[COMRAM] int 
 10701 ;;  i               2   13[COMRAM] int 
 10702 ;;  crcLow          2   11[COMRAM] unsigned int 
 10703 ;;  crcHigh         2    9[COMRAM] unsigned int 
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  2    4[COMRAM] unsigned int 
 10706 ;; Registers used:
 10707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10713 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10714 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10716 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10717 ;;Total ram usage:       15 bytes
 10718 ;; Hardware stack levels used:    1
 10719 ;; Hardware stack levels required when called:    4
 10720 ;; This function calls:
 10721 ;;		Nothing
 10722 ;; This function is called by:
 10723 ;;		_ModbusFC03
 10724 ;;		_ModbusFC10
 10725 ;;		_ModbusError
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text48
 10730  002CFA                     __ptext48:
 10731                           	opt callstack 0
 10732  002CFA                     _generateCRC:
 10733                           	opt callstack 25
 10734  002CFA                     
 10735                           ;Modbus.c: 336:   unsigned int crc = 0xFFFF;
 10736  002CFA  6812               	setf	generateCRC@crc^0,c
 10737  002CFC  6813               	setf	(generateCRC@crc+1)^0,c
 10738  002CFE                     
 10739                           ;Modbus.c: 338:   unsigned int crcLow = 0;
 10740  002CFE  0E00               	movlw	0
 10741  002D00  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
 10742  002D02  0E00               	movlw	0
 10743  002D04  6E0C               	movwf	generateCRC@crcLow^0,c
 10744                           
 10745                           ;Modbus.c: 339:   int i,j = 0;
 10746  002D06  0E00               	movlw	0
 10747  002D08  6E11               	movwf	(generateCRC@j+1)^0,c
 10748  002D0A  0E00               	movlw	0
 10749  002D0C  6E10               	movwf	generateCRC@j^0,c
 10750                           
 10751                           ;Modbus.c: 341:     for(i=0;i<MessCnt;i++){
 10752  002D0E  0E00               	movlw	0
 10753  002D10  6E0F               	movwf	(generateCRC@i+1)^0,c
 10754  002D12  0E00               	movlw	0
 10755  002D14  6E0E               	movwf	generateCRC@i^0,c
 10756  002D16  EFBC  F016         	goto	l7348
 10757  002D1A                     l7330:
 10758                           
 10759                           ;Modbus.c: 342:       crc ^= MBRespon[i];
 10760  002D1A  0EA0               	movlw	low _MBRespon
 10761  002D1C  240E               	addwf	generateCRC@i^0,w,c
 10762  002D1E  6ED9               	movwf	fsr2l,c
 10763  002D20  0E02               	movlw	high _MBRespon
 10764  002D22  200F               	addwfc	(generateCRC@i+1)^0,w,c
 10765  002D24  6EDA               	movwf	fsr2h,c
 10766  002D26  50DF               	movf	indf2,w,c
 10767  002D28  6E08               	movwf	??_generateCRC^0,c
 10768  002D2A  5008               	movf	??_generateCRC^0,w,c
 10769  002D2C  1A12               	xorwf	generateCRC@crc^0,f,c
 10770  002D2E                     
 10771                           ;Modbus.c: 343:       for(j=8; j!=0; j--){
 10772  002D2E  0E00               	movlw	0
 10773  002D30  6E11               	movwf	(generateCRC@j+1)^0,c
 10774  002D32  0E08               	movlw	8
 10775  002D34  6E10               	movwf	generateCRC@j^0,c
 10776  002D36                     l778:
 10777                           
 10778                           ;Modbus.c: 344:         if((crc & 0x0001) != 0){
 10779  002D36  A012               	btfss	generateCRC@crc^0,0,c
 10780  002D38  EFA0  F016         	goto	u7231
 10781  002D3C  EFA2  F016         	goto	u7230
 10782  002D40                     u7231:
 10783  002D40  EFAB  F016         	goto	l7342
 10784  002D44                     u7230:
 10785  002D44                     
 10786                           ;Modbus.c: 345:           crc >>= 1;
 10787  002D44  90D8               	bcf	status,0,c
 10788  002D46  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 10789  002D48  3212               	rrcf	generateCRC@crc^0,f,c
 10790  002D4A                     
 10791                           ;Modbus.c: 346:           crc ^= 0xA001;
 10792  002D4A  0E01               	movlw	1
 10793  002D4C  1A12               	xorwf	generateCRC@crc^0,f,c
 10794  002D4E  0EA0               	movlw	160
 10795  002D50  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
 10796                           
 10797                           ;Modbus.c: 347:         }
 10798  002D52  EFAE  F016         	goto	l781
 10799  002D56                     l7342:
 10800                           
 10801                           ;Modbus.c: 349:           crc >>= 1;
 10802  002D56  90D8               	bcf	status,0,c
 10803  002D58  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 10804  002D5A  3212               	rrcf	generateCRC@crc^0,f,c
 10805  002D5C                     l781:
 10806                           
 10807                           ;Modbus.c: 351:       }
 10808  002D5C  0610               	decf	generateCRC@j^0,f,c
 10809  002D5E  A0D8               	btfss	status,0,c
 10810  002D60  0611               	decf	(generateCRC@j+1)^0,f,c
 10811  002D62  5010               	movf	generateCRC@j^0,w,c
 10812  002D64  1011               	iorwf	(generateCRC@j+1)^0,w,c
 10813  002D66  A4D8               	btfss	status,2,c
 10814  002D68  EFB8  F016         	goto	u7241
 10815  002D6C  EFBA  F016         	goto	u7240
 10816  002D70                     u7241:
 10817  002D70  EF9B  F016         	goto	l778
 10818  002D74                     u7240:
 10819  002D74                     
 10820                           ;Modbus.c: 352:     }
 10821  002D74  4A0E               	infsnz	generateCRC@i^0,f,c
 10822  002D76  2A0F               	incf	(generateCRC@i+1)^0,f,c
 10823  002D78                     l7348:
 10824  002D78  5005               	movf	generateCRC@MessCnt^0,w,c
 10825  002D7A  5C0E               	subwf	generateCRC@i^0,w,c
 10826  002D7C  500F               	movf	(generateCRC@i+1)^0,w,c
 10827  002D7E  0A80               	xorlw	128
 10828  002D80  6E08               	movwf	??_generateCRC^0,c
 10829  002D82  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 10830  002D84  0A80               	xorlw	128
 10831  002D86  5808               	subwfb	??_generateCRC^0,w,c
 10832  002D88  A0D8               	btfss	status,0,c
 10833  002D8A  EFC9  F016         	goto	u7251
 10834  002D8E  EFCB  F016         	goto	u7250
 10835  002D92                     u7251:
 10836  002D92  EF8D  F016         	goto	l7330
 10837  002D96                     u7250:
 10838  002D96                     
 10839                           ;Modbus.c: 354:     crcHigh = (crc & 0x00FF);
 10840  002D96  5012               	movf	generateCRC@crc^0,w,c
 10841  002D98  6E0A               	movwf	generateCRC@crcHigh^0,c
 10842  002D9A  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 10843                           
 10844                           ;Modbus.c: 355:     crcLow = (crc & 0xFF00) >>8;
 10845  002D9C  C012  F008         	movff	generateCRC@crc,??_generateCRC
 10846  002DA0  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 10847  002DA4  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 10848  002DA8  6A09               	clrf	(??_generateCRC+1)^0,c
 10849  002DAA  5008               	movf	??_generateCRC^0,w,c
 10850  002DAC  6E0C               	movwf	generateCRC@crcLow^0,c
 10851  002DAE  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 10852  002DB0                     
 10853                           ;Modbus.c: 357:     if(HiOrLo == 1){
 10854  002DB0  0407               	decf	generateCRC@HiOrLo^0,w,c
 10855  002DB2  A4D8               	btfss	status,2,c
 10856  002DB4  EFDE  F016         	goto	u7261
 10857  002DB8  EFE0  F016         	goto	u7260
 10858  002DBC                     u7261:
 10859  002DBC  EFE6  F016         	goto	l783
 10860  002DC0                     u7260:
 10861  002DC0                     
 10862                           ;Modbus.c: 358:         return crcHigh;
 10863  002DC0  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 10864  002DC4  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 10865  002DC8  EFEA  F016         	goto	l784
 10866  002DCC                     l783:
 10867                           
 10868                           ;Modbus.c: 360:         return crcLow;
 10869  002DCC  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 10870  002DD0  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 10871  002DD4                     l784:
 10872  002DD4  0012               	return		;funcret
 10873  002DD6                     __end_of_generateCRC:
 10874                           	opt callstack 0
 10875                           
 10876 ;; *************** function _UART1_Write_string *****************
 10877 ;; Defined at:
 10878 ;;		line 365 in file "Modbus.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  data            2    5[COMRAM] PTR unsigned char 
 10881 ;;		 -> MBRespon(75), 
 10882 ;;  data_len        2    7[COMRAM] int 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  i               2   10[COMRAM] int 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10898 ;;Total ram usage:        7 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    5
 10901 ;; This function calls:
 10902 ;;		_EUSART1_Write
 10903 ;;		_EUSART1_is_tx_done
 10904 ;;		_EUSART1_is_tx_ready
 10905 ;;		_TXMode
 10906 ;; This function is called by:
 10907 ;;		_ModbusFC03
 10908 ;;		_ModbusFC10
 10909 ;;		_ModbusError
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text49
 10914  003680                     __ptext49:
 10915                           	opt callstack 0
 10916  003680                     _UART1_Write_string:
 10917                           	opt callstack 24
 10918  003680                     
 10919                           ;Modbus.c: 365: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 36
      +                          6: {;Modbus.c: 367:     TXMode();
 10920  003680  ECE2  F020         	call	_TXMode	;wreg free
 10921  003684                     l7360:
 10922  003684  EC72  F020         	call	_EUSART1_is_tx_ready	;wreg free
 10923  003688  0900               	iorlw	0
 10924  00368A  B4D8               	btfsc	status,2,c
 10925  00368C  EF4A  F01B         	goto	u7271
 10926  003690  EF4C  F01B         	goto	u7270
 10927  003694                     u7271:
 10928  003694  EF42  F01B         	goto	l7360
 10929  003698                     u7270:
 10930  003698                     
 10931                           ;Modbus.c: 369:     for (int i = 0; i < data_len; i++) {
 10932  003698  0E00               	movlw	0
 10933  00369A  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 10934  00369C  0E00               	movlw	0
 10935  00369E  6E0B               	movwf	UART1_Write_string@i^0,c
 10936  0036A0  EF67  F01B         	goto	l7370
 10937  0036A4                     l7364:
 10938                           
 10939                           ;Modbus.c: 370:         EUSART1_Write(data[i]);
 10940  0036A4  500B               	movf	UART1_Write_string@i^0,w,c
 10941  0036A6  2406               	addwf	UART1_Write_string@data^0,w,c
 10942  0036A8  6ED9               	movwf	fsr2l,c
 10943  0036AA  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 10944  0036AC  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 10945  0036AE  6EDA               	movwf	fsr2h,c
 10946  0036B0  50DF               	movf	indf2,w,c
 10947  0036B2  EC0C  F01C         	call	_EUSART1_Write
 10948  0036B6                     l7366:
 10949  0036B6  EC95  F020         	call	_EUSART1_is_tx_done	;wreg free
 10950  0036BA  0900               	iorlw	0
 10951  0036BC  B4D8               	btfsc	status,2,c
 10952  0036BE  EF63  F01B         	goto	u7281
 10953  0036C2  EF65  F01B         	goto	u7280
 10954  0036C6                     u7281:
 10955  0036C6  EF5B  F01B         	goto	l7366
 10956  0036CA                     u7280:
 10957  0036CA                     
 10958                           ;Modbus.c: 372:     }
 10959  0036CA  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 10960  0036CC  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 10961  0036CE                     l7370:
 10962  0036CE  5008               	movf	UART1_Write_string@data_len^0,w,c
 10963  0036D0  5C0B               	subwf	UART1_Write_string@i^0,w,c
 10964  0036D2  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 10965  0036D4  0A80               	xorlw	128
 10966  0036D6  6E0A               	movwf	??_UART1_Write_string^0,c
 10967  0036D8  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 10968  0036DA  0A80               	xorlw	128
 10969  0036DC  580A               	subwfb	??_UART1_Write_string^0,w,c
 10970  0036DE  A0D8               	btfss	status,0,c
 10971  0036E0  EF74  F01B         	goto	u7291
 10972  0036E4  EF76  F01B         	goto	u7290
 10973  0036E8                     u7291:
 10974  0036E8  EF52  F01B         	goto	l7364
 10975  0036EC                     u7290:
 10976  0036EC  0012               	return		;funcret
 10977  0036EE                     __end_of_UART1_Write_string:
 10978                           	opt callstack 0
 10979                           
 10980 ;; *************** function _TXMode *****************
 10981 ;; Defined at:
 10982 ;;		line 36 in file "Modbus.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;		None
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		None
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11000 ;;Total ram usage:        0 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    4
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_UART1_Write_string
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text50
 11011  0041C4                     __ptext50:
 11012                           	opt callstack 0
 11013  0041C4                     _TXMode:
 11014                           	opt callstack 24
 11015  0041C4  8086               	bsf	134,0,c	;volatile
 11016  0041C6  8683               	bsf	131,3,c	;volatile
 11017  0041C8  0012               	return		;funcret
 11018  0041CA                     __end_of_TXMode:
 11019                           	opt callstack 0
 11020                           
 11021 ;; *************** function _EUSART1_is_tx_ready *****************
 11022 ;; Defined at:
 11023 ;;		line 134 in file "mcc_generated_files/eusart1.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;		None
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;		None
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      _Bool 
 11030 ;; Registers used:
 11031 ;;		wreg, status,2
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;Total ram usage:        0 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:    4
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_UART1_Write_string
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text51
 11052  0040E4                     __ptext51:
 11053                           	opt callstack 0
 11054  0040E4                     _EUSART1_is_tx_ready:
 11055                           	opt callstack 24
 11056  0040E4                     
 11057                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
 11058  0040E4  0100               	movlb	0	; () banked
 11059  0040E6  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 11060  0040E8  A4D8               	btfss	status,2,c
 11061  0040EA  EF79  F020         	goto	u6771
 11062  0040EE  EF7C  F020         	goto	u6770
 11063  0040F2                     u6771:
 11064  0040F2  0E01               	movlw	1
 11065  0040F4  EF7D  F020         	goto	u6780
 11066  0040F8                     u6770:
 11067  0040F8  0E00               	movlw	0
 11068  0040FA                     u6780:
 11069  0040FA                     
 11070                           ; BSR set to: 0
 11071  0040FA  0012               	return		;funcret
 11072  0040FC                     __end_of_EUSART1_is_tx_ready:
 11073                           	opt callstack 0
 11074                           
 11075 ;; *************** function _EUSART1_is_tx_done *****************
 11076 ;; Defined at:
 11077 ;;		line 144 in file "mcc_generated_files/eusart1.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;		None
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;		None
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  1    wreg      _Bool 
 11084 ;; Registers used:
 11085 ;;		wreg
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11095 ;;Total ram usage:        0 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; Hardware stack levels required when called:    4
 11098 ;; This function calls:
 11099 ;;		Nothing
 11100 ;; This function is called by:
 11101 ;;		_UART1_Write_string
 11102 ;; This function uses a non-reentrant model
 11103 ;;
 11104                           
 11105                           	psect	text52
 11106  00412A                     __ptext52:
 11107                           	opt callstack 0
 11108  00412A                     _EUSART1_is_tx_done:
 11109                           	opt callstack 24
 11110  00412A                     
 11111                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
 11112  00412A  B29E               	btfsc	158,1,c	;volatile
 11113  00412C  EF9A  F020         	goto	u6791
 11114  004130  EF9D  F020         	goto	u6790
 11115  004134                     u6791:
 11116  004134  0E01               	movlw	1
 11117  004136  EF9E  F020         	goto	u6796
 11118  00413A                     u6790:
 11119  00413A  0E00               	movlw	0
 11120  00413C                     u6796:
 11121  00413C  0012               	return		;funcret
 11122  00413E                     __end_of_EUSART1_is_tx_done:
 11123                           	opt callstack 0
 11124                           
 11125 ;; *************** function _EUSART1_Write *****************
 11126 ;; Defined at:
 11127 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  txData          1    wreg     unsigned char 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;  txData          1    4[COMRAM] unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      void 
 11134 ;; Registers used:
 11135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11145 ;;Total ram usage:        1 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    4
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_UART1_Write_string
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           	psect	text53
 11156  003818                     __ptext53:
 11157                           	opt callstack 0
 11158  003818                     _EUSART1_Write:
 11159                           	opt callstack 24
 11160                           
 11161                           ;incstack = 0
 11162                           ;EUSART1_Write@txData stored from wreg
 11163  003818  6E05               	movwf	EUSART1_Write@txData^0,c
 11164  00381A                     l6918:
 11165                           
 11166                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
 11167  00381A  0100               	movlb	0	; () banked
 11168  00381C  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 11169  00381E  B4D8               	btfsc	status,2,c
 11170  003820  EF14  F01C         	goto	u6801
 11171  003824  EF16  F01C         	goto	u6800
 11172  003828                     u6801:
 11173  003828  EF0D  F01C         	goto	l6918
 11174  00382C                     u6800:
 11175  00382C                     
 11176                           ; BSR set to: 0
 11177                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
 11178  00382C  010E               	movlb	14	; () banked
 11179  00382E  B9C5               	btfsc	197,4,b	;volatile
 11180  003830  EF1C  F01C         	goto	u6811
 11181  003834  EF1E  F01C         	goto	u6810
 11182  003838                     u6811:
 11183  003838  EF22  F01C         	goto	l475
 11184  00383C                     u6810:
 11185  00383C                     
 11186                           ; BSR set to: 14
 11187                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
 11188  00383C  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 11189                           
 11190                           ;mcc_generated_files/eusart1.c: 184:     }
 11191  003840  EF38  F01C         	goto	l6932
 11192  003844                     l475:
 11193                           
 11194                           ; BSR set to: 14
 11195                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
 11196  003844  99C5               	bcf	197,4,b	;volatile
 11197  003846                     
 11198                           ; BSR set to: 14
 11199                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
 11200  003846  0E74               	movlw	low _eusart1TxBuffer
 11201  003848  0100               	movlb	0	; () banked
 11202  00384A  25DE               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 11203  00384C  6ED9               	movwf	fsr2l,c
 11204  00384E  6ADA               	clrf	fsr2h,c
 11205  003850  0E01               	movlw	high _eusart1TxBuffer
 11206  003852  22DA               	addwfc	fsr2h,f,c
 11207  003854  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 11208  003858                     
 11209                           ; BSR set to: 0
 11210  003858  2BDE               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 11211  00385A                     
 11212                           ; BSR set to: 0
 11213                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 11214  00385A  0E0F               	movlw	15
 11215  00385C  65DE               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 11216  00385E  EF33  F01C         	goto	u6821
 11217  003862  EF35  F01C         	goto	u6820
 11218  003866                     u6821:
 11219  003866  EF37  F01C         	goto	l6930
 11220  00386A                     u6820:
 11221  00386A                     
 11222                           ; BSR set to: 0
 11223                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
 11224  00386A  0E00               	movlw	0
 11225  00386C  6FDE               	movwf	_eusart1TxHead& (0+255),b	;volatile
 11226  00386E                     l6930:
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
 11230  00386E  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 11231  003870                     l6932:
 11232                           
 11233                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
 11234  003870  010E               	movlb	14	; () banked
 11235  003872  89C5               	bsf	197,4,b	;volatile
 11236  003874                     
 11237                           ; BSR set to: 14
 11238  003874  0012               	return		;funcret
 11239  003876                     __end_of_EUSART1_Write:
 11240                           	opt callstack 0
 11241                           
 11242 ;; *************** function _PrintModRespon *****************
 11243 ;; Defined at:
 11244 ;;		line 379 in file "Modbus.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;		None
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;  i               2   41[BANK0 ] int 
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      void 
 11251 ;; Registers used:
 11252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11259 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11261 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11262 ;;Total ram usage:        3 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; Hardware stack levels required when called:   13
 11265 ;; This function calls:
 11266 ;;		_EUSART2_is_tx_done
 11267 ;;		_EUSART2_is_tx_ready
 11268 ;;		_printf
 11269 ;; This function is called by:
 11270 ;;		_main
 11271 ;;		_ModbusFC10
 11272 ;;		_ModbusError
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text54
 11277  00333C                     __ptext54:
 11278                           	opt callstack 0
 11279  00333C                     _PrintModRespon:
 11280                           	opt callstack 17
 11281  00333C                     
 11282                           ;Modbus.c: 383:     printf("Modbus Response Count %i:\r\n",MBResCnt);
 11283  00333C  0E7C               	movlw	low STR_22
 11284  00333E  0100               	movlb	0	; () banked
 11285  003340  6F7D               	movwf	printf@fmt& (0+255),b
 11286  003342  0EFD               	movlw	high STR_22
 11287  003344  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11288  003346  C0D1  F07F         	movff	_MBResCnt,?_printf+2
 11289  00334A  C0D2  F080         	movff	_MBResCnt+1,?_printf+3
 11290  00334E  ECE9  F01F         	call	_printf	;wreg free
 11291  003352                     
 11292                           ;Modbus.c: 385:     for(i=0; i< MBResCnt ; i++ ){
 11293  003352  0E00               	movlw	0
 11294  003354  0100               	movlb	0	; () banked
 11295  003356  6F8A               	movwf	(PrintModRespon@i+1)& (0+255),b
 11296  003358  0E00               	movlw	0
 11297  00335A  6F89               	movwf	PrintModRespon@i& (0+255),b
 11298  00335C  EFDD  F019         	goto	l7254
 11299  003360                     l7246:
 11300  003360  EC7E  F020         	call	_EUSART2_is_tx_ready	;wreg free
 11301  003364  0900               	iorlw	0
 11302  003366  B4D8               	btfsc	status,2,c
 11303  003368  EFB8  F019         	goto	u7101
 11304  00336C  EFBA  F019         	goto	u7100
 11305  003370                     u7101:
 11306  003370  EFB0  F019         	goto	l7246
 11307  003374                     u7100:
 11308  003374                     
 11309                           ;Modbus.c: 387:         printf("   Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
 11310  003374  0E1D               	movlw	low STR_23
 11311  003376  0100               	movlb	0	; () banked
 11312  003378  6F7D               	movwf	printf@fmt& (0+255),b
 11313  00337A  0EFE               	movlw	high STR_23
 11314  00337C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11315  00337E  C089  F07F         	movff	PrintModRespon@i,?_printf+2
 11316  003382  C08A  F080         	movff	PrintModRespon@i+1,?_printf+3
 11317  003386  0EA0               	movlw	low _MBRespon
 11318  003388  2589               	addwf	PrintModRespon@i& (0+255),w,b
 11319  00338A  6ED9               	movwf	fsr2l,c
 11320  00338C  0E02               	movlw	high _MBRespon
 11321  00338E  218A               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 11322  003390  6EDA               	movwf	fsr2h,c
 11323  003392  50DF               	movf	indf2,w,c
 11324  003394  6E55               	movwf	??_PrintModRespon^0,c
 11325  003396  5055               	movf	??_PrintModRespon^0,w,c
 11326  003398  6F81               	movwf	(?_printf+4)& (0+255),b
 11327  00339A  6B82               	clrf	(?_printf+5)& (0+255),b
 11328  00339C  ECE9  F01F         	call	_printf	;wreg free
 11329  0033A0                     l7250:
 11330  0033A0  EC8A  F020         	call	_EUSART2_is_tx_done	;wreg free
 11331  0033A4  0900               	iorlw	0
 11332  0033A6  B4D8               	btfsc	status,2,c
 11333  0033A8  EFD8  F019         	goto	u7111
 11334  0033AC  EFDA  F019         	goto	u7110
 11335  0033B0                     u7111:
 11336  0033B0  EFD0  F019         	goto	l7250
 11337  0033B4                     u7110:
 11338  0033B4                     
 11339                           ;Modbus.c: 389:     }
 11340  0033B4  0100               	movlb	0	; () banked
 11341  0033B6  4B89               	infsnz	PrintModRespon@i& (0+255),f,b
 11342  0033B8  2B8A               	incf	(PrintModRespon@i+1)& (0+255),f,b
 11343  0033BA                     l7254:
 11344                           
 11345                           ; BSR set to: 0
 11346  0033BA  51D1               	movf	_MBResCnt& (0+255),w,b
 11347  0033BC  5D89               	subwf	PrintModRespon@i& (0+255),w,b
 11348  0033BE  518A               	movf	(PrintModRespon@i+1)& (0+255),w,b
 11349  0033C0  0A80               	xorlw	128
 11350  0033C2  6E55               	movwf	??_PrintModRespon^0,c
 11351  0033C4  51D2               	movf	(_MBResCnt+1)& (0+255),w,b
 11352  0033C6  0A80               	xorlw	128
 11353  0033C8  5855               	subwfb	??_PrintModRespon^0,w,c
 11354  0033CA  A0D8               	btfss	status,0,c
 11355  0033CC  EFEA  F019         	goto	u7121
 11356  0033D0  EFEC  F019         	goto	u7120
 11357  0033D4                     u7121:
 11358  0033D4  EFB0  F019         	goto	l7246
 11359  0033D8                     u7120:
 11360  0033D8                     
 11361                           ; BSR set to: 0
 11362                           ;Modbus.c: 391:     printf("\r\n\n");
 11363  0033D8  0E7A               	movlw	low (STR_55+65)
 11364  0033DA  6F7D               	movwf	printf@fmt& (0+255),b
 11365  0033DC  0EF9               	movlw	high (STR_55+65)
 11366  0033DE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11367  0033E0  ECE9  F01F         	call	_printf	;wreg free
 11368  0033E4  0012               	return		;funcret
 11369  0033E6                     __end_of_PrintModRespon:
 11370                           	opt callstack 0
 11371                           
 11372 ;; *************** function _printf *****************
 11373 ;; Defined at:
 11374 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 11377 ;;		 -> STR_76(12), STR_74(13), STR_73(17), STR_72(15), 
 11378 ;;		 -> STR_71(33), STR_69(38), STR_68(58), STR_67(17), 
 11379 ;;		 -> STR_66(16), STR_65(4), STR_64(15), STR_63(19), 
 11380 ;;		 -> STR_62(32), STR_61(33), STR_60(37), STR_59(44), 
 11381 ;;		 -> STR_58(22), STR_57(75), STR_56(53), STR_55(69), 
 11382 ;;		 -> STR_54(54), STR_53(52), STR_52(40), STR_51(30), 
 11383 ;;		 -> STR_50(43), STR_49(73), STR_48(42), STR_47(36), 
 11384 ;;		 -> STR_46(34), STR_43(42), STR_42(22), STR_41(21), 
 11385 ;;		 -> STR_40(20), STR_39(19), STR_38(40), STR_28(32), 
 11386 ;;		 -> STR_27(37), STR_26(16), STR_25(24), STR_24(4), 
 11387 ;;		 -> STR_23(25), STR_22(28), STR_21(15), STR_20(29), 
 11388 ;;		 -> STR_19(26), STR_18(26), STR_17(24), STR_16(22), 
 11389 ;;		 -> STR_15(22), STR_14(26), STR_13(36), STR_12(4), 
 11390 ;;		 -> STR_11(23), STR_10(34), STR_9(28), STR_8(54), 
 11391 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 11392 ;;		 -> STR_2(31), STR_1(21), 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  ap              2   39[BANK0 ] PTR void [1]
 11395 ;;		 -> ?_printf(2), 
 11396 ;;  ret             2    0        int 
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  2   29[BANK0 ] int 
 11399 ;; Registers used:
 11400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11409 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11410 ;;Total ram usage:       12 bytes
 11411 ;; Hardware stack levels used:    1
 11412 ;; Hardware stack levels required when called:   12
 11413 ;; This function calls:
 11414 ;;		_vfprintf
 11415 ;; This function is called by:
 11416 ;;		_main
 11417 ;;		_PrintMB400
 11418 ;;		_AddRxBuffToModBus
 11419 ;;		_PrintModbus
 11420 ;;		_checkCRC
 11421 ;;		_ModbusFC03
 11422 ;;		_PrintModRespon
 11423 ;;		_ModbusRx
 11424 ;;		_InitialiseString
 11425 ;;		_ReadRX232
 11426 ;;		_TogDebug
 11427 ;;		_ClearEEAddRange
 11428 ;;		_SaveCardDat
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           	psect	text55
 11433  003FD2                     __ptext55:
 11434                           	opt callstack 0
 11435  003FD2                     _printf:
 11436                           	opt callstack 18
 11437  003FD2  0E7F               	movlw	low (?_printf+2)
 11438  003FD4  0100               	movlb	0	; () banked
 11439  003FD6  6F87               	movwf	printf@ap& (0+255),b
 11440  003FD8  0E00               	movlw	high (?_printf+2)
 11441  003FDA  6F88               	movwf	(printf@ap+1)& (0+255),b
 11442  003FDC                     
 11443                           ; BSR set to: 0
 11444  003FDC  0E00               	movlw	0
 11445  003FDE  6F77               	movwf	vfprintf@fp& (0+255),b
 11446  003FE0  0E00               	movlw	0
 11447  003FE2  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 11448  003FE4  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 11449  003FE8  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 11450  003FEC  0E87               	movlw	low printf@ap
 11451  003FEE  6F7B               	movwf	vfprintf@ap& (0+255),b
 11452  003FF0  0E00               	movlw	high printf@ap
 11453  003FF2  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 11454  003FF4  ECAB  F01B         	call	_vfprintf	;wreg free
 11455  003FF8  0012               	return		;funcret
 11456  003FFA                     __end_of_printf:
 11457                           	opt callstack 0
 11458                           
 11459 ;; *************** function _vfprintf *****************
 11460 ;; Defined at:
 11461 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 11464 ;;		 -> NULL(0), 
 11465 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 11466 ;;		 -> STR_76(12), STR_74(13), STR_73(17), STR_72(15), 
 11467 ;;		 -> STR_71(33), STR_69(38), STR_68(58), STR_67(17), 
 11468 ;;		 -> STR_66(16), STR_65(4), STR_64(15), STR_63(19), 
 11469 ;;		 -> STR_62(32), STR_61(33), STR_60(37), STR_59(44), 
 11470 ;;		 -> STR_58(22), STR_57(75), STR_56(53), STR_55(69), 
 11471 ;;		 -> STR_54(54), STR_53(52), STR_52(40), STR_51(30), 
 11472 ;;		 -> STR_50(43), STR_49(73), STR_48(42), STR_47(36), 
 11473 ;;		 -> STR_46(34), STR_43(42), STR_42(22), STR_41(21), 
 11474 ;;		 -> STR_40(20), STR_39(19), STR_38(40), STR_28(32), 
 11475 ;;		 -> STR_27(37), STR_26(16), STR_25(24), STR_24(4), 
 11476 ;;		 -> STR_23(25), STR_22(28), STR_21(15), STR_20(29), 
 11477 ;;		 -> STR_19(26), STR_18(26), STR_17(24), STR_16(22), 
 11478 ;;		 -> STR_15(22), STR_14(26), STR_13(36), STR_12(4), 
 11479 ;;		 -> STR_11(23), STR_10(34), STR_9(28), STR_8(54), 
 11480 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 11481 ;;		 -> STR_2(31), STR_1(21), 
 11482 ;;  ap              2   27[BANK0 ] PTR PTR void 
 11483 ;;		 -> printf@ap(2), 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 11486 ;;		 -> STR_76(12), STR_74(13), STR_73(17), STR_72(15), 
 11487 ;;		 -> STR_71(33), STR_69(38), STR_68(58), STR_67(17), 
 11488 ;;		 -> STR_66(16), STR_65(4), STR_64(15), STR_63(19), 
 11489 ;;		 -> STR_62(32), STR_61(33), STR_60(37), STR_59(44), 
 11490 ;;		 -> STR_58(22), STR_57(75), STR_56(53), STR_55(69), 
 11491 ;;		 -> STR_54(54), STR_53(52), STR_52(40), STR_51(30), 
 11492 ;;		 -> STR_50(43), STR_49(73), STR_48(42), STR_47(36), 
 11493 ;;		 -> STR_46(34), STR_43(42), STR_42(22), STR_41(21), 
 11494 ;;		 -> STR_40(20), STR_39(19), STR_38(40), STR_28(32), 
 11495 ;;		 -> STR_27(37), STR_26(16), STR_25(24), STR_24(4), 
 11496 ;;		 -> STR_23(25), STR_22(28), STR_21(15), STR_20(29), 
 11497 ;;		 -> STR_19(26), STR_18(26), STR_17(24), STR_16(22), 
 11498 ;;		 -> STR_15(22), STR_14(26), STR_13(36), STR_12(4), 
 11499 ;;		 -> STR_11(23), STR_10(34), STR_9(28), STR_8(54), 
 11500 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 11501 ;;		 -> STR_2(31), STR_1(21), 
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  2   23[BANK0 ] int 
 11504 ;; Registers used:
 11505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11511 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11514 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11515 ;;Total ram usage:        8 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:   11
 11518 ;; This function calls:
 11519 ;;		_vfpfcnvrt
 11520 ;; This function is called by:
 11521 ;;		_printf
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text56
 11526  003756                     __ptext56:
 11527                           	opt callstack 0
 11528  003756                     _vfprintf:
 11529                           	opt callstack 18
 11530  003756                     
 11531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 11532  003756  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 11533  00375A  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11534  00375E                     
 11535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 11536  00375E  0E00               	movlw	0
 11537  003760  0100               	movlb	0	; () banked
 11538  003762  6FC8               	movwf	(_nout+1)& (0+255),b
 11539  003764  0E00               	movlw	0
 11540  003766  6FC7               	movwf	_nout& (0+255),b
 11541                           
 11542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 11543  003768  EFC9  F01B         	goto	l6774
 11544  00376C                     l6772:
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 11548  00376C  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 11549  003770  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11550  003774  0E53               	movlw	low vfprintf@cfmt
 11551  003776  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 11552  003778  0E00               	movlw	high vfprintf@cfmt
 11553  00377A  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11554  00377C  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 11555  003780  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11556  003784  EC95  F000         	call	_vfpfcnvrt	;wreg free
 11557  003788  5049               	movf	?_vfpfcnvrt^0,w,c
 11558  00378A  0100               	movlb	0	; () banked
 11559  00378C  27C7               	addwf	_nout& (0+255),f,b
 11560  00378E  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 11561  003790  23C8               	addwfc	(_nout+1)& (0+255),f,b
 11562  003792                     l6774:
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 11566  003792  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 11567  003796  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11568  00379A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11569  00379A  6AF8               	clrf	tblptru,c
 11570  00379C                     	endif
 11571  00379C                     	if	0	;tblptru may be non-zero
 11572  00379C                     	endif
 11573  00379C  0008               	tblrd		*
 11574  00379E  50F5               	movf	tablat,w,c
 11575  0037A0  0900               	iorlw	0
 11576  0037A2  A4D8               	btfss	status,2,c
 11577  0037A4  EFD6  F01B         	goto	u6581
 11578  0037A8  EFD8  F01B         	goto	u6580
 11579  0037AC                     u6581:
 11580  0037AC  EFB6  F01B         	goto	l6772
 11581  0037B0                     u6580:
 11582  0037B0                     
 11583                           ; BSR set to: 0
 11584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 11585  0037B0  C0C7  F077         	movff	_nout,?_vfprintf
 11586  0037B4  C0C8  F078         	movff	_nout+1,?_vfprintf+1
 11587  0037B8                     
 11588                           ; BSR set to: 0
 11589  0037B8  0012               	return		;funcret
 11590  0037BA                     __end_of_vfprintf:
 11591                           	opt callstack 0
 11592                           
 11593 ;; *************** function _vfpfcnvrt *****************
 11594 ;; Defined at:
 11595 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 11598 ;;		 -> NULL(0), 
 11599 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 11600 ;;		 -> vfprintf@cfmt(2), 
 11601 ;;  ap              2   76[COMRAM] PTR PTR void 
 11602 ;;		 -> printf@ap(2), 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;  llu             8   15[BANK0 ] unsigned long long 
 11605 ;;  ll              8    0[BANK0 ] long long 
 11606 ;;  f               4    0        long long 
 11607 ;;  vp              3    0        PTR void 
 11608 ;;  ct              3    0        unsigned char [3]
 11609 ;;  done            2   11[BANK0 ] int 
 11610 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 11611 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1513(20), ValidateCmd@ConfName_1509(20), ValidateCmd@ConfName(20), 
 11612 ;;		 -> STR_45(9), STR_44(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 11613 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 11614 ;;  i               2    0        int 
 11615 ;;  c               1   10[BANK0 ] unsigned char 
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  2   72[COMRAM] int 
 11618 ;; Registers used:
 11619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11625 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11626 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11628 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;Total ram usage:       33 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; Hardware stack levels required when called:   10
 11632 ;; This function calls:
 11633 ;;		_atoi
 11634 ;;		_dtoa
 11635 ;;		_fputc
 11636 ;;		_isdigit
 11637 ;;		_stoa
 11638 ;;		_utoa
 11639 ;;		_xtoa
 11640 ;; This function is called by:
 11641 ;;		_vfprintf
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text57
 11646  00012A                     __ptext57:
 11647                           	opt callstack 0
 11648  00012A                     _vfpfcnvrt:
 11649                           	opt callstack 18
 11650  00012A                     
 11651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 11652  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11653  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11654  000132  CFDE FFF6          	movff	postinc2,tblptrl
 11655  000136  CFDD FFF7          	movff	postdec2,tblptrh
 11656  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11657  00013A  6AF8               	clrf	tblptru,c
 11658  00013C                     	endif
 11659  00013C                     	if	0	;tblptru may be non-zero
 11660  00013C                     	endif
 11661  00013C  0008               	tblrd		*
 11662  00013E  50F5               	movf	tablat,w,c
 11663  000140  0A25               	xorlw	37
 11664  000142  A4D8               	btfss	status,2,c
 11665  000144  EFA6  F000         	goto	u6411
 11666  000148  EFA8  F000         	goto	u6410
 11667  00014C                     u6411:
 11668  00014C  EF3D  F003         	goto	l6746
 11669  000150                     u6410:
 11670  000150                     
 11671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 11672  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11673  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11674  000158  2ADE               	incf	postinc2,f,c
 11675  00015A  0E00               	movlw	0
 11676  00015C  22DD               	addwfc	postdec2,f,c
 11677  00015E                     
 11678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 11679  00015E  0E00               	movlw	0
 11680  000160  0100               	movlb	0	; () banked
 11681  000162  6FCA               	movwf	(_width+1)& (0+255),b
 11682  000164  0E00               	movlw	0
 11683  000166  6FC9               	movwf	_width& (0+255),b
 11684  000168  C0C9  F057         	movff	_width,_flags
 11685  00016C  C0CA  F058         	movff	_width+1,_flags+1
 11686  000170                     
 11687                           ; BSR set to: 0
 11688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 11689  000170  69CB               	setf	_prec& (0+255),b
 11690  000172  69CC               	setf	(_prec+1)& (0+255),b
 11691  000174                     
 11692                           ; BSR set to: 0
 11693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 11694  000174  0E00               	movlw	0
 11695  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11696  000178  0E00               	movlw	0
 11697  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 11698                           
 11699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11700  00017C  EF07  F001         	goto	l6668
 11701  000180                     l6642:
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 11705  000180  8057               	bsf	_flags^0,0,c
 11706  000182                     l6644:
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 11710  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11711  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11712  00018A  2ADE               	incf	postinc2,f,c
 11713  00018C  0E00               	movlw	0
 11714  00018E  22DD               	addwfc	postdec2,f,c
 11715                           
 11716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 11717  000190  EF07  F001         	goto	l6668
 11718  000194                     l6646:
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 11722  000194  8257               	bsf	_flags^0,1,c
 11723  000196  EFC1  F000         	goto	l6644
 11724  00019A                     l6650:
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 11728  00019A  8457               	bsf	_flags^0,2,c
 11729  00019C  EFC1  F000         	goto	l6644
 11730  0001A0                     l6654:
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 11734  0001A0  8657               	bsf	_flags^0,3,c
 11735  0001A2  EFC1  F000         	goto	l6644
 11736  0001A6                     l6658:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 11740  0001A6  8857               	bsf	_flags^0,4,c
 11741  0001A8  EFC1  F000         	goto	l6644
 11742  0001AC                     l6662:
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 11746  0001AC  0E00               	movlw	0
 11747  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11748  0001B0  0E01               	movlw	1
 11749  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 11750                           
 11751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 11752  0001B4  EF07  F001         	goto	l6668
 11753  0001B8                     l6666:
 11754                           
 11755                           ; BSR set to: 0
 11756  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11757  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11758  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
 11759  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
 11760  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11761  0001C8  6AF8               	clrf	tblptru,c
 11762  0001CA                     	endif
 11763  0001CA                     	if	0	;tblptru may be non-zero
 11764  0001CA                     	endif
 11765  0001CA  0008               	tblrd		*
 11766  0001CC  50F5               	movf	tablat,w,c
 11767  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
 11768  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 11769                           
 11770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11771                           ; Switch size 1, requested type "simple"
 11772                           ; Number of cases is 1, Range of values is 0 to 0
 11773                           ; switch strategies available:
 11774                           ; Name         Instructions Cycles
 11775                           ; simple_byte            4     3 (average)
 11776                           ;	Chosen strategy is simple_byte
 11777  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11778  0001D4  0A00               	xorlw	0	; case 0
 11779  0001D6  B4D8               	btfsc	status,2,c
 11780  0001D8  EFF0  F000         	goto	l7978
 11781  0001DC  EFD6  F000         	goto	l6662
 11782  0001E0                     l7978:
 11783                           
 11784                           ; BSR set to: 0
 11785                           ; Switch size 1, requested type "simple"
 11786                           ; Number of cases is 5, Range of values is 32 to 48
 11787                           ; switch strategies available:
 11788                           ; Name         Instructions Cycles
 11789                           ; simple_byte           16     9 (average)
 11790                           ;	Chosen strategy is simple_byte
 11791  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
 11792  0001E2  0A20               	xorlw	32	; case 32
 11793  0001E4  B4D8               	btfsc	status,2,c
 11794  0001E6  EFD0  F000         	goto	l6654
 11795  0001EA  0A03               	xorlw	3	; case 35
 11796  0001EC  B4D8               	btfsc	status,2,c
 11797  0001EE  EFD3  F000         	goto	l6658
 11798  0001F2  0A08               	xorlw	8	; case 43
 11799  0001F4  B4D8               	btfsc	status,2,c
 11800  0001F6  EFCD  F000         	goto	l6650
 11801  0001FA  0A06               	xorlw	6	; case 45
 11802  0001FC  B4D8               	btfsc	status,2,c
 11803  0001FE  EFC0  F000         	goto	l6642
 11804  000202  0A1D               	xorlw	29	; case 48
 11805  000204  B4D8               	btfsc	status,2,c
 11806  000206  EFCA  F000         	goto	l6646
 11807  00020A  EFD6  F000         	goto	l6662
 11808  00020E                     l6668:
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11812  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 11813  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 11814  000212  B4D8               	btfsc	status,2,c
 11815  000214  EF0E  F001         	goto	u6421
 11816  000218  EF10  F001         	goto	u6420
 11817  00021C                     u6421:
 11818  00021C  EFDC  F000         	goto	l6666
 11819  000220                     u6420:
 11820  000220                     
 11821                           ; BSR set to: 0
 11822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 11823  000220  A057               	btfss	_flags^0,0,c
 11824  000222  EF15  F001         	goto	u6431
 11825  000226  EF17  F001         	goto	u6430
 11826  00022A                     u6431:
 11827  00022A  EF18  F001         	goto	l6672
 11828  00022E                     u6430:
 11829  00022E                     
 11830                           ; BSR set to: 0
 11831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 11832  00022E  9257               	bcf	_flags^0,1,c
 11833  000230                     l6672:
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 11837  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11838  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11839  000238  CFDE FFF6          	movff	postinc2,tblptrl
 11840  00023C  CFDD FFF7          	movff	postdec2,tblptrh
 11841  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11842  000240  6AF8               	clrf	tblptru,c
 11843  000242                     	endif
 11844  000242                     	if	0	;tblptru may be non-zero
 11845  000242                     	endif
 11846  000242  0008               	tblrd		*
 11847  000244  50F5               	movf	tablat,w,c
 11848  000246  0A2A               	xorlw	42
 11849  000248  A4D8               	btfss	status,2,c
 11850  00024A  EF29  F001         	goto	u6441
 11851  00024E  EF2B  F001         	goto	u6440
 11852  000252                     u6441:
 11853  000252  EF54  F001         	goto	l6680
 11854  000256                     u6440:
 11855  000256                     
 11856                           ; BSR set to: 0
 11857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 11858  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11859  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11860  00025E  2ADE               	incf	postinc2,f,c
 11861  000260  0E00               	movlw	0
 11862  000262  22DD               	addwfc	postdec2,f,c
 11863                           
 11864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11865  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11866  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11867  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11868  000270  0E02               	movlw	2
 11869  000272  26DE               	addwf	postinc2,f,c
 11870  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11871  000278  0E00               	movlw	0
 11872  00027A  22DD               	addwfc	postdec2,f,c
 11873  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11874  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11875  000284  CFDE F0C9          	movff	postinc2,_width
 11876  000288  CFDD F0CA          	movff	postdec2,_width+1
 11877  00028C                     
 11878                           ; BSR set to: 0
 11879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 11880  00028C  BFCA               	btfsc	(_width+1)& (0+255),7,b
 11881  00028E  EF4D  F001         	goto	u6450
 11882  000292  EF4B  F001         	goto	u6451
 11883  000296                     u6451:
 11884  000296  EF99  F001         	goto	l6690
 11885  00029A                     u6450:
 11886  00029A                     
 11887                           ; BSR set to: 0
 11888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 11889  00029A  8057               	bsf	_flags^0,0,c
 11890                           
 11891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 11892  00029C  6DC9               	negf	_width& (0+255),b
 11893  00029E  1FCA               	comf	(_width+1)& (0+255),f,b
 11894  0002A0  B0D8               	btfsc	status,0,c
 11895  0002A2  2BCA               	incf	(_width+1)& (0+255),f,b
 11896  0002A4  EF99  F001         	goto	l6690
 11897  0002A8                     l6680:
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 11901  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11902  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11903  0002B0  CFDE F00C          	movff	postinc2,atoi@s
 11904  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
 11905  0002B8  ECD3  F00F         	call	_atoi	;wreg free
 11906  0002BC  C00C  F0C9         	movff	?_atoi,_width
 11907  0002C0  C00D  F0CA         	movff	?_atoi+1,_width+1
 11908                           
 11909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11910  0002C4  EF6B  F001         	goto	l6684
 11911  0002C8                     l6682:
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11915  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11916  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11917  0002D0  2ADE               	incf	postinc2,f,c
 11918  0002D2  0E00               	movlw	0
 11919  0002D4  22DD               	addwfc	postdec2,f,c
 11920  0002D6                     l6684:
 11921  0002D6  0ED0               	movlw	208
 11922  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
 11923  0002DA  0EFF               	movlw	255
 11924  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 11925  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11926  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11927  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
 11928  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
 11929  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11930  0002EE  6AF8               	clrf	tblptru,c
 11931  0002F0                     	endif
 11932  0002F0                     	if	0	;tblptru may be non-zero
 11933  0002F0                     	endif
 11934  0002F0  0008               	tblrd		*
 11935  0002F2  50F5               	movf	tablat,w,c
 11936  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 11937  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 11938  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
 11939  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11940  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11941  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11942  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 11943  000302  E10A               	bnz	u6460
 11944  000304  0E0A               	movlw	10
 11945  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11946  000308  A0D8               	btfss	status,0,c
 11947  00030A  EF89  F001         	goto	u6461
 11948  00030E  EF8C  F001         	goto	u6460
 11949  000312                     u6461:
 11950  000312  0E01               	movlw	1
 11951  000314  EF8D  F001         	goto	u6470
 11952  000318                     u6460:
 11953  000318  0E00               	movlw	0
 11954  00031A                     u6470:
 11955  00031A  0100               	movlb	0	; () banked
 11956  00031C  6F6D               	movwf	_vfpfcnvrt$1883& (0+255),b
 11957  00031E  6B6E               	clrf	(_vfpfcnvrt$1883+1)& (0+255),b
 11958  000320                     
 11959                           ; BSR set to: 0
 11960  000320  516D               	movf	_vfpfcnvrt$1883& (0+255),w,b
 11961  000322  116E               	iorwf	(_vfpfcnvrt$1883+1)& (0+255),w,b
 11962  000324  A4D8               	btfss	status,2,c
 11963  000326  EF97  F001         	goto	u6481
 11964  00032A  EF99  F001         	goto	u6480
 11965  00032E                     u6481:
 11966  00032E  EF64  F001         	goto	l6682
 11967  000332                     u6480:
 11968  000332                     l6690:
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11972  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11973  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11974  00033A  CFDE FFF6          	movff	postinc2,tblptrl
 11975  00033E  CFDD FFF7          	movff	postdec2,tblptrh
 11976  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11977  000342  6AF8               	clrf	tblptru,c
 11978  000344                     	endif
 11979  000344                     	if	0	;tblptru may be non-zero
 11980  000344                     	endif
 11981  000344  0008               	tblrd		*
 11982  000346  50F5               	movf	tablat,w,c
 11983  000348  0A64               	xorlw	100
 11984  00034A  B4D8               	btfsc	status,2,c
 11985  00034C  EFAA  F001         	goto	u6491
 11986  000350  EFAC  F001         	goto	u6490
 11987  000354                     u6491:
 11988  000354  EFBF  F001         	goto	l6694
 11989  000358                     u6490:
 11990  000358                     
 11991                           ; BSR set to: 0
 11992  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11993  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11994  000360  CFDE FFF6          	movff	postinc2,tblptrl
 11995  000364  CFDD FFF7          	movff	postdec2,tblptrh
 11996  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11997  000368  6AF8               	clrf	tblptru,c
 11998  00036A                     	endif
 11999  00036A                     	if	0	;tblptru may be non-zero
 12000  00036A                     	endif
 12001  00036A  0008               	tblrd		*
 12002  00036C  50F5               	movf	tablat,w,c
 12003  00036E  0A69               	xorlw	105
 12004  000370  A4D8               	btfss	status,2,c
 12005  000372  EFBD  F001         	goto	u6501
 12006  000376  EFBF  F001         	goto	u6500
 12007  00037A                     u6501:
 12008  00037A  EFFF  F001         	goto	l6700
 12009  00037E                     u6500:
 12010  00037E                     l6694:
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 12014  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12015  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12016  000386  2ADE               	incf	postinc2,f,c
 12017  000388  0E00               	movlw	0
 12018  00038A  22DD               	addwfc	postdec2,f,c
 12019                           
 12020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12021  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12022  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12023  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12024  000398  0E02               	movlw	2
 12025  00039A  26DE               	addwf	postinc2,f,c
 12026  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12027  0003A0  0E00               	movlw	0
 12028  0003A2  22DD               	addwfc	postdec2,f,c
 12029  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12030  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12031  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 12032  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 12033  0003B4  0E00               	movlw	0
 12034  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 12035  0003B8  0EFF               	movlw	-1
 12036  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 12037  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 12038  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 12039  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 12040  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 12041  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 12042  0003C6                     
 12043                           ; BSR set to: 0
 12044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 12045  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 12046  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12047  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 12048  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12049  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12050  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12051  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12052  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12053  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12054  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12055  0003EE  EC9D  F007         	call	_dtoa	;wreg free
 12056  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 12057  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12058  0003FA  EF59  F003         	goto	l1297
 12059  0003FE                     l6700:
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 12063  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12064  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12065  000406  CFDE FFF6          	movff	postinc2,tblptrl
 12066  00040A  CFDD FFF7          	movff	postdec2,tblptrh
 12067  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12068  00040E  6AF8               	clrf	tblptru,c
 12069  000410                     	endif
 12070  000410                     	if	0	;tblptru may be non-zero
 12071  000410                     	endif
 12072  000410  0008               	tblrd		*
 12073  000412  50F5               	movf	tablat,w,c
 12074  000414  0A73               	xorlw	115
 12075  000416  A4D8               	btfss	status,2,c
 12076  000418  EF10  F002         	goto	u6511
 12077  00041C  EF12  F002         	goto	u6510
 12078  000420                     u6511:
 12079  000420  EF3D  F002         	goto	l6708
 12080  000424                     u6510:
 12081  000424                     
 12082                           ; BSR set to: 0
 12083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 12084  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12085  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12086  00042C  2ADE               	incf	postinc2,f,c
 12087  00042E  0E00               	movlw	0
 12088  000430  22DD               	addwfc	postdec2,f,c
 12089                           
 12090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12091  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12092  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12093  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12094  00043E  0E02               	movlw	2
 12095  000440  26DE               	addwf	postinc2,f,c
 12096  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12097  000446  0E00               	movlw	0
 12098  000448  22DD               	addwfc	postdec2,f,c
 12099  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12100  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12101  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 12102  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 12103  00045A                     
 12104                           ; BSR set to: 0
 12105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 12106  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 12107  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 12108  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 12109  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 12110  00046A  EC06  F00F         	call	_stoa	;wreg free
 12111  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 12112  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 12113  000476  EF59  F003         	goto	l1297
 12114  00047A                     l6708:
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 12118  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12119  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12120  000482  CFDE FFF6          	movff	postinc2,tblptrl
 12121  000486  CFDD FFF7          	movff	postdec2,tblptrh
 12122  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12123  00048A  6AF8               	clrf	tblptru,c
 12124  00048C                     	endif
 12125  00048C                     	if	0	;tblptru may be non-zero
 12126  00048C                     	endif
 12127  00048C  0008               	tblrd		*
 12128  00048E  50F5               	movf	tablat,w,c
 12129  000490  0A75               	xorlw	117
 12130  000492  A4D8               	btfss	status,2,c
 12131  000494  EF4E  F002         	goto	u6521
 12132  000498  EF50  F002         	goto	u6520
 12133  00049C                     u6521:
 12134  00049C  EF91  F002         	goto	l6716
 12135  0004A0                     u6520:
 12136  0004A0                     
 12137                           ; BSR set to: 0
 12138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 12139  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12140  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12141  0004A8  2ADE               	incf	postinc2,f,c
 12142  0004AA  0E00               	movlw	0
 12143  0004AC  22DD               	addwfc	postdec2,f,c
 12144                           
 12145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 12146  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12147  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12148  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12149  0004BA  0E02               	movlw	2
 12150  0004BC  26DE               	addwf	postinc2,f,c
 12151  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12152  0004C2  0E00               	movlw	0
 12153  0004C4  22DD               	addwfc	postdec2,f,c
 12154  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12155  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12156  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12157  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12158  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12159  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12160  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 12161  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 12162  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 12163  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 12164  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 12165  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 12166  0004EA                     
 12167                           ; BSR set to: 0
 12168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 12169  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12170  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12171  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 12172  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12173  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12174  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12175  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12176  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12177  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12178  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12179  000512  EC78  F00A         	call	_utoa	;wreg free
 12180  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12181  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12182  00051E  EF59  F003         	goto	l1297
 12183  000522                     l6716:
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 12187  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12188  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12189  00052A  CFDE FFF6          	movff	postinc2,tblptrl
 12190  00052E  CFDD FFF7          	movff	postdec2,tblptrh
 12191  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12192  000532  6AF8               	clrf	tblptru,c
 12193  000534                     	endif
 12194  000534                     	if	0	;tblptru may be non-zero
 12195  000534                     	endif
 12196  000534  0008               	tblrd		*
 12197  000536  50F5               	movf	tablat,w,c
 12198  000538  0A78               	xorlw	120
 12199  00053A  B4D8               	btfsc	status,2,c
 12200  00053C  EFA2  F002         	goto	u6531
 12201  000540  EFA4  F002         	goto	u6530
 12202  000544                     u6531:
 12203  000544  EFB7  F002         	goto	l6720
 12204  000548                     u6530:
 12205  000548                     
 12206                           ; BSR set to: 0
 12207  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12208  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12209  000550  CFDE FFF6          	movff	postinc2,tblptrl
 12210  000554  CFDD FFF7          	movff	postdec2,tblptrh
 12211  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12212  000558  6AF8               	clrf	tblptru,c
 12213  00055A                     	endif
 12214  00055A                     	if	0	;tblptru may be non-zero
 12215  00055A                     	endif
 12216  00055A  0008               	tblrd		*
 12217  00055C  50F5               	movf	tablat,w,c
 12218  00055E  0A58               	xorlw	88
 12219  000560  A4D8               	btfss	status,2,c
 12220  000562  EFB5  F002         	goto	u6541
 12221  000566  EFB7  F002         	goto	u6540
 12222  00056A                     u6541:
 12223  00056A  EF06  F003         	goto	l6730
 12224  00056E                     u6540:
 12225  00056E                     l6720:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 12229  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12230  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12231  000576  CFDE FFF6          	movff	postinc2,tblptrl
 12232  00057A  CFDD FFF7          	movff	postdec2,tblptrh
 12233  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12234  00057E  6AF8               	clrf	tblptru,c
 12235  000580                     	endif
 12236  000580                     	if	0	;tblptru may be non-zero
 12237  000580                     	endif
 12238  000580  0008               	tblrd		*
 12239  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 12240  000586                     
 12241                           ; BSR set to: 0
 12242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 12243  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12244  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12245  00058E  2ADE               	incf	postinc2,f,c
 12246  000590  0E00               	movlw	0
 12247  000592  22DD               	addwfc	postdec2,f,c
 12248  000594                     
 12249                           ; BSR set to: 0
 12250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 12251  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12252  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12253  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12254  0005A0  0E02               	movlw	2
 12255  0005A2  26DE               	addwf	postinc2,f,c
 12256  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12257  0005A8  0E00               	movlw	0
 12258  0005AA  22DD               	addwfc	postdec2,f,c
 12259  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12260  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12261  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12262  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12263  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12264  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12265  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 12266  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 12267  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 12268  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 12269  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 12270  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 12271  0005D0                     
 12272                           ; BSR set to: 0
 12273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 12274  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12275  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12276  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12277  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12278  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12279  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12280  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12281  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12282  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12283  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12284  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12285  0005FC  EC0D  F009         	call	_xtoa	;wreg free
 12286  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12287  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12288  000608  EF59  F003         	goto	l1297
 12289  00060C                     l6730:
 12290                           
 12291                           ; BSR set to: 0
 12292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 12293  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12294  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12295  000614  CFDE FFF6          	movff	postinc2,tblptrl
 12296  000618  CFDD FFF7          	movff	postdec2,tblptrh
 12297  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12298  00061C  6AF8               	clrf	tblptru,c
 12299  00061E                     	endif
 12300  00061E                     	if	0	;tblptru may be non-zero
 12301  00061E                     	endif
 12302  00061E  0008               	tblrd		*
 12303  000620  50F5               	movf	tablat,w,c
 12304  000622  0A25               	xorlw	37
 12305  000624  A4D8               	btfss	status,2,c
 12306  000626  EF17  F003         	goto	u6551
 12307  00062A  EF19  F003         	goto	u6550
 12308  00062E                     u6551:
 12309  00062E  EF30  F003         	goto	l6740
 12310  000632                     u6550:
 12311  000632                     
 12312                           ; BSR set to: 0
 12313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 12314  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12315  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12316  00063A  2ADE               	incf	postinc2,f,c
 12317  00063C  0E00               	movlw	0
 12318  00063E  22DD               	addwfc	postdec2,f,c
 12319  000640                     
 12320                           ; BSR set to: 0
 12321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 12322  000640  0E00               	movlw	0
 12323  000642  6E08               	movwf	(fputc@c+1)^0,c
 12324  000644  0E25               	movlw	37
 12325  000646  6E07               	movwf	fputc@c^0,c
 12326  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12327  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12328  000650  ECF3  F019         	call	_fputc	;wreg free
 12329  000654                     l6736:
 12330                           
 12331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 12332  000654  0E00               	movlw	0
 12333  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12334  000658  0E01               	movlw	1
 12335  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
 12336  00065C  EF59  F003         	goto	l1297
 12337  000660                     l6740:
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 12341  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12342  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12343  000668  2ADE               	incf	postinc2,f,c
 12344  00066A  0E00               	movlw	0
 12345  00066C  22DD               	addwfc	postdec2,f,c
 12346  00066E                     
 12347                           ; BSR set to: 0
 12348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 12349  00066E  0E00               	movlw	0
 12350  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12351  000672  0E00               	movlw	0
 12352  000674  6E49               	movwf	?_vfpfcnvrt^0,c
 12353  000676  EF59  F003         	goto	l1297
 12354  00067A                     l6746:
 12355                           
 12356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 12357  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12358  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12359  000682  CFDE FFF6          	movff	postinc2,tblptrl
 12360  000686  CFDD FFF7          	movff	postdec2,tblptrh
 12361  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12362  00068A  6AF8               	clrf	tblptru,c
 12363  00068C                     	endif
 12364  00068C                     	if	0	;tblptru may be non-zero
 12365  00068C                     	endif
 12366  00068C  0008               	tblrd		*
 12367  00068E  50F5               	movf	tablat,w,c
 12368  000690  6E07               	movwf	fputc@c^0,c
 12369  000692  6A08               	clrf	(fputc@c+1)^0,c
 12370  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12371  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12372  00069C  ECF3  F019         	call	_fputc	;wreg free
 12373  0006A0                     
 12374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 12375  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12376  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12377  0006A8  2ADE               	incf	postinc2,f,c
 12378  0006AA  0E00               	movlw	0
 12379  0006AC  22DD               	addwfc	postdec2,f,c
 12380  0006AE  EF2A  F003         	goto	l6736
 12381  0006B2                     l1297:
 12382  0006B2  0012               	return		;funcret
 12383  0006B4                     __end_of_vfpfcnvrt:
 12384                           	opt callstack 0
 12385                           
 12386 ;; *************** function _xtoa *****************
 12387 ;; Defined at:
 12388 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12391 ;;		 -> NULL(0), 
 12392 ;;  d               8   35[COMRAM] unsigned long long 
 12393 ;;  x               1   43[COMRAM] unsigned char 
 12394 ;; Auto vars:     Size  Location     Type
 12395 ;;  n               8   60[COMRAM] unsigned long long 
 12396 ;;  c               2   70[COMRAM] int 
 12397 ;;  i               2   68[COMRAM] int 
 12398 ;;  w               2   58[COMRAM] int 
 12399 ;;  p               2   56[COMRAM] int 
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  2   33[COMRAM] int 
 12402 ;; Registers used:
 12403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12404 ;; Tracked objects:
 12405 ;;		On entry : 0/0
 12406 ;;		On exit  : 0/0
 12407 ;;		Unchanged: 0/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12409 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12410 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12412 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12413 ;;Total ram usage:       39 bytes
 12414 ;; Hardware stack levels used:    1
 12415 ;; Hardware stack levels required when called:    9
 12416 ;; This function calls:
 12417 ;;		_isalpha
 12418 ;;		_isupper
 12419 ;;		_pad
 12420 ;;		_toupper
 12421 ;; This function is called by:
 12422 ;;		_vfpfcnvrt
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           	psect	text58
 12427  00121A                     __ptext58:
 12428                           	opt callstack 0
 12429  00121A                     _xtoa:
 12430                           	opt callstack 18
 12431  00121A                     
 12432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 12433  00121A  0100               	movlb	0	; () banked
 12434  00121C  BFCC               	btfsc	(_prec+1)& (0+255),7,b
 12435  00121E  EF13  F009         	goto	u6171
 12436  001222  EF15  F009         	goto	u6170
 12437  001226                     u6171:
 12438  001226  EF16  F009         	goto	l6528
 12439  00122A                     u6170:
 12440  00122A                     
 12441                           ; BSR set to: 0
 12442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 12443  00122A  9257               	bcf	_flags^0,1,c
 12444  00122C                     l6528:
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 12448  00122C  BFCC               	btfsc	(_prec+1)& (0+255),7,b
 12449  00122E  EF23  F009         	goto	u6180
 12450  001232  51CC               	movf	(_prec+1)& (0+255),w,b
 12451  001234  E106               	bnz	u6181
 12452  001236  05CB               	decf	_prec& (0+255),w,b
 12453  001238  B0D8               	btfsc	status,0,c
 12454  00123A  EF21  F009         	goto	u6181
 12455  00123E  EF23  F009         	goto	u6180
 12456  001242                     u6181:
 12457  001242  EF29  F009         	goto	l1243
 12458  001246                     u6180:
 12459  001246                     
 12460                           ; BSR set to: 0
 12461  001246  0E00               	movlw	0
 12462  001248  6E3A               	movwf	(xtoa@p+1)^0,c
 12463  00124A  0E01               	movlw	1
 12464  00124C  6E39               	movwf	xtoa@p^0,c
 12465  00124E  EF2D  F009         	goto	l1245
 12466  001252                     l1243:
 12467                           
 12468                           ; BSR set to: 0
 12469  001252  C0CB  F039         	movff	_prec,xtoa@p
 12470  001256  C0CC  F03A         	movff	_prec+1,xtoa@p+1
 12471  00125A                     l1245:
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 12475  00125A  C0C9  F03B         	movff	_width,xtoa@w
 12476  00125E  C0CA  F03C         	movff	_width+1,xtoa@w+1
 12477                           
 12478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 12479  001262  A857               	btfss	_flags^0,4,c
 12480  001264  EF36  F009         	goto	u6191
 12481  001268  EF38  F009         	goto	u6190
 12482  00126C                     u6191:
 12483  00126C  EF3C  F009         	goto	l6534
 12484  001270                     u6190:
 12485  001270                     
 12486                           ; BSR set to: 0
 12487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 12488  001270  0EFE               	movlw	254
 12489  001272  263B               	addwf	xtoa@w^0,f,c
 12490  001274  0EFF               	movlw	255
 12491  001276  223C               	addwfc	(xtoa@w+1)^0,f,c
 12492  001278                     l6534:
 12493                           
 12494                           ; BSR set to: 0
 12495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 12496  001278  C024  F03D         	movff	xtoa@d,xtoa@n
 12497  00127C  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 12498  001280  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 12499  001284  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 12500  001288  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 12501  00128C  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 12502  001290  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 12503  001294  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 12504  001298                     
 12505                           ; BSR set to: 0
 12506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 12507  001298  0E00               	movlw	0
 12508  00129A  6E46               	movwf	(xtoa@i+1)^0,c
 12509  00129C  0E1F               	movlw	31
 12510  00129E  6E45               	movwf	xtoa@i^0,c
 12511  0012A0                     
 12512                           ; BSR set to: 0
 12513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 12514  0012A0  0E00               	movlw	0
 12515  0012A2  0101               	movlb	1	; () banked
 12516  0012A4  6FA3               	movwf	(_dbuf+31)& (0+255),b
 12517                           
 12518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12519  0012A6  EF08  F00A         	goto	l6570
 12520  0012AA                     l6540:
 12521                           
 12522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 12523  0012AA  0645               	decf	xtoa@i^0,f,c
 12524  0012AC  A0D8               	btfss	status,0,c
 12525  0012AE  0646               	decf	(xtoa@i+1)^0,f,c
 12526  0012B0                     
 12527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 12528  0012B0  0E0F               	movlw	15
 12529  0012B2  143D               	andwf	xtoa@n^0,w,c
 12530  0012B4  6E47               	movwf	xtoa@c^0,c
 12531  0012B6  6A48               	clrf	(xtoa@c+1)^0,c
 12532  0012B8                     
 12533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 12534  0012B8  BE48               	btfsc	(xtoa@c+1)^0,7,c
 12535  0012BA  EF68  F009         	goto	u6201
 12536  0012BE  5048               	movf	(xtoa@c+1)^0,w,c
 12537  0012C0  E109               	bnz	u6200
 12538  0012C2  0E0A               	movlw	10
 12539  0012C4  5C47               	subwf	xtoa@c^0,w,c
 12540  0012C6  A0D8               	btfss	status,0,c
 12541  0012C8  EF68  F009         	goto	u6201
 12542  0012CC  EF6A  F009         	goto	u6200
 12543  0012D0                     u6201:
 12544  0012D0  EF72  F009         	goto	l6548
 12545  0012D4                     u6200:
 12546  0012D4  0E57               	movlw	87
 12547  0012D6  2447               	addwf	xtoa@c^0,w,c
 12548  0012D8  6E47               	movwf	xtoa@c^0,c
 12549  0012DA  0E00               	movlw	0
 12550  0012DC  2048               	addwfc	(xtoa@c+1)^0,w,c
 12551  0012DE  6E48               	movwf	(xtoa@c+1)^0,c
 12552  0012E0  EF78  F009         	goto	l1252
 12553  0012E4                     l6548:
 12554  0012E4  0E30               	movlw	48
 12555  0012E6  2447               	addwf	xtoa@c^0,w,c
 12556  0012E8  6E47               	movwf	xtoa@c^0,c
 12557  0012EA  0E00               	movlw	0
 12558  0012EC  2048               	addwfc	(xtoa@c+1)^0,w,c
 12559  0012EE  6E48               	movwf	(xtoa@c+1)^0,c
 12560  0012F0                     l1252:
 12561  0012F0  0EBF               	movlw	191
 12562  0012F2  6E2D               	movwf	??_xtoa^0,c
 12563  0012F4  0EFF               	movlw	255
 12564  0012F6  6E2E               	movwf	(??_xtoa+1)^0,c
 12565  0012F8  502C               	movf	xtoa@x^0,w,c
 12566  0012FA  6E2F               	movwf	(??_xtoa+2)^0,c
 12567  0012FC  6A30               	clrf	(??_xtoa+3)^0,c
 12568  0012FE  502D               	movf	??_xtoa^0,w,c
 12569  001300  262F               	addwf	(??_xtoa+2)^0,f,c
 12570  001302  502E               	movf	(??_xtoa+1)^0,w,c
 12571  001304  2230               	addwfc	(??_xtoa+3)^0,f,c
 12572  001306  5030               	movf	(??_xtoa+3)^0,w,c
 12573  001308  E10A               	bnz	u6210
 12574  00130A  0E1A               	movlw	26
 12575  00130C  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12576  00130E  A0D8               	btfss	status,0,c
 12577  001310  EF8C  F009         	goto	u6211
 12578  001314  EF8F  F009         	goto	u6210
 12579  001318                     u6211:
 12580  001318  0E01               	movlw	1
 12581  00131A  EF90  F009         	goto	u6220
 12582  00131E                     u6210:
 12583  00131E  0E00               	movlw	0
 12584  001320                     u6220:
 12585  001320  6E35               	movwf	_xtoa$1868^0,c
 12586  001322  6A36               	clrf	(_xtoa$1868+1)^0,c
 12587  001324  5035               	movf	_xtoa$1868^0,w,c
 12588  001326  1036               	iorwf	(_xtoa$1868+1)^0,w,c
 12589  001328  B4D8               	btfsc	status,2,c
 12590  00132A  EF99  F009         	goto	u6231
 12591  00132E  EF9B  F009         	goto	u6230
 12592  001332                     u6231:
 12593  001332  EFCB  F009         	goto	l6562
 12594  001336                     u6230:
 12595  001336  0E9F               	movlw	159
 12596  001338  6E2D               	movwf	??_xtoa^0,c
 12597  00133A  0EFF               	movlw	255
 12598  00133C  6E2E               	movwf	(??_xtoa+1)^0,c
 12599  00133E  0E20               	movlw	32
 12600  001340  1047               	iorwf	xtoa@c^0,w,c
 12601  001342  6E2F               	movwf	(??_xtoa+2)^0,c
 12602  001344  0E00               	movlw	0
 12603  001346  1048               	iorwf	(xtoa@c+1)^0,w,c
 12604  001348  6E30               	movwf	(??_xtoa+3)^0,c
 12605  00134A  502D               	movf	??_xtoa^0,w,c
 12606  00134C  262F               	addwf	(??_xtoa+2)^0,f,c
 12607  00134E  502E               	movf	(??_xtoa+1)^0,w,c
 12608  001350  2230               	addwfc	(??_xtoa+3)^0,f,c
 12609  001352  5030               	movf	(??_xtoa+3)^0,w,c
 12610  001354  E10A               	bnz	u6240
 12611  001356  0E1A               	movlw	26
 12612  001358  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12613  00135A  A0D8               	btfss	status,0,c
 12614  00135C  EFB2  F009         	goto	u6241
 12615  001360  EFB5  F009         	goto	u6240
 12616  001364                     u6241:
 12617  001364  0E01               	movlw	1
 12618  001366  EFB6  F009         	goto	u6250
 12619  00136A                     u6240:
 12620  00136A  0E00               	movlw	0
 12621  00136C                     u6250:
 12622  00136C  6E37               	movwf	_xtoa$1869^0,c
 12623  00136E  6A38               	clrf	(_xtoa$1869+1)^0,c
 12624  001370  5037               	movf	_xtoa$1869^0,w,c
 12625  001372  1038               	iorwf	(_xtoa$1869+1)^0,w,c
 12626  001374  B4D8               	btfsc	status,2,c
 12627  001376  EFBF  F009         	goto	u6261
 12628  00137A  EFC1  F009         	goto	u6260
 12629  00137E                     u6261:
 12630  00137E  EFCB  F009         	goto	l6562
 12631  001382                     u6260:
 12632  001382                     
 12633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 12634  001382  C047  F00B         	movff	xtoa@c,toupper@c
 12635  001386  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 12636  00138A  EC3B  F01C         	call	_toupper	;wreg free
 12637  00138E  C00B  F047         	movff	?_toupper,xtoa@c
 12638  001392  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 12639  001396                     l6562:
 12640                           
 12641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 12642  001396  0E84               	movlw	low _dbuf
 12643  001398  2445               	addwf	xtoa@i^0,w,c
 12644  00139A  6ED9               	movwf	fsr2l,c
 12645  00139C  0E01               	movlw	high _dbuf
 12646  00139E  2046               	addwfc	(xtoa@i+1)^0,w,c
 12647  0013A0  6EDA               	movwf	fsr2h,c
 12648  0013A2  C047  FFDF         	movff	xtoa@c,indf2
 12649  0013A6                     
 12650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 12651  0013A6  0639               	decf	xtoa@p^0,f,c
 12652  0013A8  A0D8               	btfss	status,0,c
 12653  0013AA  063A               	decf	(xtoa@p+1)^0,f,c
 12654  0013AC                     
 12655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 12656  0013AC  063B               	decf	xtoa@w^0,f,c
 12657  0013AE  A0D8               	btfss	status,0,c
 12658  0013B0  063C               	decf	(xtoa@w+1)^0,f,c
 12659  0013B2                     
 12660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 12661  0013B2  C03D  F02D         	movff	xtoa@n,??_xtoa
 12662  0013B6  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 12663  0013BA  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 12664  0013BE  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 12665  0013C2  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 12666  0013C6  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 12667  0013CA  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 12668  0013CE  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 12669  0013D2  0E05               	movlw	5
 12670  0013D4  EFF5  F009         	goto	u6270
 12671  0013D8                     u6275:
 12672  0013D8  90D8               	bcf	status,0,c
 12673  0013DA  3234               	rrcf	(??_xtoa+7)^0,f,c
 12674  0013DC  3233               	rrcf	(??_xtoa+6)^0,f,c
 12675  0013DE  3232               	rrcf	(??_xtoa+5)^0,f,c
 12676  0013E0  3231               	rrcf	(??_xtoa+4)^0,f,c
 12677  0013E2  3230               	rrcf	(??_xtoa+3)^0,f,c
 12678  0013E4  322F               	rrcf	(??_xtoa+2)^0,f,c
 12679  0013E6  322E               	rrcf	(??_xtoa+1)^0,f,c
 12680  0013E8  322D               	rrcf	??_xtoa^0,f,c
 12681  0013EA                     u6270:
 12682  0013EA  2EE8               	decfsz	wreg,f,c
 12683  0013EC  EFEC  F009         	goto	u6275
 12684  0013F0  C02D  F03D         	movff	??_xtoa,xtoa@n
 12685  0013F4  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 12686  0013F8  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 12687  0013FC  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 12688  001400  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 12689  001404  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 12690  001408  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 12691  00140C  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 12692  001410                     l6570:
 12693                           
 12694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12695  001410  BE46               	btfsc	(xtoa@i+1)^0,7,c
 12696  001412  EF14  F00A         	goto	u6281
 12697  001416  5046               	movf	(xtoa@i+1)^0,w,c
 12698  001418  E109               	bnz	u6280
 12699  00141A  0E02               	movlw	2
 12700  00141C  5C45               	subwf	xtoa@i^0,w,c
 12701  00141E  A0D8               	btfss	status,0,c
 12702  001420  EF14  F00A         	goto	u6281
 12703  001424  EF16  F00A         	goto	u6280
 12704  001428                     u6281:
 12705  001428  EF46  F00A         	goto	l1266
 12706  00142C                     u6280:
 12707  00142C  503D               	movf	xtoa@n^0,w,c
 12708  00142E  103E               	iorwf	(xtoa@n+1)^0,w,c
 12709  001430  103F               	iorwf	(xtoa@n+2)^0,w,c
 12710  001432  1040               	iorwf	(xtoa@n+3)^0,w,c
 12711  001434  1041               	iorwf	(xtoa@n+4)^0,w,c
 12712  001436  1042               	iorwf	(xtoa@n+5)^0,w,c
 12713  001438  1043               	iorwf	(xtoa@n+6)^0,w,c
 12714  00143A  1044               	iorwf	(xtoa@n+7)^0,w,c
 12715  00143C  A4D8               	btfss	status,2,c
 12716  00143E  EF23  F00A         	goto	u6291
 12717  001442  EF25  F00A         	goto	u6290
 12718  001446                     u6291:
 12719  001446  EF55  F009         	goto	l6540
 12720  00144A                     u6290:
 12721  00144A  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 12722  00144C  EF32  F00A         	goto	u6300
 12723  001450  503A               	movf	(xtoa@p+1)^0,w,c
 12724  001452  E106               	bnz	u6301
 12725  001454  0439               	decf	xtoa@p^0,w,c
 12726  001456  B0D8               	btfsc	status,0,c
 12727  001458  EF30  F00A         	goto	u6301
 12728  00145C  EF32  F00A         	goto	u6300
 12729  001460                     u6301:
 12730  001460  EF55  F009         	goto	l6540
 12731  001464                     u6300:
 12732  001464  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 12733  001466  EF3D  F00A         	goto	u6311
 12734  00146A  503C               	movf	(xtoa@w+1)^0,w,c
 12735  00146C  E108               	bnz	u6310
 12736  00146E  043B               	decf	xtoa@w^0,w,c
 12737  001470  A0D8               	btfss	status,0,c
 12738  001472  EF3D  F00A         	goto	u6311
 12739  001476  EF3F  F00A         	goto	u6310
 12740  00147A                     u6311:
 12741  00147A  EF46  F00A         	goto	l1266
 12742  00147E                     u6310:
 12743  00147E  B257               	btfsc	_flags^0,1,c
 12744  001480  EF44  F00A         	goto	u6321
 12745  001484  EF46  F00A         	goto	u6320
 12746  001488                     u6321:
 12747  001488  EF55  F009         	goto	l6540
 12748  00148C                     u6320:
 12749  00148C                     l1266:
 12750                           
 12751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 12752  00148C  A857               	btfss	_flags^0,4,c
 12753  00148E  EF4B  F00A         	goto	u6331
 12754  001492  EF4D  F00A         	goto	u6330
 12755  001496                     u6331:
 12756  001496  EF63  F00A         	goto	l6586
 12757  00149A                     u6330:
 12758  00149A                     
 12759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 12760  00149A  0645               	decf	xtoa@i^0,f,c
 12761  00149C  A0D8               	btfss	status,0,c
 12762  00149E  0646               	decf	(xtoa@i+1)^0,f,c
 12763  0014A0                     
 12764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 12765  0014A0  0E84               	movlw	low _dbuf
 12766  0014A2  2445               	addwf	xtoa@i^0,w,c
 12767  0014A4  6ED9               	movwf	fsr2l,c
 12768  0014A6  0E01               	movlw	high _dbuf
 12769  0014A8  2046               	addwfc	(xtoa@i+1)^0,w,c
 12770  0014AA  6EDA               	movwf	fsr2h,c
 12771  0014AC  C02C  FFDF         	movff	xtoa@x,indf2
 12772  0014B0                     
 12773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 12774  0014B0  0645               	decf	xtoa@i^0,f,c
 12775  0014B2  A0D8               	btfss	status,0,c
 12776  0014B4  0646               	decf	(xtoa@i+1)^0,f,c
 12777                           
 12778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 12779  0014B6  0E84               	movlw	low _dbuf
 12780  0014B8  2445               	addwf	xtoa@i^0,w,c
 12781  0014BA  6ED9               	movwf	fsr2l,c
 12782  0014BC  0E01               	movlw	high _dbuf
 12783  0014BE  2046               	addwfc	(xtoa@i+1)^0,w,c
 12784  0014C0  6EDA               	movwf	fsr2h,c
 12785  0014C2  0E30               	movlw	48
 12786  0014C4  6EDF               	movwf	indf2,c
 12787  0014C6                     l6586:
 12788                           
 12789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 12790  0014C6  C022  F017         	movff	xtoa@fp,pad@fp
 12791  0014CA  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 12792  0014CE  0E84               	movlw	low _dbuf
 12793  0014D0  2445               	addwf	xtoa@i^0,w,c
 12794  0014D2  6E19               	movwf	pad@buf^0,c
 12795  0014D4  0E01               	movlw	high _dbuf
 12796  0014D6  2046               	addwfc	(xtoa@i+1)^0,w,c
 12797  0014D8  6E1A               	movwf	(pad@buf+1)^0,c
 12798  0014DA  C03B  F01B         	movff	xtoa@w,pad@p
 12799  0014DE  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 12800  0014E2  EC1E  F018         	call	_pad	;wreg free
 12801  0014E6  C017  F022         	movff	?_pad,?_xtoa
 12802  0014EA  C018  F023         	movff	?_pad+1,?_xtoa+1
 12803  0014EE  0012               	return		;funcret
 12804  0014F0                     __end_of_xtoa:
 12805                           	opt callstack 0
 12806                           
 12807 ;; *************** function _toupper *****************
 12808 ;; Defined at:
 12809 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 12810 ;; Parameters:    Size  Location     Type
 12811 ;;  c               2   10[COMRAM] int 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;		None
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  2   10[COMRAM] int 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12825 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12826 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12827 ;;Total ram usage:        8 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    5
 12830 ;; This function calls:
 12831 ;;		_islower
 12832 ;; This function is called by:
 12833 ;;		_xtoa
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text59
 12838  003876                     __ptext59:
 12839                           	opt callstack 0
 12840  003876                     _toupper:
 12841                           	opt callstack 21
 12842  003876  0E9F               	movlw	159
 12843  003878  6E0D               	movwf	??_toupper^0,c
 12844  00387A  0EFF               	movlw	255
 12845  00387C  6E0E               	movwf	(??_toupper+1)^0,c
 12846  00387E  C00B  F00F         	movff	toupper@c,??_toupper+2
 12847  003882  C00C  F010         	movff	toupper@c+1,??_toupper+3
 12848  003886  500D               	movf	??_toupper^0,w,c
 12849  003888  260F               	addwf	(??_toupper+2)^0,f,c
 12850  00388A  500E               	movf	(??_toupper+1)^0,w,c
 12851  00388C  2210               	addwfc	(??_toupper+3)^0,f,c
 12852  00388E  5010               	movf	(??_toupper+3)^0,w,c
 12853  003890  E10A               	bnz	u5580
 12854  003892  0E1A               	movlw	26
 12855  003894  5C0F               	subwf	(??_toupper+2)^0,w,c
 12856  003896  A0D8               	btfss	status,0,c
 12857  003898  EF50  F01C         	goto	u5581
 12858  00389C  EF53  F01C         	goto	u5580
 12859  0038A0                     u5581:
 12860  0038A0  0E01               	movlw	1
 12861  0038A2  EF54  F01C         	goto	u5590
 12862  0038A6                     u5580:
 12863  0038A6  0E00               	movlw	0
 12864  0038A8                     u5590:
 12865  0038A8  6E11               	movwf	_toupper$2457^0,c
 12866  0038AA  6A12               	clrf	(_toupper$2457+1)^0,c
 12867  0038AC  5011               	movf	_toupper$2457^0,w,c
 12868  0038AE  1012               	iorwf	(_toupper$2457+1)^0,w,c
 12869  0038B0  B4D8               	btfsc	status,2,c
 12870  0038B2  EF5D  F01C         	goto	u5601
 12871  0038B6  EF5F  F01C         	goto	u5600
 12872  0038BA                     u5601:
 12873  0038BA  EF65  F01C         	goto	l2116
 12874  0038BE                     u5600:
 12875  0038BE  0E5F               	movlw	95
 12876  0038C0  140B               	andwf	toupper@c^0,w,c
 12877  0038C2  6E0B               	movwf	?_toupper^0,c
 12878  0038C4  6A0C               	clrf	(?_toupper+1)^0,c
 12879  0038C6  EF69  F01C         	goto	l2121
 12880  0038CA                     l2116:
 12881  0038CA  C00B  F00B         	movff	toupper@c,?_toupper
 12882  0038CE  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 12883  0038D2                     l2121:
 12884  0038D2  0012               	return		;funcret
 12885  0038D4                     __end_of_toupper:
 12886                           	opt callstack 0
 12887                           
 12888 ;; *************** function _islower *****************
 12889 ;; Defined at:
 12890 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;  c               2    4[COMRAM] int 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  2    4[COMRAM] int 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;Total ram usage:        6 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    4
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_toupper
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text60
 12919  003EA4                     __ptext60:
 12920                           	opt callstack 0
 12921  003EA4                     _islower:
 12922                           	opt callstack 21
 12923  003EA4  0E9F               	movlw	159
 12924  003EA6  6E07               	movwf	??_islower^0,c
 12925  003EA8  0EFF               	movlw	255
 12926  003EAA  6E08               	movwf	(??_islower+1)^0,c
 12927  003EAC  C005  F009         	movff	islower@c,??_islower+2
 12928  003EB0  C006  F00A         	movff	islower@c+1,??_islower+3
 12929  003EB4  5007               	movf	??_islower^0,w,c
 12930  003EB6  2609               	addwf	(??_islower+2)^0,f,c
 12931  003EB8  5008               	movf	(??_islower+1)^0,w,c
 12932  003EBA  220A               	addwfc	(??_islower+3)^0,f,c
 12933  003EBC  500A               	movf	(??_islower+3)^0,w,c
 12934  003EBE  E10A               	bnz	u5470
 12935  003EC0  0E1A               	movlw	26
 12936  003EC2  5C09               	subwf	(??_islower+2)^0,w,c
 12937  003EC4  A0D8               	btfss	status,0,c
 12938  003EC6  EF67  F01F         	goto	u5471
 12939  003ECA  EF6A  F01F         	goto	u5470
 12940  003ECE                     u5471:
 12941  003ECE  0E01               	movlw	1
 12942  003ED0  EF6B  F01F         	goto	u5480
 12943  003ED4                     u5470:
 12944  003ED4  0E00               	movlw	0
 12945  003ED6                     u5480:
 12946  003ED6  6E05               	movwf	?_islower^0,c
 12947  003ED8  6A06               	clrf	(?_islower+1)^0,c
 12948  003EDA  0012               	return		;funcret
 12949  003EDC                     __end_of_islower:
 12950                           	opt callstack 0
 12951                           
 12952 ;; *************** function _isupper *****************
 12953 ;; Defined at:
 12954 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  c               2    4[COMRAM] int 
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;		None
 12959 ;; Return value:  Size  Location     Type
 12960 ;;                  2    4[COMRAM] int 
 12961 ;; Registers used:
 12962 ;;		wreg, status,2, status,0
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12970 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12972 ;;Total ram usage:        6 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; Hardware stack levels required when called:    4
 12975 ;; This function calls:
 12976 ;;		Nothing
 12977 ;; This function is called by:
 12978 ;;		_xtoa
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           	psect	text61
 12983  003EDC                     __ptext61:
 12984                           	opt callstack 0
 12985  003EDC                     _isupper:
 12986                           	opt callstack 22
 12987  003EDC  0EBF               	movlw	191
 12988  003EDE  6E07               	movwf	??_isupper^0,c
 12989  003EE0  0EFF               	movlw	255
 12990  003EE2  6E08               	movwf	(??_isupper+1)^0,c
 12991  003EE4  C005  F009         	movff	isupper@c,??_isupper+2
 12992  003EE8  C006  F00A         	movff	isupper@c+1,??_isupper+3
 12993  003EEC  5007               	movf	??_isupper^0,w,c
 12994  003EEE  2609               	addwf	(??_isupper+2)^0,f,c
 12995  003EF0  5008               	movf	(??_isupper+1)^0,w,c
 12996  003EF2  220A               	addwfc	(??_isupper+3)^0,f,c
 12997  003EF4  500A               	movf	(??_isupper+3)^0,w,c
 12998  003EF6  E10A               	bnz	u5540
 12999  003EF8  0E1A               	movlw	26
 13000  003EFA  5C09               	subwf	(??_isupper+2)^0,w,c
 13001  003EFC  A0D8               	btfss	status,0,c
 13002  003EFE  EF83  F01F         	goto	u5541
 13003  003F02  EF86  F01F         	goto	u5540
 13004  003F06                     u5541:
 13005  003F06  0E01               	movlw	1
 13006  003F08  EF87  F01F         	goto	u5550
 13007  003F0C                     u5540:
 13008  003F0C  0E00               	movlw	0
 13009  003F0E                     u5550:
 13010  003F0E  6E05               	movwf	?_isupper^0,c
 13011  003F10  6A06               	clrf	(?_isupper+1)^0,c
 13012  003F12  0012               	return		;funcret
 13013  003F14                     __end_of_isupper:
 13014                           	opt callstack 0
 13015                           
 13016 ;; *************** function _isalpha *****************
 13017 ;; Defined at:
 13018 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  c               2    4[COMRAM] int 
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  2    4[COMRAM] int 
 13025 ;; Registers used:
 13026 ;;		wreg, status,2, status,0
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13035 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13036 ;;Total ram usage:        6 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    4
 13039 ;; This function calls:
 13040 ;;		Nothing
 13041 ;; This function is called by:
 13042 ;;		_xtoa
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           	psect	text62
 13047  003E30                     __ptext62:
 13048                           	opt callstack 0
 13049  003E30                     _isalpha:
 13050                           	opt callstack 22
 13051  003E30  0E9F               	movlw	159
 13052  003E32  6E07               	movwf	??_isalpha^0,c
 13053  003E34  0EFF               	movlw	255
 13054  003E36  6E08               	movwf	(??_isalpha+1)^0,c
 13055  003E38  0E20               	movlw	32
 13056  003E3A  1005               	iorwf	isalpha@c^0,w,c
 13057  003E3C  6E09               	movwf	(??_isalpha+2)^0,c
 13058  003E3E  0E00               	movlw	0
 13059  003E40  1006               	iorwf	(isalpha@c+1)^0,w,c
 13060  003E42  6E0A               	movwf	(??_isalpha+3)^0,c
 13061  003E44  5007               	movf	??_isalpha^0,w,c
 13062  003E46  2609               	addwf	(??_isalpha+2)^0,f,c
 13063  003E48  5008               	movf	(??_isalpha+1)^0,w,c
 13064  003E4A  220A               	addwfc	(??_isalpha+3)^0,f,c
 13065  003E4C  500A               	movf	(??_isalpha+3)^0,w,c
 13066  003E4E  E10A               	bnz	u5560
 13067  003E50  0E1A               	movlw	26
 13068  003E52  5C09               	subwf	(??_isalpha+2)^0,w,c
 13069  003E54  A0D8               	btfss	status,0,c
 13070  003E56  EF2F  F01F         	goto	u5561
 13071  003E5A  EF32  F01F         	goto	u5560
 13072  003E5E                     u5561:
 13073  003E5E  0E01               	movlw	1
 13074  003E60  EF33  F01F         	goto	u5570
 13075  003E64                     u5560:
 13076  003E64  0E00               	movlw	0
 13077  003E66                     u5570:
 13078  003E66  6E05               	movwf	?_isalpha^0,c
 13079  003E68  6A06               	clrf	(?_isalpha+1)^0,c
 13080  003E6A  0012               	return		;funcret
 13081  003E6C                     __end_of_isalpha:
 13082                           	opt callstack 0
 13083                           
 13084 ;; *************** function _utoa *****************
 13085 ;; Defined at:
 13086 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13087 ;; Parameters:    Size  Location     Type
 13088 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13089 ;;		 -> NULL(0), 
 13090 ;;  d               8   35[COMRAM] unsigned long long 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;  n               8   55[COMRAM] unsigned long long 
 13093 ;;  i               2   63[COMRAM] int 
 13094 ;;  w               2   53[COMRAM] int 
 13095 ;;  p               2   51[COMRAM] int 
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  2   33[COMRAM] int 
 13098 ;; Registers used:
 13099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/0
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13105 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13106 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13107 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13108 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13109 ;;Total ram usage:       32 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:    9
 13112 ;; This function calls:
 13113 ;;		___lodiv
 13114 ;;		___lomod
 13115 ;;		_pad
 13116 ;; This function is called by:
 13117 ;;		_vfpfcnvrt
 13118 ;; This function uses a non-reentrant model
 13119 ;;
 13120                           
 13121                           	psect	text63
 13122  0014F0                     __ptext63:
 13123                           	opt callstack 0
 13124  0014F0                     _utoa:
 13125                           	opt callstack 18
 13126  0014F0                     
 13127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 13128  0014F0  0100               	movlb	0	; () banked
 13129  0014F2  BFCC               	btfsc	(_prec+1)& (0+255),7,b
 13130  0014F4  EF7E  F00A         	goto	u6101
 13131  0014F8  EF80  F00A         	goto	u6100
 13132  0014FC                     u6101:
 13133  0014FC  EF81  F00A         	goto	l6492
 13134  001500                     u6100:
 13135  001500                     
 13136                           ; BSR set to: 0
 13137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 13138  001500  9257               	bcf	_flags^0,1,c
 13139  001502                     l6492:
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 13143  001502  BFCC               	btfsc	(_prec+1)& (0+255),7,b
 13144  001504  EF8E  F00A         	goto	u6110
 13145  001508  51CC               	movf	(_prec+1)& (0+255),w,b
 13146  00150A  E106               	bnz	u6111
 13147  00150C  05CB               	decf	_prec& (0+255),w,b
 13148  00150E  B0D8               	btfsc	status,0,c
 13149  001510  EF8C  F00A         	goto	u6111
 13150  001514  EF8E  F00A         	goto	u6110
 13151  001518                     u6111:
 13152  001518  EF94  F00A         	goto	l1228
 13153  00151C                     u6110:
 13154  00151C                     
 13155                           ; BSR set to: 0
 13156  00151C  0E00               	movlw	0
 13157  00151E  6E35               	movwf	(utoa@p+1)^0,c
 13158  001520  0E01               	movlw	1
 13159  001522  6E34               	movwf	utoa@p^0,c
 13160  001524  EF98  F00A         	goto	l1230
 13161  001528                     l1228:
 13162                           
 13163                           ; BSR set to: 0
 13164  001528  C0CB  F034         	movff	_prec,utoa@p
 13165  00152C  C0CC  F035         	movff	_prec+1,utoa@p+1
 13166  001530                     l1230:
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 13170  001530  C0C9  F036         	movff	_width,utoa@w
 13171  001534  C0CA  F037         	movff	_width+1,utoa@w+1
 13172                           
 13173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 13174  001538  C024  F038         	movff	utoa@d,utoa@n
 13175  00153C  C025  F039         	movff	utoa@d+1,utoa@n+1
 13176  001540  C026  F03A         	movff	utoa@d+2,utoa@n+2
 13177  001544  C027  F03B         	movff	utoa@d+3,utoa@n+3
 13178  001548  C028  F03C         	movff	utoa@d+4,utoa@n+4
 13179  00154C  C029  F03D         	movff	utoa@d+5,utoa@n+5
 13180  001550  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 13181  001554  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 13182  001558                     
 13183                           ; BSR set to: 0
 13184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 13185  001558  0E00               	movlw	0
 13186  00155A  6E41               	movwf	(utoa@i+1)^0,c
 13187  00155C  0E1F               	movlw	31
 13188  00155E  6E40               	movwf	utoa@i^0,c
 13189  001560                     
 13190                           ; BSR set to: 0
 13191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 13192  001560  0E00               	movlw	0
 13193  001562  0101               	movlb	1	; () banked
 13194  001564  6FA3               	movwf	(_dbuf+31)& (0+255),b
 13195                           
 13196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13197  001566  EF2B  F00B         	goto	l6510
 13198  00156A                     l6500:
 13199                           
 13200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 13201  00156A  0640               	decf	utoa@i^0,f,c
 13202  00156C  A0D8               	btfss	status,0,c
 13203  00156E  0641               	decf	(utoa@i+1)^0,f,c
 13204  001570                     
 13205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 13206  001570  0E84               	movlw	low _dbuf
 13207  001572  2440               	addwf	utoa@i^0,w,c
 13208  001574  6ED9               	movwf	fsr2l,c
 13209  001576  0E01               	movlw	high _dbuf
 13210  001578  2041               	addwfc	(utoa@i+1)^0,w,c
 13211  00157A  6EDA               	movwf	fsr2h,c
 13212  00157C  C038  F005         	movff	utoa@n,___lomod@dividend
 13213  001580  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 13214  001584  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 13215  001588  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 13216  00158C  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 13217  001590  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 13218  001594  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 13219  001598  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 13220  00159C  0E0A               	movlw	10
 13221  00159E  6E0D               	movwf	___lomod@divisor^0,c
 13222  0015A0  0E00               	movlw	0
 13223  0015A2  6E0E               	movwf	(___lomod@divisor+1)^0,c
 13224  0015A4  0E00               	movlw	0
 13225  0015A6  6E0F               	movwf	(___lomod@divisor+2)^0,c
 13226  0015A8  0E00               	movlw	0
 13227  0015AA  6E10               	movwf	(___lomod@divisor+3)^0,c
 13228  0015AC  0E00               	movlw	0
 13229  0015AE  6E11               	movwf	(___lomod@divisor+4)^0,c
 13230  0015B0  0E00               	movlw	0
 13231  0015B2  6E12               	movwf	(___lomod@divisor+5)^0,c
 13232  0015B4  0E00               	movlw	0
 13233  0015B6  6E13               	movwf	(___lomod@divisor+6)^0,c
 13234  0015B8  0E00               	movlw	0
 13235  0015BA  6E14               	movwf	(___lomod@divisor+7)^0,c
 13236  0015BC  EC54  F017         	call	___lomod	;wreg free
 13237  0015C0  C005  F02C         	movff	?___lomod,??_utoa
 13238  0015C4  C006  F02D         	movff	?___lomod+1,??_utoa+1
 13239  0015C8  C007  F02E         	movff	?___lomod+2,??_utoa+2
 13240  0015CC  C008  F02F         	movff	?___lomod+3,??_utoa+3
 13241  0015D0  C009  F030         	movff	?___lomod+4,??_utoa+4
 13242  0015D4  C00A  F031         	movff	?___lomod+5,??_utoa+5
 13243  0015D8  C00B  F032         	movff	?___lomod+6,??_utoa+6
 13244  0015DC  C00C  F033         	movff	?___lomod+7,??_utoa+7
 13245  0015E0  502C               	movf	??_utoa^0,w,c
 13246  0015E2  0F30               	addlw	48
 13247  0015E4  6EDF               	movwf	indf2,c
 13248  0015E6                     
 13249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 13250  0015E6  0634               	decf	utoa@p^0,f,c
 13251  0015E8  A0D8               	btfss	status,0,c
 13252  0015EA  0635               	decf	(utoa@p+1)^0,f,c
 13253  0015EC                     
 13254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 13255  0015EC  0636               	decf	utoa@w^0,f,c
 13256  0015EE  A0D8               	btfss	status,0,c
 13257  0015F0  0637               	decf	(utoa@w+1)^0,f,c
 13258  0015F2                     
 13259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 13260  0015F2  C038  F005         	movff	utoa@n,___lodiv@dividend
 13261  0015F6  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 13262  0015FA  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 13263  0015FE  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 13264  001602  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 13265  001606  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 13266  00160A  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 13267  00160E  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 13268  001612  0E0A               	movlw	10
 13269  001614  6E0D               	movwf	___lodiv@divisor^0,c
 13270  001616  0E00               	movlw	0
 13271  001618  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 13272  00161A  0E00               	movlw	0
 13273  00161C  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 13274  00161E  0E00               	movlw	0
 13275  001620  6E10               	movwf	(___lodiv@divisor+3)^0,c
 13276  001622  0E00               	movlw	0
 13277  001624  6E11               	movwf	(___lodiv@divisor+4)^0,c
 13278  001626  0E00               	movlw	0
 13279  001628  6E12               	movwf	(___lodiv@divisor+5)^0,c
 13280  00162A  0E00               	movlw	0
 13281  00162C  6E13               	movwf	(___lodiv@divisor+6)^0,c
 13282  00162E  0E00               	movlw	0
 13283  001630  6E14               	movwf	(___lodiv@divisor+7)^0,c
 13284  001632  EC21  F015         	call	___lodiv	;wreg free
 13285  001636  C005  F038         	movff	?___lodiv,utoa@n
 13286  00163A  C006  F039         	movff	?___lodiv+1,utoa@n+1
 13287  00163E  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 13288  001642  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 13289  001646  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 13290  00164A  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 13291  00164E  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 13292  001652  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 13293  001656                     l6510:
 13294                           
 13295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13296  001656  5040               	movf	utoa@i^0,w,c
 13297  001658  1041               	iorwf	(utoa@i+1)^0,w,c
 13298  00165A  B4D8               	btfsc	status,2,c
 13299  00165C  EF32  F00B         	goto	u6121
 13300  001660  EF34  F00B         	goto	u6120
 13301  001664                     u6121:
 13302  001664  EF64  F00B         	goto	l6520
 13303  001668                     u6120:
 13304  001668  5038               	movf	utoa@n^0,w,c
 13305  00166A  1039               	iorwf	(utoa@n+1)^0,w,c
 13306  00166C  103A               	iorwf	(utoa@n+2)^0,w,c
 13307  00166E  103B               	iorwf	(utoa@n+3)^0,w,c
 13308  001670  103C               	iorwf	(utoa@n+4)^0,w,c
 13309  001672  103D               	iorwf	(utoa@n+5)^0,w,c
 13310  001674  103E               	iorwf	(utoa@n+6)^0,w,c
 13311  001676  103F               	iorwf	(utoa@n+7)^0,w,c
 13312  001678  A4D8               	btfss	status,2,c
 13313  00167A  EF41  F00B         	goto	u6131
 13314  00167E  EF43  F00B         	goto	u6130
 13315  001682                     u6131:
 13316  001682  EFB5  F00A         	goto	l6500
 13317  001686                     u6130:
 13318  001686  BE35               	btfsc	(utoa@p+1)^0,7,c
 13319  001688  EF50  F00B         	goto	u6140
 13320  00168C  5035               	movf	(utoa@p+1)^0,w,c
 13321  00168E  E106               	bnz	u6141
 13322  001690  0434               	decf	utoa@p^0,w,c
 13323  001692  B0D8               	btfsc	status,0,c
 13324  001694  EF4E  F00B         	goto	u6141
 13325  001698  EF50  F00B         	goto	u6140
 13326  00169C                     u6141:
 13327  00169C  EFB5  F00A         	goto	l6500
 13328  0016A0                     u6140:
 13329  0016A0  BE37               	btfsc	(utoa@w+1)^0,7,c
 13330  0016A2  EF5B  F00B         	goto	u6151
 13331  0016A6  5037               	movf	(utoa@w+1)^0,w,c
 13332  0016A8  E108               	bnz	u6150
 13333  0016AA  0436               	decf	utoa@w^0,w,c
 13334  0016AC  A0D8               	btfss	status,0,c
 13335  0016AE  EF5B  F00B         	goto	u6151
 13336  0016B2  EF5D  F00B         	goto	u6150
 13337  0016B6                     u6151:
 13338  0016B6  EF64  F00B         	goto	l6520
 13339  0016BA                     u6150:
 13340  0016BA  B257               	btfsc	_flags^0,1,c
 13341  0016BC  EF62  F00B         	goto	u6161
 13342  0016C0  EF64  F00B         	goto	u6160
 13343  0016C4                     u6161:
 13344  0016C4  EFB5  F00A         	goto	l6500
 13345  0016C8                     u6160:
 13346  0016C8                     l6520:
 13347                           
 13348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 13349  0016C8  C022  F017         	movff	utoa@fp,pad@fp
 13350  0016CC  C023  F018         	movff	utoa@fp+1,pad@fp+1
 13351  0016D0  0E84               	movlw	low _dbuf
 13352  0016D2  2440               	addwf	utoa@i^0,w,c
 13353  0016D4  6E19               	movwf	pad@buf^0,c
 13354  0016D6  0E01               	movlw	high _dbuf
 13355  0016D8  2041               	addwfc	(utoa@i+1)^0,w,c
 13356  0016DA  6E1A               	movwf	(pad@buf+1)^0,c
 13357  0016DC  C036  F01B         	movff	utoa@w,pad@p
 13358  0016E0  C037  F01C         	movff	utoa@w+1,pad@p+1
 13359  0016E4  EC1E  F018         	call	_pad	;wreg free
 13360  0016E8  C017  F022         	movff	?_pad,?_utoa
 13361  0016EC  C018  F023         	movff	?_pad+1,?_utoa+1
 13362  0016F0  0012               	return		;funcret
 13363  0016F2                     __end_of_utoa:
 13364                           	opt callstack 0
 13365                           
 13366 ;; *************** function ___lomod *****************
 13367 ;; Defined at:
 13368 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;  dividend        8    4[COMRAM] unsigned long long 
 13371 ;;  divisor         8   12[COMRAM] unsigned long long 
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;  counter         1   20[COMRAM] unsigned char 
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  8    4[COMRAM] unsigned long long 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2, status,0
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13383 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13386 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13387 ;;Total ram usage:       17 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:    4
 13390 ;; This function calls:
 13391 ;;		Nothing
 13392 ;; This function is called by:
 13393 ;;		_utoa
 13394 ;; This function uses a non-reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text64
 13398  002EA8                     __ptext64:
 13399                           	opt callstack 0
 13400  002EA8                     ___lomod:
 13401                           	opt callstack 22
 13402  002EA8  500D               	movf	___lomod@divisor^0,w,c
 13403  002EAA  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 13404  002EAC  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 13405  002EAE  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 13406  002EB0  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 13407  002EB2  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 13408  002EB4  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 13409  002EB6  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 13410  002EB8  B4D8               	btfsc	status,2,c
 13411  002EBA  EF61  F017         	goto	u5801
 13412  002EBE  EF63  F017         	goto	u5800
 13413  002EC2                     u5801:
 13414  002EC2  EFAB  F017         	goto	l1760
 13415  002EC6                     u5800:
 13416  002EC6  0E01               	movlw	1
 13417  002EC8  6E15               	movwf	___lomod@counter^0,c
 13418  002ECA  EF71  F017         	goto	l6362
 13419  002ECE                     l6360:
 13420  002ECE  90D8               	bcf	status,0,c
 13421  002ED0  360D               	rlcf	___lomod@divisor^0,f,c
 13422  002ED2  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 13423  002ED4  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 13424  002ED6  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 13425  002ED8  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 13426  002EDA  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 13427  002EDC  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 13428  002EDE  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 13429  002EE0  2A15               	incf	___lomod@counter^0,f,c
 13430  002EE2                     l6362:
 13431  002EE2  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 13432  002EE4  EF76  F017         	goto	u5811
 13433  002EE8  EF78  F017         	goto	u5810
 13434  002EEC                     u5811:
 13435  002EEC  EF67  F017         	goto	l6360
 13436  002EF0                     u5810:
 13437  002EF0                     l6364:
 13438  002EF0  500D               	movf	___lomod@divisor^0,w,c
 13439  002EF2  5C05               	subwf	___lomod@dividend^0,w,c
 13440  002EF4  500E               	movf	(___lomod@divisor+1)^0,w,c
 13441  002EF6  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 13442  002EF8  500F               	movf	(___lomod@divisor+2)^0,w,c
 13443  002EFA  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 13444  002EFC  5010               	movf	(___lomod@divisor+3)^0,w,c
 13445  002EFE  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 13446  002F00  5011               	movf	(___lomod@divisor+4)^0,w,c
 13447  002F02  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 13448  002F04  5012               	movf	(___lomod@divisor+5)^0,w,c
 13449  002F06  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 13450  002F08  5013               	movf	(___lomod@divisor+6)^0,w,c
 13451  002F0A  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 13452  002F0C  5014               	movf	(___lomod@divisor+7)^0,w,c
 13453  002F0E  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 13454  002F10  A0D8               	btfss	status,0,c
 13455  002F12  EF8D  F017         	goto	u5821
 13456  002F16  EF8F  F017         	goto	u5820
 13457  002F1A                     u5821:
 13458  002F1A  EF9F  F017         	goto	l6368
 13459  002F1E                     u5820:
 13460  002F1E  500D               	movf	___lomod@divisor^0,w,c
 13461  002F20  5E05               	subwf	___lomod@dividend^0,f,c
 13462  002F22  500E               	movf	(___lomod@divisor+1)^0,w,c
 13463  002F24  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 13464  002F26  500F               	movf	(___lomod@divisor+2)^0,w,c
 13465  002F28  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 13466  002F2A  5010               	movf	(___lomod@divisor+3)^0,w,c
 13467  002F2C  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 13468  002F2E  5011               	movf	(___lomod@divisor+4)^0,w,c
 13469  002F30  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 13470  002F32  5012               	movf	(___lomod@divisor+5)^0,w,c
 13471  002F34  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 13472  002F36  5013               	movf	(___lomod@divisor+6)^0,w,c
 13473  002F38  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 13474  002F3A  5014               	movf	(___lomod@divisor+7)^0,w,c
 13475  002F3C  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 13476  002F3E                     l6368:
 13477  002F3E  90D8               	bcf	status,0,c
 13478  002F40  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 13479  002F42  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 13480  002F44  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 13481  002F46  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 13482  002F48  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 13483  002F4A  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 13484  002F4C  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 13485  002F4E  320D               	rrcf	___lomod@divisor^0,f,c
 13486  002F50  2E15               	decfsz	___lomod@counter^0,f,c
 13487  002F52  EF78  F017         	goto	l6364
 13488  002F56                     l1760:
 13489  002F56  C005  F005         	movff	___lomod@dividend,?___lomod
 13490  002F5A  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 13491  002F5E  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 13492  002F62  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 13493  002F66  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 13494  002F6A  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 13495  002F6E  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 13496  002F72  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 13497  002F76  0012               	return		;funcret
 13498  002F78                     __end_of___lomod:
 13499                           	opt callstack 0
 13500                           
 13501 ;; *************** function ___lodiv *****************
 13502 ;; Defined at:
 13503 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  dividend        8    4[COMRAM] unsigned long long 
 13506 ;;  divisor         8   12[COMRAM] unsigned long long 
 13507 ;; Auto vars:     Size  Location     Type
 13508 ;;  quotient        8   20[COMRAM] unsigned long long 
 13509 ;;  counter         1   28[COMRAM] unsigned char 
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  8    4[COMRAM] unsigned long long 
 13512 ;; Registers used:
 13513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13519 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13520 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;Total ram usage:       25 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:    4
 13526 ;; This function calls:
 13527 ;;		Nothing
 13528 ;; This function is called by:
 13529 ;;		_utoa
 13530 ;; This function uses a non-reentrant model
 13531 ;;
 13532                           
 13533                           	psect	text65
 13534  002A42                     __ptext65:
 13535                           	opt callstack 0
 13536  002A42                     ___lodiv:
 13537                           	opt callstack 22
 13538  002A42  EE20  F015         	lfsr	2,___lodiv@quotient
 13539  002A46  0E07               	movlw	7
 13540  002A48                     u5761:
 13541  002A48  6ADE               	clrf	postinc2,c
 13542  002A4A  06E8               	decf	wreg,f,c
 13543  002A4C  E2FD               	bc	u5761
 13544  002A4E  500D               	movf	___lodiv@divisor^0,w,c
 13545  002A50  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 13546  002A52  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 13547  002A54  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 13548  002A56  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 13549  002A58  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 13550  002A5A  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 13551  002A5C  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 13552  002A5E  B4D8               	btfsc	status,2,c
 13553  002A60  EF34  F015         	goto	u5771
 13554  002A64  EF36  F015         	goto	u5770
 13555  002A68                     u5771:
 13556  002A68  EF88  F015         	goto	l1750
 13557  002A6C                     u5770:
 13558  002A6C  0E01               	movlw	1
 13559  002A6E  6E1D               	movwf	___lodiv@counter^0,c
 13560  002A70  EF44  F015         	goto	l6342
 13561  002A74                     l6340:
 13562  002A74  90D8               	bcf	status,0,c
 13563  002A76  360D               	rlcf	___lodiv@divisor^0,f,c
 13564  002A78  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 13565  002A7A  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 13566  002A7C  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 13567  002A7E  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 13568  002A80  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 13569  002A82  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 13570  002A84  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 13571  002A86  2A1D               	incf	___lodiv@counter^0,f,c
 13572  002A88                     l6342:
 13573  002A88  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 13574  002A8A  EF49  F015         	goto	u5781
 13575  002A8E  EF4B  F015         	goto	u5780
 13576  002A92                     u5781:
 13577  002A92  EF3A  F015         	goto	l6340
 13578  002A96                     u5780:
 13579  002A96                     l6344:
 13580  002A96  90D8               	bcf	status,0,c
 13581  002A98  3615               	rlcf	___lodiv@quotient^0,f,c
 13582  002A9A  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 13583  002A9C  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 13584  002A9E  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 13585  002AA0  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 13586  002AA2  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 13587  002AA4  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 13588  002AA6  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 13589  002AA8  500D               	movf	___lodiv@divisor^0,w,c
 13590  002AAA  5C05               	subwf	___lodiv@dividend^0,w,c
 13591  002AAC  500E               	movf	(___lodiv@divisor+1)^0,w,c
 13592  002AAE  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 13593  002AB0  500F               	movf	(___lodiv@divisor+2)^0,w,c
 13594  002AB2  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 13595  002AB4  5010               	movf	(___lodiv@divisor+3)^0,w,c
 13596  002AB6  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 13597  002AB8  5011               	movf	(___lodiv@divisor+4)^0,w,c
 13598  002ABA  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 13599  002ABC  5012               	movf	(___lodiv@divisor+5)^0,w,c
 13600  002ABE  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 13601  002AC0  5013               	movf	(___lodiv@divisor+6)^0,w,c
 13602  002AC2  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 13603  002AC4  5014               	movf	(___lodiv@divisor+7)^0,w,c
 13604  002AC6  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 13605  002AC8  A0D8               	btfss	status,0,c
 13606  002ACA  EF69  F015         	goto	u5791
 13607  002ACE  EF6B  F015         	goto	u5790
 13608  002AD2                     u5791:
 13609  002AD2  EF7C  F015         	goto	l6352
 13610  002AD6                     u5790:
 13611  002AD6  500D               	movf	___lodiv@divisor^0,w,c
 13612  002AD8  5E05               	subwf	___lodiv@dividend^0,f,c
 13613  002ADA  500E               	movf	(___lodiv@divisor+1)^0,w,c
 13614  002ADC  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 13615  002ADE  500F               	movf	(___lodiv@divisor+2)^0,w,c
 13616  002AE0  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 13617  002AE2  5010               	movf	(___lodiv@divisor+3)^0,w,c
 13618  002AE4  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 13619  002AE6  5011               	movf	(___lodiv@divisor+4)^0,w,c
 13620  002AE8  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 13621  002AEA  5012               	movf	(___lodiv@divisor+5)^0,w,c
 13622  002AEC  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 13623  002AEE  5013               	movf	(___lodiv@divisor+6)^0,w,c
 13624  002AF0  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 13625  002AF2  5014               	movf	(___lodiv@divisor+7)^0,w,c
 13626  002AF4  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 13627  002AF6  8015               	bsf	___lodiv@quotient^0,0,c
 13628  002AF8                     l6352:
 13629  002AF8  90D8               	bcf	status,0,c
 13630  002AFA  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 13631  002AFC  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 13632  002AFE  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 13633  002B00  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 13634  002B02  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 13635  002B04  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 13636  002B06  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 13637  002B08  320D               	rrcf	___lodiv@divisor^0,f,c
 13638  002B0A  2E1D               	decfsz	___lodiv@counter^0,f,c
 13639  002B0C  EF4B  F015         	goto	l6344
 13640  002B10                     l1750:
 13641  002B10  C015  F005         	movff	___lodiv@quotient,?___lodiv
 13642  002B14  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 13643  002B18  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 13644  002B1C  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 13645  002B20  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 13646  002B24  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 13647  002B28  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 13648  002B2C  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 13649  002B30  0012               	return		;funcret
 13650  002B32                     __end_of___lodiv:
 13651                           	opt callstack 0
 13652                           
 13653 ;; *************** function _stoa *****************
 13654 ;; Defined at:
 13655 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 13658 ;;		 -> NULL(0), 
 13659 ;;  s               2   17[COMRAM] PTR unsigned char 
 13660 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1513(20), ValidateCmd@ConfName_1509(20), ValidateCmd@ConfName(20), 
 13661 ;;		 -> STR_45(9), STR_44(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 13662 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;  nuls            7   20[COMRAM] unsigned char [7]
 13665 ;;  l               2   35[COMRAM] int 
 13666 ;;  p               2   33[COMRAM] int 
 13667 ;;  cp              2   31[COMRAM] PTR unsigned char 
 13668 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1513(20), ValidateCmd@ConfName_1509(20), 
 13669 ;;		 -> ValidateCmd@ConfName(20), STR_45(9), STR_44(12), InitialiseString@RevNum(2), 
 13670 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 13671 ;;  w               2   29[COMRAM] int 
 13672 ;;  i               2   27[COMRAM] int 
 13673 ;; Return value:  Size  Location     Type
 13674 ;;                  2   15[COMRAM] int 
 13675 ;; Registers used:
 13676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13677 ;; Tracked objects:
 13678 ;;		On entry : 0/0
 13679 ;;		On exit  : 0/0
 13680 ;;		Unchanged: 0/0
 13681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13683 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13685 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13686 ;;Total ram usage:       22 bytes
 13687 ;; Hardware stack levels used:    1
 13688 ;; Hardware stack levels required when called:    7
 13689 ;; This function calls:
 13690 ;;		_fputc
 13691 ;;		_strlen
 13692 ;; This function is called by:
 13693 ;;		_vfpfcnvrt
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text66
 13698  001E0C                     __ptext66:
 13699                           	opt callstack 0
 13700  001E0C                     _stoa:
 13701                           	opt callstack 20
 13702  001E0C                     
 13703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13704  001E0C  EE21  F047         	lfsr	2,stoa@F1139
 13705  001E10  EE10  F015         	lfsr	1,stoa@nuls
 13706  001E14  0E06               	movlw	6
 13707  001E16                     u6001:
 13708  001E16  CFDB FFE3          	movff	plusw2,plusw1
 13709  001E1A  06E8               	decf	wreg,f,c
 13710  001E1C  E2FC               	bc	u6001
 13711  001E1E                     
 13712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 13713  001E1E  C012  F020         	movff	stoa@s,stoa@cp
 13714  001E22  C013  F021         	movff	stoa@s+1,stoa@cp+1
 13715  001E26                     
 13716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 13717  001E26  5020               	movf	stoa@cp^0,w,c
 13718  001E28  1021               	iorwf	(stoa@cp+1)^0,w,c
 13719  001E2A  A4D8               	btfss	status,2,c
 13720  001E2C  EF1A  F00F         	goto	u6011
 13721  001E30  EF1C  F00F         	goto	u6010
 13722  001E34                     u6011:
 13723  001E34  EF20  F00F         	goto	l6454
 13724  001E38                     u6010:
 13725  001E38                     
 13726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 13727  001E38  0E15               	movlw	low stoa@nuls
 13728  001E3A  6E20               	movwf	stoa@cp^0,c
 13729  001E3C  0E00               	movlw	high stoa@nuls
 13730  001E3E  6E21               	movwf	(stoa@cp+1)^0,c
 13731  001E40                     l6454:
 13732                           
 13733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 13734  001E40  C020  F005         	movff	stoa@cp,strlen@s
 13735  001E44  C021  F006         	movff	stoa@cp+1,strlen@s+1
 13736  001E48  EC9A  F01D         	call	_strlen	;wreg free
 13737  001E4C  C005  F024         	movff	?_strlen,stoa@l
 13738  001E50  C006  F025         	movff	?_strlen+1,stoa@l+1
 13739  001E54                     
 13740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 13741  001E54  C0CB  F022         	movff	_prec,stoa@p
 13742  001E58  C0CC  F023         	movff	_prec+1,stoa@p+1
 13743  001E5C                     
 13744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 13745  001E5C  BE23               	btfsc	(stoa@p+1)^0,7,c
 13746  001E5E  EF33  F00F         	goto	u6021
 13747  001E62  EF35  F00F         	goto	u6020
 13748  001E66                     u6021:
 13749  001E66  EF4A  F00F         	goto	l1209
 13750  001E6A                     u6020:
 13751  001E6A  5024               	movf	stoa@l^0,w,c
 13752  001E6C  5C22               	subwf	stoa@p^0,w,c
 13753  001E6E  5023               	movf	(stoa@p+1)^0,w,c
 13754  001E70  0A80               	xorlw	128
 13755  001E72  6E14               	movwf	??_stoa^0,c
 13756  001E74  5025               	movf	(stoa@l+1)^0,w,c
 13757  001E76  0A80               	xorlw	128
 13758  001E78  5814               	subwfb	??_stoa^0,w,c
 13759  001E7A  A0D8               	btfss	status,0,c
 13760  001E7C  EF42  F00F         	goto	u6031
 13761  001E80  EF44  F00F         	goto	u6030
 13762  001E84                     u6031:
 13763  001E84  EF46  F00F         	goto	l1207
 13764  001E88                     u6030:
 13765  001E88  EF4A  F00F         	goto	l1209
 13766  001E8C                     l1207:
 13767  001E8C  C022  F024         	movff	stoa@p,stoa@l
 13768  001E90  C023  F025         	movff	stoa@p+1,stoa@l+1
 13769  001E94                     l1209:
 13770                           
 13771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 13772  001E94  C024  F022         	movff	stoa@l,stoa@p
 13773  001E98  C025  F023         	movff	stoa@l+1,stoa@p+1
 13774                           
 13775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 13776  001E9C  C0C9  F01E         	movff	_width,stoa@w
 13777  001EA0  C0CA  F01F         	movff	_width+1,stoa@w+1
 13778                           
 13779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 13780  001EA4  B057               	btfsc	_flags^0,0,c
 13781  001EA6  EF57  F00F         	goto	u6041
 13782  001EAA  EF59  F00F         	goto	u6040
 13783  001EAE                     u6041:
 13784  001EAE  EF76  F00F         	goto	l6470
 13785  001EB2                     u6040:
 13786  001EB2  EF67  F00F         	goto	l6468
 13787  001EB6                     l6464:
 13788                           
 13789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 13790  001EB6  0E00               	movlw	0
 13791  001EB8  6E08               	movwf	(fputc@c+1)^0,c
 13792  001EBA  0E20               	movlw	32
 13793  001EBC  6E07               	movwf	fputc@c^0,c
 13794  001EBE  C010  F009         	movff	stoa@fp,fputc@fp
 13795  001EC2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13796  001EC6  ECF3  F019         	call	_fputc	;wreg free
 13797  001ECA                     
 13798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 13799  001ECA  4A24               	infsnz	stoa@l^0,f,c
 13800  001ECC  2A25               	incf	(stoa@l+1)^0,f,c
 13801  001ECE                     l6468:
 13802                           
 13803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 13804  001ECE  501E               	movf	stoa@w^0,w,c
 13805  001ED0  5C24               	subwf	stoa@l^0,w,c
 13806  001ED2  5025               	movf	(stoa@l+1)^0,w,c
 13807  001ED4  0A80               	xorlw	128
 13808  001ED6  6E14               	movwf	??_stoa^0,c
 13809  001ED8  501F               	movf	(stoa@w+1)^0,w,c
 13810  001EDA  0A80               	xorlw	128
 13811  001EDC  5814               	subwfb	??_stoa^0,w,c
 13812  001EDE  A0D8               	btfss	status,0,c
 13813  001EE0  EF74  F00F         	goto	u6051
 13814  001EE4  EF76  F00F         	goto	u6050
 13815  001EE8                     u6051:
 13816  001EE8  EF5B  F00F         	goto	l6464
 13817  001EEC                     u6050:
 13818  001EEC                     l6470:
 13819                           
 13820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 13821  001EEC  0E00               	movlw	0
 13822  001EEE  6E1D               	movwf	(stoa@i+1)^0,c
 13823  001EF0  0E00               	movlw	0
 13824  001EF2  6E1C               	movwf	stoa@i^0,c
 13825                           
 13826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13827  001EF4  EF9B  F00F         	goto	l6478
 13828  001EF8                     l6472:
 13829                           
 13830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 13831  001EF8  C020  FFF6         	movff	stoa@cp,tblptrl
 13832  001EFC  C021  FFF7         	movff	stoa@cp+1,tblptrh
 13833  001F00  0E00               	movlw	low (__mediumconst shr (0+16))
 13834  001F02  6EF8               	movwf	tblptru,c
 13835  001F04  0E0E               	movlw	(high __ramtop+-1)
 13836  001F06  64F7               	cpfsgt	tblptrh,c
 13837  001F08  D003               	bra	u6067
 13838  001F0A  0008               	tblrd		*
 13839  001F0C  50F5               	movf	tablat,w,c
 13840  001F0E  D005               	bra	u6060
 13841  001F10                     u6067:
 13842  001F10  CFF6 FFE9          	movff	tblptrl,fsr0l
 13843  001F14  CFF7 FFEA          	movff	tblptrh,fsr0h
 13844  001F18  50EF               	movf	indf0,w,c
 13845  001F1A                     u6060:
 13846  001F1A  6E14               	movwf	??_stoa^0,c
 13847  001F1C  5014               	movf	??_stoa^0,w,c
 13848  001F1E  6E07               	movwf	fputc@c^0,c
 13849  001F20  6A08               	clrf	(fputc@c+1)^0,c
 13850  001F22  C010  F009         	movff	stoa@fp,fputc@fp
 13851  001F26  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13852  001F2A  ECF3  F019         	call	_fputc	;wreg free
 13853  001F2E                     
 13854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 13855  001F2E  4A20               	infsnz	stoa@cp^0,f,c
 13856  001F30  2A21               	incf	(stoa@cp+1)^0,f,c
 13857  001F32                     
 13858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 13859  001F32  4A1C               	infsnz	stoa@i^0,f,c
 13860  001F34  2A1D               	incf	(stoa@i+1)^0,f,c
 13861  001F36                     l6478:
 13862                           
 13863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13864  001F36  5022               	movf	stoa@p^0,w,c
 13865  001F38  5C1C               	subwf	stoa@i^0,w,c
 13866  001F3A  501D               	movf	(stoa@i+1)^0,w,c
 13867  001F3C  0A80               	xorlw	128
 13868  001F3E  6E14               	movwf	??_stoa^0,c
 13869  001F40  5023               	movf	(stoa@p+1)^0,w,c
 13870  001F42  0A80               	xorlw	128
 13871  001F44  5814               	subwfb	??_stoa^0,w,c
 13872  001F46  A0D8               	btfss	status,0,c
 13873  001F48  EFA8  F00F         	goto	u6071
 13874  001F4C  EFAA  F00F         	goto	u6070
 13875  001F50                     u6071:
 13876  001F50  EF7C  F00F         	goto	l6472
 13877  001F54                     u6070:
 13878  001F54                     
 13879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 13880  001F54  A057               	btfss	_flags^0,0,c
 13881  001F56  EFAF  F00F         	goto	u6081
 13882  001F5A  EFB1  F00F         	goto	u6080
 13883  001F5E                     u6081:
 13884  001F5E  EFCE  F00F         	goto	l1219
 13885  001F62                     u6080:
 13886  001F62  EFBF  F00F         	goto	l6486
 13887  001F66                     l6482:
 13888                           
 13889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 13890  001F66  0E00               	movlw	0
 13891  001F68  6E08               	movwf	(fputc@c+1)^0,c
 13892  001F6A  0E20               	movlw	32
 13893  001F6C  6E07               	movwf	fputc@c^0,c
 13894  001F6E  C010  F009         	movff	stoa@fp,fputc@fp
 13895  001F72  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13896  001F76  ECF3  F019         	call	_fputc	;wreg free
 13897  001F7A                     
 13898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 13899  001F7A  4A24               	infsnz	stoa@l^0,f,c
 13900  001F7C  2A25               	incf	(stoa@l+1)^0,f,c
 13901  001F7E                     l6486:
 13902                           
 13903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 13904  001F7E  501E               	movf	stoa@w^0,w,c
 13905  001F80  5C24               	subwf	stoa@l^0,w,c
 13906  001F82  5025               	movf	(stoa@l+1)^0,w,c
 13907  001F84  0A80               	xorlw	128
 13908  001F86  6E14               	movwf	??_stoa^0,c
 13909  001F88  501F               	movf	(stoa@w+1)^0,w,c
 13910  001F8A  0A80               	xorlw	128
 13911  001F8C  5814               	subwfb	??_stoa^0,w,c
 13912  001F8E  A0D8               	btfss	status,0,c
 13913  001F90  EFCC  F00F         	goto	u6091
 13914  001F94  EFCE  F00F         	goto	u6090
 13915  001F98                     u6091:
 13916  001F98  EFB3  F00F         	goto	l6482
 13917  001F9C                     u6090:
 13918  001F9C                     l1219:
 13919                           
 13920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 13921  001F9C  C024  F010         	movff	stoa@l,?_stoa
 13922  001FA0  C025  F011         	movff	stoa@l+1,?_stoa+1
 13923  001FA4  0012               	return		;funcret
 13924  001FA6                     __end_of_stoa:
 13925                           	opt callstack 0
 13926                           
 13927 ;; *************** function _dtoa *****************
 13928 ;; Defined at:
 13929 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13932 ;;		 -> NULL(0), 
 13933 ;;  d               8   35[COMRAM] long long 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  n               8   59[COMRAM] long long 
 13936 ;;  i               2   67[COMRAM] int 
 13937 ;;  s               2   57[COMRAM] int 
 13938 ;;  w               2   55[COMRAM] int 
 13939 ;;  p               2   53[COMRAM] int 
 13940 ;; Return value:  Size  Location     Type
 13941 ;;                  2   33[COMRAM] int 
 13942 ;; Registers used:
 13943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13944 ;; Tracked objects:
 13945 ;;		On entry : 0/0
 13946 ;;		On exit  : 0/0
 13947 ;;		Unchanged: 0/0
 13948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13949 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13950 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13951 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13952 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13953 ;;Total ram usage:       36 bytes
 13954 ;; Hardware stack levels used:    1
 13955 ;; Hardware stack levels required when called:    9
 13956 ;; This function calls:
 13957 ;;		___aodiv
 13958 ;;		___aomod
 13959 ;;		_abs
 13960 ;;		_pad
 13961 ;; This function is called by:
 13962 ;;		_vfpfcnvrt
 13963 ;; This function uses a non-reentrant model
 13964 ;;
 13965                           
 13966                           	psect	text67
 13967  000F3A                     __ptext67:
 13968                           	opt callstack 0
 13969  000F3A                     _dtoa:
 13970                           	opt callstack 18
 13971  000F3A                     
 13972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13973  000F3A  C024  F03C         	movff	dtoa@d,dtoa@n
 13974  000F3E  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 13975  000F42  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 13976  000F46  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 13977  000F4A  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 13978  000F4E  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 13979  000F52  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 13980  000F56  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 13981  000F5A                     
 13982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13983  000F5A  BE43               	btfsc	(dtoa@n+7)^0,7,c
 13984  000F5C  EFB2  F007         	goto	u5851
 13985  000F60  EFB5  F007         	goto	u5850
 13986  000F64                     u5851:
 13987  000F64  0E01               	movlw	1
 13988  000F66  EFB6  F007         	goto	u5860
 13989  000F6A                     u5850:
 13990  000F6A  0E00               	movlw	0
 13991  000F6C                     u5860:
 13992  000F6C  6E3A               	movwf	dtoa@s^0,c
 13993  000F6E  6A3B               	clrf	(dtoa@s+1)^0,c
 13994                           
 13995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13996  000F70  503A               	movf	dtoa@s^0,w,c
 13997  000F72  103B               	iorwf	(dtoa@s+1)^0,w,c
 13998  000F74  B4D8               	btfsc	status,2,c
 13999  000F76  EFBF  F007         	goto	u5871
 14000  000F7A  EFC1  F007         	goto	u5870
 14001  000F7E                     u5871:
 14002  000F7E  EFD1  F007         	goto	l6390
 14003  000F82                     u5870:
 14004  000F82                     
 14005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14006  000F82  1E43               	comf	(dtoa@n+7)^0,f,c
 14007  000F84  1E42               	comf	(dtoa@n+6)^0,f,c
 14008  000F86  1E41               	comf	(dtoa@n+5)^0,f,c
 14009  000F88  1E40               	comf	(dtoa@n+4)^0,f,c
 14010  000F8A  1E3F               	comf	(dtoa@n+3)^0,f,c
 14011  000F8C  1E3E               	comf	(dtoa@n+2)^0,f,c
 14012  000F8E  1E3D               	comf	(dtoa@n+1)^0,f,c
 14013  000F90  6C3C               	negf	dtoa@n^0,c
 14014  000F92  0E00               	movlw	0
 14015  000F94  223D               	addwfc	(dtoa@n+1)^0,f,c
 14016  000F96  223E               	addwfc	(dtoa@n+2)^0,f,c
 14017  000F98  223F               	addwfc	(dtoa@n+3)^0,f,c
 14018  000F9A  2240               	addwfc	(dtoa@n+4)^0,f,c
 14019  000F9C  2241               	addwfc	(dtoa@n+5)^0,f,c
 14020  000F9E  2242               	addwfc	(dtoa@n+6)^0,f,c
 14021  000FA0  2243               	addwfc	(dtoa@n+7)^0,f,c
 14022  000FA2                     l6390:
 14023                           
 14024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14025  000FA2  0100               	movlb	0	; () banked
 14026  000FA4  BFCC               	btfsc	(_prec+1)& (0+255),7,b
 14027  000FA6  EFD7  F007         	goto	u5881
 14028  000FAA  EFD9  F007         	goto	u5880
 14029  000FAE                     u5881:
 14030  000FAE  EFDA  F007         	goto	l6394
 14031  000FB2                     u5880:
 14032  000FB2                     
 14033                           ; BSR set to: 0
 14034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14035  000FB2  9257               	bcf	_flags^0,1,c
 14036  000FB4                     l6394:
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14040  000FB4  BFCC               	btfsc	(_prec+1)& (0+255),7,b
 14041  000FB6  EFE7  F007         	goto	u5890
 14042  000FBA  51CC               	movf	(_prec+1)& (0+255),w,b
 14043  000FBC  E106               	bnz	u5891
 14044  000FBE  05CB               	decf	_prec& (0+255),w,b
 14045  000FC0  B0D8               	btfsc	status,0,c
 14046  000FC2  EFE5  F007         	goto	u5891
 14047  000FC6  EFE7  F007         	goto	u5890
 14048  000FCA                     u5891:
 14049  000FCA  EFED  F007         	goto	l1180
 14050  000FCE                     u5890:
 14051  000FCE                     
 14052                           ; BSR set to: 0
 14053  000FCE  0E00               	movlw	0
 14054  000FD0  6E37               	movwf	(dtoa@p+1)^0,c
 14055  000FD2  0E01               	movlw	1
 14056  000FD4  6E36               	movwf	dtoa@p^0,c
 14057  000FD6  EFF1  F007         	goto	l1182
 14058  000FDA                     l1180:
 14059                           
 14060                           ; BSR set to: 0
 14061  000FDA  C0CB  F036         	movff	_prec,dtoa@p
 14062  000FDE  C0CC  F037         	movff	_prec+1,dtoa@p+1
 14063  000FE2                     l1182:
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14067  000FE2  C0C9  F038         	movff	_width,dtoa@w
 14068  000FE6  C0CA  F039         	movff	_width+1,dtoa@w+1
 14069  000FEA                     
 14070                           ; BSR set to: 0
 14071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14072  000FEA  503A               	movf	dtoa@s^0,w,c
 14073  000FEC  103B               	iorwf	(dtoa@s+1)^0,w,c
 14074  000FEE  A4D8               	btfss	status,2,c
 14075  000FF0  EFFC  F007         	goto	u5901
 14076  000FF4  EFFE  F007         	goto	u5900
 14077  000FF8                     u5901:
 14078  000FF8  EF05  F008         	goto	l6402
 14079  000FFC                     u5900:
 14080  000FFC                     
 14081                           ; BSR set to: 0
 14082  000FFC  A457               	btfss	_flags^0,2,c
 14083  000FFE  EF03  F008         	goto	u5911
 14084  001002  EF05  F008         	goto	u5910
 14085  001006                     u5911:
 14086  001006  EF08  F008         	goto	l6404
 14087  00100A                     u5910:
 14088  00100A                     l6402:
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14092  00100A  0638               	decf	dtoa@w^0,f,c
 14093  00100C  A0D8               	btfss	status,0,c
 14094  00100E  0639               	decf	(dtoa@w+1)^0,f,c
 14095  001010                     l6404:
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14099  001010  0E00               	movlw	0
 14100  001012  6E45               	movwf	(dtoa@i+1)^0,c
 14101  001014  0E1F               	movlw	31
 14102  001016  6E44               	movwf	dtoa@i^0,c
 14103  001018                     
 14104                           ; BSR set to: 0
 14105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14106  001018  0E00               	movlw	0
 14107  00101A  0101               	movlb	1	; () banked
 14108  00101C  6FA3               	movwf	(_dbuf+31)& (0+255),b
 14109                           
 14110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14111  00101E  EF8D  F008         	goto	l6418
 14112  001022                     l6408:
 14113                           
 14114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14115  001022  0644               	decf	dtoa@i^0,f,c
 14116  001024  A0D8               	btfss	status,0,c
 14117  001026  0645               	decf	(dtoa@i+1)^0,f,c
 14118  001028                     
 14119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14120  001028  0E84               	movlw	low _dbuf
 14121  00102A  2444               	addwf	dtoa@i^0,w,c
 14122  00102C  6ED9               	movwf	fsr2l,c
 14123  00102E  0E01               	movlw	high _dbuf
 14124  001030  2045               	addwfc	(dtoa@i+1)^0,w,c
 14125  001032  6EDA               	movwf	fsr2h,c
 14126  001034  C03C  F005         	movff	dtoa@n,___aomod@dividend
 14127  001038  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 14128  00103C  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 14129  001040  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 14130  001044  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 14131  001048  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 14132  00104C  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 14133  001050  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 14134  001054  0E0A               	movlw	10
 14135  001056  6E0D               	movwf	___aomod@divisor^0,c
 14136  001058  0E00               	movlw	0
 14137  00105A  6E0E               	movwf	(___aomod@divisor+1)^0,c
 14138  00105C  0E00               	movlw	0
 14139  00105E  6E0F               	movwf	(___aomod@divisor+2)^0,c
 14140  001060  0E00               	movlw	0
 14141  001062  6E10               	movwf	(___aomod@divisor+3)^0,c
 14142  001064  0E00               	movlw	0
 14143  001066  6E11               	movwf	(___aomod@divisor+4)^0,c
 14144  001068  0E00               	movlw	0
 14145  00106A  6E12               	movwf	(___aomod@divisor+5)^0,c
 14146  00106C  0E00               	movlw	0
 14147  00106E  6E13               	movwf	(___aomod@divisor+6)^0,c
 14148  001070  0E00               	movlw	0
 14149  001072  6E14               	movwf	(___aomod@divisor+7)^0,c
 14150  001074  EC22  F012         	call	___aomod	;wreg free
 14151  001078  C005  F02C         	movff	?___aomod,??_dtoa
 14152  00107C  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 14153  001080  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 14154  001084  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 14155  001088  C009  F030         	movff	?___aomod+4,??_dtoa+4
 14156  00108C  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 14157  001090  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 14158  001094  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 14159  001098  C02C  F017         	movff	??_dtoa,abs@a
 14160  00109C  C02E  F018         	movff	??_dtoa+2,abs@a+1
 14161  0010A0  ECF8  F01E         	call	_abs	;wreg free
 14162  0010A4  5017               	movf	?_abs^0,w,c
 14163  0010A6  0F30               	addlw	48
 14164  0010A8  6EDF               	movwf	indf2,c
 14165  0010AA                     
 14166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14167  0010AA  0636               	decf	dtoa@p^0,f,c
 14168  0010AC  A0D8               	btfss	status,0,c
 14169  0010AE  0637               	decf	(dtoa@p+1)^0,f,c
 14170  0010B0                     
 14171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14172  0010B0  0638               	decf	dtoa@w^0,f,c
 14173  0010B2  A0D8               	btfss	status,0,c
 14174  0010B4  0639               	decf	(dtoa@w+1)^0,f,c
 14175  0010B6                     
 14176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14177  0010B6  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 14178  0010BA  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 14179  0010BE  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 14180  0010C2  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 14181  0010C6  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 14182  0010CA  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 14183  0010CE  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 14184  0010D2  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 14185  0010D6  0E0A               	movlw	10
 14186  0010D8  6E0D               	movwf	___aodiv@divisor^0,c
 14187  0010DA  0E00               	movlw	0
 14188  0010DC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 14189  0010DE  0E00               	movlw	0
 14190  0010E0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 14191  0010E2  0E00               	movlw	0
 14192  0010E4  6E10               	movwf	(___aodiv@divisor+3)^0,c
 14193  0010E6  0E00               	movlw	0
 14194  0010E8  6E11               	movwf	(___aodiv@divisor+4)^0,c
 14195  0010EA  0E00               	movlw	0
 14196  0010EC  6E12               	movwf	(___aodiv@divisor+5)^0,c
 14197  0010EE  0E00               	movlw	0
 14198  0010F0  6E13               	movwf	(___aodiv@divisor+6)^0,c
 14199  0010F2  0E00               	movlw	0
 14200  0010F4  6E14               	movwf	(___aodiv@divisor+7)^0,c
 14201  0010F6  ECA0  F010         	call	___aodiv	;wreg free
 14202  0010FA  C005  F03C         	movff	?___aodiv,dtoa@n
 14203  0010FE  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 14204  001102  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 14205  001106  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 14206  00110A  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 14207  00110E  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 14208  001112  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 14209  001116  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 14210  00111A                     l6418:
 14211                           
 14212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14213  00111A  BE45               	btfsc	(dtoa@i+1)^0,7,c
 14214  00111C  EF98  F008         	goto	u5921
 14215  001120  5045               	movf	(dtoa@i+1)^0,w,c
 14216  001122  E108               	bnz	u5920
 14217  001124  0444               	decf	dtoa@i^0,w,c
 14218  001126  A0D8               	btfss	status,0,c
 14219  001128  EF98  F008         	goto	u5921
 14220  00112C  EF9A  F008         	goto	u5920
 14221  001130                     u5921:
 14222  001130  EFCA  F008         	goto	l6428
 14223  001134                     u5920:
 14224  001134  503C               	movf	dtoa@n^0,w,c
 14225  001136  103D               	iorwf	(dtoa@n+1)^0,w,c
 14226  001138  103E               	iorwf	(dtoa@n+2)^0,w,c
 14227  00113A  103F               	iorwf	(dtoa@n+3)^0,w,c
 14228  00113C  1040               	iorwf	(dtoa@n+4)^0,w,c
 14229  00113E  1041               	iorwf	(dtoa@n+5)^0,w,c
 14230  001140  1042               	iorwf	(dtoa@n+6)^0,w,c
 14231  001142  1043               	iorwf	(dtoa@n+7)^0,w,c
 14232  001144  A4D8               	btfss	status,2,c
 14233  001146  EFA7  F008         	goto	u5931
 14234  00114A  EFA9  F008         	goto	u5930
 14235  00114E                     u5931:
 14236  00114E  EF11  F008         	goto	l6408
 14237  001152                     u5930:
 14238  001152  BE37               	btfsc	(dtoa@p+1)^0,7,c
 14239  001154  EFB6  F008         	goto	u5940
 14240  001158  5037               	movf	(dtoa@p+1)^0,w,c
 14241  00115A  E106               	bnz	u5941
 14242  00115C  0436               	decf	dtoa@p^0,w,c
 14243  00115E  B0D8               	btfsc	status,0,c
 14244  001160  EFB4  F008         	goto	u5941
 14245  001164  EFB6  F008         	goto	u5940
 14246  001168                     u5941:
 14247  001168  EF11  F008         	goto	l6408
 14248  00116C                     u5940:
 14249  00116C  BE39               	btfsc	(dtoa@w+1)^0,7,c
 14250  00116E  EFC1  F008         	goto	u5951
 14251  001172  5039               	movf	(dtoa@w+1)^0,w,c
 14252  001174  E108               	bnz	u5950
 14253  001176  0438               	decf	dtoa@w^0,w,c
 14254  001178  A0D8               	btfss	status,0,c
 14255  00117A  EFC1  F008         	goto	u5951
 14256  00117E  EFC3  F008         	goto	u5950
 14257  001182                     u5951:
 14258  001182  EFCA  F008         	goto	l6428
 14259  001186                     u5950:
 14260  001186  B257               	btfsc	_flags^0,1,c
 14261  001188  EFC8  F008         	goto	u5961
 14262  00118C  EFCA  F008         	goto	u5960
 14263  001190                     u5961:
 14264  001190  EF11  F008         	goto	l6408
 14265  001194                     u5960:
 14266  001194                     l6428:
 14267                           
 14268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14269  001194  503A               	movf	dtoa@s^0,w,c
 14270  001196  103B               	iorwf	(dtoa@s+1)^0,w,c
 14271  001198  A4D8               	btfss	status,2,c
 14272  00119A  EFD1  F008         	goto	u5971
 14273  00119E  EFD3  F008         	goto	u5970
 14274  0011A2                     u5971:
 14275  0011A2  EFDA  F008         	goto	l6432
 14276  0011A6                     u5970:
 14277  0011A6  A457               	btfss	_flags^0,2,c
 14278  0011A8  EFD8  F008         	goto	u5981
 14279  0011AC  EFDA  F008         	goto	u5980
 14280  0011B0                     u5981:
 14281  0011B0  EFF8  F008         	goto	l6442
 14282  0011B4                     u5980:
 14283  0011B4                     l6432:
 14284                           
 14285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14286  0011B4  0644               	decf	dtoa@i^0,f,c
 14287  0011B6  A0D8               	btfss	status,0,c
 14288  0011B8  0645               	decf	(dtoa@i+1)^0,f,c
 14289  0011BA                     
 14290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14291  0011BA  503A               	movf	dtoa@s^0,w,c
 14292  0011BC  103B               	iorwf	(dtoa@s+1)^0,w,c
 14293  0011BE  A4D8               	btfss	status,2,c
 14294  0011C0  EFE4  F008         	goto	u5991
 14295  0011C4  EFE6  F008         	goto	u5990
 14296  0011C8                     u5991:
 14297  0011C8  EFEC  F008         	goto	l6438
 14298  0011CC                     u5990:
 14299  0011CC  0E00               	movlw	0
 14300  0011CE  6E35               	movwf	(_dtoa$1839+1)^0,c
 14301  0011D0  0E2B               	movlw	43
 14302  0011D2  6E34               	movwf	_dtoa$1839^0,c
 14303  0011D4  EFF0  F008         	goto	l6440
 14304  0011D8                     l6438:
 14305  0011D8  0E00               	movlw	0
 14306  0011DA  6E35               	movwf	(_dtoa$1839+1)^0,c
 14307  0011DC  0E2D               	movlw	45
 14308  0011DE  6E34               	movwf	_dtoa$1839^0,c
 14309  0011E0                     l6440:
 14310  0011E0  0E84               	movlw	low _dbuf
 14311  0011E2  2444               	addwf	dtoa@i^0,w,c
 14312  0011E4  6ED9               	movwf	fsr2l,c
 14313  0011E6  0E01               	movlw	high _dbuf
 14314  0011E8  2045               	addwfc	(dtoa@i+1)^0,w,c
 14315  0011EA  6EDA               	movwf	fsr2h,c
 14316  0011EC  C034  FFDF         	movff	_dtoa$1839,indf2
 14317  0011F0                     l6442:
 14318                           
 14319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14320  0011F0  C022  F017         	movff	dtoa@fp,pad@fp
 14321  0011F4  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 14322  0011F8  0E84               	movlw	low _dbuf
 14323  0011FA  2444               	addwf	dtoa@i^0,w,c
 14324  0011FC  6E19               	movwf	pad@buf^0,c
 14325  0011FE  0E01               	movlw	high _dbuf
 14326  001200  2045               	addwfc	(dtoa@i+1)^0,w,c
 14327  001202  6E1A               	movwf	(pad@buf+1)^0,c
 14328  001204  C038  F01B         	movff	dtoa@w,pad@p
 14329  001208  C039  F01C         	movff	dtoa@w+1,pad@p+1
 14330  00120C  EC1E  F018         	call	_pad	;wreg free
 14331  001210  C017  F022         	movff	?_pad,?_dtoa
 14332  001214  C018  F023         	movff	?_pad+1,?_dtoa+1
 14333  001218  0012               	return		;funcret
 14334  00121A                     __end_of_dtoa:
 14335                           	opt callstack 0
 14336                           
 14337 ;; *************** function _pad *****************
 14338 ;; Defined at:
 14339 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14340 ;; Parameters:    Size  Location     Type
 14341 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14342 ;;		 -> NULL(0), 
 14343 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14344 ;;		 -> dbuf(32), 
 14345 ;;  p               2   26[COMRAM] int 
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;  w               2   31[COMRAM] int 
 14348 ;;  i               2   29[COMRAM] int 
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  2   22[COMRAM] int 
 14351 ;; Registers used:
 14352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14361 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14362 ;;Total ram usage:       11 bytes
 14363 ;; Hardware stack levels used:    1
 14364 ;; Hardware stack levels required when called:    8
 14365 ;; This function calls:
 14366 ;;		_fputc
 14367 ;;		_fputs
 14368 ;;		_strlen
 14369 ;; This function is called by:
 14370 ;;		_dtoa
 14371 ;;		_utoa
 14372 ;;		_xtoa
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text68
 14377  00303C                     __ptext68:
 14378                           	opt callstack 0
 14379  00303C                     _pad:
 14380                           	opt callstack 18
 14381  00303C                     
 14382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14383  00303C  A057               	btfss	_flags^0,0,c
 14384  00303E  EF23  F018         	goto	u5491
 14385  003042  EF25  F018         	goto	u5490
 14386  003046                     u5491:
 14387  003046  EF2F  F018         	goto	l6204
 14388  00304A                     u5490:
 14389  00304A                     
 14390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14391  00304A  C019  F010         	movff	pad@buf,fputs@s
 14392  00304E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14393  003052  C017  F012         	movff	pad@fp,fputs@fp
 14394  003056  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14395  00305A  EC53  F01E         	call	_fputs	;wreg free
 14396  00305E                     l6204:
 14397                           
 14398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14399  00305E  BE1C               	btfsc	(pad@p+1)^0,7,c
 14400  003060  EF34  F018         	goto	u5501
 14401  003064  EF36  F018         	goto	u5500
 14402  003068                     u5501:
 14403  003068  EF3C  F018         	goto	l6208
 14404  00306C                     u5500:
 14405  00306C  C01B  F020         	movff	pad@p,pad@w
 14406  003070  C01C  F021         	movff	pad@p+1,pad@w+1
 14407  003074  EF40  F018         	goto	l1169
 14408  003078                     l6208:
 14409  003078  0E00               	movlw	0
 14410  00307A  6E21               	movwf	(pad@w+1)^0,c
 14411  00307C  0E00               	movlw	0
 14412  00307E  6E20               	movwf	pad@w^0,c
 14413  003080                     l1169:
 14414                           
 14415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14416  003080  0E00               	movlw	0
 14417  003082  6E1F               	movwf	(pad@i+1)^0,c
 14418  003084  0E00               	movlw	0
 14419  003086  6E1E               	movwf	pad@i^0,c
 14420                           
 14421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14422  003088  EF52  F018         	goto	l6214
 14423  00308C                     l6210:
 14424                           
 14425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14426  00308C  0E00               	movlw	0
 14427  00308E  6E08               	movwf	(fputc@c+1)^0,c
 14428  003090  0E20               	movlw	32
 14429  003092  6E07               	movwf	fputc@c^0,c
 14430  003094  C017  F009         	movff	pad@fp,fputc@fp
 14431  003098  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14432  00309C  ECF3  F019         	call	_fputc	;wreg free
 14433  0030A0                     
 14434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14435  0030A0  4A1E               	infsnz	pad@i^0,f,c
 14436  0030A2  2A1F               	incf	(pad@i+1)^0,f,c
 14437  0030A4                     l6214:
 14438                           
 14439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14440  0030A4  5020               	movf	pad@w^0,w,c
 14441  0030A6  5C1E               	subwf	pad@i^0,w,c
 14442  0030A8  501F               	movf	(pad@i+1)^0,w,c
 14443  0030AA  0A80               	xorlw	128
 14444  0030AC  6E1D               	movwf	??_pad^0,c
 14445  0030AE  5021               	movf	(pad@w+1)^0,w,c
 14446  0030B0  0A80               	xorlw	128
 14447  0030B2  581D               	subwfb	??_pad^0,w,c
 14448  0030B4  A0D8               	btfss	status,0,c
 14449  0030B6  EF5F  F018         	goto	u5511
 14450  0030BA  EF61  F018         	goto	u5510
 14451  0030BE                     u5511:
 14452  0030BE  EF46  F018         	goto	l6210
 14453  0030C2                     u5510:
 14454  0030C2                     
 14455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14456  0030C2  B057               	btfsc	_flags^0,0,c
 14457  0030C4  EF66  F018         	goto	u5521
 14458  0030C8  EF68  F018         	goto	u5520
 14459  0030CC                     u5521:
 14460  0030CC  EF72  F018         	goto	l6218
 14461  0030D0                     u5520:
 14462  0030D0                     
 14463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14464  0030D0  C019  F010         	movff	pad@buf,fputs@s
 14465  0030D4  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14466  0030D8  C017  F012         	movff	pad@fp,fputs@fp
 14467  0030DC  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14468  0030E0  EC53  F01E         	call	_fputs	;wreg free
 14469  0030E4                     l6218:
 14470                           
 14471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14472  0030E4  C019  F005         	movff	pad@buf,strlen@s
 14473  0030E8  C01A  F006         	movff	pad@buf+1,strlen@s+1
 14474  0030EC  EC9A  F01D         	call	_strlen	;wreg free
 14475  0030F0  5020               	movf	pad@w^0,w,c
 14476  0030F2  2405               	addwf	?_strlen^0,w,c
 14477  0030F4  6E17               	movwf	?_pad^0,c
 14478  0030F6  5021               	movf	(pad@w+1)^0,w,c
 14479  0030F8  2006               	addwfc	(?_strlen+1)^0,w,c
 14480  0030FA  6E18               	movwf	(?_pad+1)^0,c
 14481  0030FC  0012               	return		;funcret
 14482  0030FE                     __end_of_pad:
 14483                           	opt callstack 0
 14484                           
 14485 ;; *************** function _strlen *****************
 14486 ;; Defined at:
 14487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  s               2    4[COMRAM] PTR const unsigned char 
 14490 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1513(20), 
 14491 ;;		 -> ValidateCmd@ConfName_1509(20), ValidateCmd@ConfName(20), STR_45(9), STR_44(12), 
 14492 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;  a               2    6[COMRAM] PTR const unsigned char 
 14495 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1513(20), 
 14496 ;;		 -> ValidateCmd@ConfName_1509(20), ValidateCmd@ConfName(20), STR_45(9), STR_44(12), 
 14497 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 14498 ;; Return value:  Size  Location     Type
 14499 ;;                  2    4[COMRAM] unsigned int 
 14500 ;; Registers used:
 14501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14502 ;; Tracked objects:
 14503 ;;		On entry : 0/0
 14504 ;;		On exit  : 0/0
 14505 ;;		Unchanged: 0/0
 14506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14511 ;;Total ram usage:        4 bytes
 14512 ;; Hardware stack levels used:    1
 14513 ;; Hardware stack levels required when called:    4
 14514 ;; This function calls:
 14515 ;;		Nothing
 14516 ;; This function is called by:
 14517 ;;		_ReadRX232
 14518 ;;		_SaveCardDat
 14519 ;;		_pad
 14520 ;;		_stoa
 14521 ;;		_strcat
 14522 ;; This function uses a non-reentrant model
 14523 ;;
 14524                           
 14525                           	psect	text69
 14526  003B34                     __ptext69:
 14527                           	opt callstack 0
 14528  003B34                     _strlen:
 14529                           	opt callstack 21
 14530  003B34  C005  F007         	movff	strlen@s,strlen@a
 14531  003B38  C006  F008         	movff	strlen@s+1,strlen@a+1
 14532  003B3C  EFA2  F01D         	goto	l6182
 14533  003B40                     l6180:
 14534  003B40  4A05               	infsnz	strlen@s^0,f,c
 14535  003B42  2A06               	incf	(strlen@s+1)^0,f,c
 14536  003B44                     l6182:
 14537  003B44  C005  FFF6         	movff	strlen@s,tblptrl
 14538  003B48  C006  FFF7         	movff	strlen@s+1,tblptrh
 14539  003B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 14540  003B4E  6EF8               	movwf	tblptru,c
 14541  003B50  0E0E               	movlw	(high __ramtop+-1)
 14542  003B52  64F7               	cpfsgt	tblptrh,c
 14543  003B54  D003               	bra	u5447
 14544  003B56  0008               	tblrd		*
 14545  003B58  50F5               	movf	tablat,w,c
 14546  003B5A  D005               	bra	u5440
 14547  003B5C                     u5447:
 14548  003B5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14549  003B60  CFF7 FFEA          	movff	tblptrh,fsr0h
 14550  003B64  50EF               	movf	indf0,w,c
 14551  003B66                     u5440:
 14552  003B66  0900               	iorlw	0
 14553  003B68  A4D8               	btfss	status,2,c
 14554  003B6A  EFB9  F01D         	goto	u5451
 14555  003B6E  EFBB  F01D         	goto	u5450
 14556  003B72                     u5451:
 14557  003B72  EFA0  F01D         	goto	l6180
 14558  003B76                     u5450:
 14559  003B76  5007               	movf	strlen@a^0,w,c
 14560  003B78  5C05               	subwf	strlen@s^0,w,c
 14561  003B7A  6E05               	movwf	?_strlen^0,c
 14562  003B7C  5008               	movf	(strlen@a+1)^0,w,c
 14563  003B7E  5806               	subwfb	(strlen@s+1)^0,w,c
 14564  003B80  6E06               	movwf	(?_strlen+1)^0,c
 14565  003B82  0012               	return		;funcret
 14566  003B84                     __end_of_strlen:
 14567                           	opt callstack 0
 14568                           
 14569 ;; *************** function _fputs *****************
 14570 ;; Defined at:
 14571 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14574 ;;		 -> dbuf(32), 
 14575 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14576 ;;		 -> NULL(0), 
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;  i               2   20[COMRAM] int 
 14579 ;;  c               1   19[COMRAM] unsigned char 
 14580 ;; Return value:  Size  Location     Type
 14581 ;;                  2   15[COMRAM] int 
 14582 ;; Registers used:
 14583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14584 ;; Tracked objects:
 14585 ;;		On entry : 0/0
 14586 ;;		On exit  : 0/0
 14587 ;;		Unchanged: 0/0
 14588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14590 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14592 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14593 ;;Total ram usage:        7 bytes
 14594 ;; Hardware stack levels used:    1
 14595 ;; Hardware stack levels required when called:    7
 14596 ;; This function calls:
 14597 ;;		_fputc
 14598 ;; This function is called by:
 14599 ;;		_pad
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           	psect	text70
 14604  003CA6                     __ptext70:
 14605                           	opt callstack 0
 14606  003CA6                     _fputs:
 14607                           	opt callstack 18
 14608  003CA6  0E00               	movlw	0
 14609  003CA8  6E16               	movwf	(fputs@i+1)^0,c
 14610  003CAA  0E00               	movlw	0
 14611  003CAC  6E15               	movwf	fputs@i^0,c
 14612  003CAE  EF64  F01E         	goto	l6194
 14613  003CB2                     l6190:
 14614  003CB2  C014  F007         	movff	fputs@c,fputc@c
 14615  003CB6  6A08               	clrf	(fputc@c+1)^0,c
 14616  003CB8  C012  F009         	movff	fputs@fp,fputc@fp
 14617  003CBC  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14618  003CC0  ECF3  F019         	call	_fputc	;wreg free
 14619  003CC4  4A15               	infsnz	fputs@i^0,f,c
 14620  003CC6  2A16               	incf	(fputs@i+1)^0,f,c
 14621  003CC8                     l6194:
 14622  003CC8  5015               	movf	fputs@i^0,w,c
 14623  003CCA  2410               	addwf	fputs@s^0,w,c
 14624  003CCC  6ED9               	movwf	fsr2l,c
 14625  003CCE  5016               	movf	(fputs@i+1)^0,w,c
 14626  003CD0  2011               	addwfc	(fputs@s+1)^0,w,c
 14627  003CD2  6EDA               	movwf	fsr2h,c
 14628  003CD4  50DF               	movf	indf2,w,c
 14629  003CD6  6E14               	movwf	fputs@c^0,c
 14630  003CD8  5014               	movf	fputs@c^0,w,c
 14631  003CDA  A4D8               	btfss	status,2,c
 14632  003CDC  EF72  F01E         	goto	u5461
 14633  003CE0  EF74  F01E         	goto	u5460
 14634  003CE4                     u5461:
 14635  003CE4  EF59  F01E         	goto	l6190
 14636  003CE8                     u5460:
 14637  003CE8  0012               	return		;funcret
 14638  003CEA                     __end_of_fputs:
 14639                           	opt callstack 0
 14640                           
 14641 ;; *************** function _fputc *****************
 14642 ;; Defined at:
 14643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;  c               2    6[COMRAM] int 
 14646 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14647 ;;		 -> NULL(0), 
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;		None
 14650 ;; Return value:  Size  Location     Type
 14651 ;;                  2    6[COMRAM] int 
 14652 ;; Registers used:
 14653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14654 ;; Tracked objects:
 14655 ;;		On entry : 0/0
 14656 ;;		On exit  : 0/0
 14657 ;;		Unchanged: 0/0
 14658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14662 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14663 ;;Total ram usage:        9 bytes
 14664 ;; Hardware stack levels used:    1
 14665 ;; Hardware stack levels required when called:    6
 14666 ;; This function calls:
 14667 ;;		_putch
 14668 ;; This function is called by:
 14669 ;;		_pad
 14670 ;;		_stoa
 14671 ;;		_vfpfcnvrt
 14672 ;;		_fputs
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text71
 14677  0033E6                     __ptext71:
 14678                           	opt callstack 0
 14679  0033E6                     _fputc:
 14680                           	opt callstack 18
 14681  0033E6  5009               	movf	fputc@fp^0,w,c
 14682  0033E8  100A               	iorwf	(fputc@fp+1)^0,w,c
 14683  0033EA  B4D8               	btfsc	status,2,c
 14684  0033EC  EFFA  F019         	goto	u5401
 14685  0033F0  EFFC  F019         	goto	u5400
 14686  0033F4                     u5401:
 14687  0033F4  EF05  F01A         	goto	l6168
 14688  0033F8                     u5400:
 14689  0033F8  5009               	movf	fputc@fp^0,w,c
 14690  0033FA  100A               	iorwf	(fputc@fp+1)^0,w,c
 14691  0033FC  A4D8               	btfss	status,2,c
 14692  0033FE  EF03  F01A         	goto	u5411
 14693  003402  EF05  F01A         	goto	u5410
 14694  003406                     u5411:
 14695  003406  EF0A  F01A         	goto	l6170
 14696  00340A                     u5410:
 14697  00340A                     l6168:
 14698  00340A  5007               	movf	fputc@c^0,w,c
 14699  00340C  ECD6  F020         	call	_putch
 14700  003410  EF3D  F01A         	goto	l2069
 14701  003414                     l6170:
 14702  003414  EE20 F004          	lfsr	2,4
 14703  003418  5009               	movf	fputc@fp^0,w,c
 14704  00341A  26D9               	addwf	fsr2l,f,c
 14705  00341C  500A               	movf	(fputc@fp+1)^0,w,c
 14706  00341E  22DA               	addwfc	fsr2h,f,c
 14707  003420  50DE               	movf	postinc2,w,c
 14708  003422  10DE               	iorwf	postinc2,w,c
 14709  003424  B4D8               	btfsc	status,2,c
 14710  003426  EF17  F01A         	goto	u5421
 14711  00342A  EF19  F01A         	goto	u5420
 14712  00342E                     u5421:
 14713  00342E  EF34  F01A         	goto	l6174
 14714  003432                     u5420:
 14715  003432  EE20 F004          	lfsr	2,4
 14716  003436  5009               	movf	fputc@fp^0,w,c
 14717  003438  26D9               	addwf	fsr2l,f,c
 14718  00343A  500A               	movf	(fputc@fp+1)^0,w,c
 14719  00343C  22DA               	addwfc	fsr2h,f,c
 14720  00343E  EE10 F002          	lfsr	1,2
 14721  003442  5009               	movf	fputc@fp^0,w,c
 14722  003444  26E1               	addwf	fsr1l,f,c
 14723  003446  500A               	movf	(fputc@fp+1)^0,w,c
 14724  003448  22E2               	addwfc	fsr1h,f,c
 14725  00344A  50DE               	movf	postinc2,w,c
 14726  00344C  5CE6               	subwf	postinc1,w,c
 14727  00344E  50E6               	movf	postinc1,w,c
 14728  003450  0A80               	xorlw	128
 14729  003452  6E0F               	movwf	(??_fputc+4)^0,c
 14730  003454  50DE               	movf	postinc2,w,c
 14731  003456  0A80               	xorlw	128
 14732  003458  580F               	subwfb	(??_fputc+4)^0,w,c
 14733  00345A  B0D8               	btfsc	status,0,c
 14734  00345C  EF32  F01A         	goto	u5431
 14735  003460  EF34  F01A         	goto	u5430
 14736  003464                     u5431:
 14737  003464  EF3D  F01A         	goto	l2069
 14738  003468                     u5430:
 14739  003468                     l6174:
 14740  003468  EE20 F002          	lfsr	2,2
 14741  00346C  5009               	movf	fputc@fp^0,w,c
 14742  00346E  26D9               	addwf	fsr2l,f,c
 14743  003470  500A               	movf	(fputc@fp+1)^0,w,c
 14744  003472  22DA               	addwfc	fsr2h,f,c
 14745  003474  2ADE               	incf	postinc2,f,c
 14746  003476  0E00               	movlw	0
 14747  003478  22DD               	addwfc	postdec2,f,c
 14748  00347A                     l2069:
 14749  00347A  0012               	return		;funcret
 14750  00347C                     __end_of_fputc:
 14751                           	opt callstack 0
 14752                           
 14753 ;; *************** function _putch *****************
 14754 ;; Defined at:
 14755 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  txData          1    wreg     unsigned char 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;  txData          1    5[COMRAM] unsigned char 
 14760 ;; Return value:  Size  Location     Type
 14761 ;;                  1    wreg      void 
 14762 ;; Registers used:
 14763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14773 ;;Total ram usage:        1 bytes
 14774 ;; Hardware stack levels used:    1
 14775 ;; Hardware stack levels required when called:    5
 14776 ;; This function calls:
 14777 ;;		_EUSART2_Write
 14778 ;; This function is called by:
 14779 ;;		_fputc
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           	psect	text72
 14784  0041AC                     __ptext72:
 14785                           	opt callstack 0
 14786  0041AC                     _putch:
 14787                           	opt callstack 18
 14788                           
 14789                           ;incstack = 0
 14790                           ;putch@txData stored from wreg
 14791  0041AC  6E06               	movwf	putch@txData^0,c
 14792  0041AE                     
 14793                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 14794  0041AE  5006               	movf	putch@txData^0,w,c
 14795  0041B0  EC6A  F01C         	call	_EUSART2_Write
 14796  0041B4  0012               	return		;funcret
 14797  0041B6                     __end_of_putch:
 14798                           	opt callstack 0
 14799                           
 14800 ;; *************** function _EUSART2_Write *****************
 14801 ;; Defined at:
 14802 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;  txData          1    wreg     unsigned char 
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;  txData          1    4[COMRAM] unsigned char 
 14807 ;; Return value:  Size  Location     Type
 14808 ;;                  1    wreg      void 
 14809 ;; Registers used:
 14810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14820 ;;Total ram usage:        1 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:    4
 14823 ;; This function calls:
 14824 ;;		Nothing
 14825 ;; This function is called by:
 14826 ;;		_putch
 14827 ;;		_ReadRX232
 14828 ;; This function uses a non-reentrant model
 14829 ;;
 14830                           
 14831                           	psect	text73
 14832  0038D4                     __ptext73:
 14833                           	opt callstack 0
 14834  0038D4                     _EUSART2_Write:
 14835                           	opt callstack 18
 14836                           
 14837                           ;incstack = 0
 14838                           ;EUSART2_Write@txData stored from wreg
 14839  0038D4  6E05               	movwf	EUSART2_Write@txData^0,c
 14840  0038D6                     l6146:
 14841                           
 14842                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 14843  0038D6  0100               	movlb	0	; () banked
 14844  0038D8  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 14845  0038DA  B4D8               	btfsc	status,2,c
 14846  0038DC  EF72  F01C         	goto	u5371
 14847  0038E0  EF74  F01C         	goto	u5370
 14848  0038E4                     u5371:
 14849  0038E4  EF6B  F01C         	goto	l6146
 14850  0038E8                     u5370:
 14851  0038E8                     
 14852                           ; BSR set to: 0
 14853                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 14854  0038E8  010E               	movlb	14	; () banked
 14855  0038EA  BDC5               	btfsc	197,6,b	;volatile
 14856  0038EC  EF7A  F01C         	goto	u5381
 14857  0038F0  EF7C  F01C         	goto	u5380
 14858  0038F4                     u5381:
 14859  0038F4  EF80  F01C         	goto	l325
 14860  0038F8                     u5380:
 14861  0038F8                     
 14862                           ; BSR set to: 14
 14863                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 14864  0038F8  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 14865                           
 14866                           ;mcc_generated_files/eusart2.c: 184:     }
 14867  0038FC  EF96  F01C         	goto	l6160
 14868  003900                     l325:
 14869                           
 14870                           ; BSR set to: 14
 14871                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 14872  003900  9DC5               	bcf	197,6,b	;volatile
 14873  003902                     
 14874                           ; BSR set to: 14
 14875                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 14876  003902  0E84               	movlw	low _eusart2TxBuffer
 14877  003904  0100               	movlb	0	; () banked
 14878  003906  25E3               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 14879  003908  6ED9               	movwf	fsr2l,c
 14880  00390A  6ADA               	clrf	fsr2h,c
 14881  00390C  0E03               	movlw	high _eusart2TxBuffer
 14882  00390E  22DA               	addwfc	fsr2h,f,c
 14883  003910  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 14884  003914                     
 14885                           ; BSR set to: 0
 14886  003914  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 14887  003916                     
 14888                           ; BSR set to: 0
 14889                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 14890  003916  0E1F               	movlw	31
 14891  003918  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 14892  00391A  EF91  F01C         	goto	u5391
 14893  00391E  EF93  F01C         	goto	u5390
 14894  003922                     u5391:
 14895  003922  EF95  F01C         	goto	l6158
 14896  003926                     u5390:
 14897  003926                     
 14898                           ; BSR set to: 0
 14899                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 14900  003926  0E00               	movlw	0
 14901  003928  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 14902  00392A                     l6158:
 14903                           
 14904                           ; BSR set to: 0
 14905                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 14906  00392A  07FF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14907  00392C                     l6160:
 14908                           
 14909                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 14910  00392C  010E               	movlb	14	; () banked
 14911  00392E  8DC5               	bsf	197,6,b	;volatile
 14912  003930                     
 14913                           ; BSR set to: 14
 14914  003930  0012               	return		;funcret
 14915  003932                     __end_of_EUSART2_Write:
 14916                           	opt callstack 0
 14917                           
 14918 ;; *************** function _abs *****************
 14919 ;; Defined at:
 14920 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  a               2   22[COMRAM] int 
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  2   22[COMRAM] int 
 14927 ;; Registers used:
 14928 ;;		wreg, status,2, status,0
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14938 ;;Total ram usage:        4 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:    4
 14941 ;; This function calls:
 14942 ;;		Nothing
 14943 ;; This function is called by:
 14944 ;;		_dtoa
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text74
 14949  003DF0                     __ptext74:
 14950                           	opt callstack 0
 14951  003DF0                     _abs:
 14952                           	opt callstack 22
 14953  003DF0  BE18               	btfsc	(abs@a+1)^0,7,c
 14954  003DF2  EF05  F01F         	goto	u5530
 14955  003DF6  5018               	movf	(abs@a+1)^0,w,c
 14956  003DF8  E106               	bnz	u5531
 14957  003DFA  0417               	decf	abs@a^0,w,c
 14958  003DFC  B0D8               	btfsc	status,0,c
 14959  003DFE  EF03  F01F         	goto	u5531
 14960  003E02  EF05  F01F         	goto	u5530
 14961  003E06                     u5531:
 14962  003E06  EF13  F01F         	goto	l1987
 14963  003E0A                     u5530:
 14964  003E0A  C017  F019         	movff	abs@a,??_abs
 14965  003E0E  C018  F01A         	movff	abs@a+1,??_abs+1
 14966  003E12  1E19               	comf	??_abs^0,f,c
 14967  003E14  1E1A               	comf	(??_abs+1)^0,f,c
 14968  003E16  4A19               	infsnz	??_abs^0,f,c
 14969  003E18  2A1A               	incf	(??_abs+1)^0,f,c
 14970  003E1A  C019  F017         	movff	??_abs,?_abs
 14971  003E1E  C01A  F018         	movff	??_abs+1,?_abs+1
 14972  003E22  EF17  F01F         	goto	l1990
 14973  003E26                     l1987:
 14974  003E26  C017  F017         	movff	abs@a,?_abs
 14975  003E2A  C018  F018         	movff	abs@a+1,?_abs+1
 14976  003E2E                     l1990:
 14977  003E2E  0012               	return		;funcret
 14978  003E30                     __end_of_abs:
 14979                           	opt callstack 0
 14980                           
 14981 ;; *************** function ___aomod *****************
 14982 ;; Defined at:
 14983 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;  dividend        8    4[COMRAM] long long 
 14986 ;;  divisor         8   12[COMRAM] long long 
 14987 ;; Auto vars:     Size  Location     Type
 14988 ;;  sign            1   21[COMRAM] unsigned char 
 14989 ;;  counter         1   20[COMRAM] unsigned char 
 14990 ;; Return value:  Size  Location     Type
 14991 ;;                  8    4[COMRAM] long long 
 14992 ;; Registers used:
 14993 ;;		wreg, status,2, status,0
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14999 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15002 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15003 ;;Total ram usage:       18 bytes
 15004 ;; Hardware stack levels used:    1
 15005 ;; Hardware stack levels required when called:    4
 15006 ;; This function calls:
 15007 ;;		Nothing
 15008 ;; This function is called by:
 15009 ;;		_dtoa
 15010 ;; This function uses a non-reentrant model
 15011 ;;
 15012                           
 15013                           	psect	text75
 15014  002444                     __ptext75:
 15015                           	opt callstack 0
 15016  002444                     ___aomod:
 15017                           	opt callstack 22
 15018  002444  0E00               	movlw	0
 15019  002446  6E16               	movwf	___aomod@sign^0,c
 15020  002448  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 15021  00244A  EF2B  F012         	goto	u5700
 15022  00244E  EF29  F012         	goto	u5701
 15023  002452                     u5701:
 15024  002452  EF3D  F012         	goto	l6306
 15025  002456                     u5700:
 15026  002456  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 15027  002458  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 15028  00245A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 15029  00245C  1E09               	comf	(___aomod@dividend+4)^0,f,c
 15030  00245E  1E08               	comf	(___aomod@dividend+3)^0,f,c
 15031  002460  1E07               	comf	(___aomod@dividend+2)^0,f,c
 15032  002462  1E06               	comf	(___aomod@dividend+1)^0,f,c
 15033  002464  6C05               	negf	___aomod@dividend^0,c
 15034  002466  0E00               	movlw	0
 15035  002468  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 15036  00246A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 15037  00246C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 15038  00246E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 15039  002470  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 15040  002472  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 15041  002474  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 15042  002476  0E01               	movlw	1
 15043  002478  6E16               	movwf	___aomod@sign^0,c
 15044  00247A                     l6306:
 15045  00247A  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 15046  00247C  EF44  F012         	goto	u5710
 15047  002480  EF42  F012         	goto	u5711
 15048  002484                     u5711:
 15049  002484  EF54  F012         	goto	l6310
 15050  002488                     u5710:
 15051  002488  1E14               	comf	(___aomod@divisor+7)^0,f,c
 15052  00248A  1E13               	comf	(___aomod@divisor+6)^0,f,c
 15053  00248C  1E12               	comf	(___aomod@divisor+5)^0,f,c
 15054  00248E  1E11               	comf	(___aomod@divisor+4)^0,f,c
 15055  002490  1E10               	comf	(___aomod@divisor+3)^0,f,c
 15056  002492  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 15057  002494  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 15058  002496  6C0D               	negf	___aomod@divisor^0,c
 15059  002498  0E00               	movlw	0
 15060  00249A  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 15061  00249C  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 15062  00249E  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 15063  0024A0  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 15064  0024A2  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 15065  0024A4  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 15066  0024A6  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 15067  0024A8                     l6310:
 15068  0024A8  500D               	movf	___aomod@divisor^0,w,c
 15069  0024AA  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 15070  0024AC  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 15071  0024AE  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 15072  0024B0  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 15073  0024B2  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 15074  0024B4  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 15075  0024B6  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 15076  0024B8  B4D8               	btfsc	status,2,c
 15077  0024BA  EF61  F012         	goto	u5721
 15078  0024BE  EF63  F012         	goto	u5720
 15079  0024C2                     u5721:
 15080  0024C2  EFAB  F012         	goto	l6326
 15081  0024C6                     u5720:
 15082  0024C6  0E01               	movlw	1
 15083  0024C8  6E15               	movwf	___aomod@counter^0,c
 15084  0024CA  EF71  F012         	goto	l6316
 15085  0024CE                     l6314:
 15086  0024CE  90D8               	bcf	status,0,c
 15087  0024D0  360D               	rlcf	___aomod@divisor^0,f,c
 15088  0024D2  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 15089  0024D4  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 15090  0024D6  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 15091  0024D8  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 15092  0024DA  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 15093  0024DC  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 15094  0024DE  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 15095  0024E0  2A15               	incf	___aomod@counter^0,f,c
 15096  0024E2                     l6316:
 15097  0024E2  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 15098  0024E4  EF76  F012         	goto	u5731
 15099  0024E8  EF78  F012         	goto	u5730
 15100  0024EC                     u5731:
 15101  0024EC  EF67  F012         	goto	l6314
 15102  0024F0                     u5730:
 15103  0024F0                     l6318:
 15104  0024F0  500D               	movf	___aomod@divisor^0,w,c
 15105  0024F2  5C05               	subwf	___aomod@dividend^0,w,c
 15106  0024F4  500E               	movf	(___aomod@divisor+1)^0,w,c
 15107  0024F6  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 15108  0024F8  500F               	movf	(___aomod@divisor+2)^0,w,c
 15109  0024FA  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 15110  0024FC  5010               	movf	(___aomod@divisor+3)^0,w,c
 15111  0024FE  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 15112  002500  5011               	movf	(___aomod@divisor+4)^0,w,c
 15113  002502  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 15114  002504  5012               	movf	(___aomod@divisor+5)^0,w,c
 15115  002506  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 15116  002508  5013               	movf	(___aomod@divisor+6)^0,w,c
 15117  00250A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 15118  00250C  5014               	movf	(___aomod@divisor+7)^0,w,c
 15119  00250E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 15120  002510  A0D8               	btfss	status,0,c
 15121  002512  EF8D  F012         	goto	u5741
 15122  002516  EF8F  F012         	goto	u5740
 15123  00251A                     u5741:
 15124  00251A  EF9F  F012         	goto	l6322
 15125  00251E                     u5740:
 15126  00251E  500D               	movf	___aomod@divisor^0,w,c
 15127  002520  5E05               	subwf	___aomod@dividend^0,f,c
 15128  002522  500E               	movf	(___aomod@divisor+1)^0,w,c
 15129  002524  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 15130  002526  500F               	movf	(___aomod@divisor+2)^0,w,c
 15131  002528  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 15132  00252A  5010               	movf	(___aomod@divisor+3)^0,w,c
 15133  00252C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 15134  00252E  5011               	movf	(___aomod@divisor+4)^0,w,c
 15135  002530  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 15136  002532  5012               	movf	(___aomod@divisor+5)^0,w,c
 15137  002534  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 15138  002536  5013               	movf	(___aomod@divisor+6)^0,w,c
 15139  002538  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 15140  00253A  5014               	movf	(___aomod@divisor+7)^0,w,c
 15141  00253C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 15142  00253E                     l6322:
 15143  00253E  90D8               	bcf	status,0,c
 15144  002540  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 15145  002542  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 15146  002544  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 15147  002546  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 15148  002548  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 15149  00254A  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 15150  00254C  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 15151  00254E  320D               	rrcf	___aomod@divisor^0,f,c
 15152  002550  2E15               	decfsz	___aomod@counter^0,f,c
 15153  002552  EF78  F012         	goto	l6318
 15154  002556                     l6326:
 15155  002556  5016               	movf	___aomod@sign^0,w,c
 15156  002558  B4D8               	btfsc	status,2,c
 15157  00255A  EFB1  F012         	goto	u5751
 15158  00255E  EFB3  F012         	goto	u5750
 15159  002562                     u5751:
 15160  002562  EFC3  F012         	goto	l6330
 15161  002566                     u5750:
 15162  002566  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 15163  002568  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 15164  00256A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 15165  00256C  1E09               	comf	(___aomod@dividend+4)^0,f,c
 15166  00256E  1E08               	comf	(___aomod@dividend+3)^0,f,c
 15167  002570  1E07               	comf	(___aomod@dividend+2)^0,f,c
 15168  002572  1E06               	comf	(___aomod@dividend+1)^0,f,c
 15169  002574  6C05               	negf	___aomod@dividend^0,c
 15170  002576  0E00               	movlw	0
 15171  002578  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 15172  00257A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 15173  00257C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 15174  00257E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 15175  002580  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 15176  002582  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 15177  002584  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 15178  002586                     l6330:
 15179  002586  C005  F005         	movff	___aomod@dividend,?___aomod
 15180  00258A  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 15181  00258E  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 15182  002592  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 15183  002596  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 15184  00259A  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 15185  00259E  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 15186  0025A2  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 15187  0025A6  0012               	return		;funcret
 15188  0025A8                     __end_of___aomod:
 15189                           	opt callstack 0
 15190                           
 15191 ;; *************** function ___aodiv *****************
 15192 ;; Defined at:
 15193 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;  dividend        8    4[COMRAM] long long 
 15196 ;;  divisor         8   12[COMRAM] long long 
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;  quotient        8   22[COMRAM] long long 
 15199 ;;  sign            1   21[COMRAM] unsigned char 
 15200 ;;  counter         1   20[COMRAM] unsigned char 
 15201 ;; Return value:  Size  Location     Type
 15202 ;;                  8    4[COMRAM] long long 
 15203 ;; Registers used:
 15204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15205 ;; Tracked objects:
 15206 ;;		On entry : 0/0
 15207 ;;		On exit  : 0/0
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15210 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15211 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15213 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15214 ;;Total ram usage:       26 bytes
 15215 ;; Hardware stack levels used:    1
 15216 ;; Hardware stack levels required when called:    4
 15217 ;; This function calls:
 15218 ;;		Nothing
 15219 ;; This function is called by:
 15220 ;;		_dtoa
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224                           	psect	text76
 15225  002140                     __ptext76:
 15226                           	opt callstack 0
 15227  002140                     ___aodiv:
 15228                           	opt callstack 22
 15229  002140  0E00               	movlw	0
 15230  002142  6E16               	movwf	___aodiv@sign^0,c
 15231  002144  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 15232  002146  EFA9  F010         	goto	u5630
 15233  00214A  EFA7  F010         	goto	u5631
 15234  00214E                     u5631:
 15235  00214E  EFBB  F010         	goto	l6262
 15236  002152                     u5630:
 15237  002152  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 15238  002154  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 15239  002156  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 15240  002158  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 15241  00215A  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 15242  00215C  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 15243  00215E  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 15244  002160  6C0D               	negf	___aodiv@divisor^0,c
 15245  002162  0E00               	movlw	0
 15246  002164  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 15247  002166  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 15248  002168  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 15249  00216A  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 15250  00216C  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 15251  00216E  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 15252  002170  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 15253  002172  0E01               	movlw	1
 15254  002174  6E16               	movwf	___aodiv@sign^0,c
 15255  002176                     l6262:
 15256  002176  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 15257  002178  EFC2  F010         	goto	u5640
 15258  00217C  EFC0  F010         	goto	u5641
 15259  002180                     u5641:
 15260  002180  EFD4  F010         	goto	l6268
 15261  002184                     u5640:
 15262  002184  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 15263  002186  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 15264  002188  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 15265  00218A  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 15266  00218C  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 15267  00218E  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 15268  002190  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 15269  002192  6C05               	negf	___aodiv@dividend^0,c
 15270  002194  0E00               	movlw	0
 15271  002196  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 15272  002198  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 15273  00219A  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 15274  00219C  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 15275  00219E  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 15276  0021A0  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 15277  0021A2  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 15278  0021A4  0E01               	movlw	1
 15279  0021A6  1A16               	xorwf	___aodiv@sign^0,f,c
 15280  0021A8                     l6268:
 15281  0021A8  EE20  F017         	lfsr	2,___aodiv@quotient
 15282  0021AC  0E07               	movlw	7
 15283  0021AE                     u5651:
 15284  0021AE  6ADE               	clrf	postinc2,c
 15285  0021B0  06E8               	decf	wreg,f,c
 15286  0021B2  E2FD               	bc	u5651
 15287  0021B4  500D               	movf	___aodiv@divisor^0,w,c
 15288  0021B6  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 15289  0021B8  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 15290  0021BA  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 15291  0021BC  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 15292  0021BE  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 15293  0021C0  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 15294  0021C2  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 15295  0021C4  B4D8               	btfsc	status,2,c
 15296  0021C6  EFE7  F010         	goto	u5661
 15297  0021CA  EFE9  F010         	goto	u5660
 15298  0021CE                     u5661:
 15299  0021CE  EF3B  F011         	goto	l6290
 15300  0021D2                     u5660:
 15301  0021D2  0E01               	movlw	1
 15302  0021D4  6E15               	movwf	___aodiv@counter^0,c
 15303  0021D6  EFF7  F010         	goto	l6276
 15304  0021DA                     l6274:
 15305  0021DA  90D8               	bcf	status,0,c
 15306  0021DC  360D               	rlcf	___aodiv@divisor^0,f,c
 15307  0021DE  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 15308  0021E0  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 15309  0021E2  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 15310  0021E4  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 15311  0021E6  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 15312  0021E8  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 15313  0021EA  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 15314  0021EC  2A15               	incf	___aodiv@counter^0,f,c
 15315  0021EE                     l6276:
 15316  0021EE  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 15317  0021F0  EFFC  F010         	goto	u5671
 15318  0021F4  EFFE  F010         	goto	u5670
 15319  0021F8                     u5671:
 15320  0021F8  EFED  F010         	goto	l6274
 15321  0021FC                     u5670:
 15322  0021FC                     l6278:
 15323  0021FC  90D8               	bcf	status,0,c
 15324  0021FE  3617               	rlcf	___aodiv@quotient^0,f,c
 15325  002200  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 15326  002202  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 15327  002204  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 15328  002206  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 15329  002208  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 15330  00220A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 15331  00220C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 15332  00220E  500D               	movf	___aodiv@divisor^0,w,c
 15333  002210  5C05               	subwf	___aodiv@dividend^0,w,c
 15334  002212  500E               	movf	(___aodiv@divisor+1)^0,w,c
 15335  002214  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 15336  002216  500F               	movf	(___aodiv@divisor+2)^0,w,c
 15337  002218  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 15338  00221A  5010               	movf	(___aodiv@divisor+3)^0,w,c
 15339  00221C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 15340  00221E  5011               	movf	(___aodiv@divisor+4)^0,w,c
 15341  002220  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 15342  002222  5012               	movf	(___aodiv@divisor+5)^0,w,c
 15343  002224  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 15344  002226  5013               	movf	(___aodiv@divisor+6)^0,w,c
 15345  002228  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 15346  00222A  5014               	movf	(___aodiv@divisor+7)^0,w,c
 15347  00222C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 15348  00222E  A0D8               	btfss	status,0,c
 15349  002230  EF1C  F011         	goto	u5681
 15350  002234  EF1E  F011         	goto	u5680
 15351  002238                     u5681:
 15352  002238  EF2F  F011         	goto	l6286
 15353  00223C                     u5680:
 15354  00223C  500D               	movf	___aodiv@divisor^0,w,c
 15355  00223E  5E05               	subwf	___aodiv@dividend^0,f,c
 15356  002240  500E               	movf	(___aodiv@divisor+1)^0,w,c
 15357  002242  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 15358  002244  500F               	movf	(___aodiv@divisor+2)^0,w,c
 15359  002246  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 15360  002248  5010               	movf	(___aodiv@divisor+3)^0,w,c
 15361  00224A  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 15362  00224C  5011               	movf	(___aodiv@divisor+4)^0,w,c
 15363  00224E  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 15364  002250  5012               	movf	(___aodiv@divisor+5)^0,w,c
 15365  002252  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 15366  002254  5013               	movf	(___aodiv@divisor+6)^0,w,c
 15367  002256  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 15368  002258  5014               	movf	(___aodiv@divisor+7)^0,w,c
 15369  00225A  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 15370  00225C  8017               	bsf	___aodiv@quotient^0,0,c
 15371  00225E                     l6286:
 15372  00225E  90D8               	bcf	status,0,c
 15373  002260  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 15374  002262  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 15375  002264  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 15376  002266  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 15377  002268  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 15378  00226A  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 15379  00226C  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 15380  00226E  320D               	rrcf	___aodiv@divisor^0,f,c
 15381  002270  2E15               	decfsz	___aodiv@counter^0,f,c
 15382  002272  EFFE  F010         	goto	l6278
 15383  002276                     l6290:
 15384  002276  5016               	movf	___aodiv@sign^0,w,c
 15385  002278  B4D8               	btfsc	status,2,c
 15386  00227A  EF41  F011         	goto	u5691
 15387  00227E  EF43  F011         	goto	u5690
 15388  002282                     u5691:
 15389  002282  EF53  F011         	goto	l6294
 15390  002286                     u5690:
 15391  002286  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 15392  002288  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 15393  00228A  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 15394  00228C  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 15395  00228E  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 15396  002290  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 15397  002292  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 15398  002294  6C17               	negf	___aodiv@quotient^0,c
 15399  002296  0E00               	movlw	0
 15400  002298  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 15401  00229A  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 15402  00229C  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 15403  00229E  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 15404  0022A0  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 15405  0022A2  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 15406  0022A4  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 15407  0022A6                     l6294:
 15408  0022A6  C017  F005         	movff	___aodiv@quotient,?___aodiv
 15409  0022AA  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 15410  0022AE  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 15411  0022B2  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 15412  0022B6  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 15413  0022BA  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 15414  0022BE  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 15415  0022C2  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 15416  0022C6  0012               	return		;funcret
 15417  0022C8                     __end_of___aodiv:
 15418                           	opt callstack 0
 15419                           
 15420 ;; *************** function _atoi *****************
 15421 ;; Defined at:
 15422 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;  s               2   11[COMRAM] PTR const unsigned char 
 15425 ;;		 -> STR_76(12), STR_74(13), STR_73(17), STR_72(15), 
 15426 ;;		 -> STR_71(33), STR_69(38), STR_68(58), STR_67(17), 
 15427 ;;		 -> STR_66(16), STR_65(4), STR_64(15), STR_63(19), 
 15428 ;;		 -> STR_62(32), STR_61(33), STR_60(37), STR_59(44), 
 15429 ;;		 -> STR_58(22), STR_57(75), STR_56(53), STR_55(69), 
 15430 ;;		 -> STR_54(54), STR_53(52), STR_52(40), STR_51(30), 
 15431 ;;		 -> STR_50(43), STR_49(73), STR_48(42), STR_47(36), 
 15432 ;;		 -> STR_46(34), STR_43(42), STR_42(22), STR_41(21), 
 15433 ;;		 -> STR_40(20), STR_39(19), STR_38(40), STR_28(32), 
 15434 ;;		 -> STR_27(37), STR_26(16), STR_25(24), STR_24(4), 
 15435 ;;		 -> STR_23(25), STR_22(28), STR_21(15), STR_20(29), 
 15436 ;;		 -> STR_19(26), STR_18(26), STR_17(24), STR_16(22), 
 15437 ;;		 -> STR_15(22), STR_14(26), STR_13(36), STR_12(4), 
 15438 ;;		 -> STR_11(23), STR_10(34), STR_9(28), STR_8(54), 
 15439 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 15440 ;;		 -> STR_2(31), STR_1(21), 
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;  n               2   24[COMRAM] int 
 15443 ;;  neg             2   17[COMRAM] int 
 15444 ;; Return value:  Size  Location     Type
 15445 ;;                  2   11[COMRAM] int 
 15446 ;; Registers used:
 15447 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15448 ;; Tracked objects:
 15449 ;;		On entry : 0/0
 15450 ;;		On exit  : 0/0
 15451 ;;		Unchanged: 0/0
 15452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15454 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15456 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15457 ;;Total ram usage:       15 bytes
 15458 ;; Hardware stack levels used:    1
 15459 ;; Hardware stack levels required when called:    5
 15460 ;; This function calls:
 15461 ;;		___wmul
 15462 ;;		_isdigit
 15463 ;;		_isspace
 15464 ;; This function is called by:
 15465 ;;		_vfpfcnvrt
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text77
 15470  001FA6                     __ptext77:
 15471                           	opt callstack 0
 15472  001FA6                     _atoi:
 15473                           	opt callstack 22
 15474  001FA6  0E00               	movlw	0
 15475  001FA8  6E1A               	movwf	(atoi@n+1)^0,c
 15476  001FAA  0E00               	movlw	0
 15477  001FAC  6E19               	movwf	atoi@n^0,c
 15478  001FAE  0E00               	movlw	0
 15479  001FB0  6E13               	movwf	(atoi@neg+1)^0,c
 15480  001FB2  0E00               	movlw	0
 15481  001FB4  6E12               	movwf	atoi@neg^0,c
 15482  001FB6  EFDF  F00F         	goto	l6594
 15483  001FBA                     l6592:
 15484  001FBA  4A0C               	infsnz	atoi@s^0,f,c
 15485  001FBC  2A0D               	incf	(atoi@s+1)^0,f,c
 15486  001FBE                     l6594:
 15487  001FBE  0E01               	movlw	1
 15488  001FC0  6E18               	movwf	_atoi$2344^0,c
 15489  001FC2  C00C  FFF6         	movff	atoi@s,tblptrl
 15490  001FC6  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15491  001FCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15492  001FCA  6AF8               	clrf	tblptru,c
 15493  001FCC                     	endif
 15494  001FCC                     	if	0	;tblptru may be non-zero
 15495  001FCC                     	endif
 15496  001FCC  0008               	tblrd		*
 15497  001FCE  50F5               	movf	tablat,w,c
 15498  001FD0  0A20               	xorlw	32
 15499  001FD2  B4D8               	btfsc	status,2,c
 15500  001FD4  EFEE  F00F         	goto	u6341
 15501  001FD8  EFF0  F00F         	goto	u6340
 15502  001FDC                     u6341:
 15503  001FDC  EF0E  F010         	goto	l6602
 15504  001FE0                     u6340:
 15505  001FE0  0EF7               	movlw	247
 15506  001FE2  6E0E               	movwf	??_atoi^0,c
 15507  001FE4  0EFF               	movlw	255
 15508  001FE6  6E0F               	movwf	(??_atoi+1)^0,c
 15509  001FE8  C00C  FFF6         	movff	atoi@s,tblptrl
 15510  001FEC  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15511  001FF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15512  001FF0  6AF8               	clrf	tblptru,c
 15513  001FF2                     	endif
 15514  001FF2                     	if	0	;tblptru may be non-zero
 15515  001FF2                     	endif
 15516  001FF2  0008               	tblrd		*
 15517  001FF4  50F5               	movf	tablat,w,c
 15518  001FF6  6E10               	movwf	(??_atoi+2)^0,c
 15519  001FF8  6A11               	clrf	(??_atoi+3)^0,c
 15520  001FFA  500E               	movf	??_atoi^0,w,c
 15521  001FFC  2610               	addwf	(??_atoi+2)^0,f,c
 15522  001FFE  500F               	movf	(??_atoi+1)^0,w,c
 15523  002000  2211               	addwfc	(??_atoi+3)^0,f,c
 15524  002002  5011               	movf	(??_atoi+3)^0,w,c
 15525  002004  E109               	bnz	u6350
 15526  002006  0E05               	movlw	5
 15527  002008  5C10               	subwf	(??_atoi+2)^0,w,c
 15528  00200A  A0D8               	btfss	status,0,c
 15529  00200C  EF0A  F010         	goto	u6351
 15530  002010  EF0C  F010         	goto	u6350
 15531  002014                     u6351:
 15532  002014  EF0E  F010         	goto	l6602
 15533  002018                     u6350:
 15534  002018  0E00               	movlw	0
 15535  00201A  6E18               	movwf	_atoi$2344^0,c
 15536  00201C                     l6602:
 15537  00201C  C018  F014         	movff	_atoi$2344,_atoi$2343
 15538  002020  6A15               	clrf	(_atoi$2343+1)^0,c
 15539  002022  5014               	movf	_atoi$2343^0,w,c
 15540  002024  1015               	iorwf	(_atoi$2343+1)^0,w,c
 15541  002026  A4D8               	btfss	status,2,c
 15542  002028  EF18  F010         	goto	u6361
 15543  00202C  EF1A  F010         	goto	u6360
 15544  002030                     u6361:
 15545  002030  EFDD  F00F         	goto	l6592
 15546  002034                     u6360:
 15547  002034  EF24  F010         	goto	l6612
 15548  002038                     l6608:
 15549  002038  0E00               	movlw	0
 15550  00203A  6E13               	movwf	(atoi@neg+1)^0,c
 15551  00203C  0E01               	movlw	1
 15552  00203E  6E12               	movwf	atoi@neg^0,c
 15553  002040                     l6610:
 15554  002040  4A0C               	infsnz	atoi@s^0,f,c
 15555  002042  2A0D               	incf	(atoi@s+1)^0,f,c
 15556  002044  EF5B  F010         	goto	l6618
 15557  002048                     l6612:
 15558  002048  C00C  FFF6         	movff	atoi@s,tblptrl
 15559  00204C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15560  002050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15561  002050  6AF8               	clrf	tblptru,c
 15562  002052                     	endif
 15563  002052                     	if	0	;tblptru may be non-zero
 15564  002052                     	endif
 15565  002052  0008               	tblrd		*
 15566  002054  50F5               	movf	tablat,w,c
 15567  002056  6E0E               	movwf	??_atoi^0,c
 15568  002058  6A0F               	clrf	(??_atoi+1)^0,c
 15569                           
 15570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15571                           ; Switch size 1, requested type "simple"
 15572                           ; Number of cases is 1, Range of values is 0 to 0
 15573                           ; switch strategies available:
 15574                           ; Name         Instructions Cycles
 15575                           ; simple_byte            4     3 (average)
 15576                           ;	Chosen strategy is simple_byte
 15577  00205A  500F               	movf	(??_atoi+1)^0,w,c
 15578  00205C  0A00               	xorlw	0	; case 0
 15579  00205E  B4D8               	btfsc	status,2,c
 15580  002060  EF34  F010         	goto	l7980
 15581  002064  EF5B  F010         	goto	l6618
 15582  002068                     l7980:
 15583                           
 15584                           ; Switch size 1, requested type "simple"
 15585                           ; Number of cases is 2, Range of values is 43 to 45
 15586                           ; switch strategies available:
 15587                           ; Name         Instructions Cycles
 15588                           ; simple_byte            7     4 (average)
 15589                           ;	Chosen strategy is simple_byte
 15590  002068  500E               	movf	??_atoi^0,w,c
 15591  00206A  0A2B               	xorlw	43	; case 43
 15592  00206C  B4D8               	btfsc	status,2,c
 15593  00206E  EF20  F010         	goto	l6610
 15594  002072  0A06               	xorlw	6	; case 45
 15595  002074  B4D8               	btfsc	status,2,c
 15596  002076  EF1C  F010         	goto	l6608
 15597  00207A  EF5B  F010         	goto	l6618
 15598  00207E                     l6614:
 15599  00207E  C019  F005         	movff	atoi@n,___wmul@multiplier
 15600  002082  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 15601  002086  0E00               	movlw	0
 15602  002088  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 15603  00208A  0E0A               	movlw	10
 15604  00208C  6E07               	movwf	___wmul@multiplicand^0,c
 15605  00208E  EC10  F020         	call	___wmul	;wreg free
 15606  002092  C00C  FFF6         	movff	atoi@s,tblptrl
 15607  002096  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15608  00209A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15609  00209A  6AF8               	clrf	tblptru,c
 15610  00209C                     	endif
 15611  00209C                     	if	0	;tblptru may be non-zero
 15612  00209C                     	endif
 15613  00209C  0008               	tblrd		*
 15614  00209E  50F5               	movf	tablat,w,c
 15615  0020A0  5E05               	subwf	?___wmul^0,f,c
 15616  0020A2  0E00               	movlw	0
 15617  0020A4  5A06               	subwfb	(?___wmul+1)^0,f,c
 15618  0020A6  0E30               	movlw	48
 15619  0020A8  2405               	addwf	?___wmul^0,w,c
 15620  0020AA  6E19               	movwf	atoi@n^0,c
 15621  0020AC  0E00               	movlw	0
 15622  0020AE  2006               	addwfc	(?___wmul+1)^0,w,c
 15623  0020B0  6E1A               	movwf	(atoi@n+1)^0,c
 15624  0020B2  EF20  F010         	goto	l6610
 15625  0020B6                     l6618:
 15626  0020B6  0ED0               	movlw	208
 15627  0020B8  6E0E               	movwf	??_atoi^0,c
 15628  0020BA  0EFF               	movlw	255
 15629  0020BC  6E0F               	movwf	(??_atoi+1)^0,c
 15630  0020BE  C00C  FFF6         	movff	atoi@s,tblptrl
 15631  0020C2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15632  0020C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15633  0020C6  6AF8               	clrf	tblptru,c
 15634  0020C8                     	endif
 15635  0020C8                     	if	0	;tblptru may be non-zero
 15636  0020C8                     	endif
 15637  0020C8  0008               	tblrd		*
 15638  0020CA  50F5               	movf	tablat,w,c
 15639  0020CC  6E10               	movwf	(??_atoi+2)^0,c
 15640  0020CE  6A11               	clrf	(??_atoi+3)^0,c
 15641  0020D0  500E               	movf	??_atoi^0,w,c
 15642  0020D2  2610               	addwf	(??_atoi+2)^0,f,c
 15643  0020D4  500F               	movf	(??_atoi+1)^0,w,c
 15644  0020D6  2211               	addwfc	(??_atoi+3)^0,f,c
 15645  0020D8  5011               	movf	(??_atoi+3)^0,w,c
 15646  0020DA  E10A               	bnz	u6370
 15647  0020DC  0E0A               	movlw	10
 15648  0020DE  5C10               	subwf	(??_atoi+2)^0,w,c
 15649  0020E0  A0D8               	btfss	status,0,c
 15650  0020E2  EF75  F010         	goto	u6371
 15651  0020E6  EF78  F010         	goto	u6370
 15652  0020EA                     u6371:
 15653  0020EA  0E01               	movlw	1
 15654  0020EC  EF79  F010         	goto	u6380
 15655  0020F0                     u6370:
 15656  0020F0  0E00               	movlw	0
 15657  0020F2                     u6380:
 15658  0020F2  6E16               	movwf	_atoi$2345^0,c
 15659  0020F4  6A17               	clrf	(_atoi$2345+1)^0,c
 15660  0020F6  5016               	movf	_atoi$2345^0,w,c
 15661  0020F8  1017               	iorwf	(_atoi$2345+1)^0,w,c
 15662  0020FA  A4D8               	btfss	status,2,c
 15663  0020FC  EF82  F010         	goto	u6391
 15664  002100  EF84  F010         	goto	u6390
 15665  002104                     u6391:
 15666  002104  EF3F  F010         	goto	l6614
 15667  002108                     u6390:
 15668  002108  5012               	movf	atoi@neg^0,w,c
 15669  00210A  1013               	iorwf	(atoi@neg+1)^0,w,c
 15670  00210C  A4D8               	btfss	status,2,c
 15671  00210E  EF8B  F010         	goto	u6401
 15672  002112  EF8D  F010         	goto	u6400
 15673  002116                     u6401:
 15674  002116  EF9B  F010         	goto	l2018
 15675  00211A                     u6400:
 15676  00211A  C019  F00E         	movff	atoi@n,??_atoi
 15677  00211E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 15678  002122  1E0E               	comf	??_atoi^0,f,c
 15679  002124  1E0F               	comf	(??_atoi+1)^0,f,c
 15680  002126  4A0E               	infsnz	??_atoi^0,f,c
 15681  002128  2A0F               	incf	(??_atoi+1)^0,f,c
 15682  00212A  C00E  F00C         	movff	??_atoi,?_atoi
 15683  00212E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 15684  002132  EF9F  F010         	goto	l2021
 15685  002136                     l2018:
 15686  002136  C019  F00C         	movff	atoi@n,?_atoi
 15687  00213A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 15688  00213E                     l2021:
 15689  00213E  0012               	return		;funcret
 15690  002140                     __end_of_atoi:
 15691                           	opt callstack 0
 15692                           
 15693 ;; *************** function _isspace *****************
 15694 ;; Defined at:
 15695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15696 ;; Parameters:    Size  Location     Type
 15697 ;;  c               2    4[COMRAM] int 
 15698 ;; Auto vars:     Size  Location     Type
 15699 ;;		None
 15700 ;; Return value:  Size  Location     Type
 15701 ;;                  2    4[COMRAM] int 
 15702 ;; Registers used:
 15703 ;;		wreg, status,2, status,0
 15704 ;; Tracked objects:
 15705 ;;		On entry : 0/0
 15706 ;;		On exit  : 0/0
 15707 ;;		Unchanged: 0/0
 15708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15711 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15712 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15713 ;;Total ram usage:        7 bytes
 15714 ;; Hardware stack levels used:    1
 15715 ;; Hardware stack levels required when called:    4
 15716 ;; This function calls:
 15717 ;;		Nothing
 15718 ;; This function is called by:
 15719 ;;		_atoi
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text78
 15724  003A92                     __ptext78:
 15725                           	opt callstack 0
 15726  003A92                     _isspace:
 15727                           	opt callstack 22
 15728  003A92  0E01               	movlw	1
 15729  003A94  6E0B               	movwf	_isspace$2370^0,c
 15730  003A96  0E20               	movlw	32
 15731  003A98  1805               	xorwf	isspace@c^0,w,c
 15732  003A9A  1006               	iorwf	(isspace@c+1)^0,w,c
 15733  003A9C  B4D8               	btfsc	status,2,c
 15734  003A9E  EF53  F01D         	goto	u5831
 15735  003AA2  EF55  F01D         	goto	u5830
 15736  003AA6                     u5831:
 15737  003AA6  EF6E  F01D         	goto	l6380
 15738  003AAA                     u5830:
 15739  003AAA  0EF7               	movlw	247
 15740  003AAC  6E07               	movwf	??_isspace^0,c
 15741  003AAE  0EFF               	movlw	255
 15742  003AB0  6E08               	movwf	(??_isspace+1)^0,c
 15743  003AB2  C005  F009         	movff	isspace@c,??_isspace+2
 15744  003AB6  C006  F00A         	movff	isspace@c+1,??_isspace+3
 15745  003ABA  5007               	movf	??_isspace^0,w,c
 15746  003ABC  2609               	addwf	(??_isspace+2)^0,f,c
 15747  003ABE  5008               	movf	(??_isspace+1)^0,w,c
 15748  003AC0  220A               	addwfc	(??_isspace+3)^0,f,c
 15749  003AC2  500A               	movf	(??_isspace+3)^0,w,c
 15750  003AC4  E109               	bnz	u5840
 15751  003AC6  0E05               	movlw	5
 15752  003AC8  5C09               	subwf	(??_isspace+2)^0,w,c
 15753  003ACA  A0D8               	btfss	status,0,c
 15754  003ACC  EF6A  F01D         	goto	u5841
 15755  003AD0  EF6C  F01D         	goto	u5840
 15756  003AD4                     u5841:
 15757  003AD4  EF6E  F01D         	goto	l6380
 15758  003AD8                     u5840:
 15759  003AD8  0E00               	movlw	0
 15760  003ADA  6E0B               	movwf	_isspace$2370^0,c
 15761  003ADC                     l6380:
 15762  003ADC  C00B  F005         	movff	_isspace$2370,?_isspace
 15763  003AE0  6A06               	clrf	(?_isspace+1)^0,c
 15764  003AE2  0012               	return		;funcret
 15765  003AE4                     __end_of_isspace:
 15766                           	opt callstack 0
 15767                           
 15768 ;; *************** function _isdigit *****************
 15769 ;; Defined at:
 15770 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15771 ;; Parameters:    Size  Location     Type
 15772 ;;  c               2    4[COMRAM] int 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;		None
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  2    4[COMRAM] int 
 15777 ;; Registers used:
 15778 ;;		wreg, status,2, status,0
 15779 ;; Tracked objects:
 15780 ;;		On entry : 0/0
 15781 ;;		On exit  : 0/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15787 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15788 ;;Total ram usage:        6 bytes
 15789 ;; Hardware stack levels used:    1
 15790 ;; Hardware stack levels required when called:    4
 15791 ;; This function calls:
 15792 ;;		Nothing
 15793 ;; This function is called by:
 15794 ;;		_vfpfcnvrt
 15795 ;;		_atoi
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text79
 15800  003F14                     __ptext79:
 15801                           	opt callstack 0
 15802  003F14                     _isdigit:
 15803                           	opt callstack 23
 15804  003F14  0ED0               	movlw	208
 15805  003F16  6E07               	movwf	??_isdigit^0,c
 15806  003F18  0EFF               	movlw	255
 15807  003F1A  6E08               	movwf	(??_isdigit+1)^0,c
 15808  003F1C  C005  F009         	movff	isdigit@c,??_isdigit+2
 15809  003F20  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 15810  003F24  5007               	movf	??_isdigit^0,w,c
 15811  003F26  2609               	addwf	(??_isdigit+2)^0,f,c
 15812  003F28  5008               	movf	(??_isdigit+1)^0,w,c
 15813  003F2A  220A               	addwfc	(??_isdigit+3)^0,f,c
 15814  003F2C  500A               	movf	(??_isdigit+3)^0,w,c
 15815  003F2E  E10A               	bnz	u5610
 15816  003F30  0E0A               	movlw	10
 15817  003F32  5C09               	subwf	(??_isdigit+2)^0,w,c
 15818  003F34  A0D8               	btfss	status,0,c
 15819  003F36  EF9F  F01F         	goto	u5611
 15820  003F3A  EFA2  F01F         	goto	u5610
 15821  003F3E                     u5611:
 15822  003F3E  0E01               	movlw	1
 15823  003F40  EFA3  F01F         	goto	u5620
 15824  003F44                     u5610:
 15825  003F44  0E00               	movlw	0
 15826  003F46                     u5620:
 15827  003F46  6E05               	movwf	?_isdigit^0,c
 15828  003F48  6A06               	clrf	(?_isdigit+1)^0,c
 15829  003F4A  0012               	return		;funcret
 15830  003F4C                     __end_of_isdigit:
 15831                           	opt callstack 0
 15832                           
 15833 ;; *************** function ___wmul *****************
 15834 ;; Defined at:
 15835 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15836 ;; Parameters:    Size  Location     Type
 15837 ;;  multiplier      2    4[COMRAM] unsigned int 
 15838 ;;  multiplicand    2    6[COMRAM] unsigned int 
 15839 ;; Auto vars:     Size  Location     Type
 15840 ;;  product         2    8[COMRAM] unsigned int 
 15841 ;; Return value:  Size  Location     Type
 15842 ;;                  2    4[COMRAM] unsigned int 
 15843 ;; Registers used:
 15844 ;;		wreg, status,2, status,0, prodl, prodh
 15845 ;; Tracked objects:
 15846 ;;		On entry : 0/0
 15847 ;;		On exit  : 0/0
 15848 ;;		Unchanged: 0/0
 15849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15854 ;;Total ram usage:        6 bytes
 15855 ;; Hardware stack levels used:    1
 15856 ;; Hardware stack levels required when called:    4
 15857 ;; This function calls:
 15858 ;;		Nothing
 15859 ;; This function is called by:
 15860 ;;		_atoi
 15861 ;; This function uses a non-reentrant model
 15862 ;;
 15863                           
 15864                           	psect	text80
 15865  004020                     __ptext80:
 15866                           	opt callstack 0
 15867  004020                     ___wmul:
 15868                           	opt callstack 22
 15869  004020  5005               	movf	___wmul@multiplier^0,w,c
 15870  004022  0207               	mulwf	___wmul@multiplicand^0,c
 15871  004024  CFF3 F009          	movff	prodl,___wmul@product
 15872  004028  CFF4 F00A          	movff	prodh,___wmul@product+1
 15873  00402C  5005               	movf	___wmul@multiplier^0,w,c
 15874  00402E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 15875  004030  50F3               	movf	243,w,c
 15876  004032  260A               	addwf	(___wmul@product+1)^0,f,c
 15877  004034  5006               	movf	(___wmul@multiplier+1)^0,w,c
 15878  004036  0207               	mulwf	___wmul@multiplicand^0,c
 15879  004038  50F3               	movf	243,w,c
 15880  00403A  260A               	addwf	(___wmul@product+1)^0,f,c
 15881  00403C  C009  F005         	movff	___wmul@product,?___wmul
 15882  004040  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 15883  004044  0012               	return		;funcret
 15884  004046                     __end_of___wmul:
 15885                           	opt callstack 0
 15886                           
 15887 ;; *************** function _EUSART2_is_tx_ready *****************
 15888 ;; Defined at:
 15889 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;		None
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;		None
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  1    wreg      _Bool 
 15896 ;; Registers used:
 15897 ;;		wreg, status,2
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;Total ram usage:        0 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:    4
 15910 ;; This function calls:
 15911 ;;		Nothing
 15912 ;; This function is called by:
 15913 ;;		_PrintModRespon
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           	psect	text81
 15918  0040FC                     __ptext81:
 15919                           	opt callstack 0
 15920  0040FC                     _EUSART2_is_tx_ready:
 15921                           	opt callstack 25
 15922  0040FC                     
 15923                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 15924  0040FC  0100               	movlb	0	; () banked
 15925  0040FE  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15926  004100  A4D8               	btfss	status,2,c
 15927  004102  EF85  F020         	goto	u6741
 15928  004106  EF88  F020         	goto	u6740
 15929  00410A                     u6741:
 15930  00410A  0E01               	movlw	1
 15931  00410C  EF89  F020         	goto	u6750
 15932  004110                     u6740:
 15933  004110  0E00               	movlw	0
 15934  004112                     u6750:
 15935  004112                     
 15936                           ; BSR set to: 0
 15937  004112  0012               	return		;funcret
 15938  004114                     __end_of_EUSART2_is_tx_ready:
 15939                           	opt callstack 0
 15940                           
 15941 ;; *************** function _EUSART2_is_tx_done *****************
 15942 ;; Defined at:
 15943 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;		None
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      _Bool 
 15950 ;; Registers used:
 15951 ;;		wreg
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;Total ram usage:        0 bytes
 15962 ;; Hardware stack levels used:    1
 15963 ;; Hardware stack levels required when called:    4
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_PrintModRespon
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971                           	psect	text82
 15972  004114                     __ptext82:
 15973                           	opt callstack 0
 15974  004114                     _EUSART2_is_tx_done:
 15975                           	opt callstack 25
 15976  004114                     
 15977                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 15978  004114  010E               	movlb	14	; () banked
 15979  004116  B39E               	btfsc	158,1,b	;volatile
 15980  004118  EF90  F020         	goto	u6761
 15981  00411C  EF93  F020         	goto	u6760
 15982  004120                     u6761:
 15983  004120  0E01               	movlw	1
 15984  004122  EF94  F020         	goto	u6766
 15985  004126                     u6760:
 15986  004126  0E00               	movlw	0
 15987  004128                     u6766:
 15988  004128                     
 15989                           ; BSR set to: 14
 15990  004128  0012               	return		;funcret
 15991  00412A                     __end_of_EUSART2_is_tx_done:
 15992                           	opt callstack 0
 15993                           
 15994 ;; *************** function _ClearModbusRespon *****************
 15995 ;; Defined at:
 15996 ;;		line 397 in file "Modbus.c"
 15997 ;; Parameters:    Size  Location     Type
 15998 ;;		None
 15999 ;; Auto vars:     Size  Location     Type
 16000 ;;  i               2    4[COMRAM] int 
 16001 ;; Return value:  Size  Location     Type
 16002 ;;                  1    wreg      void 
 16003 ;; Registers used:
 16004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16005 ;; Tracked objects:
 16006 ;;		On entry : 0/0
 16007 ;;		On exit  : 0/0
 16008 ;;		Unchanged: 0/0
 16009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16014 ;;Total ram usage:        2 bytes
 16015 ;; Hardware stack levels used:    1
 16016 ;; Hardware stack levels required when called:    4
 16017 ;; This function calls:
 16018 ;;		Nothing
 16019 ;; This function is called by:
 16020 ;;		_main
 16021 ;; This function uses a non-reentrant model
 16022 ;;
 16023                           
 16024                           	psect	text83
 16025  003D2E                     __ptext83:
 16026                           	opt callstack 0
 16027  003D2E                     _ClearModbusRespon:
 16028                           	opt callstack 26
 16029  003D2E                     
 16030                           ;Modbus.c: 398:     int i = 0;
 16031  003D2E  0E00               	movlw	0
 16032  003D30  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 16033  003D32  0E00               	movlw	0
 16034  003D34  6E05               	movwf	ClearModbusRespon@i^0,c
 16035                           
 16036                           ;Modbus.c: 399:     for(i=0; i<32; i++ ){
 16037  003D36  0E00               	movlw	0
 16038  003D38  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 16039  003D3A  0E00               	movlw	0
 16040  003D3C  6E05               	movwf	ClearModbusRespon@i^0,c
 16041  003D3E                     l7452:
 16042                           
 16043                           ;Modbus.c: 400:         MBRespon[i] = 0xFF;
 16044  003D3E  0EA0               	movlw	low _MBRespon
 16045  003D40  2405               	addwf	ClearModbusRespon@i^0,w,c
 16046  003D42  6ED9               	movwf	fsr2l,c
 16047  003D44  0E02               	movlw	high _MBRespon
 16048  003D46  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 16049  003D48  6EDA               	movwf	fsr2h,c
 16050  003D4A  0EFF               	movlw	255
 16051  003D4C  6EDF               	movwf	indf2,c
 16052  003D4E                     
 16053                           ;Modbus.c: 401:     }
 16054  003D4E  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 16055  003D50  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 16056  003D52  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 16057  003D54  EFB5  F01E         	goto	u7381
 16058  003D58  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 16059  003D5A  E109               	bnz	u7380
 16060  003D5C  0E20               	movlw	32
 16061  003D5E  5C05               	subwf	ClearModbusRespon@i^0,w,c
 16062  003D60  A0D8               	btfss	status,0,c
 16063  003D62  EFB5  F01E         	goto	u7381
 16064  003D66  EFB7  F01E         	goto	u7380
 16065  003D6A                     u7381:
 16066  003D6A  EF9F  F01E         	goto	l7452
 16067  003D6E                     u7380:
 16068  003D6E  0012               	return		;funcret
 16069  003D70                     __end_of_ClearModbusRespon:
 16070                           	opt callstack 0
 16071                           
 16072 ;; *************** function _ClearModbusData *****************
 16073 ;; Defined at:
 16074 ;;		line 48 in file "Modbus.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;		None
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;  i               2    4[COMRAM] int 
 16079 ;; Return value:  Size  Location     Type
 16080 ;;                  1    wreg      void 
 16081 ;; Registers used:
 16082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16083 ;; Tracked objects:
 16084 ;;		On entry : 0/0
 16085 ;;		On exit  : 0/0
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16092 ;;Total ram usage:        2 bytes
 16093 ;; Hardware stack levels used:    1
 16094 ;; Hardware stack levels required when called:    4
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		_main
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text84
 16103  003B84                     __ptext84:
 16104                           	opt callstack 0
 16105  003B84                     _ClearModbusData:
 16106                           	opt callstack 26
 16107  003B84                     
 16108                           ;Modbus.c: 49:     int i = 0;
 16109  003B84  0E00               	movlw	0
 16110  003B86  6E06               	movwf	(ClearModbusData@i+1)^0,c
 16111  003B88  0E00               	movlw	0
 16112  003B8A  6E05               	movwf	ClearModbusData@i^0,c
 16113                           
 16114                           ;Modbus.c: 50:     for(i=0; i<99; i++ ){
 16115  003B8C  0E00               	movlw	0
 16116  003B8E  6E06               	movwf	(ClearModbusData@i+1)^0,c
 16117  003B90  0E00               	movlw	0
 16118  003B92  6E05               	movwf	ClearModbusData@i^0,c
 16119  003B94                     l7704:
 16120                           
 16121                           ;Modbus.c: 51:         ModbusData[i] = 0xFF;
 16122  003B94  0E00               	movlw	low _ModbusData
 16123  003B96  2405               	addwf	ClearModbusData@i^0,w,c
 16124  003B98  6ED9               	movwf	fsr2l,c
 16125  003B9A  0E02               	movlw	high _ModbusData
 16126  003B9C  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 16127  003B9E  6EDA               	movwf	fsr2h,c
 16128  003BA0  0EFF               	movlw	255
 16129  003BA2  6EDF               	movwf	indf2,c
 16130  003BA4                     
 16131                           ;Modbus.c: 52:     }
 16132  003BA4  4A05               	infsnz	ClearModbusData@i^0,f,c
 16133  003BA6  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 16134  003BA8  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 16135  003BAA  EFE0  F01D         	goto	u7601
 16136  003BAE  5006               	movf	(ClearModbusData@i+1)^0,w,c
 16137  003BB0  E109               	bnz	u7600
 16138  003BB2  0E63               	movlw	99
 16139  003BB4  5C05               	subwf	ClearModbusData@i^0,w,c
 16140  003BB6  A0D8               	btfss	status,0,c
 16141  003BB8  EFE0  F01D         	goto	u7601
 16142  003BBC  EFE2  F01D         	goto	u7600
 16143  003BC0                     u7601:
 16144  003BC0  EFCA  F01D         	goto	l7704
 16145  003BC4                     u7600:
 16146  003BC4                     
 16147                           ;Modbus.c: 54:     ModDataCnt = 0;
 16148  003BC4  0E00               	movlw	0
 16149  003BC6  0100               	movlb	0	; () banked
 16150  003BC8  6FD6               	movwf	(_ModDataCnt+1)& (0+255),b
 16151  003BCA  0E00               	movlw	0
 16152  003BCC  6FD5               	movwf	_ModDataCnt& (0+255),b
 16153  003BCE                     
 16154                           ; BSR set to: 0
 16155  003BCE  0012               	return		;funcret
 16156  003BD0                     __end_of_ClearModbusData:
 16157                           	opt callstack 0
 16158                           
 16159 ;; *************** function _INTERRUPT_InterruptManager *****************
 16160 ;; Defined at:
 16161 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 16162 ;; Parameters:    Size  Location     Type
 16163 ;;		None
 16164 ;; Auto vars:     Size  Location     Type
 16165 ;;		None
 16166 ;; Return value:  Size  Location     Type
 16167 ;;                  1    wreg      void 
 16168 ;; Registers used:
 16169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16170 ;; Tracked objects:
 16171 ;;		On entry : 0/0
 16172 ;;		On exit  : 0/0
 16173 ;;		Unchanged: 0/0
 16174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16179 ;;Total ram usage:        4 bytes
 16180 ;; Hardware stack levels used:    1
 16181 ;; Hardware stack levels required when called:    3
 16182 ;; This function calls:
 16183 ;;		Absolute function
 16184 ;;		_EUSART1_Receive_ISR
 16185 ;;		_EUSART1_Transmit_ISR
 16186 ;;		_EUSART2_Receive_ISR
 16187 ;;		_EUSART2_Transmit_ISR
 16188 ;; This function is called by:
 16189 ;;		Interrupt level 2
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	intcode
 16194  000008                     __pintcode:
 16195                           	opt callstack 0
 16196  000008                     _INTERRUPT_InterruptManager:
 16197                           	opt callstack 15
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;incstack = 0
 16201  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16202  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 16203  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16204  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 16205  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 16206  00001A                     
 16207                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 16208  00001A  ACF2               	btfss	242,6,c	;volatile
 16209  00001C  EF12  F000         	goto	i2u522_41
 16210  000020  EF14  F000         	goto	i2u522_40
 16211  000024                     i2u522_41:
 16212  000024  EF89  F000         	goto	i2l163
 16213  000028                     i2u522_40:
 16214  000028                     
 16215                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 16216  000028  010E               	movlb	14	; () banked
 16217  00002A  ADC5               	btfss	197,6,b	;volatile
 16218  00002C  EF1A  F000         	goto	i2u523_41
 16219  000030  EF1C  F000         	goto	i2u523_40
 16220  000034                     i2u523_41:
 16221  000034  EF32  F000         	goto	i2l154
 16222  000038                     i2u523_40:
 16223  000038                     
 16224                           ; BSR set to: 14
 16225  000038  ADCD               	btfss	205,6,b	;volatile
 16226  00003A  EF21  F000         	goto	i2u524_41
 16227  00003E  EF23  F000         	goto	i2u524_40
 16228  000042                     i2u524_41:
 16229  000042  EF32  F000         	goto	i2l154
 16230  000046                     i2u524_40:
 16231  000046                     
 16232                           ; BSR set to: 14
 16233                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 16234  000046  D802               	call	i2u525_48
 16235  000048  EF30  F000         	goto	i2u525_49
 16236  00004C                     i2u525_48:
 16237  00004C  0005               	push	
 16238  00004E  6EFA               	movwf	pclath,c
 16239  000050  0101               	movlb	1	; () banked
 16240  000052  51FC               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 16241  000054  6EFD               	movwf	tosl,c
 16242  000056  51FD               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 16243  000058  6EFE               	movwf	tosh,c
 16244  00005A  6AFF               	clrf	tosu,c
 16245  00005C  50FA               	movf	pclath,w,c
 16246  00005E  0012               	return		;indir
 16247  000060                     i2u525_49:
 16248                           
 16249                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 16250  000060  EF89  F000         	goto	i2l163
 16251  000064                     i2l154:
 16252                           
 16253                           ; BSR set to: 14
 16254  000064  AFC5               	btfss	197,7,b	;volatile
 16255  000066  EF37  F000         	goto	i2u526_41
 16256  00006A  EF39  F000         	goto	i2u526_40
 16257  00006E                     i2u526_41:
 16258  00006E  EF4F  F000         	goto	i2l156
 16259  000072                     i2u526_40:
 16260  000072                     
 16261                           ; BSR set to: 14
 16262  000072  AFCD               	btfss	205,7,b	;volatile
 16263  000074  EF3E  F000         	goto	i2u527_41
 16264  000078  EF40  F000         	goto	i2u527_40
 16265  00007C                     i2u527_41:
 16266  00007C  EF4F  F000         	goto	i2l156
 16267  000080                     i2u527_40:
 16268  000080                     
 16269                           ; BSR set to: 14
 16270                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 16271  000080  D802               	call	i2u528_48
 16272  000082  EF4D  F000         	goto	i2u528_49
 16273  000086                     i2u528_48:
 16274  000086  0005               	push	
 16275  000088  6EFA               	movwf	pclath,c
 16276  00008A  0101               	movlb	1	; () banked
 16277  00008C  51FA               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 16278  00008E  6EFD               	movwf	tosl,c
 16279  000090  51FB               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 16280  000092  6EFE               	movwf	tosh,c
 16281  000094  6AFF               	clrf	tosu,c
 16282  000096  50FA               	movf	pclath,w,c
 16283  000098  0012               	return		;indir
 16284  00009A                     i2u528_49:
 16285                           
 16286                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 16287  00009A  EF89  F000         	goto	i2l163
 16288  00009E                     i2l156:
 16289                           
 16290                           ; BSR set to: 14
 16291  00009E  A9C5               	btfss	197,4,b	;volatile
 16292  0000A0  EF54  F000         	goto	i2u529_41
 16293  0000A4  EF56  F000         	goto	i2u529_40
 16294  0000A8                     i2u529_41:
 16295  0000A8  EF6C  F000         	goto	i2l158
 16296  0000AC                     i2u529_40:
 16297  0000AC                     
 16298                           ; BSR set to: 14
 16299  0000AC  A9CD               	btfss	205,4,b	;volatile
 16300  0000AE  EF5B  F000         	goto	i2u530_41
 16301  0000B2  EF5D  F000         	goto	i2u530_40
 16302  0000B6                     i2u530_41:
 16303  0000B6  EF6C  F000         	goto	i2l158
 16304  0000BA                     i2u530_40:
 16305  0000BA                     
 16306                           ; BSR set to: 14
 16307                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 16308  0000BA  D802               	call	i2u531_48
 16309  0000BC  EF6A  F000         	goto	i2u531_49
 16310  0000C0                     i2u531_48:
 16311  0000C0  0005               	push	
 16312  0000C2  6EFA               	movwf	pclath,c
 16313  0000C4  0101               	movlb	1	; () banked
 16314  0000C6  51F8               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 16315  0000C8  6EFD               	movwf	tosl,c
 16316  0000CA  51F9               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 16317  0000CC  6EFE               	movwf	tosh,c
 16318  0000CE  6AFF               	clrf	tosu,c
 16319  0000D0  50FA               	movf	pclath,w,c
 16320  0000D2  0012               	return		;indir
 16321  0000D4                     i2u531_49:
 16322                           
 16323                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 16324  0000D4  EF89  F000         	goto	i2l163
 16325  0000D8                     i2l158:
 16326                           
 16327                           ; BSR set to: 14
 16328  0000D8  ABC5               	btfss	197,5,b	;volatile
 16329  0000DA  EF71  F000         	goto	i2u532_41
 16330  0000DE  EF73  F000         	goto	i2u532_40
 16331  0000E2                     i2u532_41:
 16332  0000E2  EF89  F000         	goto	i2l157
 16333  0000E6                     i2u532_40:
 16334  0000E6                     
 16335                           ; BSR set to: 14
 16336  0000E6  ABCD               	btfss	205,5,b	;volatile
 16337  0000E8  EF78  F000         	goto	i2u533_41
 16338  0000EC  EF7A  F000         	goto	i2u533_40
 16339  0000F0                     i2u533_41:
 16340  0000F0  EF89  F000         	goto	i2l157
 16341  0000F4                     i2u533_40:
 16342  0000F4                     
 16343                           ; BSR set to: 14
 16344                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 16345  0000F4  D802               	call	i2u534_48
 16346  0000F6  EF87  F000         	goto	i2u534_49
 16347  0000FA                     i2u534_48:
 16348  0000FA  0005               	push	
 16349  0000FC  6EFA               	movwf	pclath,c
 16350  0000FE  0101               	movlb	1	; () banked
 16351  000100  51F6               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 16352  000102  6EFD               	movwf	tosl,c
 16353  000104  51F7               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 16354  000106  6EFE               	movwf	tosh,c
 16355  000108  6AFF               	clrf	tosu,c
 16356  00010A  50FA               	movf	pclath,w,c
 16357  00010C  0012               	return		;indir
 16358  00010E                     i2u534_49:
 16359                           
 16360                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 16361  00010E  EF89  F000         	goto	i2l163
 16362  000112                     i2l157:
 16363  000112                     i2l163:
 16364  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 16365  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 16366  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 16367  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 16368  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16369  000124  0011               	retfie		f
 16370  000126                     __end_of_INTERRUPT_InterruptManager:
 16371                           	opt callstack 0
 16372                           
 16373 ;; *************** function _EUSART2_Transmit_ISR *****************
 16374 ;; Defined at:
 16375 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;		None
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;		None
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16393 ;;Total ram usage:        0 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; This function calls:
 16396 ;;		Nothing
 16397 ;; This function is called by:
 16398 ;;		_EUSART2_Initialize
 16399 ;;		_INTERRUPT_InterruptManager
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text86
 16404  003C1A                     __ptext86:
 16405                           	opt callstack 0
 16406  003C1A                     _EUSART2_Transmit_ISR:
 16407                           	opt callstack 17
 16408  003C1A                     
 16409                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 16410  003C1A  0E20               	movlw	32
 16411  003C1C  0100               	movlb	0	; () banked
 16412  003C1E  61FF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 16413  003C20  EF14  F01E         	goto	i2u475_41
 16414  003C24  EF16  F01E         	goto	i2u475_40
 16415  003C28                     i2u475_41:
 16416  003C28  EF2E  F01E         	goto	i2l337
 16417  003C2C                     i2u475_40:
 16418  003C2C                     
 16419                           ; BSR set to: 0
 16420                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 16421  003C2C  0E84               	movlw	low _eusart2TxBuffer
 16422  003C2E  25E2               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 16423  003C30  6ED9               	movwf	fsr2l,c
 16424  003C32  6ADA               	clrf	fsr2h,c
 16425  003C34  0E03               	movlw	high _eusart2TxBuffer
 16426  003C36  22DA               	addwfc	fsr2h,f,c
 16427  003C38  50DF               	movf	indf2,w,c
 16428  003C3A  010E               	movlb	14	; () banked
 16429  003C3C  6F9A               	movwf	154,b	;volatile
 16430  003C3E                     
 16431                           ; BSR set to: 14
 16432  003C3E  0100               	movlb	0	; () banked
 16433  003C40  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 16434  003C42                     
 16435                           ; BSR set to: 0
 16436                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 16437  003C42  0E1F               	movlw	31
 16438  003C44  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 16439  003C46  EF27  F01E         	goto	i2u476_41
 16440  003C4A  EF29  F01E         	goto	i2u476_40
 16441  003C4E                     i2u476_41:
 16442  003C4E  EF2B  F01E         	goto	i2l5554
 16443  003C52                     i2u476_40:
 16444  003C52                     
 16445                           ; BSR set to: 0
 16446                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 16447  003C52  0E00               	movlw	0
 16448  003C54  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 16449  003C56                     i2l5554:
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 16453  003C56  2BFF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 16454                           
 16455                           ;mcc_generated_files/eusart2.c: 220:     }
 16456  003C58  EF30  F01E         	goto	i2l340
 16457  003C5C                     i2l337:
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 16461  003C5C  010E               	movlb	14	; () banked
 16462  003C5E  9DC5               	bcf	197,6,b	;volatile
 16463  003C60                     i2l340:
 16464  003C60  0012               	return		;funcret
 16465  003C62                     __end_of_EUSART2_Transmit_ISR:
 16466                           	opt callstack 0
 16467                           
 16468 ;; *************** function _EUSART2_Receive_ISR *****************
 16469 ;; Defined at:
 16470 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;		None
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      void 
 16477 ;; Registers used:
 16478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16488 ;;Total ram usage:        0 bytes
 16489 ;; Hardware stack levels used:    1
 16490 ;; Hardware stack levels required when called:    2
 16491 ;; This function calls:
 16492 ;;		Absolute function
 16493 ;;		_EUSART2_DefaultErrorHandler
 16494 ;;		_EUSART2_DefaultFramingErrorHandler
 16495 ;;		_EUSART2_DefaultOverrunErrorHandler
 16496 ;;		_EUSART2_RxDataHandler
 16497 ;; This function is called by:
 16498 ;;		_EUSART2_Initialize
 16499 ;;		_INTERRUPT_InterruptManager
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text87
 16504  0030FE                     __ptext87:
 16505                           	opt callstack 0
 16506  0030FE                     _EUSART2_Receive_ISR:
 16507                           	opt callstack 15
 16508  0030FE                     
 16509                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 16510  0030FE  0E54               	movlw	low _eusart2RxStatusBuffer
 16511  003100  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16512  003102  6ED9               	movwf	fsr2l,c
 16513  003104  6ADA               	clrf	fsr2h,c
 16514  003106  0E01               	movlw	high _eusart2RxStatusBuffer
 16515  003108  22DA               	addwfc	fsr2h,f,c
 16516  00310A  0E00               	movlw	0
 16517  00310C  6EDF               	movwf	indf2,c
 16518  00310E                     
 16519                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 16520  00310E  010E               	movlb	14	; () banked
 16521  003110  A59D               	btfss	157,2,b	;volatile
 16522  003112  EF8D  F018         	goto	i2u477_41
 16523  003116  EF8F  F018         	goto	i2u477_40
 16524  00311A                     i2u477_41:
 16525  00311A  EFA3  F018         	goto	i2l5564
 16526  00311E                     i2u477_40:
 16527  00311E                     
 16528                           ; BSR set to: 14
 16529                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 16530  00311E  0E54               	movlw	low _eusart2RxStatusBuffer
 16531  003120  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16532  003122  6ED9               	movwf	fsr2l,c
 16533  003124  6ADA               	clrf	fsr2h,c
 16534  003126  0E01               	movlw	high _eusart2RxStatusBuffer
 16535  003128  22DA               	addwfc	fsr2h,f,c
 16536  00312A  0101               	movlb	1	; () banked
 16537  00312C  82DF               	bsf	indf2,1,c
 16538  00312E                     
 16539                           ; BSR set to: 1
 16540                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 16541  00312E  D802               	call	i2u478_48
 16542  003130  EFA3  F018         	goto	i2u478_49
 16543  003134                     i2u478_48:
 16544  003134  0005               	push	
 16545  003136  6EFA               	movwf	pclath,c
 16546  003138  51F4               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 16547  00313A  6EFD               	movwf	tosl,c
 16548  00313C  51F5               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 16549  00313E  6EFE               	movwf	tosh,c
 16550  003140  6AFF               	clrf	tosu,c
 16551  003142  50FA               	movf	pclath,w,c
 16552  003144  0012               	return		;indir
 16553  003146                     i2u478_49:
 16554  003146                     i2l5564:
 16555                           
 16556                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 16557  003146  010E               	movlb	14	; () banked
 16558  003148  A39D               	btfss	157,1,b	;volatile
 16559  00314A  EFA9  F018         	goto	i2u479_41
 16560  00314E  EFAB  F018         	goto	i2u479_40
 16561  003152                     i2u479_41:
 16562  003152  EFBF  F018         	goto	i2l5570
 16563  003156                     i2u479_40:
 16564  003156                     
 16565                           ; BSR set to: 14
 16566                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 16567  003156  0E54               	movlw	low _eusart2RxStatusBuffer
 16568  003158  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16569  00315A  6ED9               	movwf	fsr2l,c
 16570  00315C  6ADA               	clrf	fsr2h,c
 16571  00315E  0E01               	movlw	high _eusart2RxStatusBuffer
 16572  003160  22DA               	addwfc	fsr2h,f,c
 16573  003162  0101               	movlb	1	; () banked
 16574  003164  84DF               	bsf	indf2,2,c
 16575  003166                     
 16576                           ; BSR set to: 1
 16577                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 16578  003166  D802               	call	i2u480_48
 16579  003168  EFBF  F018         	goto	i2u480_49
 16580  00316C                     i2u480_48:
 16581  00316C  0005               	push	
 16582  00316E  6EFA               	movwf	pclath,c
 16583  003170  51F2               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 16584  003172  6EFD               	movwf	tosl,c
 16585  003174  51F3               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 16586  003176  6EFE               	movwf	tosh,c
 16587  003178  6AFF               	clrf	tosu,c
 16588  00317A  50FA               	movf	pclath,w,c
 16589  00317C  0012               	return		;indir
 16590  00317E                     i2u480_49:
 16591  00317E                     i2l5570:
 16592                           
 16593                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 16594  00317E  0E54               	movlw	low _eusart2RxStatusBuffer
 16595  003180  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16596  003182  6ED9               	movwf	fsr2l,c
 16597  003184  6ADA               	clrf	fsr2h,c
 16598  003186  0E01               	movlw	high _eusart2RxStatusBuffer
 16599  003188  22DA               	addwfc	fsr2h,f,c
 16600  00318A  50DF               	movf	indf2,w,c
 16601  00318C  B4D8               	btfsc	status,2,c
 16602  00318E  EFCB  F018         	goto	i2u481_41
 16603  003192  EFCD  F018         	goto	i2u481_40
 16604  003196                     i2u481_41:
 16605  003196  EFDC  F018         	goto	i2l5574
 16606  00319A                     i2u481_40:
 16607  00319A                     
 16608                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 16609  00319A  D802               	call	i2u482_48
 16610  00319C  EFDA  F018         	goto	i2u482_49
 16611  0031A0                     i2u482_48:
 16612  0031A0  0005               	push	
 16613  0031A2  6EFA               	movwf	pclath,c
 16614  0031A4  0101               	movlb	1	; () banked
 16615  0031A6  51F0               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 16616  0031A8  6EFD               	movwf	tosl,c
 16617  0031AA  51F1               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 16618  0031AC  6EFE               	movwf	tosh,c
 16619  0031AE  6AFF               	clrf	tosu,c
 16620  0031B0  50FA               	movf	pclath,w,c
 16621  0031B2  0012               	return		;indir
 16622  0031B4                     i2u482_49:
 16623                           
 16624                           ;mcc_generated_files/eusart2.c: 244:     } else {
 16625  0031B4  EFDE  F018         	goto	i2l347
 16626  0031B8                     i2l5574:
 16627                           
 16628                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 16629  0031B8  ECBD  F01F         	call	_EUSART2_RxDataHandler	;wreg free
 16630  0031BC                     i2l347:
 16631  0031BC  0012               	return		;funcret
 16632  0031BE                     __end_of_EUSART2_Receive_ISR:
 16633                           	opt callstack 0
 16634                           
 16635 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 16636 ;; Defined at:
 16637 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		None
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16655 ;;Total ram usage:        0 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; This function calls:
 16658 ;;		Nothing
 16659 ;; This function is called by:
 16660 ;;		_EUSART2_Initialize
 16661 ;;		_EUSART2_Receive_ISR
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           	psect	text88
 16666  0041B6                     __ptext88:
 16667                           	opt callstack 0
 16668  0041B6                     _EUSART2_DefaultOverrunErrorHandler:
 16669                           	opt callstack 16
 16670  0041B6                     
 16671                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 16672  0041B6  010E               	movlb	14	; () banked
 16673  0041B8  999D               	bcf	157,4,b	;volatile
 16674                           
 16675                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 16676  0041BA  899D               	bsf	157,4,b	;volatile
 16677  0041BC                     
 16678                           ; BSR set to: 14
 16679  0041BC  0012               	return		;funcret
 16680  0041BE                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 16681                           	opt callstack 0
 16682                           
 16683 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 16684 ;; Defined at:
 16685 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 16686 ;; Parameters:    Size  Location     Type
 16687 ;;		None
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;		None
 16690 ;; Return value:  Size  Location     Type
 16691 ;;                  1    wreg      void 
 16692 ;; Registers used:
 16693 ;;		None
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;Total ram usage:        0 bytes
 16704 ;; Hardware stack levels used:    1
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		_EUSART2_Initialize
 16709 ;;		_EUSART2_Receive_ISR
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text89
 16714  0041E4                     __ptext89:
 16715                           	opt callstack 0
 16716  0041E4                     _EUSART2_DefaultFramingErrorHandler:
 16717                           	opt callstack 16
 16718  0041E4  0012               	return		;funcret
 16719  0041E6                     __end_of_EUSART2_DefaultFramingErrorHandler:
 16720                           	opt callstack 0
 16721                           
 16722 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 16723 ;; Defined at:
 16724 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 16725 ;; Parameters:    Size  Location     Type
 16726 ;;		None
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;		None
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      void 
 16731 ;; Registers used:
 16732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16742 ;;Total ram usage:        0 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:    1
 16745 ;; This function calls:
 16746 ;;		_EUSART2_RxDataHandler
 16747 ;; This function is called by:
 16748 ;;		_EUSART2_Initialize
 16749 ;;		_EUSART2_Receive_ISR
 16750 ;; This function uses a non-reentrant model
 16751 ;;
 16752                           
 16753                           	psect	text90
 16754  0041CA                     __ptext90:
 16755                           	opt callstack 0
 16756  0041CA                     _EUSART2_DefaultErrorHandler:
 16757                           	opt callstack 15
 16758  0041CA                     
 16759                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 16760  0041CA  ECBD  F01F         	call	_EUSART2_RxDataHandler	;wreg free
 16761  0041CE  0012               	return		;funcret
 16762  0041D0                     __end_of_EUSART2_DefaultErrorHandler:
 16763                           	opt callstack 0
 16764                           
 16765 ;; *************** function _EUSART2_RxDataHandler *****************
 16766 ;; Defined at:
 16767 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;		None
 16770 ;; Auto vars:     Size  Location     Type
 16771 ;;		None
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      void 
 16774 ;; Registers used:
 16775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;Total ram usage:        0 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; This function calls:
 16788 ;;		Nothing
 16789 ;; This function is called by:
 16790 ;;		_EUSART2_Receive_ISR
 16791 ;;		_EUSART2_DefaultErrorHandler
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           	psect	text91
 16796  003F7A                     __ptext91:
 16797                           	opt callstack 0
 16798  003F7A                     _EUSART2_RxDataHandler:
 16799                           	opt callstack 16
 16800  003F7A                     
 16801                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 16802  003F7A  0E64               	movlw	low _eusart2RxBuffer
 16803  003F7C  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16804  003F7E  6ED9               	movwf	fsr2l,c
 16805  003F80  6ADA               	clrf	fsr2h,c
 16806  003F82  0E03               	movlw	high _eusart2RxBuffer
 16807  003F84  22DA               	addwfc	fsr2h,f,c
 16808  003F86  CE99 FFDF          	movff	3737,indf2	;volatile
 16809  003F8A  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 16810  003F8C                     
 16811                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 16812  003F8C  0E1F               	movlw	31
 16813  003F8E  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 16814  003F90  EFCC  F01F         	goto	i2u412_41
 16815  003F94  EFCE  F01F         	goto	i2u412_40
 16816  003F98                     i2u412_41:
 16817  003F98  EFD0  F01F         	goto	i2l4976
 16818  003F9C                     i2u412_40:
 16819  003F9C                     
 16820                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 16821  003F9C  0E00               	movlw	0
 16822  003F9E  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 16823  003FA0                     i2l4976:
 16824                           
 16825                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 16826  003FA0  0100               	movlb	0	; () banked
 16827  003FA2  2BE0               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 16828  003FA4                     
 16829                           ; BSR set to: 0
 16830  003FA4  0012               	return		;funcret
 16831  003FA6                     __end_of_EUSART2_RxDataHandler:
 16832                           	opt callstack 0
 16833                           
 16834 ;; *************** function _EUSART1_Transmit_ISR *****************
 16835 ;; Defined at:
 16836 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;		None
 16839 ;; Auto vars:     Size  Location     Type
 16840 ;;		None
 16841 ;; Return value:  Size  Location     Type
 16842 ;;                  1    wreg      void 
 16843 ;; Registers used:
 16844 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16845 ;; Tracked objects:
 16846 ;;		On entry : 0/0
 16847 ;;		On exit  : 0/0
 16848 ;;		Unchanged: 0/0
 16849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16854 ;;Total ram usage:        0 bytes
 16855 ;; Hardware stack levels used:    1
 16856 ;; This function calls:
 16857 ;;		Nothing
 16858 ;; This function is called by:
 16859 ;;		_EUSART1_Initialize
 16860 ;;		_INTERRUPT_InterruptManager
 16861 ;; This function uses a non-reentrant model
 16862 ;;
 16863                           
 16864                           	psect	text92
 16865  003CEA                     __ptext92:
 16866                           	opt callstack 0
 16867  003CEA                     _EUSART1_Transmit_ISR:
 16868                           	opt callstack 17
 16869  003CEA                     
 16870                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16871  003CEA  0E10               	movlw	16
 16872  003CEC  0100               	movlb	0	; () banked
 16873  003CEE  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 16874  003CF0  EF7C  F01E         	goto	i2u483_41
 16875  003CF4  EF7E  F01E         	goto	i2u483_40
 16876  003CF8                     i2u483_41:
 16877  003CF8  EF94  F01E         	goto	i2l481
 16878  003CFC                     i2u483_40:
 16879  003CFC                     
 16880                           ; BSR set to: 0
 16881                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16882  003CFC  0E74               	movlw	low _eusart1TxBuffer
 16883  003CFE  25DD               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 16884  003D00  6ED9               	movwf	fsr2l,c
 16885  003D02  6ADA               	clrf	fsr2h,c
 16886  003D04  0E01               	movlw	high _eusart1TxBuffer
 16887  003D06  22DA               	addwfc	fsr2h,f,c
 16888  003D08  50DF               	movf	indf2,w,c
 16889  003D0A  6E9A               	movwf	154,c	;volatile
 16890  003D0C                     
 16891                           ; BSR set to: 0
 16892  003D0C  2BDD               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 16893  003D0E                     
 16894                           ; BSR set to: 0
 16895                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16896  003D0E  0E0F               	movlw	15
 16897  003D10  65DD               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 16898  003D12  EF8D  F01E         	goto	i2u484_41
 16899  003D16  EF8F  F01E         	goto	i2u484_40
 16900  003D1A                     i2u484_41:
 16901  003D1A  EF91  F01E         	goto	i2l5586
 16902  003D1E                     i2u484_40:
 16903  003D1E                     
 16904                           ; BSR set to: 0
 16905                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 16906  003D1E  0E00               	movlw	0
 16907  003D20  6FDD               	movwf	_eusart1TxTail& (0+255),b	;volatile
 16908  003D22                     i2l5586:
 16909                           
 16910                           ; BSR set to: 0
 16911                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 16912  003D22  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 16913                           
 16914                           ;mcc_generated_files/eusart1.c: 211:     }
 16915  003D24  EF96  F01E         	goto	i2l484
 16916  003D28                     i2l481:
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 16920  003D28  010E               	movlb	14	; () banked
 16921  003D2A  99C5               	bcf	197,4,b	;volatile
 16922  003D2C                     i2l484:
 16923  003D2C  0012               	return		;funcret
 16924  003D2E                     __end_of_EUSART1_Transmit_ISR:
 16925                           	opt callstack 0
 16926                           
 16927 ;; *************** function _EUSART1_Receive_ISR *****************
 16928 ;; Defined at:
 16929 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 16930 ;; Parameters:    Size  Location     Type
 16931 ;;		None
 16932 ;; Auto vars:     Size  Location     Type
 16933 ;;		None
 16934 ;; Return value:  Size  Location     Type
 16935 ;;                  1    wreg      void 
 16936 ;; Registers used:
 16937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16938 ;; Tracked objects:
 16939 ;;		On entry : 0/0
 16940 ;;		On exit  : 0/0
 16941 ;;		Unchanged: 0/0
 16942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16947 ;;Total ram usage:        0 bytes
 16948 ;; Hardware stack levels used:    1
 16949 ;; Hardware stack levels required when called:    2
 16950 ;; This function calls:
 16951 ;;		Absolute function
 16952 ;;		_EUSART1_DefaultErrorHandler
 16953 ;;		_EUSART1_DefaultFramingErrorHandler
 16954 ;;		_EUSART1_DefaultOverrunErrorHandler
 16955 ;;		_EUSART1_RxDataHandler
 16956 ;; This function is called by:
 16957 ;;		_EUSART1_Initialize
 16958 ;;		_INTERRUPT_InterruptManager
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           	psect	text93
 16963  0031BE                     __ptext93:
 16964                           	opt callstack 0
 16965  0031BE                     _EUSART1_Receive_ISR:
 16966                           	opt callstack 15
 16967  0031BE                     
 16968                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 16969  0031BE  0E00               	movlw	low _eusart1RxStatusBuffer
 16970  0031C0  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16971  0031C2  6ED9               	movwf	fsr2l,c
 16972  0031C4  6ADA               	clrf	fsr2h,c
 16973  0031C6  0E03               	movlw	high _eusart1RxStatusBuffer
 16974  0031C8  22DA               	addwfc	fsr2h,f,c
 16975  0031CA  0E00               	movlw	0
 16976  0031CC  6EDF               	movwf	indf2,c
 16977  0031CE                     
 16978                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 16979  0031CE  A49D               	btfss	157,2,c	;volatile
 16980  0031D0  EFEC  F018         	goto	i2u485_41
 16981  0031D4  EFEE  F018         	goto	i2u485_40
 16982  0031D8                     i2u485_41:
 16983  0031D8  EF03  F019         	goto	i2l5596
 16984  0031DC                     i2u485_40:
 16985  0031DC                     
 16986                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 16987  0031DC  0E00               	movlw	low _eusart1RxStatusBuffer
 16988  0031DE  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16989  0031E0  6ED9               	movwf	fsr2l,c
 16990  0031E2  6ADA               	clrf	fsr2h,c
 16991  0031E4  0E03               	movlw	high _eusart1RxStatusBuffer
 16992  0031E6  22DA               	addwfc	fsr2h,f,c
 16993  0031E8  0103               	movlb	3	; () banked
 16994  0031EA  82DF               	bsf	indf2,1,c
 16995  0031EC                     
 16996                           ; BSR set to: 3
 16997                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 16998  0031EC  D802               	call	i2u486_48
 16999  0031EE  EF03  F019         	goto	i2u486_49
 17000  0031F2                     i2u486_48:
 17001  0031F2  0005               	push	
 17002  0031F4  6EFA               	movwf	pclath,c
 17003  0031F6  0101               	movlb	1	; () banked
 17004  0031F8  51EE               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 17005  0031FA  6EFD               	movwf	tosl,c
 17006  0031FC  51EF               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 17007  0031FE  6EFE               	movwf	tosh,c
 17008  003200  6AFF               	clrf	tosu,c
 17009  003202  50FA               	movf	pclath,w,c
 17010  003204  0012               	return		;indir
 17011  003206                     i2u486_49:
 17012  003206                     i2l5596:
 17013                           
 17014                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 17015  003206  A29D               	btfss	157,1,c	;volatile
 17016  003208  EF08  F019         	goto	i2u487_41
 17017  00320C  EF0A  F019         	goto	i2u487_40
 17018  003210                     i2u487_41:
 17019  003210  EF1F  F019         	goto	i2l5602
 17020  003214                     i2u487_40:
 17021  003214                     
 17022                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17023  003214  0E00               	movlw	low _eusart1RxStatusBuffer
 17024  003216  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 17025  003218  6ED9               	movwf	fsr2l,c
 17026  00321A  6ADA               	clrf	fsr2h,c
 17027  00321C  0E03               	movlw	high _eusart1RxStatusBuffer
 17028  00321E  22DA               	addwfc	fsr2h,f,c
 17029  003220  0103               	movlb	3	; () banked
 17030  003222  84DF               	bsf	indf2,2,c
 17031  003224                     
 17032                           ; BSR set to: 3
 17033                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 17034  003224  D802               	call	i2u488_48
 17035  003226  EF1F  F019         	goto	i2u488_49
 17036  00322A                     i2u488_48:
 17037  00322A  0005               	push	
 17038  00322C  6EFA               	movwf	pclath,c
 17039  00322E  0101               	movlb	1	; () banked
 17040  003230  51EC               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 17041  003232  6EFD               	movwf	tosl,c
 17042  003234  51ED               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 17043  003236  6EFE               	movwf	tosh,c
 17044  003238  6AFF               	clrf	tosu,c
 17045  00323A  50FA               	movf	pclath,w,c
 17046  00323C  0012               	return		;indir
 17047  00323E                     i2u488_49:
 17048  00323E                     i2l5602:
 17049                           
 17050                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17051  00323E  0E00               	movlw	low _eusart1RxStatusBuffer
 17052  003240  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 17053  003242  6ED9               	movwf	fsr2l,c
 17054  003244  6ADA               	clrf	fsr2h,c
 17055  003246  0E03               	movlw	high _eusart1RxStatusBuffer
 17056  003248  22DA               	addwfc	fsr2h,f,c
 17057  00324A  50DF               	movf	indf2,w,c
 17058  00324C  B4D8               	btfsc	status,2,c
 17059  00324E  EF2B  F019         	goto	i2u489_41
 17060  003252  EF2D  F019         	goto	i2u489_40
 17061  003256                     i2u489_41:
 17062  003256  EF3C  F019         	goto	i2l5606
 17063  00325A                     i2u489_40:
 17064  00325A                     
 17065                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 17066  00325A  D802               	call	i2u490_48
 17067  00325C  EF3A  F019         	goto	i2u490_49
 17068  003260                     i2u490_48:
 17069  003260  0005               	push	
 17070  003262  6EFA               	movwf	pclath,c
 17071  003264  0101               	movlb	1	; () banked
 17072  003266  51EA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 17073  003268  6EFD               	movwf	tosl,c
 17074  00326A  51EB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 17075  00326C  6EFE               	movwf	tosh,c
 17076  00326E  6AFF               	clrf	tosu,c
 17077  003270  50FA               	movf	pclath,w,c
 17078  003272  0012               	return		;indir
 17079  003274                     i2u490_49:
 17080                           
 17081                           ;mcc_generated_files/eusart1.c: 235:     } else {
 17082  003274  EF3E  F019         	goto	i2l491
 17083  003278                     i2l5606:
 17084                           
 17085                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 17086  003278  ECD3  F01F         	call	_EUSART1_RxDataHandler	;wreg free
 17087  00327C                     i2l491:
 17088  00327C  0012               	return		;funcret
 17089  00327E                     __end_of_EUSART1_Receive_ISR:
 17090                           	opt callstack 0
 17091                           
 17092 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17093 ;; Defined at:
 17094 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 17095 ;; Parameters:    Size  Location     Type
 17096 ;;		None
 17097 ;; Auto vars:     Size  Location     Type
 17098 ;;		None
 17099 ;; Return value:  Size  Location     Type
 17100 ;;                  1    wreg      void 
 17101 ;; Registers used:
 17102 ;;		None
 17103 ;; Tracked objects:
 17104 ;;		On entry : 0/0
 17105 ;;		On exit  : 0/0
 17106 ;;		Unchanged: 0/0
 17107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;Total ram usage:        0 bytes
 17113 ;; Hardware stack levels used:    1
 17114 ;; This function calls:
 17115 ;;		Nothing
 17116 ;; This function is called by:
 17117 ;;		_EUSART1_Initialize
 17118 ;;		_EUSART1_Receive_ISR
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text94
 17123  0041D0                     __ptext94:
 17124                           	opt callstack 0
 17125  0041D0                     _EUSART1_DefaultOverrunErrorHandler:
 17126                           	opt callstack 16
 17127  0041D0                     
 17128                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 17129  0041D0  989D               	bcf	157,4,c	;volatile
 17130                           
 17131                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 17132  0041D2  889D               	bsf	157,4,c	;volatile
 17133  0041D4  0012               	return		;funcret
 17134  0041D6                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 17135                           	opt callstack 0
 17136                           
 17137 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 17138 ;; Defined at:
 17139 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 17140 ;; Parameters:    Size  Location     Type
 17141 ;;		None
 17142 ;; Auto vars:     Size  Location     Type
 17143 ;;		None
 17144 ;; Return value:  Size  Location     Type
 17145 ;;                  1    wreg      void 
 17146 ;; Registers used:
 17147 ;;		None
 17148 ;; Tracked objects:
 17149 ;;		On entry : 0/0
 17150 ;;		On exit  : 0/0
 17151 ;;		Unchanged: 0/0
 17152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17157 ;;Total ram usage:        0 bytes
 17158 ;; Hardware stack levels used:    1
 17159 ;; This function calls:
 17160 ;;		Nothing
 17161 ;; This function is called by:
 17162 ;;		_EUSART1_Initialize
 17163 ;;		_EUSART1_Receive_ISR
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           	psect	text95
 17168  0041E6                     __ptext95:
 17169                           	opt callstack 0
 17170  0041E6                     _EUSART1_DefaultFramingErrorHandler:
 17171                           	opt callstack 16
 17172  0041E6  0012               	return		;funcret
 17173  0041E8                     __end_of_EUSART1_DefaultFramingErrorHandler:
 17174                           	opt callstack 0
 17175                           
 17176 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17177 ;; Defined at:
 17178 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 17179 ;; Parameters:    Size  Location     Type
 17180 ;;		None
 17181 ;; Auto vars:     Size  Location     Type
 17182 ;;		None
 17183 ;; Return value:  Size  Location     Type
 17184 ;;                  1    wreg      void 
 17185 ;; Registers used:
 17186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17187 ;; Tracked objects:
 17188 ;;		On entry : 0/0
 17189 ;;		On exit  : 0/0
 17190 ;;		Unchanged: 0/0
 17191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;Total ram usage:        0 bytes
 17197 ;; Hardware stack levels used:    1
 17198 ;; Hardware stack levels required when called:    1
 17199 ;; This function calls:
 17200 ;;		_EUSART1_RxDataHandler
 17201 ;; This function is called by:
 17202 ;;		_EUSART1_Initialize
 17203 ;;		_EUSART1_Receive_ISR
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text96
 17208  0041D6                     __ptext96:
 17209                           	opt callstack 0
 17210  0041D6                     _EUSART1_DefaultErrorHandler:
 17211                           	opt callstack 15
 17212  0041D6                     
 17213                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 17214  0041D6  ECD3  F01F         	call	_EUSART1_RxDataHandler	;wreg free
 17215  0041DA  0012               	return		;funcret
 17216  0041DC                     __end_of_EUSART1_DefaultErrorHandler:
 17217                           	opt callstack 0
 17218                           
 17219 ;; *************** function _EUSART1_RxDataHandler *****************
 17220 ;; Defined at:
 17221 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 17222 ;; Parameters:    Size  Location     Type
 17223 ;;		None
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;		None
 17226 ;; Return value:  Size  Location     Type
 17227 ;;                  1    wreg      void 
 17228 ;; Registers used:
 17229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17230 ;; Tracked objects:
 17231 ;;		On entry : 0/0
 17232 ;;		On exit  : 0/0
 17233 ;;		Unchanged: 0/0
 17234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17239 ;;Total ram usage:        0 bytes
 17240 ;; Hardware stack levels used:    1
 17241 ;; This function calls:
 17242 ;;		Nothing
 17243 ;; This function is called by:
 17244 ;;		_EUSART1_Receive_ISR
 17245 ;;		_EUSART1_DefaultErrorHandler
 17246 ;; This function uses a non-reentrant model
 17247 ;;
 17248                           
 17249                           	psect	text97
 17250  003FA6                     __ptext97:
 17251                           	opt callstack 0
 17252  003FA6                     _EUSART1_RxDataHandler:
 17253                           	opt callstack 16
 17254  003FA6                     
 17255                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 17256  003FA6  0E00               	movlw	low _eusart1RxBuffer
 17257  003FA8  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 17258  003FAA  6ED9               	movwf	fsr2l,c
 17259  003FAC  6ADA               	clrf	fsr2h,c
 17260  003FAE  0E04               	movlw	high _eusart1RxBuffer
 17261  003FB0  22DA               	addwfc	fsr2h,f,c
 17262  003FB2  CF99 FFDF          	movff	3993,indf2	;volatile
 17263  003FB6  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 17264  003FB8                     
 17265                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 17266  003FB8  0E63               	movlw	99
 17267  003FBA  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 17268  003FBC  EFE2  F01F         	goto	i2u419_41
 17269  003FC0  EFE4  F01F         	goto	i2u419_40
 17270  003FC4                     i2u419_41:
 17271  003FC4  EFE6  F01F         	goto	i2l5022
 17272  003FC8                     i2u419_40:
 17273  003FC8                     
 17274                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 17275  003FC8  0E00               	movlw	0
 17276  003FCA  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 17277  003FCC                     i2l5022:
 17278                           
 17279                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 17280  003FCC  0100               	movlb	0	; () banked
 17281  003FCE  2BDB               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 17282  003FD0                     
 17283                           ; BSR set to: 0
 17284  003FD0  0012               	return		;funcret
 17285  003FD2                     __end_of_EUSART1_RxDataHandler:
 17286                           	opt callstack 0
 17287                           
 17288                           	psect	text98
 17289  000000                     __ptext98:
 17290                           	opt callstack 0
 17291  000000                     
 17292                           	psect	rparam
 17293  0000                     
 17294                           	psect	temp
 17295  00005B                     btemp:
 17296                           	opt callstack 0
 17297  00005B                     	ds	1
 17298  0000                     int$flags	set	btemp
 17299  0000                     wtemp8	set	btemp+1
 17300  0000                     ttemp5	set	btemp+1
 17301  0000                     ttemp6	set	btemp+4
 17302  0000                     ttemp7	set	btemp+8
 17303                           tosu	equ	0xFFF
 17304                           tosh	equ	0xFFE
 17305                           tosl	equ	0xFFD
 17306                           stkptr	equ	0xFFC
 17307                           pclatu	equ	0xFFB
 17308                           pclath	equ	0xFFA
 17309                           pcl	equ	0xFF9
 17310                           tblptru	equ	0xFF8
 17311                           tblptrh	equ	0xFF7
 17312                           tblptrl	equ	0xFF6
 17313                           tablat	equ	0xFF5
 17314                           prodh	equ	0xFF4
 17315                           prodl	equ	0xFF3
 17316                           indf0	equ	0xFEF
 17317                           postinc0	equ	0xFEE
 17318                           postdec0	equ	0xFED
 17319                           preinc0	equ	0xFEC
 17320                           plusw0	equ	0xFEB
 17321                           fsr0h	equ	0xFEA
 17322                           fsr0l	equ	0xFE9
 17323                           wreg	equ	0xFE8
 17324                           indf1	equ	0xFE7
 17325                           postinc1	equ	0xFE6
 17326                           postdec1	equ	0xFE5
 17327                           preinc1	equ	0xFE4
 17328                           plusw1	equ	0xFE3
 17329                           fsr1h	equ	0xFE2
 17330                           fsr1l	equ	0xFE1
 17331                           bsr	equ	0xFE0
 17332                           indf2	equ	0xFDF
 17333                           postinc2	equ	0xFDE
 17334                           postdec2	equ	0xFDD
 17335                           preinc2	equ	0xFDC
 17336                           plusw2	equ	0xFDB
 17337                           fsr2h	equ	0xFDA
 17338                           fsr2l	equ	0xFD9
 17339                           status	equ	0xFD8


Data Sizes:
    Strings     1882
    Constant    0
    Data        457
    BSS         523
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    103     160
    BANK1           256     71     255
    BANK2           256      0     246
    BANK3           256      0     247
    BANK4           256      0     164
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1513(BANK1[20]), 
		 -> ValidateCmd@ConfName_1509(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_45(CODE[9]), STR_44(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1513(BANK1[20]), 
		 -> ValidateCmd@ConfName_1509(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_45(CODE[9]), STR_44(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_75(CODE[1]), STR_70(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_75(CODE[1]), STR_70(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_86(CODE[4]), STR_84(CODE[5]), STR_82(CODE[7]), STR_80(CODE[2]), 
		 -> STR_78(CODE[6]), STR_37(CODE[4]), STR_36(CODE[5]), STR_35(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_34(CODE[4]), STR_32(CODE[5]), STR_30(CODE[7]), Command(BANK0[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_76(CODE[12]), STR_74(CODE[13]), STR_73(CODE[17]), STR_72(CODE[15]), 
		 -> STR_71(CODE[33]), STR_69(CODE[38]), STR_68(CODE[58]), STR_67(CODE[17]), 
		 -> STR_66(CODE[16]), STR_65(CODE[4]), STR_64(CODE[15]), STR_63(CODE[19]), 
		 -> STR_62(CODE[32]), STR_61(CODE[33]), STR_60(CODE[37]), STR_59(CODE[44]), 
		 -> STR_58(CODE[22]), STR_57(CODE[75]), STR_56(CODE[53]), STR_55(CODE[69]), 
		 -> STR_54(CODE[54]), STR_53(CODE[52]), STR_52(CODE[40]), STR_51(CODE[30]), 
		 -> STR_50(CODE[43]), STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), 
		 -> STR_46(CODE[34]), STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), 
		 -> STR_27(CODE[37]), STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), 
		 -> STR_23(CODE[25]), STR_22(CODE[28]), STR_21(CODE[15]), STR_20(CODE[29]), 
		 -> STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2389_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_76(CODE[12]), STR_74(CODE[13]), STR_73(CODE[17]), STR_72(CODE[15]), 
		 -> STR_71(CODE[33]), STR_69(CODE[38]), STR_68(CODE[58]), STR_67(CODE[17]), 
		 -> STR_66(CODE[16]), STR_65(CODE[4]), STR_64(CODE[15]), STR_63(CODE[19]), 
		 -> STR_62(CODE[32]), STR_61(CODE[33]), STR_60(CODE[37]), STR_59(CODE[44]), 
		 -> STR_58(CODE[22]), STR_57(CODE[75]), STR_56(CODE[53]), STR_55(CODE[69]), 
		 -> STR_54(CODE[54]), STR_53(CODE[52]), STR_52(CODE[40]), STR_51(CODE[30]), 
		 -> STR_50(CODE[43]), STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), 
		 -> STR_46(CODE[34]), STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), 
		 -> STR_27(CODE[37]), STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), 
		 -> STR_23(CODE[25]), STR_22(CODE[28]), STR_21(CODE[15]), STR_20(CODE[29]), 
		 -> STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_76(CODE[12]), STR_74(CODE[13]), STR_73(CODE[17]), STR_72(CODE[15]), 
		 -> STR_71(CODE[33]), STR_69(CODE[38]), STR_68(CODE[58]), STR_67(CODE[17]), 
		 -> STR_66(CODE[16]), STR_65(CODE[4]), STR_64(CODE[15]), STR_63(CODE[19]), 
		 -> STR_62(CODE[32]), STR_61(CODE[33]), STR_60(CODE[37]), STR_59(CODE[44]), 
		 -> STR_58(CODE[22]), STR_57(CODE[75]), STR_56(CODE[53]), STR_55(CODE[69]), 
		 -> STR_54(CODE[54]), STR_53(CODE[52]), STR_52(CODE[40]), STR_51(CODE[30]), 
		 -> STR_50(CODE[43]), STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), 
		 -> STR_46(CODE[34]), STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), 
		 -> STR_27(CODE[37]), STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), 
		 -> STR_23(CODE[25]), STR_22(CODE[28]), STR_21(CODE[15]), STR_20(CODE[29]), 
		 -> STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_76(CODE[12]), STR_74(CODE[13]), STR_73(CODE[17]), STR_72(CODE[15]), 
		 -> STR_71(CODE[33]), STR_69(CODE[38]), STR_68(CODE[58]), STR_67(CODE[17]), 
		 -> STR_66(CODE[16]), STR_65(CODE[4]), STR_64(CODE[15]), STR_63(CODE[19]), 
		 -> STR_62(CODE[32]), STR_61(CODE[33]), STR_60(CODE[37]), STR_59(CODE[44]), 
		 -> STR_58(CODE[22]), STR_57(CODE[75]), STR_56(CODE[53]), STR_55(CODE[69]), 
		 -> STR_54(CODE[54]), STR_53(CODE[52]), STR_52(CODE[40]), STR_51(CODE[30]), 
		 -> STR_50(CODE[43]), STR_49(CODE[73]), STR_48(CODE[42]), STR_47(CODE[36]), 
		 -> STR_46(CODE[34]), STR_43(CODE[42]), STR_42(CODE[22]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[19]), STR_38(CODE[40]), STR_28(CODE[32]), 
		 -> STR_27(CODE[37]), STR_26(CODE[16]), STR_25(CODE[24]), STR_24(CODE[4]), 
		 -> STR_23(CODE[25]), STR_22(CODE[28]), STR_21(CODE[15]), STR_20(CODE[29]), 
		 -> STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[24]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[26]), STR_13(CODE[36]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[34]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1513(BANK1[20]), ValidateCmd@ConfName_1509(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_45(CODE[9]), STR_44(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1513(BANK1[20]), ValidateCmd@ConfName_1509(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_45(CODE[9]), STR_44(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1513(BANK1[20]), ValidateCmd@ConfName_1509(BANK1[20]), 
		 -> ValidateCmd@ConfName(BANK1[20]), STR_45(CODE[9]), STR_44(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1513(BANK1[20]), ValidateCmd@ConfName_1509(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_37(CODE[4]), STR_36(CODE[5]), STR_35(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_InitialiseString
    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _ValidateCmd->_InitialiseString
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_printf
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  720774
                                             68 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  205953
                                              0 BANK1     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   38047
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  123237
                                             45 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   42363
                                             84 COMRAM     2     2      0
                                             41 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   38906
                                             84 COMRAM     2     2      0
                                             41 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    64    64      0   42843
                                             84 COMRAM     2     2      0
                                             41 BANK0     62    62      0
           _ADCC_GetSingleConversion
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   38149
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  114765
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   38492
                                             41 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   38118
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   78731
                                             43 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   38180
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           8     8      0   40781
                                             41 BANK0      8     8      0
           _ADCC_GetSingleConversion
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          4     2      2   40468
                                             43 BANK0      4     2      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1463
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     732
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   38149
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   38047
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _ADCC_GetSingleConversion
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _ADCC_GetSingleConversion
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _ADCC_DisableContinuousConversion
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _ADCC_GetSingleConversion
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F6      10       96.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     47      FF       8       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4EE       6        0.0%
DATA                 0      0     4EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 25 00:24:08 2021

                      _eusart1TxBufferRemaining 00FE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 3508  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l131 4082                                             l300 3606  
                                           l125 4066                                             l222 40B2  
                                           l303 4112                                             l128 40CA  
                                           l216 3C8A                                             l218 3C98  
                                           l306 409A                                             l219 3CA4  
                                           l324 38E8                                             l148 41DE  
                                           l309 4128                                             l325 3900  
                                           l334 41B4                                             l510 4196  
                                           l319 39E4                                             l328 3930  
                                           l513 41AA                                             l601 2940  
                                           l450 3588                                             l507 41A0  
                                           l363 416E                                             l516 4182  
                                           l372 4150                                             l453 40FA  
                                           l702 3BCE                                             l366 4164  
                                           l519 418C                                             l375 415A  
                                           l456 40E2                                             l369 4178  
                                           l474 382C                                             l730 25E6  
                                           l475 3844                                             l459 413C  
                                           l708 3C18                                             l469 3A3C  
                                           l733 260C                                             l725 367E  
                                           l814 3D6E                                             l478 3874  
                                           l719 2EA6                                             l809 33E4  
                                           l817 303A                                             l737 2702  
                                           l690 41C8                                             l683 3754  
                                           l836 2442                                             l940 398C  
                                           l781 2D5C                                             l773 1C6E  
                                           l693 41BE                                             l917 0F38  
                                           l686 41C4                                             l766 0BA0  
                                           l934 3EA2                                             l783 2DCC  
                                           l759 0AD8                                             l695 41C0  
                                           l951 1990                                             l688 41C6  
                                           l784 2DD4                                             l928 2826  
                                           l697 41C2                                             l778 2D36  
                                           l963 1E0A                                             l797 36EC  
                                           l959 1AB0                                             l899 18E0  
                                  __CFG_CPD$OFF 000000                    InitialiseString@readDataEven 00C0  
        __end_of_EUSART2_SetFramingErrorHandler 4170         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 4166                                             _abs 3DF0  
                                           _pad 303C                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            l1200 1218  
                                          l1123 41E2                                            l1051 3B32  
                                          ?_abs 0017                                            l2021 213E  
                                          l2030 3F4A                                            l1230 1530  
                                          l2111 3B82                                            l1223 1FA4  
                                          l1207 1E8C                                            l1063 3F58  
                                          l1312 4044                                            l2024 3E6A  
                                          l1209 1E94                                            l2121 38D2  
                                          l2105 3816                                            l2018 2136  
                                          l1218 1F54                                            l1066 3F78  
                                          l1219 1F9C                                            l1243 1252  
                                          l1172 30C2                                            l1180 0FDA  
                                          l1228 1528                                            l2044 3F12  
                                          l2116 38CA                                            l1252 12F0  
                                          l1308 37B0                                            l1245 125A  
                                          l1309 37B8                                            l2038 3AE2  
                                          l1174 30FC                                            l1182 0FE2  
                                          l1238 16F0                                            l2127 3EDA  
                                          l1169 3080                                            l2057 2CF8  
                                          l1426 22C6                                            l1266 148C  
                                          l1282 0220                                            l2091 401E  
                                          l1268 14EE                                            l2084 3FF8  
                                          l2069 347A                                            l2077 3CE8  
                                          l1439 25A6                                            l1297 06B2  
                                          l2099 333A                                            l1750 2B10  
                                          l1760 2F56                                            l1757 2B30  
                                          l1767 2F76                                            l6200 303C  
                                          l7000 176E                                            l6210 308C  
                                          l6202 304A                                            l7010 17D0  
                                          l7002 1786                                            l6300 2448  
                                          l6212 30A0                                            l6204 305E  
                                          l7100 358E                                            l7020 18AE  
                                          l7012 1802                                            l7004 1796  
                                          l6310 24A8                                            l6302 2456  
                                          l1990 3E2E                                            l6222 3DF0  
                                          l6150 3902                                            l6214 30A4  
                                          l6206 306C                                            l6230 3E30  
                                          l7110 35B8                                            l7102 359A  
                                          l7014 1828                                            l7006 17A6  
                                          l7022 18B2                                            l7030 395C  
                                          ?_pad 0017                                            l6320 251E  
                                          l6312 24C6                                            l6304 2476  
                                          l6224 3E0A                                            l6152 3914  
                                          l6160 392C                                            l6144 38D6  
                                          l6216 30D0                                            l6208 3078  
                                          l6400 0FFC                                            l6240 38BE  
                                          l7120 3602                                            l7112 35BC  
                                          l7104 35AA                                            l7040 34B4  
                                          l7024 18D0                                            l7016 185A  
                                          l7008 17AA                                            l7200 0D84  
                                          l7032 3970                                            l6250 403C  
                                          l6330 2586                                            l6322 253E  
                                          l6314 24CE                                            l6306 247A  
                                          l6154 3916                                            l6146 38D6  
                                          l6162 41AE                                            l6170 3414  
                                          l6218 30E4                                            l6410 1028  
                                          l6402 100A                                            l6226 3EDC  
                                          l6234 3876                                            l7130 39E6  
                                          l7122 3AE4                                            l7114 35C0  
                                          l7106 35B0                                            l7050 34EA  
                                          l7042 34DE                                            l7018 1880  
                                          l7210 0E1A                                            l7202 0DDE  
                                          l7034 3974                                            l7026 3932  
                                          l1987 3E26                                            l6244 3F14  
                                          l6260 2172                                            l6324 2550  
                                          l6316 24E2                                            l6308 2488  
                                          l6156 3926                                            l6148 38F8  
                                          l6172 3432                                            l6164 33E6  
                                          l6180 3B40                                            l6420 1134  
                                          l6412 10AA                                            l6404 1010  
                                          l6340 2A74                                            l6500 156A  
                                          l7220 3BF4                                            l7140 3A2A  
                                          l7132 39E6                                            l7300 2612  
                                          l7124 41E0                                            l7116 35CC  
                                          l7108 35B4                                            l7052 34EC  
                                          l7044 34E0                                            l7036 347C  
                                          l7060 4068                                            l7212 0F14  
                                          l7204 0DE2                                            l7028 3950  
                                          l6270 21B4                                            l6262 2176  
                                          l6254 2140                                            l6318 24F0  
                                          l6326 2556                                            l6158 392A  
                                          l6174 3468                                            l6166 33F8  
                                          l6190 3CB2                                            l6182 3B44  
                                          l6430 11A6                                            l6422 1152  
                                          l6414 10B0                                            l6406 1018  
                                          l6350 2AF6                                            l6342 2A88  
                                          l6334 2A42                                            l6502 1570  
                                          l6510 1656                                            l6238 38AC  
                                          l7222 3BF8                                            l7142 3A2E  
                                          l7134 39F8                                            l7126 40CC  
                                          l7310 2688                                            l7302 2624  
                                          l7070 352A                                            l7118 35D8  
                                          l7062 40B4                                            l7054 34EE  
                                          l7046 34E2                                            l7038 34A4  
                                          l7214 0F22                                            l7206 0DEE  
                                          l6248 4020                                            l6600 2018  
                                          l6280 220E                                            l6272 21D2  
                                          l6264 2184                                            l6256 2144  
                                          l6328 2566                                            l6168 340A  
                                          l6192 3CC4                                            l6184 3B76  
                                          l6440 11E0                                            l6432 11B4  
                                          l6424 116C                                            l6416 10B6  
                                          l6408 1022                                            l6352 2AF8  
                                          l6344 2A96                                            l6336 2A4E  
                                          l6360 2ECE                                            l6512 1668  
                                          l6520 16C8                                            l6504 15E6  
                                          l7240 333C                                            l7224 36EE  
                                          l7216 3BD0                                            l7144 3A32  
                                          l7136 3A18                                            l7312 26A4  
                                          l7304 2628                                            l7080 353E  
                                          l7072 352E                                            l7064 350A  
                                          l7056 34F0                                            l7048 34E4  
                                          l7208 0E0A                                            l7160 0C10  
                                          l7152 0BA6                                            l7400 197E  
                                          l6610 2040                                            l6602 201C  
                                          l6282 223C                                            l6274 21DA  
                                          l6290 2276                                            l6266 21A4  
                                          l6258 2152                                            l6194 3CC8  
                                          l6178 3B34                                            l6434 11BA  
                                          l6442 11F0                                            l6426 1186  
                                          l6418 111A                                            l6450 1E26  
                                          l6354 2B0A                                            l6346 2AA8  
                                          l6338 2A6C                                            l6370 2F50  
                                          l6362 2EE2                                            l6514 1686  
                                          l6506 15EC                                            l6530 1246  
                                          l7250 33A0                                            l7242 333C  
                                          l7330 2D1A                                            l7234 3704  
                                          l7226 36FC                                            l7218 3BE4  
                                          l7146 3A36                                            l7138 3A1A  
                                          l7314 26D0                                            l7322 2700  
                                          l7306 265E                                            l7090 3578  
                                          l7082 3566                                            l7074 3532  
                                          l7066 350E                                            l7058 41DC  
                                          l7170 0C84                                            l7162 0C34  
                                          l7154 0BB2                                            l7410 19E2  
                                          l7402 1990                                            l6380 3ADC  
                                          l6372 3A92                                            l6612 2048  
                                          l6292 2286                                            l6284 225C  
                                          l6276 21EE                                            l6268 21A8  
                                          l6188 3CA6                                            l6436 11CC  
                                          l6428 1194                                            l6460 1E6A  
                                          l6452 1E38                                            l6348 2AD6  
                                          l6364 2EF0                                            l6356 2EA8  
                                          l6516 16A0                                            l6508 15F2  
                                          l6196 3EA4                                            l6540 12AA  
                                          l6532 1270                                            l6524 121A  
                                          l6700 03FE                                            l7252 33B4  
                                          l7244 3352                                            l7340 2D4A  
                                          l7332 2D2E                                            l7236 3734  
                                          l7228 36FC                                            l7260 2DEC  
                                          l7148 3A3A                                            l7316 26FA  
                                          l7308 2678                                            l7500 241A  
                                          l7092 357C                                            l7084 356C  
                                          l7076 3536                                            l7068 351A  
                                          l7172 0C92                                            l7164 0C42  
                                          l7156 0BD6                                            l7412 19F0  
                                          l7420 1A30                                            l7404 19A4  
                                          l6374 3A96                                            l6622 20F6  
                                          l6614 207E                                            l6606 2022  
                                          l6294 22A6                                            l6286 225E  
                                          l6278 21FC                                            l6438 11D8  
                                          l6390 0FA2                                            l6470 1EEC  
                                          l6454 1E40                                            l6446 1E0C  
                                          l6366 2F1E                                            l6358 2EC6  
                                          l6518 16BA                                            l6542 12B0  
                                          l6534 1278                                            l6526 122A  
                                          l6710 04A0                                            l6702 0424  
                                          l7246 3360                                            l7254 33BA  
                                          l7350 2D96                                            l7342 2D56  
                                          l7326 2CFA                                            l7238 3738  
                                          l7270 2E3E                                            l7262 2E08  
                                          l7502 242C                                            l7094 3580  
                                          l7086 3570                                            l7078 353A  
                                          l7190 0D62                                            l7182 0CDC  
                                          l7174 0CC2                                            l7166 0C58  
                                          l7158 0C06                                            l7430 1AA4  
                                          l7422 1A54                                            l7414 1A0C  
                                          l7406 19B8                                            l6376 3AAA  
                                          l6624 2108                                            l6608 2038  
                                          l6288 2270                                            l6392 0FB2  
                                          l6384 0F3A                                            l6472 1EF8  
                                          l6464 1EB6                                            l6456 1E54  
                                          l6448 1E1E                                            l6368 2F3E  
                                          l6560 1382                                            l6552 1324  
                                          l6544 12B8                                            l6536 1298  
                                          l6528 122C                                            l6720 056E  
                                          l6712 04EA                                            l6704 045A  
                                          l6640 0174                                            l6632 012A  
                                          l7256 33D8                                            l7248 3374  
                                          l7360 3684                                            l7352 2DB0  
                                          l7344 2D62                                            l7328 2CFE  
                                          l7600 0B8C                                            l7520 06E2  
                                          l7512 06B4                                            l7280 2E9C  
                                          l7272 2E60                                            l7264 2E0C  
                                          l7504 243A                                            l7096 3584  
                                          l7088 3574                                            l7440 4056  
                                          l7432 4046                                            l6800 40A6  
                                          l7192 0D6A                                            l7184 0D36  
                                          l7176 0CD4                                            l7168 0C6E  
                                          l7424 1A68                                            l7416 1A12  
                                          l7408 19CE                                            l6378 3AD8  
                                          l6626 211A                                            l6618 20B6  
                                          l6298 2444                                            l6394 0FB4  
                                          l6386 0F5A                                            l6482 1F66  
                                          l6474 1F2E                                            l6466 1ECA  
                                          l6458 1E5C                                            l6490 1500  
                                          l6554 1336                                            l6562 1396  
                                          l6546 12D4                                            l6570 1410  
                                          l6538 12A0                                            l6722 0586  
                                          l6730 060C                                            l6650 019A  
                                          l6642 0180                                            l6634 0150  
                                          l7370 36CE                                            l7362 3698  
                                          l7354 2DC0                                            l7346 2D74  
                                          l7338 2D44                                            l7530 0726  
                                          l7522 06E6                                            l7514 06BE  
                                          l7610 1ADC                                            l7274 2E74  
                                          l7266 2E10                                            l7258 2DD6  
                                          l7282 25A8                                            l7098 358A  
                                          l7442 405A                                            l7434 404A  
                                          l6802 40AA                                            l7194 0D7C  
                                          l7186 0D3A                                            l7418 1A2A  
                                          l7426 1A80                                            l7452 3D3E  
                                          l6396 0FCE                                            l6388 0F82  
                                          l6484 1F7A                                            l6476 1F32  
                                          l6468 1ECE                                            l6492 1502  
                                          l6580 149A                                            l6572 142C  
                                          l6564 13A6                                            l6548 12E4  
                                          l6732 0632                                            l6740 0660  
                                          l6724 0594                                            l6716 0522  
                                          l6708 047A                                            l6644 0182  
                                          l6636 015E                                            l7364 36A4  
                                          l7348 2D78                                            l7532 0736  
                                          l7524 06FE                                            l7516 06CE  
                                          l7620 1B08                                            l7612 1AE0  
                                          l7276 2E86                                            l7268 2E2E  
                                          l7284 25AE                                            l7508 2440  
                                          l7460 22CC                                            l6900 417A  
                                          l7444 405E                                            l7436 404E  
                                          l6804 40AC                                            l7188 0D46  
                                          l6820 39A0                                            l6812 4084  
                                          l7428 1A92                                            l7380 3E96  
                                          l7372 3E6C                                            l7710 3BC4  
                                          l7454 3D4E                                            l7446 3D2E  
                                          l6590 1FA6                                            l6398 0FEA  
                                          l6486 1F7E                                            l6478 1F36  
                                          l6494 151C                                            l6582 14A0  
                                          l6574 144A                                            l6566 13AC  
                                          l6558 1370                                            l6742 066E  
                                          l6734 0640                                            l6726 05D0  
                                          l6718 0548                                            l6670 022E  
                                          l6662 01AC                                            l6654 01A0  
                                          l6646 0194                                            l6638 0170  
                                          l7366 36B6                                            l7358 3680  
                                          l7550 0850                                            l7534 0746  
                                          l7526 0706                                            l7542 0776  
                                          l7518 06D2                                            l7630 1B40  
                                          l7622 1B18                                            l7614 1AF0  
                                          l7606 1AB2                                            l7294 25F4  
                                          l7286 25CA                                            l7470 2316  
                                          l7462 22E0                                            l6902 4198  
                                          l7438 4052                                            l6806 40AE  
                                          l6830 39DA                                            l6822 39C0  
                                          l7390 191C                                            l7382 18E2  
                                          l7374 3E7E                                            l7704 3B94  
                                          l7456 3D52                                            l6592 1FBA  
                                          l6496 1558                                            l6488 14F0  
                                          l6584 14B0                                            l6576 1464  
                                          l6568 13B2                                            l6736 0654  
                                          l6680 02A8                                            l6672 0230  
                                          l6840 3FDC                                            l6920 383C  
                                          l6912 412A                                            l7368 36CA  
                                          l7560 0948                                            l7552 0860  
                                          l7536 0756                                            l7528 0716  
                                          l7544 07CC                                            l7632 1B50  
                                          l7640 1BBC                                            l7624 1B1C  
                                          l7616 1AF4                                            l7608 1ACC  
                                          l7296 25FA                                            l7288 25DE  
                                          l7480 237A                                            l7472 232E  
                                          l7464 22F2                                            l6904 418E  
                                          l6808 40B0                                            l6832 39DE  
                                          l6824 39C2                                            l6816 398E  
                                          l7392 193C                                            l7384 18E2  
                                          l7376 3E82                                            l7712 1C70  
                                          l7800 2830                                            l7706 3BA4  
                                          l6594 1FBE                                            l6498 1560  
                                          l6586 14C6                                            l6578 147E  
                                          l6682 02C8                                            l6690 0332  
                                          l6674 0256                                            l6666 01B8  
                                          l6658 01A6                                            l6746 067A  
                                          l6770 375E                                            l6930 386E  
                                          l6922 3846                                            l7570 0A90  
                                          l7562 09AA                                            l7554 08C2  
                                          l7546 07DA                                            l7538 0766  
                                          l7650 1C42                                            l7642 1BE4  
                                          l7634 1B82                                            l7626 1B2C  
                                          l7618 1B04                                            l7298 2606  
                                          l7490 23A0                                            l7474 233E  
                                          l7482 2380                                            l7466 22FE  
                                          l7458 22C8                                            l6906 41A2  
                                          l6850 32CC                                            l6834 39E2  
                                          l6826 39D2                                            l6818 398E  
                                          l7394 1950                                            l7386 18EA  
                                          l7378 3E92                                            l7714 1C70  
                                          l7810 283E                                            l7802 2832  
                                          l7708 3BA8                                            l6596 1FC2  
                                          l6748 06A0                                            l6692 0358  
                                          l6684 02D6                                            l6676 028C  
                                          l6668 020E                                            l6772 376C  
                                          l6924 3858                                            l6932 3870  
                                          l6916 381A                                            l6908 40E4  
                                          l7660 2F92                                            l7572 0AA2  
                                          l7564 09BC                                            l7556 08D4  
                                          l7580 0AD8                                            l7548 07EE  
                                          l7652 1C52                                            l7644 1C14  
                                          l7636 1B8E                                            l7628 1B30  
                                          l7492 23A8                                            l7484 2392  
                                          l7476 2360                                            l6852 32FE  
                                          l6844 327E                                            l6780 3C70  
                                          l6828 39D6                                            l6860 2C1E  
                                          l6764 37BA                                            l6940 2734  
                                          l7396 1964                                            l7388 1908  
                                          l7740 1D08                                            l7716 1C96  
                                          l7724 1CA0                                            l7812 2842  
                                          l7804 2834                                            l6598 1FE0  
                                          l6694 037E                                            l6678 029A  
                                          l6774 3792                                            l6838 3FD2  
                                          l6926 385A                                            l6918 381A  
                                          l7670 2FC4                                            l7662 2F96  
                                          l7582 0AEA                                            l7574 0AB0  
                                          l7566 0A1E                                            l7558 0936  
                                          l7590 0B06                                            l7654 1C5A  
                                          l7646 1C26                                            l7638 1BB8  
                                          l7486 2396                                            l7494 23CA  
                                          l7478 2366                                            l6846 3282  
                                          l6790 3C80                                            l6782 3C74  
                                          l6862 2C44                                            l6870 2CB2  
                                          l6766 37CA                                            l6950 27B2  
                                          l6942 2740                                            l6934 2704  
                                          l7398 196C                                            l7742 1D2E  
                                          l7750 1D38                                            l7726 1CC6  
                                          l7734 1CD0                                            l7718 1C9A  
                                          l7822 2862                                            l7830 28B2  
                                          l7814 2846                                            l7806 2836  
                                          l6696 03C6                                            l6688 0320  
                                          l6768 3756                                            l6928 386A  
                                          l7680 3022                                            l7672 2FDC  
                                          l7664 2FAA                                            l7656 2F78  
                                          l7592 0B2E                                            l7584 0AEE  
                                          l7576 0AC6                                            l7568 0A2E  
                                          l7648 1C36                                            l7496 23E2  
                                          l7488 239A                                            l6880 4152  
                                          l6848 328A                                            l6792 3C84  
                                          l6784 3C78                                            l6776 3C62  
                                          l6872 2CC4                                            l6864 2C66  
                                          l6856 3FFA                                            l6960 27E6  
                                          l6952 27C4                                            l6944 2752  
                                          l6936 270C                                            l7752 1D5E  
                                          l7736 1CF6                                            l7840 2916  
                                          l7824 286A                                            l7832 28E0  
                                          l7816 284A                                            l7808 2838  
                                          l6890 40FC                                            l7682 3026  
                                          l7674 2FF4                                            l7666 2FB0  
                                          l7658 2F82                                            l6970 3F4E  
                                          l7594 0B5E                                            l7586 0AFE  
                                          l7578 0ACE                                            l7498 2406  
                                          l7690 3624                                            l6882 4148  
                                          l6794 3C88                                            l6786 3C7C  
                                          l6778 3C6A                                            l6874 2CD8  
                                          l6866 2C76                                            l6962 2802  
                                          l6954 27C8                                            l6946 2766  
                                          l6938 2720                                            l7770 1DD8  
                                          l7754 1D70                                            l7738 1D08  
                                          l7834 28E8                                            l7826 2892  
                                          l7818 284A                                            l7676 3006  
                                          l7668 2FC0                                            l6972 3F52  
                                          l7596 0B70                                            l7588 0B02  
                                          l7692 364E                                            l7684 3608  
                                          l6884 4166                                            l6796 409C  
                                          l6788 3C7E                                            l6876 2CDC  
                                          l6868 2C96                                            l6964 2810  
                                          l6948 278A                                            l7772 1DD8  
                                          l7756 1D70                                            l7844 291A  
                                          l7836 28EC                                            l6894 4114  
                                          l7678 3016                                            l6974 3F54  
                                          l7598 0B80                                            l7694 3654  
                                          l7686 3608                                            l6886 415C  
                                          l6798 40A2                                            l6990 1744  
                                          l6982 16F2                                            l6878 2CE0  
                                          l6958 27D4                                            l6966 281C  
                                          l7774 1DFE                                            l7782 1E08  
                                          l7758 1D96                                            l7766 1DA0  
                                          l7846 2928                                            l7838 28F4  
                                          l6976 3F56                                            l7696 3672  
                                          l7688 3616                                            l6888 4170  
                                          l6992 1754                                            l6984 170E  
                                          l7768 1DC6                                            l7698 3B84  
                                          l6978 3F66                                            l6898 4184  
                                          l6994 1758                                            l6986 171C  
                                          l7794 2828                                            l7980 2068  
                                          l6996 175C                                            l6988 1734  
                                          l7796 282C                                            l6998 176A  
                                          l7974 28CA                                            l7798 282E  
                                          l7976 078E                                            l7978 01E0  
                                          STR_1 FEEA                                            STR_2 FD06  
                                          STR_3 FD98                                            STR_4 FF26  
                                          STR_5 F97D                                            STR_6 FF6B  
                                          STR_7 FDB4                                            STR_8 F9EE  
                                          STR_9 FD60                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          u6001 1E16                                            u6010 1E38  
                                          u6011 1E34                                            u6020 1E6A  
                                          u6100 1500                                            u6021 1E66  
                                          u6101 14FC                                            u6030 1E88  
                                          u6110 151C                                            u6031 1E84  
                                          u6111 1518                                            u5400 33F8  
                                          u6040 1EB2                                            u6120 1668  
                                          u6200 12D4                                            u7000 3A2A  
                                          u5401 33F4                                            u6041 1EAE  
                                          u6121 1664                                            u6201 12D0  
                                          u7001 3A26                                            u5410 340A  
                                          u6050 1EEC                                            u6130 1686  
                                          u6210 131E                                            u5411 3406  
                                          u6051 1EE8                                            u6131 1682  
                                          u6211 1318                                            u7011 0BAC  
                                          u5420 3432                                            u5500 306C  
                                          u6060 1F1A                                            u6140 16A0  
                                          u6300 1464                                            u6220 1320  
                                          u7100 3374                                            _PMD0 000EE1  
                                          u5421 342E                                            u5501 3068  
                                          u6141 169C                                            u6301 1460  
                                          u7101 3370                                            u7021 0BDC  
                                          _PMD1 000EE2                                            u5430 3468  
                                          u5510 30C2                                            u6070 1F54  
                                          u6150 16BA                                            u6310 147E  
                                          u6230 1336                                            u7110 33B4  
                                          _PMD2 000EE3                                            u5431 3464  
                                          u5511 30BE                                            u6071 1F50  
                                          u6151 16B6                                            u6311 147A  
                                          u6231 1332                                            u7111 33B0  
                                          u7031 0CCC                                            _PMD3 000EE4  
                                          u6400 211A                                            u5440 3B66  
                                          u5520 30D0                                            u6080 1F62  
                                          u6160 16C8                                            u5600 38BE  
                                          u6320 148C                                            u6240 136A  
                                          u7120 33D8                                            u7200 2688  
                                          u7040 0D62                                            _PMD4 000EE5  
                                          u6401 2116                                            u5521 30CC  
                                          u6081 1F5E                                            u6161 16C4  
                                          u5601 38BA                                            u6321 1488  
                                          u6241 1364                                            u7121 33D4  
                                          u7201 2684                                            u7041 0D5E  
                                          _PMD5 000EE6                                            u5610 3F44  
                                          u5530 3E0A                                            u5370 38E8  
                                          u5450 3B76                                            u6090 1F9C  
                                          u6330 149A                                            u6250 136C  
                                          u6170 122A                                            u6410 0150  
                                          u7130 2E2E                                            u7210 26D0  
                                          u5611 3F3E                                            u5531 3E06  
                                          u5371 38E4                                            u5451 3B72  
                                          u6091 1F98                                            u6067 1F10  
                                          u6331 1496                                            u6171 1226  
                                          u6411 014C                                            u7131 2E2A  
                                          u7211 26CC                                            u7051 0D74  
                                          u5620 3F46                                            u6340 1FE0  
                                          u5700 2456                                            u5380 38F8  
                                          u5460 3CE8                                            u5540 3F0C  
                                          u6260 1382                                            u6180 1246  
                                          u6500 037E                                            u6420 0220  
                                          u7140 2E3E                                            u7220 26FA  
                                          u7060 0E0A                                            u7300 3E7E  
                                          u6341 1FDC                                            u5701 2452  
                                          u5381 38F4                                            u5461 3CE4  
                                          u5541 3F06                                            u6261 137E  
                                          u6181 1242                                            u6501 037A  
                                          u6421 021C                                            u7141 2E3A  
                                          u7221 26F6                                            u7061 0E06  
                                          u7301 3E7A                                            u6350 2018  
                                          u5630 2152                                            u5710 2488  
                                          u5390 3926                                            u5550 3F0E  
                                          u5470 3ED4                                            u6270 13EA  
                                          u6190 1270                                            u6510 0424  
                                          u6430 022E                                            u7230 2D44  
                                          u7150 2E74                                            u7070 0E1A  
                                          u7310 193C                                            u6351 2014  
                                          u5631 214E                                            u5711 2484  
                                          u5391 3922                                            u5447 3B5C  
                                          u5471 3ECE                                            u6191 126C  
                                          u6511 0420                                            u6431 022A  
                                          u7231 2D40                                            u7151 2E70  
                                          u7071 0E16                                            u7311 1938  
                                          u6360 2034                                            u5640 2184  
                                          u5720 24C6                                            u5800 2EC6  
                                          u5560 3E64                                            u5480 3ED6  
                                          u6280 142C                                            u6520 04A0  
                                          u6440 0256                                            u7240 2D74  
                                          u7160 2E98                                            u7080 3C18  
                                          u7400 22F2                                            u7320 1964  
                                          u6361 2030                                            u5641 2180  
                                          u5721 24C2                                            u5801 2EC2  
                                          u5561 3E5E                                            u6281 1428  
                                          u6521 049C                                            u6441 0252  
                                          u7241 2D70                                            u7161 2E94  
                                          u7081 3C14                                            u7401 22EE  
                                          u7321 1960                                            u6370 20F0  
                                          u5730 24F0                                            u5490 304A  
                                          u5810 2EF0                                            u5570 3E66  
                                          u6290 144A                                            u6530 0548  
                                          u6450 029A                                            u7250 2D96  
                                          u7090 3754                                            u7170 25F4  
                                          u7410 2312                                            u6610 4098  
                                          u7330 197E                                            u6371 20EA  
                                          u5651 21AE                                            u5731 24EC  
                                          u5491 3046                                            u5811 2EEC  
                                          u6291 1446                                            u6275 13D8  
                                          u6531 0544                                            u6451 0296  
                                          u7251 2D92                                            u7091 3750  
                                          u7171 25F0                                            u7411 230E  
                                          u6611 4092                                            u7331 197A  
                                          u6380 20F2                                            u5660 21D2  
                                          u5740 251E                                            u5900 0FFC  
                                          u5820 2F1E                                            u5580 38A6  
                                          u6540 056E                                            u6460 0318  
                                          u7260 2DC0                                            u7500 0860  
                                          u7180 2624                                            u7420 233E  
                                          u6620 409A                                            u6700 2C66  
                                          u7340 1990                                            u5661 21CE  
                                          u5741 251A                                            u5901 0FF8  
                                          u5821 2F1A                                            u5581 38A0  
                                          u6541 056A                                            u6461 0312  
                                          u7261 2DBC                                            u7501 085C  
                                          u7181 2620                                            u7421 233A  
                                          u6605 3CA2                                            u6701 2C62  
                                          u7341 198C                                            u5830 3AAA  
                                          u6390 2108                                            u5670 21FC  
                                          u5750 2566                                            u5910 100A  
                                          u5590 38A8                                            u6550 0632  
                                          u6470 031A                                            u7270 3698  
                                          u7510 08D4                                            u7190 265E  
                                          u7430 237A                                            u6606 3CA4  
                                          u6630 39A0                                            u6710 2CAE  
                                          u7350 1A54                                            u5831 3AA6  
                                          u6391 2104                                            u5671 21F8  
                                          u5751 2562                                            u5911 1006  
                                          u6551 062E                                            u7271 3694  
                                          u7511 08D0                                            u7191 265A  
                                          u7431 2376                                            u6631 399C  
                                          u6711 2CAA                                            u7351 1A50  
                                          u7600 3BC4                                            u5840 3AD8  
                                          u5680 223C                                            u5920 1134  
                                          u6480 0332                                            u6800 382C  
                                          u7280 36CA                                            u7520 0948  
                                          u7440 2392                                            u6640 39D2  
                                          u6720 2CC4                                            u6560 3804  
                                          u7360 1A92                                            u7601 3BC0  
                                          u5841 3AD4                                            u5681 2238  
                                          u5921 1130                                            u5761 2A48  
                                          u6481 032E                                            u6801 3828  
                                          u7281 36C6                                            u7521 0944  
                                          u7441 238E                                            u6641 39CE  
                                          u6721 2CC0                                            u7361 1A8E  
                                          u5690 2286                                            u5930 1152  
                                          u5850 0F6A                                            u5770 2A6C  
                                          u6490 0358                                            u6810 383C  
                                          u7290 36EC                                            u7530 09BC  
                                          u7450 23B8                                            u6650 32CC  
                                          u6730 2CF8                                            u6570 3816  
                                          u7370 1AA4                                            u7610 1C96  
                                          u5691 2282                                            u5931 114E  
                                          u5851 0F64                                            u5771 2A68  
                                          u6491 0354                                            u6811 3838  
                                          u7291 36E8                                            u7531 09B8  
                                          u7451 23B2                                            u6651 32C8  
                                          u6731 2CF4                                            u6571 3812  
                                          u7371 1AA0                                            u7611 1C92  
                                          u7380 3D6E                                            u6740 4110  
                                          u5940 116C                                            u5860 0F6C  
                                          u5780 2A96                                            u6580 37B0  
                                          u6820 386A                                            u7540 0A2E  
                                          u7460 23E2                                            u6660 32EE  
                                          u6900 1744                                            u7620 1CC6  
                                          u7700 2916                                            u7381 3D6A  
                                          u6741 410A                                            u5941 1168  
                                          u5781 2A92                                            u6581 37AC  
                                          u6821 3866                                            u7541 0A2A  
                                          u7461 23DE                                            u6901 1740  
                                          u7621 1CC2                                            u7701 2912  
                                          u6750 4112                                            u5950 1186  
                                          u5870 0F82                                            u5790 2AD6  
                                          u7550 0AA2                                            u7470 23F2  
                                          u7390 22E0                                            u6670 32FE  
                                          u6910 1796                                            u6590 3C98  
                                          u6830 2720                                            u7630 1CF6  
                                          u5951 1182                                            u5871 0F7E  
                                          u5791 2AD2                                            u7551 0A9E  
                                          u7471 23EC                                            u7391 22DC  
                                          u6671 32FA                                            u6655 32BC  
                                          u6911 1792                                            u6591 3C94  
                                          u6567 37FA                                            u6831 271C  
                                          u7631 1CF2                                            u6760 4126  
                                          u5960 1194                                            u5880 0FB2  
                                          u7560 0B2E                                            u7480 241A  
                                          u7456 23BA                                            u6680 3320  
                                          u6920 17D0                                            u6840 2734  
                                          u6761 4120                                            u5961 1190  
                                          u5881 0FAE                                            u7561 0B2A  
                                          u7481 2416                                            u6657 32B2  
                                          u6921 17CC                                            u6841 2730  
                                          u7641 1D00                                            u5970 11A6  
                                          u5890 0FCE                                            u6770 40F8  
                                          u7490 07EE                                            u7570 1BE4  
                                          u6930 1828                                            u6690 2C44  
                                          u6850 2752                                            u7650 1D5E  
                                          u5971 11A2                                            u5891 0FCA  
                                          u6771 40F2                                            u7491 07EA  
                                          u7571 1BE0                                            u6667 32E4  
                                          u6931 1824                                            u6691 2C40  
                                          u6851 274E                                            u7651 1D5A  
                                          u5980 11B4                                            u6780 40FA  
                                          u7580 1C52                                            u7476 23F4  
                                          u6940 1880                                            u6860 278A  
                                          u5981 11B0                                            u7581 1C4E  
                                          u6941 187C                                            u6861 2786  
                                          u7717 1A1E                                            u7661 1D68  
                                          u6766 4128                                            u5990 11CC  
                                          u6790 413A                                            u7590 3672  
                                          u6950 18D0                                            u6870 27C4  
                                          u7670 1DC6                                            u5991 11C8  
                                          u6791 4134                                            u7591 366E  
                                          u6687 3316                                            u6951 18CC  
                                          u7727 1726                                            u6871 27C0  
                                          u7671 1DC2                                            u6960 398C  
                                          u6880 27E6                                            u7737 1778  
                                          u6961 3988                                            u6881 27E2  
                                          u7681 1DD0                                            u6890 3F66  
                                          u6970 40E0                                            u7690 285E  
                                          u6891 3F62                                            u6971 40DA  
                                          u7691 285A                                            u6796 413C  
                                          u6980 40E2                                            u6990 39F8  
                                          u6991 39F4                             ValidateCmd@ConfName 01A4  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 3818                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 38D4                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 0184                                            _atoi 1FA6  
                                          _main 2828                                            _dtoa 0F3A  
                                 ?_EUSART1_Read 0001                                            _prec 00CB  
                                 ?_EUSART2_Read 0001                                            _nout 00C7  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 1E0C                                            btemp 005B  
                                          _utoa 14F0                                            _xtoa 121A  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 3C62  
                                 __CFG_CSWEN$ON 000000                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                       __size_of_DATAEE_WriteByte 0044  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 40CC  
                         _eusart1RxStatusBuffer 0300                                 __end_of___aodiv 22C8  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                                         _ADCLK 000F57                                 __end_of___aomod 25A8  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                           _ADPRE 000F5E  
                                         STR_10 FC62                                           STR_11 FE66  
                                         STR_12 F97A                                           STR_20 FD43  
                                         STR_21 FF9A                                           STR_13 FC1C  
                                         STR_30 FFD7                                           STR_14 FDCF  
                                         STR_22 FD7C                                           STR_31 FFEB  
                                         STR_15 FEA9                                           STR_23 FE1D  
                                         STR_24 F97A                                           STR_32 FFEB  
                                         STR_40 FEFF                                           STR_16 FEBF  
                                         STR_33 FFF5                                           STR_41 FED5  
                                         STR_25 FE4E                                           STR_17 FE36  
                                 __CFG_WDTE$OFF 000000                                           STR_34 FFF5  
                                         STR_26 FF7B                                           STR_42 FE7D  
                                         STR_18 FE03                                           STR_50 FAB9  
                                         STR_35 FFD7                                           STR_19 FDE9  
                                         STR_51 FD25                                           STR_27 FBD3  
                                         STR_43 FAE4                                           STR_36 FFEB  
                                         STR_44 FFC2                                           STR_28 FCE6  
                                         STR_60 FBAE                                           STR_52 FB38  
                                         STR_37 FFF5                                           STR_29 FFD7  
                                         STR_45 FFCE                                           STR_61 FC84  
                                         STR_53 FA59                                           STR_70 F97D  
                                         STR_62 FCC6                                           STR_46 FC40  
                                         STR_38 FB60                                           STR_54 F9B8  
                                         STR_63 FF26                                           STR_39 FF13  
                                         STR_71 FCA5                                           STR_47 FBF8  
                                         STR_55 F939                                           STR_64 FF9A  
                                         STR_80 FFFD                                           STR_72 FF8B  
                                         STR_48 FB0E                                           STR_56 FA24  
                                         _ADRPT 000F66                                           STR_65 F97A  
                                         STR_81 FFDE                                           STR_73 FF39  
                                         STR_49 F8F0                                           STR_57 F8A5  
                                         STR_82 FFDE                                           STR_74 FFA9  
                                         STR_66 FF5B                                           STR_58 FE93  
                              ?_ClearModbusData 0001                                           STR_75 F97D  
                                         STR_83 FFF0                                           STR_67 FF4A  
                                         STR_59 FA8D                                           STR_84 FFF0  
                                         STR_76 FFB6                                           STR_68 F97E  
                                         STR_85 FFF9                                           STR_77 FFE5  
                                         STR_69 FB88                                           STR_78 FFE5  
                                         STR_86 FFF9                                           STR_79 FFFD  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 2B32                                           ?_xtoa 0022  
                               __end_of___lomod 2F78                                  __CFG_DEBUG$OFF 000000  
                                         i2l154 0064                                           i2l163 0112  
                                         i2l340 3C60                                           i2l156 009E  
                                         i2l501 41D4                                           i2l157 0112  
                                         i2l158 00D8                                           i2l351 3FA4  
                                         i2l504 41DA                                           i2l360 41CE  
                                         i2l337 3C5C                                           i2l354 41E4  
                                         i2l347 31BC                                           i2l357 41BC  
                                         i2l481 3D28                                           i2l491 327C  
                                         i2l484 3D2C                                           i2l495 3FD0  
                                         i2l498 41E6                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 006F                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                      CardConfigIni@readDataOdd 0018                                           _Debug 00D9  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 3CEA                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 409C                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                          __size_of_CardConfigIni 01F0  
                                         _fputc 33E6                                 __end_of_isalpha 3E6C  
                                         _fputs 3CA6                                 __end_of_isdigit 3F4C  
                      SaveCardDat@dataeeAddrWrk 0099                                 __end_of_memmove 2CFA  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00C9                                           _putch 41AC  
                      __size_of_ClearEEAddRange 005C                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 3EDC  
                               __end_of_isspace 3AE4                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 3F14  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 3BD0                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 0005                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 00D5  
                                 ??_ModbusError 0056                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 38D4  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 41E8     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 41E6                     __size_of_EUSART2_is_tx_done 0016  
                                 ??_SaveCardDat 0095                                  checkCRC@crcLow 0090  
         __end_of_EUSART2_SetTxInterruptHandler 4152          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 4148                                    _toupper$2457 0011  
                               __initialization 2948                                    __end_of_atoi 2140  
                    __end_of_EUSART1_Initialize 358A                                    __end_of_main 2948  
                                  __end_of_dtoa 121A                       __size_of_InitialiseString 0398  
                                  __end_of_stoa 1FA6                                    __end_of_utoa 16F2  
                                  __end_of_xtoa 14F0                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 2444                                          ??_atoi 000E  
                                        ??_main 01E8                                          ??_dtoa 002C  
                                        ??_stoa 0014                                      _ModbusFC10 1AB2  
                                    _ModbusFC03 06B4                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
                              __end_of_TogDebug 3EA4                             SaveCardDat@NumBytes 0093  
           __end_of_EUSART2_DefaultErrorHandler 41D0                     _EUSART2_DefaultErrorHandler 41CA  
                                    _ModbusData 0200                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                            SaveCardDat@MBAddress 008F  
                                        _ADACCH 000F71                                          _ADACCL 000F70  
                    __end_of_EUSART2_Initialize 3608                                          _ADCON0 000F60  
                                        _ADCON1 000F59                                          _ADCON2 000F5A  
                                        _ADCON3 000F5B                        _eusart2TxBufferRemaining 00FF  
                                        _ADERRH 000F6F                                          _ADERRL 000F6E  
                                        ?_fputc 0007                                          _ADLTHH 000F6B  
                                        _ADLTHL 000F6A                                          ?_fputs 0010  
                                        _ADRESH 000F64                                          _ADRESL 000F63  
                                        _ADSTAT 000F65                                          _ADUTHH 000F6D  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                       InitialiseString@SerialNum 00AF  
                              ClearEEAddRange@i 0055                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                              __size_of_ReadRX232 0124  
                                __CFG_WDTCCS$SC 000000                                          i2l5020 3FC8  
                                        i2l5022 3FCC                                          i2l5014 3FA6  
                                        i2l5016 3FB6                                          i2l5018 3FB8  
                                        i2l5216 41B6                                          i2l5218 41CA  
                                        i2l5246 41D0                                          i2l5248 41D6  
                                        i2l5600 3224                                          _INLVLA 000F0D  
                                        i2l5602 323E                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l5604 325A  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        i2l5606 3278                                          i2l5550 3C42  
                                        i2l5560 311E                                          i2l5552 3C52  
                                        i2l5544 3C1A                                          i2l5570 317E  
                                        i2l5562 312E                                          i2l5554 3C56  
                                        i2l5546 3C2C                                          i2l5580 3D0C  
                                        i2l5572 319A                                          i2l5564 3146  
                                        i2l5556 30FE                                          i2l5548 3C3E  
                                        i2l5590 31CE                                          i2l5582 3D0E  
                                        i2l5574 31B8                                          i2l5566 3156  
                                        i2l5558 310E                                          i2l5592 31DC  
                                        i2l5584 3D1E                                          i2l5576 3CEA  
                                        i2l5568 3166                                          i2l5594 31EC  
                                        i2l5586 3D22                                          i2l5578 3CFC  
                                        i2l4970 3F8A                                          i2l5596 3206  
                                        i2l5588 31BE                                          i2l4972 3F8C  
                                        i2l5598 3214                                          i2l4974 3F9C  
                                        _TABLAT 000FF5                                          i2l4976 3FA0  
                                        i2l4968 3F7A                                          i2l5960 0072  
                                        i2l5952 001A                                          i2l5970 00F4  
                                        i2l5962 0080                                          i2l5954 0028  
                                        i2l5964 00AC                                          i2l5956 0038  
                                        i2l5966 00BA                                          i2l5958 0046  
                                        i2l5968 00E6                                   ??_ValidateCmd 0057  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 006B  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 2704                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                     ModbusFC10@i 0091  
                                   ModbusFC10@j 0093                                     ModbusFC03@i 008F  
                                        _RXMode 41BE                                          _TXMode 41C4  
                                        _RXStat 00D8                                  __CFG_PWRTE$OFF 000000  
                          __size_of_generateCRC 00DC                                          _ByteHi 00CF  
                                        _ByteLo 00F6                              _UART1_Write_string 3680  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 0089  
                                 _CardConfigIni 16F2                                      _PrintMB400 36EE  
                           __end_of_ModbusError 303C                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 4020  
                                __CFG_STVREN$ON 000000                           CardConfigIni@NumBytes 0010  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           __end_of_SaveCardDat 1AB2                                          clear_0 29EE  
                                        clear_1 29FA                                          clear_2 2A06  
                                        clear_3 2A12                                          clear_4 2A1E  
                                        clear_5 2A2A                                          _rxData 0500  
                   _EUSART2_FramingErrorHandler 01F4                                          _printf 3FD2  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcat 3FFA                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 40B4                                          _strcmp 327E  
                                        _strcpy 37BA                                          _strlen 3B34  
                                 _ExpectedBytes 00FA                                 _ADCC_Initialize 3AE4  
                                        fputc@c 0007                                  _PMD_Initialize 4068  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst F8A4                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 3C1A               __size_of_ADCC_GetSingleConversion 002E  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 37BA                       ?_ADCC_GetSingleConversion 0005  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0400                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0364                                 _eusart1TxBuffer 0174  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 4046  
                       __size_of_PrintModRespon 00AA                                 _eusart2TxBuffer 0384  
                                    __accesstop 0060                         __end_of__initialization 2A38  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 008E  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 3FD2  
                                ?_CardConfigIni 000A                             __end_of_ValidateCmd 1E0C  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 413E  
                                  __pidataBANK1 3A3E                                    __pidataBANK2 2B32  
                                  __pidataBANK3 3D70                                    __pidataBANK4 3DB0  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 3C62  
                                 __end_of_fputc 347C                                   __end_of_fputs 3CEA  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 41B6  
                             __end_of_ReadRX232 2828                          __end_of_PMD_Initialize 4084  
                          __end_of_EUSART1_Read 3A3E                            __end_of_EUSART2_Read 39E6  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 327E  
                           CardConfigIni@RetNum 000C                            ModbusError@ErrorCode 008B  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 4068  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00DE  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00DC  
                                 _eusart2TxHead 00E3                                      __pbssBANK0 00C7  
                                    __pbssBANK1 0154                                      __pbssBANK2 02EB  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                    __pbssBANK5 0500                                   _eusart2RxTail 00E1  
                                 _eusart1TxTail 00DD               _EUSART1_TxDefaultInterruptHandler 01F8  
                                 _eusart2TxTail 00E2                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 3680                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 2F78  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 41AC  
                                   _SaveCardDat 18E2                                     ?_PrintMB400 0001  
                              _InitialiseString 0BA2                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                         __end_of_ADCC_Initialize 3B34  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _MB300xx 03B7  
                                       _ADPREVL 000F61                                         _MB301xx 0110  
                                       _MB302xx 00FC                                         _MB303xx 0135  
                                       _MB400xx 0464                                         _MB304xx 011E  
                                       _MB305xx 0100                                         _MB306xx 014E  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 3D2E                                  CardConfigIni@i 0016  
                                CardConfigIni@j 0014                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 41A2  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 4198  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 0154  
                                     ?_checkCRC 0001                            InitialiseString@Date 009C  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                          InitialiseString@Time 00A7                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 31BE  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                        ModbusFC03@convertedValue 008D  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 1C70  
                                       _Command 00E4                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00D3  
                           __size_of_ModbusFC10 01BE                             __size_of_ModbusFC03 04EE  
                               ??_CardConfigIni 0012                                 __size_of_RXMode 0006  
                               __size_of_TXMode 0006                                         __Hparam 0000  
                                    ??_TogDebug 0055                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 2140  
                                       ___aomod 2444                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 2A42  
                                       ___lomod 2EA8                                       ?_vfprintf 0077  
                     __end_of_ClearModbusRespon 3D70                             _EUSART1_is_rx_ready 40CC  
                        InitialiseString@F10760 00CD                          InitialiseString@F10763 012A  
                        InitialiseString@F10756 02EB                          InitialiseString@F10758 03A4  
                        InitialiseString@F10766 013F                      __end_of_EUSART1_is_tx_done 413E  
                                       __pcinit 2948                 __end_of_EUSART2_SetErrorHandler 417A  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 40E4  
                                       __ptext0 2828                                         __ptext1 1C70  
                                       __ptext2 3E6C                                         __ptext3 18E2  
                                       __ptext4 2704                                         __ptext5 3FFA  
                                       __ptext6 37BA                                         __ptext7 2C1E  
                                       __ptext8 4084                                         __ptext9 398E  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 00BE                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 0089  
                                    ??_checkCRC 0089           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 41BE     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 41B6                           _OSCILLATOR_Initialize 40B4  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 3E30  
                                       _isdigit 3F14                                         _memmove 2C1E  
                            _EUSART1_Initialize 350A                                         _islower 3EA4  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 3A92  
                                   _PrintModbus 3608                                         _isupper 3EDC  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                InitialiseString@convertedValue 00BB                      __size_of_SYSTEM_Initialize 0022  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0068  
                                       _toupper 3876                            end_of_initialization 2A38  
                        InitialiseString@i_1443 00C5                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 333C  
                        InitialiseString@RevNum 00BD                      __end_of_EUSART2_is_tx_done 412A  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01EC                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 418E          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 4184                                    SaveCardDat@i 009B  
                            _EUSART2_Initialize 358A                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 0053                __end_of_ADCC_GetSingleConversion 3F7A  
                          ??_EUSART1_Initialize 0007                                         strcmp@l 0005  
                                       strcmp@r 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0011  
                                       strlen@a 0007                             _EUSART2_is_rx_ready 4084  
                                       strcpy@s 000F                                         strlen@s 0005  
                             ValidateCmd@F10790 028C                               ValidateCmd@F10793 0278  
                             ValidateCmd@F10796 0264                             _EUSART2_is_tx_ready 40FC  
                      ValidateCmd@ConfName_1513 01CC                        ValidateCmd@ConfName_1509 01B8  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
                               _ClearEEAddRange 3932                          __end_of_PrintModRespon 33E6  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                      __end_of_DATAEE_WriteByte 3CA6                            ??_EUSART2_Initialize 0007  
                          ?_EUSART2_is_rx_ready 0001                           ??_EUSART1_is_tx_ready 0005  
                                 ??_generateCRC 0008                            ?_EUSART2_is_tx_ready 0001  
                                  _EUSART1_Read 39E6                                    _EUSART2_Read 398E  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 41C4  
                                __end_of_TXMode 41CA                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 3FA6  
                  __end_of_INTERRUPT_Initialize 41E0                      __size_of_ClearModbusRespon 0042  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 4046                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008B                                    ??_ModbusFC03 0089  
                                __end_of_printf 3FFA                                  __end_of_strcat 4020  
                                __end_of_strcmp 333C                                  __end_of_strcpy 3818  
                                     _ReadRX232 2704                                  __end_of_strlen 3B84  
                           start_initialization 2948                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 3E30                                     __end_of_pad 30FE  
                      __end_of_InitialiseString 0F3A   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 3876                     __size_of_UART1_Write_string 006E  
                         __end_of_EUSART2_Write 3932                           ??_EUSART2_is_tx_ready 0005  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 008B  
              __size_of_EUSART2_SetErrorHandler 000A                             DATAEE_ReadByte@bAdd 0005  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 4166         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 415C                              __end_of_ModbusFC10 1C70  
                            __end_of_ModbusFC03 0BA2                                    ?_SaveCardDat 008D  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                              _SaveCardDat$2817 0097                               __size_of_ModbusRx 017C  
                                   vfprintf@fmt 0079                             __end_of_generateCRC 2DD6  
                                  ??_PrintMB400 0055                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                               __size_of_TogDebug 0038  
                         _EUSART1_RxDataHandler 3FA6                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00F4                                     __pdataBANK1 0100  
                                   __pdataBANK2 0200                                     __pdataBANK3 03B7  
                                   __pdataBANK4 0464                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00DB                         __end_of_ClearEEAddRange 398E  
                                _eusart2RxCount 00E0                        _ADCC_GetSingleConversion 3F4C  
                                    ?_ReadRX232 0089                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 01F6                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 01A4  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 015C  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 2DD6  
                           EUSART2_Write@txData 0005                              __end_of_PrintMB400 3756  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                                    ?_ValidateCmd 0001  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$2343 0014                                       _atoi$2344 0018  
                                     _atoi$2345 0016                                       __pnvBANK0 00FE  
                                     __pnvBANK1 01EA        __end_of_ADCC_DisableContinuousConversion 41E4  
     __size_of_ADCC_DisableContinuousConversion 0004              ??_ADCC_DisableContinuousConversion 0005  
             ?_ADCC_DisableContinuousConversion 0001                _ADCC_DisableContinuousConversion 41E0  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 347C  
                                     _dtoa$1839 0034                                       __pintcode 0008  
                             InitialiseString@i 00C3                               InitialiseString@j 00C1  
                                 __pmediumconst F8A4                 ADCC_GetSingleConversion@channel 0009  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 01FC  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0096  
                                     checkCRC@j 0092                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 41D6  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 41D0  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01EA  
                               SaveCardDat@Conf 009D                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008D                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 2EA8                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 41A2                              _EUSART1_is_tx_done 412A  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 41DC  
                   InitialiseString@readDataOdd 00BF                    __size_of_EUSART2_Receive_ISR 00C0  
                                   _generateCRC 2CFA                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                           ?_EUSART1_is_tx_done 0001                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                      UART1_Write_string@data_len 0008  
                                      _MBResCRC 00F8             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u412_40 3F9C                                        i2u412_41 3F98  
                                      _MBResCnt 00D1                                        i2u530_40 00BA  
                                      i2u522_40 0028                                        i2u530_41 00B6  
                                      i2u522_41 0024                                        i2u419_40 3FC8  
                                      i2u523_40 0038                                        i2u419_41 3FC4  
                                      i2u523_41 0034                                        i2u532_40 00E6  
                                      i2u531_48 00C0                                        i2u524_40 0046  
                                      i2u532_41 00E2                                        i2u531_49 00D4  
                                      i2u524_41 0042                                        i2u533_40 00F4  
                                      i2u533_41 00F0                                        _PIR3bits 000ECD  
                                      i2u526_40 0072                                        i2u525_48 004C  
                                      i2u526_41 006E                                        i2u525_49 0060  
                         __end_of_CardConfigIni 18E2                                        i2u534_48 00FA  
                                      i2u527_40 0080                                        i2u534_49 010E  
                                      i2u527_41 007C                                        i2u481_40 319A  
                                      i2u480_48 316C                                        i2u529_40 00AC  
                                      i2u528_48 0086                                        i2u481_41 3196  
                                      i2u480_49 317E                                        i2u529_41 00A8  
                                      i2u528_49 009A                                        i2u490_48 3260  
                                      i2u483_40 3CFC                                        i2u482_48 31A0  
                                      i2u475_40 3C2C                                        i2u490_49 3274  
                                      i2u483_41 3CF8                                        i2u482_49 31B4  
                                      i2u475_41 3C28                                        i2u484_40 3D1E  
                                      i2u476_40 3C52                                        i2u484_41 3D1A  
                                      i2u476_41 3C4E                                        i2u485_40 31DC  
                                      i2u477_40 311E                                        i2u485_41 31D8  
                                      i2u477_41 311A                                        _PIR7bits 000ED1  
                                      i2u487_40 3214                                        i2u486_48 31F2  
                                      i2u479_40 3156                                        i2u478_48 3134  
                                      i2u487_41 3210                                        i2u486_49 3206  
                                      i2u479_41 3152                                        i2u478_49 3146  
                                      i2u489_40 325A                                        i2u488_48 322A  
                                      i2u489_41 3256                                        i2u488_49 323E  
                                      _MBRespon 02A0                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 4114                                       _vfpfcnvrt 012A  
                                     _xtoa$1868 0035                                       _xtoa$1869 0037  
                                    _ADCON0bits 000F60                                      _ADCON1bits 000F59  
                                    _ADCON2bits 000F5A                                      _ADCON3bits 000F5B  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 0089                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0091  
                                   checkCRC@crc 0094                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2370 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 295C                                       copy_data1 297C  
                                     copy_data2 299C                                       copy_data3 29BC  
                                     copy_data4 29DC                              ModbusFC10@TempData 008F  
                         ?_INTERRUPT_Initialize 0001                       CardConfigIni@readDataEven 0019  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 4170  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01F2  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 22C8                              generateCRC@MessCnt 0005  
                                    _ADSTATbits 000F65           __end_of_EUSART1_SetTxInterruptHandler 4184  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 417A  
                                      __Hrparam 0000                                        _TogDebug 3E6C  
         __end_of_EUSART2_SetRxInterruptHandler 415C          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 4152                            __size_of_ModbusError 00C4  
                                    vfprintf@ap 007B                                        __Lrparam 0000  
                                    vfprintf@fp 0077                              __CFG_BOREN$SBORDIS 000000  
                          __size_of_SaveCardDat 01D0                         ??_OSCILLATOR_Initialize 0005  
                                     memmove@d1 0009                                       memmove@s1 000B  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                            generateCRC@crcHigh 000A                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 0080  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                 ReadRX232@F10772 00F4  
                     ??_EUSART1_SetErrorHandler 0007                               CardConfigIni@Name 000A  
                                      _checkCRC 25A8             __end_of_EUSART1_DefaultErrorHandler 41DC  
                   _EUSART1_DefaultErrorHandler 41D6                                ??_PrintModRespon 0055  
                   __end_of_EUSART1_is_rx_ready 40E4                                      strcat@dest 0013  
                      __size_of_ADCC_Initialize 0050                            _EUSART2_ErrorHandler 01F0  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 40FC                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 3B84  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 3932                                        __ptext11 3C62  
                                      __ptext20 41DC                                        __ptext12 0BA2  
                                      __ptext21 358A                                        __ptext13 16F2  
                                      __ptext30 418E                                        __ptext22 4148  
                                      __ptext14 327E                                        __ptext31 4198  
                                      __ptext23 4152                                        __ptext15 409C  
                                      __ptext40 39E6                                        __ptext32 41A2  
                                      __ptext24 415C                                        __ptext16 4046  
                                      __ptext41 3BD0                                        __ptext33 3AE4  
                                      __ptext25 4166                                        __ptext17 4068  
                                      __ptext50 41C4                                        __ptext42 2DD6  
                                      __ptext34 41E0                                        __ptext26 4170  
                                      __ptext18 347C                                        __ptext51 40E4  
                                      __ptext43 1AB2                                        __ptext35 3608  
                                      __ptext27 350A                                        __ptext19 40B4  
                                      __ptext60 3EA4                                        __ptext52 412A  
                                      __ptext44 36EE                                        __ptext36 22C8  
                                      __ptext28 417A                                        __ptext61 3EDC  
                                      __ptext53 3818                                        __ptext45 06B4  
                                      __ptext37 25A8                                        __ptext29 4184  
                                      __ptext70 3CA6                                        __ptext62 3E30  
                                      __ptext54 333C                                        __ptext46 3F4C  
                                      __ptext38 41BE                                        __ptext71 33E6  
                                      __ptext63 14F0                                        __ptext55 3FD2  
                                      __ptext47 2F78                                        __ptext39 40CC  
                                      __ptext80 4020                                        __ptext72 41AC  
                                      __ptext64 2EA8                                        __ptext56 3756  
                                      __ptext48 2CFA                                        __ptext81 40FC  
                                      __ptext73 38D4                                        __ptext65 2A42  
                                      __ptext57 012A                                        __ptext49 3680  
                                      __ptext90 41CA                                        __ptext82 4114  
                                      __ptext74 3DF0                                        __ptext66 1E0C  
                                      __ptext58 121A                                        __ptext91 3F7A  
                                      __ptext83 3D2E                                        __ptext75 2444  
                                      __ptext67 0F3A                                        __ptext59 3876  
                                      __ptext92 3CEA                                        __ptext84 3B84  
                                      __ptext76 2140                                        __ptext68 303C  
                                      __ptext93 31BE                                        __ptext77 1FA6  
                                      __ptext69 3B34                                        __ptext94 41D0  
                                      __ptext86 3C1A                                        __ptext78 3A92  
                                      __ptext95 41E6                                        __ptext87 30FE  
                                      __ptext79 3F14                                        __ptext96 41D6  
                                      __ptext88 41B6                                        __ptext97 3FA6  
                                      __ptext89 41E4                                        __ptext98 0000  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 008B                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 0120  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 41E6  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 41E4  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019C  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 0089  
                                  PrintModbus@i 0089            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 0147  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                 PrintModRespon@i 0089  
                    ??_ADCC_GetSingleConversion 0007                                        _rxStatus 00D7  
                                      int$flags 005B                      CardConfigIni@dataeeAddrWrk 000E  
                                      _vfprintf 3756              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 3F7A  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01EE  
                           _EUSART1_Receive_ISR 31BE                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                       InitialiseString@PartNum 0089                                  _vfpfcnvrt$1883 006D  
                       InitialiseString@Partial 00BA                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 409C                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 4114                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 36EE                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 4198         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 418E                                       strcpy@src 000B  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 3D2E  
                                      printf@ap 0087  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 00DA                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 30FE                         __end_of_ClearModbusData 3BD0  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 350A  
                             ??_ADCC_Initialize 0005                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00DF  
                                  ?_generateCRC 0005                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 01FA  
                           __end_of_ClearRxBuff 3C1A  
